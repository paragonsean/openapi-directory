/**
 * Taxamo
 * Taxamoâ€™s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Taxamo);
  }
}(this, function(expect, Taxamo) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Taxamo.UsTaxExemptionCertificateDetailsSchema();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UsTaxExemptionCertificateDetailsSchema', function() {
    it('should create an instance of UsTaxExemptionCertificateDetailsSchema', function() {
      // uncomment below and update the code to test UsTaxExemptionCertificateDetailsSchema
      //var instance = new Taxamo.UsTaxExemptionCertificateDetailsSchema();
      //expect(instance).to.be.a(Taxamo.UsTaxExemptionCertificateDetailsSchema);
    });

    it('should have the property exemptStates (base name: "exempt_states")', function() {
      // uncomment below and update the code to test the property exemptStates
      //var instance = new Taxamo.UsTaxExemptionCertificateDetailsSchema();
      //expect(instance).to.be();
    });

    it('should have the property purchaserAddress1 (base name: "purchaser_address1")', function() {
      // uncomment below and update the code to test the property purchaserAddress1
      //var instance = new Taxamo.UsTaxExemptionCertificateDetailsSchema();
      //expect(instance).to.be();
    });

    it('should have the property purchaserAddress2 (base name: "purchaser_address2")', function() {
      // uncomment below and update the code to test the property purchaserAddress2
      //var instance = new Taxamo.UsTaxExemptionCertificateDetailsSchema();
      //expect(instance).to.be();
    });

    it('should have the property purchaserBusinessType (base name: "purchaser_business_type")', function() {
      // uncomment below and update the code to test the property purchaserBusinessType
      //var instance = new Taxamo.UsTaxExemptionCertificateDetailsSchema();
      //expect(instance).to.be();
    });

    it('should have the property purchaserBusinessTypeOtherValue (base name: "purchaser_business_type_other_value")', function() {
      // uncomment below and update the code to test the property purchaserBusinessTypeOtherValue
      //var instance = new Taxamo.UsTaxExemptionCertificateDetailsSchema();
      //expect(instance).to.be();
    });

    it('should have the property purchaserCity (base name: "purchaser_city")', function() {
      // uncomment below and update the code to test the property purchaserCity
      //var instance = new Taxamo.UsTaxExemptionCertificateDetailsSchema();
      //expect(instance).to.be();
    });

    it('should have the property purchaserExemptionReason (base name: "purchaser_exemption_reason")', function() {
      // uncomment below and update the code to test the property purchaserExemptionReason
      //var instance = new Taxamo.UsTaxExemptionCertificateDetailsSchema();
      //expect(instance).to.be();
    });

    it('should have the property purchaserExemptionReasonValue (base name: "purchaser_exemption_reason_value")', function() {
      // uncomment below and update the code to test the property purchaserExemptionReasonValue
      //var instance = new Taxamo.UsTaxExemptionCertificateDetailsSchema();
      //expect(instance).to.be();
    });

    it('should have the property purchaserFirstName (base name: "purchaser_first_name")', function() {
      // uncomment below and update the code to test the property purchaserFirstName
      //var instance = new Taxamo.UsTaxExemptionCertificateDetailsSchema();
      //expect(instance).to.be();
    });

    it('should have the property purchaserLastName (base name: "purchaser_last_name")', function() {
      // uncomment below and update the code to test the property purchaserLastName
      //var instance = new Taxamo.UsTaxExemptionCertificateDetailsSchema();
      //expect(instance).to.be();
    });

    it('should have the property purchaserState (base name: "purchaser_state")', function() {
      // uncomment below and update the code to test the property purchaserState
      //var instance = new Taxamo.UsTaxExemptionCertificateDetailsSchema();
      //expect(instance).to.be();
    });

    it('should have the property purchaserTaxId (base name: "purchaser_tax_id")', function() {
      // uncomment below and update the code to test the property purchaserTaxId
      //var instance = new Taxamo.UsTaxExemptionCertificateDetailsSchema();
      //expect(instance).to.be();
    });

    it('should have the property purchaserTitle (base name: "purchaser_title")', function() {
      // uncomment below and update the code to test the property purchaserTitle
      //var instance = new Taxamo.UsTaxExemptionCertificateDetailsSchema();
      //expect(instance).to.be();
    });

    it('should have the property purchaserZip (base name: "purchaser_zip")', function() {
      // uncomment below and update the code to test the property purchaserZip
      //var instance = new Taxamo.UsTaxExemptionCertificateDetailsSchema();
      //expect(instance).to.be();
    });

    it('should have the property singlePurchase (base name: "single_purchase")', function() {
      // uncomment below and update the code to test the property singlePurchase
      //var instance = new Taxamo.UsTaxExemptionCertificateDetailsSchema();
      //expect(instance).to.be();
    });

    it('should have the property singlePurchaseOrderIdentifier (base name: "single_purchase_order_identifier")', function() {
      // uncomment below and update the code to test the property singlePurchaseOrderIdentifier
      //var instance = new Taxamo.UsTaxExemptionCertificateDetailsSchema();
      //expect(instance).to.be();
    });

  });

}));
