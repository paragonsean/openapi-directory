/**
 * Taxamo
 * Taxamoâ€™s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Taxamo);
  }
}(this, function(expect, Taxamo) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Taxamo.ListTransactionsIn();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ListTransactionsIn', function() {
    it('should create an instance of ListTransactionsIn', function() {
      // uncomment below and update the code to test ListTransactionsIn
      //var instance = new Taxamo.ListTransactionsIn();
      //expect(instance).to.be.a(Taxamo.ListTransactionsIn);
    });

    it('should have the property currencyCode (base name: "currency_code")', function() {
      // uncomment below and update the code to test the property currencyCode
      //var instance = new Taxamo.ListTransactionsIn();
      //expect(instance).to.be();
    });

    it('should have the property filterText (base name: "filter_text")', function() {
      // uncomment below and update the code to test the property filterText
      //var instance = new Taxamo.ListTransactionsIn();
      //expect(instance).to.be();
    });

    it('should have the property format (base name: "format")', function() {
      // uncomment below and update the code to test the property format
      //var instance = new Taxamo.ListTransactionsIn();
      //expect(instance).to.be();
    });

    it('should have the property hasNote (base name: "has_note")', function() {
      // uncomment below and update the code to test the property hasNote
      //var instance = new Taxamo.ListTransactionsIn();
      //expect(instance).to.be();
    });

    it('should have the property invoiceNumber (base name: "invoice_number")', function() {
      // uncomment below and update the code to test the property invoiceNumber
      //var instance = new Taxamo.ListTransactionsIn();
      //expect(instance).to.be();
    });

    it('should have the property keyOrCustomId (base name: "key_or_custom_id")', function() {
      // uncomment below and update the code to test the property keyOrCustomId
      //var instance = new Taxamo.ListTransactionsIn();
      //expect(instance).to.be();
    });

    it('should have the property limit (base name: "limit")', function() {
      // uncomment below and update the code to test the property limit
      //var instance = new Taxamo.ListTransactionsIn();
      //expect(instance).to.be();
    });

    it('should have the property offset (base name: "offset")', function() {
      // uncomment below and update the code to test the property offset
      //var instance = new Taxamo.ListTransactionsIn();
      //expect(instance).to.be();
    });

    it('should have the property orderDateFrom (base name: "order_date_from")', function() {
      // uncomment below and update the code to test the property orderDateFrom
      //var instance = new Taxamo.ListTransactionsIn();
      //expect(instance).to.be();
    });

    it('should have the property orderDateTo (base name: "order_date_to")', function() {
      // uncomment below and update the code to test the property orderDateTo
      //var instance = new Taxamo.ListTransactionsIn();
      //expect(instance).to.be();
    });

    it('should have the property originalTransactionKey (base name: "original_transaction_key")', function() {
      // uncomment below and update the code to test the property originalTransactionKey
      //var instance = new Taxamo.ListTransactionsIn();
      //expect(instance).to.be();
    });

    it('should have the property sortReverse (base name: "sort_reverse")', function() {
      // uncomment below and update the code to test the property sortReverse
      //var instance = new Taxamo.ListTransactionsIn();
      //expect(instance).to.be();
    });

    it('should have the property statuses (base name: "statuses")', function() {
      // uncomment below and update the code to test the property statuses
      //var instance = new Taxamo.ListTransactionsIn();
      //expect(instance).to.be();
    });

    it('should have the property taxCountryCode (base name: "tax_country_code")', function() {
      // uncomment below and update the code to test the property taxCountryCode
      //var instance = new Taxamo.ListTransactionsIn();
      //expect(instance).to.be();
    });

    it('should have the property taxCountryCodes (base name: "tax_country_codes")', function() {
      // uncomment below and update the code to test the property taxCountryCodes
      //var instance = new Taxamo.ListTransactionsIn();
      //expect(instance).to.be();
    });

    it('should have the property totalAmountGreaterThan (base name: "total_amount_greater_than")', function() {
      // uncomment below and update the code to test the property totalAmountGreaterThan
      //var instance = new Taxamo.ListTransactionsIn();
      //expect(instance).to.be();
    });

    it('should have the property totalAmountLessThan (base name: "total_amount_less_than")', function() {
      // uncomment below and update the code to test the property totalAmountLessThan
      //var instance = new Taxamo.ListTransactionsIn();
      //expect(instance).to.be();
    });

  });

}));
