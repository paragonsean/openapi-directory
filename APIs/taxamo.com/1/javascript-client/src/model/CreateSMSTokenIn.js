/**
 * Taxamo
 * Taxamoâ€™s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateSMSTokenIn model module.
 * @module model/CreateSMSTokenIn
 * @version 1
 */
class CreateSMSTokenIn {
    /**
     * Constructs a new <code>CreateSMSTokenIn</code>.
     * @alias module:model/CreateSMSTokenIn
     * @param countryCode {String} Two letter ISO country code.
     * @param recipient {String} Recipient phone number.
     */
    constructor(countryCode, recipient) { 
        
        CreateSMSTokenIn.initialize(this, countryCode, recipient);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, countryCode, recipient) { 
        obj['country_code'] = countryCode;
        obj['recipient'] = recipient;
    }

    /**
     * Constructs a <code>CreateSMSTokenIn</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateSMSTokenIn} obj Optional instance to populate.
     * @return {module:model/CreateSMSTokenIn} The populated <code>CreateSMSTokenIn</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateSMSTokenIn();

            if (data.hasOwnProperty('country_code')) {
                obj['country_code'] = ApiClient.convertToType(data['country_code'], 'String');
            }
            if (data.hasOwnProperty('recipient')) {
                obj['recipient'] = ApiClient.convertToType(data['recipient'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateSMSTokenIn</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateSMSTokenIn</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateSMSTokenIn.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['country_code'] && !(typeof data['country_code'] === 'string' || data['country_code'] instanceof String)) {
            throw new Error("Expected the field `country_code` to be a primitive type in the JSON string but got " + data['country_code']);
        }
        // ensure the json data is a string
        if (data['recipient'] && !(typeof data['recipient'] === 'string' || data['recipient'] instanceof String)) {
            throw new Error("Expected the field `recipient` to be a primitive type in the JSON string but got " + data['recipient']);
        }

        return true;
    }


}

CreateSMSTokenIn.RequiredProperties = ["country_code", "recipient"];

/**
 * Two letter ISO country code.
 * @member {String} country_code
 */
CreateSMSTokenIn.prototype['country_code'] = undefined;

/**
 * Recipient phone number.
 * @member {String} recipient
 */
CreateSMSTokenIn.prototype['recipient'] = undefined;






export default CreateSMSTokenIn;

