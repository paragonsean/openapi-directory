/**
 * Taxamo
 * Taxamoâ€™s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UsTaxId model module.
 * @module model/UsTaxId
 * @version 1
 */
class UsTaxId {
    /**
     * Constructs a new <code>UsTaxId</code>.
     * @alias module:model/UsTaxId
     * @param taxIdType {String} Tax id type.
     */
    constructor(taxIdType) { 
        
        UsTaxId.initialize(this, taxIdType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, taxIdType) { 
        obj['tax_id_type'] = taxIdType;
    }

    /**
     * Constructs a <code>UsTaxId</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UsTaxId} obj Optional instance to populate.
     * @return {module:model/UsTaxId} The populated <code>UsTaxId</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UsTaxId();

            if (data.hasOwnProperty('state_of_issue')) {
                obj['state_of_issue'] = ApiClient.convertToType(data['state_of_issue'], 'String');
            }
            if (data.hasOwnProperty('tax_id')) {
                obj['tax_id'] = ApiClient.convertToType(data['tax_id'], 'String');
            }
            if (data.hasOwnProperty('tax_id_type')) {
                obj['tax_id_type'] = ApiClient.convertToType(data['tax_id_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UsTaxId</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UsTaxId</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UsTaxId.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['state_of_issue'] && !(typeof data['state_of_issue'] === 'string' || data['state_of_issue'] instanceof String)) {
            throw new Error("Expected the field `state_of_issue` to be a primitive type in the JSON string but got " + data['state_of_issue']);
        }
        // ensure the json data is a string
        if (data['tax_id'] && !(typeof data['tax_id'] === 'string' || data['tax_id'] instanceof String)) {
            throw new Error("Expected the field `tax_id` to be a primitive type in the JSON string but got " + data['tax_id']);
        }
        // ensure the json data is a string
        if (data['tax_id_type'] && !(typeof data['tax_id_type'] === 'string' || data['tax_id_type'] instanceof String)) {
            throw new Error("Expected the field `tax_id_type` to be a primitive type in the JSON string but got " + data['tax_id_type']);
        }

        return true;
    }


}

UsTaxId.RequiredProperties = ["tax_id_type"];

/**
 * State of issue
 * @member {String} state_of_issue
 */
UsTaxId.prototype['state_of_issue'] = undefined;

/**
 * Tax ID
 * @member {String} tax_id
 */
UsTaxId.prototype['tax_id'] = undefined;

/**
 * Tax id type.
 * @member {String} tax_id_type
 */
UsTaxId.prototype['tax_id_type'] = undefined;






export default UsTaxId;

