/**
 * Taxamo
 * Taxamoâ€™s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetDetailedRefundsIn model module.
 * @module model/GetDetailedRefundsIn
 * @version 1
 */
class GetDetailedRefundsIn {
    /**
     * Constructs a new <code>GetDetailedRefundsIn</code>.
     * @alias module:model/GetDetailedRefundsIn
     */
    constructor() { 
        
        GetDetailedRefundsIn.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetDetailedRefundsIn</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetDetailedRefundsIn} obj Optional instance to populate.
     * @return {module:model/GetDetailedRefundsIn} The populated <code>GetDetailedRefundsIn</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetDetailedRefundsIn();

            if (data.hasOwnProperty('country_codes')) {
                obj['country_codes'] = ApiClient.convertToType(data['country_codes'], 'String');
            }
            if (data.hasOwnProperty('date_from')) {
                obj['date_from'] = ApiClient.convertToType(data['date_from'], 'String');
            }
            if (data.hasOwnProperty('date_to')) {
                obj['date_to'] = ApiClient.convertToType(data['date_to'], 'String');
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = ApiClient.convertToType(data['format'], 'String');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('offset')) {
                obj['offset'] = ApiClient.convertToType(data['offset'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetDetailedRefundsIn</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetDetailedRefundsIn</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['country_codes'] && !(typeof data['country_codes'] === 'string' || data['country_codes'] instanceof String)) {
            throw new Error("Expected the field `country_codes` to be a primitive type in the JSON string but got " + data['country_codes']);
        }
        // ensure the json data is a string
        if (data['date_from'] && !(typeof data['date_from'] === 'string' || data['date_from'] instanceof String)) {
            throw new Error("Expected the field `date_from` to be a primitive type in the JSON string but got " + data['date_from']);
        }
        // ensure the json data is a string
        if (data['date_to'] && !(typeof data['date_to'] === 'string' || data['date_to'] instanceof String)) {
            throw new Error("Expected the field `date_to` to be a primitive type in the JSON string but got " + data['date_to']);
        }
        // ensure the json data is a string
        if (data['format'] && !(typeof data['format'] === 'string' || data['format'] instanceof String)) {
            throw new Error("Expected the field `format` to be a primitive type in the JSON string but got " + data['format']);
        }

        return true;
    }


}



/**
 * Comma separated list of 2-letter country codes
 * @member {String} country_codes
 */
GetDetailedRefundsIn.prototype['country_codes'] = undefined;

/**
 * Take only refunds issued at or after the date. Format: yyyy-MM-dd
 * @member {String} date_from
 */
GetDetailedRefundsIn.prototype['date_from'] = undefined;

/**
 * Take only refunds issued at or before the date. Format: yyyy-MM-dd
 * @member {String} date_to
 */
GetDetailedRefundsIn.prototype['date_to'] = undefined;

/**
 * Output format. 'json' or 'csv'. Default value is 'json'
 * @member {String} format
 */
GetDetailedRefundsIn.prototype['format'] = undefined;

/**
 * Limit (no more than 1000, defaults to 100).
 * @member {Number} limit
 */
GetDetailedRefundsIn.prototype['limit'] = undefined;

/**
 * Offset. Defaults to 0
 * @member {Number} offset
 */
GetDetailedRefundsIn.prototype['offset'] = undefined;






export default GetDetailedRefundsIn;

