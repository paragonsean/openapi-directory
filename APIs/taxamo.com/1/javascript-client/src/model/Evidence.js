/**
 * Taxamo
 * Taxamoâ€™s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EvidenceSchema from './EvidenceSchema';

/**
 * The Evidence model module.
 * @module model/Evidence
 * @version 1
 */
class Evidence {
    /**
     * Constructs a new <code>Evidence</code>.
     * @alias module:model/Evidence
     */
    constructor() { 
        
        Evidence.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Evidence</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Evidence} obj Optional instance to populate.
     * @return {module:model/Evidence} The populated <code>Evidence</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Evidence();

            if (data.hasOwnProperty('by_2003_rules')) {
                obj['by_2003_rules'] = EvidenceSchema.constructFromObject(data['by_2003_rules']);
            }
            if (data.hasOwnProperty('by_billing')) {
                obj['by_billing'] = EvidenceSchema.constructFromObject(data['by_billing']);
            }
            if (data.hasOwnProperty('by_cc')) {
                obj['by_cc'] = EvidenceSchema.constructFromObject(data['by_cc']);
            }
            if (data.hasOwnProperty('by_ip')) {
                obj['by_ip'] = EvidenceSchema.constructFromObject(data['by_ip']);
            }
            if (data.hasOwnProperty('by_payment_method')) {
                obj['by_payment_method'] = EvidenceSchema.constructFromObject(data['by_payment_method']);
            }
            if (data.hasOwnProperty('by_tax_number')) {
                obj['by_tax_number'] = EvidenceSchema.constructFromObject(data['by_tax_number']);
            }
            if (data.hasOwnProperty('by_token')) {
                obj['by_token'] = EvidenceSchema.constructFromObject(data['by_token']);
            }
            if (data.hasOwnProperty('forced')) {
                obj['forced'] = EvidenceSchema.constructFromObject(data['forced']);
            }
            if (data.hasOwnProperty('guessed_from_ip')) {
                obj['guessed_from_ip'] = EvidenceSchema.constructFromObject(data['guessed_from_ip']);
            }
            if (data.hasOwnProperty('other_commercially_relevant_info')) {
                obj['other_commercially_relevant_info'] = EvidenceSchema.constructFromObject(data['other_commercially_relevant_info']);
            }
            if (data.hasOwnProperty('self_declaration')) {
                obj['self_declaration'] = EvidenceSchema.constructFromObject(data['self_declaration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Evidence</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Evidence</code>.
     */
    static validateJSON(data) {
        // validate the optional field `by_2003_rules`
        if (data['by_2003_rules']) { // data not null
          EvidenceSchema.validateJSON(data['by_2003_rules']);
        }
        // validate the optional field `by_billing`
        if (data['by_billing']) { // data not null
          EvidenceSchema.validateJSON(data['by_billing']);
        }
        // validate the optional field `by_cc`
        if (data['by_cc']) { // data not null
          EvidenceSchema.validateJSON(data['by_cc']);
        }
        // validate the optional field `by_ip`
        if (data['by_ip']) { // data not null
          EvidenceSchema.validateJSON(data['by_ip']);
        }
        // validate the optional field `by_payment_method`
        if (data['by_payment_method']) { // data not null
          EvidenceSchema.validateJSON(data['by_payment_method']);
        }
        // validate the optional field `by_tax_number`
        if (data['by_tax_number']) { // data not null
          EvidenceSchema.validateJSON(data['by_tax_number']);
        }
        // validate the optional field `by_token`
        if (data['by_token']) { // data not null
          EvidenceSchema.validateJSON(data['by_token']);
        }
        // validate the optional field `forced`
        if (data['forced']) { // data not null
          EvidenceSchema.validateJSON(data['forced']);
        }
        // validate the optional field `guessed_from_ip`
        if (data['guessed_from_ip']) { // data not null
          EvidenceSchema.validateJSON(data['guessed_from_ip']);
        }
        // validate the optional field `other_commercially_relevant_info`
        if (data['other_commercially_relevant_info']) { // data not null
          EvidenceSchema.validateJSON(data['other_commercially_relevant_info']);
        }
        // validate the optional field `self_declaration`
        if (data['self_declaration']) { // data not null
          EvidenceSchema.validateJSON(data['self_declaration']);
        }

        return true;
    }


}



/**
 * @member {module:model/EvidenceSchema} by_2003_rules
 */
Evidence.prototype['by_2003_rules'] = undefined;

/**
 * @member {module:model/EvidenceSchema} by_billing
 */
Evidence.prototype['by_billing'] = undefined;

/**
 * @member {module:model/EvidenceSchema} by_cc
 */
Evidence.prototype['by_cc'] = undefined;

/**
 * @member {module:model/EvidenceSchema} by_ip
 */
Evidence.prototype['by_ip'] = undefined;

/**
 * @member {module:model/EvidenceSchema} by_payment_method
 */
Evidence.prototype['by_payment_method'] = undefined;

/**
 * @member {module:model/EvidenceSchema} by_tax_number
 */
Evidence.prototype['by_tax_number'] = undefined;

/**
 * @member {module:model/EvidenceSchema} by_token
 */
Evidence.prototype['by_token'] = undefined;

/**
 * @member {module:model/EvidenceSchema} forced
 */
Evidence.prototype['forced'] = undefined;

/**
 * @member {module:model/EvidenceSchema} guessed_from_ip
 */
Evidence.prototype['guessed_from_ip'] = undefined;

/**
 * @member {module:model/EvidenceSchema} other_commercially_relevant_info
 */
Evidence.prototype['other_commercially_relevant_info'] = undefined;

/**
 * @member {module:model/EvidenceSchema} self_declaration
 */
Evidence.prototype['self_declaration'] = undefined;






export default Evidence;

