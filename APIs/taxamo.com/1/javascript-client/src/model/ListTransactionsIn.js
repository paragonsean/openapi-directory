/**
 * Taxamo
 * Taxamoâ€™s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ListTransactionsIn model module.
 * @module model/ListTransactionsIn
 * @version 1
 */
class ListTransactionsIn {
    /**
     * Constructs a new <code>ListTransactionsIn</code>.
     * @alias module:model/ListTransactionsIn
     */
    constructor() { 
        
        ListTransactionsIn.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListTransactionsIn</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListTransactionsIn} obj Optional instance to populate.
     * @return {module:model/ListTransactionsIn} The populated <code>ListTransactionsIn</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListTransactionsIn();

            if (data.hasOwnProperty('currency_code')) {
                obj['currency_code'] = ApiClient.convertToType(data['currency_code'], 'String');
            }
            if (data.hasOwnProperty('filter_text')) {
                obj['filter_text'] = ApiClient.convertToType(data['filter_text'], 'String');
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = ApiClient.convertToType(data['format'], 'String');
            }
            if (data.hasOwnProperty('has_note')) {
                obj['has_note'] = ApiClient.convertToType(data['has_note'], 'Boolean');
            }
            if (data.hasOwnProperty('invoice_number')) {
                obj['invoice_number'] = ApiClient.convertToType(data['invoice_number'], 'String');
            }
            if (data.hasOwnProperty('key_or_custom_id')) {
                obj['key_or_custom_id'] = ApiClient.convertToType(data['key_or_custom_id'], 'String');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('offset')) {
                obj['offset'] = ApiClient.convertToType(data['offset'], 'Number');
            }
            if (data.hasOwnProperty('order_date_from')) {
                obj['order_date_from'] = ApiClient.convertToType(data['order_date_from'], 'String');
            }
            if (data.hasOwnProperty('order_date_to')) {
                obj['order_date_to'] = ApiClient.convertToType(data['order_date_to'], 'String');
            }
            if (data.hasOwnProperty('original_transaction_key')) {
                obj['original_transaction_key'] = ApiClient.convertToType(data['original_transaction_key'], 'String');
            }
            if (data.hasOwnProperty('sort_reverse')) {
                obj['sort_reverse'] = ApiClient.convertToType(data['sort_reverse'], 'Boolean');
            }
            if (data.hasOwnProperty('statuses')) {
                obj['statuses'] = ApiClient.convertToType(data['statuses'], 'String');
            }
            if (data.hasOwnProperty('tax_country_code')) {
                obj['tax_country_code'] = ApiClient.convertToType(data['tax_country_code'], 'String');
            }
            if (data.hasOwnProperty('tax_country_codes')) {
                obj['tax_country_codes'] = ApiClient.convertToType(data['tax_country_codes'], 'String');
            }
            if (data.hasOwnProperty('total_amount_greater_than')) {
                obj['total_amount_greater_than'] = ApiClient.convertToType(data['total_amount_greater_than'], 'String');
            }
            if (data.hasOwnProperty('total_amount_less_than')) {
                obj['total_amount_less_than'] = ApiClient.convertToType(data['total_amount_less_than'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListTransactionsIn</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListTransactionsIn</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['currency_code'] && !(typeof data['currency_code'] === 'string' || data['currency_code'] instanceof String)) {
            throw new Error("Expected the field `currency_code` to be a primitive type in the JSON string but got " + data['currency_code']);
        }
        // ensure the json data is a string
        if (data['filter_text'] && !(typeof data['filter_text'] === 'string' || data['filter_text'] instanceof String)) {
            throw new Error("Expected the field `filter_text` to be a primitive type in the JSON string but got " + data['filter_text']);
        }
        // ensure the json data is a string
        if (data['format'] && !(typeof data['format'] === 'string' || data['format'] instanceof String)) {
            throw new Error("Expected the field `format` to be a primitive type in the JSON string but got " + data['format']);
        }
        // ensure the json data is a string
        if (data['invoice_number'] && !(typeof data['invoice_number'] === 'string' || data['invoice_number'] instanceof String)) {
            throw new Error("Expected the field `invoice_number` to be a primitive type in the JSON string but got " + data['invoice_number']);
        }
        // ensure the json data is a string
        if (data['key_or_custom_id'] && !(typeof data['key_or_custom_id'] === 'string' || data['key_or_custom_id'] instanceof String)) {
            throw new Error("Expected the field `key_or_custom_id` to be a primitive type in the JSON string but got " + data['key_or_custom_id']);
        }
        // ensure the json data is a string
        if (data['order_date_from'] && !(typeof data['order_date_from'] === 'string' || data['order_date_from'] instanceof String)) {
            throw new Error("Expected the field `order_date_from` to be a primitive type in the JSON string but got " + data['order_date_from']);
        }
        // ensure the json data is a string
        if (data['order_date_to'] && !(typeof data['order_date_to'] === 'string' || data['order_date_to'] instanceof String)) {
            throw new Error("Expected the field `order_date_to` to be a primitive type in the JSON string but got " + data['order_date_to']);
        }
        // ensure the json data is a string
        if (data['original_transaction_key'] && !(typeof data['original_transaction_key'] === 'string' || data['original_transaction_key'] instanceof String)) {
            throw new Error("Expected the field `original_transaction_key` to be a primitive type in the JSON string but got " + data['original_transaction_key']);
        }
        // ensure the json data is a string
        if (data['statuses'] && !(typeof data['statuses'] === 'string' || data['statuses'] instanceof String)) {
            throw new Error("Expected the field `statuses` to be a primitive type in the JSON string but got " + data['statuses']);
        }
        // ensure the json data is a string
        if (data['tax_country_code'] && !(typeof data['tax_country_code'] === 'string' || data['tax_country_code'] instanceof String)) {
            throw new Error("Expected the field `tax_country_code` to be a primitive type in the JSON string but got " + data['tax_country_code']);
        }
        // ensure the json data is a string
        if (data['tax_country_codes'] && !(typeof data['tax_country_codes'] === 'string' || data['tax_country_codes'] instanceof String)) {
            throw new Error("Expected the field `tax_country_codes` to be a primitive type in the JSON string but got " + data['tax_country_codes']);
        }
        // ensure the json data is a string
        if (data['total_amount_greater_than'] && !(typeof data['total_amount_greater_than'] === 'string' || data['total_amount_greater_than'] instanceof String)) {
            throw new Error("Expected the field `total_amount_greater_than` to be a primitive type in the JSON string but got " + data['total_amount_greater_than']);
        }
        // ensure the json data is a string
        if (data['total_amount_less_than'] && !(typeof data['total_amount_less_than'] === 'string' || data['total_amount_less_than'] instanceof String)) {
            throw new Error("Expected the field `total_amount_less_than` to be a primitive type in the JSON string but got " + data['total_amount_less_than']);
        }

        return true;
    }


}



/**
 * Three letter ISO currency code.
 * @member {String} currency_code
 */
ListTransactionsIn.prototype['currency_code'] = undefined;

/**
 * Filtering expression
 * @member {String} filter_text
 */
ListTransactionsIn.prototype['filter_text'] = undefined;

/**
 * Output format - supports 'csv' value for this operation.
 * @member {String} format
 */
ListTransactionsIn.prototype['format'] = undefined;

/**
 * Return only transactions with a note field set.
 * @member {Boolean} has_note
 */
ListTransactionsIn.prototype['has_note'] = undefined;

/**
 * Transaction invoice number.
 * @member {String} invoice_number
 */
ListTransactionsIn.prototype['invoice_number'] = undefined;

/**
 * Taxamo provided transaction key or custom id
 * @member {String} key_or_custom_id
 */
ListTransactionsIn.prototype['key_or_custom_id'] = undefined;

/**
 * Limit (no more than 1000, defaults to 100).
 * @member {Number} limit
 */
ListTransactionsIn.prototype['limit'] = undefined;

/**
 * Offset
 * @member {Number} offset
 */
ListTransactionsIn.prototype['offset'] = undefined;

/**
 * Order date from in yyyy-MM-dd format.
 * @member {String} order_date_from
 */
ListTransactionsIn.prototype['order_date_from'] = undefined;

/**
 * Order date to in yyyy-MM-dd format.
 * @member {String} order_date_to
 */
ListTransactionsIn.prototype['order_date_to'] = undefined;

/**
 * Taxamo provided original transaction key
 * @member {String} original_transaction_key
 */
ListTransactionsIn.prototype['original_transaction_key'] = undefined;

/**
 * If true, results are sorted in descending order.
 * @member {Boolean} sort_reverse
 */
ListTransactionsIn.prototype['sort_reverse'] = undefined;

/**
 * Comma separated list of of transaction statuses. 'N' - unconfirmed transaction, 'C' - confirmed transaction.
 * @member {String} statuses
 */
ListTransactionsIn.prototype['statuses'] = undefined;

/**
 * Two letter ISO tax country code.
 * @member {String} tax_country_code
 */
ListTransactionsIn.prototype['tax_country_code'] = undefined;

/**
 * Comma separated list of two letter ISO tax country codes.
 * @member {String} tax_country_codes
 */
ListTransactionsIn.prototype['tax_country_codes'] = undefined;

/**
 * Return only transactions with total amount greater than given number. Transactions with total amount equal to a given number (e.g. 0) are not returned.
 * @member {String} total_amount_greater_than
 */
ListTransactionsIn.prototype['total_amount_greater_than'] = undefined;

/**
 * Return only transactions with total amount less than a given number. Transactions with total amount equal to a given number (e.g. 1) are not returned.
 * @member {String} total_amount_less_than
 */
ListTransactionsIn.prototype['total_amount_less_than'] = undefined;






export default ListTransactionsIn;

