/**
 * Taxamo
 * Taxamoâ€™s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetRefundsIn model module.
 * @module model/GetRefundsIn
 * @version 1
 */
class GetRefundsIn {
    /**
     * Constructs a new <code>GetRefundsIn</code>.
     * @alias module:model/GetRefundsIn
     * @param dateFrom {String} Take only refunds issued at or after the date. Format: yyyy-MM-dd
     */
    constructor(dateFrom) { 
        
        GetRefundsIn.initialize(this, dateFrom);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dateFrom) { 
        obj['date_from'] = dateFrom;
    }

    /**
     * Constructs a <code>GetRefundsIn</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetRefundsIn} obj Optional instance to populate.
     * @return {module:model/GetRefundsIn} The populated <code>GetRefundsIn</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetRefundsIn();

            if (data.hasOwnProperty('date_from')) {
                obj['date_from'] = ApiClient.convertToType(data['date_from'], 'String');
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = ApiClient.convertToType(data['format'], 'String');
            }
            if (data.hasOwnProperty('moss_country_code')) {
                obj['moss_country_code'] = ApiClient.convertToType(data['moss_country_code'], 'String');
            }
            if (data.hasOwnProperty('tax_region')) {
                obj['tax_region'] = ApiClient.convertToType(data['tax_region'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetRefundsIn</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetRefundsIn</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetRefundsIn.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['date_from'] && !(typeof data['date_from'] === 'string' || data['date_from'] instanceof String)) {
            throw new Error("Expected the field `date_from` to be a primitive type in the JSON string but got " + data['date_from']);
        }
        // ensure the json data is a string
        if (data['format'] && !(typeof data['format'] === 'string' || data['format'] instanceof String)) {
            throw new Error("Expected the field `format` to be a primitive type in the JSON string but got " + data['format']);
        }
        // ensure the json data is a string
        if (data['moss_country_code'] && !(typeof data['moss_country_code'] === 'string' || data['moss_country_code'] instanceof String)) {
            throw new Error("Expected the field `moss_country_code` to be a primitive type in the JSON string but got " + data['moss_country_code']);
        }
        // ensure the json data is a string
        if (data['tax_region'] && !(typeof data['tax_region'] === 'string' || data['tax_region'] instanceof String)) {
            throw new Error("Expected the field `tax_region` to be a primitive type in the JSON string but got " + data['tax_region']);
        }

        return true;
    }


}

GetRefundsIn.RequiredProperties = ["date_from"];

/**
 * Take only refunds issued at or after the date. Format: yyyy-MM-dd
 * @member {String} date_from
 */
GetRefundsIn.prototype['date_from'] = undefined;

/**
 * Output format. 'csv' value is accepted as well
 * @member {String} format
 */
GetRefundsIn.prototype['format'] = undefined;

/**
 * MOSS country code, used to determine currency. If ommited, merchant default setting is used.
 * @member {String} moss_country_code
 */
GetRefundsIn.prototype['moss_country_code'] = undefined;

/**
 * Tax region key, defaults to EU for backwards compatibility.
 * @member {String} tax_region
 */
GetRefundsIn.prototype['tax_region'] = undefined;






export default GetRefundsIn;

