/**
 * Taxamo
 * Taxamoâ€™s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UsTaxExemptionCertificateDetailsSchema from './UsTaxExemptionCertificateDetailsSchema';

/**
 * The UsTaxExemptionCertificateSchema model module.
 * @module model/UsTaxExemptionCertificateSchema
 * @version 1
 */
class UsTaxExemptionCertificateSchema {
    /**
     * Constructs a new <code>UsTaxExemptionCertificateSchema</code>.
     * @alias module:model/UsTaxExemptionCertificateSchema
     */
    constructor() { 
        
        UsTaxExemptionCertificateSchema.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UsTaxExemptionCertificateSchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UsTaxExemptionCertificateSchema} obj Optional instance to populate.
     * @return {module:model/UsTaxExemptionCertificateSchema} The populated <code>UsTaxExemptionCertificateSchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UsTaxExemptionCertificateSchema();

            if (data.hasOwnProperty('certificate_id')) {
                obj['certificate_id'] = ApiClient.convertToType(data['certificate_id'], 'String');
            }
            if (data.hasOwnProperty('detail')) {
                obj['detail'] = UsTaxExemptionCertificateDetailsSchema.constructFromObject(data['detail']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UsTaxExemptionCertificateSchema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UsTaxExemptionCertificateSchema</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['certificate_id'] && !(typeof data['certificate_id'] === 'string' || data['certificate_id'] instanceof String)) {
            throw new Error("Expected the field `certificate_id` to be a primitive type in the JSON string but got " + data['certificate_id']);
        }
        // validate the optional field `detail`
        if (data['detail']) { // data not null
          UsTaxExemptionCertificateDetailsSchema.validateJSON(data['detail']);
        }

        return true;
    }


}



/**
 * The exemption certificate number.
 * @member {String} certificate_id
 */
UsTaxExemptionCertificateSchema.prototype['certificate_id'] = undefined;

/**
 * @member {module:model/UsTaxExemptionCertificateDetailsSchema} detail
 */
UsTaxExemptionCertificateSchema.prototype['detail'] = undefined;






export default UsTaxExemptionCertificateSchema;

