/**
 * Taxamo
 * Taxamoâ€™s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import LocateGivenIPOut from '../model/LocateGivenIPOut';
import LocateMyIPOut from '../model/LocateMyIPOut';

/**
* Geoip service.
* @module api/GeoipApi
* @version 1
*/
export default class GeoipApi {

    /**
    * Constructs a new GeoipApi. 
    * @alias module:api/GeoipApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the locateGivenIP operation.
     * @callback module:api/GeoipApi~locateGivenIPCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LocateGivenIPOut} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Locate provided IP
     * @param {String} ip IP address.
     * @param {module:api/GeoipApi~locateGivenIPCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LocateGivenIPOut}
     */
    locateGivenIP(ip, callback) {
      let postBody = null;
      // verify the required parameter 'ip' is set
      if (ip === undefined || ip === null) {
        throw new Error("Missing the required parameter 'ip' when calling locateGivenIP");
      }

      let pathParams = {
        'ip': ip
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = LocateGivenIPOut;
      return this.apiClient.callApi(
        '/api/v1/geoip/{ip}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the locateMyIP operation.
     * @callback module:api/GeoipApi~locateMyIPCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LocateMyIPOut} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Locate IP
     * @param {module:api/GeoipApi~locateMyIPCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LocateMyIPOut}
     */
    locateMyIP(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = LocateMyIPOut;
      return this.apiClient.callApi(
        '/api/v1/geoip', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
