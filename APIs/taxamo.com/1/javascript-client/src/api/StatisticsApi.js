/**
 * Taxamo
 * Taxamoâ€™s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetDailySettlementStatsOut from '../model/GetDailySettlementStatsOut';
import GetSettlementStatsByCountryOut from '../model/GetSettlementStatsByCountryOut';
import GetSettlementStatsByTaxationTypeOut from '../model/GetSettlementStatsByTaxationTypeOut';
import GetTransactionsStatsByCountryOut from '../model/GetTransactionsStatsByCountryOut';
import GetTransactionsStatsOut from '../model/GetTransactionsStatsOut';

/**
* Statistics service.
* @module api/StatisticsApi
* @version 1
*/
export default class StatisticsApi {

    /**
    * Constructs a new StatisticsApi. 
    * @alias module:api/StatisticsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getDailySettlementStats operation.
     * @callback module:api/StatisticsApi~getDailySettlementStatsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetDailySettlementStatsOut} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Settlement stats over time
     * @param {String} interval Interval type - day, week, month.
     * @param {String} dateFrom Date from in yyyy-MM format.
     * @param {String} dateTo Date to in yyyy-MM format.
     * @param {module:api/StatisticsApi~getDailySettlementStatsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetDailySettlementStatsOut}
     */
    getDailySettlementStats(interval, dateFrom, dateTo, callback) {
      let postBody = null;
      // verify the required parameter 'interval' is set
      if (interval === undefined || interval === null) {
        throw new Error("Missing the required parameter 'interval' when calling getDailySettlementStats");
      }
      // verify the required parameter 'dateFrom' is set
      if (dateFrom === undefined || dateFrom === null) {
        throw new Error("Missing the required parameter 'dateFrom' when calling getDailySettlementStats");
      }
      // verify the required parameter 'dateTo' is set
      if (dateTo === undefined || dateTo === null) {
        throw new Error("Missing the required parameter 'dateTo' when calling getDailySettlementStats");
      }

      let pathParams = {
      };
      let queryParams = {
        'interval': interval,
        'date_from': dateFrom,
        'date_to': dateTo
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetDailySettlementStatsOut;
      return this.apiClient.callApi(
        '/api/v1/stats/settlement/daily', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSettlementStatsByCountry operation.
     * @callback module:api/StatisticsApi~getSettlementStatsByCountryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetSettlementStatsByCountryOut} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Settlement by country
     * @param {String} dateFrom Date from in yyyy-MM format.
     * @param {String} dateTo Date to in yyyy-MM format.
     * @param {module:api/StatisticsApi~getSettlementStatsByCountryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetSettlementStatsByCountryOut}
     */
    getSettlementStatsByCountry(dateFrom, dateTo, callback) {
      let postBody = null;
      // verify the required parameter 'dateFrom' is set
      if (dateFrom === undefined || dateFrom === null) {
        throw new Error("Missing the required parameter 'dateFrom' when calling getSettlementStatsByCountry");
      }
      // verify the required parameter 'dateTo' is set
      if (dateTo === undefined || dateTo === null) {
        throw new Error("Missing the required parameter 'dateTo' when calling getSettlementStatsByCountry");
      }

      let pathParams = {
      };
      let queryParams = {
        'date_from': dateFrom,
        'date_to': dateTo
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetSettlementStatsByCountryOut;
      return this.apiClient.callApi(
        '/api/v1/stats/settlement/by_country', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSettlementStatsByTaxationType operation.
     * @callback module:api/StatisticsApi~getSettlementStatsByTaxationTypeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetSettlementStatsByTaxationTypeOut} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Settlement by tax type
     * @param {String} dateFrom Date from in yyyy-MM format.
     * @param {String} dateTo Date to in yyyy-MM format.
     * @param {module:api/StatisticsApi~getSettlementStatsByTaxationTypeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetSettlementStatsByTaxationTypeOut}
     */
    getSettlementStatsByTaxationType(dateFrom, dateTo, callback) {
      let postBody = null;
      // verify the required parameter 'dateFrom' is set
      if (dateFrom === undefined || dateFrom === null) {
        throw new Error("Missing the required parameter 'dateFrom' when calling getSettlementStatsByTaxationType");
      }
      // verify the required parameter 'dateTo' is set
      if (dateTo === undefined || dateTo === null) {
        throw new Error("Missing the required parameter 'dateTo' when calling getSettlementStatsByTaxationType");
      }

      let pathParams = {
      };
      let queryParams = {
        'date_from': dateFrom,
        'date_to': dateTo
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetSettlementStatsByTaxationTypeOut;
      return this.apiClient.callApi(
        '/api/v1/stats/settlement/by_taxation_type', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getTransactionsStats operation.
     * @callback module:api/StatisticsApi~getTransactionsStatsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetTransactionsStatsOut} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Transaction stats
     * @param {String} dateFrom Date from in yyyy-MM format.
     * @param {String} dateTo Date to in yyyy-MM format.
     * @param {Object} opts Optional parameters
     * @param {String} [interval] Interval. Accepted values are 'day', 'week' and 'month'.
     * @param {module:api/StatisticsApi~getTransactionsStatsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetTransactionsStatsOut}
     */
    getTransactionsStats(dateFrom, dateTo, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'dateFrom' is set
      if (dateFrom === undefined || dateFrom === null) {
        throw new Error("Missing the required parameter 'dateFrom' when calling getTransactionsStats");
      }
      // verify the required parameter 'dateTo' is set
      if (dateTo === undefined || dateTo === null) {
        throw new Error("Missing the required parameter 'dateTo' when calling getTransactionsStats");
      }

      let pathParams = {
      };
      let queryParams = {
        'date_from': dateFrom,
        'date_to': dateTo,
        'interval': opts['interval']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetTransactionsStatsOut;
      return this.apiClient.callApi(
        '/api/v1/stats/transactions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getTransactionsStatsByCountry operation.
     * @callback module:api/StatisticsApi~getTransactionsStatsByCountryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetTransactionsStatsByCountryOut} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Settlement by country
     * @param {String} dateFrom Date from in yyyy-MM format.
     * @param {String} dateTo Date to in yyyy-MM format.
     * @param {Object} opts Optional parameters
     * @param {String} [globalCurrencyCode] Global currency code to use for conversion - in addition to country's currency if rate is available. Conversion is indicative and based on most-recent rate from ECB.
     * @param {module:api/StatisticsApi~getTransactionsStatsByCountryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetTransactionsStatsByCountryOut}
     */
    getTransactionsStatsByCountry(dateFrom, dateTo, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'dateFrom' is set
      if (dateFrom === undefined || dateFrom === null) {
        throw new Error("Missing the required parameter 'dateFrom' when calling getTransactionsStatsByCountry");
      }
      // verify the required parameter 'dateTo' is set
      if (dateTo === undefined || dateTo === null) {
        throw new Error("Missing the required parameter 'dateTo' when calling getTransactionsStatsByCountry");
      }

      let pathParams = {
      };
      let queryParams = {
        'global_currency_code': opts['globalCurrencyCode'],
        'date_from': dateFrom,
        'date_to': dateTo
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetTransactionsStatsByCountryOut;
      return this.apiClient.callApi(
        '/api/v1/stats/transactions/by_country', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
