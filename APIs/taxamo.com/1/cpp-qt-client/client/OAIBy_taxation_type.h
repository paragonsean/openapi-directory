/**
 * Taxamo
 * Taxamoâ€™s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBy_taxation_type.h
 *
 * 
 */

#ifndef OAIBy_taxation_type_H
#define OAIBy_taxation_type_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBy_taxation_type : public OAIObject {
public:
    OAIBy_taxation_type();
    OAIBy_taxation_type(QString json);
    ~OAIBy_taxation_type() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getDeductedCount() const;
    void setDeductedCount(const double &deducted_count);
    bool is_deducted_count_Set() const;
    bool is_deducted_count_Valid() const;

    qint32 getEuB2b() const;
    void setEuB2b(const qint32 &eu_b2b);
    bool is_eu_b2b_Set() const;
    bool is_eu_b2b_Valid() const;

    qint32 getEuTaxed() const;
    void setEuTaxed(const qint32 &eu_taxed);
    bool is_eu_taxed_Set() const;
    bool is_eu_taxed_Valid() const;

    double getTaxedCount() const;
    void setTaxedCount(const double &taxed_count);
    bool is_taxed_count_Set() const;
    bool is_taxed_count_Valid() const;

    double getTransactionsCount() const;
    void setTransactionsCount(const double &transactions_count);
    bool is_transactions_count_Set() const;
    bool is_transactions_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_deducted_count;
    bool m_deducted_count_isSet;
    bool m_deducted_count_isValid;

    qint32 m_eu_b2b;
    bool m_eu_b2b_isSet;
    bool m_eu_b2b_isValid;

    qint32 m_eu_taxed;
    bool m_eu_taxed_isSet;
    bool m_eu_taxed_isValid;

    double m_taxed_count;
    bool m_taxed_count_isSet;
    bool m_taxed_count_isValid;

    double m_transactions_count;
    bool m_transactions_count_isSet;
    bool m_transactions_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBy_taxation_type)

#endif // OAIBy_taxation_type_H
