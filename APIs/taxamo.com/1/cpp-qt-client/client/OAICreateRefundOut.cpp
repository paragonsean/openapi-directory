/**
 * Taxamo
 * Taxamoâ€™s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateRefundOut.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateRefundOut::OAICreateRefundOut(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateRefundOut::OAICreateRefundOut() {
    this->initializeModel();
}

OAICreateRefundOut::~OAICreateRefundOut() {}

void OAICreateRefundOut::initializeModel() {

    m_refunded_tax_amount_isSet = false;
    m_refunded_tax_amount_isValid = false;

    m_refunded_total_amount_isSet = false;
    m_refunded_total_amount_isValid = false;

    m_tax_amount_isSet = false;
    m_tax_amount_isValid = false;

    m_total_amount_isSet = false;
    m_total_amount_isValid = false;
}

void OAICreateRefundOut::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateRefundOut::fromJsonObject(QJsonObject json) {

    m_refunded_tax_amount_isValid = ::OpenAPI::fromJsonValue(m_refunded_tax_amount, json[QString("refunded_tax_amount")]);
    m_refunded_tax_amount_isSet = !json[QString("refunded_tax_amount")].isNull() && m_refunded_tax_amount_isValid;

    m_refunded_total_amount_isValid = ::OpenAPI::fromJsonValue(m_refunded_total_amount, json[QString("refunded_total_amount")]);
    m_refunded_total_amount_isSet = !json[QString("refunded_total_amount")].isNull() && m_refunded_total_amount_isValid;

    m_tax_amount_isValid = ::OpenAPI::fromJsonValue(m_tax_amount, json[QString("tax_amount")]);
    m_tax_amount_isSet = !json[QString("tax_amount")].isNull() && m_tax_amount_isValid;

    m_total_amount_isValid = ::OpenAPI::fromJsonValue(m_total_amount, json[QString("total_amount")]);
    m_total_amount_isSet = !json[QString("total_amount")].isNull() && m_total_amount_isValid;
}

QString OAICreateRefundOut::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateRefundOut::asJsonObject() const {
    QJsonObject obj;
    if (m_refunded_tax_amount_isSet) {
        obj.insert(QString("refunded_tax_amount"), ::OpenAPI::toJsonValue(m_refunded_tax_amount));
    }
    if (m_refunded_total_amount_isSet) {
        obj.insert(QString("refunded_total_amount"), ::OpenAPI::toJsonValue(m_refunded_total_amount));
    }
    if (m_tax_amount_isSet) {
        obj.insert(QString("tax_amount"), ::OpenAPI::toJsonValue(m_tax_amount));
    }
    if (m_total_amount_isSet) {
        obj.insert(QString("total_amount"), ::OpenAPI::toJsonValue(m_total_amount));
    }
    return obj;
}

double OAICreateRefundOut::getRefundedTaxAmount() const {
    return m_refunded_tax_amount;
}
void OAICreateRefundOut::setRefundedTaxAmount(const double &refunded_tax_amount) {
    m_refunded_tax_amount = refunded_tax_amount;
    m_refunded_tax_amount_isSet = true;
}

bool OAICreateRefundOut::is_refunded_tax_amount_Set() const{
    return m_refunded_tax_amount_isSet;
}

bool OAICreateRefundOut::is_refunded_tax_amount_Valid() const{
    return m_refunded_tax_amount_isValid;
}

double OAICreateRefundOut::getRefundedTotalAmount() const {
    return m_refunded_total_amount;
}
void OAICreateRefundOut::setRefundedTotalAmount(const double &refunded_total_amount) {
    m_refunded_total_amount = refunded_total_amount;
    m_refunded_total_amount_isSet = true;
}

bool OAICreateRefundOut::is_refunded_total_amount_Set() const{
    return m_refunded_total_amount_isSet;
}

bool OAICreateRefundOut::is_refunded_total_amount_Valid() const{
    return m_refunded_total_amount_isValid;
}

double OAICreateRefundOut::getTaxAmount() const {
    return m_tax_amount;
}
void OAICreateRefundOut::setTaxAmount(const double &tax_amount) {
    m_tax_amount = tax_amount;
    m_tax_amount_isSet = true;
}

bool OAICreateRefundOut::is_tax_amount_Set() const{
    return m_tax_amount_isSet;
}

bool OAICreateRefundOut::is_tax_amount_Valid() const{
    return m_tax_amount_isValid;
}

double OAICreateRefundOut::getTotalAmount() const {
    return m_total_amount;
}
void OAICreateRefundOut::setTotalAmount(const double &total_amount) {
    m_total_amount = total_amount;
    m_total_amount_isSet = true;
}

bool OAICreateRefundOut::is_total_amount_Set() const{
    return m_total_amount_isSet;
}

bool OAICreateRefundOut::is_total_amount_Valid() const{
    return m_total_amount_isValid;
}

bool OAICreateRefundOut::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_refunded_tax_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refunded_total_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_amount_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateRefundOut::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
