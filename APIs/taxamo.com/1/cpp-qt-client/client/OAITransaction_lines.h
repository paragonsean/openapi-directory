/**
 * Taxamo
 * Taxamoâ€™s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransaction_lines.h
 *
 * 
 */

#ifndef OAITransaction_lines_H
#define OAITransaction_lines_H

#include <QJsonObject>

#include "OAIAdditional_currencies.h"
#include "OAICustom_fields.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAdditional_currencies;
class OAICustom_fields;

class OAITransaction_lines : public OAIObject {
public:
    OAITransaction_lines();
    OAITransaction_lines(QString json);
    ~OAITransaction_lines() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAdditional_currencies getAdditionalCurrencies() const;
    void setAdditionalCurrencies(const OAIAdditional_currencies &additional_currencies);
    bool is_additional_currencies_Set() const;
    bool is_additional_currencies_Valid() const;

    double getAmount() const;
    void setAmount(const double &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    QList<OAICustom_fields> getCustomFields() const;
    void setCustomFields(const QList<OAICustom_fields> &custom_fields);
    bool is_custom_fields_Set() const;
    bool is_custom_fields_Valid() const;

    QString getCustomId() const;
    void setCustomId(const QString &custom_id);
    bool is_custom_id_Set() const;
    bool is_custom_id_Valid() const;

    double getDeductedTaxAmount() const;
    void setDeductedTaxAmount(const double &deducted_tax_amount);
    bool is_deducted_tax_amount_Set() const;
    bool is_deducted_tax_amount_Valid() const;

    double getDeductedTaxRate() const;
    void setDeductedTaxRate(const double &deducted_tax_rate);
    bool is_deducted_tax_rate_Set() const;
    bool is_deducted_tax_rate_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    double getId() const;
    void setId(const double &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isInformative() const;
    void setInformative(const bool &informative);
    bool is_informative_Set() const;
    bool is_informative_Valid() const;

    QString getLineKey() const;
    void setLineKey(const QString &line_key);
    bool is_line_key_Set() const;
    bool is_line_key_Valid() const;

    QString getProductCode() const;
    void setProductCode(const QString &product_code);
    bool is_product_code_Set() const;
    bool is_product_code_Valid() const;

    QString getProductTaxCode() const;
    void setProductTaxCode(const QString &product_tax_code);
    bool is_product_tax_code_Set() const;
    bool is_product_tax_code_Valid() const;

    QString getProductType() const;
    void setProductType(const QString &product_type);
    bool is_product_type_Set() const;
    bool is_product_type_Valid() const;

    double getQuantity() const;
    void setQuantity(const double &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    double getRefundedTaxAmount() const;
    void setRefundedTaxAmount(const double &refunded_tax_amount);
    bool is_refunded_tax_amount_Set() const;
    bool is_refunded_tax_amount_Valid() const;

    double getRefundedTotalAmount() const;
    void setRefundedTotalAmount(const double &refunded_total_amount);
    bool is_refunded_total_amount_Set() const;
    bool is_refunded_total_amount_Valid() const;

    QString getSupplyDate() const;
    void setSupplyDate(const QString &supply_date);
    bool is_supply_date_Set() const;
    bool is_supply_date_Valid() const;

    double getTaxAmount() const;
    void setTaxAmount(const double &tax_amount);
    bool is_tax_amount_Set() const;
    bool is_tax_amount_Valid() const;

    QString getTaxName() const;
    void setTaxName(const QString &tax_name);
    bool is_tax_name_Set() const;
    bool is_tax_name_Valid() const;

    double getTaxRate() const;
    void setTaxRate(const double &tax_rate);
    bool is_tax_rate_Set() const;
    bool is_tax_rate_Valid() const;

    double getTotalAmount() const;
    void setTotalAmount(const double &total_amount);
    bool is_total_amount_Set() const;
    bool is_total_amount_Valid() const;

    QString getUnitOfMeasure() const;
    void setUnitOfMeasure(const QString &unit_of_measure);
    bool is_unit_of_measure_Set() const;
    bool is_unit_of_measure_Valid() const;

    double getUnitPrice() const;
    void setUnitPrice(const double &unit_price);
    bool is_unit_price_Set() const;
    bool is_unit_price_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAdditional_currencies m_additional_currencies;
    bool m_additional_currencies_isSet;
    bool m_additional_currencies_isValid;

    double m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    QList<OAICustom_fields> m_custom_fields;
    bool m_custom_fields_isSet;
    bool m_custom_fields_isValid;

    QString m_custom_id;
    bool m_custom_id_isSet;
    bool m_custom_id_isValid;

    double m_deducted_tax_amount;
    bool m_deducted_tax_amount_isSet;
    bool m_deducted_tax_amount_isValid;

    double m_deducted_tax_rate;
    bool m_deducted_tax_rate_isSet;
    bool m_deducted_tax_rate_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    double m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_informative;
    bool m_informative_isSet;
    bool m_informative_isValid;

    QString m_line_key;
    bool m_line_key_isSet;
    bool m_line_key_isValid;

    QString m_product_code;
    bool m_product_code_isSet;
    bool m_product_code_isValid;

    QString m_product_tax_code;
    bool m_product_tax_code_isSet;
    bool m_product_tax_code_isValid;

    QString m_product_type;
    bool m_product_type_isSet;
    bool m_product_type_isValid;

    double m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    double m_refunded_tax_amount;
    bool m_refunded_tax_amount_isSet;
    bool m_refunded_tax_amount_isValid;

    double m_refunded_total_amount;
    bool m_refunded_total_amount_isSet;
    bool m_refunded_total_amount_isValid;

    QString m_supply_date;
    bool m_supply_date_isSet;
    bool m_supply_date_isValid;

    double m_tax_amount;
    bool m_tax_amount_isSet;
    bool m_tax_amount_isValid;

    QString m_tax_name;
    bool m_tax_name_isSet;
    bool m_tax_name_isValid;

    double m_tax_rate;
    bool m_tax_rate_isSet;
    bool m_tax_rate_isValid;

    double m_total_amount;
    bool m_total_amount_isSet;
    bool m_total_amount_isValid;

    QString m_unit_of_measure;
    bool m_unit_of_measure_isSet;
    bool m_unit_of_measure_isValid;

    double m_unit_price;
    bool m_unit_price_isSet;
    bool m_unit_price_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransaction_lines)

#endif // OAITransaction_lines_H
