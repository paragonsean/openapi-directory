/**
 * Taxamo
 * Taxamoâ€™s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISettlement_daily_stats_schema.h
 *
 * 
 */

#ifndef OAISettlement_daily_stats_schema_H
#define OAISettlement_daily_stats_schema_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISettlement_daily_stats_schema : public OAIObject {
public:
    OAISettlement_daily_stats_schema();
    OAISettlement_daily_stats_schema(QString json);
    ~OAISettlement_daily_stats_schema() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getB2b() const;
    void setB2b(const qint32 &b2b);
    bool is_b2b_Set() const;
    bool is_b2b_Valid() const;

    qint32 getB2c() const;
    void setB2c(const qint32 &b2c);
    bool is_b2c_Set() const;
    bool is_b2c_Valid() const;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    QString getDay() const;
    void setDay(const QString &day);
    bool is_day_Set() const;
    bool is_day_Valid() const;

    QString getDayRaw() const;
    void setDayRaw(const QString &day_raw);
    bool is_day_raw_Set() const;
    bool is_day_raw_Valid() const;

    qint32 getEuB2b() const;
    void setEuB2b(const qint32 &eu_b2b);
    bool is_eu_b2b_Set() const;
    bool is_eu_b2b_Valid() const;

    qint32 getEuTaxed() const;
    void setEuTaxed(const qint32 &eu_taxed);
    bool is_eu_taxed_Set() const;
    bool is_eu_taxed_Valid() const;

    qint32 getEuTotal() const;
    void setEuTotal(const qint32 &eu_total);
    bool is_eu_total_Set() const;
    bool is_eu_total_Valid() const;

    qint32 getUntaxed() const;
    void setUntaxed(const qint32 &untaxed);
    bool is_untaxed_Set() const;
    bool is_untaxed_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_b2b;
    bool m_b2b_isSet;
    bool m_b2b_isValid;

    qint32 m_b2c;
    bool m_b2c_isSet;
    bool m_b2c_isValid;

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    QString m_day;
    bool m_day_isSet;
    bool m_day_isValid;

    QString m_day_raw;
    bool m_day_raw_isSet;
    bool m_day_raw_isValid;

    qint32 m_eu_b2b;
    bool m_eu_b2b_isSet;
    bool m_eu_b2b_isValid;

    qint32 m_eu_taxed;
    bool m_eu_taxed_isSet;
    bool m_eu_taxed_isValid;

    qint32 m_eu_total;
    bool m_eu_total_isSet;
    bool m_eu_total_isValid;

    qint32 m_untaxed;
    bool m_untaxed_isSet;
    bool m_untaxed_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISettlement_daily_stats_schema)

#endif // OAISettlement_daily_stats_schema_H
