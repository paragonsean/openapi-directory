/**
 * Taxamo
 * Taxamoâ€™s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUs_tax_exemption_certificate_details_schema.h
 *
 * 
 */

#ifndef OAIUs_tax_exemption_certificate_details_schema_H
#define OAIUs_tax_exemption_certificate_details_schema_H

#include <QJsonObject>

#include "OAIUs_tax_exempt_state.h"
#include "OAIUs_tax_id.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUs_tax_exempt_state;
class OAIUs_tax_id;

class OAIUs_tax_exemption_certificate_details_schema : public OAIObject {
public:
    OAIUs_tax_exemption_certificate_details_schema();
    OAIUs_tax_exemption_certificate_details_schema(QString json);
    ~OAIUs_tax_exemption_certificate_details_schema() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIUs_tax_exempt_state> getExemptStates() const;
    void setExemptStates(const QList<OAIUs_tax_exempt_state> &exempt_states);
    bool is_exempt_states_Set() const;
    bool is_exempt_states_Valid() const;

    QString getPurchaserAddress1() const;
    void setPurchaserAddress1(const QString &purchaser_address1);
    bool is_purchaser_address1_Set() const;
    bool is_purchaser_address1_Valid() const;

    QString getPurchaserAddress2() const;
    void setPurchaserAddress2(const QString &purchaser_address2);
    bool is_purchaser_address2_Set() const;
    bool is_purchaser_address2_Valid() const;

    QString getPurchaserBusinessType() const;
    void setPurchaserBusinessType(const QString &purchaser_business_type);
    bool is_purchaser_business_type_Set() const;
    bool is_purchaser_business_type_Valid() const;

    QString getPurchaserBusinessTypeOtherValue() const;
    void setPurchaserBusinessTypeOtherValue(const QString &purchaser_business_type_other_value);
    bool is_purchaser_business_type_other_value_Set() const;
    bool is_purchaser_business_type_other_value_Valid() const;

    QString getPurchaserCity() const;
    void setPurchaserCity(const QString &purchaser_city);
    bool is_purchaser_city_Set() const;
    bool is_purchaser_city_Valid() const;

    QString getPurchaserExemptionReason() const;
    void setPurchaserExemptionReason(const QString &purchaser_exemption_reason);
    bool is_purchaser_exemption_reason_Set() const;
    bool is_purchaser_exemption_reason_Valid() const;

    QString getPurchaserExemptionReasonValue() const;
    void setPurchaserExemptionReasonValue(const QString &purchaser_exemption_reason_value);
    bool is_purchaser_exemption_reason_value_Set() const;
    bool is_purchaser_exemption_reason_value_Valid() const;

    QString getPurchaserFirstName() const;
    void setPurchaserFirstName(const QString &purchaser_first_name);
    bool is_purchaser_first_name_Set() const;
    bool is_purchaser_first_name_Valid() const;

    QString getPurchaserLastName() const;
    void setPurchaserLastName(const QString &purchaser_last_name);
    bool is_purchaser_last_name_Set() const;
    bool is_purchaser_last_name_Valid() const;

    QString getPurchaserState() const;
    void setPurchaserState(const QString &purchaser_state);
    bool is_purchaser_state_Set() const;
    bool is_purchaser_state_Valid() const;

    OAIUs_tax_id getPurchaserTaxId() const;
    void setPurchaserTaxId(const OAIUs_tax_id &purchaser_tax_id);
    bool is_purchaser_tax_id_Set() const;
    bool is_purchaser_tax_id_Valid() const;

    QString getPurchaserTitle() const;
    void setPurchaserTitle(const QString &purchaser_title);
    bool is_purchaser_title_Set() const;
    bool is_purchaser_title_Valid() const;

    QString getPurchaserZip() const;
    void setPurchaserZip(const QString &purchaser_zip);
    bool is_purchaser_zip_Set() const;
    bool is_purchaser_zip_Valid() const;

    bool isSinglePurchase() const;
    void setSinglePurchase(const bool &single_purchase);
    bool is_single_purchase_Set() const;
    bool is_single_purchase_Valid() const;

    QString getSinglePurchaseOrderIdentifier() const;
    void setSinglePurchaseOrderIdentifier(const QString &single_purchase_order_identifier);
    bool is_single_purchase_order_identifier_Set() const;
    bool is_single_purchase_order_identifier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIUs_tax_exempt_state> m_exempt_states;
    bool m_exempt_states_isSet;
    bool m_exempt_states_isValid;

    QString m_purchaser_address1;
    bool m_purchaser_address1_isSet;
    bool m_purchaser_address1_isValid;

    QString m_purchaser_address2;
    bool m_purchaser_address2_isSet;
    bool m_purchaser_address2_isValid;

    QString m_purchaser_business_type;
    bool m_purchaser_business_type_isSet;
    bool m_purchaser_business_type_isValid;

    QString m_purchaser_business_type_other_value;
    bool m_purchaser_business_type_other_value_isSet;
    bool m_purchaser_business_type_other_value_isValid;

    QString m_purchaser_city;
    bool m_purchaser_city_isSet;
    bool m_purchaser_city_isValid;

    QString m_purchaser_exemption_reason;
    bool m_purchaser_exemption_reason_isSet;
    bool m_purchaser_exemption_reason_isValid;

    QString m_purchaser_exemption_reason_value;
    bool m_purchaser_exemption_reason_value_isSet;
    bool m_purchaser_exemption_reason_value_isValid;

    QString m_purchaser_first_name;
    bool m_purchaser_first_name_isSet;
    bool m_purchaser_first_name_isValid;

    QString m_purchaser_last_name;
    bool m_purchaser_last_name_isSet;
    bool m_purchaser_last_name_isValid;

    QString m_purchaser_state;
    bool m_purchaser_state_isSet;
    bool m_purchaser_state_isValid;

    OAIUs_tax_id m_purchaser_tax_id;
    bool m_purchaser_tax_id_isSet;
    bool m_purchaser_tax_id_isValid;

    QString m_purchaser_title;
    bool m_purchaser_title_isSet;
    bool m_purchaser_title_isValid;

    QString m_purchaser_zip;
    bool m_purchaser_zip_isSet;
    bool m_purchaser_zip_isValid;

    bool m_single_purchase;
    bool m_single_purchase_isSet;
    bool m_single_purchase_isValid;

    QString m_single_purchase_order_identifier;
    bool m_single_purchase_order_identifier_isSet;
    bool m_single_purchase_order_identifier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUs_tax_exemption_certificate_details_schema)

#endif // OAIUs_tax_exemption_certificate_details_schema_H
