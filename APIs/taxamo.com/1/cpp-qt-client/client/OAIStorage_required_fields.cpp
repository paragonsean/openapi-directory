/**
 * Taxamo
 * Taxamoâ€™s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStorage_required_fields.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStorage_required_fields::OAIStorage_required_fields(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStorage_required_fields::OAIStorage_required_fields() {
    this->initializeModel();
}

OAIStorage_required_fields::~OAIStorage_required_fields() {}

void OAIStorage_required_fields::initializeModel() {

    m_field_name_isSet = false;
    m_field_name_isValid = false;
}

void OAIStorage_required_fields::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStorage_required_fields::fromJsonObject(QJsonObject json) {

    m_field_name_isValid = ::OpenAPI::fromJsonValue(m_field_name, json[QString("field_name")]);
    m_field_name_isSet = !json[QString("field_name")].isNull() && m_field_name_isValid;
}

QString OAIStorage_required_fields::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStorage_required_fields::asJsonObject() const {
    QJsonObject obj;
    if (m_field_name_isSet) {
        obj.insert(QString("field_name"), ::OpenAPI::toJsonValue(m_field_name));
    }
    return obj;
}

QString OAIStorage_required_fields::getFieldName() const {
    return m_field_name;
}
void OAIStorage_required_fields::setFieldName(const QString &field_name) {
    m_field_name = field_name;
    m_field_name_isSet = true;
}

bool OAIStorage_required_fields::is_field_name_Set() const{
    return m_field_name_isSet;
}

bool OAIStorage_required_fields::is_field_name_Valid() const{
    return m_field_name_isValid;
}

bool OAIStorage_required_fields::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_field_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStorage_required_fields::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
