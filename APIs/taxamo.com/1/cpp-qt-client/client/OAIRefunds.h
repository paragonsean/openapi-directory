/**
 * Taxamo
 * Taxamoâ€™s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRefunds.h
 *
 * 
 */

#ifndef OAIRefunds_H
#define OAIRefunds_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRefunds : public OAIObject {
public:
    OAIRefunds();
    OAIRefunds(QString json);
    ~OAIRefunds() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAmount() const;
    void setAmount(const double &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    bool isInformative() const;
    void setInformative(const bool &informative);
    bool is_informative_Set() const;
    bool is_informative_Valid() const;

    QString getLineKey() const;
    void setLineKey(const QString &line_key);
    bool is_line_key_Set() const;
    bool is_line_key_Valid() const;

    QString getRefundNoteNumber() const;
    void setRefundNoteNumber(const QString &refund_note_number);
    bool is_refund_note_number_Set() const;
    bool is_refund_note_number_Valid() const;

    QString getRefundNoteUrl() const;
    void setRefundNoteUrl(const QString &refund_note_url);
    bool is_refund_note_url_Set() const;
    bool is_refund_note_url_Valid() const;

    QString getRefundReason() const;
    void setRefundReason(const QString &refund_reason);
    bool is_refund_reason_Set() const;
    bool is_refund_reason_Valid() const;

    QString getRefundTimestamp() const;
    void setRefundTimestamp(const QString &refund_timestamp);
    bool is_refund_timestamp_Set() const;
    bool is_refund_timestamp_Valid() const;

    double getTaxAmount() const;
    void setTaxAmount(const double &tax_amount);
    bool is_tax_amount_Set() const;
    bool is_tax_amount_Valid() const;

    double getTaxRate() const;
    void setTaxRate(const double &tax_rate);
    bool is_tax_rate_Set() const;
    bool is_tax_rate_Valid() const;

    double getTotalAmount() const;
    void setTotalAmount(const double &total_amount);
    bool is_total_amount_Set() const;
    bool is_total_amount_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    bool m_informative;
    bool m_informative_isSet;
    bool m_informative_isValid;

    QString m_line_key;
    bool m_line_key_isSet;
    bool m_line_key_isValid;

    QString m_refund_note_number;
    bool m_refund_note_number_isSet;
    bool m_refund_note_number_isValid;

    QString m_refund_note_url;
    bool m_refund_note_url_isSet;
    bool m_refund_note_url_isValid;

    QString m_refund_reason;
    bool m_refund_reason_isSet;
    bool m_refund_reason_isValid;

    QString m_refund_timestamp;
    bool m_refund_timestamp_isSet;
    bool m_refund_timestamp_isValid;

    double m_tax_amount;
    bool m_tax_amount_isSet;
    bool m_tax_amount_isValid;

    double m_tax_rate;
    bool m_tax_rate_isSet;
    bool m_tax_rate_isValid;

    double m_total_amount;
    bool m_total_amount_isSet;
    bool m_total_amount_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRefunds)

#endif // OAIRefunds_H
