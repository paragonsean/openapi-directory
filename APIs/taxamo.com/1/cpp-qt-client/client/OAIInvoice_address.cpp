/**
 * Taxamo
 * Taxamoâ€™s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvoice_address.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvoice_address::OAIInvoice_address(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvoice_address::OAIInvoice_address() {
    this->initializeModel();
}

OAIInvoice_address::~OAIInvoice_address() {}

void OAIInvoice_address::initializeModel() {

    m_address_detail_isSet = false;
    m_address_detail_isValid = false;

    m_building_number_isSet = false;
    m_building_number_isValid = false;

    m_city_isSet = false;
    m_city_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;

    m_freeform_address_isSet = false;
    m_freeform_address_isValid = false;

    m_postal_code_isSet = false;
    m_postal_code_isValid = false;

    m_region_isSet = false;
    m_region_isValid = false;

    m_street_name_isSet = false;
    m_street_name_isValid = false;
}

void OAIInvoice_address::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInvoice_address::fromJsonObject(QJsonObject json) {

    m_address_detail_isValid = ::OpenAPI::fromJsonValue(m_address_detail, json[QString("address_detail")]);
    m_address_detail_isSet = !json[QString("address_detail")].isNull() && m_address_detail_isValid;

    m_building_number_isValid = ::OpenAPI::fromJsonValue(m_building_number, json[QString("building_number")]);
    m_building_number_isSet = !json[QString("building_number")].isNull() && m_building_number_isValid;

    m_city_isValid = ::OpenAPI::fromJsonValue(m_city, json[QString("city")]);
    m_city_isSet = !json[QString("city")].isNull() && m_city_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_freeform_address_isValid = ::OpenAPI::fromJsonValue(m_freeform_address, json[QString("freeform_address")]);
    m_freeform_address_isSet = !json[QString("freeform_address")].isNull() && m_freeform_address_isValid;

    m_postal_code_isValid = ::OpenAPI::fromJsonValue(m_postal_code, json[QString("postal_code")]);
    m_postal_code_isSet = !json[QString("postal_code")].isNull() && m_postal_code_isValid;

    m_region_isValid = ::OpenAPI::fromJsonValue(m_region, json[QString("region")]);
    m_region_isSet = !json[QString("region")].isNull() && m_region_isValid;

    m_street_name_isValid = ::OpenAPI::fromJsonValue(m_street_name, json[QString("street_name")]);
    m_street_name_isSet = !json[QString("street_name")].isNull() && m_street_name_isValid;
}

QString OAIInvoice_address::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInvoice_address::asJsonObject() const {
    QJsonObject obj;
    if (m_address_detail_isSet) {
        obj.insert(QString("address_detail"), ::OpenAPI::toJsonValue(m_address_detail));
    }
    if (m_building_number_isSet) {
        obj.insert(QString("building_number"), ::OpenAPI::toJsonValue(m_building_number));
    }
    if (m_city_isSet) {
        obj.insert(QString("city"), ::OpenAPI::toJsonValue(m_city));
    }
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_freeform_address_isSet) {
        obj.insert(QString("freeform_address"), ::OpenAPI::toJsonValue(m_freeform_address));
    }
    if (m_postal_code_isSet) {
        obj.insert(QString("postal_code"), ::OpenAPI::toJsonValue(m_postal_code));
    }
    if (m_region_isSet) {
        obj.insert(QString("region"), ::OpenAPI::toJsonValue(m_region));
    }
    if (m_street_name_isSet) {
        obj.insert(QString("street_name"), ::OpenAPI::toJsonValue(m_street_name));
    }
    return obj;
}

QString OAIInvoice_address::getAddressDetail() const {
    return m_address_detail;
}
void OAIInvoice_address::setAddressDetail(const QString &address_detail) {
    m_address_detail = address_detail;
    m_address_detail_isSet = true;
}

bool OAIInvoice_address::is_address_detail_Set() const{
    return m_address_detail_isSet;
}

bool OAIInvoice_address::is_address_detail_Valid() const{
    return m_address_detail_isValid;
}

QString OAIInvoice_address::getBuildingNumber() const {
    return m_building_number;
}
void OAIInvoice_address::setBuildingNumber(const QString &building_number) {
    m_building_number = building_number;
    m_building_number_isSet = true;
}

bool OAIInvoice_address::is_building_number_Set() const{
    return m_building_number_isSet;
}

bool OAIInvoice_address::is_building_number_Valid() const{
    return m_building_number_isValid;
}

QString OAIInvoice_address::getCity() const {
    return m_city;
}
void OAIInvoice_address::setCity(const QString &city) {
    m_city = city;
    m_city_isSet = true;
}

bool OAIInvoice_address::is_city_Set() const{
    return m_city_isSet;
}

bool OAIInvoice_address::is_city_Valid() const{
    return m_city_isValid;
}

QString OAIInvoice_address::getCountry() const {
    return m_country;
}
void OAIInvoice_address::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAIInvoice_address::is_country_Set() const{
    return m_country_isSet;
}

bool OAIInvoice_address::is_country_Valid() const{
    return m_country_isValid;
}

QString OAIInvoice_address::getFreeformAddress() const {
    return m_freeform_address;
}
void OAIInvoice_address::setFreeformAddress(const QString &freeform_address) {
    m_freeform_address = freeform_address;
    m_freeform_address_isSet = true;
}

bool OAIInvoice_address::is_freeform_address_Set() const{
    return m_freeform_address_isSet;
}

bool OAIInvoice_address::is_freeform_address_Valid() const{
    return m_freeform_address_isValid;
}

QString OAIInvoice_address::getPostalCode() const {
    return m_postal_code;
}
void OAIInvoice_address::setPostalCode(const QString &postal_code) {
    m_postal_code = postal_code;
    m_postal_code_isSet = true;
}

bool OAIInvoice_address::is_postal_code_Set() const{
    return m_postal_code_isSet;
}

bool OAIInvoice_address::is_postal_code_Valid() const{
    return m_postal_code_isValid;
}

QString OAIInvoice_address::getRegion() const {
    return m_region;
}
void OAIInvoice_address::setRegion(const QString &region) {
    m_region = region;
    m_region_isSet = true;
}

bool OAIInvoice_address::is_region_Set() const{
    return m_region_isSet;
}

bool OAIInvoice_address::is_region_Valid() const{
    return m_region_isValid;
}

QString OAIInvoice_address::getStreetName() const {
    return m_street_name;
}
void OAIInvoice_address::setStreetName(const QString &street_name) {
    m_street_name = street_name;
    m_street_name_isSet = true;
}

bool OAIInvoice_address::is_street_name_Set() const{
    return m_street_name_isSet;
}

bool OAIInvoice_address::is_street_name_Valid() const{
    return m_street_name_isValid;
}

bool OAIInvoice_address::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_detail_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_building_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_freeform_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_postal_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_street_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInvoice_address::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
