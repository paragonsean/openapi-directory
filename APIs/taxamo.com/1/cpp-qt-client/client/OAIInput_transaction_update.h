/**
 * Taxamo
 * Taxamoâ€™s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInput_transaction_update.h
 *
 * 
 */

#ifndef OAIInput_transaction_update_H
#define OAIInput_transaction_update_H

#include <QJsonObject>

#include "OAIAdditional_currencies.h"
#include "OAICustom_fields.h"
#include "OAIEvidence.h"
#include "OAIInput_transaction_line.h"
#include "OAIInvoice_address.h"
#include "OAITax_data_schema.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAdditional_currencies;
class OAICustom_fields;
class OAIEvidence;
class OAIInvoice_address;
class OAITax_data_schema;
class OAIInput_transaction_line;

class OAIInput_transaction_update : public OAIObject {
public:
    OAIInput_transaction_update();
    OAIInput_transaction_update(QString json);
    ~OAIInput_transaction_update() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAdditional_currencies getAdditionalCurrencies() const;
    void setAdditionalCurrencies(const OAIAdditional_currencies &additional_currencies);
    bool is_additional_currencies_Set() const;
    bool is_additional_currencies_Valid() const;

    QString getBillingCountryCode() const;
    void setBillingCountryCode(const QString &billing_country_code);
    bool is_billing_country_code_Set() const;
    bool is_billing_country_code_Valid() const;

    QString getBuyerCreditCardPrefix() const;
    void setBuyerCreditCardPrefix(const QString &buyer_credit_card_prefix);
    bool is_buyer_credit_card_prefix_Set() const;
    bool is_buyer_credit_card_prefix_Valid() const;

    QString getBuyerEmail() const;
    void setBuyerEmail(const QString &buyer_email);
    bool is_buyer_email_Set() const;
    bool is_buyer_email_Valid() const;

    QString getBuyerIp() const;
    void setBuyerIp(const QString &buyer_ip);
    bool is_buyer_ip_Set() const;
    bool is_buyer_ip_Valid() const;

    QString getBuyerName() const;
    void setBuyerName(const QString &buyer_name);
    bool is_buyer_name_Set() const;
    bool is_buyer_name_Valid() const;

    QString getBuyerTaxNumber() const;
    void setBuyerTaxNumber(const QString &buyer_tax_number);
    bool is_buyer_tax_number_Set() const;
    bool is_buyer_tax_number_Valid() const;

    QString getComments() const;
    void setComments(const QString &comments);
    bool is_comments_Set() const;
    bool is_comments_Valid() const;

    QString getCurrencyCode() const;
    void setCurrencyCode(const QString &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    QString getCustomData() const;
    void setCustomData(const QString &custom_data);
    bool is_custom_data_Set() const;
    bool is_custom_data_Valid() const;

    QList<OAICustom_fields> getCustomFields() const;
    void setCustomFields(const QList<OAICustom_fields> &custom_fields);
    bool is_custom_fields_Set() const;
    bool is_custom_fields_Valid() const;

    QString getCustomId() const;
    void setCustomId(const QString &custom_id);
    bool is_custom_id_Set() const;
    bool is_custom_id_Valid() const;

    QString getCustomerId() const;
    void setCustomerId(const QString &customer_id);
    bool is_customer_id_Set() const;
    bool is_customer_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIEvidence getEvidence() const;
    void setEvidence(const OAIEvidence &evidence);
    bool is_evidence_Set() const;
    bool is_evidence_Valid() const;

    QString getForceCountryCode() const;
    void setForceCountryCode(const QString &force_country_code);
    bool is_force_country_code_Set() const;
    bool is_force_country_code_Valid() const;

    OAIInvoice_address getInvoiceAddress() const;
    void setInvoiceAddress(const OAIInvoice_address &invoice_address);
    bool is_invoice_address_Set() const;
    bool is_invoice_address_Valid() const;

    QString getInvoiceDate() const;
    void setInvoiceDate(const QString &invoice_date);
    bool is_invoice_date_Set() const;
    bool is_invoice_date_Valid() const;

    QString getInvoiceNumber() const;
    void setInvoiceNumber(const QString &invoice_number);
    bool is_invoice_number_Set() const;
    bool is_invoice_number_Valid() const;

    QString getInvoicePlace() const;
    void setInvoicePlace(const QString &invoice_place);
    bool is_invoice_place_Set() const;
    bool is_invoice_place_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    QString getOrderDate() const;
    void setOrderDate(const QString &order_date);
    bool is_order_date_Set() const;
    bool is_order_date_Valid() const;

    QString getOriginalTransactionKey() const;
    void setOriginalTransactionKey(const QString &original_transaction_key);
    bool is_original_transaction_key_Set() const;
    bool is_original_transaction_key_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getSubAccountId() const;
    void setSubAccountId(const QString &sub_account_id);
    bool is_sub_account_id_Set() const;
    bool is_sub_account_id_Valid() const;

    QString getSupplyDate() const;
    void setSupplyDate(const QString &supply_date);
    bool is_supply_date_Set() const;
    bool is_supply_date_Valid() const;

    QString getTaxCountryCode() const;
    void setTaxCountryCode(const QString &tax_country_code);
    bool is_tax_country_code_Set() const;
    bool is_tax_country_code_Valid() const;

    OAITax_data_schema getTaxData() const;
    void setTaxData(const OAITax_data_schema &tax_data);
    bool is_tax_data_Set() const;
    bool is_tax_data_Valid() const;

    bool isTaxDeducted() const;
    void setTaxDeducted(const bool &tax_deducted);
    bool is_tax_deducted_Set() const;
    bool is_tax_deducted_Valid() const;

    QList<OAIInput_transaction_line> getTransactionLines() const;
    void setTransactionLines(const QList<OAIInput_transaction_line> &transaction_lines);
    bool is_transaction_lines_Set() const;
    bool is_transaction_lines_Valid() const;

    QString getVerificationToken() const;
    void setVerificationToken(const QString &verification_token);
    bool is_verification_token_Set() const;
    bool is_verification_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAdditional_currencies m_additional_currencies;
    bool m_additional_currencies_isSet;
    bool m_additional_currencies_isValid;

    QString m_billing_country_code;
    bool m_billing_country_code_isSet;
    bool m_billing_country_code_isValid;

    QString m_buyer_credit_card_prefix;
    bool m_buyer_credit_card_prefix_isSet;
    bool m_buyer_credit_card_prefix_isValid;

    QString m_buyer_email;
    bool m_buyer_email_isSet;
    bool m_buyer_email_isValid;

    QString m_buyer_ip;
    bool m_buyer_ip_isSet;
    bool m_buyer_ip_isValid;

    QString m_buyer_name;
    bool m_buyer_name_isSet;
    bool m_buyer_name_isValid;

    QString m_buyer_tax_number;
    bool m_buyer_tax_number_isSet;
    bool m_buyer_tax_number_isValid;

    QString m_comments;
    bool m_comments_isSet;
    bool m_comments_isValid;

    QString m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;

    QString m_custom_data;
    bool m_custom_data_isSet;
    bool m_custom_data_isValid;

    QList<OAICustom_fields> m_custom_fields;
    bool m_custom_fields_isSet;
    bool m_custom_fields_isValid;

    QString m_custom_id;
    bool m_custom_id_isSet;
    bool m_custom_id_isValid;

    QString m_customer_id;
    bool m_customer_id_isSet;
    bool m_customer_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIEvidence m_evidence;
    bool m_evidence_isSet;
    bool m_evidence_isValid;

    QString m_force_country_code;
    bool m_force_country_code_isSet;
    bool m_force_country_code_isValid;

    OAIInvoice_address m_invoice_address;
    bool m_invoice_address_isSet;
    bool m_invoice_address_isValid;

    QString m_invoice_date;
    bool m_invoice_date_isSet;
    bool m_invoice_date_isValid;

    QString m_invoice_number;
    bool m_invoice_number_isSet;
    bool m_invoice_number_isValid;

    QString m_invoice_place;
    bool m_invoice_place_isSet;
    bool m_invoice_place_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    QString m_order_date;
    bool m_order_date_isSet;
    bool m_order_date_isValid;

    QString m_original_transaction_key;
    bool m_original_transaction_key_isSet;
    bool m_original_transaction_key_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_sub_account_id;
    bool m_sub_account_id_isSet;
    bool m_sub_account_id_isValid;

    QString m_supply_date;
    bool m_supply_date_isSet;
    bool m_supply_date_isValid;

    QString m_tax_country_code;
    bool m_tax_country_code_isSet;
    bool m_tax_country_code_isValid;

    OAITax_data_schema m_tax_data;
    bool m_tax_data_isSet;
    bool m_tax_data_isValid;

    bool m_tax_deducted;
    bool m_tax_deducted_isSet;
    bool m_tax_deducted_isValid;

    QList<OAIInput_transaction_line> m_transaction_lines;
    bool m_transaction_lines_isSet;
    bool m_transaction_lines_isValid;

    QString m_verification_token;
    bool m_verification_token_isSet;
    bool m_verification_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInput_transaction_update)

#endif // OAIInput_transaction_update_H
