/**
 * Taxamo
 * Taxamoâ€™s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISummary.h
 *
 * 
 */

#ifndef OAISummary_H
#define OAISummary_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISummary : public OAIObject {
public:
    OAISummary();
    OAISummary(QString json);
    ~OAISummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCurrencyCode() const;
    void setCurrencyCode(const QString &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    QString getEndDate() const;
    void setEndDate(const QString &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    QString getFxRateDate() const;
    void setFxRateDate(const QString &fx_rate_date);
    bool is_fx_rate_date_Set() const;
    bool is_fx_rate_date_Valid() const;

    bool isIndicative() const;
    void setIndicative(const bool &indicative);
    bool is_indicative_Set() const;
    bool is_indicative_Valid() const;

    QString getQuarter() const;
    void setQuarter(const QString &quarter);
    bool is_quarter_Set() const;
    bool is_quarter_Valid() const;

    QString getStartDate() const;
    void setStartDate(const QString &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    double getTaxAmount() const;
    void setTaxAmount(const double &tax_amount);
    bool is_tax_amount_Set() const;
    bool is_tax_amount_Valid() const;

    QString getTaxEntityName() const;
    void setTaxEntityName(const QString &tax_entity_name);
    bool is_tax_entity_name_Set() const;
    bool is_tax_entity_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;

    QString m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    QString m_fx_rate_date;
    bool m_fx_rate_date_isSet;
    bool m_fx_rate_date_isValid;

    bool m_indicative;
    bool m_indicative_isSet;
    bool m_indicative_isValid;

    QString m_quarter;
    bool m_quarter_isSet;
    bool m_quarter_isValid;

    QString m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    double m_tax_amount;
    bool m_tax_amount_isSet;
    bool m_tax_amount_isValid;

    QString m_tax_entity_name;
    bool m_tax_entity_name_isSet;
    bool m_tax_entity_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISummary)

#endif // OAISummary_H
