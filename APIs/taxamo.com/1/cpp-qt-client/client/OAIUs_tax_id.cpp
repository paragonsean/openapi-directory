/**
 * Taxamo
 * Taxamoâ€™s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUs_tax_id.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUs_tax_id::OAIUs_tax_id(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUs_tax_id::OAIUs_tax_id() {
    this->initializeModel();
}

OAIUs_tax_id::~OAIUs_tax_id() {}

void OAIUs_tax_id::initializeModel() {

    m_state_of_issue_isSet = false;
    m_state_of_issue_isValid = false;

    m_tax_id_isSet = false;
    m_tax_id_isValid = false;

    m_tax_id_type_isSet = false;
    m_tax_id_type_isValid = false;
}

void OAIUs_tax_id::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUs_tax_id::fromJsonObject(QJsonObject json) {

    m_state_of_issue_isValid = ::OpenAPI::fromJsonValue(m_state_of_issue, json[QString("state_of_issue")]);
    m_state_of_issue_isSet = !json[QString("state_of_issue")].isNull() && m_state_of_issue_isValid;

    m_tax_id_isValid = ::OpenAPI::fromJsonValue(m_tax_id, json[QString("tax_id")]);
    m_tax_id_isSet = !json[QString("tax_id")].isNull() && m_tax_id_isValid;

    m_tax_id_type_isValid = ::OpenAPI::fromJsonValue(m_tax_id_type, json[QString("tax_id_type")]);
    m_tax_id_type_isSet = !json[QString("tax_id_type")].isNull() && m_tax_id_type_isValid;
}

QString OAIUs_tax_id::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUs_tax_id::asJsonObject() const {
    QJsonObject obj;
    if (m_state_of_issue_isSet) {
        obj.insert(QString("state_of_issue"), ::OpenAPI::toJsonValue(m_state_of_issue));
    }
    if (m_tax_id_isSet) {
        obj.insert(QString("tax_id"), ::OpenAPI::toJsonValue(m_tax_id));
    }
    if (m_tax_id_type_isSet) {
        obj.insert(QString("tax_id_type"), ::OpenAPI::toJsonValue(m_tax_id_type));
    }
    return obj;
}

QString OAIUs_tax_id::getStateOfIssue() const {
    return m_state_of_issue;
}
void OAIUs_tax_id::setStateOfIssue(const QString &state_of_issue) {
    m_state_of_issue = state_of_issue;
    m_state_of_issue_isSet = true;
}

bool OAIUs_tax_id::is_state_of_issue_Set() const{
    return m_state_of_issue_isSet;
}

bool OAIUs_tax_id::is_state_of_issue_Valid() const{
    return m_state_of_issue_isValid;
}

QString OAIUs_tax_id::getTaxId() const {
    return m_tax_id;
}
void OAIUs_tax_id::setTaxId(const QString &tax_id) {
    m_tax_id = tax_id;
    m_tax_id_isSet = true;
}

bool OAIUs_tax_id::is_tax_id_Set() const{
    return m_tax_id_isSet;
}

bool OAIUs_tax_id::is_tax_id_Valid() const{
    return m_tax_id_isValid;
}

QString OAIUs_tax_id::getTaxIdType() const {
    return m_tax_id_type;
}
void OAIUs_tax_id::setTaxIdType(const QString &tax_id_type) {
    m_tax_id_type = tax_id_type;
    m_tax_id_type_isSet = true;
}

bool OAIUs_tax_id::is_tax_id_type_Set() const{
    return m_tax_id_type_isSet;
}

bool OAIUs_tax_id::is_tax_id_type_Valid() const{
    return m_tax_id_type_isValid;
}

bool OAIUs_tax_id::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_state_of_issue_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_id_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUs_tax_id::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_tax_id_type_isValid && true;
}

} // namespace OpenAPI
