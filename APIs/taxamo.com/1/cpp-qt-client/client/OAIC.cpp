/**
 * Taxamo
 * Taxamoâ€™s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIC.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIC::OAIC(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIC::OAIC() {
    this->initializeModel();
}

OAIC::~OAIC() {}

void OAIC::initializeModel() {

    m_day_isSet = false;
    m_day_isValid = false;

    m_day_raw_isSet = false;
    m_day_raw_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIC::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIC::fromJsonObject(QJsonObject json) {

    m_day_isValid = ::OpenAPI::fromJsonValue(m_day, json[QString("day")]);
    m_day_isSet = !json[QString("day")].isNull() && m_day_isValid;

    m_day_raw_isValid = ::OpenAPI::fromJsonValue(m_day_raw, json[QString("day_raw")]);
    m_day_raw_isSet = !json[QString("day_raw")].isNull() && m_day_raw_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIC::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIC::asJsonObject() const {
    QJsonObject obj;
    if (m_day_isSet) {
        obj.insert(QString("day"), ::OpenAPI::toJsonValue(m_day));
    }
    if (m_day_raw_isSet) {
        obj.insert(QString("day_raw"), ::OpenAPI::toJsonValue(m_day_raw));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIC::getDay() const {
    return m_day;
}
void OAIC::setDay(const QString &day) {
    m_day = day;
    m_day_isSet = true;
}

bool OAIC::is_day_Set() const{
    return m_day_isSet;
}

bool OAIC::is_day_Valid() const{
    return m_day_isValid;
}

QString OAIC::getDayRaw() const {
    return m_day_raw;
}
void OAIC::setDayRaw(const QString &day_raw) {
    m_day_raw = day_raw;
    m_day_raw_isSet = true;
}

bool OAIC::is_day_raw_Set() const{
    return m_day_raw_isSet;
}

bool OAIC::is_day_raw_Valid() const{
    return m_day_raw_isValid;
}

QString OAIC::getStatus() const {
    return m_status;
}
void OAIC::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIC::is_status_Set() const{
    return m_status_isSet;
}

bool OAIC::is_status_Valid() const{
    return m_status_isValid;
}

double OAIC::getValue() const {
    return m_value;
}
void OAIC::setValue(const double &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIC::is_value_Set() const{
    return m_value_isSet;
}

bool OAIC::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIC::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_day_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_day_raw_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIC::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
