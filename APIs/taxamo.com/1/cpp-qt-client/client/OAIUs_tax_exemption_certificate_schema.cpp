/**
 * Taxamo
 * Taxamoâ€™s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUs_tax_exemption_certificate_schema.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUs_tax_exemption_certificate_schema::OAIUs_tax_exemption_certificate_schema(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUs_tax_exemption_certificate_schema::OAIUs_tax_exemption_certificate_schema() {
    this->initializeModel();
}

OAIUs_tax_exemption_certificate_schema::~OAIUs_tax_exemption_certificate_schema() {}

void OAIUs_tax_exemption_certificate_schema::initializeModel() {

    m_certificate_id_isSet = false;
    m_certificate_id_isValid = false;

    m_detail_isSet = false;
    m_detail_isValid = false;
}

void OAIUs_tax_exemption_certificate_schema::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUs_tax_exemption_certificate_schema::fromJsonObject(QJsonObject json) {

    m_certificate_id_isValid = ::OpenAPI::fromJsonValue(m_certificate_id, json[QString("certificate_id")]);
    m_certificate_id_isSet = !json[QString("certificate_id")].isNull() && m_certificate_id_isValid;

    m_detail_isValid = ::OpenAPI::fromJsonValue(m_detail, json[QString("detail")]);
    m_detail_isSet = !json[QString("detail")].isNull() && m_detail_isValid;
}

QString OAIUs_tax_exemption_certificate_schema::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUs_tax_exemption_certificate_schema::asJsonObject() const {
    QJsonObject obj;
    if (m_certificate_id_isSet) {
        obj.insert(QString("certificate_id"), ::OpenAPI::toJsonValue(m_certificate_id));
    }
    if (m_detail.isSet()) {
        obj.insert(QString("detail"), ::OpenAPI::toJsonValue(m_detail));
    }
    return obj;
}

QString OAIUs_tax_exemption_certificate_schema::getCertificateId() const {
    return m_certificate_id;
}
void OAIUs_tax_exemption_certificate_schema::setCertificateId(const QString &certificate_id) {
    m_certificate_id = certificate_id;
    m_certificate_id_isSet = true;
}

bool OAIUs_tax_exemption_certificate_schema::is_certificate_id_Set() const{
    return m_certificate_id_isSet;
}

bool OAIUs_tax_exemption_certificate_schema::is_certificate_id_Valid() const{
    return m_certificate_id_isValid;
}

OAIUs_tax_exemption_certificate_details_schema OAIUs_tax_exemption_certificate_schema::getDetail() const {
    return m_detail;
}
void OAIUs_tax_exemption_certificate_schema::setDetail(const OAIUs_tax_exemption_certificate_details_schema &detail) {
    m_detail = detail;
    m_detail_isSet = true;
}

bool OAIUs_tax_exemption_certificate_schema::is_detail_Set() const{
    return m_detail_isSet;
}

bool OAIUs_tax_exemption_certificate_schema::is_detail_Valid() const{
    return m_detail_isValid;
}

bool OAIUs_tax_exemption_certificate_schema::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_certificate_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_detail.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUs_tax_exemption_certificate_schema::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
