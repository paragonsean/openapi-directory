# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EmailInvoiceIn(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, buyer_email: str=None):
        """EmailInvoiceIn - a model defined in OpenAPI

        :param buyer_email: The buyer_email of this EmailInvoiceIn.
        """
        self.openapi_types = {
            'buyer_email': str
        }

        self.attribute_map = {
            'buyer_email': 'buyer_email'
        }

        self._buyer_email = buyer_email

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EmailInvoiceIn':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The emailInvoiceIn of this EmailInvoiceIn.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def buyer_email(self):
        """Gets the buyer_email of this EmailInvoiceIn.

        Email to send the invoice. If not provided, transaction.buyer_email will be used.

        :return: The buyer_email of this EmailInvoiceIn.
        :rtype: str
        """
        return self._buyer_email

    @buyer_email.setter
    def buyer_email(self, buyer_email):
        """Sets the buyer_email of this EmailInvoiceIn.

        Email to send the invoice. If not provided, transaction.buyer_email will be used.

        :param buyer_email: The buyer_email of this EmailInvoiceIn.
        :type buyer_email: str
        """

        self._buyer_email = buyer_email
