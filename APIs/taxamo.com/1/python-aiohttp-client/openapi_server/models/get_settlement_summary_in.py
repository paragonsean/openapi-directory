# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetSettlementSummaryIn(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_month: str=None, moss_country_code: str=None, start_month: str=None, tax_region: str=None):
        """GetSettlementSummaryIn - a model defined in OpenAPI

        :param end_month: The end_month of this GetSettlementSummaryIn.
        :param moss_country_code: The moss_country_code of this GetSettlementSummaryIn.
        :param start_month: The start_month of this GetSettlementSummaryIn.
        :param tax_region: The tax_region of this GetSettlementSummaryIn.
        """
        self.openapi_types = {
            'end_month': str,
            'moss_country_code': str,
            'start_month': str,
            'tax_region': str
        }

        self.attribute_map = {
            'end_month': 'end_month',
            'moss_country_code': 'moss_country_code',
            'start_month': 'start_month',
            'tax_region': 'tax_region'
        }

        self._end_month = end_month
        self._moss_country_code = moss_country_code
        self._start_month = start_month
        self._tax_region = tax_region

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetSettlementSummaryIn':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getSettlementSummaryIn of this GetSettlementSummaryIn.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_month(self):
        """Gets the end_month of this GetSettlementSummaryIn.

        Period end month in yyyy-MM format. Either quarter or start-month and end-month have to be provided.

        :return: The end_month of this GetSettlementSummaryIn.
        :rtype: str
        """
        return self._end_month

    @end_month.setter
    def end_month(self, end_month):
        """Sets the end_month of this GetSettlementSummaryIn.

        Period end month in yyyy-MM format. Either quarter or start-month and end-month have to be provided.

        :param end_month: The end_month of this GetSettlementSummaryIn.
        :type end_month: str
        """

        self._end_month = end_month

    @property
    def moss_country_code(self):
        """Gets the moss_country_code of this GetSettlementSummaryIn.

        MOSS country code, used to determine currency. If ommited, merchant default setting is used.

        :return: The moss_country_code of this GetSettlementSummaryIn.
        :rtype: str
        """
        return self._moss_country_code

    @moss_country_code.setter
    def moss_country_code(self, moss_country_code):
        """Sets the moss_country_code of this GetSettlementSummaryIn.

        MOSS country code, used to determine currency. If ommited, merchant default setting is used.

        :param moss_country_code: The moss_country_code of this GetSettlementSummaryIn.
        :type moss_country_code: str
        """

        self._moss_country_code = moss_country_code

    @property
    def start_month(self):
        """Gets the start_month of this GetSettlementSummaryIn.

        Period start month in yyyy-MM format. Either quarter or start-month and end-month have to be provided.

        :return: The start_month of this GetSettlementSummaryIn.
        :rtype: str
        """
        return self._start_month

    @start_month.setter
    def start_month(self, start_month):
        """Sets the start_month of this GetSettlementSummaryIn.

        Period start month in yyyy-MM format. Either quarter or start-month and end-month have to be provided.

        :param start_month: The start_month of this GetSettlementSummaryIn.
        :type start_month: str
        """

        self._start_month = start_month

    @property
    def tax_region(self):
        """Gets the tax_region of this GetSettlementSummaryIn.

        Tax region key

        :return: The tax_region of this GetSettlementSummaryIn.
        :rtype: str
        """
        return self._tax_region

    @tax_region.setter
    def tax_region(self, tax_region):
        """Sets the tax_region of this GetSettlementSummaryIn.

        Tax region key

        :param tax_region: The tax_region of this GetSettlementSummaryIn.
        :type tax_region: str
        """

        self._tax_region = tax_region
