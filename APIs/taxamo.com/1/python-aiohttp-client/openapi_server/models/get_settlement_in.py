# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetSettlementIn(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, currency_code: str=None, end_month: str=None, format: str=None, moss_country_code: str=None, moss_tax_id: str=None, refund_date_kind_override: str=None, start_month: str=None, tax_country_code: str=None, tax_id: str=None):
        """GetSettlementIn - a model defined in OpenAPI

        :param currency_code: The currency_code of this GetSettlementIn.
        :param end_month: The end_month of this GetSettlementIn.
        :param format: The format of this GetSettlementIn.
        :param moss_country_code: The moss_country_code of this GetSettlementIn.
        :param moss_tax_id: The moss_tax_id of this GetSettlementIn.
        :param refund_date_kind_override: The refund_date_kind_override of this GetSettlementIn.
        :param start_month: The start_month of this GetSettlementIn.
        :param tax_country_code: The tax_country_code of this GetSettlementIn.
        :param tax_id: The tax_id of this GetSettlementIn.
        """
        self.openapi_types = {
            'currency_code': str,
            'end_month': str,
            'format': str,
            'moss_country_code': str,
            'moss_tax_id': str,
            'refund_date_kind_override': str,
            'start_month': str,
            'tax_country_code': str,
            'tax_id': str
        }

        self.attribute_map = {
            'currency_code': 'currency_code',
            'end_month': 'end_month',
            'format': 'format',
            'moss_country_code': 'moss_country_code',
            'moss_tax_id': 'moss_tax_id',
            'refund_date_kind_override': 'refund_date_kind_override',
            'start_month': 'start_month',
            'tax_country_code': 'tax_country_code',
            'tax_id': 'tax_id'
        }

        self._currency_code = currency_code
        self._end_month = end_month
        self._format = format
        self._moss_country_code = moss_country_code
        self._moss_tax_id = moss_tax_id
        self._refund_date_kind_override = refund_date_kind_override
        self._start_month = start_month
        self._tax_country_code = tax_country_code
        self._tax_id = tax_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetSettlementIn':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getSettlementIn of this GetSettlementIn.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def currency_code(self):
        """Gets the currency_code of this GetSettlementIn.

        ISO 3-letter currency code, e.g. EUR or USD. If provided, all amounts will be coerced for this currency. Defaults to region's currency code.

        :return: The currency_code of this GetSettlementIn.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this GetSettlementIn.

        ISO 3-letter currency code, e.g. EUR or USD. If provided, all amounts will be coerced for this currency. Defaults to region's currency code.

        :param currency_code: The currency_code of this GetSettlementIn.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def end_month(self):
        """Gets the end_month of this GetSettlementIn.

        Period end month in yyyy-MM format. Either quarter or start-month and end-month have to be provided.

        :return: The end_month of this GetSettlementIn.
        :rtype: str
        """
        return self._end_month

    @end_month.setter
    def end_month(self, end_month):
        """Sets the end_month of this GetSettlementIn.

        Period end month in yyyy-MM format. Either quarter or start-month and end-month have to be provided.

        :param end_month: The end_month of this GetSettlementIn.
        :type end_month: str
        """

        self._end_month = end_month

    @property
    def format(self):
        """Gets the format of this GetSettlementIn.

        Output format. 'csv' value is accepted as well

        :return: The format of this GetSettlementIn.
        :rtype: str
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this GetSettlementIn.

        Output format. 'csv' value is accepted as well

        :param format: The format of this GetSettlementIn.
        :type format: str
        """

        self._format = format

    @property
    def moss_country_code(self):
        """Gets the moss_country_code of this GetSettlementIn.

        MOSS country code, used to determine currency/region. If ommited, merchant default setting is used. Deprecated: please use tax-country-code.

        :return: The moss_country_code of this GetSettlementIn.
        :rtype: str
        """
        return self._moss_country_code

    @moss_country_code.setter
    def moss_country_code(self, moss_country_code):
        """Sets the moss_country_code of this GetSettlementIn.

        MOSS country code, used to determine currency/region. If ommited, merchant default setting is used. Deprecated: please use tax-country-code.

        :param moss_country_code: The moss_country_code of this GetSettlementIn.
        :type moss_country_code: str
        """

        self._moss_country_code = moss_country_code

    @property
    def moss_tax_id(self):
        """Gets the moss_tax_id of this GetSettlementIn.

        MOSS-assigned tax ID - if not provided, merchant's national tax number will be used. Deprecated, please use tax-id.

        :return: The moss_tax_id of this GetSettlementIn.
        :rtype: str
        """
        return self._moss_tax_id

    @moss_tax_id.setter
    def moss_tax_id(self, moss_tax_id):
        """Sets the moss_tax_id of this GetSettlementIn.

        MOSS-assigned tax ID - if not provided, merchant's national tax number will be used. Deprecated, please use tax-id.

        :param moss_tax_id: The moss_tax_id of this GetSettlementIn.
        :type moss_tax_id: str
        """

        self._moss_tax_id = moss_tax_id

    @property
    def refund_date_kind_override(self):
        """Gets the refund_date_kind_override of this GetSettlementIn.

        Set to 'order_date' to show only refunds for the transactions in the selected reporting period. Set to 'refund_timestamp' to show refunds that were created in the selected reporting period. Do not set to use the default region's setting.

        :return: The refund_date_kind_override of this GetSettlementIn.
        :rtype: str
        """
        return self._refund_date_kind_override

    @refund_date_kind_override.setter
    def refund_date_kind_override(self, refund_date_kind_override):
        """Sets the refund_date_kind_override of this GetSettlementIn.

        Set to 'order_date' to show only refunds for the transactions in the selected reporting period. Set to 'refund_timestamp' to show refunds that were created in the selected reporting period. Do not set to use the default region's setting.

        :param refund_date_kind_override: The refund_date_kind_override of this GetSettlementIn.
        :type refund_date_kind_override: str
        """

        self._refund_date_kind_override = refund_date_kind_override

    @property
    def start_month(self):
        """Gets the start_month of this GetSettlementIn.

        Period start month in yyyy-MM format. Either quarter or start-month and end-month have to be provided.

        :return: The start_month of this GetSettlementIn.
        :rtype: str
        """
        return self._start_month

    @start_month.setter
    def start_month(self, start_month):
        """Sets the start_month of this GetSettlementIn.

        Period start month in yyyy-MM format. Either quarter or start-month and end-month have to be provided.

        :param start_month: The start_month of this GetSettlementIn.
        :type start_month: str
        """

        self._start_month = start_month

    @property
    def tax_country_code(self):
        """Gets the tax_country_code of this GetSettlementIn.

        Tax entity country code, used to determine currency/region. 

        :return: The tax_country_code of this GetSettlementIn.
        :rtype: str
        """
        return self._tax_country_code

    @tax_country_code.setter
    def tax_country_code(self, tax_country_code):
        """Sets the tax_country_code of this GetSettlementIn.

        Tax entity country code, used to determine currency/region. 

        :param tax_country_code: The tax_country_code of this GetSettlementIn.
        :type tax_country_code: str
        """

        self._tax_country_code = tax_country_code

    @property
    def tax_id(self):
        """Gets the tax_id of this GetSettlementIn.

        MOSS-assigned tax ID - if not provided, merchant's national tax number will be used. Deprecated, please use tax-id.

        :return: The tax_id of this GetSettlementIn.
        :rtype: str
        """
        return self._tax_id

    @tax_id.setter
    def tax_id(self, tax_id):
        """Sets the tax_id of this GetSettlementIn.

        MOSS-assigned tax ID - if not provided, merchant's national tax number will be used. Deprecated, please use tax-id.

        :param tax_id: The tax_id of this GetSettlementIn.
        :type tax_id: str
        """

        self._tax_id = tax_id
