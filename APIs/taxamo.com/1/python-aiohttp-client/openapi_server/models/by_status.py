# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.c import C
from openapi_server.models.n import N
from openapi_server import util


class ByStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, c: List[C]=None, n: List[N]=None):
        """ByStatus - a model defined in OpenAPI

        :param c: The c of this ByStatus.
        :param n: The n of this ByStatus.
        """
        self.openapi_types = {
            'c': List[C],
            'n': List[N]
        }

        self.attribute_map = {
            'c': 'C',
            'n': 'N'
        }

        self._c = c
        self._n = n

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ByStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The by_status of this ByStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def c(self):
        """Gets the c of this ByStatus.

        Confirmed transactions

        :return: The c of this ByStatus.
        :rtype: List[C]
        """
        return self._c

    @c.setter
    def c(self, c):
        """Sets the c of this ByStatus.

        Confirmed transactions

        :param c: The c of this ByStatus.
        :type c: List[C]
        """

        self._c = c

    @property
    def n(self):
        """Gets the n of this ByStatus.

        New transactions

        :return: The n of this ByStatus.
        :rtype: List[N]
        """
        return self._n

    @n.setter
    def n(self, n):
        """Sets the n of this ByStatus.

        New transactions

        :param n: The n of this ByStatus.
        :type n: List[N]
        """

        self._n = n
