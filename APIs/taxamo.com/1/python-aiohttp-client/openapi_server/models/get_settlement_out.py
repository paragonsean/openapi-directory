# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.report import Report
from openapi_server import util


class GetSettlementOut(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_date: str=None, fx_rate_date: str=None, indicative: bool=None, report: List[Report]=None, start_date: str=None):
        """GetSettlementOut - a model defined in OpenAPI

        :param end_date: The end_date of this GetSettlementOut.
        :param fx_rate_date: The fx_rate_date of this GetSettlementOut.
        :param indicative: The indicative of this GetSettlementOut.
        :param report: The report of this GetSettlementOut.
        :param start_date: The start_date of this GetSettlementOut.
        """
        self.openapi_types = {
            'end_date': str,
            'fx_rate_date': str,
            'indicative': bool,
            'report': List[Report],
            'start_date': str
        }

        self.attribute_map = {
            'end_date': 'end_date',
            'fx_rate_date': 'fx_rate_date',
            'indicative': 'indicative',
            'report': 'report',
            'start_date': 'start_date'
        }

        self._end_date = end_date
        self._fx_rate_date = fx_rate_date
        self._indicative = indicative
        self._report = report
        self._start_date = start_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetSettlementOut':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getSettlementOut of this GetSettlementOut.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_date(self):
        """Gets the end_date of this GetSettlementOut.

        Period end date in yyyy-MM-dd'T'hh:mm:ss'Z' format.

        :return: The end_date of this GetSettlementOut.
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this GetSettlementOut.

        Period end date in yyyy-MM-dd'T'hh:mm:ss'Z' format.

        :param end_date: The end_date of this GetSettlementOut.
        :type end_date: str
        """

        self._end_date = end_date

    @property
    def fx_rate_date(self):
        """Gets the fx_rate_date of this GetSettlementOut.

        Date of ECB FX rate used for conversions in yyyy-MM-dd'T'hh:mm:ss'Z' format. Applies to tax regions where 

        :return: The fx_rate_date of this GetSettlementOut.
        :rtype: str
        """
        return self._fx_rate_date

    @fx_rate_date.setter
    def fx_rate_date(self, fx_rate_date):
        """Sets the fx_rate_date of this GetSettlementOut.

        Date of ECB FX rate used for conversions in yyyy-MM-dd'T'hh:mm:ss'Z' format. Applies to tax regions where 

        :param fx_rate_date: The fx_rate_date of this GetSettlementOut.
        :type fx_rate_date: str
        """

        self._fx_rate_date = fx_rate_date

    @property
    def indicative(self):
        """Gets the indicative of this GetSettlementOut.

        If the quarter isn't closed yet, tax amount is indicative, as we cannot determine FX rate or all transactions yet.

        :return: The indicative of this GetSettlementOut.
        :rtype: bool
        """
        return self._indicative

    @indicative.setter
    def indicative(self, indicative):
        """Sets the indicative of this GetSettlementOut.

        If the quarter isn't closed yet, tax amount is indicative, as we cannot determine FX rate or all transactions yet.

        :param indicative: The indicative of this GetSettlementOut.
        :type indicative: bool
        """

        self._indicative = indicative

    @property
    def report(self):
        """Gets the report of this GetSettlementOut.

        Settlement report.

        :return: The report of this GetSettlementOut.
        :rtype: List[Report]
        """
        return self._report

    @report.setter
    def report(self, report):
        """Sets the report of this GetSettlementOut.

        Settlement report.

        :param report: The report of this GetSettlementOut.
        :type report: List[Report]
        """

        self._report = report

    @property
    def start_date(self):
        """Gets the start_date of this GetSettlementOut.

        Period start date in yyyy-MM-dd'T'hh:mm:ss'Z' format.

        :return: The start_date of this GetSettlementOut.
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this GetSettlementOut.

        Period start date in yyyy-MM-dd'T'hh:mm:ss'Z' format.

        :param start_date: The start_date of this GetSettlementOut.
        :type start_date: str
        """

        self._start_date = start_date
