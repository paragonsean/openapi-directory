# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class N(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, day: str=None, day_raw: str=None, status: str=None, value: float=None):
        """N - a model defined in OpenAPI

        :param day: The day of this N.
        :param day_raw: The day_raw of this N.
        :param status: The status of this N.
        :param value: The value of this N.
        """
        self.openapi_types = {
            'day': str,
            'day_raw': str,
            'status': str,
            'value': float
        }

        self.attribute_map = {
            'day': 'day',
            'day_raw': 'day_raw',
            'status': 'status',
            'value': 'value'
        }

        self._day = day
        self._day_raw = day_raw
        self._status = status
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'N':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The N of this N.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def day(self):
        """Gets the day of this N.

        Date for stats in yyyy-MM-dd format.

        :return: The day of this N.
        :rtype: str
        """
        return self._day

    @day.setter
    def day(self, day):
        """Sets the day of this N.

        Date for stats in yyyy-MM-dd format.

        :param day: The day of this N.
        :type day: str
        """

        self._day = day

    @property
    def day_raw(self):
        """Gets the day_raw of this N.

        Date for stats in yyyy-MM-dd'T'hh:mm:ss'Z' format.

        :return: The day_raw of this N.
        :rtype: str
        """
        return self._day_raw

    @day_raw.setter
    def day_raw(self, day_raw):
        """Sets the day_raw of this N.

        Date for stats in yyyy-MM-dd'T'hh:mm:ss'Z' format.

        :param day_raw: The day_raw of this N.
        :type day_raw: str
        """

        self._day_raw = day_raw

    @property
    def status(self):
        """Gets the status of this N.

        Transaction status (C or N).

        :return: The status of this N.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this N.

        Transaction status (C or N).

        :param status: The status of this N.
        :type status: str
        """

        self._status = status

    @property
    def value(self):
        """Gets the value of this N.

        Transaction count.

        :return: The value of this N.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this N.

        Transaction count.

        :param value: The value of this N.
        :type value: float
        """

        self._value = value
