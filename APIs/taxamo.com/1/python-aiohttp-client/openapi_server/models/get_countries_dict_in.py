# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetCountriesDictIn(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tax_supported: bool=None):
        """GetCountriesDictIn - a model defined in OpenAPI

        :param tax_supported: The tax_supported of this GetCountriesDictIn.
        """
        self.openapi_types = {
            'tax_supported': bool
        }

        self.attribute_map = {
            'tax_supported': 'tax_supported'
        }

        self._tax_supported = tax_supported

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetCountriesDictIn':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getCountriesDictIn of this GetCountriesDictIn.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tax_supported(self):
        """Gets the tax_supported of this GetCountriesDictIn.

        Should only countries with tax supported be listed?

        :return: The tax_supported of this GetCountriesDictIn.
        :rtype: bool
        """
        return self._tax_supported

    @tax_supported.setter
    def tax_supported(self, tax_supported):
        """Sets the tax_supported of this GetCountriesDictIn.

        Should only countries with tax supported be listed?

        :param tax_supported: The tax_supported of this GetCountriesDictIn.
        :type tax_supported: bool
        """

        self._tax_supported = tax_supported
