# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateRefundOut(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, refunded_tax_amount: float=None, refunded_total_amount: float=None, tax_amount: float=None, total_amount: float=None):
        """CreateRefundOut - a model defined in OpenAPI

        :param refunded_tax_amount: The refunded_tax_amount of this CreateRefundOut.
        :param refunded_total_amount: The refunded_total_amount of this CreateRefundOut.
        :param tax_amount: The tax_amount of this CreateRefundOut.
        :param total_amount: The total_amount of this CreateRefundOut.
        """
        self.openapi_types = {
            'refunded_tax_amount': float,
            'refunded_total_amount': float,
            'tax_amount': float,
            'total_amount': float
        }

        self.attribute_map = {
            'refunded_tax_amount': 'refunded_tax_amount',
            'refunded_total_amount': 'refunded_total_amount',
            'tax_amount': 'tax_amount',
            'total_amount': 'total_amount'
        }

        self._refunded_tax_amount = refunded_tax_amount
        self._refunded_total_amount = refunded_total_amount
        self._tax_amount = tax_amount
        self._total_amount = total_amount

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateRefundOut':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The createRefundOut of this CreateRefundOut.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def refunded_tax_amount(self):
        """Gets the refunded_tax_amount of this CreateRefundOut.

        Total tax amount, that was refunded for this line.

        :return: The refunded_tax_amount of this CreateRefundOut.
        :rtype: float
        """
        return self._refunded_tax_amount

    @refunded_tax_amount.setter
    def refunded_tax_amount(self, refunded_tax_amount):
        """Sets the refunded_tax_amount of this CreateRefundOut.

        Total tax amount, that was refunded for this line.

        :param refunded_tax_amount: The refunded_tax_amount of this CreateRefundOut.
        :type refunded_tax_amount: float
        """

        self._refunded_tax_amount = refunded_tax_amount

    @property
    def refunded_total_amount(self):
        """Gets the refunded_total_amount of this CreateRefundOut.

        Total amount, including tax, that was refunded for this line.

        :return: The refunded_total_amount of this CreateRefundOut.
        :rtype: float
        """
        return self._refunded_total_amount

    @refunded_total_amount.setter
    def refunded_total_amount(self, refunded_total_amount):
        """Sets the refunded_total_amount of this CreateRefundOut.

        Total amount, including tax, that was refunded for this line.

        :param refunded_total_amount: The refunded_total_amount of this CreateRefundOut.
        :type refunded_total_amount: float
        """

        self._refunded_total_amount = refunded_total_amount

    @property
    def tax_amount(self):
        """Gets the tax_amount of this CreateRefundOut.

        Calculated tax amount, that was refunded in this call.

        :return: The tax_amount of this CreateRefundOut.
        :rtype: float
        """
        return self._tax_amount

    @tax_amount.setter
    def tax_amount(self, tax_amount):
        """Sets the tax_amount of this CreateRefundOut.

        Calculated tax amount, that was refunded in this call.

        :param tax_amount: The tax_amount of this CreateRefundOut.
        :type tax_amount: float
        """

        self._tax_amount = tax_amount

    @property
    def total_amount(self):
        """Gets the total_amount of this CreateRefundOut.

        Total amount, including tax, that was refunded in this call.

        :return: The total_amount of this CreateRefundOut.
        :rtype: float
        """
        return self._total_amount

    @total_amount.setter
    def total_amount(self, total_amount):
        """Sets the total_amount of this CreateRefundOut.

        Total amount, including tax, that was refunded in this call.

        :param total_amount: The total_amount of this CreateRefundOut.
        :type total_amount: float
        """

        self._total_amount = total_amount
