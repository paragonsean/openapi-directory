# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CalculateTaxLocationIn(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_country_code: str=None, buyer_credit_card_prefix: str=None):
        """CalculateTaxLocationIn - a model defined in OpenAPI

        :param billing_country_code: The billing_country_code of this CalculateTaxLocationIn.
        :param buyer_credit_card_prefix: The buyer_credit_card_prefix of this CalculateTaxLocationIn.
        """
        self.openapi_types = {
            'billing_country_code': str,
            'buyer_credit_card_prefix': str
        }

        self.attribute_map = {
            'billing_country_code': 'billing_country_code',
            'buyer_credit_card_prefix': 'buyer_credit_card_prefix'
        }

        self._billing_country_code = billing_country_code
        self._buyer_credit_card_prefix = buyer_credit_card_prefix

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CalculateTaxLocationIn':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The calculateTaxLocationIn of this CalculateTaxLocationIn.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_country_code(self):
        """Gets the billing_country_code of this CalculateTaxLocationIn.

        Billing two letter ISO country code.

        :return: The billing_country_code of this CalculateTaxLocationIn.
        :rtype: str
        """
        return self._billing_country_code

    @billing_country_code.setter
    def billing_country_code(self, billing_country_code):
        """Sets the billing_country_code of this CalculateTaxLocationIn.

        Billing two letter ISO country code.

        :param billing_country_code: The billing_country_code of this CalculateTaxLocationIn.
        :type billing_country_code: str
        """

        self._billing_country_code = billing_country_code

    @property
    def buyer_credit_card_prefix(self):
        """Gets the buyer_credit_card_prefix of this CalculateTaxLocationIn.

        First 6 digits of buyer's credit card prefix.

        :return: The buyer_credit_card_prefix of this CalculateTaxLocationIn.
        :rtype: str
        """
        return self._buyer_credit_card_prefix

    @buyer_credit_card_prefix.setter
    def buyer_credit_card_prefix(self, buyer_credit_card_prefix):
        """Sets the buyer_credit_card_prefix of this CalculateTaxLocationIn.

        First 6 digits of buyer's credit card prefix.

        :param buyer_credit_card_prefix: The buyer_credit_card_prefix of this CalculateTaxLocationIn.
        :type buyer_credit_card_prefix: str
        """

        self._buyer_credit_card_prefix = buyer_credit_card_prefix
