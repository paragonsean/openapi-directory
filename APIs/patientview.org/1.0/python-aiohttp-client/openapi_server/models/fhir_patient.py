# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.fhir_contact import FhirContact
from openapi_server.models.fhir_identifier import FhirIdentifier
from openapi_server.models.fhir_practitioner import FhirPractitioner
from openapi_server.models.group import Group
from openapi_server import util


class FhirPatient(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address1: str=None, address2: str=None, address3: str=None, address4: str=None, contacts: List[FhirContact]=None, date_of_birth: datetime=None, date_of_birth_no_time: str=None, forename: str=None, gender: str=None, group: Group=None, group_code: str=None, identifier: str=None, identifiers: List[FhirIdentifier]=None, postcode: str=None, practitioners: List[FhirPractitioner]=None, surname: str=None):
        """FhirPatient - a model defined in OpenAPI

        :param address1: The address1 of this FhirPatient.
        :param address2: The address2 of this FhirPatient.
        :param address3: The address3 of this FhirPatient.
        :param address4: The address4 of this FhirPatient.
        :param contacts: The contacts of this FhirPatient.
        :param date_of_birth: The date_of_birth of this FhirPatient.
        :param date_of_birth_no_time: The date_of_birth_no_time of this FhirPatient.
        :param forename: The forename of this FhirPatient.
        :param gender: The gender of this FhirPatient.
        :param group: The group of this FhirPatient.
        :param group_code: The group_code of this FhirPatient.
        :param identifier: The identifier of this FhirPatient.
        :param identifiers: The identifiers of this FhirPatient.
        :param postcode: The postcode of this FhirPatient.
        :param practitioners: The practitioners of this FhirPatient.
        :param surname: The surname of this FhirPatient.
        """
        self.openapi_types = {
            'address1': str,
            'address2': str,
            'address3': str,
            'address4': str,
            'contacts': List[FhirContact],
            'date_of_birth': datetime,
            'date_of_birth_no_time': str,
            'forename': str,
            'gender': str,
            'group': Group,
            'group_code': str,
            'identifier': str,
            'identifiers': List[FhirIdentifier],
            'postcode': str,
            'practitioners': List[FhirPractitioner],
            'surname': str
        }

        self.attribute_map = {
            'address1': 'address1',
            'address2': 'address2',
            'address3': 'address3',
            'address4': 'address4',
            'contacts': 'contacts',
            'date_of_birth': 'dateOfBirth',
            'date_of_birth_no_time': 'dateOfBirthNoTime',
            'forename': 'forename',
            'gender': 'gender',
            'group': 'group',
            'group_code': 'groupCode',
            'identifier': 'identifier',
            'identifiers': 'identifiers',
            'postcode': 'postcode',
            'practitioners': 'practitioners',
            'surname': 'surname'
        }

        self._address1 = address1
        self._address2 = address2
        self._address3 = address3
        self._address4 = address4
        self._contacts = contacts
        self._date_of_birth = date_of_birth
        self._date_of_birth_no_time = date_of_birth_no_time
        self._forename = forename
        self._gender = gender
        self._group = group
        self._group_code = group_code
        self._identifier = identifier
        self._identifiers = identifiers
        self._postcode = postcode
        self._practitioners = practitioners
        self._surname = surname

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FhirPatient':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FhirPatient of this FhirPatient.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address1(self):
        """Gets the address1 of this FhirPatient.


        :return: The address1 of this FhirPatient.
        :rtype: str
        """
        return self._address1

    @address1.setter
    def address1(self, address1):
        """Sets the address1 of this FhirPatient.


        :param address1: The address1 of this FhirPatient.
        :type address1: str
        """

        self._address1 = address1

    @property
    def address2(self):
        """Gets the address2 of this FhirPatient.


        :return: The address2 of this FhirPatient.
        :rtype: str
        """
        return self._address2

    @address2.setter
    def address2(self, address2):
        """Sets the address2 of this FhirPatient.


        :param address2: The address2 of this FhirPatient.
        :type address2: str
        """

        self._address2 = address2

    @property
    def address3(self):
        """Gets the address3 of this FhirPatient.


        :return: The address3 of this FhirPatient.
        :rtype: str
        """
        return self._address3

    @address3.setter
    def address3(self, address3):
        """Sets the address3 of this FhirPatient.


        :param address3: The address3 of this FhirPatient.
        :type address3: str
        """

        self._address3 = address3

    @property
    def address4(self):
        """Gets the address4 of this FhirPatient.


        :return: The address4 of this FhirPatient.
        :rtype: str
        """
        return self._address4

    @address4.setter
    def address4(self, address4):
        """Sets the address4 of this FhirPatient.


        :param address4: The address4 of this FhirPatient.
        :type address4: str
        """

        self._address4 = address4

    @property
    def contacts(self):
        """Gets the contacts of this FhirPatient.


        :return: The contacts of this FhirPatient.
        :rtype: List[FhirContact]
        """
        return self._contacts

    @contacts.setter
    def contacts(self, contacts):
        """Sets the contacts of this FhirPatient.


        :param contacts: The contacts of this FhirPatient.
        :type contacts: List[FhirContact]
        """

        self._contacts = contacts

    @property
    def date_of_birth(self):
        """Gets the date_of_birth of this FhirPatient.


        :return: The date_of_birth of this FhirPatient.
        :rtype: datetime
        """
        return self._date_of_birth

    @date_of_birth.setter
    def date_of_birth(self, date_of_birth):
        """Sets the date_of_birth of this FhirPatient.


        :param date_of_birth: The date_of_birth of this FhirPatient.
        :type date_of_birth: datetime
        """

        self._date_of_birth = date_of_birth

    @property
    def date_of_birth_no_time(self):
        """Gets the date_of_birth_no_time of this FhirPatient.


        :return: The date_of_birth_no_time of this FhirPatient.
        :rtype: str
        """
        return self._date_of_birth_no_time

    @date_of_birth_no_time.setter
    def date_of_birth_no_time(self, date_of_birth_no_time):
        """Sets the date_of_birth_no_time of this FhirPatient.


        :param date_of_birth_no_time: The date_of_birth_no_time of this FhirPatient.
        :type date_of_birth_no_time: str
        """

        self._date_of_birth_no_time = date_of_birth_no_time

    @property
    def forename(self):
        """Gets the forename of this FhirPatient.


        :return: The forename of this FhirPatient.
        :rtype: str
        """
        return self._forename

    @forename.setter
    def forename(self, forename):
        """Sets the forename of this FhirPatient.


        :param forename: The forename of this FhirPatient.
        :type forename: str
        """

        self._forename = forename

    @property
    def gender(self):
        """Gets the gender of this FhirPatient.


        :return: The gender of this FhirPatient.
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this FhirPatient.


        :param gender: The gender of this FhirPatient.
        :type gender: str
        """

        self._gender = gender

    @property
    def group(self):
        """Gets the group of this FhirPatient.


        :return: The group of this FhirPatient.
        :rtype: Group
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this FhirPatient.


        :param group: The group of this FhirPatient.
        :type group: Group
        """

        self._group = group

    @property
    def group_code(self):
        """Gets the group_code of this FhirPatient.


        :return: The group_code of this FhirPatient.
        :rtype: str
        """
        return self._group_code

    @group_code.setter
    def group_code(self, group_code):
        """Sets the group_code of this FhirPatient.


        :param group_code: The group_code of this FhirPatient.
        :type group_code: str
        """

        self._group_code = group_code

    @property
    def identifier(self):
        """Gets the identifier of this FhirPatient.


        :return: The identifier of this FhirPatient.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this FhirPatient.


        :param identifier: The identifier of this FhirPatient.
        :type identifier: str
        """

        self._identifier = identifier

    @property
    def identifiers(self):
        """Gets the identifiers of this FhirPatient.


        :return: The identifiers of this FhirPatient.
        :rtype: List[FhirIdentifier]
        """
        return self._identifiers

    @identifiers.setter
    def identifiers(self, identifiers):
        """Sets the identifiers of this FhirPatient.


        :param identifiers: The identifiers of this FhirPatient.
        :type identifiers: List[FhirIdentifier]
        """

        self._identifiers = identifiers

    @property
    def postcode(self):
        """Gets the postcode of this FhirPatient.


        :return: The postcode of this FhirPatient.
        :rtype: str
        """
        return self._postcode

    @postcode.setter
    def postcode(self, postcode):
        """Sets the postcode of this FhirPatient.


        :param postcode: The postcode of this FhirPatient.
        :type postcode: str
        """

        self._postcode = postcode

    @property
    def practitioners(self):
        """Gets the practitioners of this FhirPatient.


        :return: The practitioners of this FhirPatient.
        :rtype: List[FhirPractitioner]
        """
        return self._practitioners

    @practitioners.setter
    def practitioners(self, practitioners):
        """Sets the practitioners of this FhirPatient.


        :param practitioners: The practitioners of this FhirPatient.
        :type practitioners: List[FhirPractitioner]
        """

        self._practitioners = practitioners

    @property
    def surname(self):
        """Gets the surname of this FhirPatient.


        :return: The surname of this FhirPatient.
        :rtype: str
        """
        return self._surname

    @surname.setter
    def surname(self, surname):
        """Sets the surname of this FhirPatient.


        :param surname: The surname of this FhirPatient.
        :type surname: str
        """

        self._surname = surname
