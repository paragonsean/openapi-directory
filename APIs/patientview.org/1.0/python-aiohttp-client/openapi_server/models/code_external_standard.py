# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.external_standard import ExternalStandard
from openapi_server import util


class CodeExternalStandard(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code_string: str=None, external_standard: ExternalStandard=None, id: int=None):
        """CodeExternalStandard - a model defined in OpenAPI

        :param code_string: The code_string of this CodeExternalStandard.
        :param external_standard: The external_standard of this CodeExternalStandard.
        :param id: The id of this CodeExternalStandard.
        """
        self.openapi_types = {
            'code_string': str,
            'external_standard': ExternalStandard,
            'id': int
        }

        self.attribute_map = {
            'code_string': 'codeString',
            'external_standard': 'externalStandard',
            'id': 'id'
        }

        self._code_string = code_string
        self._external_standard = external_standard
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CodeExternalStandard':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CodeExternalStandard of this CodeExternalStandard.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code_string(self):
        """Gets the code_string of this CodeExternalStandard.


        :return: The code_string of this CodeExternalStandard.
        :rtype: str
        """
        return self._code_string

    @code_string.setter
    def code_string(self, code_string):
        """Sets the code_string of this CodeExternalStandard.


        :param code_string: The code_string of this CodeExternalStandard.
        :type code_string: str
        """

        self._code_string = code_string

    @property
    def external_standard(self):
        """Gets the external_standard of this CodeExternalStandard.


        :return: The external_standard of this CodeExternalStandard.
        :rtype: ExternalStandard
        """
        return self._external_standard

    @external_standard.setter
    def external_standard(self, external_standard):
        """Sets the external_standard of this CodeExternalStandard.


        :param external_standard: The external_standard of this CodeExternalStandard.
        :type external_standard: ExternalStandard
        """

        self._external_standard = external_standard

    @property
    def id(self):
        """Gets the id of this CodeExternalStandard.


        :return: The id of this CodeExternalStandard.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CodeExternalStandard.


        :param id: The id of this CodeExternalStandard.
        :type id: int
        """

        self._id = id
