# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.lookup import Lookup
from openapi_server import util


class Link(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created: datetime=None, display_order: int=None, id: int=None, last_update: datetime=None, link: str=None, link_type: Lookup=None, name: str=None):
        """Link - a model defined in OpenAPI

        :param created: The created of this Link.
        :param display_order: The display_order of this Link.
        :param id: The id of this Link.
        :param last_update: The last_update of this Link.
        :param link: The link of this Link.
        :param link_type: The link_type of this Link.
        :param name: The name of this Link.
        """
        self.openapi_types = {
            'created': datetime,
            'display_order': int,
            'id': int,
            'last_update': datetime,
            'link': str,
            'link_type': Lookup,
            'name': str
        }

        self.attribute_map = {
            'created': 'created',
            'display_order': 'displayOrder',
            'id': 'id',
            'last_update': 'lastUpdate',
            'link': 'link',
            'link_type': 'linkType',
            'name': 'name'
        }

        self._created = created
        self._display_order = display_order
        self._id = id
        self._last_update = last_update
        self._link = link
        self._link_type = link_type
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Link':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Link of this Link.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this Link.


        :return: The created of this Link.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this Link.


        :param created: The created of this Link.
        :type created: datetime
        """

        self._created = created

    @property
    def display_order(self):
        """Gets the display_order of this Link.


        :return: The display_order of this Link.
        :rtype: int
        """
        return self._display_order

    @display_order.setter
    def display_order(self, display_order):
        """Sets the display_order of this Link.


        :param display_order: The display_order of this Link.
        :type display_order: int
        """

        self._display_order = display_order

    @property
    def id(self):
        """Gets the id of this Link.


        :return: The id of this Link.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Link.


        :param id: The id of this Link.
        :type id: int
        """

        self._id = id

    @property
    def last_update(self):
        """Gets the last_update of this Link.


        :return: The last_update of this Link.
        :rtype: datetime
        """
        return self._last_update

    @last_update.setter
    def last_update(self, last_update):
        """Sets the last_update of this Link.


        :param last_update: The last_update of this Link.
        :type last_update: datetime
        """

        self._last_update = last_update

    @property
    def link(self):
        """Gets the link of this Link.


        :return: The link of this Link.
        :rtype: str
        """
        return self._link

    @link.setter
    def link(self, link):
        """Sets the link of this Link.


        :param link: The link of this Link.
        :type link: str
        """

        self._link = link

    @property
    def link_type(self):
        """Gets the link_type of this Link.


        :return: The link_type of this Link.
        :rtype: Lookup
        """
        return self._link_type

    @link_type.setter
    def link_type(self, link_type):
        """Sets the link_type of this Link.


        :param link_type: The link_type of this Link.
        :type link_type: Lookup
        """

        self._link_type = link_type

    @property
    def name(self):
        """Gets the name of this Link.


        :return: The name of this Link.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Link.


        :param name: The name of this Link.
        :type name: str
        """

        self._name = name
