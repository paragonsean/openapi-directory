# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.group import Group
from openapi_server import util


class FhirAllergy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, confidence_level: str=None, group: Group=None, id: int=None, identifier: str=None, info_source: str=None, reaction: str=None, recorded_date: datetime=None, status: str=None, substance: str=None, type: str=None):
        """FhirAllergy - a model defined in OpenAPI

        :param confidence_level: The confidence_level of this FhirAllergy.
        :param group: The group of this FhirAllergy.
        :param id: The id of this FhirAllergy.
        :param identifier: The identifier of this FhirAllergy.
        :param info_source: The info_source of this FhirAllergy.
        :param reaction: The reaction of this FhirAllergy.
        :param recorded_date: The recorded_date of this FhirAllergy.
        :param status: The status of this FhirAllergy.
        :param substance: The substance of this FhirAllergy.
        :param type: The type of this FhirAllergy.
        """
        self.openapi_types = {
            'confidence_level': str,
            'group': Group,
            'id': int,
            'identifier': str,
            'info_source': str,
            'reaction': str,
            'recorded_date': datetime,
            'status': str,
            'substance': str,
            'type': str
        }

        self.attribute_map = {
            'confidence_level': 'confidenceLevel',
            'group': 'group',
            'id': 'id',
            'identifier': 'identifier',
            'info_source': 'infoSource',
            'reaction': 'reaction',
            'recorded_date': 'recordedDate',
            'status': 'status',
            'substance': 'substance',
            'type': 'type'
        }

        self._confidence_level = confidence_level
        self._group = group
        self._id = id
        self._identifier = identifier
        self._info_source = info_source
        self._reaction = reaction
        self._recorded_date = recorded_date
        self._status = status
        self._substance = substance
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FhirAllergy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FhirAllergy of this FhirAllergy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def confidence_level(self):
        """Gets the confidence_level of this FhirAllergy.


        :return: The confidence_level of this FhirAllergy.
        :rtype: str
        """
        return self._confidence_level

    @confidence_level.setter
    def confidence_level(self, confidence_level):
        """Sets the confidence_level of this FhirAllergy.


        :param confidence_level: The confidence_level of this FhirAllergy.
        :type confidence_level: str
        """

        self._confidence_level = confidence_level

    @property
    def group(self):
        """Gets the group of this FhirAllergy.


        :return: The group of this FhirAllergy.
        :rtype: Group
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this FhirAllergy.


        :param group: The group of this FhirAllergy.
        :type group: Group
        """

        self._group = group

    @property
    def id(self):
        """Gets the id of this FhirAllergy.


        :return: The id of this FhirAllergy.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this FhirAllergy.


        :param id: The id of this FhirAllergy.
        :type id: int
        """

        self._id = id

    @property
    def identifier(self):
        """Gets the identifier of this FhirAllergy.


        :return: The identifier of this FhirAllergy.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this FhirAllergy.


        :param identifier: The identifier of this FhirAllergy.
        :type identifier: str
        """

        self._identifier = identifier

    @property
    def info_source(self):
        """Gets the info_source of this FhirAllergy.


        :return: The info_source of this FhirAllergy.
        :rtype: str
        """
        return self._info_source

    @info_source.setter
    def info_source(self, info_source):
        """Sets the info_source of this FhirAllergy.


        :param info_source: The info_source of this FhirAllergy.
        :type info_source: str
        """

        self._info_source = info_source

    @property
    def reaction(self):
        """Gets the reaction of this FhirAllergy.


        :return: The reaction of this FhirAllergy.
        :rtype: str
        """
        return self._reaction

    @reaction.setter
    def reaction(self, reaction):
        """Sets the reaction of this FhirAllergy.


        :param reaction: The reaction of this FhirAllergy.
        :type reaction: str
        """

        self._reaction = reaction

    @property
    def recorded_date(self):
        """Gets the recorded_date of this FhirAllergy.


        :return: The recorded_date of this FhirAllergy.
        :rtype: datetime
        """
        return self._recorded_date

    @recorded_date.setter
    def recorded_date(self, recorded_date):
        """Sets the recorded_date of this FhirAllergy.


        :param recorded_date: The recorded_date of this FhirAllergy.
        :type recorded_date: datetime
        """

        self._recorded_date = recorded_date

    @property
    def status(self):
        """Gets the status of this FhirAllergy.


        :return: The status of this FhirAllergy.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this FhirAllergy.


        :param status: The status of this FhirAllergy.
        :type status: str
        """

        self._status = status

    @property
    def substance(self):
        """Gets the substance of this FhirAllergy.


        :return: The substance of this FhirAllergy.
        :rtype: str
        """
        return self._substance

    @substance.setter
    def substance(self, substance):
        """Sets the substance of this FhirAllergy.


        :param substance: The substance of this FhirAllergy.
        :type substance: str
        """

        self._substance = substance

    @property
    def type(self):
        """Gets the type of this FhirAllergy.


        :return: The type of this FhirAllergy.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this FhirAllergy.


        :param type: The type of this FhirAllergy.
        :type type: str
        """

        self._type = type
