# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.category import Category
from openapi_server import util


class CodeCategory(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category: Category=None, id: int=None):
        """CodeCategory - a model defined in OpenAPI

        :param category: The category of this CodeCategory.
        :param id: The id of this CodeCategory.
        """
        self.openapi_types = {
            'category': Category,
            'id': int
        }

        self.attribute_map = {
            'category': 'category',
            'id': 'id'
        }

        self._category = category
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CodeCategory':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CodeCategory of this CodeCategory.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category(self):
        """Gets the category of this CodeCategory.


        :return: The category of this CodeCategory.
        :rtype: Category
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this CodeCategory.


        :param category: The category of this CodeCategory.
        :type category: Category
        """

        self._category = category

    @property
    def id(self):
        """Gets the id of this CodeCategory.


        :return: The id of this CodeCategory.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CodeCategory.


        :param id: The id of this CodeCategory.
        :type id: int
        """

        self._id = id
