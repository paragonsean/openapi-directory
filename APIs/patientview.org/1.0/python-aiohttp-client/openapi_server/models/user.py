# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_key import ApiKey
from openapi_server.models.base_group import BaseGroup
from openapi_server.models.group_role import GroupRole
from openapi_server.models.user_feature import UserFeature
from openapi_server import util


class User(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_key: ApiKey=None, can_switch_user: bool=None, change_password: bool=None, contact_number: str=None, created: datetime=None, current_login: datetime=None, current_login_ip_address: str=None, date_of_birth: datetime=None, deleted: bool=None, dummy: bool=None, email: str=None, email_verified: bool=None, forename: str=None, group_roles: list[GroupRole]=None, hide_secret_word_notification: bool=None, id: int=None, identifiers: list[object]=None, last_login: datetime=None, last_login_ip_address: str=None, latest_data_received_by: BaseGroup=None, latest_data_received_date: datetime=None, locked: bool=None, picture: str=None, role_description: str=None, secret_word_is_set: bool=None, surname: str=None, user_features: list[UserFeature]=None, username: str=None):
        """User - a model defined in OpenAPI

        :param api_key: The api_key of this User.
        :param can_switch_user: The can_switch_user of this User.
        :param change_password: The change_password of this User.
        :param contact_number: The contact_number of this User.
        :param created: The created of this User.
        :param current_login: The current_login of this User.
        :param current_login_ip_address: The current_login_ip_address of this User.
        :param date_of_birth: The date_of_birth of this User.
        :param deleted: The deleted of this User.
        :param dummy: The dummy of this User.
        :param email: The email of this User.
        :param email_verified: The email_verified of this User.
        :param forename: The forename of this User.
        :param group_roles: The group_roles of this User.
        :param hide_secret_word_notification: The hide_secret_word_notification of this User.
        :param id: The id of this User.
        :param identifiers: The identifiers of this User.
        :param last_login: The last_login of this User.
        :param last_login_ip_address: The last_login_ip_address of this User.
        :param latest_data_received_by: The latest_data_received_by of this User.
        :param latest_data_received_date: The latest_data_received_date of this User.
        :param locked: The locked of this User.
        :param picture: The picture of this User.
        :param role_description: The role_description of this User.
        :param secret_word_is_set: The secret_word_is_set of this User.
        :param surname: The surname of this User.
        :param user_features: The user_features of this User.
        :param username: The username of this User.
        """
        self.openapi_types = {
            'api_key': ApiKey,
            'can_switch_user': bool,
            'change_password': bool,
            'contact_number': str,
            'created': datetime,
            'current_login': datetime,
            'current_login_ip_address': str,
            'date_of_birth': datetime,
            'deleted': bool,
            'dummy': bool,
            'email': str,
            'email_verified': bool,
            'forename': str,
            'group_roles': list[GroupRole],
            'hide_secret_word_notification': bool,
            'id': int,
            'identifiers': list[object],
            'last_login': datetime,
            'last_login_ip_address': str,
            'latest_data_received_by': BaseGroup,
            'latest_data_received_date': datetime,
            'locked': bool,
            'picture': str,
            'role_description': str,
            'secret_word_is_set': bool,
            'surname': str,
            'user_features': list[UserFeature],
            'username': str
        }

        self.attribute_map = {
            'api_key': 'apiKey',
            'can_switch_user': 'canSwitchUser',
            'change_password': 'changePassword',
            'contact_number': 'contactNumber',
            'created': 'created',
            'current_login': 'currentLogin',
            'current_login_ip_address': 'currentLoginIpAddress',
            'date_of_birth': 'dateOfBirth',
            'deleted': 'deleted',
            'dummy': 'dummy',
            'email': 'email',
            'email_verified': 'emailVerified',
            'forename': 'forename',
            'group_roles': 'groupRoles',
            'hide_secret_word_notification': 'hideSecretWordNotification',
            'id': 'id',
            'identifiers': 'identifiers',
            'last_login': 'lastLogin',
            'last_login_ip_address': 'lastLoginIpAddress',
            'latest_data_received_by': 'latestDataReceivedBy',
            'latest_data_received_date': 'latestDataReceivedDate',
            'locked': 'locked',
            'picture': 'picture',
            'role_description': 'roleDescription',
            'secret_word_is_set': 'secretWordIsSet',
            'surname': 'surname',
            'user_features': 'userFeatures',
            'username': 'username'
        }

        self._api_key = api_key
        self._can_switch_user = can_switch_user
        self._change_password = change_password
        self._contact_number = contact_number
        self._created = created
        self._current_login = current_login
        self._current_login_ip_address = current_login_ip_address
        self._date_of_birth = date_of_birth
        self._deleted = deleted
        self._dummy = dummy
        self._email = email
        self._email_verified = email_verified
        self._forename = forename
        self._group_roles = group_roles
        self._hide_secret_word_notification = hide_secret_word_notification
        self._id = id
        self._identifiers = identifiers
        self._last_login = last_login
        self._last_login_ip_address = last_login_ip_address
        self._latest_data_received_by = latest_data_received_by
        self._latest_data_received_date = latest_data_received_date
        self._locked = locked
        self._picture = picture
        self._role_description = role_description
        self._secret_word_is_set = secret_word_is_set
        self._surname = surname
        self._user_features = user_features
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The User of this User.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_key(self):
        """Gets the api_key of this User.


        :return: The api_key of this User.
        :rtype: ApiKey
        """
        return self._api_key

    @api_key.setter
    def api_key(self, api_key):
        """Sets the api_key of this User.


        :param api_key: The api_key of this User.
        :type api_key: ApiKey
        """

        self._api_key = api_key

    @property
    def can_switch_user(self):
        """Gets the can_switch_user of this User.


        :return: The can_switch_user of this User.
        :rtype: bool
        """
        return self._can_switch_user

    @can_switch_user.setter
    def can_switch_user(self, can_switch_user):
        """Sets the can_switch_user of this User.


        :param can_switch_user: The can_switch_user of this User.
        :type can_switch_user: bool
        """

        self._can_switch_user = can_switch_user

    @property
    def change_password(self):
        """Gets the change_password of this User.


        :return: The change_password of this User.
        :rtype: bool
        """
        return self._change_password

    @change_password.setter
    def change_password(self, change_password):
        """Sets the change_password of this User.


        :param change_password: The change_password of this User.
        :type change_password: bool
        """

        self._change_password = change_password

    @property
    def contact_number(self):
        """Gets the contact_number of this User.


        :return: The contact_number of this User.
        :rtype: str
        """
        return self._contact_number

    @contact_number.setter
    def contact_number(self, contact_number):
        """Sets the contact_number of this User.


        :param contact_number: The contact_number of this User.
        :type contact_number: str
        """

        self._contact_number = contact_number

    @property
    def created(self):
        """Gets the created of this User.


        :return: The created of this User.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this User.


        :param created: The created of this User.
        :type created: datetime
        """

        self._created = created

    @property
    def current_login(self):
        """Gets the current_login of this User.


        :return: The current_login of this User.
        :rtype: datetime
        """
        return self._current_login

    @current_login.setter
    def current_login(self, current_login):
        """Sets the current_login of this User.


        :param current_login: The current_login of this User.
        :type current_login: datetime
        """

        self._current_login = current_login

    @property
    def current_login_ip_address(self):
        """Gets the current_login_ip_address of this User.


        :return: The current_login_ip_address of this User.
        :rtype: str
        """
        return self._current_login_ip_address

    @current_login_ip_address.setter
    def current_login_ip_address(self, current_login_ip_address):
        """Sets the current_login_ip_address of this User.


        :param current_login_ip_address: The current_login_ip_address of this User.
        :type current_login_ip_address: str
        """

        self._current_login_ip_address = current_login_ip_address

    @property
    def date_of_birth(self):
        """Gets the date_of_birth of this User.


        :return: The date_of_birth of this User.
        :rtype: datetime
        """
        return self._date_of_birth

    @date_of_birth.setter
    def date_of_birth(self, date_of_birth):
        """Sets the date_of_birth of this User.


        :param date_of_birth: The date_of_birth of this User.
        :type date_of_birth: datetime
        """

        self._date_of_birth = date_of_birth

    @property
    def deleted(self):
        """Gets the deleted of this User.


        :return: The deleted of this User.
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this User.


        :param deleted: The deleted of this User.
        :type deleted: bool
        """

        self._deleted = deleted

    @property
    def dummy(self):
        """Gets the dummy of this User.


        :return: The dummy of this User.
        :rtype: bool
        """
        return self._dummy

    @dummy.setter
    def dummy(self, dummy):
        """Sets the dummy of this User.


        :param dummy: The dummy of this User.
        :type dummy: bool
        """

        self._dummy = dummy

    @property
    def email(self):
        """Gets the email of this User.


        :return: The email of this User.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this User.


        :param email: The email of this User.
        :type email: str
        """

        self._email = email

    @property
    def email_verified(self):
        """Gets the email_verified of this User.


        :return: The email_verified of this User.
        :rtype: bool
        """
        return self._email_verified

    @email_verified.setter
    def email_verified(self, email_verified):
        """Sets the email_verified of this User.


        :param email_verified: The email_verified of this User.
        :type email_verified: bool
        """

        self._email_verified = email_verified

    @property
    def forename(self):
        """Gets the forename of this User.


        :return: The forename of this User.
        :rtype: str
        """
        return self._forename

    @forename.setter
    def forename(self, forename):
        """Sets the forename of this User.


        :param forename: The forename of this User.
        :type forename: str
        """

        self._forename = forename

    @property
    def group_roles(self):
        """Gets the group_roles of this User.


        :return: The group_roles of this User.
        :rtype: list[GroupRole]
        """
        return self._group_roles

    @group_roles.setter
    def group_roles(self, group_roles):
        """Sets the group_roles of this User.


        :param group_roles: The group_roles of this User.
        :type group_roles: list[GroupRole]
        """

        self._group_roles = group_roles

    @property
    def hide_secret_word_notification(self):
        """Gets the hide_secret_word_notification of this User.


        :return: The hide_secret_word_notification of this User.
        :rtype: bool
        """
        return self._hide_secret_word_notification

    @hide_secret_word_notification.setter
    def hide_secret_word_notification(self, hide_secret_word_notification):
        """Sets the hide_secret_word_notification of this User.


        :param hide_secret_word_notification: The hide_secret_word_notification of this User.
        :type hide_secret_word_notification: bool
        """

        self._hide_secret_word_notification = hide_secret_word_notification

    @property
    def id(self):
        """Gets the id of this User.


        :return: The id of this User.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this User.


        :param id: The id of this User.
        :type id: int
        """

        self._id = id

    @property
    def identifiers(self):
        """Gets the identifiers of this User.


        :return: The identifiers of this User.
        :rtype: list[object]
        """
        return self._identifiers

    @identifiers.setter
    def identifiers(self, identifiers):
        """Sets the identifiers of this User.


        :param identifiers: The identifiers of this User.
        :type identifiers: list[object]
        """

        self._identifiers = identifiers

    @property
    def last_login(self):
        """Gets the last_login of this User.


        :return: The last_login of this User.
        :rtype: datetime
        """
        return self._last_login

    @last_login.setter
    def last_login(self, last_login):
        """Sets the last_login of this User.


        :param last_login: The last_login of this User.
        :type last_login: datetime
        """

        self._last_login = last_login

    @property
    def last_login_ip_address(self):
        """Gets the last_login_ip_address of this User.


        :return: The last_login_ip_address of this User.
        :rtype: str
        """
        return self._last_login_ip_address

    @last_login_ip_address.setter
    def last_login_ip_address(self, last_login_ip_address):
        """Sets the last_login_ip_address of this User.


        :param last_login_ip_address: The last_login_ip_address of this User.
        :type last_login_ip_address: str
        """

        self._last_login_ip_address = last_login_ip_address

    @property
    def latest_data_received_by(self):
        """Gets the latest_data_received_by of this User.


        :return: The latest_data_received_by of this User.
        :rtype: BaseGroup
        """
        return self._latest_data_received_by

    @latest_data_received_by.setter
    def latest_data_received_by(self, latest_data_received_by):
        """Sets the latest_data_received_by of this User.


        :param latest_data_received_by: The latest_data_received_by of this User.
        :type latest_data_received_by: BaseGroup
        """

        self._latest_data_received_by = latest_data_received_by

    @property
    def latest_data_received_date(self):
        """Gets the latest_data_received_date of this User.


        :return: The latest_data_received_date of this User.
        :rtype: datetime
        """
        return self._latest_data_received_date

    @latest_data_received_date.setter
    def latest_data_received_date(self, latest_data_received_date):
        """Sets the latest_data_received_date of this User.


        :param latest_data_received_date: The latest_data_received_date of this User.
        :type latest_data_received_date: datetime
        """

        self._latest_data_received_date = latest_data_received_date

    @property
    def locked(self):
        """Gets the locked of this User.


        :return: The locked of this User.
        :rtype: bool
        """
        return self._locked

    @locked.setter
    def locked(self, locked):
        """Sets the locked of this User.


        :param locked: The locked of this User.
        :type locked: bool
        """

        self._locked = locked

    @property
    def picture(self):
        """Gets the picture of this User.


        :return: The picture of this User.
        :rtype: str
        """
        return self._picture

    @picture.setter
    def picture(self, picture):
        """Sets the picture of this User.


        :param picture: The picture of this User.
        :type picture: str
        """

        self._picture = picture

    @property
    def role_description(self):
        """Gets the role_description of this User.


        :return: The role_description of this User.
        :rtype: str
        """
        return self._role_description

    @role_description.setter
    def role_description(self, role_description):
        """Sets the role_description of this User.


        :param role_description: The role_description of this User.
        :type role_description: str
        """

        self._role_description = role_description

    @property
    def secret_word_is_set(self):
        """Gets the secret_word_is_set of this User.


        :return: The secret_word_is_set of this User.
        :rtype: bool
        """
        return self._secret_word_is_set

    @secret_word_is_set.setter
    def secret_word_is_set(self, secret_word_is_set):
        """Sets the secret_word_is_set of this User.


        :param secret_word_is_set: The secret_word_is_set of this User.
        :type secret_word_is_set: bool
        """

        self._secret_word_is_set = secret_word_is_set

    @property
    def surname(self):
        """Gets the surname of this User.


        :return: The surname of this User.
        :rtype: str
        """
        return self._surname

    @surname.setter
    def surname(self, surname):
        """Sets the surname of this User.


        :param surname: The surname of this User.
        :type surname: str
        """

        self._surname = surname

    @property
    def user_features(self):
        """Gets the user_features of this User.


        :return: The user_features of this User.
        :rtype: list[UserFeature]
        """
        return self._user_features

    @user_features.setter
    def user_features(self, user_features):
        """Sets the user_features of this User.


        :param user_features: The user_features of this User.
        :type user_features: list[UserFeature]
        """

        self._user_features = user_features

    @property
    def username(self):
        """Gets the username of this User.


        :return: The username of this User.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this User.


        :param username: The username of this User.
        :type username: str
        """

        self._username = username
