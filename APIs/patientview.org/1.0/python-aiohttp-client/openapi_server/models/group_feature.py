# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.feature import Feature
from openapi_server import util


class GroupFeature(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created: datetime=None, feature: Feature=None, id: int=None, last_update: datetime=None):
        """GroupFeature - a model defined in OpenAPI

        :param created: The created of this GroupFeature.
        :param feature: The feature of this GroupFeature.
        :param id: The id of this GroupFeature.
        :param last_update: The last_update of this GroupFeature.
        """
        self.openapi_types = {
            'created': datetime,
            'feature': Feature,
            'id': int,
            'last_update': datetime
        }

        self.attribute_map = {
            'created': 'created',
            'feature': 'feature',
            'id': 'id',
            'last_update': 'lastUpdate'
        }

        self._created = created
        self._feature = feature
        self._id = id
        self._last_update = last_update

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GroupFeature':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GroupFeature of this GroupFeature.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this GroupFeature.


        :return: The created of this GroupFeature.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this GroupFeature.


        :param created: The created of this GroupFeature.
        :type created: datetime
        """

        self._created = created

    @property
    def feature(self):
        """Gets the feature of this GroupFeature.


        :return: The feature of this GroupFeature.
        :rtype: Feature
        """
        return self._feature

    @feature.setter
    def feature(self, feature):
        """Sets the feature of this GroupFeature.


        :param feature: The feature of this GroupFeature.
        :type feature: Feature
        """

        self._feature = feature

    @property
    def id(self):
        """Gets the id of this GroupFeature.


        :return: The id of this GroupFeature.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GroupFeature.


        :param id: The id of this GroupFeature.
        :type id: int
        """

        self._id = id

    @property
    def last_update(self):
        """Gets the last_update of this GroupFeature.


        :return: The last_update of this GroupFeature.
        :rtype: datetime
        """
        return self._last_update

    @last_update.setter
    def last_update(self, last_update):
        """Sets the last_update of this GroupFeature.


        :param last_update: The last_update of this GroupFeature.
        :type last_update: datetime
        """

        self._last_update = last_update
