# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Location(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, created: datetime=None, email: str=None, id: int=None, label: str=None, last_update: datetime=None, name: str=None, phone: str=None, web: str=None):
        """Location - a model defined in OpenAPI

        :param address: The address of this Location.
        :param created: The created of this Location.
        :param email: The email of this Location.
        :param id: The id of this Location.
        :param label: The label of this Location.
        :param last_update: The last_update of this Location.
        :param name: The name of this Location.
        :param phone: The phone of this Location.
        :param web: The web of this Location.
        """
        self.openapi_types = {
            'address': str,
            'created': datetime,
            'email': str,
            'id': int,
            'label': str,
            'last_update': datetime,
            'name': str,
            'phone': str,
            'web': str
        }

        self.attribute_map = {
            'address': 'address',
            'created': 'created',
            'email': 'email',
            'id': 'id',
            'label': 'label',
            'last_update': 'lastUpdate',
            'name': 'name',
            'phone': 'phone',
            'web': 'web'
        }

        self._address = address
        self._created = created
        self._email = email
        self._id = id
        self._label = label
        self._last_update = last_update
        self._name = name
        self._phone = phone
        self._web = web

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Location':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Location of this Location.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this Location.


        :return: The address of this Location.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this Location.


        :param address: The address of this Location.
        :type address: str
        """

        self._address = address

    @property
    def created(self):
        """Gets the created of this Location.


        :return: The created of this Location.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this Location.


        :param created: The created of this Location.
        :type created: datetime
        """

        self._created = created

    @property
    def email(self):
        """Gets the email of this Location.


        :return: The email of this Location.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this Location.


        :param email: The email of this Location.
        :type email: str
        """

        self._email = email

    @property
    def id(self):
        """Gets the id of this Location.


        :return: The id of this Location.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Location.


        :param id: The id of this Location.
        :type id: int
        """

        self._id = id

    @property
    def label(self):
        """Gets the label of this Location.


        :return: The label of this Location.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this Location.


        :param label: The label of this Location.
        :type label: str
        """

        self._label = label

    @property
    def last_update(self):
        """Gets the last_update of this Location.


        :return: The last_update of this Location.
        :rtype: datetime
        """
        return self._last_update

    @last_update.setter
    def last_update(self, last_update):
        """Sets the last_update of this Location.


        :param last_update: The last_update of this Location.
        :type last_update: datetime
        """

        self._last_update = last_update

    @property
    def name(self):
        """Gets the name of this Location.


        :return: The name of this Location.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Location.


        :param name: The name of this Location.
        :type name: str
        """

        self._name = name

    @property
    def phone(self):
        """Gets the phone of this Location.


        :return: The phone of this Location.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this Location.


        :param phone: The phone of this Location.
        :type phone: str
        """

        self._phone = phone

    @property
    def web(self):
        """Gets the web of this Location.


        :return: The web of this Location.
        :rtype: str
        """
        return self._web

    @web.setter
    def web(self, web):
        """Sets the web of this Location.


        :param web: The web of this Location.
        :type web: str
        """

        self._web = web
