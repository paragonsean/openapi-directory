# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.code import Code
from openapi_server.models.fhir_allergy import FhirAllergy
from openapi_server.models.fhir_condition import FhirCondition
from openapi_server.models.fhir_encounter import FhirEncounter
from openapi_server.models.fhir_observation import FhirObservation
from openapi_server.models.fhir_patient import FhirPatient
from openapi_server.models.fhir_practitioner import FhirPractitioner
from openapi_server.models.group import Group
from openapi_server import util


class Patient(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, diagnosis_codes: List[Code]=None, fhir_allergies: List[FhirAllergy]=None, fhir_conditions: List[FhirCondition]=None, fhir_encounters: List[FhirEncounter]=None, fhir_observations: List[FhirObservation]=None, fhir_patient: FhirPatient=None, fhir_practitioners: List[FhirPractitioner]=None, group: Group=None, id: int=None):
        """Patient - a model defined in OpenAPI

        :param diagnosis_codes: The diagnosis_codes of this Patient.
        :param fhir_allergies: The fhir_allergies of this Patient.
        :param fhir_conditions: The fhir_conditions of this Patient.
        :param fhir_encounters: The fhir_encounters of this Patient.
        :param fhir_observations: The fhir_observations of this Patient.
        :param fhir_patient: The fhir_patient of this Patient.
        :param fhir_practitioners: The fhir_practitioners of this Patient.
        :param group: The group of this Patient.
        :param id: The id of this Patient.
        """
        self.openapi_types = {
            'diagnosis_codes': List[Code],
            'fhir_allergies': List[FhirAllergy],
            'fhir_conditions': List[FhirCondition],
            'fhir_encounters': List[FhirEncounter],
            'fhir_observations': List[FhirObservation],
            'fhir_patient': FhirPatient,
            'fhir_practitioners': List[FhirPractitioner],
            'group': Group,
            'id': int
        }

        self.attribute_map = {
            'diagnosis_codes': 'diagnosisCodes',
            'fhir_allergies': 'fhirAllergies',
            'fhir_conditions': 'fhirConditions',
            'fhir_encounters': 'fhirEncounters',
            'fhir_observations': 'fhirObservations',
            'fhir_patient': 'fhirPatient',
            'fhir_practitioners': 'fhirPractitioners',
            'group': 'group',
            'id': 'id'
        }

        self._diagnosis_codes = diagnosis_codes
        self._fhir_allergies = fhir_allergies
        self._fhir_conditions = fhir_conditions
        self._fhir_encounters = fhir_encounters
        self._fhir_observations = fhir_observations
        self._fhir_patient = fhir_patient
        self._fhir_practitioners = fhir_practitioners
        self._group = group
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Patient':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Patient of this Patient.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def diagnosis_codes(self):
        """Gets the diagnosis_codes of this Patient.


        :return: The diagnosis_codes of this Patient.
        :rtype: List[Code]
        """
        return self._diagnosis_codes

    @diagnosis_codes.setter
    def diagnosis_codes(self, diagnosis_codes):
        """Sets the diagnosis_codes of this Patient.


        :param diagnosis_codes: The diagnosis_codes of this Patient.
        :type diagnosis_codes: List[Code]
        """

        self._diagnosis_codes = diagnosis_codes

    @property
    def fhir_allergies(self):
        """Gets the fhir_allergies of this Patient.


        :return: The fhir_allergies of this Patient.
        :rtype: List[FhirAllergy]
        """
        return self._fhir_allergies

    @fhir_allergies.setter
    def fhir_allergies(self, fhir_allergies):
        """Sets the fhir_allergies of this Patient.


        :param fhir_allergies: The fhir_allergies of this Patient.
        :type fhir_allergies: List[FhirAllergy]
        """

        self._fhir_allergies = fhir_allergies

    @property
    def fhir_conditions(self):
        """Gets the fhir_conditions of this Patient.


        :return: The fhir_conditions of this Patient.
        :rtype: List[FhirCondition]
        """
        return self._fhir_conditions

    @fhir_conditions.setter
    def fhir_conditions(self, fhir_conditions):
        """Sets the fhir_conditions of this Patient.


        :param fhir_conditions: The fhir_conditions of this Patient.
        :type fhir_conditions: List[FhirCondition]
        """

        self._fhir_conditions = fhir_conditions

    @property
    def fhir_encounters(self):
        """Gets the fhir_encounters of this Patient.


        :return: The fhir_encounters of this Patient.
        :rtype: List[FhirEncounter]
        """
        return self._fhir_encounters

    @fhir_encounters.setter
    def fhir_encounters(self, fhir_encounters):
        """Sets the fhir_encounters of this Patient.


        :param fhir_encounters: The fhir_encounters of this Patient.
        :type fhir_encounters: List[FhirEncounter]
        """

        self._fhir_encounters = fhir_encounters

    @property
    def fhir_observations(self):
        """Gets the fhir_observations of this Patient.


        :return: The fhir_observations of this Patient.
        :rtype: List[FhirObservation]
        """
        return self._fhir_observations

    @fhir_observations.setter
    def fhir_observations(self, fhir_observations):
        """Sets the fhir_observations of this Patient.


        :param fhir_observations: The fhir_observations of this Patient.
        :type fhir_observations: List[FhirObservation]
        """

        self._fhir_observations = fhir_observations

    @property
    def fhir_patient(self):
        """Gets the fhir_patient of this Patient.


        :return: The fhir_patient of this Patient.
        :rtype: FhirPatient
        """
        return self._fhir_patient

    @fhir_patient.setter
    def fhir_patient(self, fhir_patient):
        """Sets the fhir_patient of this Patient.


        :param fhir_patient: The fhir_patient of this Patient.
        :type fhir_patient: FhirPatient
        """

        self._fhir_patient = fhir_patient

    @property
    def fhir_practitioners(self):
        """Gets the fhir_practitioners of this Patient.


        :return: The fhir_practitioners of this Patient.
        :rtype: List[FhirPractitioner]
        """
        return self._fhir_practitioners

    @fhir_practitioners.setter
    def fhir_practitioners(self, fhir_practitioners):
        """Sets the fhir_practitioners of this Patient.


        :param fhir_practitioners: The fhir_practitioners of this Patient.
        :type fhir_practitioners: List[FhirPractitioner]
        """

        self._fhir_practitioners = fhir_practitioners

    @property
    def group(self):
        """Gets the group of this Patient.


        :return: The group of this Patient.
        :rtype: Group
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this Patient.


        :param group: The group of this Patient.
        :type group: Group
        """

        self._group = group

    @property
    def id(self):
        """Gets the id of this Patient.


        :return: The id of this Patient.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Patient.


        :param id: The id of this Patient.
        :type id: int
        """

        self._id = id
