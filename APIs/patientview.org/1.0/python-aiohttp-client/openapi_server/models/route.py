# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.lookup import Lookup
from openapi_server import util


class Route(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, controller: str=None, created: datetime=None, display_order: int=None, id: int=None, lookup: Lookup=None, template_url: str=None, title: str=None, url: str=None):
        """Route - a model defined in OpenAPI

        :param controller: The controller of this Route.
        :param created: The created of this Route.
        :param display_order: The display_order of this Route.
        :param id: The id of this Route.
        :param lookup: The lookup of this Route.
        :param template_url: The template_url of this Route.
        :param title: The title of this Route.
        :param url: The url of this Route.
        """
        self.openapi_types = {
            'controller': str,
            'created': datetime,
            'display_order': int,
            'id': int,
            'lookup': Lookup,
            'template_url': str,
            'title': str,
            'url': str
        }

        self.attribute_map = {
            'controller': 'controller',
            'created': 'created',
            'display_order': 'displayOrder',
            'id': 'id',
            'lookup': 'lookup',
            'template_url': 'templateUrl',
            'title': 'title',
            'url': 'url'
        }

        self._controller = controller
        self._created = created
        self._display_order = display_order
        self._id = id
        self._lookup = lookup
        self._template_url = template_url
        self._title = title
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Route':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Route of this Route.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def controller(self):
        """Gets the controller of this Route.


        :return: The controller of this Route.
        :rtype: str
        """
        return self._controller

    @controller.setter
    def controller(self, controller):
        """Sets the controller of this Route.


        :param controller: The controller of this Route.
        :type controller: str
        """

        self._controller = controller

    @property
    def created(self):
        """Gets the created of this Route.


        :return: The created of this Route.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this Route.


        :param created: The created of this Route.
        :type created: datetime
        """

        self._created = created

    @property
    def display_order(self):
        """Gets the display_order of this Route.


        :return: The display_order of this Route.
        :rtype: int
        """
        return self._display_order

    @display_order.setter
    def display_order(self, display_order):
        """Sets the display_order of this Route.


        :param display_order: The display_order of this Route.
        :type display_order: int
        """

        self._display_order = display_order

    @property
    def id(self):
        """Gets the id of this Route.


        :return: The id of this Route.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Route.


        :param id: The id of this Route.
        :type id: int
        """

        self._id = id

    @property
    def lookup(self):
        """Gets the lookup of this Route.


        :return: The lookup of this Route.
        :rtype: Lookup
        """
        return self._lookup

    @lookup.setter
    def lookup(self, lookup):
        """Sets the lookup of this Route.


        :param lookup: The lookup of this Route.
        :type lookup: Lookup
        """

        self._lookup = lookup

    @property
    def template_url(self):
        """Gets the template_url of this Route.


        :return: The template_url of this Route.
        :rtype: str
        """
        return self._template_url

    @template_url.setter
    def template_url(self, template_url):
        """Sets the template_url of this Route.


        :param template_url: The template_url of this Route.
        :type template_url: str
        """

        self._template_url = template_url

    @property
    def title(self):
        """Gets the title of this Route.


        :return: The title of this Route.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Route.


        :param title: The title of this Route.
        :type title: str
        """

        self._title = title

    @property
    def url(self):
        """Gets the url of this Route.


        :return: The url of this Route.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Route.


        :param url: The url of this Route.
        :type url: str
        """

        self._url = url
