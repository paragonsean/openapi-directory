/*
 * PatientView
 * The recommended REST API endpoints to be used when integrating with PatientView
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import org.openapitools.client.model.BaseGroup;
import org.openapitools.client.model.ExternalStandard;
import org.openapitools.client.model.Feature;
import org.openapitools.client.model.Role;
import org.openapitools.client.model.Route;
import org.openapitools.client.model.User;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UserToken
 */
public class UserTokenTest {
    private final UserToken model = new UserToken();

    /**
     * Model tests for UserToken
     */
    @Test
    public void testUserToken() {
        // TODO: test UserToken
    }

    /**
     * Test the property 'auditActions'
     */
    @Test
    public void auditActionsTest() {
        // TODO: test auditActions
    }

    /**
     * Test the property 'checkSecretWord'
     */
    @Test
    public void checkSecretWordTest() {
        // TODO: test checkSecretWord
    }

    /**
     * Test the property 'created'
     */
    @Test
    public void createdTest() {
        // TODO: test created
    }

    /**
     * Test the property 'expiration'
     */
    @Test
    public void expirationTest() {
        // TODO: test expiration
    }

    /**
     * Test the property 'externalStandards'
     */
    @Test
    public void externalStandardsTest() {
        // TODO: test externalStandards
    }

    /**
     * Test the property 'groupFeatures'
     */
    @Test
    public void groupFeaturesTest() {
        // TODO: test groupFeatures
    }

    /**
     * Test the property 'groupMessagingEnabled'
     */
    @Test
    public void groupMessagingEnabledTest() {
        // TODO: test groupMessagingEnabled
    }

    /**
     * Test the property 'mustSetSecretWord'
     */
    @Test
    public void mustSetSecretWordTest() {
        // TODO: test mustSetSecretWord
    }

    /**
     * Test the property 'patientFeatures'
     */
    @Test
    public void patientFeaturesTest() {
        // TODO: test patientFeatures
    }

    /**
     * Test the property 'patientMessagingFeatureTypes'
     */
    @Test
    public void patientMessagingFeatureTypesTest() {
        // TODO: test patientMessagingFeatureTypes
    }

    /**
     * Test the property 'patientRoles'
     */
    @Test
    public void patientRolesTest() {
        // TODO: test patientRoles
    }

    /**
     * Test the property 'routes'
     */
    @Test
    public void routesTest() {
        // TODO: test routes
    }

    /**
     * Test the property 'secretWord'
     */
    @Test
    public void secretWordTest() {
        // TODO: test secretWord
    }

    /**
     * Test the property 'secretWordChoices'
     */
    @Test
    public void secretWordChoicesTest() {
        // TODO: test secretWordChoices
    }

    /**
     * Test the property 'secretWordIndexes'
     */
    @Test
    public void secretWordIndexesTest() {
        // TODO: test secretWordIndexes
    }

    /**
     * Test the property 'secretWordSalt'
     */
    @Test
    public void secretWordSaltTest() {
        // TODO: test secretWordSalt
    }

    /**
     * Test the property 'secretWordToken'
     */
    @Test
    public void secretWordTokenTest() {
        // TODO: test secretWordToken
    }

    /**
     * Test the property 'securityRoles'
     */
    @Test
    public void securityRolesTest() {
        // TODO: test securityRoles
    }

    /**
     * Test the property 'shouldEnterCondition'
     */
    @Test
    public void shouldEnterConditionTest() {
        // TODO: test shouldEnterCondition
    }

    /**
     * Test the property 'staffFeatures'
     */
    @Test
    public void staffFeaturesTest() {
        // TODO: test staffFeatures
    }

    /**
     * Test the property 'staffRoles'
     */
    @Test
    public void staffRolesTest() {
        // TODO: test staffRoles
    }

    /**
     * Test the property 'token'
     */
    @Test
    public void tokenTest() {
        // TODO: test token
    }

    /**
     * Test the property 'user'
     */
    @Test
    public void userTest() {
        // TODO: test user
    }

    /**
     * Test the property 'userFeatures'
     */
    @Test
    public void userFeaturesTest() {
        // TODO: test userFeatures
    }

    /**
     * Test the property 'userGroups'
     */
    @Test
    public void userGroupsTest() {
        // TODO: test userGroups
    }

}
