/*
 * PatientView
 * The recommended REST API endpoints to be used when integrating with PatientView
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Code;
import org.openapitools.client.model.LookupType;
import org.openapitools.client.model.PatientManagement;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PatientManagementControllerApi
 */
@Disabled
public class PatientManagementControllerApiTest {

    private final PatientManagementControllerApi api = new PatientManagementControllerApi();

    /**
     * getPatientManagement
     *
     * getPatientManagement
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPatientManagementTest() throws ApiException {
        Long userId = null;
        Long groupId = null;
        Long identifierId = null;
        PatientManagement response = api.getPatientManagement(userId, groupId, identifierId);
        // TODO: test validations
    }

    /**
     * getPatientManagementDiagnoses
     *
     * getPatientManagementDiagnoses
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPatientManagementDiagnosesTest() throws ApiException {
        List<Code> response = api.getPatientManagementDiagnoses();
        // TODO: test validations
    }

    /**
     * getPatientManagementLookupTypes
     *
     * getPatientManagementLookupTypes
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPatientManagementLookupTypesTest() throws ApiException {
        List<LookupType> response = api.getPatientManagementLookupTypes();
        // TODO: test validations
    }

    /**
     * savePatientManagement
     *
     * savePatientManagement
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void savePatientManagementTest() throws ApiException {
        Long userId = null;
        Long groupId = null;
        Long identifierId = null;
        PatientManagement patientManagement = null;
        api.savePatientManagement(userId, groupId, identifierId, patientManagement);
        // TODO: test validations
    }

    /**
     * savePatientManagementSurgeries
     *
     * savePatientManagementSurgeries
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void savePatientManagementSurgeriesTest() throws ApiException {
        Long userId = null;
        Long groupId = null;
        Long identifierId = null;
        PatientManagement patientManagement = null;
        api.savePatientManagementSurgeries(userId, groupId, identifierId, patientManagement);
        // TODO: test validations
    }

    /**
     * validatePatientManagement
     *
     * validatePatientManagement
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void validatePatientManagementTest() throws ApiException {
        PatientManagement patientManagement = null;
        api.validatePatientManagement(patientManagement);
        // TODO: test validations
    }

}
