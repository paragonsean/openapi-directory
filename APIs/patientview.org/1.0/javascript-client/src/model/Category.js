/**
 * PatientView
 * The recommended REST API endpoints to be used when integrating with PatientView
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Category model module.
 * @module model/Category
 * @version 1.0
 */
class Category {
    /**
     * Constructs a new <code>Category</code>.
     * @alias module:model/Category
     */
    constructor() { 
        
        Category.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Category</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Category} obj Optional instance to populate.
     * @return {module:model/Category} The populated <code>Category</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Category();

            if (data.hasOwnProperty('friendlyDescription')) {
                obj['friendlyDescription'] = ApiClient.convertToType(data['friendlyDescription'], 'String');
            }
            if (data.hasOwnProperty('hidden')) {
                obj['hidden'] = ApiClient.convertToType(data['hidden'], 'Boolean');
            }
            if (data.hasOwnProperty('icd10Description')) {
                obj['icd10Description'] = ApiClient.convertToType(data['icd10Description'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('number')) {
                obj['number'] = ApiClient.convertToType(data['number'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Category</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Category</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['friendlyDescription'] && !(typeof data['friendlyDescription'] === 'string' || data['friendlyDescription'] instanceof String)) {
            throw new Error("Expected the field `friendlyDescription` to be a primitive type in the JSON string but got " + data['friendlyDescription']);
        }
        // ensure the json data is a string
        if (data['icd10Description'] && !(typeof data['icd10Description'] === 'string' || data['icd10Description'] instanceof String)) {
            throw new Error("Expected the field `icd10Description` to be a primitive type in the JSON string but got " + data['icd10Description']);
        }

        return true;
    }


}



/**
 * @member {String} friendlyDescription
 */
Category.prototype['friendlyDescription'] = undefined;

/**
 * @member {Boolean} hidden
 */
Category.prototype['hidden'] = undefined;

/**
 * @member {String} icd10Description
 */
Category.prototype['icd10Description'] = undefined;

/**
 * @member {Number} id
 */
Category.prototype['id'] = undefined;

/**
 * @member {Number} number
 */
Category.prototype['number'] = undefined;






export default Category;

