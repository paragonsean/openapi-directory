/**
 * PatientView
 * The recommended REST API endpoints to be used when integrating with PatientView
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Role model module.
 * @module model/Role
 * @version 1.0
 */
class Role {
    /**
     * Constructs a new <code>Role</code>.
     * @alias module:model/Role
     */
    constructor() { 
        
        Role.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Role</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Role} obj Optional instance to populate.
     * @return {module:model/Role} The populated <code>Role</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Role();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('visible')) {
                obj['visible'] = ApiClient.convertToType(data['visible'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Role</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Role</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * @member {String} description
 */
Role.prototype['description'] = undefined;

/**
 * @member {Number} id
 */
Role.prototype['id'] = undefined;

/**
 * @member {module:model/Role.NameEnum} name
 */
Role.prototype['name'] = undefined;

/**
 * @member {Boolean} visible
 */
Role.prototype['visible'] = undefined;





/**
 * Allowed values for the <code>name</code> property.
 * @enum {String}
 * @readonly
 */
Role['NameEnum'] = {

    /**
     * value: "PATIENT"
     * @const
     */
    "PATIENT": "PATIENT",

    /**
     * value: "UNIT_ADMIN"
     * @const
     */
    "UNIT_ADMIN": "UNIT_ADMIN",

    /**
     * value: "STAFF_ADMIN"
     * @const
     */
    "STAFF_ADMIN": "STAFF_ADMIN",

    /**
     * value: "DISEASE_GROUP_ADMIN"
     * @const
     */
    "DISEASE_GROUP_ADMIN": "DISEASE_GROUP_ADMIN",

    /**
     * value: "SPECIALTY_ADMIN"
     * @const
     */
    "SPECIALTY_ADMIN": "SPECIALTY_ADMIN",

    /**
     * value: "GLOBAL_ADMIN"
     * @const
     */
    "GLOBAL_ADMIN": "GLOBAL_ADMIN",

    /**
     * value: "GP_ADMIN"
     * @const
     */
    "GP_ADMIN": "GP_ADMIN",

    /**
     * value: "MEMBER"
     * @const
     */
    "MEMBER": "MEMBER",

    /**
     * value: "PUBLIC"
     * @const
     */
    "PUBLIC": "PUBLIC",

    /**
     * value: "UNIT_ADMIN_API"
     * @const
     */
    "UNIT_ADMIN_API": "UNIT_ADMIN_API",

    /**
     * value: "IMPORTER"
     * @const
     */
    "IMPORTER": "IMPORTER"
};



export default Role;

