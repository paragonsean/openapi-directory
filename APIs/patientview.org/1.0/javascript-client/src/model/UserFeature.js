/**
 * PatientView
 * The recommended REST API endpoints to be used when integrating with PatientView
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Feature from './Feature';

/**
 * The UserFeature model module.
 * @module model/UserFeature
 * @version 1.0
 */
class UserFeature {
    /**
     * Constructs a new <code>UserFeature</code>.
     * @alias module:model/UserFeature
     */
    constructor() { 
        
        UserFeature.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserFeature</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserFeature} obj Optional instance to populate.
     * @return {module:model/UserFeature} The populated <code>UserFeature</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserFeature();

            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('feature')) {
                obj['feature'] = Feature.constructFromObject(data['feature']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('lastUpdate')) {
                obj['lastUpdate'] = ApiClient.convertToType(data['lastUpdate'], 'Date');
            }
            if (data.hasOwnProperty('optInDate')) {
                obj['optInDate'] = ApiClient.convertToType(data['optInDate'], 'Date');
            }
            if (data.hasOwnProperty('optInHidden')) {
                obj['optInHidden'] = ApiClient.convertToType(data['optInHidden'], 'Boolean');
            }
            if (data.hasOwnProperty('optInStatus')) {
                obj['optInStatus'] = ApiClient.convertToType(data['optInStatus'], 'Boolean');
            }
            if (data.hasOwnProperty('optOutHidden')) {
                obj['optOutHidden'] = ApiClient.convertToType(data['optOutHidden'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserFeature</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserFeature</code>.
     */
    static validateJSON(data) {
        // validate the optional field `feature`
        if (data['feature']) { // data not null
          Feature.validateJSON(data['feature']);
        }

        return true;
    }


}



/**
 * @member {Date} created
 */
UserFeature.prototype['created'] = undefined;

/**
 * @member {module:model/Feature} feature
 */
UserFeature.prototype['feature'] = undefined;

/**
 * @member {Number} id
 */
UserFeature.prototype['id'] = undefined;

/**
 * @member {Date} lastUpdate
 */
UserFeature.prototype['lastUpdate'] = undefined;

/**
 * @member {Date} optInDate
 */
UserFeature.prototype['optInDate'] = undefined;

/**
 * @member {Boolean} optInHidden
 */
UserFeature.prototype['optInHidden'] = undefined;

/**
 * @member {Boolean} optInStatus
 */
UserFeature.prototype['optInStatus'] = undefined;

/**
 * @member {Boolean} optOutHidden
 */
UserFeature.prototype['optOutHidden'] = undefined;






export default UserFeature;

