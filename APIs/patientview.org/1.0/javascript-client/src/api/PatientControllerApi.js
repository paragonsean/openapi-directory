/**
 * PatientView
 * The recommended REST API endpoints to be used when integrating with PatientView
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Patient from '../model/Patient';

/**
* PatientController service.
* @module api/PatientControllerApi
* @version 1.0
*/
export default class PatientControllerApi {

    /**
    * Constructs a new PatientControllerApi. 
    * @alias module:api/PatientControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getBasicPatientDetails operation.
     * @callback module:api/PatientControllerApi~getBasicPatientDetailsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Patient>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Basic Patient Information
     * Given a User ID, get basic patient information for a user from clinical data stored in FHIR
     * @param {Number} userId userId
     * @param {module:api/PatientControllerApi~getBasicPatientDetailsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Patient>}
     */
    getBasicPatientDetails(userId, callback) {
      let postBody = null;
      // verify the required parameter 'userId' is set
      if (userId === undefined || userId === null) {
        throw new Error("Missing the required parameter 'userId' when calling getBasicPatientDetails");
      }

      let pathParams = {
        'userId': userId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [Patient];
      return this.apiClient.callApi(
        '/patient/{userId}/basic', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
