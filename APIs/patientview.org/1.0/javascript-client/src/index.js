/**
 * PatientView
 * The recommended REST API endpoints to be used when integrating with PatientView
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ApiKey from './model/ApiKey';
import BaseGroup from './model/BaseGroup';
import Category from './model/Category';
import Code from './model/Code';
import CodeCategory from './model/CodeCategory';
import CodeExternalStandard from './model/CodeExternalStandard';
import ContactPoint from './model/ContactPoint';
import ContactPointType from './model/ContactPointType';
import Credentials from './model/Credentials';
import EntryLongMapStringListFhirObservation from './model/EntryLongMapStringListFhirObservation';
import EntryStringListFhirObservation from './model/EntryStringListFhirObservation';
import ExternalStandard from './model/ExternalStandard';
import Feature from './model/Feature';
import FhirAllergy from './model/FhirAllergy';
import FhirCondition from './model/FhirCondition';
import FhirContact from './model/FhirContact';
import FhirEncounter from './model/FhirEncounter';
import FhirIdentifier from './model/FhirIdentifier';
import FhirObservation from './model/FhirObservation';
import FhirObservationPage from './model/FhirObservationPage';
import FhirPatient from './model/FhirPatient';
import FhirPractitioner from './model/FhirPractitioner';
import FhirProcedure from './model/FhirProcedure';
import Group from './model/Group';
import GroupFeature from './model/GroupFeature';
import GroupRole from './model/GroupRole';
import Link from './model/Link';
import Location from './model/Location';
import Lookup from './model/Lookup';
import LookupType from './model/LookupType';
import ObservationHeading from './model/ObservationHeading';
import ObservationHeadingGroup from './model/ObservationHeadingGroup';
import Patient from './model/Patient';
import PatientManagement from './model/PatientManagement';
import Role from './model/Role';
import Route from './model/Route';
import User from './model/User';
import UserFeature from './model/UserFeature';
import UserToken from './model/UserToken';
import AuthControllerApi from './api/AuthControllerApi';
import ObservationControllerApi from './api/ObservationControllerApi';
import ObservationHeadingControllerApi from './api/ObservationHeadingControllerApi';
import PatientControllerApi from './api/PatientControllerApi';
import PatientManagementControllerApi from './api/PatientManagementControllerApi';


/**
* The recommended REST API endpoints to be used when integrating with PatientView.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var PatientView = require('index'); // See note below*.
* var xxxSvc = new PatientView.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new PatientView.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new PatientView.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new PatientView.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ApiKey model constructor.
     * @property {module:model/ApiKey}
     */
    ApiKey,

    /**
     * The BaseGroup model constructor.
     * @property {module:model/BaseGroup}
     */
    BaseGroup,

    /**
     * The Category model constructor.
     * @property {module:model/Category}
     */
    Category,

    /**
     * The Code model constructor.
     * @property {module:model/Code}
     */
    Code,

    /**
     * The CodeCategory model constructor.
     * @property {module:model/CodeCategory}
     */
    CodeCategory,

    /**
     * The CodeExternalStandard model constructor.
     * @property {module:model/CodeExternalStandard}
     */
    CodeExternalStandard,

    /**
     * The ContactPoint model constructor.
     * @property {module:model/ContactPoint}
     */
    ContactPoint,

    /**
     * The ContactPointType model constructor.
     * @property {module:model/ContactPointType}
     */
    ContactPointType,

    /**
     * The Credentials model constructor.
     * @property {module:model/Credentials}
     */
    Credentials,

    /**
     * The EntryLongMapStringListFhirObservation model constructor.
     * @property {module:model/EntryLongMapStringListFhirObservation}
     */
    EntryLongMapStringListFhirObservation,

    /**
     * The EntryStringListFhirObservation model constructor.
     * @property {module:model/EntryStringListFhirObservation}
     */
    EntryStringListFhirObservation,

    /**
     * The ExternalStandard model constructor.
     * @property {module:model/ExternalStandard}
     */
    ExternalStandard,

    /**
     * The Feature model constructor.
     * @property {module:model/Feature}
     */
    Feature,

    /**
     * The FhirAllergy model constructor.
     * @property {module:model/FhirAllergy}
     */
    FhirAllergy,

    /**
     * The FhirCondition model constructor.
     * @property {module:model/FhirCondition}
     */
    FhirCondition,

    /**
     * The FhirContact model constructor.
     * @property {module:model/FhirContact}
     */
    FhirContact,

    /**
     * The FhirEncounter model constructor.
     * @property {module:model/FhirEncounter}
     */
    FhirEncounter,

    /**
     * The FhirIdentifier model constructor.
     * @property {module:model/FhirIdentifier}
     */
    FhirIdentifier,

    /**
     * The FhirObservation model constructor.
     * @property {module:model/FhirObservation}
     */
    FhirObservation,

    /**
     * The FhirObservationPage model constructor.
     * @property {module:model/FhirObservationPage}
     */
    FhirObservationPage,

    /**
     * The FhirPatient model constructor.
     * @property {module:model/FhirPatient}
     */
    FhirPatient,

    /**
     * The FhirPractitioner model constructor.
     * @property {module:model/FhirPractitioner}
     */
    FhirPractitioner,

    /**
     * The FhirProcedure model constructor.
     * @property {module:model/FhirProcedure}
     */
    FhirProcedure,

    /**
     * The Group model constructor.
     * @property {module:model/Group}
     */
    Group,

    /**
     * The GroupFeature model constructor.
     * @property {module:model/GroupFeature}
     */
    GroupFeature,

    /**
     * The GroupRole model constructor.
     * @property {module:model/GroupRole}
     */
    GroupRole,

    /**
     * The Link model constructor.
     * @property {module:model/Link}
     */
    Link,

    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location,

    /**
     * The Lookup model constructor.
     * @property {module:model/Lookup}
     */
    Lookup,

    /**
     * The LookupType model constructor.
     * @property {module:model/LookupType}
     */
    LookupType,

    /**
     * The ObservationHeading model constructor.
     * @property {module:model/ObservationHeading}
     */
    ObservationHeading,

    /**
     * The ObservationHeadingGroup model constructor.
     * @property {module:model/ObservationHeadingGroup}
     */
    ObservationHeadingGroup,

    /**
     * The Patient model constructor.
     * @property {module:model/Patient}
     */
    Patient,

    /**
     * The PatientManagement model constructor.
     * @property {module:model/PatientManagement}
     */
    PatientManagement,

    /**
     * The Role model constructor.
     * @property {module:model/Role}
     */
    Role,

    /**
     * The Route model constructor.
     * @property {module:model/Route}
     */
    Route,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserFeature model constructor.
     * @property {module:model/UserFeature}
     */
    UserFeature,

    /**
     * The UserToken model constructor.
     * @property {module:model/UserToken}
     */
    UserToken,

    /**
    * The AuthControllerApi service constructor.
    * @property {module:api/AuthControllerApi}
    */
    AuthControllerApi,

    /**
    * The ObservationControllerApi service constructor.
    * @property {module:api/ObservationControllerApi}
    */
    ObservationControllerApi,

    /**
    * The ObservationHeadingControllerApi service constructor.
    * @property {module:api/ObservationHeadingControllerApi}
    */
    ObservationHeadingControllerApi,

    /**
    * The PatientControllerApi service constructor.
    * @property {module:api/PatientControllerApi}
    */
    PatientControllerApi,

    /**
    * The PatientManagementControllerApi service constructor.
    * @property {module:api/PatientManagementControllerApi}
    */
    PatientManagementControllerApi
};
