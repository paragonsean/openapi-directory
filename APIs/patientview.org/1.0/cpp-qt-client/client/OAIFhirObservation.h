/**
 * PatientView
 * The recommended REST API endpoints to be used when integrating with PatientView
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFhirObservation.h
 *
 * 
 */

#ifndef OAIFhirObservation_H
#define OAIFhirObservation_H

#include <QJsonObject>

#include "OAIGroup.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGroup;

class OAIFhirObservation : public OAIObject {
public:
    OAIFhirObservation();
    OAIFhirObservation(QString json);
    ~OAIFhirObservation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getApplies() const;
    void setApplies(const QDateTime &applies);
    bool is_applies_Set() const;
    bool is_applies_Valid() const;

    QString getBodySite() const;
    void setBodySite(const QString &body_site);
    bool is_body_site_Set() const;
    bool is_body_site_Valid() const;

    QString getComments() const;
    void setComments(const QString &comments);
    bool is_comments_Set() const;
    bool is_comments_Valid() const;

    QString getComparator() const;
    void setComparator(const QString &comparator);
    bool is_comparator_Set() const;
    bool is_comparator_Valid() const;

    QString getDiagram() const;
    void setDiagram(const QString &diagram);
    bool is_diagram_Set() const;
    bool is_diagram_Valid() const;

    OAIGroup getGroup() const;
    void setGroup(const OAIGroup &group);
    bool is_group_Set() const;
    bool is_group_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getIdentifier() const;
    void setIdentifier(const QString &identifier);
    bool is_identifier_Set() const;
    bool is_identifier_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getTemporaryUuid() const;
    void setTemporaryUuid(const QString &temporary_uuid);
    bool is_temporary_uuid_Set() const;
    bool is_temporary_uuid_Valid() const;

    QString getUnits() const;
    void setUnits(const QString &units);
    bool is_units_Set() const;
    bool is_units_Valid() const;

    QString getValue() const;
    void setValue(const QString &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_applies;
    bool m_applies_isSet;
    bool m_applies_isValid;

    QString m_body_site;
    bool m_body_site_isSet;
    bool m_body_site_isValid;

    QString m_comments;
    bool m_comments_isSet;
    bool m_comments_isValid;

    QString m_comparator;
    bool m_comparator_isSet;
    bool m_comparator_isValid;

    QString m_diagram;
    bool m_diagram_isSet;
    bool m_diagram_isValid;

    OAIGroup m_group;
    bool m_group_isSet;
    bool m_group_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_identifier;
    bool m_identifier_isSet;
    bool m_identifier_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_temporary_uuid;
    bool m_temporary_uuid_isSet;
    bool m_temporary_uuid_isValid;

    QString m_units;
    bool m_units_isSet;
    bool m_units_isValid;

    QString m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFhirObservation)

#endif // OAIFhirObservation_H
