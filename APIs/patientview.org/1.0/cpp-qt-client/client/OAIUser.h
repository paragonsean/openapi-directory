/**
 * PatientView
 * The recommended REST API endpoints to be used when integrating with PatientView
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUser.h
 *
 * 
 */

#ifndef OAIUser_H
#define OAIUser_H

#include <QJsonObject>

#include "OAIApiKey.h"
#include "OAIBaseGroup.h"
#include "OAIGroupRole.h"
#include "OAIObject.h"
#include "OAIUserFeature.h"
#include <QDateTime>
#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApiKey;
class OAIGroupRole;
class OAIBaseGroup;
class OAIUserFeature;

class OAIUser : public OAIObject {
public:
    OAIUser();
    OAIUser(QString json);
    ~OAIUser() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIApiKey getApiKey() const;
    void setApiKey(const OAIApiKey &api_key);
    bool is_api_key_Set() const;
    bool is_api_key_Valid() const;

    bool isCanSwitchUser() const;
    void setCanSwitchUser(const bool &can_switch_user);
    bool is_can_switch_user_Set() const;
    bool is_can_switch_user_Valid() const;

    bool isChangePassword() const;
    void setChangePassword(const bool &change_password);
    bool is_change_password_Set() const;
    bool is_change_password_Valid() const;

    QString getContactNumber() const;
    void setContactNumber(const QString &contact_number);
    bool is_contact_number_Set() const;
    bool is_contact_number_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QDateTime getCurrentLogin() const;
    void setCurrentLogin(const QDateTime &current_login);
    bool is_current_login_Set() const;
    bool is_current_login_Valid() const;

    QString getCurrentLoginIpAddress() const;
    void setCurrentLoginIpAddress(const QString &current_login_ip_address);
    bool is_current_login_ip_address_Set() const;
    bool is_current_login_ip_address_Valid() const;

    QDateTime getDateOfBirth() const;
    void setDateOfBirth(const QDateTime &date_of_birth);
    bool is_date_of_birth_Set() const;
    bool is_date_of_birth_Valid() const;

    bool isDeleted() const;
    void setDeleted(const bool &deleted);
    bool is_deleted_Set() const;
    bool is_deleted_Valid() const;

    bool isDummy() const;
    void setDummy(const bool &dummy);
    bool is_dummy_Set() const;
    bool is_dummy_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    bool isEmailVerified() const;
    void setEmailVerified(const bool &email_verified);
    bool is_email_verified_Set() const;
    bool is_email_verified_Valid() const;

    QString getForename() const;
    void setForename(const QString &forename);
    bool is_forename_Set() const;
    bool is_forename_Valid() const;

    QSet<OAIGroupRole> getGroupRoles() const;
    void setGroupRoles(const QSet<OAIGroupRole> &group_roles);
    bool is_group_roles_Set() const;
    bool is_group_roles_Valid() const;

    bool isHideSecretWordNotification() const;
    void setHideSecretWordNotification(const bool &hide_secret_word_notification);
    bool is_hide_secret_word_notification_Set() const;
    bool is_hide_secret_word_notification_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QSet<OAIObject> getIdentifiers() const;
    void setIdentifiers(const QSet<OAIObject> &identifiers);
    bool is_identifiers_Set() const;
    bool is_identifiers_Valid() const;

    QDateTime getLastLogin() const;
    void setLastLogin(const QDateTime &last_login);
    bool is_last_login_Set() const;
    bool is_last_login_Valid() const;

    QString getLastLoginIpAddress() const;
    void setLastLoginIpAddress(const QString &last_login_ip_address);
    bool is_last_login_ip_address_Set() const;
    bool is_last_login_ip_address_Valid() const;

    OAIBaseGroup getLatestDataReceivedBy() const;
    void setLatestDataReceivedBy(const OAIBaseGroup &latest_data_received_by);
    bool is_latest_data_received_by_Set() const;
    bool is_latest_data_received_by_Valid() const;

    QDateTime getLatestDataReceivedDate() const;
    void setLatestDataReceivedDate(const QDateTime &latest_data_received_date);
    bool is_latest_data_received_date_Set() const;
    bool is_latest_data_received_date_Valid() const;

    bool isLocked() const;
    void setLocked(const bool &locked);
    bool is_locked_Set() const;
    bool is_locked_Valid() const;

    QString getPicture() const;
    void setPicture(const QString &picture);
    bool is_picture_Set() const;
    bool is_picture_Valid() const;

    QString getRoleDescription() const;
    void setRoleDescription(const QString &role_description);
    bool is_role_description_Set() const;
    bool is_role_description_Valid() const;

    bool isSecretWordIsSet() const;
    void setSecretWordIsSet(const bool &secret_word_is_set);
    bool is_secret_word_is_set_Set() const;
    bool is_secret_word_is_set_Valid() const;

    QString getSurname() const;
    void setSurname(const QString &surname);
    bool is_surname_Set() const;
    bool is_surname_Valid() const;

    QSet<OAIUserFeature> getUserFeatures() const;
    void setUserFeatures(const QSet<OAIUserFeature> &user_features);
    bool is_user_features_Set() const;
    bool is_user_features_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIApiKey m_api_key;
    bool m_api_key_isSet;
    bool m_api_key_isValid;

    bool m_can_switch_user;
    bool m_can_switch_user_isSet;
    bool m_can_switch_user_isValid;

    bool m_change_password;
    bool m_change_password_isSet;
    bool m_change_password_isValid;

    QString m_contact_number;
    bool m_contact_number_isSet;
    bool m_contact_number_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QDateTime m_current_login;
    bool m_current_login_isSet;
    bool m_current_login_isValid;

    QString m_current_login_ip_address;
    bool m_current_login_ip_address_isSet;
    bool m_current_login_ip_address_isValid;

    QDateTime m_date_of_birth;
    bool m_date_of_birth_isSet;
    bool m_date_of_birth_isValid;

    bool m_deleted;
    bool m_deleted_isSet;
    bool m_deleted_isValid;

    bool m_dummy;
    bool m_dummy_isSet;
    bool m_dummy_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    bool m_email_verified;
    bool m_email_verified_isSet;
    bool m_email_verified_isValid;

    QString m_forename;
    bool m_forename_isSet;
    bool m_forename_isValid;

    QSet<OAIGroupRole> m_group_roles;
    bool m_group_roles_isSet;
    bool m_group_roles_isValid;

    bool m_hide_secret_word_notification;
    bool m_hide_secret_word_notification_isSet;
    bool m_hide_secret_word_notification_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QSet<OAIObject> m_identifiers;
    bool m_identifiers_isSet;
    bool m_identifiers_isValid;

    QDateTime m_last_login;
    bool m_last_login_isSet;
    bool m_last_login_isValid;

    QString m_last_login_ip_address;
    bool m_last_login_ip_address_isSet;
    bool m_last_login_ip_address_isValid;

    OAIBaseGroup m_latest_data_received_by;
    bool m_latest_data_received_by_isSet;
    bool m_latest_data_received_by_isValid;

    QDateTime m_latest_data_received_date;
    bool m_latest_data_received_date_isSet;
    bool m_latest_data_received_date_isValid;

    bool m_locked;
    bool m_locked_isSet;
    bool m_locked_isValid;

    QString m_picture;
    bool m_picture_isSet;
    bool m_picture_isValid;

    QString m_role_description;
    bool m_role_description_isSet;
    bool m_role_description_isValid;

    bool m_secret_word_is_set;
    bool m_secret_word_is_set_isSet;
    bool m_secret_word_is_set_isValid;

    QString m_surname;
    bool m_surname_isSet;
    bool m_surname_isValid;

    QSet<OAIUserFeature> m_user_features;
    bool m_user_features_isSet;
    bool m_user_features_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUser)

#endif // OAIUser_H
