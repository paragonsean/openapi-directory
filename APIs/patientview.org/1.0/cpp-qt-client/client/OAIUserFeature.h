/**
 * PatientView
 * The recommended REST API endpoints to be used when integrating with PatientView
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserFeature.h
 *
 * 
 */

#ifndef OAIUserFeature_H
#define OAIUserFeature_H

#include <QJsonObject>

#include "OAIFeature.h"
#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFeature;

class OAIUserFeature : public OAIObject {
public:
    OAIUserFeature();
    OAIUserFeature(QString json);
    ~OAIUserFeature() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    OAIFeature getFeature() const;
    void setFeature(const OAIFeature &feature);
    bool is_feature_Set() const;
    bool is_feature_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getLastUpdate() const;
    void setLastUpdate(const QDateTime &last_update);
    bool is_last_update_Set() const;
    bool is_last_update_Valid() const;

    QDateTime getOptInDate() const;
    void setOptInDate(const QDateTime &opt_in_date);
    bool is_opt_in_date_Set() const;
    bool is_opt_in_date_Valid() const;

    bool isOptInHidden() const;
    void setOptInHidden(const bool &opt_in_hidden);
    bool is_opt_in_hidden_Set() const;
    bool is_opt_in_hidden_Valid() const;

    bool isOptInStatus() const;
    void setOptInStatus(const bool &opt_in_status);
    bool is_opt_in_status_Set() const;
    bool is_opt_in_status_Valid() const;

    bool isOptOutHidden() const;
    void setOptOutHidden(const bool &opt_out_hidden);
    bool is_opt_out_hidden_Set() const;
    bool is_opt_out_hidden_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    OAIFeature m_feature;
    bool m_feature_isSet;
    bool m_feature_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_last_update;
    bool m_last_update_isSet;
    bool m_last_update_isValid;

    QDateTime m_opt_in_date;
    bool m_opt_in_date_isSet;
    bool m_opt_in_date_isValid;

    bool m_opt_in_hidden;
    bool m_opt_in_hidden_isSet;
    bool m_opt_in_hidden_isValid;

    bool m_opt_in_status;
    bool m_opt_in_status_isSet;
    bool m_opt_in_status_isValid;

    bool m_opt_out_hidden;
    bool m_opt_out_hidden_isSet;
    bool m_opt_out_hidden_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserFeature)

#endif // OAIUserFeature_H
