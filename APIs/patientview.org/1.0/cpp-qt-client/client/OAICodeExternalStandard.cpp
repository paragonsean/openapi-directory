/**
 * PatientView
 * The recommended REST API endpoints to be used when integrating with PatientView
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICodeExternalStandard.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICodeExternalStandard::OAICodeExternalStandard(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICodeExternalStandard::OAICodeExternalStandard() {
    this->initializeModel();
}

OAICodeExternalStandard::~OAICodeExternalStandard() {}

void OAICodeExternalStandard::initializeModel() {

    m_code_string_isSet = false;
    m_code_string_isValid = false;

    m_external_standard_isSet = false;
    m_external_standard_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;
}

void OAICodeExternalStandard::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICodeExternalStandard::fromJsonObject(QJsonObject json) {

    m_code_string_isValid = ::OpenAPI::fromJsonValue(m_code_string, json[QString("codeString")]);
    m_code_string_isSet = !json[QString("codeString")].isNull() && m_code_string_isValid;

    m_external_standard_isValid = ::OpenAPI::fromJsonValue(m_external_standard, json[QString("externalStandard")]);
    m_external_standard_isSet = !json[QString("externalStandard")].isNull() && m_external_standard_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;
}

QString OAICodeExternalStandard::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICodeExternalStandard::asJsonObject() const {
    QJsonObject obj;
    if (m_code_string_isSet) {
        obj.insert(QString("codeString"), ::OpenAPI::toJsonValue(m_code_string));
    }
    if (m_external_standard.isSet()) {
        obj.insert(QString("externalStandard"), ::OpenAPI::toJsonValue(m_external_standard));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    return obj;
}

QString OAICodeExternalStandard::getCodeString() const {
    return m_code_string;
}
void OAICodeExternalStandard::setCodeString(const QString &code_string) {
    m_code_string = code_string;
    m_code_string_isSet = true;
}

bool OAICodeExternalStandard::is_code_string_Set() const{
    return m_code_string_isSet;
}

bool OAICodeExternalStandard::is_code_string_Valid() const{
    return m_code_string_isValid;
}

OAIExternalStandard OAICodeExternalStandard::getExternalStandard() const {
    return m_external_standard;
}
void OAICodeExternalStandard::setExternalStandard(const OAIExternalStandard &external_standard) {
    m_external_standard = external_standard;
    m_external_standard_isSet = true;
}

bool OAICodeExternalStandard::is_external_standard_Set() const{
    return m_external_standard_isSet;
}

bool OAICodeExternalStandard::is_external_standard_Valid() const{
    return m_external_standard_isValid;
}

qint64 OAICodeExternalStandard::getId() const {
    return m_id;
}
void OAICodeExternalStandard::setId(const qint64 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICodeExternalStandard::is_id_Set() const{
    return m_id_isSet;
}

bool OAICodeExternalStandard::is_id_Valid() const{
    return m_id_isValid;
}

bool OAICodeExternalStandard::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_code_string_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_standard.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICodeExternalStandard::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
