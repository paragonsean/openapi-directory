/**
 * PatientView
 * The recommended REST API endpoints to be used when integrating with PatientView
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICode.h
 *
 * 
 */

#ifndef OAICode_H
#define OAICode_H

#include <QJsonObject>

#include "OAICodeCategory.h"
#include "OAICodeExternalStandard.h"
#include "OAILink.h"
#include "OAILookup.h"
#include <QDateTime>
#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICodeCategory;
class OAILookup;
class OAICodeExternalStandard;
class OAILink;

class OAICode : public OAIObject {
public:
    OAICode();
    OAICode(QString json);
    ~OAICode() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    QSet<OAICodeCategory> getCodeCategories() const;
    void setCodeCategories(const QSet<OAICodeCategory> &code_categories);
    bool is_code_categories_Set() const;
    bool is_code_categories_Valid() const;

    OAILookup getCodeType() const;
    void setCodeType(const OAILookup &code_type);
    bool is_code_type_Set() const;
    bool is_code_type_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getDisplayOrder() const;
    void setDisplayOrder(const qint32 &display_order);
    bool is_display_order_Set() const;
    bool is_display_order_Valid() const;

    QSet<OAICodeExternalStandard> getExternalStandards() const;
    void setExternalStandards(const QSet<OAICodeExternalStandard> &external_standards);
    bool is_external_standards_Set() const;
    bool is_external_standards_Valid() const;

    QString getFullDescription() const;
    void setFullDescription(const QString &full_description);
    bool is_full_description_Set() const;
    bool is_full_description_Valid() const;

    bool isHideFromPatients() const;
    void setHideFromPatients(const bool &hide_from_patients);
    bool is_hide_from_patients_Set() const;
    bool is_hide_from_patients_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getLastUpdate() const;
    void setLastUpdate(const QDateTime &last_update);
    bool is_last_update_Set() const;
    bool is_last_update_Valid() const;

    QSet<OAILink> getLinks() const;
    void setLinks(const QSet<OAILink> &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QString getPatientFriendlyName() const;
    void setPatientFriendlyName(const QString &patient_friendly_name);
    bool is_patient_friendly_name_Set() const;
    bool is_patient_friendly_name_Valid() const;

    bool isRemovedExternally() const;
    void setRemovedExternally(const bool &removed_externally);
    bool is_removed_externally_Set() const;
    bool is_removed_externally_Valid() const;

    QString getSourceType() const;
    void setSourceType(const QString &source_type);
    bool is_source_type_Set() const;
    bool is_source_type_Valid() const;

    OAILookup getStandardType() const;
    void setStandardType(const OAILookup &standard_type);
    bool is_standard_type_Set() const;
    bool is_standard_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    QSet<OAICodeCategory> m_code_categories;
    bool m_code_categories_isSet;
    bool m_code_categories_isValid;

    OAILookup m_code_type;
    bool m_code_type_isSet;
    bool m_code_type_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_display_order;
    bool m_display_order_isSet;
    bool m_display_order_isValid;

    QSet<OAICodeExternalStandard> m_external_standards;
    bool m_external_standards_isSet;
    bool m_external_standards_isValid;

    QString m_full_description;
    bool m_full_description_isSet;
    bool m_full_description_isValid;

    bool m_hide_from_patients;
    bool m_hide_from_patients_isSet;
    bool m_hide_from_patients_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_last_update;
    bool m_last_update_isSet;
    bool m_last_update_isValid;

    QSet<OAILink> m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QString m_patient_friendly_name;
    bool m_patient_friendly_name_isSet;
    bool m_patient_friendly_name_isValid;

    bool m_removed_externally;
    bool m_removed_externally_isSet;
    bool m_removed_externally_isValid;

    QString m_source_type;
    bool m_source_type_isSet;
    bool m_source_type_isValid;

    OAILookup m_standard_type;
    bool m_standard_type_isSet;
    bool m_standard_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICode)

#endif // OAICode_H
