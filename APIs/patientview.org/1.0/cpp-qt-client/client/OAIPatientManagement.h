/**
 * PatientView
 * The recommended REST API endpoints to be used when integrating with PatientView
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPatientManagement.h
 *
 * 
 */

#ifndef OAIPatientManagement_H
#define OAIPatientManagement_H

#include <QJsonObject>

#include "OAIFhirCondition.h"
#include "OAIFhirEncounter.h"
#include "OAIFhirObservation.h"
#include "OAIFhirPatient.h"
#include "OAIFhirPractitioner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFhirCondition;
class OAIFhirEncounter;
class OAIFhirObservation;
class OAIFhirPatient;
class OAIFhirPractitioner;

class OAIPatientManagement : public OAIObject {
public:
    OAIPatientManagement();
    OAIPatientManagement(QString json);
    ~OAIPatientManagement() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFhirCondition getCondition() const;
    void setCondition(const OAIFhirCondition &condition);
    bool is_condition_Set() const;
    bool is_condition_Valid() const;

    QList<OAIFhirEncounter> getEncounters() const;
    void setEncounters(const QList<OAIFhirEncounter> &encounters);
    bool is_encounters_Set() const;
    bool is_encounters_Valid() const;

    QString getGroupCode() const;
    void setGroupCode(const QString &group_code);
    bool is_group_code_Set() const;
    bool is_group_code_Valid() const;

    QString getIdentifier() const;
    void setIdentifier(const QString &identifier);
    bool is_identifier_Set() const;
    bool is_identifier_Valid() const;

    QList<OAIFhirObservation> getObservations() const;
    void setObservations(const QList<OAIFhirObservation> &observations);
    bool is_observations_Set() const;
    bool is_observations_Valid() const;

    OAIFhirPatient getPatient() const;
    void setPatient(const OAIFhirPatient &patient);
    bool is_patient_Set() const;
    bool is_patient_Valid() const;

    QList<OAIFhirPractitioner> getPractitioners() const;
    void setPractitioners(const QList<OAIFhirPractitioner> &practitioners);
    bool is_practitioners_Set() const;
    bool is_practitioners_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFhirCondition m_condition;
    bool m_condition_isSet;
    bool m_condition_isValid;

    QList<OAIFhirEncounter> m_encounters;
    bool m_encounters_isSet;
    bool m_encounters_isValid;

    QString m_group_code;
    bool m_group_code_isSet;
    bool m_group_code_isValid;

    QString m_identifier;
    bool m_identifier_isSet;
    bool m_identifier_isValid;

    QList<OAIFhirObservation> m_observations;
    bool m_observations_isSet;
    bool m_observations_isValid;

    OAIFhirPatient m_patient;
    bool m_patient_isSet;
    bool m_patient_isValid;

    QList<OAIFhirPractitioner> m_practitioners;
    bool m_practitioners_isSet;
    bool m_practitioners_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPatientManagement)

#endif // OAIPatientManagement_H
