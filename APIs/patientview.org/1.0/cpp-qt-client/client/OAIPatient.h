/**
 * PatientView
 * The recommended REST API endpoints to be used when integrating with PatientView
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPatient.h
 *
 * 
 */

#ifndef OAIPatient_H
#define OAIPatient_H

#include <QJsonObject>

#include "OAICode.h"
#include "OAIFhirAllergy.h"
#include "OAIFhirCondition.h"
#include "OAIFhirEncounter.h"
#include "OAIFhirObservation.h"
#include "OAIFhirPatient.h"
#include "OAIFhirPractitioner.h"
#include "OAIGroup.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICode;
class OAIFhirAllergy;
class OAIFhirCondition;
class OAIFhirEncounter;
class OAIFhirObservation;
class OAIFhirPatient;
class OAIFhirPractitioner;
class OAIGroup;

class OAIPatient : public OAIObject {
public:
    OAIPatient();
    OAIPatient(QString json);
    ~OAIPatient() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICode> getDiagnosisCodes() const;
    void setDiagnosisCodes(const QList<OAICode> &diagnosis_codes);
    bool is_diagnosis_codes_Set() const;
    bool is_diagnosis_codes_Valid() const;

    QList<OAIFhirAllergy> getFhirAllergies() const;
    void setFhirAllergies(const QList<OAIFhirAllergy> &fhir_allergies);
    bool is_fhir_allergies_Set() const;
    bool is_fhir_allergies_Valid() const;

    QList<OAIFhirCondition> getFhirConditions() const;
    void setFhirConditions(const QList<OAIFhirCondition> &fhir_conditions);
    bool is_fhir_conditions_Set() const;
    bool is_fhir_conditions_Valid() const;

    QList<OAIFhirEncounter> getFhirEncounters() const;
    void setFhirEncounters(const QList<OAIFhirEncounter> &fhir_encounters);
    bool is_fhir_encounters_Set() const;
    bool is_fhir_encounters_Valid() const;

    QList<OAIFhirObservation> getFhirObservations() const;
    void setFhirObservations(const QList<OAIFhirObservation> &fhir_observations);
    bool is_fhir_observations_Set() const;
    bool is_fhir_observations_Valid() const;

    OAIFhirPatient getFhirPatient() const;
    void setFhirPatient(const OAIFhirPatient &fhir_patient);
    bool is_fhir_patient_Set() const;
    bool is_fhir_patient_Valid() const;

    QList<OAIFhirPractitioner> getFhirPractitioners() const;
    void setFhirPractitioners(const QList<OAIFhirPractitioner> &fhir_practitioners);
    bool is_fhir_practitioners_Set() const;
    bool is_fhir_practitioners_Valid() const;

    OAIGroup getGroup() const;
    void setGroup(const OAIGroup &group);
    bool is_group_Set() const;
    bool is_group_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICode> m_diagnosis_codes;
    bool m_diagnosis_codes_isSet;
    bool m_diagnosis_codes_isValid;

    QList<OAIFhirAllergy> m_fhir_allergies;
    bool m_fhir_allergies_isSet;
    bool m_fhir_allergies_isValid;

    QList<OAIFhirCondition> m_fhir_conditions;
    bool m_fhir_conditions_isSet;
    bool m_fhir_conditions_isValid;

    QList<OAIFhirEncounter> m_fhir_encounters;
    bool m_fhir_encounters_isSet;
    bool m_fhir_encounters_isValid;

    QList<OAIFhirObservation> m_fhir_observations;
    bool m_fhir_observations_isSet;
    bool m_fhir_observations_isValid;

    OAIFhirPatient m_fhir_patient;
    bool m_fhir_patient_isSet;
    bool m_fhir_patient_isValid;

    QList<OAIFhirPractitioner> m_fhir_practitioners;
    bool m_fhir_practitioners_isSet;
    bool m_fhir_practitioners_isValid;

    OAIGroup m_group;
    bool m_group_isSet;
    bool m_group_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPatient)

#endif // OAIPatient_H
