/**
 * PatientView
 * The recommended REST API endpoints to be used when integrating with PatientView
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFhirAllergy.h
 *
 * 
 */

#ifndef OAIFhirAllergy_H
#define OAIFhirAllergy_H

#include <QJsonObject>

#include "OAIGroup.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGroup;

class OAIFhirAllergy : public OAIObject {
public:
    OAIFhirAllergy();
    OAIFhirAllergy(QString json);
    ~OAIFhirAllergy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConfidenceLevel() const;
    void setConfidenceLevel(const QString &confidence_level);
    bool is_confidence_level_Set() const;
    bool is_confidence_level_Valid() const;

    OAIGroup getGroup() const;
    void setGroup(const OAIGroup &group);
    bool is_group_Set() const;
    bool is_group_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getIdentifier() const;
    void setIdentifier(const QString &identifier);
    bool is_identifier_Set() const;
    bool is_identifier_Valid() const;

    QString getInfoSource() const;
    void setInfoSource(const QString &info_source);
    bool is_info_source_Set() const;
    bool is_info_source_Valid() const;

    QString getReaction() const;
    void setReaction(const QString &reaction);
    bool is_reaction_Set() const;
    bool is_reaction_Valid() const;

    QDateTime getRecordedDate() const;
    void setRecordedDate(const QDateTime &recorded_date);
    bool is_recorded_date_Set() const;
    bool is_recorded_date_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getSubstance() const;
    void setSubstance(const QString &substance);
    bool is_substance_Set() const;
    bool is_substance_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_confidence_level;
    bool m_confidence_level_isSet;
    bool m_confidence_level_isValid;

    OAIGroup m_group;
    bool m_group_isSet;
    bool m_group_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_identifier;
    bool m_identifier_isSet;
    bool m_identifier_isValid;

    QString m_info_source;
    bool m_info_source_isSet;
    bool m_info_source_isValid;

    QString m_reaction;
    bool m_reaction_isSet;
    bool m_reaction_isValid;

    QDateTime m_recorded_date;
    bool m_recorded_date_isSet;
    bool m_recorded_date_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_substance;
    bool m_substance_isSet;
    bool m_substance_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFhirAllergy)

#endif // OAIFhirAllergy_H
