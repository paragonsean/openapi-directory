/**
 * API docs | logoraisr.com
 * <p style=\"font-size:110%;\">Dig into our logoraisr API reference documentation. We also offer an OpenAPI specification to allow easy integration into your systems. You can download the json file by clicking on the download button.<p><br><p style=\"font-size:110%; font-weight:bold\">OpenAPI 2.0 Validation Status</p><img src=\"https://online.swagger.io/validator?url=https://docs.logoraisr.com/\">
 *
 * The version of the OpenAPI document: v1
 * Contact: support@logoraisr.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResultResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResultResponse::OAIResultResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResultResponse::OAIResultResponse() {
    this->initializeModel();
}

OAIResultResponse::~OAIResultResponse() {}

void OAIResultResponse::initializeModel() {

    m_result_file_url_isSet = false;
    m_result_file_url_isValid = false;
}

void OAIResultResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResultResponse::fromJsonObject(QJsonObject json) {

    m_result_file_url_isValid = ::OpenAPI::fromJsonValue(m_result_file_url, json[QString("result_file_url")]);
    m_result_file_url_isSet = !json[QString("result_file_url")].isNull() && m_result_file_url_isValid;
}

QString OAIResultResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResultResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_result_file_url_isSet) {
        obj.insert(QString("result_file_url"), ::OpenAPI::toJsonValue(m_result_file_url));
    }
    return obj;
}

QString OAIResultResponse::getResultFileUrl() const {
    return m_result_file_url;
}
void OAIResultResponse::setResultFileUrl(const QString &result_file_url) {
    m_result_file_url = result_file_url;
    m_result_file_url_isSet = true;
}

bool OAIResultResponse::is_result_file_url_Set() const{
    return m_result_file_url_isSet;
}

bool OAIResultResponse::is_result_file_url_Valid() const{
    return m_result_file_url_isValid;
}

bool OAIResultResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_result_file_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResultResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
