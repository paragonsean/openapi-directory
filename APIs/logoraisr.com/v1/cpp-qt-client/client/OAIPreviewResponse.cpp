/**
 * API docs | logoraisr.com
 * <p style=\"font-size:110%;\">Dig into our logoraisr API reference documentation. We also offer an OpenAPI specification to allow easy integration into your systems. You can download the json file by clicking on the download button.<p><br><p style=\"font-size:110%; font-weight:bold\">OpenAPI 2.0 Validation Status</p><img src=\"https://online.swagger.io/validator?url=https://docs.logoraisr.com/\">
 *
 * The version of the OpenAPI document: v1
 * Contact: support@logoraisr.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPreviewResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPreviewResponse::OAIPreviewResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPreviewResponse::OAIPreviewResponse() {
    this->initializeModel();
}

OAIPreviewResponse::~OAIPreviewResponse() {}

void OAIPreviewResponse::initializeModel() {

    m_preview_img_url_isSet = false;
    m_preview_img_url_isValid = false;
}

void OAIPreviewResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPreviewResponse::fromJsonObject(QJsonObject json) {

    m_preview_img_url_isValid = ::OpenAPI::fromJsonValue(m_preview_img_url, json[QString("preview_img_url")]);
    m_preview_img_url_isSet = !json[QString("preview_img_url")].isNull() && m_preview_img_url_isValid;
}

QString OAIPreviewResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPreviewResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_preview_img_url_isSet) {
        obj.insert(QString("preview_img_url"), ::OpenAPI::toJsonValue(m_preview_img_url));
    }
    return obj;
}

QString OAIPreviewResponse::getPreviewImgUrl() const {
    return m_preview_img_url;
}
void OAIPreviewResponse::setPreviewImgUrl(const QString &preview_img_url) {
    m_preview_img_url = preview_img_url;
    m_preview_img_url_isSet = true;
}

bool OAIPreviewResponse::is_preview_img_url_Set() const{
    return m_preview_img_url_isSet;
}

bool OAIPreviewResponse::is_preview_img_url_Valid() const{
    return m_preview_img_url_isValid;
}

bool OAIPreviewResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_preview_img_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPreviewResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
