/**
 * API docs | logoraisr.com
 * <p style=\"font-size:110%;\">Dig into our logoraisr API reference documentation. We also offer an OpenAPI specification to allow easy integration into your systems. You can download the json file by clicking on the download button.<p><br><p style=\"font-size:110%; font-weight:bold\">OpenAPI 2.0 Validation Status</p><img src=\"https://online.swagger.io/validator?url=https://docs.logoraisr.com/\">
 *
 * The version of the OpenAPI document: v1
 * Contact: support@logoraisr.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProject::OAIProject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProject::OAIProject() {
    this->initializeModel();
}

OAIProject::~OAIProject() {}

void OAIProject::initializeModel() {

    m_created_isSet = false;
    m_created_isValid = false;

    m_file_id_isSet = false;
    m_file_id_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_paypal_payment_id_isSet = false;
    m_paypal_payment_id_isValid = false;

    m_process_isSet = false;
    m_process_isValid = false;

    m_process_id_isSet = false;
    m_process_id_isValid = false;

    m_project_number_isSet = false;
    m_project_number_isValid = false;

    m_project_title_isSet = false;
    m_project_title_isValid = false;

    m_result_file_id_isSet = false;
    m_result_file_id_isValid = false;
}

void OAIProject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProject::fromJsonObject(QJsonObject json) {

    m_created_isValid = ::OpenAPI::fromJsonValue(m_created, json[QString("created")]);
    m_created_isSet = !json[QString("created")].isNull() && m_created_isValid;

    m_file_id_isValid = ::OpenAPI::fromJsonValue(m_file_id, json[QString("file_id")]);
    m_file_id_isSet = !json[QString("file_id")].isNull() && m_file_id_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_paypal_payment_id_isValid = ::OpenAPI::fromJsonValue(m_paypal_payment_id, json[QString("paypal_payment_id")]);
    m_paypal_payment_id_isSet = !json[QString("paypal_payment_id")].isNull() && m_paypal_payment_id_isValid;

    m_process_isValid = ::OpenAPI::fromJsonValue(m_process, json[QString("process")]);
    m_process_isSet = !json[QString("process")].isNull() && m_process_isValid;

    m_process_id_isValid = ::OpenAPI::fromJsonValue(m_process_id, json[QString("process_id")]);
    m_process_id_isSet = !json[QString("process_id")].isNull() && m_process_id_isValid;

    m_project_number_isValid = ::OpenAPI::fromJsonValue(m_project_number, json[QString("project_number")]);
    m_project_number_isSet = !json[QString("project_number")].isNull() && m_project_number_isValid;

    m_project_title_isValid = ::OpenAPI::fromJsonValue(m_project_title, json[QString("project_title")]);
    m_project_title_isSet = !json[QString("project_title")].isNull() && m_project_title_isValid;

    m_result_file_id_isValid = ::OpenAPI::fromJsonValue(m_result_file_id, json[QString("result_file_id")]);
    m_result_file_id_isSet = !json[QString("result_file_id")].isNull() && m_result_file_id_isValid;
}

QString OAIProject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProject::asJsonObject() const {
    QJsonObject obj;
    if (m_created_isSet) {
        obj.insert(QString("created"), ::OpenAPI::toJsonValue(m_created));
    }
    if (m_file_id_isSet) {
        obj.insert(QString("file_id"), ::OpenAPI::toJsonValue(m_file_id));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_paypal_payment_id_isSet) {
        obj.insert(QString("paypal_payment_id"), ::OpenAPI::toJsonValue(m_paypal_payment_id));
    }
    if (m_process.isSet()) {
        obj.insert(QString("process"), ::OpenAPI::toJsonValue(m_process));
    }
    if (m_process_id_isSet) {
        obj.insert(QString("process_id"), ::OpenAPI::toJsonValue(m_process_id));
    }
    if (m_project_number_isSet) {
        obj.insert(QString("project_number"), ::OpenAPI::toJsonValue(m_project_number));
    }
    if (m_project_title_isSet) {
        obj.insert(QString("project_title"), ::OpenAPI::toJsonValue(m_project_title));
    }
    if (m_result_file_id_isSet) {
        obj.insert(QString("result_file_id"), ::OpenAPI::toJsonValue(m_result_file_id));
    }
    return obj;
}

QDateTime OAIProject::getCreated() const {
    return m_created;
}
void OAIProject::setCreated(const QDateTime &created) {
    m_created = created;
    m_created_isSet = true;
}

bool OAIProject::is_created_Set() const{
    return m_created_isSet;
}

bool OAIProject::is_created_Valid() const{
    return m_created_isValid;
}

QString OAIProject::getFileId() const {
    return m_file_id;
}
void OAIProject::setFileId(const QString &file_id) {
    m_file_id = file_id;
    m_file_id_isSet = true;
}

bool OAIProject::is_file_id_Set() const{
    return m_file_id_isSet;
}

bool OAIProject::is_file_id_Valid() const{
    return m_file_id_isValid;
}

qint32 OAIProject::getId() const {
    return m_id;
}
void OAIProject::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIProject::is_id_Set() const{
    return m_id_isSet;
}

bool OAIProject::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIProject::getPaypalPaymentId() const {
    return m_paypal_payment_id;
}
void OAIProject::setPaypalPaymentId(const QString &paypal_payment_id) {
    m_paypal_payment_id = paypal_payment_id;
    m_paypal_payment_id_isSet = true;
}

bool OAIProject::is_paypal_payment_id_Set() const{
    return m_paypal_payment_id_isSet;
}

bool OAIProject::is_paypal_payment_id_Valid() const{
    return m_paypal_payment_id_isValid;
}

OAIProcess OAIProject::getProcess() const {
    return m_process;
}
void OAIProject::setProcess(const OAIProcess &process) {
    m_process = process;
    m_process_isSet = true;
}

bool OAIProject::is_process_Set() const{
    return m_process_isSet;
}

bool OAIProject::is_process_Valid() const{
    return m_process_isValid;
}

QString OAIProject::getProcessId() const {
    return m_process_id;
}
void OAIProject::setProcessId(const QString &process_id) {
    m_process_id = process_id;
    m_process_id_isSet = true;
}

bool OAIProject::is_process_id_Set() const{
    return m_process_id_isSet;
}

bool OAIProject::is_process_id_Valid() const{
    return m_process_id_isValid;
}

qint32 OAIProject::getProjectNumber() const {
    return m_project_number;
}
void OAIProject::setProjectNumber(const qint32 &project_number) {
    m_project_number = project_number;
    m_project_number_isSet = true;
}

bool OAIProject::is_project_number_Set() const{
    return m_project_number_isSet;
}

bool OAIProject::is_project_number_Valid() const{
    return m_project_number_isValid;
}

QString OAIProject::getProjectTitle() const {
    return m_project_title;
}
void OAIProject::setProjectTitle(const QString &project_title) {
    m_project_title = project_title;
    m_project_title_isSet = true;
}

bool OAIProject::is_project_title_Set() const{
    return m_project_title_isSet;
}

bool OAIProject::is_project_title_Valid() const{
    return m_project_title_isValid;
}

QString OAIProject::getResultFileId() const {
    return m_result_file_id;
}
void OAIProject::setResultFileId(const QString &result_file_id) {
    m_result_file_id = result_file_id;
    m_result_file_id_isSet = true;
}

bool OAIProject::is_result_file_id_Set() const{
    return m_result_file_id_isSet;
}

bool OAIProject::is_result_file_id_Valid() const{
    return m_result_file_id_isValid;
}

bool OAIProject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_paypal_payment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_process.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_process_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_result_file_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProject::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_process_id_isValid && true;
}

} // namespace OpenAPI
