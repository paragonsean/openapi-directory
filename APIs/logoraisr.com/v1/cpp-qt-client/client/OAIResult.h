/**
 * API docs | logoraisr.com
 * <p style=\"font-size:110%;\">Dig into our logoraisr API reference documentation. We also offer an OpenAPI specification to allow easy integration into your systems. You can download the json file by clicking on the download button.<p><br><p style=\"font-size:110%; font-weight:bold\">OpenAPI 2.0 Validation Status</p><img src=\"https://online.swagger.io/validator?url=https://docs.logoraisr.com/\">
 *
 * The version of the OpenAPI document: v1
 * Contact: support@logoraisr.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResult.h
 *
 * 
 */

#ifndef OAIResult_H
#define OAIResult_H

#include <QJsonObject>

#include "OAIColor.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIColor;

class OAIResult : public OAIObject {
public:
    OAIResult();
    OAIResult(QString json);
    ~OAIResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIColor> getColors() const;
    void setColors(const QList<OAIColor> &colors);
    bool is_colors_Set() const;
    bool is_colors_Valid() const;

    qint32 getHeight() const;
    void setHeight(const qint32 &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    qint32 getNumberOfPixelInImage() const;
    void setNumberOfPixelInImage(const qint32 &number_of_pixel_in_image);
    bool is_number_of_pixel_in_image_Set() const;
    bool is_number_of_pixel_in_image_Valid() const;

    qint32 getWidth() const;
    void setWidth(const qint32 &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIColor> m_colors;
    bool m_colors_isSet;
    bool m_colors_isValid;

    qint32 m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    qint32 m_number_of_pixel_in_image;
    bool m_number_of_pixel_in_image_isSet;
    bool m_number_of_pixel_in_image_isValid;

    qint32 m_width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResult)

#endif // OAIResult_H
