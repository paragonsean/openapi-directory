/**
 * API docs | logoraisr.com
 * <p style=\"font-size:110%;\">Dig into our logoraisr API reference documentation. We also offer an OpenAPI specification to allow easy integration into your systems. You can download the json file by clicking on the download button.<p><br><p style=\"font-size:110%; font-weight:bold\">OpenAPI 2.0 Validation Status</p><img src=\"https://online.swagger.io/validator?url=https://docs.logoraisr.com/\">
 *
 * The version of the OpenAPI document: v1
 * Contact: support@logoraisr.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectResponse::OAIProjectResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectResponse::OAIProjectResponse() {
    this->initializeModel();
}

OAIProjectResponse::~OAIProjectResponse() {}

void OAIProjectResponse::initializeModel() {

    m_project_id_isSet = false;
    m_project_id_isValid = false;

    m_project_number_isSet = false;
    m_project_number_isValid = false;

    m_result_file_id_isSet = false;
    m_result_file_id_isValid = false;
}

void OAIProjectResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectResponse::fromJsonObject(QJsonObject json) {

    m_project_id_isValid = ::OpenAPI::fromJsonValue(m_project_id, json[QString("project_id")]);
    m_project_id_isSet = !json[QString("project_id")].isNull() && m_project_id_isValid;

    m_project_number_isValid = ::OpenAPI::fromJsonValue(m_project_number, json[QString("project_number")]);
    m_project_number_isSet = !json[QString("project_number")].isNull() && m_project_number_isValid;

    m_result_file_id_isValid = ::OpenAPI::fromJsonValue(m_result_file_id, json[QString("result_file_id")]);
    m_result_file_id_isSet = !json[QString("result_file_id")].isNull() && m_result_file_id_isValid;
}

QString OAIProjectResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_project_id_isSet) {
        obj.insert(QString("project_id"), ::OpenAPI::toJsonValue(m_project_id));
    }
    if (m_project_number_isSet) {
        obj.insert(QString("project_number"), ::OpenAPI::toJsonValue(m_project_number));
    }
    if (m_result_file_id_isSet) {
        obj.insert(QString("result_file_id"), ::OpenAPI::toJsonValue(m_result_file_id));
    }
    return obj;
}

qint32 OAIProjectResponse::getProjectId() const {
    return m_project_id;
}
void OAIProjectResponse::setProjectId(const qint32 &project_id) {
    m_project_id = project_id;
    m_project_id_isSet = true;
}

bool OAIProjectResponse::is_project_id_Set() const{
    return m_project_id_isSet;
}

bool OAIProjectResponse::is_project_id_Valid() const{
    return m_project_id_isValid;
}

qint32 OAIProjectResponse::getProjectNumber() const {
    return m_project_number;
}
void OAIProjectResponse::setProjectNumber(const qint32 &project_number) {
    m_project_number = project_number;
    m_project_number_isSet = true;
}

bool OAIProjectResponse::is_project_number_Set() const{
    return m_project_number_isSet;
}

bool OAIProjectResponse::is_project_number_Valid() const{
    return m_project_number_isValid;
}

QString OAIProjectResponse::getResultFileId() const {
    return m_result_file_id;
}
void OAIProjectResponse::setResultFileId(const QString &result_file_id) {
    m_result_file_id = result_file_id;
    m_result_file_id_isSet = true;
}

bool OAIProjectResponse::is_result_file_id_Set() const{
    return m_result_file_id_isSet;
}

bool OAIProjectResponse::is_result_file_id_Valid() const{
    return m_result_file_id_isValid;
}

bool OAIProjectResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_result_file_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
