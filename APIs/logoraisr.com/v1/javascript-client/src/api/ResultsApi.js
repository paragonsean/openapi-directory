/**
 * API docs | logoraisr.com
 * <p style=\"font-size:110%;\">Dig into our logoraisr API reference documentation. We also offer an OpenAPI specification to allow easy integration into your systems. You can download the json file by clicking on the download button.<p><br><p style=\"font-size:110%; font-weight:bold\">OpenAPI 2.0 Validation Status</p><img src=\"https://online.swagger.io/validator?url=https://docs.logoraisr.com/\">
 *
 * The version of the OpenAPI document: v1
 * Contact: support@logoraisr.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ResultResponse from '../model/ResultResponse';

/**
* Results service.
* @module api/ResultsApi
* @version v1
*/
export default class ResultsApi {

    /**
    * Constructs a new ResultsApi. 
    * @alias module:api/ResultsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the resultsRead operation.
     * @callback module:api/ResultsApi~resultsReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResultResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the result from image processing
     * This GET-Method returns the URL where the result can downloaded from.
     * @param {String} resultFileId Id of the result_file for which the result_file_url is generated.
     * @param {module:api/ResultsApi~resultsReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResultResponse}
     */
    resultsRead(resultFileId, callback) {
      let postBody = null;
      // verify the required parameter 'resultFileId' is set
      if (resultFileId === undefined || resultFileId === null) {
        throw new Error("Missing the required parameter 'resultFileId' when calling resultsRead");
      }

      let pathParams = {
        'result_file_id': resultFileId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ResultResponse;
      return this.apiClient.callApi(
        '/results/{result_file_id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
