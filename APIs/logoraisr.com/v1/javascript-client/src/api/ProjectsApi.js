/**
 * API docs | logoraisr.com
 * <p style=\"font-size:110%;\">Dig into our logoraisr API reference documentation. We also offer an OpenAPI specification to allow easy integration into your systems. You can download the json file by clicking on the download button.<p><br><p style=\"font-size:110%; font-weight:bold\">OpenAPI 2.0 Validation Status</p><img src=\"https://online.swagger.io/validator?url=https://docs.logoraisr.com/\">
 *
 * The version of the OpenAPI document: v1
 * Contact: support@logoraisr.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Project from '../model/Project';
import ProjectRequest from '../model/ProjectRequest';
import ProjectResponse from '../model/ProjectResponse';

/**
* Projects service.
* @module api/ProjectsApi
* @version v1
*/
export default class ProjectsApi {

    /**
    * Constructs a new ProjectsApi. 
    * @alias module:api/ProjectsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the projectsCreate operation.
     * @callback module:api/ProjectsApi~projectsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProjectResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new project.
     * This POST-Method creates a new project.
     * @param {module:model/ProjectRequest} projectRequest 
     * @param {module:api/ProjectsApi~projectsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProjectResponse}
     */
    projectsCreate(projectRequest, callback) {
      let postBody = projectRequest;
      // verify the required parameter 'projectRequest' is set
      if (projectRequest === undefined || projectRequest === null) {
        throw new Error("Missing the required parameter 'projectRequest' when calling projectsCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ProjectResponse;
      return this.apiClient.callApi(
        '/projects/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the projectsList operation.
     * @callback module:api/ProjectsApi~projectsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Project} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get user project list.
     * This GET-Method lists the user's projects.
     * @param {module:api/ProjectsApi~projectsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Project}
     */
    projectsList(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Project;
      return this.apiClient.callApi(
        '/projects/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the projectsRead operation.
     * @callback module:api/ProjectsApi~projectsReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Project} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get project details.
     * This GET-Method returns a specific project.
     * @param {String} projectNumber Number of the project.
     * @param {module:api/ProjectsApi~projectsReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Project}
     */
    projectsRead(projectNumber, callback) {
      let postBody = null;
      // verify the required parameter 'projectNumber' is set
      if (projectNumber === undefined || projectNumber === null) {
        throw new Error("Missing the required parameter 'projectNumber' when calling projectsRead");
      }

      let pathParams = {
        'project_number': projectNumber
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Project;
      return this.apiClient.callApi(
        '/projects/{project_number}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
