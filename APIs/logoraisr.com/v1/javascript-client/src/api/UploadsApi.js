/**
 * API docs | logoraisr.com
 * <p style=\"font-size:110%;\">Dig into our logoraisr API reference documentation. We also offer an OpenAPI specification to allow easy integration into your systems. You can download the json file by clicking on the download button.<p><br><p style=\"font-size:110%; font-weight:bold\">OpenAPI 2.0 Validation Status</p><img src=\"https://online.swagger.io/validator?url=https://docs.logoraisr.com/\">
 *
 * The version of the OpenAPI document: v1
 * Contact: support@logoraisr.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import FileResponse from '../model/FileResponse';

/**
* Uploads service.
* @module api/UploadsApi
* @version v1
*/
export default class UploadsApi {

    /**
    * Constructs a new UploadsApi. 
    * @alias module:api/UploadsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the uploadsCreate operation.
     * @callback module:api/UploadsApi~uploadsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FileResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Upload a new image
     * This POST-Method uploads a new file on the server.
     * @param {File} file File which should be uploaded. Supported file types are: JPEG and PNG
     * @param {module:api/UploadsApi~uploadsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FileResponse}
     */
    uploadsCreate(file, callback) {
      let postBody = null;
      // verify the required parameter 'file' is set
      if (file === undefined || file === null) {
        throw new Error("Missing the required parameter 'file' when calling uploadsCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'file': file
      };

      let authNames = ['Token'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = FileResponse;
      return this.apiClient.callApi(
        '/uploads/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
