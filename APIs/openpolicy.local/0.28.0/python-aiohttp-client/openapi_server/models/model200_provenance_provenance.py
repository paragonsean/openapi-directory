# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Model200ProvenanceProvenance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, build_commit: str=None, build_hostname: str=None, build_timestamp: str=None, bundles: Dict[str, object]=None, version: str=None):
        """Model200ProvenanceProvenance - a model defined in OpenAPI

        :param build_commit: The build_commit of this Model200ProvenanceProvenance.
        :param build_hostname: The build_hostname of this Model200ProvenanceProvenance.
        :param build_timestamp: The build_timestamp of this Model200ProvenanceProvenance.
        :param bundles: The bundles of this Model200ProvenanceProvenance.
        :param version: The version of this Model200ProvenanceProvenance.
        """
        self.openapi_types = {
            'build_commit': str,
            'build_hostname': str,
            'build_timestamp': str,
            'bundles': Dict[str, object],
            'version': str
        }

        self.attribute_map = {
            'build_commit': 'build_commit',
            'build_hostname': 'build_hostname',
            'build_timestamp': 'build_timestamp',
            'bundles': 'bundles',
            'version': 'version'
        }

        self._build_commit = build_commit
        self._build_hostname = build_hostname
        self._build_timestamp = build_timestamp
        self._bundles = bundles
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Model200ProvenanceProvenance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _200Provenance_provenance of this Model200ProvenanceProvenance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def build_commit(self):
        """Gets the build_commit of this Model200ProvenanceProvenance.

        The Git commit id of this OPA build.

        :return: The build_commit of this Model200ProvenanceProvenance.
        :rtype: str
        """
        return self._build_commit

    @build_commit.setter
    def build_commit(self, build_commit):
        """Sets the build_commit of this Model200ProvenanceProvenance.

        The Git commit id of this OPA build.

        :param build_commit: The build_commit of this Model200ProvenanceProvenance.
        :type build_commit: str
        """

        self._build_commit = build_commit

    @property
    def build_hostname(self):
        """Gets the build_hostname of this Model200ProvenanceProvenance.

        The hostname where this instance was built.

        :return: The build_hostname of this Model200ProvenanceProvenance.
        :rtype: str
        """
        return self._build_hostname

    @build_hostname.setter
    def build_hostname(self, build_hostname):
        """Sets the build_hostname of this Model200ProvenanceProvenance.

        The hostname where this instance was built.

        :param build_hostname: The build_hostname of this Model200ProvenanceProvenance.
        :type build_hostname: str
        """

        self._build_hostname = build_hostname

    @property
    def build_timestamp(self):
        """Gets the build_timestamp of this Model200ProvenanceProvenance.

        When this OPA instance was built (in [ISO8601 format](https://www.w3.org/TR/NOTE-datetime))

        :return: The build_timestamp of this Model200ProvenanceProvenance.
        :rtype: str
        """
        return self._build_timestamp

    @build_timestamp.setter
    def build_timestamp(self, build_timestamp):
        """Sets the build_timestamp of this Model200ProvenanceProvenance.

        When this OPA instance was built (in [ISO8601 format](https://www.w3.org/TR/NOTE-datetime))

        :param build_timestamp: The build_timestamp of this Model200ProvenanceProvenance.
        :type build_timestamp: str
        """

        self._build_timestamp = build_timestamp

    @property
    def bundles(self):
        """Gets the bundles of this Model200ProvenanceProvenance.

        A set of key-value pairs describing each bundle activated on the server.

        :return: The bundles of this Model200ProvenanceProvenance.
        :rtype: Dict[str, object]
        """
        return self._bundles

    @bundles.setter
    def bundles(self, bundles):
        """Sets the bundles of this Model200ProvenanceProvenance.

        A set of key-value pairs describing each bundle activated on the server.

        :param bundles: The bundles of this Model200ProvenanceProvenance.
        :type bundles: Dict[str, object]
        """

        self._bundles = bundles

    @property
    def version(self):
        """Gets the version of this Model200ProvenanceProvenance.

        The version of this OPA instance

        :return: The version of this Model200ProvenanceProvenance.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this Model200ProvenanceProvenance.

        The version of this OPA instance

        :param version: The version of this Model200ProvenanceProvenance.
        :type version: str
        """

        self._version = version
