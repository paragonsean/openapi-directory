# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model200_provenance_provenance import Model200ProvenanceProvenance
from openapi_server import util


class Model200Provenance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, provenance: Model200ProvenanceProvenance=None):
        """Model200Provenance - a model defined in OpenAPI

        :param provenance: The provenance of this Model200Provenance.
        """
        self.openapi_types = {
            'provenance': Model200ProvenanceProvenance
        }

        self.attribute_map = {
            'provenance': 'provenance'
        }

        self._provenance = provenance

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Model200Provenance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The 200Provenance of this Model200Provenance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def provenance(self):
        """Gets the provenance of this Model200Provenance.


        :return: The provenance of this Model200Provenance.
        :rtype: Model200ProvenanceProvenance
        """
        return self._provenance

    @provenance.setter
    def provenance(self, provenance):
        """Sets the provenance of this Model200Provenance.


        :param provenance: The provenance of this Model200Provenance.
        :type provenance: Model200ProvenanceProvenance
        """

        self._provenance = provenance
