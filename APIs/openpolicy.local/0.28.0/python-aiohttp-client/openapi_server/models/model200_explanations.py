# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model200_explanations_explanation_inner import Model200ExplanationsExplanationInner
from openapi_server import util


class Model200Explanations(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, explanation: List[Model200ExplanationsExplanationInner]=None):
        """Model200Explanations - a model defined in OpenAPI

        :param explanation: The explanation of this Model200Explanations.
        """
        self.openapi_types = {
            'explanation': List[Model200ExplanationsExplanationInner]
        }

        self.attribute_map = {
            'explanation': 'explanation'
        }

        self._explanation = explanation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Model200Explanations':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The 200Explanations of this Model200Explanations.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def explanation(self):
        """Gets the explanation of this Model200Explanations.


        :return: The explanation of this Model200Explanations.
        :rtype: List[Model200ExplanationsExplanationInner]
        """
        return self._explanation

    @explanation.setter
    def explanation(self, explanation):
        """Sets the explanation of this Model200Explanations.


        :param explanation: The explanation of this Model200Explanations.
        :type explanation: List[Model200ExplanationsExplanationInner]
        """

        self._explanation = explanation
