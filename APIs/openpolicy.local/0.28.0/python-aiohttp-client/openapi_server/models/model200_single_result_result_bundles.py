# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model200_single_result_result_bundles_authz import Model200SingleResultResultBundlesAuthz
from openapi_server import util


class Model200SingleResultResultBundles(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authz: Model200SingleResultResultBundlesAuthz=None):
        """Model200SingleResultResultBundles - a model defined in OpenAPI

        :param authz: The authz of this Model200SingleResultResultBundles.
        """
        self.openapi_types = {
            'authz': Model200SingleResultResultBundlesAuthz
        }

        self.attribute_map = {
            'authz': 'authz'
        }

        self._authz = authz

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Model200SingleResultResultBundles':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _200SingleResult_result_bundles of this Model200SingleResultResultBundles.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authz(self):
        """Gets the authz of this Model200SingleResultResultBundles.


        :return: The authz of this Model200SingleResultResultBundles.
        :rtype: Model200SingleResultResultBundlesAuthz
        """
        return self._authz

    @authz.setter
    def authz(self, authz):
        """Sets the authz of this Model200SingleResultResultBundles.


        :param authz: The authz of this Model200SingleResultResultBundles.
        :type authz: Model200SingleResultResultBundlesAuthz
        """

        self._authz = authz
