# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model200_single_result_result_services_acmecorp import Model200SingleResultResultServicesAcmecorp
from openapi_server import util


class Model200SingleResultResultServices(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, acmecorp: Model200SingleResultResultServicesAcmecorp=None):
        """Model200SingleResultResultServices - a model defined in OpenAPI

        :param acmecorp: The acmecorp of this Model200SingleResultResultServices.
        """
        self.openapi_types = {
            'acmecorp': Model200SingleResultResultServicesAcmecorp
        }

        self.attribute_map = {
            'acmecorp': 'acmecorp'
        }

        self._acmecorp = acmecorp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Model200SingleResultResultServices':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _200SingleResult_result_services of this Model200SingleResultResultServices.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def acmecorp(self):
        """Gets the acmecorp of this Model200SingleResultResultServices.


        :return: The acmecorp of this Model200SingleResultResultServices.
        :rtype: Model200SingleResultResultServicesAcmecorp
        """
        return self._acmecorp

    @acmecorp.setter
    def acmecorp(self, acmecorp):
        """Sets the acmecorp of this Model200SingleResultResultServices.


        :param acmecorp: The acmecorp of this Model200SingleResultResultServices.
        :type acmecorp: Model200SingleResultResultServicesAcmecorp
        """

        self._acmecorp = acmecorp
