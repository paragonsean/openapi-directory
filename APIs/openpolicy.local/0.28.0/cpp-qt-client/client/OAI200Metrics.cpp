/**
 * Open Policy Agent (OPA) REST API
 * OPA provides policy-based control for cloud native environments. The following *endpoints* (such as `PUT /v1/policies`) provide reference documentation for the OPA REST API.  ### API specification viewing options  - **[View the specification in *Redoc* (default)](index.html)** - **[View the specification in *Swagger UI*](swagger-ui.html)**
 *
 * The version of the OpenAPI document: 0.28.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI200Metrics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI200Metrics::OAI200Metrics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI200Metrics::OAI200Metrics() {
    this->initializeModel();
}

OAI200Metrics::~OAI200Metrics() {}

void OAI200Metrics::initializeModel() {

    m_metrics_isSet = false;
    m_metrics_isValid = false;
}

void OAI200Metrics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI200Metrics::fromJsonObject(QJsonObject json) {

    m_metrics_isValid = ::OpenAPI::fromJsonValue(m_metrics, json[QString("metrics")]);
    m_metrics_isSet = !json[QString("metrics")].isNull() && m_metrics_isValid;
}

QString OAI200Metrics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI200Metrics::asJsonObject() const {
    QJsonObject obj;
    if (m_metrics.isSet()) {
        obj.insert(QString("metrics"), ::OpenAPI::toJsonValue(m_metrics));
    }
    return obj;
}

OAI_200Metrics_metrics OAI200Metrics::getMetrics() const {
    return m_metrics;
}
void OAI200Metrics::setMetrics(const OAI_200Metrics_metrics &metrics) {
    m_metrics = metrics;
    m_metrics_isSet = true;
}

bool OAI200Metrics::is_metrics_Set() const{
    return m_metrics_isSet;
}

bool OAI200Metrics::is_metrics_Valid() const{
    return m_metrics_isValid;
}

bool OAI200Metrics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_metrics.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI200Metrics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
