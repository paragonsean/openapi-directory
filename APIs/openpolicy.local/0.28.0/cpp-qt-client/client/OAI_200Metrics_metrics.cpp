/**
 * Open Policy Agent (OPA) REST API
 * OPA provides policy-based control for cloud native environments. The following *endpoints* (such as `PUT /v1/policies`) provide reference documentation for the OPA REST API.  ### API specification viewing options  - **[View the specification in *Redoc* (default)](index.html)** - **[View the specification in *Swagger UI*](swagger-ui.html)**
 *
 * The version of the OpenAPI document: 0.28.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_200Metrics_metrics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_200Metrics_metrics::OAI_200Metrics_metrics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_200Metrics_metrics::OAI_200Metrics_metrics() {
    this->initializeModel();
}

OAI_200Metrics_metrics::~OAI_200Metrics_metrics() {}

void OAI_200Metrics_metrics::initializeModel() {

    m_counter_server_query_cache_hit_isSet = false;
    m_counter_server_query_cache_hit_isValid = false;

    m_timer_query_compile_stage_build_comprehension_index_ns_isSet = false;
    m_timer_query_compile_stage_build_comprehension_index_ns_isValid = false;

    m_timer_query_compile_stage_check_safety_ns_isSet = false;
    m_timer_query_compile_stage_check_safety_ns_isValid = false;

    m_timer_query_compile_stage_check_types_ns_isSet = false;
    m_timer_query_compile_stage_check_types_ns_isValid = false;

    m_timer_query_compile_stage_check_undefined_funcs_ns_isSet = false;
    m_timer_query_compile_stage_check_undefined_funcs_ns_isValid = false;

    m_timer_query_compile_stage_check_unsafe_builtins_ns_isSet = false;
    m_timer_query_compile_stage_check_unsafe_builtins_ns_isValid = false;

    m_timer_query_compile_stage_resolve_refs_ns_isSet = false;
    m_timer_query_compile_stage_resolve_refs_ns_isValid = false;

    m_timer_query_compile_stage_rewrite_comprehension_terms_ns_isSet = false;
    m_timer_query_compile_stage_rewrite_comprehension_terms_ns_isValid = false;

    m_timer_query_compile_stage_rewrite_dynamic_terms_ns_isSet = false;
    m_timer_query_compile_stage_rewrite_dynamic_terms_ns_isValid = false;

    m_timer_query_compile_stage_rewrite_expr_terms_ns_isSet = false;
    m_timer_query_compile_stage_rewrite_expr_terms_ns_isValid = false;

    m_timer_query_compile_stage_rewrite_local_vars_ns_isSet = false;
    m_timer_query_compile_stage_rewrite_local_vars_ns_isValid = false;

    m_timer_query_compile_stage_rewrite_to_capture_value_ns_isSet = false;
    m_timer_query_compile_stage_rewrite_to_capture_value_ns_isValid = false;

    m_timer_query_compile_stage_rewrite_with_values_ns_isSet = false;
    m_timer_query_compile_stage_rewrite_with_values_ns_isValid = false;

    m_timer_rego_input_parse_ns_isSet = false;
    m_timer_rego_input_parse_ns_isValid = false;

    m_timer_rego_module_compile_ns_isSet = false;
    m_timer_rego_module_compile_ns_isValid = false;

    m_timer_rego_module_parse_ns_isSet = false;
    m_timer_rego_module_parse_ns_isValid = false;

    m_timer_rego_query_compile_ns_isSet = false;
    m_timer_rego_query_compile_ns_isValid = false;

    m_timer_rego_query_eval_ns_isSet = false;
    m_timer_rego_query_eval_ns_isValid = false;

    m_timer_rego_query_parse_ns_isSet = false;
    m_timer_rego_query_parse_ns_isValid = false;

    m_timer_server_handler_ns_isSet = false;
    m_timer_server_handler_ns_isValid = false;

    m_timer_server_read_bytes_ns_isSet = false;
    m_timer_server_read_bytes_ns_isValid = false;
}

void OAI_200Metrics_metrics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_200Metrics_metrics::fromJsonObject(QJsonObject json) {

    m_counter_server_query_cache_hit_isValid = ::OpenAPI::fromJsonValue(m_counter_server_query_cache_hit, json[QString("counter_server_query_cache_hit")]);
    m_counter_server_query_cache_hit_isSet = !json[QString("counter_server_query_cache_hit")].isNull() && m_counter_server_query_cache_hit_isValid;

    m_timer_query_compile_stage_build_comprehension_index_ns_isValid = ::OpenAPI::fromJsonValue(m_timer_query_compile_stage_build_comprehension_index_ns, json[QString("timer_query_compile_stage_build_comprehension_index_ns")]);
    m_timer_query_compile_stage_build_comprehension_index_ns_isSet = !json[QString("timer_query_compile_stage_build_comprehension_index_ns")].isNull() && m_timer_query_compile_stage_build_comprehension_index_ns_isValid;

    m_timer_query_compile_stage_check_safety_ns_isValid = ::OpenAPI::fromJsonValue(m_timer_query_compile_stage_check_safety_ns, json[QString("timer_query_compile_stage_check_safety_ns")]);
    m_timer_query_compile_stage_check_safety_ns_isSet = !json[QString("timer_query_compile_stage_check_safety_ns")].isNull() && m_timer_query_compile_stage_check_safety_ns_isValid;

    m_timer_query_compile_stage_check_types_ns_isValid = ::OpenAPI::fromJsonValue(m_timer_query_compile_stage_check_types_ns, json[QString("timer_query_compile_stage_check_types_ns")]);
    m_timer_query_compile_stage_check_types_ns_isSet = !json[QString("timer_query_compile_stage_check_types_ns")].isNull() && m_timer_query_compile_stage_check_types_ns_isValid;

    m_timer_query_compile_stage_check_undefined_funcs_ns_isValid = ::OpenAPI::fromJsonValue(m_timer_query_compile_stage_check_undefined_funcs_ns, json[QString("timer_query_compile_stage_check_undefined_funcs_ns")]);
    m_timer_query_compile_stage_check_undefined_funcs_ns_isSet = !json[QString("timer_query_compile_stage_check_undefined_funcs_ns")].isNull() && m_timer_query_compile_stage_check_undefined_funcs_ns_isValid;

    m_timer_query_compile_stage_check_unsafe_builtins_ns_isValid = ::OpenAPI::fromJsonValue(m_timer_query_compile_stage_check_unsafe_builtins_ns, json[QString("timer_query_compile_stage_check_unsafe_builtins_ns")]);
    m_timer_query_compile_stage_check_unsafe_builtins_ns_isSet = !json[QString("timer_query_compile_stage_check_unsafe_builtins_ns")].isNull() && m_timer_query_compile_stage_check_unsafe_builtins_ns_isValid;

    m_timer_query_compile_stage_resolve_refs_ns_isValid = ::OpenAPI::fromJsonValue(m_timer_query_compile_stage_resolve_refs_ns, json[QString("timer_query_compile_stage_resolve_refs_ns")]);
    m_timer_query_compile_stage_resolve_refs_ns_isSet = !json[QString("timer_query_compile_stage_resolve_refs_ns")].isNull() && m_timer_query_compile_stage_resolve_refs_ns_isValid;

    m_timer_query_compile_stage_rewrite_comprehension_terms_ns_isValid = ::OpenAPI::fromJsonValue(m_timer_query_compile_stage_rewrite_comprehension_terms_ns, json[QString("timer_query_compile_stage_rewrite_comprehension_terms_ns")]);
    m_timer_query_compile_stage_rewrite_comprehension_terms_ns_isSet = !json[QString("timer_query_compile_stage_rewrite_comprehension_terms_ns")].isNull() && m_timer_query_compile_stage_rewrite_comprehension_terms_ns_isValid;

    m_timer_query_compile_stage_rewrite_dynamic_terms_ns_isValid = ::OpenAPI::fromJsonValue(m_timer_query_compile_stage_rewrite_dynamic_terms_ns, json[QString("timer_query_compile_stage_rewrite_dynamic_terms_ns")]);
    m_timer_query_compile_stage_rewrite_dynamic_terms_ns_isSet = !json[QString("timer_query_compile_stage_rewrite_dynamic_terms_ns")].isNull() && m_timer_query_compile_stage_rewrite_dynamic_terms_ns_isValid;

    m_timer_query_compile_stage_rewrite_expr_terms_ns_isValid = ::OpenAPI::fromJsonValue(m_timer_query_compile_stage_rewrite_expr_terms_ns, json[QString("timer_query_compile_stage_rewrite_expr_terms_ns")]);
    m_timer_query_compile_stage_rewrite_expr_terms_ns_isSet = !json[QString("timer_query_compile_stage_rewrite_expr_terms_ns")].isNull() && m_timer_query_compile_stage_rewrite_expr_terms_ns_isValid;

    m_timer_query_compile_stage_rewrite_local_vars_ns_isValid = ::OpenAPI::fromJsonValue(m_timer_query_compile_stage_rewrite_local_vars_ns, json[QString("timer_query_compile_stage_rewrite_local_vars_ns")]);
    m_timer_query_compile_stage_rewrite_local_vars_ns_isSet = !json[QString("timer_query_compile_stage_rewrite_local_vars_ns")].isNull() && m_timer_query_compile_stage_rewrite_local_vars_ns_isValid;

    m_timer_query_compile_stage_rewrite_to_capture_value_ns_isValid = ::OpenAPI::fromJsonValue(m_timer_query_compile_stage_rewrite_to_capture_value_ns, json[QString("timer_query_compile_stage_rewrite_to_capture_value_ns")]);
    m_timer_query_compile_stage_rewrite_to_capture_value_ns_isSet = !json[QString("timer_query_compile_stage_rewrite_to_capture_value_ns")].isNull() && m_timer_query_compile_stage_rewrite_to_capture_value_ns_isValid;

    m_timer_query_compile_stage_rewrite_with_values_ns_isValid = ::OpenAPI::fromJsonValue(m_timer_query_compile_stage_rewrite_with_values_ns, json[QString("timer_query_compile_stage_rewrite_with_values_ns")]);
    m_timer_query_compile_stage_rewrite_with_values_ns_isSet = !json[QString("timer_query_compile_stage_rewrite_with_values_ns")].isNull() && m_timer_query_compile_stage_rewrite_with_values_ns_isValid;

    m_timer_rego_input_parse_ns_isValid = ::OpenAPI::fromJsonValue(m_timer_rego_input_parse_ns, json[QString("timer_rego_input_parse_ns")]);
    m_timer_rego_input_parse_ns_isSet = !json[QString("timer_rego_input_parse_ns")].isNull() && m_timer_rego_input_parse_ns_isValid;

    m_timer_rego_module_compile_ns_isValid = ::OpenAPI::fromJsonValue(m_timer_rego_module_compile_ns, json[QString("timer_rego_module_compile_ns")]);
    m_timer_rego_module_compile_ns_isSet = !json[QString("timer_rego_module_compile_ns")].isNull() && m_timer_rego_module_compile_ns_isValid;

    m_timer_rego_module_parse_ns_isValid = ::OpenAPI::fromJsonValue(m_timer_rego_module_parse_ns, json[QString("timer_rego_module_parse_ns")]);
    m_timer_rego_module_parse_ns_isSet = !json[QString("timer_rego_module_parse_ns")].isNull() && m_timer_rego_module_parse_ns_isValid;

    m_timer_rego_query_compile_ns_isValid = ::OpenAPI::fromJsonValue(m_timer_rego_query_compile_ns, json[QString("timer_rego_query_compile_ns")]);
    m_timer_rego_query_compile_ns_isSet = !json[QString("timer_rego_query_compile_ns")].isNull() && m_timer_rego_query_compile_ns_isValid;

    m_timer_rego_query_eval_ns_isValid = ::OpenAPI::fromJsonValue(m_timer_rego_query_eval_ns, json[QString("timer_rego_query_eval_ns")]);
    m_timer_rego_query_eval_ns_isSet = !json[QString("timer_rego_query_eval_ns")].isNull() && m_timer_rego_query_eval_ns_isValid;

    m_timer_rego_query_parse_ns_isValid = ::OpenAPI::fromJsonValue(m_timer_rego_query_parse_ns, json[QString("timer_rego_query_parse_ns")]);
    m_timer_rego_query_parse_ns_isSet = !json[QString("timer_rego_query_parse_ns")].isNull() && m_timer_rego_query_parse_ns_isValid;

    m_timer_server_handler_ns_isValid = ::OpenAPI::fromJsonValue(m_timer_server_handler_ns, json[QString("timer_server_handler_ns")]);
    m_timer_server_handler_ns_isSet = !json[QString("timer_server_handler_ns")].isNull() && m_timer_server_handler_ns_isValid;

    m_timer_server_read_bytes_ns_isValid = ::OpenAPI::fromJsonValue(m_timer_server_read_bytes_ns, json[QString("timer_server_read_bytes_ns")]);
    m_timer_server_read_bytes_ns_isSet = !json[QString("timer_server_read_bytes_ns")].isNull() && m_timer_server_read_bytes_ns_isValid;
}

QString OAI_200Metrics_metrics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_200Metrics_metrics::asJsonObject() const {
    QJsonObject obj;
    if (m_counter_server_query_cache_hit_isSet) {
        obj.insert(QString("counter_server_query_cache_hit"), ::OpenAPI::toJsonValue(m_counter_server_query_cache_hit));
    }
    if (m_timer_query_compile_stage_build_comprehension_index_ns_isSet) {
        obj.insert(QString("timer_query_compile_stage_build_comprehension_index_ns"), ::OpenAPI::toJsonValue(m_timer_query_compile_stage_build_comprehension_index_ns));
    }
    if (m_timer_query_compile_stage_check_safety_ns_isSet) {
        obj.insert(QString("timer_query_compile_stage_check_safety_ns"), ::OpenAPI::toJsonValue(m_timer_query_compile_stage_check_safety_ns));
    }
    if (m_timer_query_compile_stage_check_types_ns_isSet) {
        obj.insert(QString("timer_query_compile_stage_check_types_ns"), ::OpenAPI::toJsonValue(m_timer_query_compile_stage_check_types_ns));
    }
    if (m_timer_query_compile_stage_check_undefined_funcs_ns_isSet) {
        obj.insert(QString("timer_query_compile_stage_check_undefined_funcs_ns"), ::OpenAPI::toJsonValue(m_timer_query_compile_stage_check_undefined_funcs_ns));
    }
    if (m_timer_query_compile_stage_check_unsafe_builtins_ns_isSet) {
        obj.insert(QString("timer_query_compile_stage_check_unsafe_builtins_ns"), ::OpenAPI::toJsonValue(m_timer_query_compile_stage_check_unsafe_builtins_ns));
    }
    if (m_timer_query_compile_stage_resolve_refs_ns_isSet) {
        obj.insert(QString("timer_query_compile_stage_resolve_refs_ns"), ::OpenAPI::toJsonValue(m_timer_query_compile_stage_resolve_refs_ns));
    }
    if (m_timer_query_compile_stage_rewrite_comprehension_terms_ns_isSet) {
        obj.insert(QString("timer_query_compile_stage_rewrite_comprehension_terms_ns"), ::OpenAPI::toJsonValue(m_timer_query_compile_stage_rewrite_comprehension_terms_ns));
    }
    if (m_timer_query_compile_stage_rewrite_dynamic_terms_ns_isSet) {
        obj.insert(QString("timer_query_compile_stage_rewrite_dynamic_terms_ns"), ::OpenAPI::toJsonValue(m_timer_query_compile_stage_rewrite_dynamic_terms_ns));
    }
    if (m_timer_query_compile_stage_rewrite_expr_terms_ns_isSet) {
        obj.insert(QString("timer_query_compile_stage_rewrite_expr_terms_ns"), ::OpenAPI::toJsonValue(m_timer_query_compile_stage_rewrite_expr_terms_ns));
    }
    if (m_timer_query_compile_stage_rewrite_local_vars_ns_isSet) {
        obj.insert(QString("timer_query_compile_stage_rewrite_local_vars_ns"), ::OpenAPI::toJsonValue(m_timer_query_compile_stage_rewrite_local_vars_ns));
    }
    if (m_timer_query_compile_stage_rewrite_to_capture_value_ns_isSet) {
        obj.insert(QString("timer_query_compile_stage_rewrite_to_capture_value_ns"), ::OpenAPI::toJsonValue(m_timer_query_compile_stage_rewrite_to_capture_value_ns));
    }
    if (m_timer_query_compile_stage_rewrite_with_values_ns_isSet) {
        obj.insert(QString("timer_query_compile_stage_rewrite_with_values_ns"), ::OpenAPI::toJsonValue(m_timer_query_compile_stage_rewrite_with_values_ns));
    }
    if (m_timer_rego_input_parse_ns_isSet) {
        obj.insert(QString("timer_rego_input_parse_ns"), ::OpenAPI::toJsonValue(m_timer_rego_input_parse_ns));
    }
    if (m_timer_rego_module_compile_ns_isSet) {
        obj.insert(QString("timer_rego_module_compile_ns"), ::OpenAPI::toJsonValue(m_timer_rego_module_compile_ns));
    }
    if (m_timer_rego_module_parse_ns_isSet) {
        obj.insert(QString("timer_rego_module_parse_ns"), ::OpenAPI::toJsonValue(m_timer_rego_module_parse_ns));
    }
    if (m_timer_rego_query_compile_ns_isSet) {
        obj.insert(QString("timer_rego_query_compile_ns"), ::OpenAPI::toJsonValue(m_timer_rego_query_compile_ns));
    }
    if (m_timer_rego_query_eval_ns_isSet) {
        obj.insert(QString("timer_rego_query_eval_ns"), ::OpenAPI::toJsonValue(m_timer_rego_query_eval_ns));
    }
    if (m_timer_rego_query_parse_ns_isSet) {
        obj.insert(QString("timer_rego_query_parse_ns"), ::OpenAPI::toJsonValue(m_timer_rego_query_parse_ns));
    }
    if (m_timer_server_handler_ns_isSet) {
        obj.insert(QString("timer_server_handler_ns"), ::OpenAPI::toJsonValue(m_timer_server_handler_ns));
    }
    if (m_timer_server_read_bytes_ns_isSet) {
        obj.insert(QString("timer_server_read_bytes_ns"), ::OpenAPI::toJsonValue(m_timer_server_read_bytes_ns));
    }
    return obj;
}

double OAI_200Metrics_metrics::getCounterServerQueryCacheHit() const {
    return m_counter_server_query_cache_hit;
}
void OAI_200Metrics_metrics::setCounterServerQueryCacheHit(const double &counter_server_query_cache_hit) {
    m_counter_server_query_cache_hit = counter_server_query_cache_hit;
    m_counter_server_query_cache_hit_isSet = true;
}

bool OAI_200Metrics_metrics::is_counter_server_query_cache_hit_Set() const{
    return m_counter_server_query_cache_hit_isSet;
}

bool OAI_200Metrics_metrics::is_counter_server_query_cache_hit_Valid() const{
    return m_counter_server_query_cache_hit_isValid;
}

double OAI_200Metrics_metrics::getTimerQueryCompileStageBuildComprehensionIndexNs() const {
    return m_timer_query_compile_stage_build_comprehension_index_ns;
}
void OAI_200Metrics_metrics::setTimerQueryCompileStageBuildComprehensionIndexNs(const double &timer_query_compile_stage_build_comprehension_index_ns) {
    m_timer_query_compile_stage_build_comprehension_index_ns = timer_query_compile_stage_build_comprehension_index_ns;
    m_timer_query_compile_stage_build_comprehension_index_ns_isSet = true;
}

bool OAI_200Metrics_metrics::is_timer_query_compile_stage_build_comprehension_index_ns_Set() const{
    return m_timer_query_compile_stage_build_comprehension_index_ns_isSet;
}

bool OAI_200Metrics_metrics::is_timer_query_compile_stage_build_comprehension_index_ns_Valid() const{
    return m_timer_query_compile_stage_build_comprehension_index_ns_isValid;
}

double OAI_200Metrics_metrics::getTimerQueryCompileStageCheckSafetyNs() const {
    return m_timer_query_compile_stage_check_safety_ns;
}
void OAI_200Metrics_metrics::setTimerQueryCompileStageCheckSafetyNs(const double &timer_query_compile_stage_check_safety_ns) {
    m_timer_query_compile_stage_check_safety_ns = timer_query_compile_stage_check_safety_ns;
    m_timer_query_compile_stage_check_safety_ns_isSet = true;
}

bool OAI_200Metrics_metrics::is_timer_query_compile_stage_check_safety_ns_Set() const{
    return m_timer_query_compile_stage_check_safety_ns_isSet;
}

bool OAI_200Metrics_metrics::is_timer_query_compile_stage_check_safety_ns_Valid() const{
    return m_timer_query_compile_stage_check_safety_ns_isValid;
}

double OAI_200Metrics_metrics::getTimerQueryCompileStageCheckTypesNs() const {
    return m_timer_query_compile_stage_check_types_ns;
}
void OAI_200Metrics_metrics::setTimerQueryCompileStageCheckTypesNs(const double &timer_query_compile_stage_check_types_ns) {
    m_timer_query_compile_stage_check_types_ns = timer_query_compile_stage_check_types_ns;
    m_timer_query_compile_stage_check_types_ns_isSet = true;
}

bool OAI_200Metrics_metrics::is_timer_query_compile_stage_check_types_ns_Set() const{
    return m_timer_query_compile_stage_check_types_ns_isSet;
}

bool OAI_200Metrics_metrics::is_timer_query_compile_stage_check_types_ns_Valid() const{
    return m_timer_query_compile_stage_check_types_ns_isValid;
}

double OAI_200Metrics_metrics::getTimerQueryCompileStageCheckUndefinedFuncsNs() const {
    return m_timer_query_compile_stage_check_undefined_funcs_ns;
}
void OAI_200Metrics_metrics::setTimerQueryCompileStageCheckUndefinedFuncsNs(const double &timer_query_compile_stage_check_undefined_funcs_ns) {
    m_timer_query_compile_stage_check_undefined_funcs_ns = timer_query_compile_stage_check_undefined_funcs_ns;
    m_timer_query_compile_stage_check_undefined_funcs_ns_isSet = true;
}

bool OAI_200Metrics_metrics::is_timer_query_compile_stage_check_undefined_funcs_ns_Set() const{
    return m_timer_query_compile_stage_check_undefined_funcs_ns_isSet;
}

bool OAI_200Metrics_metrics::is_timer_query_compile_stage_check_undefined_funcs_ns_Valid() const{
    return m_timer_query_compile_stage_check_undefined_funcs_ns_isValid;
}

double OAI_200Metrics_metrics::getTimerQueryCompileStageCheckUnsafeBuiltinsNs() const {
    return m_timer_query_compile_stage_check_unsafe_builtins_ns;
}
void OAI_200Metrics_metrics::setTimerQueryCompileStageCheckUnsafeBuiltinsNs(const double &timer_query_compile_stage_check_unsafe_builtins_ns) {
    m_timer_query_compile_stage_check_unsafe_builtins_ns = timer_query_compile_stage_check_unsafe_builtins_ns;
    m_timer_query_compile_stage_check_unsafe_builtins_ns_isSet = true;
}

bool OAI_200Metrics_metrics::is_timer_query_compile_stage_check_unsafe_builtins_ns_Set() const{
    return m_timer_query_compile_stage_check_unsafe_builtins_ns_isSet;
}

bool OAI_200Metrics_metrics::is_timer_query_compile_stage_check_unsafe_builtins_ns_Valid() const{
    return m_timer_query_compile_stage_check_unsafe_builtins_ns_isValid;
}

double OAI_200Metrics_metrics::getTimerQueryCompileStageResolveRefsNs() const {
    return m_timer_query_compile_stage_resolve_refs_ns;
}
void OAI_200Metrics_metrics::setTimerQueryCompileStageResolveRefsNs(const double &timer_query_compile_stage_resolve_refs_ns) {
    m_timer_query_compile_stage_resolve_refs_ns = timer_query_compile_stage_resolve_refs_ns;
    m_timer_query_compile_stage_resolve_refs_ns_isSet = true;
}

bool OAI_200Metrics_metrics::is_timer_query_compile_stage_resolve_refs_ns_Set() const{
    return m_timer_query_compile_stage_resolve_refs_ns_isSet;
}

bool OAI_200Metrics_metrics::is_timer_query_compile_stage_resolve_refs_ns_Valid() const{
    return m_timer_query_compile_stage_resolve_refs_ns_isValid;
}

double OAI_200Metrics_metrics::getTimerQueryCompileStageRewriteComprehensionTermsNs() const {
    return m_timer_query_compile_stage_rewrite_comprehension_terms_ns;
}
void OAI_200Metrics_metrics::setTimerQueryCompileStageRewriteComprehensionTermsNs(const double &timer_query_compile_stage_rewrite_comprehension_terms_ns) {
    m_timer_query_compile_stage_rewrite_comprehension_terms_ns = timer_query_compile_stage_rewrite_comprehension_terms_ns;
    m_timer_query_compile_stage_rewrite_comprehension_terms_ns_isSet = true;
}

bool OAI_200Metrics_metrics::is_timer_query_compile_stage_rewrite_comprehension_terms_ns_Set() const{
    return m_timer_query_compile_stage_rewrite_comprehension_terms_ns_isSet;
}

bool OAI_200Metrics_metrics::is_timer_query_compile_stage_rewrite_comprehension_terms_ns_Valid() const{
    return m_timer_query_compile_stage_rewrite_comprehension_terms_ns_isValid;
}

double OAI_200Metrics_metrics::getTimerQueryCompileStageRewriteDynamicTermsNs() const {
    return m_timer_query_compile_stage_rewrite_dynamic_terms_ns;
}
void OAI_200Metrics_metrics::setTimerQueryCompileStageRewriteDynamicTermsNs(const double &timer_query_compile_stage_rewrite_dynamic_terms_ns) {
    m_timer_query_compile_stage_rewrite_dynamic_terms_ns = timer_query_compile_stage_rewrite_dynamic_terms_ns;
    m_timer_query_compile_stage_rewrite_dynamic_terms_ns_isSet = true;
}

bool OAI_200Metrics_metrics::is_timer_query_compile_stage_rewrite_dynamic_terms_ns_Set() const{
    return m_timer_query_compile_stage_rewrite_dynamic_terms_ns_isSet;
}

bool OAI_200Metrics_metrics::is_timer_query_compile_stage_rewrite_dynamic_terms_ns_Valid() const{
    return m_timer_query_compile_stage_rewrite_dynamic_terms_ns_isValid;
}

double OAI_200Metrics_metrics::getTimerQueryCompileStageRewriteExprTermsNs() const {
    return m_timer_query_compile_stage_rewrite_expr_terms_ns;
}
void OAI_200Metrics_metrics::setTimerQueryCompileStageRewriteExprTermsNs(const double &timer_query_compile_stage_rewrite_expr_terms_ns) {
    m_timer_query_compile_stage_rewrite_expr_terms_ns = timer_query_compile_stage_rewrite_expr_terms_ns;
    m_timer_query_compile_stage_rewrite_expr_terms_ns_isSet = true;
}

bool OAI_200Metrics_metrics::is_timer_query_compile_stage_rewrite_expr_terms_ns_Set() const{
    return m_timer_query_compile_stage_rewrite_expr_terms_ns_isSet;
}

bool OAI_200Metrics_metrics::is_timer_query_compile_stage_rewrite_expr_terms_ns_Valid() const{
    return m_timer_query_compile_stage_rewrite_expr_terms_ns_isValid;
}

double OAI_200Metrics_metrics::getTimerQueryCompileStageRewriteLocalVarsNs() const {
    return m_timer_query_compile_stage_rewrite_local_vars_ns;
}
void OAI_200Metrics_metrics::setTimerQueryCompileStageRewriteLocalVarsNs(const double &timer_query_compile_stage_rewrite_local_vars_ns) {
    m_timer_query_compile_stage_rewrite_local_vars_ns = timer_query_compile_stage_rewrite_local_vars_ns;
    m_timer_query_compile_stage_rewrite_local_vars_ns_isSet = true;
}

bool OAI_200Metrics_metrics::is_timer_query_compile_stage_rewrite_local_vars_ns_Set() const{
    return m_timer_query_compile_stage_rewrite_local_vars_ns_isSet;
}

bool OAI_200Metrics_metrics::is_timer_query_compile_stage_rewrite_local_vars_ns_Valid() const{
    return m_timer_query_compile_stage_rewrite_local_vars_ns_isValid;
}

double OAI_200Metrics_metrics::getTimerQueryCompileStageRewriteToCaptureValueNs() const {
    return m_timer_query_compile_stage_rewrite_to_capture_value_ns;
}
void OAI_200Metrics_metrics::setTimerQueryCompileStageRewriteToCaptureValueNs(const double &timer_query_compile_stage_rewrite_to_capture_value_ns) {
    m_timer_query_compile_stage_rewrite_to_capture_value_ns = timer_query_compile_stage_rewrite_to_capture_value_ns;
    m_timer_query_compile_stage_rewrite_to_capture_value_ns_isSet = true;
}

bool OAI_200Metrics_metrics::is_timer_query_compile_stage_rewrite_to_capture_value_ns_Set() const{
    return m_timer_query_compile_stage_rewrite_to_capture_value_ns_isSet;
}

bool OAI_200Metrics_metrics::is_timer_query_compile_stage_rewrite_to_capture_value_ns_Valid() const{
    return m_timer_query_compile_stage_rewrite_to_capture_value_ns_isValid;
}

double OAI_200Metrics_metrics::getTimerQueryCompileStageRewriteWithValuesNs() const {
    return m_timer_query_compile_stage_rewrite_with_values_ns;
}
void OAI_200Metrics_metrics::setTimerQueryCompileStageRewriteWithValuesNs(const double &timer_query_compile_stage_rewrite_with_values_ns) {
    m_timer_query_compile_stage_rewrite_with_values_ns = timer_query_compile_stage_rewrite_with_values_ns;
    m_timer_query_compile_stage_rewrite_with_values_ns_isSet = true;
}

bool OAI_200Metrics_metrics::is_timer_query_compile_stage_rewrite_with_values_ns_Set() const{
    return m_timer_query_compile_stage_rewrite_with_values_ns_isSet;
}

bool OAI_200Metrics_metrics::is_timer_query_compile_stage_rewrite_with_values_ns_Valid() const{
    return m_timer_query_compile_stage_rewrite_with_values_ns_isValid;
}

double OAI_200Metrics_metrics::getTimerRegoInputParseNs() const {
    return m_timer_rego_input_parse_ns;
}
void OAI_200Metrics_metrics::setTimerRegoInputParseNs(const double &timer_rego_input_parse_ns) {
    m_timer_rego_input_parse_ns = timer_rego_input_parse_ns;
    m_timer_rego_input_parse_ns_isSet = true;
}

bool OAI_200Metrics_metrics::is_timer_rego_input_parse_ns_Set() const{
    return m_timer_rego_input_parse_ns_isSet;
}

bool OAI_200Metrics_metrics::is_timer_rego_input_parse_ns_Valid() const{
    return m_timer_rego_input_parse_ns_isValid;
}

double OAI_200Metrics_metrics::getTimerRegoModuleCompileNs() const {
    return m_timer_rego_module_compile_ns;
}
void OAI_200Metrics_metrics::setTimerRegoModuleCompileNs(const double &timer_rego_module_compile_ns) {
    m_timer_rego_module_compile_ns = timer_rego_module_compile_ns;
    m_timer_rego_module_compile_ns_isSet = true;
}

bool OAI_200Metrics_metrics::is_timer_rego_module_compile_ns_Set() const{
    return m_timer_rego_module_compile_ns_isSet;
}

bool OAI_200Metrics_metrics::is_timer_rego_module_compile_ns_Valid() const{
    return m_timer_rego_module_compile_ns_isValid;
}

double OAI_200Metrics_metrics::getTimerRegoModuleParseNs() const {
    return m_timer_rego_module_parse_ns;
}
void OAI_200Metrics_metrics::setTimerRegoModuleParseNs(const double &timer_rego_module_parse_ns) {
    m_timer_rego_module_parse_ns = timer_rego_module_parse_ns;
    m_timer_rego_module_parse_ns_isSet = true;
}

bool OAI_200Metrics_metrics::is_timer_rego_module_parse_ns_Set() const{
    return m_timer_rego_module_parse_ns_isSet;
}

bool OAI_200Metrics_metrics::is_timer_rego_module_parse_ns_Valid() const{
    return m_timer_rego_module_parse_ns_isValid;
}

double OAI_200Metrics_metrics::getTimerRegoQueryCompileNs() const {
    return m_timer_rego_query_compile_ns;
}
void OAI_200Metrics_metrics::setTimerRegoQueryCompileNs(const double &timer_rego_query_compile_ns) {
    m_timer_rego_query_compile_ns = timer_rego_query_compile_ns;
    m_timer_rego_query_compile_ns_isSet = true;
}

bool OAI_200Metrics_metrics::is_timer_rego_query_compile_ns_Set() const{
    return m_timer_rego_query_compile_ns_isSet;
}

bool OAI_200Metrics_metrics::is_timer_rego_query_compile_ns_Valid() const{
    return m_timer_rego_query_compile_ns_isValid;
}

double OAI_200Metrics_metrics::getTimerRegoQueryEvalNs() const {
    return m_timer_rego_query_eval_ns;
}
void OAI_200Metrics_metrics::setTimerRegoQueryEvalNs(const double &timer_rego_query_eval_ns) {
    m_timer_rego_query_eval_ns = timer_rego_query_eval_ns;
    m_timer_rego_query_eval_ns_isSet = true;
}

bool OAI_200Metrics_metrics::is_timer_rego_query_eval_ns_Set() const{
    return m_timer_rego_query_eval_ns_isSet;
}

bool OAI_200Metrics_metrics::is_timer_rego_query_eval_ns_Valid() const{
    return m_timer_rego_query_eval_ns_isValid;
}

double OAI_200Metrics_metrics::getTimerRegoQueryParseNs() const {
    return m_timer_rego_query_parse_ns;
}
void OAI_200Metrics_metrics::setTimerRegoQueryParseNs(const double &timer_rego_query_parse_ns) {
    m_timer_rego_query_parse_ns = timer_rego_query_parse_ns;
    m_timer_rego_query_parse_ns_isSet = true;
}

bool OAI_200Metrics_metrics::is_timer_rego_query_parse_ns_Set() const{
    return m_timer_rego_query_parse_ns_isSet;
}

bool OAI_200Metrics_metrics::is_timer_rego_query_parse_ns_Valid() const{
    return m_timer_rego_query_parse_ns_isValid;
}

double OAI_200Metrics_metrics::getTimerServerHandlerNs() const {
    return m_timer_server_handler_ns;
}
void OAI_200Metrics_metrics::setTimerServerHandlerNs(const double &timer_server_handler_ns) {
    m_timer_server_handler_ns = timer_server_handler_ns;
    m_timer_server_handler_ns_isSet = true;
}

bool OAI_200Metrics_metrics::is_timer_server_handler_ns_Set() const{
    return m_timer_server_handler_ns_isSet;
}

bool OAI_200Metrics_metrics::is_timer_server_handler_ns_Valid() const{
    return m_timer_server_handler_ns_isValid;
}

double OAI_200Metrics_metrics::getTimerServerReadBytesNs() const {
    return m_timer_server_read_bytes_ns;
}
void OAI_200Metrics_metrics::setTimerServerReadBytesNs(const double &timer_server_read_bytes_ns) {
    m_timer_server_read_bytes_ns = timer_server_read_bytes_ns;
    m_timer_server_read_bytes_ns_isSet = true;
}

bool OAI_200Metrics_metrics::is_timer_server_read_bytes_ns_Set() const{
    return m_timer_server_read_bytes_ns_isSet;
}

bool OAI_200Metrics_metrics::is_timer_server_read_bytes_ns_Valid() const{
    return m_timer_server_read_bytes_ns_isValid;
}

bool OAI_200Metrics_metrics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_counter_server_query_cache_hit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timer_query_compile_stage_build_comprehension_index_ns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timer_query_compile_stage_check_safety_ns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timer_query_compile_stage_check_types_ns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timer_query_compile_stage_check_undefined_funcs_ns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timer_query_compile_stage_check_unsafe_builtins_ns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timer_query_compile_stage_resolve_refs_ns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timer_query_compile_stage_rewrite_comprehension_terms_ns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timer_query_compile_stage_rewrite_dynamic_terms_ns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timer_query_compile_stage_rewrite_expr_terms_ns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timer_query_compile_stage_rewrite_local_vars_ns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timer_query_compile_stage_rewrite_to_capture_value_ns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timer_query_compile_stage_rewrite_with_values_ns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timer_rego_input_parse_ns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timer_rego_module_compile_ns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timer_rego_module_parse_ns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timer_rego_query_compile_ns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timer_rego_query_eval_ns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timer_rego_query_parse_ns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timer_server_handler_ns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timer_server_read_bytes_ns_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_200Metrics_metrics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
