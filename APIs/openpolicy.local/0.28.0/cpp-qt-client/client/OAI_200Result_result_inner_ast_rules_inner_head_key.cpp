/**
 * Open Policy Agent (OPA) REST API
 * OPA provides policy-based control for cloud native environments. The following *endpoints* (such as `PUT /v1/policies`) provide reference documentation for the OPA REST API.  ### API specification viewing options  - **[View the specification in *Redoc* (default)](index.html)** - **[View the specification in *Swagger UI*](swagger-ui.html)**
 *
 * The version of the OpenAPI document: 0.28.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_200Result_result_inner_ast_rules_inner_head_key.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_200Result_result_inner_ast_rules_inner_head_key::OAI_200Result_result_inner_ast_rules_inner_head_key(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_200Result_result_inner_ast_rules_inner_head_key::OAI_200Result_result_inner_ast_rules_inner_head_key() {
    this->initializeModel();
}

OAI_200Result_result_inner_ast_rules_inner_head_key::~OAI_200Result_result_inner_ast_rules_inner_head_key() {}

void OAI_200Result_result_inner_ast_rules_inner_head_key::initializeModel() {

    m_type_isSet = false;
    m_type_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAI_200Result_result_inner_ast_rules_inner_head_key::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_200Result_result_inner_ast_rules_inner_head_key::fromJsonObject(QJsonObject json) {

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAI_200Result_result_inner_ast_rules_inner_head_key::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_200Result_result_inner_ast_rules_inner_head_key::asJsonObject() const {
    QJsonObject obj;
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAI_200Result_result_inner_ast_rules_inner_head_key::getType() const {
    return m_type;
}
void OAI_200Result_result_inner_ast_rules_inner_head_key::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAI_200Result_result_inner_ast_rules_inner_head_key::is_type_Set() const{
    return m_type_isSet;
}

bool OAI_200Result_result_inner_ast_rules_inner_head_key::is_type_Valid() const{
    return m_type_isValid;
}

QString OAI_200Result_result_inner_ast_rules_inner_head_key::getValue() const {
    return m_value;
}
void OAI_200Result_result_inner_ast_rules_inner_head_key::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAI_200Result_result_inner_ast_rules_inner_head_key::is_value_Set() const{
    return m_value_isSet;
}

bool OAI_200Result_result_inner_ast_rules_inner_head_key::is_value_Valid() const{
    return m_value_isValid;
}

bool OAI_200Result_result_inner_ast_rules_inner_head_key::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_200Result_result_inner_ast_rules_inner_head_key::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
