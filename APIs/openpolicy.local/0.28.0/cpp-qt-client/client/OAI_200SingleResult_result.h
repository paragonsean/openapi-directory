/**
 * Open Policy Agent (OPA) REST API
 * OPA provides policy-based control for cloud native environments. The following *endpoints* (such as `PUT /v1/policies`) provide reference documentation for the OPA REST API.  ### API specification viewing options  - **[View the specification in *Redoc* (default)](index.html)** - **[View the specification in *Swagger UI*](swagger-ui.html)**
 *
 * The version of the OpenAPI document: 0.28.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAI_200SingleResult_result.h
 *
 * 
 */

#ifndef OAI_200SingleResult_result_H
#define OAI_200SingleResult_result_H

#include <QJsonObject>

#include "OAI_200SingleResult_result_bundles.h"
#include "OAI_200SingleResult_result_decision_logs.h"
#include "OAI_200SingleResult_result_keys.h"
#include "OAI_200SingleResult_result_labels.h"
#include "OAI_200SingleResult_result_services.h"
#include "OAI_200SingleResult_result_status.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAI_200SingleResult_result_bundles;
class OAI_200SingleResult_result_decision_logs;
class OAI_200SingleResult_result_keys;
class OAI_200SingleResult_result_labels;
class OAI_200SingleResult_result_services;
class OAI_200SingleResult_result_status;

class OAI_200SingleResult_result : public OAIObject {
public:
    OAI_200SingleResult_result();
    OAI_200SingleResult_result(QString json);
    ~OAI_200SingleResult_result() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAI_200SingleResult_result_bundles getBundles() const;
    void setBundles(const OAI_200SingleResult_result_bundles &bundles);
    bool is_bundles_Set() const;
    bool is_bundles_Valid() const;

    OAI_200SingleResult_result_decision_logs getDecisionLogs() const;
    void setDecisionLogs(const OAI_200SingleResult_result_decision_logs &decision_logs);
    bool is_decision_logs_Set() const;
    bool is_decision_logs_Valid() const;

    QString getDefaultAuthorizationDecision() const;
    void setDefaultAuthorizationDecision(const QString &default_authorization_decision);
    bool is_default_authorization_decision_Set() const;
    bool is_default_authorization_decision_Valid() const;

    QString getDefaultDecision() const;
    void setDefaultDecision(const QString &default_decision);
    bool is_default_decision_Set() const;
    bool is_default_decision_Valid() const;

    OAI_200SingleResult_result_keys getKeys() const;
    void setKeys(const OAI_200SingleResult_result_keys &keys);
    bool is_keys_Set() const;
    bool is_keys_Valid() const;

    OAI_200SingleResult_result_labels getLabels() const;
    void setLabels(const OAI_200SingleResult_result_labels &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    OAI_200SingleResult_result_services getServices() const;
    void setServices(const OAI_200SingleResult_result_services &services);
    bool is_services_Set() const;
    bool is_services_Valid() const;

    OAI_200SingleResult_result_status getStatus() const;
    void setStatus(const OAI_200SingleResult_result_status &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAI_200SingleResult_result_bundles m_bundles;
    bool m_bundles_isSet;
    bool m_bundles_isValid;

    OAI_200SingleResult_result_decision_logs m_decision_logs;
    bool m_decision_logs_isSet;
    bool m_decision_logs_isValid;

    QString m_default_authorization_decision;
    bool m_default_authorization_decision_isSet;
    bool m_default_authorization_decision_isValid;

    QString m_default_decision;
    bool m_default_decision_isSet;
    bool m_default_decision_isValid;

    OAI_200SingleResult_result_keys m_keys;
    bool m_keys_isSet;
    bool m_keys_isValid;

    OAI_200SingleResult_result_labels m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    OAI_200SingleResult_result_services m_services;
    bool m_services_isSet;
    bool m_services_isValid;

    OAI_200SingleResult_result_status m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAI_200SingleResult_result)

#endif // OAI_200SingleResult_result_H
