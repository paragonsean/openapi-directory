/**
 * Open Policy Agent (OPA) REST API
 * OPA provides policy-based control for cloud native environments. The following *endpoints* (such as `PUT /v1/policies`) provide reference documentation for the OPA REST API.  ### API specification viewing options  - **[View the specification in *Redoc* (default)](index.html)** - **[View the specification in *Swagger UI*](swagger-ui.html)**
 *
 * The version of the OpenAPI document: 0.28.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_200Result_result_inner_ast_rules_inner_body_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_200Result_result_inner_ast_rules_inner_body_inner::OAI_200Result_result_inner_ast_rules_inner_body_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_200Result_result_inner_ast_rules_inner_body_inner::OAI_200Result_result_inner_ast_rules_inner_body_inner() {
    this->initializeModel();
}

OAI_200Result_result_inner_ast_rules_inner_body_inner::~OAI_200Result_result_inner_ast_rules_inner_body_inner() {}

void OAI_200Result_result_inner_ast_rules_inner_body_inner::initializeModel() {

    m_index_isSet = false;
    m_index_isValid = false;

    m_terms_isSet = false;
    m_terms_isValid = false;
}

void OAI_200Result_result_inner_ast_rules_inner_body_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_200Result_result_inner_ast_rules_inner_body_inner::fromJsonObject(QJsonObject json) {

    m_index_isValid = ::OpenAPI::fromJsonValue(m_index, json[QString("index")]);
    m_index_isSet = !json[QString("index")].isNull() && m_index_isValid;

    m_terms_isValid = ::OpenAPI::fromJsonValue(m_terms, json[QString("terms")]);
    m_terms_isSet = !json[QString("terms")].isNull() && m_terms_isValid;
}

QString OAI_200Result_result_inner_ast_rules_inner_body_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_200Result_result_inner_ast_rules_inner_body_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_index_isSet) {
        obj.insert(QString("index"), ::OpenAPI::toJsonValue(m_index));
    }
    if (m_terms.size() > 0) {
        obj.insert(QString("terms"), ::OpenAPI::toJsonValue(m_terms));
    }
    return obj;
}

double OAI_200Result_result_inner_ast_rules_inner_body_inner::getIndex() const {
    return m_index;
}
void OAI_200Result_result_inner_ast_rules_inner_body_inner::setIndex(const double &index) {
    m_index = index;
    m_index_isSet = true;
}

bool OAI_200Result_result_inner_ast_rules_inner_body_inner::is_index_Set() const{
    return m_index_isSet;
}

bool OAI_200Result_result_inner_ast_rules_inner_body_inner::is_index_Valid() const{
    return m_index_isValid;
}

QList<OAI_200Result_result_inner_ast_rules_inner_body_inner_terms_inner> OAI_200Result_result_inner_ast_rules_inner_body_inner::getTerms() const {
    return m_terms;
}
void OAI_200Result_result_inner_ast_rules_inner_body_inner::setTerms(const QList<OAI_200Result_result_inner_ast_rules_inner_body_inner_terms_inner> &terms) {
    m_terms = terms;
    m_terms_isSet = true;
}

bool OAI_200Result_result_inner_ast_rules_inner_body_inner::is_terms_Set() const{
    return m_terms_isSet;
}

bool OAI_200Result_result_inner_ast_rules_inner_body_inner::is_terms_Valid() const{
    return m_terms_isValid;
}

bool OAI_200Result_result_inner_ast_rules_inner_body_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_terms.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_200Result_result_inner_ast_rules_inner_body_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
