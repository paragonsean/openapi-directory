/*
 * Open Policy Agent (OPA) REST API
 * OPA provides policy-based control for cloud native environments. The following *endpoints* (such as `PUT /v1/policies`) provide reference documentation for the OPA REST API.  ### API specification viewing options  - **[View the specification in *Redoc* (default)](index.html)** - **[View the specification in *Swagger UI*](swagger-ui.html)**
 *
 * The version of the OpenAPI document: 0.28.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Where the error occurred
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:23:44.834605-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Model400ErrorsInnerLocation {
  public static final String SERIALIZED_NAME_COL = "col";
  @SerializedName(SERIALIZED_NAME_COL)
  private BigDecimal col;

  public static final String SERIALIZED_NAME_FILE = "file";
  @SerializedName(SERIALIZED_NAME_FILE)
  private String _file;

  public static final String SERIALIZED_NAME_ROW = "row";
  @SerializedName(SERIALIZED_NAME_ROW)
  private BigDecimal row;

  public Model400ErrorsInnerLocation() {
  }

  public Model400ErrorsInnerLocation col(BigDecimal col) {
    this.col = col;
    return this;
  }

  /**
   * The column in the policy module where the error occurred
   * @return col
   */
  @javax.annotation.Nullable
  public BigDecimal getCol() {
    return col;
  }

  public void setCol(BigDecimal col) {
    this.col = col;
  }


  public Model400ErrorsInnerLocation _file(String _file) {
    this._file = _file;
    return this;
  }

  /**
   * The policy module name that generated the error
   * @return _file
   */
  @javax.annotation.Nullable
  public String getFile() {
    return _file;
  }

  public void setFile(String _file) {
    this._file = _file;
  }


  public Model400ErrorsInnerLocation row(BigDecimal row) {
    this.row = row;
    return this;
  }

  /**
   * The line number in the policy module where the error occurred
   * @return row
   */
  @javax.annotation.Nullable
  public BigDecimal getRow() {
    return row;
  }

  public void setRow(BigDecimal row) {
    this.row = row;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Model400ErrorsInnerLocation _400errorsInnerLocation = (Model400ErrorsInnerLocation) o;
    return Objects.equals(this.col, _400errorsInnerLocation.col) &&
        Objects.equals(this._file, _400errorsInnerLocation._file) &&
        Objects.equals(this.row, _400errorsInnerLocation.row);
  }

  @Override
  public int hashCode() {
    return Objects.hash(col, _file, row);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Model400ErrorsInnerLocation {\n");
    sb.append("    col: ").append(toIndentedString(col)).append("\n");
    sb.append("    _file: ").append(toIndentedString(_file)).append("\n");
    sb.append("    row: ").append(toIndentedString(row)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("col");
    openapiFields.add("file");
    openapiFields.add("row");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Model400ErrorsInnerLocation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Model400ErrorsInnerLocation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Model400ErrorsInnerLocation is not found in the empty JSON string", Model400ErrorsInnerLocation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Model400ErrorsInnerLocation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Model400ErrorsInnerLocation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("file") != null && !jsonObj.get("file").isJsonNull()) && !jsonObj.get("file").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `file` to be a primitive type in the JSON string but got `%s`", jsonObj.get("file").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Model400ErrorsInnerLocation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Model400ErrorsInnerLocation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Model400ErrorsInnerLocation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Model400ErrorsInnerLocation.class));

       return (TypeAdapter<T>) new TypeAdapter<Model400ErrorsInnerLocation>() {
           @Override
           public void write(JsonWriter out, Model400ErrorsInnerLocation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Model400ErrorsInnerLocation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Model400ErrorsInnerLocation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Model400ErrorsInnerLocation
   * @throws IOException if the JSON string is invalid with respect to Model400ErrorsInnerLocation
   */
  public static Model400ErrorsInnerLocation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Model400ErrorsInnerLocation.class);
  }

  /**
   * Convert an instance of Model400ErrorsInnerLocation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

