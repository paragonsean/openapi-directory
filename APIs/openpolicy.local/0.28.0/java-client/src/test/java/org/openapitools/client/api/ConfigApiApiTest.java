/*
 * Open Policy Agent (OPA) REST API
 * OPA provides policy-based control for cloud native environments. The following *endpoints* (such as `PUT /v1/policies`) provide reference documentation for the OPA REST API.  ### API specification viewing options  - **[View the specification in *Redoc* (default)](index.html)** - **[View the specification in *Swagger UI*](swagger-ui.html)**
 *
 * The version of the OpenAPI document: 0.28.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Model200SingleResult;
import org.openapitools.client.model.Model400;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ConfigApiApi
 */
@Disabled
public class ConfigApiApiTest {

    private final ConfigApiApi api = new ConfigApiApi();

    /**
     * Get configurations
     *
     * This API endpoint responds with active configuration (result response)  --- **Note** The &#x60;credentials&#x60; field in the &#x60;services&#x60; configuration and  The &#x60;private_key&#x60; and &#x60;key&#x60; fields in the &#x60;keys&#x60; configuration will be omitted from the API response  ---
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getConfigTest() throws ApiException {
        Boolean pretty = null;
        Model200SingleResult response = api.getConfig(pretty);
        // TODO: test validations
    }

}
