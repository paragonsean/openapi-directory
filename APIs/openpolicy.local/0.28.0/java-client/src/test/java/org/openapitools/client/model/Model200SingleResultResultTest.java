/*
 * Open Policy Agent (OPA) REST API
 * OPA provides policy-based control for cloud native environments. The following *endpoints* (such as `PUT /v1/policies`) provide reference documentation for the OPA REST API.  ### API specification viewing options  - **[View the specification in *Redoc* (default)](index.html)** - **[View the specification in *Swagger UI*](swagger-ui.html)**
 *
 * The version of the OpenAPI document: 0.28.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Model200SingleResultResultBundles;
import org.openapitools.client.model.Model200SingleResultResultDecisionLogs;
import org.openapitools.client.model.Model200SingleResultResultKeys;
import org.openapitools.client.model.Model200SingleResultResultLabels;
import org.openapitools.client.model.Model200SingleResultResultServices;
import org.openapitools.client.model.Model200SingleResultResultStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Model200SingleResultResult
 */
public class Model200SingleResultResultTest {
    private final Model200SingleResultResult model = new Model200SingleResultResult();

    /**
     * Model tests for Model200SingleResultResult
     */
    @Test
    public void testModel200SingleResultResult() {
        // TODO: test Model200SingleResultResult
    }

    /**
     * Test the property 'bundles'
     */
    @Test
    public void bundlesTest() {
        // TODO: test bundles
    }

    /**
     * Test the property 'decisionLogs'
     */
    @Test
    public void decisionLogsTest() {
        // TODO: test decisionLogs
    }

    /**
     * Test the property 'defaultAuthorizationDecision'
     */
    @Test
    public void defaultAuthorizationDecisionTest() {
        // TODO: test defaultAuthorizationDecision
    }

    /**
     * Test the property 'defaultDecision'
     */
    @Test
    public void defaultDecisionTest() {
        // TODO: test defaultDecision
    }

    /**
     * Test the property 'keys'
     */
    @Test
    public void keysTest() {
        // TODO: test keys
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'services'
     */
    @Test
    public void servicesTest() {
        // TODO: test services
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

}
