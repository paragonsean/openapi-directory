/*
 * Open Policy Agent (OPA) REST API
 * OPA provides policy-based control for cloud native environments. The following *endpoints* (such as `PUT /v1/policies`) provide reference documentation for the OPA REST API.  ### API specification viewing options  - **[View the specification in *Redoc* (default)](index.html)** - **[View the specification in *Swagger UI*](swagger-ui.html)**
 *
 * The version of the OpenAPI document: 0.28.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for HealthApiApi
 */
@Disabled
public class HealthApiApiTest {

    private final HealthApiApi api = new HealthApiApi();

    /**
     * Health
     *
     * This API endpoint verifies that the server is operational.  The response from the server is either 200 or 500: - **200** - OPA service is healthy. If &#x60;bundles&#x60; is true, then all configured bundles have been activated. If &#x60;plugins&#x60; is true, then all plugins are in an &#39;OK&#39; state. - **500** - OPA service is *not* healthy. If &#x60;bundles&#x60; is true, at least one of configured bundles has not yet been activated. If &#x60;plugins&#x60; is true, at least one plugins is in a &#39;not OK&#39; state.  --- **Note** This check is only for initial bundle activation. Subsequent downloads will not affect the health check.  Use the **status** endpoint (in the (management API)[management.html]) for more fine-grained bundle status monitoring.  ---
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getHealthTest() throws ApiException {
        Boolean bundles = null;
        Boolean plugins = null;
        api.getHealth(bundles, plugins);
        // TODO: test validations
    }

}
