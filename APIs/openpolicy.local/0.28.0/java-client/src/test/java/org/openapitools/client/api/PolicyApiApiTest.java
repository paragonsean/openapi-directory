/*
 * Open Policy Agent (OPA) REST API
 * OPA provides policy-based control for cloud native environments. The following *endpoints* (such as `PUT /v1/policies`) provide reference documentation for the OPA REST API.  ### API specification viewing options  - **[View the specification in *Redoc* (default)](index.html)** - **[View the specification in *Swagger UI*](swagger-ui.html)**
 *
 * The version of the OpenAPI document: 0.28.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GetDocumentWithWebHook200Response;
import org.openapitools.client.model.Model200Result;
import org.openapitools.client.model.Model400;
import org.openapitools.client.model.Model404;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PolicyApiApi
 */
@Disabled
public class PolicyApiApiTest {

    private final PolicyApiApi api = new PolicyApiApi();

    /**
     * Delete a policy module
     *
     * This API endpoint removes an existing policy module from the server
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deletePolicyModuleTest() throws ApiException {
        String id = null;
        Boolean pretty = null;
        GetDocumentWithWebHook200Response response = api.deletePolicyModule(id, pretty);
        // TODO: test validations
    }

    /**
     * List policies
     *
     * This API endpoint responds with a list of all policy modules on the server (result response)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPoliciesTest() throws ApiException {
        Boolean pretty = null;
        Model200Result response = api.getPolicies(pretty);
        // TODO: test validations
    }

    /**
     * Get a policy module
     *
     * This API endpoint returns the details of the specified policy module (&#x60;{id}&#x60;)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPolicyModuleTest() throws ApiException {
        String id = null;
        Boolean pretty = null;
        Model200Result response = api.getPolicyModule(id, pretty);
        // TODO: test validations
    }

    /**
     * Create or update a policy module
     *
     * - If the policy module does not exist, it is created. - If the policy module already exists, it is replaced.  If the policy module isn&#39;t correctly defined, a *bad request* (400) response is returned.  ### Example policy module &#x60;&#x60;&#x60;yaml package opa.examples  import data.servers import data.networks import data.ports  public_servers[server] {   some k, m    server :&#x3D; servers[_]    server.ports[_] &#x3D;&#x3D; ports[k].id    ports[k].networks[_] &#x3D;&#x3D; networks[m].id    networks[m].public &#x3D;&#x3D; true } &#x60;&#x60;&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putPolicyModuleTest() throws ApiException {
        String id = null;
        String body = null;
        Boolean pretty = null;
        Boolean metrics = null;
        Model200Result response = api.putPolicyModule(id, body, pretty, metrics);
        // TODO: test validations
    }

}
