/**
 * Open Policy Agent (OPA) REST API
 * OPA provides policy-based control for cloud native environments. The following *endpoints* (such as `PUT /v1/policies`) provide reference documentation for the OPA REST API.  ### API specification viewing options  - **[View the specification in *Redoc* (default)](index.html)** - **[View the specification in *Swagger UI*](swagger-ui.html)**
 *
 * The version of the OpenAPI document: 0.28.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenPolicyAgentOpaRestApi);
  }
}(this, function(expect, OpenPolicyAgentOpaRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenPolicyAgentOpaRestApi.Model200ProvenanceProvenance();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Model200ProvenanceProvenance', function() {
    it('should create an instance of Model200ProvenanceProvenance', function() {
      // uncomment below and update the code to test Model200ProvenanceProvenance
      //var instance = new OpenPolicyAgentOpaRestApi.Model200ProvenanceProvenance();
      //expect(instance).to.be.a(OpenPolicyAgentOpaRestApi.Model200ProvenanceProvenance);
    });

    it('should have the property buildCommit (base name: "build_commit")', function() {
      // uncomment below and update the code to test the property buildCommit
      //var instance = new OpenPolicyAgentOpaRestApi.Model200ProvenanceProvenance();
      //expect(instance).to.be();
    });

    it('should have the property buildHostname (base name: "build_hostname")', function() {
      // uncomment below and update the code to test the property buildHostname
      //var instance = new OpenPolicyAgentOpaRestApi.Model200ProvenanceProvenance();
      //expect(instance).to.be();
    });

    it('should have the property buildTimestamp (base name: "build_timestamp")', function() {
      // uncomment below and update the code to test the property buildTimestamp
      //var instance = new OpenPolicyAgentOpaRestApi.Model200ProvenanceProvenance();
      //expect(instance).to.be();
    });

    it('should have the property bundles (base name: "bundles")', function() {
      // uncomment below and update the code to test the property bundles
      //var instance = new OpenPolicyAgentOpaRestApi.Model200ProvenanceProvenance();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new OpenPolicyAgentOpaRestApi.Model200ProvenanceProvenance();
      //expect(instance).to.be();
    });

  });

}));
