/**
 * Open Policy Agent (OPA) REST API
 * OPA provides policy-based control for cloud native environments. The following *endpoints* (such as `PUT /v1/policies`) provide reference documentation for the OPA REST API.  ### API specification viewing options  - **[View the specification in *Redoc* (default)](index.html)** - **[View the specification in *Swagger UI*](swagger-ui.html)**
 *
 * The version of the OpenAPI document: 0.28.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Model200SingleResultResultBundles from './Model200SingleResultResultBundles';
import Model200SingleResultResultDecisionLogs from './Model200SingleResultResultDecisionLogs';
import Model200SingleResultResultKeys from './Model200SingleResultResultKeys';
import Model200SingleResultResultLabels from './Model200SingleResultResultLabels';
import Model200SingleResultResultServices from './Model200SingleResultResultServices';
import Model200SingleResultResultStatus from './Model200SingleResultResultStatus';

/**
 * The Model200SingleResultResult model module.
 * @module model/Model200SingleResultResult
 * @version 0.28.0
 */
class Model200SingleResultResult {
    /**
     * Constructs a new <code>Model200SingleResultResult</code>.
     * @alias module:model/Model200SingleResultResult
     */
    constructor() { 
        
        Model200SingleResultResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Model200SingleResultResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Model200SingleResultResult} obj Optional instance to populate.
     * @return {module:model/Model200SingleResultResult} The populated <code>Model200SingleResultResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Model200SingleResultResult();

            if (data.hasOwnProperty('bundles')) {
                obj['bundles'] = Model200SingleResultResultBundles.constructFromObject(data['bundles']);
            }
            if (data.hasOwnProperty('decision_logs')) {
                obj['decision_logs'] = Model200SingleResultResultDecisionLogs.constructFromObject(data['decision_logs']);
            }
            if (data.hasOwnProperty('default_authorization_decision')) {
                obj['default_authorization_decision'] = ApiClient.convertToType(data['default_authorization_decision'], 'String');
            }
            if (data.hasOwnProperty('default_decision')) {
                obj['default_decision'] = ApiClient.convertToType(data['default_decision'], 'String');
            }
            if (data.hasOwnProperty('keys')) {
                obj['keys'] = Model200SingleResultResultKeys.constructFromObject(data['keys']);
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = Model200SingleResultResultLabels.constructFromObject(data['labels']);
            }
            if (data.hasOwnProperty('services')) {
                obj['services'] = Model200SingleResultResultServices.constructFromObject(data['services']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = Model200SingleResultResultStatus.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Model200SingleResultResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Model200SingleResultResult</code>.
     */
    static validateJSON(data) {
        // validate the optional field `bundles`
        if (data['bundles']) { // data not null
          Model200SingleResultResultBundles.validateJSON(data['bundles']);
        }
        // validate the optional field `decision_logs`
        if (data['decision_logs']) { // data not null
          Model200SingleResultResultDecisionLogs.validateJSON(data['decision_logs']);
        }
        // ensure the json data is a string
        if (data['default_authorization_decision'] && !(typeof data['default_authorization_decision'] === 'string' || data['default_authorization_decision'] instanceof String)) {
            throw new Error("Expected the field `default_authorization_decision` to be a primitive type in the JSON string but got " + data['default_authorization_decision']);
        }
        // ensure the json data is a string
        if (data['default_decision'] && !(typeof data['default_decision'] === 'string' || data['default_decision'] instanceof String)) {
            throw new Error("Expected the field `default_decision` to be a primitive type in the JSON string but got " + data['default_decision']);
        }
        // validate the optional field `keys`
        if (data['keys']) { // data not null
          Model200SingleResultResultKeys.validateJSON(data['keys']);
        }
        // validate the optional field `labels`
        if (data['labels']) { // data not null
          Model200SingleResultResultLabels.validateJSON(data['labels']);
        }
        // validate the optional field `services`
        if (data['services']) { // data not null
          Model200SingleResultResultServices.validateJSON(data['services']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          Model200SingleResultResultStatus.validateJSON(data['status']);
        }

        return true;
    }


}



/**
 * @member {module:model/Model200SingleResultResultBundles} bundles
 */
Model200SingleResultResult.prototype['bundles'] = undefined;

/**
 * @member {module:model/Model200SingleResultResultDecisionLogs} decision_logs
 */
Model200SingleResultResult.prototype['decision_logs'] = undefined;

/**
 * @member {String} default_authorization_decision
 */
Model200SingleResultResult.prototype['default_authorization_decision'] = undefined;

/**
 * @member {String} default_decision
 */
Model200SingleResultResult.prototype['default_decision'] = undefined;

/**
 * @member {module:model/Model200SingleResultResultKeys} keys
 */
Model200SingleResultResult.prototype['keys'] = undefined;

/**
 * @member {module:model/Model200SingleResultResultLabels} labels
 */
Model200SingleResultResult.prototype['labels'] = undefined;

/**
 * @member {module:model/Model200SingleResultResultServices} services
 */
Model200SingleResultResult.prototype['services'] = undefined;

/**
 * @member {module:model/Model200SingleResultResultStatus} status
 */
Model200SingleResultResult.prototype['status'] = undefined;






export default Model200SingleResultResult;

