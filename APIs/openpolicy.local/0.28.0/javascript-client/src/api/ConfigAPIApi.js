/**
 * Open Policy Agent (OPA) REST API
 * OPA provides policy-based control for cloud native environments. The following *endpoints* (such as `PUT /v1/policies`) provide reference documentation for the OPA REST API.  ### API specification viewing options  - **[View the specification in *Redoc* (default)](index.html)** - **[View the specification in *Swagger UI*](swagger-ui.html)**
 *
 * The version of the OpenAPI document: 0.28.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Model200SingleResult from '../model/Model200SingleResult';
import Model400 from '../model/Model400';

/**
* ConfigAPI service.
* @module api/ConfigAPIApi
* @version 0.28.0
*/
export default class ConfigAPIApi {

    /**
    * Constructs a new ConfigAPIApi. 
    * @alias module:api/ConfigAPIApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getConfig operation.
     * @callback module:api/ConfigAPIApi~getConfigCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Model200SingleResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get configurations
     * This API endpoint responds with active configuration (result response)  --- **Note** The `credentials` field in the `services` configuration and  The `private_key` and `key` fields in the `keys` configuration will be omitted from the API response  ---
     * @param {Object} opts Optional parameters
     * @param {Boolean} [pretty] If true, response will be in a human-readable format.
     * @param {module:api/ConfigAPIApi~getConfigCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model200SingleResult}
     */
    getConfig(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Model200SingleResult;
      return this.apiClient.callApi(
        '/v1/config', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
