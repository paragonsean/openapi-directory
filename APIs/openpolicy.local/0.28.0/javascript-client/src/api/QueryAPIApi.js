/**
 * Open Policy Agent (OPA) REST API
 * OPA provides policy-based control for cloud native environments. The following *endpoints* (such as `PUT /v1/policies`) provide reference documentation for the OPA REST API.  ### API specification viewing options  - **[View the specification in *Redoc* (default)](index.html)** - **[View the specification in *Swagger UI*](swagger-ui.html)**
 *
 * The version of the OpenAPI document: 0.28.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Model400 from '../model/Model400';
import Model404 from '../model/Model404';
import PostCompile200Response from '../model/PostCompile200Response';

/**
* QueryAPI service.
* @module api/QueryAPIApi
* @version 0.28.0
*/
export default class QueryAPIApi {

    /**
    * Constructs a new QueryAPIApi. 
    * @alias module:api/QueryAPIApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getQuery operation.
     * @callback module:api/QueryAPIApi~getQueryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PostCompile200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Execute an ad-hoc query (simple)
     * This API endpoint returns bindings for the variables in the query.  For more complex JSON queries, use `POST /v1/query` instead.
     * @param {String} q The [URL-encoded](https://www.w3schools.com/tags/ref_urlencode.ASP) ad-hoc query to execute.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [pretty] If true, response will be in a human-readable format.
     * @param {String} [explain] If set to *full*, response will include query explanations in addition to the result.
     * @param {Boolean} [metrics] If true, compiler performance metrics will be returned in the response.
     * @param {module:api/QueryAPIApi~getQueryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PostCompile200Response}
     */
    getQuery(q, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'q' is set
      if (q === undefined || q === null) {
        throw new Error("Missing the required parameter 'q' when calling getQuery");
      }

      let pathParams = {
      };
      let queryParams = {
        'q': q,
        'pretty': opts['pretty'],
        'explain': opts['explain'],
        'metrics': opts['metrics']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PostCompile200Response;
      return this.apiClient.callApi(
        '/v1/query', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postQuery operation.
     * @callback module:api/QueryAPIApi~postQueryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PostCompile200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Execute an ad-hoc query (complex)
     * This API endpoint returns bindings for the variables in the query.  For simpler JSON queries, you may use `GET /v1/query` instead.
     * @param {Object.<String, {String: Object}>} requestBody The test of the query (in JSON format)
     * @param {Object} opts Optional parameters
     * @param {Boolean} [pretty] If true, response will be in a human-readable format.
     * @param {String} [explain] If set to *full*, response will include query explanations in addition to the result.
     * @param {Boolean} [metrics] If true, compiler performance metrics will be returned in the response.
     * @param {module:api/QueryAPIApi~postQueryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PostCompile200Response}
     */
    postQuery(requestBody, opts, callback) {
      opts = opts || {};
      let postBody = requestBody;
      // verify the required parameter 'requestBody' is set
      if (requestBody === undefined || requestBody === null) {
        throw new Error("Missing the required parameter 'requestBody' when calling postQuery");
      }

      let pathParams = {
      };
      let queryParams = {
        'pretty': opts['pretty'],
        'explain': opts['explain'],
        'metrics': opts['metrics']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/x-yaml'];
      let accepts = ['application/json'];
      let returnType = PostCompile200Response;
      return this.apiClient.callApi(
        '/v1/query', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postSimpleQuery operation.
     * @callback module:api/QueryAPIApi~postSimpleQueryCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Execute a simple query
     * This API queries the document at *_/data/system/main* by default (however, you can [configure OPA](https://www.openpolicyagent.org/docs/latest/configuration/) to use a different path to serve these queries). That document defines the response. For example, use the following in `PUT /v1/policies/{path}`) to define a rule that will produce a value for the *_/data/system/main* document:    ```yaml   package system   main = msg {     msg := sprintf(\"hello, %v\", input.user)   }   ```  The server will return a *not found* (404) response if *_/data/system/main* is undefined.
     * @param {Object.<String, {String: Object}>} requestBody The text of the input document (in JSON format)
     * @param {Object} opts Optional parameters
     * @param {Boolean} [pretty] If true, response will be in a human-readable format.
     * @param {module:api/QueryAPIApi~postSimpleQueryCallback} callback The callback function, accepting three arguments: error, data, response
     */
    postSimpleQuery(requestBody, opts, callback) {
      opts = opts || {};
      let postBody = requestBody;
      // verify the required parameter 'requestBody' is set
      if (requestBody === undefined || requestBody === null) {
        throw new Error("Missing the required parameter 'requestBody' when calling postSimpleQuery");
      }

      let pathParams = {
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
