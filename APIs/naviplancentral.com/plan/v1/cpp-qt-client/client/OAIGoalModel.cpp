/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoalModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoalModel::OAIGoalModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoalModel::OAIGoalModel() {
    this->initializeModel();
}

OAIGoalModel::~OAIGoalModel() {}

void OAIGoalModel::initializeModel() {

    m_goal_isSet = false;
    m_goal_isValid = false;

    m_links_isSet = false;
    m_links_isValid = false;
}

void OAIGoalModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoalModel::fromJsonObject(QJsonObject json) {

    m_goal_isValid = ::OpenAPI::fromJsonValue(m_goal, json[QString("goal")]);
    m_goal_isSet = !json[QString("goal")].isNull() && m_goal_isValid;

    m_links_isValid = ::OpenAPI::fromJsonValue(m_links, json[QString("links")]);
    m_links_isSet = !json[QString("links")].isNull() && m_links_isValid;
}

QString OAIGoalModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoalModel::asJsonObject() const {
    QJsonObject obj;
    if (m_goal.isSet()) {
        obj.insert(QString("goal"), ::OpenAPI::toJsonValue(m_goal));
    }
    if (m_links.size() > 0) {
        obj.insert(QString("links"), ::OpenAPI::toJsonValue(m_links));
    }
    return obj;
}

OAIIGoal OAIGoalModel::getGoal() const {
    return m_goal;
}
void OAIGoalModel::setGoal(const OAIIGoal &goal) {
    m_goal = goal;
    m_goal_isSet = true;
}

bool OAIGoalModel::is_goal_Set() const{
    return m_goal_isSet;
}

bool OAIGoalModel::is_goal_Valid() const{
    return m_goal_isValid;
}

QList<OAIObjectLink> OAIGoalModel::getLinks() const {
    return m_links;
}
void OAIGoalModel::setLinks(const QList<OAIObjectLink> &links) {
    m_links = links;
    m_links_isSet = true;
}

bool OAIGoalModel::is_links_Set() const{
    return m_links_isSet;
}

bool OAIGoalModel::is_links_Valid() const{
    return m_links_isValid;
}

bool OAIGoalModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_goal.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_links.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoalModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
