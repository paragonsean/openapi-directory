/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIBusinessEntity.h
 *
 * 
 */

#ifndef OAIIBusinessEntity_H
#define OAIIBusinessEntity_H

#include <QJsonObject>

#include "OAICurrency.h"
#include "OAIDate.h"
#include "OAIIAssetId.h"
#include "OAIIBusinessEntityActivity.h"
#include "OAIILiquidationEvent.h"
#include "OAIPercent.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIBusinessEntityActivity;
class OAIIAssetId;
class OAICurrency;
class OAIPercent;
class OAIILiquidationEvent;
class OAIDate;

class OAIIBusinessEntity : public OAIObject {
public:
    OAIIBusinessEntity();
    OAIIBusinessEntity(QString json);
    ~OAIIBusinessEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIIBusinessEntityActivity> getActivities() const;
    void setActivities(const QList<OAIIBusinessEntityActivity> &activities);
    bool is_activities_Set() const;
    bool is_activities_Valid() const;

    OAIIAssetId getAssetId() const;
    void setAssetId(const OAIIAssetId &asset_id);
    bool is_asset_id_Set() const;
    bool is_asset_id_Valid() const;

    QString getBusinessType() const;
    void setBusinessType(const QString &business_type);
    bool is_business_type_Set() const;
    bool is_business_type_Valid() const;

    QString getBusinessTypeFormatted() const;
    void setBusinessTypeFormatted(const QString &business_type_formatted);
    bool is_business_type_formatted_Set() const;
    bool is_business_type_formatted_Valid() const;

    OAICurrency getCurrentAnnualDistributions() const;
    void setCurrentAnnualDistributions(const OAICurrency &current_annual_distributions);
    bool is_current_annual_distributions_Set() const;
    bool is_current_annual_distributions_Valid() const;

    OAICurrency getCurrentAnnualDividends() const;
    void setCurrentAnnualDividends(const OAICurrency &current_annual_dividends);
    bool is_current_annual_dividends_Set() const;
    bool is_current_annual_dividends_Valid() const;

    OAIPercent getCurrentAnnualGrowthRate() const;
    void setCurrentAnnualGrowthRate(const OAIPercent &current_annual_growth_rate);
    bool is_current_annual_growth_rate_Set() const;
    bool is_current_annual_growth_rate_Valid() const;

    OAICurrency getCurrentAnnualNetIncome() const;
    void setCurrentAnnualNetIncome(const OAICurrency &current_annual_net_income);
    bool is_current_annual_net_income_Set() const;
    bool is_current_annual_net_income_Valid() const;

    QString getEntityName() const;
    void setEntityName(const QString &entity_name);
    bool is_entity_name_Set() const;
    bool is_entity_name_Valid() const;

    OAIILiquidationEvent getLiquidationEvent() const;
    void setLiquidationEvent(const OAIILiquidationEvent &liquidation_event);
    bool is_liquidation_event_Set() const;
    bool is_liquidation_event_Valid() const;

    OAIDate getMarketValuationDate() const;
    void setMarketValuationDate(const OAIDate &market_valuation_date);
    bool is_market_valuation_date_Set() const;
    bool is_market_valuation_date_Valid() const;

    OAICurrency getMarketValue() const;
    void setMarketValue(const OAICurrency &market_value);
    bool is_market_value_Set() const;
    bool is_market_value_Valid() const;

    QString getOwner() const;
    void setOwner(const QString &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    OAICurrency getPurchaseAmount() const;
    void setPurchaseAmount(const OAICurrency &purchase_amount);
    bool is_purchase_amount_Set() const;
    bool is_purchase_amount_Valid() const;

    OAIDate getPurchaseDate() const;
    void setPurchaseDate(const OAIDate &purchase_date);
    bool is_purchase_date_Set() const;
    bool is_purchase_date_Valid() const;

    OAIPercent getStandardDeviation() const;
    void setStandardDeviation(const OAIPercent &standard_deviation);
    bool is_standard_deviation_Set() const;
    bool is_standard_deviation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIIBusinessEntityActivity> m_activities;
    bool m_activities_isSet;
    bool m_activities_isValid;

    OAIIAssetId m_asset_id;
    bool m_asset_id_isSet;
    bool m_asset_id_isValid;

    QString m_business_type;
    bool m_business_type_isSet;
    bool m_business_type_isValid;

    QString m_business_type_formatted;
    bool m_business_type_formatted_isSet;
    bool m_business_type_formatted_isValid;

    OAICurrency m_current_annual_distributions;
    bool m_current_annual_distributions_isSet;
    bool m_current_annual_distributions_isValid;

    OAICurrency m_current_annual_dividends;
    bool m_current_annual_dividends_isSet;
    bool m_current_annual_dividends_isValid;

    OAIPercent m_current_annual_growth_rate;
    bool m_current_annual_growth_rate_isSet;
    bool m_current_annual_growth_rate_isValid;

    OAICurrency m_current_annual_net_income;
    bool m_current_annual_net_income_isSet;
    bool m_current_annual_net_income_isValid;

    QString m_entity_name;
    bool m_entity_name_isSet;
    bool m_entity_name_isValid;

    OAIILiquidationEvent m_liquidation_event;
    bool m_liquidation_event_isSet;
    bool m_liquidation_event_isValid;

    OAIDate m_market_valuation_date;
    bool m_market_valuation_date_isSet;
    bool m_market_valuation_date_isValid;

    OAICurrency m_market_value;
    bool m_market_value_isSet;
    bool m_market_value_isValid;

    QString m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    OAICurrency m_purchase_amount;
    bool m_purchase_amount_isSet;
    bool m_purchase_amount_isValid;

    OAIDate m_purchase_date;
    bool m_purchase_date_isSet;
    bool m_purchase_date_isValid;

    OAIPercent m_standard_deviation;
    bool m_standard_deviation_isSet;
    bool m_standard_deviation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIBusinessEntity)

#endif // OAIIBusinessEntity_H
