/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdvicentNaviPlanRestApiNetWorthModelsHoldingModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdvicentNaviPlanRestApiNetWorthModelsHoldingModel::OAIAdvicentNaviPlanRestApiNetWorthModelsHoldingModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdvicentNaviPlanRestApiNetWorthModelsHoldingModel::OAIAdvicentNaviPlanRestApiNetWorthModelsHoldingModel() {
    this->initializeModel();
}

OAIAdvicentNaviPlanRestApiNetWorthModelsHoldingModel::~OAIAdvicentNaviPlanRestApiNetWorthModelsHoldingModel() {}

void OAIAdvicentNaviPlanRestApiNetWorthModelsHoldingModel::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_market_value_isSet = false;
    m_market_value_isValid = false;

    m_valuation_date_isSet = false;
    m_valuation_date_isValid = false;
}

void OAIAdvicentNaviPlanRestApiNetWorthModelsHoldingModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdvicentNaviPlanRestApiNetWorthModelsHoldingModel::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_market_value_isValid = ::OpenAPI::fromJsonValue(m_market_value, json[QString("marketValue")]);
    m_market_value_isSet = !json[QString("marketValue")].isNull() && m_market_value_isValid;

    m_valuation_date_isValid = ::OpenAPI::fromJsonValue(m_valuation_date, json[QString("valuationDate")]);
    m_valuation_date_isSet = !json[QString("valuationDate")].isNull() && m_valuation_date_isValid;
}

QString OAIAdvicentNaviPlanRestApiNetWorthModelsHoldingModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdvicentNaviPlanRestApiNetWorthModelsHoldingModel::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_market_value_isSet) {
        obj.insert(QString("marketValue"), ::OpenAPI::toJsonValue(m_market_value));
    }
    if (m_valuation_date_isSet) {
        obj.insert(QString("valuationDate"), ::OpenAPI::toJsonValue(m_valuation_date));
    }
    return obj;
}

QString OAIAdvicentNaviPlanRestApiNetWorthModelsHoldingModel::getDescription() const {
    return m_description;
}
void OAIAdvicentNaviPlanRestApiNetWorthModelsHoldingModel::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIAdvicentNaviPlanRestApiNetWorthModelsHoldingModel::is_description_Set() const{
    return m_description_isSet;
}

bool OAIAdvicentNaviPlanRestApiNetWorthModelsHoldingModel::is_description_Valid() const{
    return m_description_isValid;
}

double OAIAdvicentNaviPlanRestApiNetWorthModelsHoldingModel::getMarketValue() const {
    return m_market_value;
}
void OAIAdvicentNaviPlanRestApiNetWorthModelsHoldingModel::setMarketValue(const double &market_value) {
    m_market_value = market_value;
    m_market_value_isSet = true;
}

bool OAIAdvicentNaviPlanRestApiNetWorthModelsHoldingModel::is_market_value_Set() const{
    return m_market_value_isSet;
}

bool OAIAdvicentNaviPlanRestApiNetWorthModelsHoldingModel::is_market_value_Valid() const{
    return m_market_value_isValid;
}

QDateTime OAIAdvicentNaviPlanRestApiNetWorthModelsHoldingModel::getValuationDate() const {
    return m_valuation_date;
}
void OAIAdvicentNaviPlanRestApiNetWorthModelsHoldingModel::setValuationDate(const QDateTime &valuation_date) {
    m_valuation_date = valuation_date;
    m_valuation_date_isSet = true;
}

bool OAIAdvicentNaviPlanRestApiNetWorthModelsHoldingModel::is_valuation_date_Set() const{
    return m_valuation_date_isSet;
}

bool OAIAdvicentNaviPlanRestApiNetWorthModelsHoldingModel::is_valuation_date_Valid() const{
    return m_valuation_date_isValid;
}

bool OAIAdvicentNaviPlanRestApiNetWorthModelsHoldingModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_market_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_valuation_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdvicentNaviPlanRestApiNetWorthModelsHoldingModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
