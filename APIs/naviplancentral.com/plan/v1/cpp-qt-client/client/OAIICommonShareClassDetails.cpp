/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIICommonShareClassDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIICommonShareClassDetails::OAIICommonShareClassDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIICommonShareClassDetails::OAIICommonShareClassDetails() {
    this->initializeModel();
}

OAIICommonShareClassDetails::~OAIICommonShareClassDetails() {}

void OAIICommonShareClassDetails::initializeModel() {

    m_share_class_structure_isSet = false;
    m_share_class_structure_isValid = false;
}

void OAIICommonShareClassDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIICommonShareClassDetails::fromJsonObject(QJsonObject json) {

    m_share_class_structure_isValid = ::OpenAPI::fromJsonValue(m_share_class_structure, json[QString("shareClassStructure")]);
    m_share_class_structure_isSet = !json[QString("shareClassStructure")].isNull() && m_share_class_structure_isValid;
}

QString OAIICommonShareClassDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIICommonShareClassDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_share_class_structure.isSet()) {
        obj.insert(QString("shareClassStructure"), ::OpenAPI::toJsonValue(m_share_class_structure));
    }
    return obj;
}

OAIIShareClassStructure OAIICommonShareClassDetails::getShareClassStructure() const {
    return m_share_class_structure;
}
void OAIICommonShareClassDetails::setShareClassStructure(const OAIIShareClassStructure &share_class_structure) {
    m_share_class_structure = share_class_structure;
    m_share_class_structure_isSet = true;
}

bool OAIICommonShareClassDetails::is_share_class_structure_Set() const{
    return m_share_class_structure_isSet;
}

bool OAIICommonShareClassDetails::is_share_class_structure_Valid() const{
    return m_share_class_structure_isValid;
}

bool OAIICommonShareClassDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_share_class_structure.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIICommonShareClassDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
