/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceInformation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceInformation::OAIServiceInformation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceInformation::OAIServiceInformation() {
    this->initializeModel();
}

OAIServiceInformation::~OAIServiceInformation() {}

void OAIServiceInformation::initializeModel() {

    m_altair_connection_status_isSet = false;
    m_altair_connection_status_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_pom_version_isSet = false;
    m_pom_version_isValid = false;

    m_service_version_isSet = false;
    m_service_version_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIServiceInformation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServiceInformation::fromJsonObject(QJsonObject json) {

    m_altair_connection_status_isValid = ::OpenAPI::fromJsonValue(m_altair_connection_status, json[QString("altairConnectionStatus")]);
    m_altair_connection_status_isSet = !json[QString("altairConnectionStatus")].isNull() && m_altair_connection_status_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_pom_version_isValid = ::OpenAPI::fromJsonValue(m_pom_version, json[QString("pomVersion")]);
    m_pom_version_isSet = !json[QString("pomVersion")].isNull() && m_pom_version_isValid;

    m_service_version_isValid = ::OpenAPI::fromJsonValue(m_service_version, json[QString("serviceVersion")]);
    m_service_version_isSet = !json[QString("serviceVersion")].isNull() && m_service_version_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIServiceInformation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServiceInformation::asJsonObject() const {
    QJsonObject obj;
    if (m_altair_connection_status_isSet) {
        obj.insert(QString("altairConnectionStatus"), ::OpenAPI::toJsonValue(m_altair_connection_status));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_pom_version_isSet) {
        obj.insert(QString("pomVersion"), ::OpenAPI::toJsonValue(m_pom_version));
    }
    if (m_service_version_isSet) {
        obj.insert(QString("serviceVersion"), ::OpenAPI::toJsonValue(m_service_version));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

bool OAIServiceInformation::isAltairConnectionStatus() const {
    return m_altair_connection_status;
}
void OAIServiceInformation::setAltairConnectionStatus(const bool &altair_connection_status) {
    m_altair_connection_status = altair_connection_status;
    m_altair_connection_status_isSet = true;
}

bool OAIServiceInformation::is_altair_connection_status_Set() const{
    return m_altair_connection_status_isSet;
}

bool OAIServiceInformation::is_altair_connection_status_Valid() const{
    return m_altair_connection_status_isValid;
}

QString OAIServiceInformation::getName() const {
    return m_name;
}
void OAIServiceInformation::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIServiceInformation::is_name_Set() const{
    return m_name_isSet;
}

bool OAIServiceInformation::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIServiceInformation::getPomVersion() const {
    return m_pom_version;
}
void OAIServiceInformation::setPomVersion(const QString &pom_version) {
    m_pom_version = pom_version;
    m_pom_version_isSet = true;
}

bool OAIServiceInformation::is_pom_version_Set() const{
    return m_pom_version_isSet;
}

bool OAIServiceInformation::is_pom_version_Valid() const{
    return m_pom_version_isValid;
}

QString OAIServiceInformation::getServiceVersion() const {
    return m_service_version;
}
void OAIServiceInformation::setServiceVersion(const QString &service_version) {
    m_service_version = service_version;
    m_service_version_isSet = true;
}

bool OAIServiceInformation::is_service_version_Set() const{
    return m_service_version_isSet;
}

bool OAIServiceInformation::is_service_version_Valid() const{
    return m_service_version_isValid;
}

QString OAIServiceInformation::getStatus() const {
    return m_status;
}
void OAIServiceInformation::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIServiceInformation::is_status_Set() const{
    return m_status_isSet;
}

bool OAIServiceInformation::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIServiceInformation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_altair_connection_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pom_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServiceInformation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
