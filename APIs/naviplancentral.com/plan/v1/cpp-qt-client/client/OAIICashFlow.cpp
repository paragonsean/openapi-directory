/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIICashFlow.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIICashFlow::OAIICashFlow(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIICashFlow::OAIICashFlow() {
    this->initializeModel();
}

OAIICashFlow::~OAIICashFlow() {}

void OAIICashFlow::initializeModel() {

    m_incomes_isSet = false;
    m_incomes_isValid = false;

    m_outflows_isSet = false;
    m_outflows_isValid = false;

    m_surplus_deficit_isSet = false;
    m_surplus_deficit_isValid = false;

    m_taxes_isSet = false;
    m_taxes_isValid = false;
}

void OAIICashFlow::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIICashFlow::fromJsonObject(QJsonObject json) {

    m_incomes_isValid = ::OpenAPI::fromJsonValue(m_incomes, json[QString("incomes")]);
    m_incomes_isSet = !json[QString("incomes")].isNull() && m_incomes_isValid;

    m_outflows_isValid = ::OpenAPI::fromJsonValue(m_outflows, json[QString("outflows")]);
    m_outflows_isSet = !json[QString("outflows")].isNull() && m_outflows_isValid;

    m_surplus_deficit_isValid = ::OpenAPI::fromJsonValue(m_surplus_deficit, json[QString("surplusDeficit")]);
    m_surplus_deficit_isSet = !json[QString("surplusDeficit")].isNull() && m_surplus_deficit_isValid;

    m_taxes_isValid = ::OpenAPI::fromJsonValue(m_taxes, json[QString("taxes")]);
    m_taxes_isSet = !json[QString("taxes")].isNull() && m_taxes_isValid;
}

QString OAIICashFlow::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIICashFlow::asJsonObject() const {
    QJsonObject obj;
    if (m_incomes.isSet()) {
        obj.insert(QString("incomes"), ::OpenAPI::toJsonValue(m_incomes));
    }
    if (m_outflows.isSet()) {
        obj.insert(QString("outflows"), ::OpenAPI::toJsonValue(m_outflows));
    }
    if (m_surplus_deficit.isSet()) {
        obj.insert(QString("surplusDeficit"), ::OpenAPI::toJsonValue(m_surplus_deficit));
    }
    if (m_taxes.isSet()) {
        obj.insert(QString("taxes"), ::OpenAPI::toJsonValue(m_taxes));
    }
    return obj;
}

OAIICashFlowIncomes OAIICashFlow::getIncomes() const {
    return m_incomes;
}
void OAIICashFlow::setIncomes(const OAIICashFlowIncomes &incomes) {
    m_incomes = incomes;
    m_incomes_isSet = true;
}

bool OAIICashFlow::is_incomes_Set() const{
    return m_incomes_isSet;
}

bool OAIICashFlow::is_incomes_Valid() const{
    return m_incomes_isValid;
}

OAIICashFlowOutflows OAIICashFlow::getOutflows() const {
    return m_outflows;
}
void OAIICashFlow::setOutflows(const OAIICashFlowOutflows &outflows) {
    m_outflows = outflows;
    m_outflows_isSet = true;
}

bool OAIICashFlow::is_outflows_Set() const{
    return m_outflows_isSet;
}

bool OAIICashFlow::is_outflows_Valid() const{
    return m_outflows_isValid;
}

OAICurrency OAIICashFlow::getSurplusDeficit() const {
    return m_surplus_deficit;
}
void OAIICashFlow::setSurplusDeficit(const OAICurrency &surplus_deficit) {
    m_surplus_deficit = surplus_deficit;
    m_surplus_deficit_isSet = true;
}

bool OAIICashFlow::is_surplus_deficit_Set() const{
    return m_surplus_deficit_isSet;
}

bool OAIICashFlow::is_surplus_deficit_Valid() const{
    return m_surplus_deficit_isValid;
}

OAIITaxes OAIICashFlow::getTaxes() const {
    return m_taxes;
}
void OAIICashFlow::setTaxes(const OAIITaxes &taxes) {
    m_taxes = taxes;
    m_taxes_isSet = true;
}

bool OAIICashFlow::is_taxes_Set() const{
    return m_taxes_isSet;
}

bool OAIICashFlow::is_taxes_Valid() const{
    return m_taxes_isValid;
}

bool OAIICashFlow::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_incomes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_outflows.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_surplus_deficit.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_taxes.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIICashFlow::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
