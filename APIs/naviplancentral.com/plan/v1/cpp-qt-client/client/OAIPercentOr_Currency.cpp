/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPercentOr_Currency.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPercentOr_Currency::OAIPercentOr_Currency(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPercentOr_Currency::OAIPercentOr_Currency() {
    this->initializeModel();
}

OAIPercentOr_Currency::~OAIPercentOr_Currency() {}

void OAIPercentOr_Currency::initializeModel() {

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_percent_isSet = false;
    m_percent_isValid = false;
}

void OAIPercentOr_Currency::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPercentOr_Currency::fromJsonObject(QJsonObject json) {

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_percent_isValid = ::OpenAPI::fromJsonValue(m_percent, json[QString("percent")]);
    m_percent_isSet = !json[QString("percent")].isNull() && m_percent_isValid;
}

QString OAIPercentOr_Currency::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPercentOr_Currency::asJsonObject() const {
    QJsonObject obj;
    if (m_currency.isSet()) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_percent.isSet()) {
        obj.insert(QString("percent"), ::OpenAPI::toJsonValue(m_percent));
    }
    return obj;
}

OAICurrency OAIPercentOr_Currency::getCurrency() const {
    return m_currency;
}
void OAIPercentOr_Currency::setCurrency(const OAICurrency &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIPercentOr_Currency::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIPercentOr_Currency::is_currency_Valid() const{
    return m_currency_isValid;
}

OAIPercent OAIPercentOr_Currency::getPercent() const {
    return m_percent;
}
void OAIPercentOr_Currency::setPercent(const OAIPercent &percent) {
    m_percent = percent;
    m_percent_isSet = true;
}

bool OAIPercentOr_Currency::is_percent_Set() const{
    return m_percent_isSet;
}

bool OAIPercentOr_Currency::is_percent_Valid() const{
    return m_percent_isValid;
}

bool OAIPercentOr_Currency::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_currency.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_percent.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPercentOr_Currency::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
