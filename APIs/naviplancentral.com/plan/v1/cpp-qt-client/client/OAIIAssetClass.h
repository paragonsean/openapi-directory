/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIAssetClass.h
 *
 * 
 */

#ifndef OAIIAssetClass_H
#define OAIIAssetClass_H

#include <QJsonObject>

#include "OAIIAssetClassWeight.h"
#include "OAIPercent.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPercent;
class OAIIAssetClassWeight;

class OAIIAssetClass : public OAIObject {
public:
    OAIIAssetClass();
    OAIIAssetClass(QString json);
    ~OAIIAssetClass() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getIndex() const;
    void setIndex(const qint32 &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    OAIPercent getMaxConstraint() const;
    void setMaxConstraint(const OAIPercent &max_constraint);
    bool is_max_constraint_Set() const;
    bool is_max_constraint_Valid() const;

    OAIPercent getMinConstraint() const;
    void setMinConstraint(const OAIPercent &min_constraint);
    bool is_min_constraint_Set() const;
    bool is_min_constraint_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getParentSuperAssetClassIndex() const;
    void setParentSuperAssetClassIndex(const qint32 &parent_super_asset_class_index);
    bool is_parent_super_asset_class_index_Set() const;
    bool is_parent_super_asset_class_index_Valid() const;

    OAIIAssetClassWeight getWeight() const;
    void setWeight(const OAIIAssetClassWeight &weight);
    bool is_weight_Set() const;
    bool is_weight_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    OAIPercent m_max_constraint;
    bool m_max_constraint_isSet;
    bool m_max_constraint_isValid;

    OAIPercent m_min_constraint;
    bool m_min_constraint_isSet;
    bool m_min_constraint_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_parent_super_asset_class_index;
    bool m_parent_super_asset_class_index_isSet;
    bool m_parent_super_asset_class_index_isValid;

    OAIIAssetClassWeight m_weight;
    bool m_weight_isSet;
    bool m_weight_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIAssetClass)

#endif // OAIIAssetClass_H
