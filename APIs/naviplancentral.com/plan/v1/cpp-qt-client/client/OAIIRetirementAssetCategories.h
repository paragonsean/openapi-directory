/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIRetirementAssetCategories.h
 *
 * 
 */

#ifndef OAIIRetirementAssetCategories_H
#define OAIIRetirementAssetCategories_H

#include <QJsonObject>

#include "OAIINetWorthCategory.h"
#include "OAIIValueDescriptionPair_Currency.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIValueDescriptionPair_Currency;
class OAIINetWorthCategory;

class OAIIRetirementAssetCategories : public OAIObject {
public:
    OAIIRetirementAssetCategories();
    OAIIRetirementAssetCategories(QString json);
    ~OAIIRetirementAssetCategories() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIIValueDescriptionPair_Currency> getAllAssets() const;
    void setAllAssets(const QList<OAIIValueDescriptionPair_Currency> &all_assets);
    bool is_all_assets_Set() const;
    bool is_all_assets_Valid() const;

    OAIINetWorthCategory getNonQualifiedAnnuities() const;
    void setNonQualifiedAnnuities(const OAIINetWorthCategory &non_qualified_annuities);
    bool is_non_qualified_annuities_Set() const;
    bool is_non_qualified_annuities_Valid() const;

    OAIINetWorthCategory getNonQualifiedAssets() const;
    void setNonQualifiedAssets(const OAIINetWorthCategory &non_qualified_assets);
    bool is_non_qualified_assets_Set() const;
    bool is_non_qualified_assets_Valid() const;

    OAIINetWorthCategory getQualifiedAnnuities() const;
    void setQualifiedAnnuities(const OAIINetWorthCategory &qualified_annuities);
    bool is_qualified_annuities_Set() const;
    bool is_qualified_annuities_Valid() const;

    OAIINetWorthCategory getQualifiedAssets() const;
    void setQualifiedAssets(const OAIINetWorthCategory &qualified_assets);
    bool is_qualified_assets_Set() const;
    bool is_qualified_assets_Valid() const;

    OAIINetWorthCategory getTotalAssets() const;
    void setTotalAssets(const OAIINetWorthCategory &total_assets);
    bool is_total_assets_Set() const;
    bool is_total_assets_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIIValueDescriptionPair_Currency> m_all_assets;
    bool m_all_assets_isSet;
    bool m_all_assets_isValid;

    OAIINetWorthCategory m_non_qualified_annuities;
    bool m_non_qualified_annuities_isSet;
    bool m_non_qualified_annuities_isValid;

    OAIINetWorthCategory m_non_qualified_assets;
    bool m_non_qualified_assets_isSet;
    bool m_non_qualified_assets_isValid;

    OAIINetWorthCategory m_qualified_annuities;
    bool m_qualified_annuities_isSet;
    bool m_qualified_annuities_isValid;

    OAIINetWorthCategory m_qualified_assets;
    bool m_qualified_assets_isSet;
    bool m_qualified_assets_isValid;

    OAIINetWorthCategory m_total_assets;
    bool m_total_assets_isSet;
    bool m_total_assets_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIRetirementAssetCategories)

#endif // OAIIRetirementAssetCategories_H
