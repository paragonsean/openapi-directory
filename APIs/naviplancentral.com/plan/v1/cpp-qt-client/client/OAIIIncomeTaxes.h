/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIIncomeTaxes.h
 *
 * 
 */

#ifndef OAIIIncomeTaxes_H
#define OAIIIncomeTaxes_H

#include <QJsonObject>

#include "OAIPercent.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPercent;

class OAIIIncomeTaxes : public OAIObject {
public:
    OAIIIncomeTaxes();
    OAIIIncomeTaxes(QString json);
    ~OAIIIncomeTaxes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPercent getAverageTaxRate() const;
    void setAverageTaxRate(const OAIPercent &average_tax_rate);
    bool is_average_tax_rate_Set() const;
    bool is_average_tax_rate_Valid() const;

    OAIPercent getCombinedStateAndAverageTaxRate() const;
    void setCombinedStateAndAverageTaxRate(const OAIPercent &combined_state_and_average_tax_rate);
    bool is_combined_state_and_average_tax_rate_Set() const;
    bool is_combined_state_and_average_tax_rate_Valid() const;

    OAIPercent getCombinedStateAndLongTermCapitalGainsTaxRate() const;
    void setCombinedStateAndLongTermCapitalGainsTaxRate(const OAIPercent &combined_state_and_long_term_capital_gains_tax_rate);
    bool is_combined_state_and_long_term_capital_gains_tax_rate_Set() const;
    bool is_combined_state_and_long_term_capital_gains_tax_rate_Valid() const;

    OAIPercent getCombinedStateAndMarginalTaxRate() const;
    void setCombinedStateAndMarginalTaxRate(const OAIPercent &combined_state_and_marginal_tax_rate);
    bool is_combined_state_and_marginal_tax_rate_Set() const;
    bool is_combined_state_and_marginal_tax_rate_Valid() const;

    OAIPercent getLongTermCapitalGainsTaxRate() const;
    void setLongTermCapitalGainsTaxRate(const OAIPercent &long_term_capital_gains_tax_rate);
    bool is_long_term_capital_gains_tax_rate_Set() const;
    bool is_long_term_capital_gains_tax_rate_Valid() const;

    OAIPercent getMarginalTaxRate() const;
    void setMarginalTaxRate(const OAIPercent &marginal_tax_rate);
    bool is_marginal_tax_rate_Set() const;
    bool is_marginal_tax_rate_Valid() const;

    OAIPercent getStateTaxRate() const;
    void setStateTaxRate(const OAIPercent &state_tax_rate);
    bool is_state_tax_rate_Set() const;
    bool is_state_tax_rate_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPercent m_average_tax_rate;
    bool m_average_tax_rate_isSet;
    bool m_average_tax_rate_isValid;

    OAIPercent m_combined_state_and_average_tax_rate;
    bool m_combined_state_and_average_tax_rate_isSet;
    bool m_combined_state_and_average_tax_rate_isValid;

    OAIPercent m_combined_state_and_long_term_capital_gains_tax_rate;
    bool m_combined_state_and_long_term_capital_gains_tax_rate_isSet;
    bool m_combined_state_and_long_term_capital_gains_tax_rate_isValid;

    OAIPercent m_combined_state_and_marginal_tax_rate;
    bool m_combined_state_and_marginal_tax_rate_isSet;
    bool m_combined_state_and_marginal_tax_rate_isValid;

    OAIPercent m_long_term_capital_gains_tax_rate;
    bool m_long_term_capital_gains_tax_rate_isSet;
    bool m_long_term_capital_gains_tax_rate_isValid;

    OAIPercent m_marginal_tax_rate;
    bool m_marginal_tax_rate_isSet;
    bool m_marginal_tax_rate_isValid;

    OAIPercent m_state_tax_rate;
    bool m_state_tax_rate_isSet;
    bool m_state_tax_rate_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIIncomeTaxes)

#endif // OAIIIncomeTaxes_H
