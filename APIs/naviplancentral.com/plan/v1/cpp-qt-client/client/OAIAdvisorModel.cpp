/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdvisorModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdvisorModel::OAIAdvisorModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdvisorModel::OAIAdvisorModel() {
    this->initializeModel();
}

OAIAdvisorModel::~OAIAdvisorModel() {}

void OAIAdvisorModel::initializeModel() {

    m_address_line1_isSet = false;
    m_address_line1_isValid = false;

    m_address_line2_isSet = false;
    m_address_line2_isValid = false;

    m_advisor_id_isSet = false;
    m_advisor_id_isValid = false;

    m_advisor_title_isSet = false;
    m_advisor_title_isValid = false;

    m_business_phone_isSet = false;
    m_business_phone_isValid = false;

    m_cell_phone_isSet = false;
    m_cell_phone_isValid = false;

    m_city_isSet = false;
    m_city_isValid = false;

    m_email_address_isSet = false;
    m_email_address_isValid = false;

    m_fax_phone_isSet = false;
    m_fax_phone_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_home_phone_isSet = false;
    m_home_phone_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_links_isSet = false;
    m_links_isValid = false;

    m_middle_name_isSet = false;
    m_middle_name_isValid = false;

    m_office_name_isSet = false;
    m_office_name_isValid = false;

    m_office_website_isSet = false;
    m_office_website_isValid = false;

    m_pager_number_isSet = false;
    m_pager_number_isValid = false;

    m_postal_code_isSet = false;
    m_postal_code_isValid = false;

    m_state_province_isSet = false;
    m_state_province_isValid = false;
}

void OAIAdvisorModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdvisorModel::fromJsonObject(QJsonObject json) {

    m_address_line1_isValid = ::OpenAPI::fromJsonValue(m_address_line1, json[QString("addressLine1")]);
    m_address_line1_isSet = !json[QString("addressLine1")].isNull() && m_address_line1_isValid;

    m_address_line2_isValid = ::OpenAPI::fromJsonValue(m_address_line2, json[QString("addressLine2")]);
    m_address_line2_isSet = !json[QString("addressLine2")].isNull() && m_address_line2_isValid;

    m_advisor_id_isValid = ::OpenAPI::fromJsonValue(m_advisor_id, json[QString("advisorId")]);
    m_advisor_id_isSet = !json[QString("advisorId")].isNull() && m_advisor_id_isValid;

    m_advisor_title_isValid = ::OpenAPI::fromJsonValue(m_advisor_title, json[QString("advisorTitle")]);
    m_advisor_title_isSet = !json[QString("advisorTitle")].isNull() && m_advisor_title_isValid;

    m_business_phone_isValid = ::OpenAPI::fromJsonValue(m_business_phone, json[QString("businessPhone")]);
    m_business_phone_isSet = !json[QString("businessPhone")].isNull() && m_business_phone_isValid;

    m_cell_phone_isValid = ::OpenAPI::fromJsonValue(m_cell_phone, json[QString("cellPhone")]);
    m_cell_phone_isSet = !json[QString("cellPhone")].isNull() && m_cell_phone_isValid;

    m_city_isValid = ::OpenAPI::fromJsonValue(m_city, json[QString("city")]);
    m_city_isSet = !json[QString("city")].isNull() && m_city_isValid;

    m_email_address_isValid = ::OpenAPI::fromJsonValue(m_email_address, json[QString("emailAddress")]);
    m_email_address_isSet = !json[QString("emailAddress")].isNull() && m_email_address_isValid;

    m_fax_phone_isValid = ::OpenAPI::fromJsonValue(m_fax_phone, json[QString("faxPhone")]);
    m_fax_phone_isSet = !json[QString("faxPhone")].isNull() && m_fax_phone_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_home_phone_isValid = ::OpenAPI::fromJsonValue(m_home_phone, json[QString("homePhone")]);
    m_home_phone_isSet = !json[QString("homePhone")].isNull() && m_home_phone_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("lastName")]);
    m_last_name_isSet = !json[QString("lastName")].isNull() && m_last_name_isValid;

    m_links_isValid = ::OpenAPI::fromJsonValue(m_links, json[QString("links")]);
    m_links_isSet = !json[QString("links")].isNull() && m_links_isValid;

    m_middle_name_isValid = ::OpenAPI::fromJsonValue(m_middle_name, json[QString("middleName")]);
    m_middle_name_isSet = !json[QString("middleName")].isNull() && m_middle_name_isValid;

    m_office_name_isValid = ::OpenAPI::fromJsonValue(m_office_name, json[QString("officeName")]);
    m_office_name_isSet = !json[QString("officeName")].isNull() && m_office_name_isValid;

    m_office_website_isValid = ::OpenAPI::fromJsonValue(m_office_website, json[QString("officeWebsite")]);
    m_office_website_isSet = !json[QString("officeWebsite")].isNull() && m_office_website_isValid;

    m_pager_number_isValid = ::OpenAPI::fromJsonValue(m_pager_number, json[QString("pagerNumber")]);
    m_pager_number_isSet = !json[QString("pagerNumber")].isNull() && m_pager_number_isValid;

    m_postal_code_isValid = ::OpenAPI::fromJsonValue(m_postal_code, json[QString("postalCode")]);
    m_postal_code_isSet = !json[QString("postalCode")].isNull() && m_postal_code_isValid;

    m_state_province_isValid = ::OpenAPI::fromJsonValue(m_state_province, json[QString("stateProvince")]);
    m_state_province_isSet = !json[QString("stateProvince")].isNull() && m_state_province_isValid;
}

QString OAIAdvisorModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdvisorModel::asJsonObject() const {
    QJsonObject obj;
    if (m_address_line1_isSet) {
        obj.insert(QString("addressLine1"), ::OpenAPI::toJsonValue(m_address_line1));
    }
    if (m_address_line2_isSet) {
        obj.insert(QString("addressLine2"), ::OpenAPI::toJsonValue(m_address_line2));
    }
    if (m_advisor_id_isSet) {
        obj.insert(QString("advisorId"), ::OpenAPI::toJsonValue(m_advisor_id));
    }
    if (m_advisor_title_isSet) {
        obj.insert(QString("advisorTitle"), ::OpenAPI::toJsonValue(m_advisor_title));
    }
    if (m_business_phone_isSet) {
        obj.insert(QString("businessPhone"), ::OpenAPI::toJsonValue(m_business_phone));
    }
    if (m_cell_phone_isSet) {
        obj.insert(QString("cellPhone"), ::OpenAPI::toJsonValue(m_cell_phone));
    }
    if (m_city_isSet) {
        obj.insert(QString("city"), ::OpenAPI::toJsonValue(m_city));
    }
    if (m_email_address_isSet) {
        obj.insert(QString("emailAddress"), ::OpenAPI::toJsonValue(m_email_address));
    }
    if (m_fax_phone_isSet) {
        obj.insert(QString("faxPhone"), ::OpenAPI::toJsonValue(m_fax_phone));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("firstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_home_phone_isSet) {
        obj.insert(QString("homePhone"), ::OpenAPI::toJsonValue(m_home_phone));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("lastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_links.size() > 0) {
        obj.insert(QString("links"), ::OpenAPI::toJsonValue(m_links));
    }
    if (m_middle_name_isSet) {
        obj.insert(QString("middleName"), ::OpenAPI::toJsonValue(m_middle_name));
    }
    if (m_office_name_isSet) {
        obj.insert(QString("officeName"), ::OpenAPI::toJsonValue(m_office_name));
    }
    if (m_office_website_isSet) {
        obj.insert(QString("officeWebsite"), ::OpenAPI::toJsonValue(m_office_website));
    }
    if (m_pager_number_isSet) {
        obj.insert(QString("pagerNumber"), ::OpenAPI::toJsonValue(m_pager_number));
    }
    if (m_postal_code_isSet) {
        obj.insert(QString("postalCode"), ::OpenAPI::toJsonValue(m_postal_code));
    }
    if (m_state_province_isSet) {
        obj.insert(QString("stateProvince"), ::OpenAPI::toJsonValue(m_state_province));
    }
    return obj;
}

QString OAIAdvisorModel::getAddressLine1() const {
    return m_address_line1;
}
void OAIAdvisorModel::setAddressLine1(const QString &address_line1) {
    m_address_line1 = address_line1;
    m_address_line1_isSet = true;
}

bool OAIAdvisorModel::is_address_line1_Set() const{
    return m_address_line1_isSet;
}

bool OAIAdvisorModel::is_address_line1_Valid() const{
    return m_address_line1_isValid;
}

QString OAIAdvisorModel::getAddressLine2() const {
    return m_address_line2;
}
void OAIAdvisorModel::setAddressLine2(const QString &address_line2) {
    m_address_line2 = address_line2;
    m_address_line2_isSet = true;
}

bool OAIAdvisorModel::is_address_line2_Set() const{
    return m_address_line2_isSet;
}

bool OAIAdvisorModel::is_address_line2_Valid() const{
    return m_address_line2_isValid;
}

QString OAIAdvisorModel::getAdvisorId() const {
    return m_advisor_id;
}
void OAIAdvisorModel::setAdvisorId(const QString &advisor_id) {
    m_advisor_id = advisor_id;
    m_advisor_id_isSet = true;
}

bool OAIAdvisorModel::is_advisor_id_Set() const{
    return m_advisor_id_isSet;
}

bool OAIAdvisorModel::is_advisor_id_Valid() const{
    return m_advisor_id_isValid;
}

QString OAIAdvisorModel::getAdvisorTitle() const {
    return m_advisor_title;
}
void OAIAdvisorModel::setAdvisorTitle(const QString &advisor_title) {
    m_advisor_title = advisor_title;
    m_advisor_title_isSet = true;
}

bool OAIAdvisorModel::is_advisor_title_Set() const{
    return m_advisor_title_isSet;
}

bool OAIAdvisorModel::is_advisor_title_Valid() const{
    return m_advisor_title_isValid;
}

QString OAIAdvisorModel::getBusinessPhone() const {
    return m_business_phone;
}
void OAIAdvisorModel::setBusinessPhone(const QString &business_phone) {
    m_business_phone = business_phone;
    m_business_phone_isSet = true;
}

bool OAIAdvisorModel::is_business_phone_Set() const{
    return m_business_phone_isSet;
}

bool OAIAdvisorModel::is_business_phone_Valid() const{
    return m_business_phone_isValid;
}

QString OAIAdvisorModel::getCellPhone() const {
    return m_cell_phone;
}
void OAIAdvisorModel::setCellPhone(const QString &cell_phone) {
    m_cell_phone = cell_phone;
    m_cell_phone_isSet = true;
}

bool OAIAdvisorModel::is_cell_phone_Set() const{
    return m_cell_phone_isSet;
}

bool OAIAdvisorModel::is_cell_phone_Valid() const{
    return m_cell_phone_isValid;
}

QString OAIAdvisorModel::getCity() const {
    return m_city;
}
void OAIAdvisorModel::setCity(const QString &city) {
    m_city = city;
    m_city_isSet = true;
}

bool OAIAdvisorModel::is_city_Set() const{
    return m_city_isSet;
}

bool OAIAdvisorModel::is_city_Valid() const{
    return m_city_isValid;
}

QString OAIAdvisorModel::getEmailAddress() const {
    return m_email_address;
}
void OAIAdvisorModel::setEmailAddress(const QString &email_address) {
    m_email_address = email_address;
    m_email_address_isSet = true;
}

bool OAIAdvisorModel::is_email_address_Set() const{
    return m_email_address_isSet;
}

bool OAIAdvisorModel::is_email_address_Valid() const{
    return m_email_address_isValid;
}

QString OAIAdvisorModel::getFaxPhone() const {
    return m_fax_phone;
}
void OAIAdvisorModel::setFaxPhone(const QString &fax_phone) {
    m_fax_phone = fax_phone;
    m_fax_phone_isSet = true;
}

bool OAIAdvisorModel::is_fax_phone_Set() const{
    return m_fax_phone_isSet;
}

bool OAIAdvisorModel::is_fax_phone_Valid() const{
    return m_fax_phone_isValid;
}

QString OAIAdvisorModel::getFirstName() const {
    return m_first_name;
}
void OAIAdvisorModel::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIAdvisorModel::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIAdvisorModel::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIAdvisorModel::getHomePhone() const {
    return m_home_phone;
}
void OAIAdvisorModel::setHomePhone(const QString &home_phone) {
    m_home_phone = home_phone;
    m_home_phone_isSet = true;
}

bool OAIAdvisorModel::is_home_phone_Set() const{
    return m_home_phone_isSet;
}

bool OAIAdvisorModel::is_home_phone_Valid() const{
    return m_home_phone_isValid;
}

QString OAIAdvisorModel::getLastName() const {
    return m_last_name;
}
void OAIAdvisorModel::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIAdvisorModel::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIAdvisorModel::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QList<OAIObjectLink> OAIAdvisorModel::getLinks() const {
    return m_links;
}
void OAIAdvisorModel::setLinks(const QList<OAIObjectLink> &links) {
    m_links = links;
    m_links_isSet = true;
}

bool OAIAdvisorModel::is_links_Set() const{
    return m_links_isSet;
}

bool OAIAdvisorModel::is_links_Valid() const{
    return m_links_isValid;
}

QString OAIAdvisorModel::getMiddleName() const {
    return m_middle_name;
}
void OAIAdvisorModel::setMiddleName(const QString &middle_name) {
    m_middle_name = middle_name;
    m_middle_name_isSet = true;
}

bool OAIAdvisorModel::is_middle_name_Set() const{
    return m_middle_name_isSet;
}

bool OAIAdvisorModel::is_middle_name_Valid() const{
    return m_middle_name_isValid;
}

QString OAIAdvisorModel::getOfficeName() const {
    return m_office_name;
}
void OAIAdvisorModel::setOfficeName(const QString &office_name) {
    m_office_name = office_name;
    m_office_name_isSet = true;
}

bool OAIAdvisorModel::is_office_name_Set() const{
    return m_office_name_isSet;
}

bool OAIAdvisorModel::is_office_name_Valid() const{
    return m_office_name_isValid;
}

QString OAIAdvisorModel::getOfficeWebsite() const {
    return m_office_website;
}
void OAIAdvisorModel::setOfficeWebsite(const QString &office_website) {
    m_office_website = office_website;
    m_office_website_isSet = true;
}

bool OAIAdvisorModel::is_office_website_Set() const{
    return m_office_website_isSet;
}

bool OAIAdvisorModel::is_office_website_Valid() const{
    return m_office_website_isValid;
}

QString OAIAdvisorModel::getPagerNumber() const {
    return m_pager_number;
}
void OAIAdvisorModel::setPagerNumber(const QString &pager_number) {
    m_pager_number = pager_number;
    m_pager_number_isSet = true;
}

bool OAIAdvisorModel::is_pager_number_Set() const{
    return m_pager_number_isSet;
}

bool OAIAdvisorModel::is_pager_number_Valid() const{
    return m_pager_number_isValid;
}

QString OAIAdvisorModel::getPostalCode() const {
    return m_postal_code;
}
void OAIAdvisorModel::setPostalCode(const QString &postal_code) {
    m_postal_code = postal_code;
    m_postal_code_isSet = true;
}

bool OAIAdvisorModel::is_postal_code_Set() const{
    return m_postal_code_isSet;
}

bool OAIAdvisorModel::is_postal_code_Valid() const{
    return m_postal_code_isValid;
}

QString OAIAdvisorModel::getStateProvince() const {
    return m_state_province;
}
void OAIAdvisorModel::setStateProvince(const QString &state_province) {
    m_state_province = state_province;
    m_state_province_isSet = true;
}

bool OAIAdvisorModel::is_state_province_Set() const{
    return m_state_province_isSet;
}

bool OAIAdvisorModel::is_state_province_Valid() const{
    return m_state_province_isValid;
}

bool OAIAdvisorModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_line1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_line2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_advisor_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_advisor_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_business_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cell_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fax_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_links.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_middle_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_office_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_office_website_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pager_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_postal_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_province_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdvisorModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
