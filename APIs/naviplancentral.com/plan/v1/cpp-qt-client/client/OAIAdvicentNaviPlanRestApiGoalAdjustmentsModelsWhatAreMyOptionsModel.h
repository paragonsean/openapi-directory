/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAdvicentNaviPlanRestApiGoalAdjustmentsModelsWhatAreMyOptionsModel.h
 *
 * 
 */

#ifndef OAIAdvicentNaviPlanRestApiGoalAdjustmentsModelsWhatAreMyOptionsModel_H
#define OAIAdvicentNaviPlanRestApiGoalAdjustmentsModelsWhatAreMyOptionsModel_H

#include <QJsonObject>

#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAdvicentNaviPlanRestApiGoalAdjustmentsModelsWhatAreMyOptionsModel : public OAIObject {
public:
    OAIAdvicentNaviPlanRestApiGoalAdjustmentsModelsWhatAreMyOptionsModel();
    OAIAdvicentNaviPlanRestApiGoalAdjustmentsModelsWhatAreMyOptionsModel(QString json);
    ~OAIAdvicentNaviPlanRestApiGoalAdjustmentsModelsWhatAreMyOptionsModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAdditionalMonthlySavings() const;
    void setAdditionalMonthlySavings(const double &additional_monthly_savings);
    bool is_additional_monthly_savings_Set() const;
    bool is_additional_monthly_savings_Valid() const;

    qint32 getClientRetirementAge() const;
    void setClientRetirementAge(const qint32 &client_retirement_age);
    bool is_client_retirement_age_Set() const;
    bool is_client_retirement_age_Valid() const;

    QDateTime getClientRetirementAgeDate() const;
    void setClientRetirementAgeDate(const QDateTime &client_retirement_age_date);
    bool is_client_retirement_age_date_Set() const;
    bool is_client_retirement_age_date_Valid() const;

    qint32 getCoClientRetirementAge() const;
    void setCoClientRetirementAge(const qint32 &co_client_retirement_age);
    bool is_co_client_retirement_age_Set() const;
    bool is_co_client_retirement_age_Valid() const;

    QDateTime getCoClientRetirementAgeDate() const;
    void setCoClientRetirementAgeDate(const QDateTime &co_client_retirement_age_date);
    bool is_co_client_retirement_age_date_Set() const;
    bool is_co_client_retirement_age_date_Valid() const;

    double getExpenseCoverageDollars() const;
    void setExpenseCoverageDollars(const double &expense_coverage_dollars);
    bool is_expense_coverage_dollars_Set() const;
    bool is_expense_coverage_dollars_Valid() const;

    double getExpenseCoveragePercentage() const;
    void setExpenseCoveragePercentage(const double &expense_coverage_percentage);
    bool is_expense_coverage_percentage_Set() const;
    bool is_expense_coverage_percentage_Valid() const;

    double getLumpSumSavings() const;
    void setLumpSumSavings(const double &lump_sum_savings);
    bool is_lump_sum_savings_Set() const;
    bool is_lump_sum_savings_Valid() const;

    QDateTime getPurchaseDate() const;
    void setPurchaseDate(const QDateTime &purchase_date);
    bool is_purchase_date_Set() const;
    bool is_purchase_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_additional_monthly_savings;
    bool m_additional_monthly_savings_isSet;
    bool m_additional_monthly_savings_isValid;

    qint32 m_client_retirement_age;
    bool m_client_retirement_age_isSet;
    bool m_client_retirement_age_isValid;

    QDateTime m_client_retirement_age_date;
    bool m_client_retirement_age_date_isSet;
    bool m_client_retirement_age_date_isValid;

    qint32 m_co_client_retirement_age;
    bool m_co_client_retirement_age_isSet;
    bool m_co_client_retirement_age_isValid;

    QDateTime m_co_client_retirement_age_date;
    bool m_co_client_retirement_age_date_isSet;
    bool m_co_client_retirement_age_date_isValid;

    double m_expense_coverage_dollars;
    bool m_expense_coverage_dollars_isSet;
    bool m_expense_coverage_dollars_isValid;

    double m_expense_coverage_percentage;
    bool m_expense_coverage_percentage_isSet;
    bool m_expense_coverage_percentage_isValid;

    double m_lump_sum_savings;
    bool m_lump_sum_savings_isSet;
    bool m_lump_sum_savings_isValid;

    QDateTime m_purchase_date;
    bool m_purchase_date_isSet;
    bool m_purchase_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAdvicentNaviPlanRestApiGoalAdjustmentsModelsWhatAreMyOptionsModel)

#endif // OAIAdvicentNaviPlanRestApiGoalAdjustmentsModelsWhatAreMyOptionsModel_H
