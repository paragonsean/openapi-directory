/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.h
 *
 * 
 */

#ifndef OAIAdvicentNaviPlanRestApiNetWorthModelsLiabilityModel_H
#define OAIAdvicentNaviPlanRestApiNetWorthModelsLiabilityModel_H

#include <QJsonObject>

#include "OAIAdvicentNaviPlanRestApiModelsOwnerModel.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAdvicentNaviPlanRestApiModelsOwnerModel;

class OAIAdvicentNaviPlanRestApiNetWorthModelsLiabilityModel : public OAIObject {
public:
    OAIAdvicentNaviPlanRestApiNetWorthModelsLiabilityModel();
    OAIAdvicentNaviPlanRestApiNetWorthModelsLiabilityModel(QString json);
    ~OAIAdvicentNaviPlanRestApiNetWorthModelsLiabilityModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDateTime getEndDate() const;
    void setEndDate(const QDateTime &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLegacyId() const;
    void setLegacyId(const QString &legacy_id);
    bool is_legacy_id_Set() const;
    bool is_legacy_id_Valid() const;

    double getOutstandingPrincipal() const;
    void setOutstandingPrincipal(const double &outstanding_principal);
    bool is_outstanding_principal_Set() const;
    bool is_outstanding_principal_Valid() const;

    QDateTime getOutstandingPrincipalAsOfDate() const;
    void setOutstandingPrincipalAsOfDate(const QDateTime &outstanding_principal_as_of_date);
    bool is_outstanding_principal_as_of_date_Set() const;
    bool is_outstanding_principal_as_of_date_Valid() const;

    OAIAdvicentNaviPlanRestApiModelsOwnerModel getOwner() const;
    void setOwner(const OAIAdvicentNaviPlanRestApiModelsOwnerModel &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    QDateTime getStartDate() const;
    void setStartDate(const QDateTime &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    qint32 getType() const;
    void setType(const qint32 &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDateTime m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_legacy_id;
    bool m_legacy_id_isSet;
    bool m_legacy_id_isValid;

    double m_outstanding_principal;
    bool m_outstanding_principal_isSet;
    bool m_outstanding_principal_isValid;

    QDateTime m_outstanding_principal_as_of_date;
    bool m_outstanding_principal_as_of_date_isSet;
    bool m_outstanding_principal_as_of_date_isValid;

    OAIAdvicentNaviPlanRestApiModelsOwnerModel m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    QDateTime m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    qint32 m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAdvicentNaviPlanRestApiNetWorthModelsLiabilityModel)

#endif // OAIAdvicentNaviPlanRestApiNetWorthModelsLiabilityModel_H
