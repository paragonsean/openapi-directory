/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIGoal.h
 *
 * 
 */

#ifndef OAIIGoal_H
#define OAIIGoal_H

#include <QJsonObject>

#include "OAIDate.h"
#include "OAIGoalId.h"
#include "OAIIOptionalField_Currency.h"
#include "OAIIOptionalField_GoalCoveragePercent.h"
#include "OAIIOptionalField_Year.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIOptionalField_Currency;
class OAIIOptionalField_GoalCoveragePercent;
class OAIDate;
class OAIGoalId;
class OAIIOptionalField_Year;

class OAIIGoal : public OAIObject {
public:
    OAIIGoal();
    OAIIGoal(QString json);
    ~OAIIGoal() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIIOptionalField_Currency getAssetsRemainingAfterFundingGoal() const;
    void setAssetsRemainingAfterFundingGoal(const OAIIOptionalField_Currency &assets_remaining_after_funding_goal);
    bool is_assets_remaining_after_funding_goal_Set() const;
    bool is_assets_remaining_after_funding_goal_Valid() const;

    OAIIOptionalField_GoalCoveragePercent getCoverage() const;
    void setCoverage(const OAIIOptionalField_GoalCoveragePercent &coverage);
    bool is_coverage_Set() const;
    bool is_coverage_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIDate getEndDate() const;
    void setEndDate(const OAIDate &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    OAIGoalId getIdentifier() const;
    void setIdentifier(const OAIGoalId &identifier);
    bool is_identifier_Set() const;
    bool is_identifier_Valid() const;

    OAIDate getStartDate() const;
    void setStartDate(const OAIDate &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIIOptionalField_Year getYearAssetsDepleted() const;
    void setYearAssetsDepleted(const OAIIOptionalField_Year &year_assets_depleted);
    bool is_year_assets_depleted_Set() const;
    bool is_year_assets_depleted_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIIOptionalField_Currency m_assets_remaining_after_funding_goal;
    bool m_assets_remaining_after_funding_goal_isSet;
    bool m_assets_remaining_after_funding_goal_isValid;

    OAIIOptionalField_GoalCoveragePercent m_coverage;
    bool m_coverage_isSet;
    bool m_coverage_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIDate m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    OAIGoalId m_identifier;
    bool m_identifier_isSet;
    bool m_identifier_isValid;

    OAIDate m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIIOptionalField_Year m_year_assets_depleted;
    bool m_year_assets_depleted_isSet;
    bool m_year_assets_depleted_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIGoal)

#endif // OAIIGoal_H
