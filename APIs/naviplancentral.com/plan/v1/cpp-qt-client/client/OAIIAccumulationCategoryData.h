/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIAccumulationCategoryData.h
 *
 * 
 */

#ifndef OAIIAccumulationCategoryData_H
#define OAIIAccumulationCategoryData_H

#include <QJsonObject>

#include "OAICurrency.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICurrency;

class OAIIAccumulationCategoryData : public OAIObject {
public:
    OAIIAccumulationCategoryData();
    OAIIAccumulationCategoryData(QString json);
    ~OAIIAccumulationCategoryData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICurrency getAllAssets() const;
    void setAllAssets(const OAICurrency &all_assets);
    bool is_all_assets_Set() const;
    bool is_all_assets_Valid() const;

    OAICurrency getLockedIn() const;
    void setLockedIn(const OAICurrency &locked_in);
    bool is_locked_in_Set() const;
    bool is_locked_in_Valid() const;

    OAICurrency getNonQualified() const;
    void setNonQualified(const OAICurrency &non_qualified);
    bool is_non_qualified_Set() const;
    bool is_non_qualified_Valid() const;

    OAICurrency getQualified() const;
    void setQualified(const OAICurrency &qualified);
    bool is_qualified_Set() const;
    bool is_qualified_Valid() const;

    OAICurrency getRoth() const;
    void setRoth(const OAICurrency &roth);
    bool is_roth_Set() const;
    bool is_roth_Valid() const;

    OAICurrency getTfsa() const;
    void setTfsa(const OAICurrency &tfsa);
    bool is_tfsa_Set() const;
    bool is_tfsa_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICurrency m_all_assets;
    bool m_all_assets_isSet;
    bool m_all_assets_isValid;

    OAICurrency m_locked_in;
    bool m_locked_in_isSet;
    bool m_locked_in_isValid;

    OAICurrency m_non_qualified;
    bool m_non_qualified_isSet;
    bool m_non_qualified_isValid;

    OAICurrency m_qualified;
    bool m_qualified_isSet;
    bool m_qualified_isValid;

    OAICurrency m_roth;
    bool m_roth_isSet;
    bool m_roth_isValid;

    OAICurrency m_tfsa;
    bool m_tfsa_isSet;
    bool m_tfsa_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIAccumulationCategoryData)

#endif // OAIIAccumulationCategoryData_H
