/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIINetWorthAtDate.h
 *
 * 
 */

#ifndef OAIINetWorthAtDate_H
#define OAIINetWorthAtDate_H

#include <QJsonObject>

#include "OAICurrency.h"
#include "OAIIAssets.h"
#include "OAIILiabilities.h"
#include "OAIIRetirementAssets.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIAssets;
class OAIIRetirementAssets;
class OAICurrency;
class OAIILiabilities;

class OAIINetWorthAtDate : public OAIObject {
public:
    OAIINetWorthAtDate();
    OAIINetWorthAtDate(QString json);
    ~OAIINetWorthAtDate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIIAssets getAssets() const;
    void setAssets(const OAIIAssets &assets);
    bool is_assets_Set() const;
    bool is_assets_Valid() const;

    OAIIRetirementAssets getAssetsFundingRetirement() const;
    void setAssetsFundingRetirement(const OAIIRetirementAssets &assets_funding_retirement);
    bool is_assets_funding_retirement_Set() const;
    bool is_assets_funding_retirement_Valid() const;

    OAICurrency getClientNetWorth() const;
    void setClientNetWorth(const OAICurrency &client_net_worth);
    bool is_client_net_worth_Set() const;
    bool is_client_net_worth_Valid() const;

    OAICurrency getCoClientNetWorth() const;
    void setCoClientNetWorth(const OAICurrency &co_client_net_worth);
    bool is_co_client_net_worth_Set() const;
    bool is_co_client_net_worth_Valid() const;

    OAICurrency getCommunityPropertyNetWorth() const;
    void setCommunityPropertyNetWorth(const OAICurrency &community_property_net_worth);
    bool is_community_property_net_worth_Set() const;
    bool is_community_property_net_worth_Valid() const;

    OAICurrency getJointNetWorth() const;
    void setJointNetWorth(const OAICurrency &joint_net_worth);
    bool is_joint_net_worth_Set() const;
    bool is_joint_net_worth_Valid() const;

    OAIILiabilities getLiabilities() const;
    void setLiabilities(const OAIILiabilities &liabilities);
    bool is_liabilities_Set() const;
    bool is_liabilities_Valid() const;

    OAICurrency getTotalNetWorth() const;
    void setTotalNetWorth(const OAICurrency &total_net_worth);
    bool is_total_net_worth_Set() const;
    bool is_total_net_worth_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIIAssets m_assets;
    bool m_assets_isSet;
    bool m_assets_isValid;

    OAIIRetirementAssets m_assets_funding_retirement;
    bool m_assets_funding_retirement_isSet;
    bool m_assets_funding_retirement_isValid;

    OAICurrency m_client_net_worth;
    bool m_client_net_worth_isSet;
    bool m_client_net_worth_isValid;

    OAICurrency m_co_client_net_worth;
    bool m_co_client_net_worth_isSet;
    bool m_co_client_net_worth_isValid;

    OAICurrency m_community_property_net_worth;
    bool m_community_property_net_worth_isSet;
    bool m_community_property_net_worth_isValid;

    OAICurrency m_joint_net_worth;
    bool m_joint_net_worth_isSet;
    bool m_joint_net_worth_isValid;

    OAIILiabilities m_liabilities;
    bool m_liabilities_isSet;
    bool m_liabilities_isValid;

    OAICurrency m_total_net_worth;
    bool m_total_net_worth_isSet;
    bool m_total_net_worth_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIINetWorthAtDate)

#endif // OAIINetWorthAtDate_H
