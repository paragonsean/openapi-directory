/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIAddress.h
 *
 * 
 */

#ifndef OAIIAddress_H
#define OAIIAddress_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIAddress : public OAIObject {
public:
    OAIIAddress();
    OAIIAddress(QString json);
    ~OAIIAddress() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getCombinedCityStateProvince() const;
    void setCombinedCityStateProvince(const QString &combined_city_state_province);
    bool is_combined_city_state_province_Set() const;
    bool is_combined_city_state_province_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getStateOrProvince() const;
    void setStateOrProvince(const QString &state_or_province);
    bool is_state_or_province_Set() const;
    bool is_state_or_province_Valid() const;

    QString getStateOrProvinceAbbrev() const;
    void setStateOrProvinceAbbrev(const QString &state_or_province_abbrev);
    bool is_state_or_province_abbrev_Set() const;
    bool is_state_or_province_abbrev_Valid() const;

    QString getStreet1() const;
    void setStreet1(const QString &street1);
    bool is_street1_Set() const;
    bool is_street1_Valid() const;

    QString getStreet2() const;
    void setStreet2(const QString &street2);
    bool is_street2_Set() const;
    bool is_street2_Valid() const;

    QString getZipOrPostalCode() const;
    void setZipOrPostalCode(const QString &zip_or_postal_code);
    bool is_zip_or_postal_code_Set() const;
    bool is_zip_or_postal_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_combined_city_state_province;
    bool m_combined_city_state_province_isSet;
    bool m_combined_city_state_province_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_state_or_province;
    bool m_state_or_province_isSet;
    bool m_state_or_province_isValid;

    QString m_state_or_province_abbrev;
    bool m_state_or_province_abbrev_isSet;
    bool m_state_or_province_abbrev_isValid;

    QString m_street1;
    bool m_street1_isSet;
    bool m_street1_isValid;

    QString m_street2;
    bool m_street2_isSet;
    bool m_street2_isValid;

    QString m_zip_or_postal_code;
    bool m_zip_or_postal_code_isSet;
    bool m_zip_or_postal_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIAddress)

#endif // OAIIAddress_H
