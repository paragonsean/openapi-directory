/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIICashFlowCategory.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIICashFlowCategory::OAIICashFlowCategory(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIICashFlowCategory::OAIICashFlowCategory() {
    this->initializeModel();
}

OAIICashFlowCategory::~OAIICashFlowCategory() {}

void OAIICashFlowCategory::initializeModel() {

    m_is_itemized_enabled_isSet = false;
    m_is_itemized_enabled_isValid = false;

    m_itemized_isSet = false;
    m_itemized_isValid = false;

    m_total_isSet = false;
    m_total_isValid = false;
}

void OAIICashFlowCategory::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIICashFlowCategory::fromJsonObject(QJsonObject json) {

    m_is_itemized_enabled_isValid = ::OpenAPI::fromJsonValue(m_is_itemized_enabled, json[QString("isItemizedEnabled")]);
    m_is_itemized_enabled_isSet = !json[QString("isItemizedEnabled")].isNull() && m_is_itemized_enabled_isValid;

    m_itemized_isValid = ::OpenAPI::fromJsonValue(m_itemized, json[QString("itemized")]);
    m_itemized_isSet = !json[QString("itemized")].isNull() && m_itemized_isValid;

    m_total_isValid = ::OpenAPI::fromJsonValue(m_total, json[QString("total")]);
    m_total_isSet = !json[QString("total")].isNull() && m_total_isValid;
}

QString OAIICashFlowCategory::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIICashFlowCategory::asJsonObject() const {
    QJsonObject obj;
    if (m_is_itemized_enabled_isSet) {
        obj.insert(QString("isItemizedEnabled"), ::OpenAPI::toJsonValue(m_is_itemized_enabled));
    }
    if (m_itemized.size() > 0) {
        obj.insert(QString("itemized"), ::OpenAPI::toJsonValue(m_itemized));
    }
    if (m_total.isSet()) {
        obj.insert(QString("total"), ::OpenAPI::toJsonValue(m_total));
    }
    return obj;
}

bool OAIICashFlowCategory::isIsItemizedEnabled() const {
    return m_is_itemized_enabled;
}
void OAIICashFlowCategory::setIsItemizedEnabled(const bool &is_itemized_enabled) {
    m_is_itemized_enabled = is_itemized_enabled;
    m_is_itemized_enabled_isSet = true;
}

bool OAIICashFlowCategory::is_is_itemized_enabled_Set() const{
    return m_is_itemized_enabled_isSet;
}

bool OAIICashFlowCategory::is_is_itemized_enabled_Valid() const{
    return m_is_itemized_enabled_isValid;
}

QList<OAIICashFlowItem> OAIICashFlowCategory::getItemized() const {
    return m_itemized;
}
void OAIICashFlowCategory::setItemized(const QList<OAIICashFlowItem> &itemized) {
    m_itemized = itemized;
    m_itemized_isSet = true;
}

bool OAIICashFlowCategory::is_itemized_Set() const{
    return m_itemized_isSet;
}

bool OAIICashFlowCategory::is_itemized_Valid() const{
    return m_itemized_isValid;
}

OAICurrency OAIICashFlowCategory::getTotal() const {
    return m_total;
}
void OAIICashFlowCategory::setTotal(const OAICurrency &total) {
    m_total = total;
    m_total_isSet = true;
}

bool OAIICashFlowCategory::is_total_Set() const{
    return m_total_isSet;
}

bool OAIICashFlowCategory::is_total_Valid() const{
    return m_total_isValid;
}

bool OAIICashFlowCategory::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_itemized_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_itemized.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_total.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIICashFlowCategory::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
