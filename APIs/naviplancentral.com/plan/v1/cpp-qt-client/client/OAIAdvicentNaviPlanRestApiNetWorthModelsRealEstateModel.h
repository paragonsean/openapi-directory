/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAdvicentNaviPlanRestApiNetWorthModelsRealEstateModel.h
 *
 * 
 */

#ifndef OAIAdvicentNaviPlanRestApiNetWorthModelsRealEstateModel_H
#define OAIAdvicentNaviPlanRestApiNetWorthModelsRealEstateModel_H

#include <QJsonObject>

#include "OAIAdvicentNaviPlanRestApiModelsOwnerModel.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAdvicentNaviPlanRestApiModelsOwnerModel;

class OAIAdvicentNaviPlanRestApiNetWorthModelsRealEstateModel : public OAIObject {
public:
    OAIAdvicentNaviPlanRestApiNetWorthModelsRealEstateModel();
    OAIAdvicentNaviPlanRestApiNetWorthModelsRealEstateModel(QString json);
    ~OAIAdvicentNaviPlanRestApiNetWorthModelsRealEstateModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLegacyId() const;
    void setLegacyId(const QString &legacy_id);
    bool is_legacy_id_Set() const;
    bool is_legacy_id_Valid() const;

    double getMarketValue() const;
    void setMarketValue(const double &market_value);
    bool is_market_value_Set() const;
    bool is_market_value_Valid() const;

    OAIAdvicentNaviPlanRestApiModelsOwnerModel getOwner() const;
    void setOwner(const OAIAdvicentNaviPlanRestApiModelsOwnerModel &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    double getPurchaseAmount() const;
    void setPurchaseAmount(const double &purchase_amount);
    bool is_purchase_amount_Set() const;
    bool is_purchase_amount_Valid() const;

    QDateTime getPurchaseDate() const;
    void setPurchaseDate(const QDateTime &purchase_date);
    bool is_purchase_date_Set() const;
    bool is_purchase_date_Valid() const;

    QDateTime getValuationDate() const;
    void setValuationDate(const QDateTime &valuation_date);
    bool is_valuation_date_Set() const;
    bool is_valuation_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_legacy_id;
    bool m_legacy_id_isSet;
    bool m_legacy_id_isValid;

    double m_market_value;
    bool m_market_value_isSet;
    bool m_market_value_isValid;

    OAIAdvicentNaviPlanRestApiModelsOwnerModel m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    double m_purchase_amount;
    bool m_purchase_amount_isSet;
    bool m_purchase_amount_isValid;

    QDateTime m_purchase_date;
    bool m_purchase_date_isSet;
    bool m_purchase_date_isValid;

    QDateTime m_valuation_date;
    bool m_valuation_date_isSet;
    bool m_valuation_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAdvicentNaviPlanRestApiNetWorthModelsRealEstateModel)

#endif // OAIAdvicentNaviPlanRestApiNetWorthModelsRealEstateModel_H
