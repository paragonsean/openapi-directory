/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIISavingsStrategies.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIISavingsStrategies::OAIISavingsStrategies(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIISavingsStrategies::OAIISavingsStrategies() {
    this->initializeModel();
}

OAIISavingsStrategies::~OAIISavingsStrategies() {}

void OAIISavingsStrategies::initializeModel() {

    m_lump_sum_savings_strategies_isSet = false;
    m_lump_sum_savings_strategies_isValid = false;

    m_periodic_savings_strategies_isSet = false;
    m_periodic_savings_strategies_isValid = false;

    m_rrsp_maximizer_strategies_isSet = false;
    m_rrsp_maximizer_strategies_isValid = false;

    m_surplus_savings_strategies_isSet = false;
    m_surplus_savings_strategies_isValid = false;
}

void OAIISavingsStrategies::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIISavingsStrategies::fromJsonObject(QJsonObject json) {

    m_lump_sum_savings_strategies_isValid = ::OpenAPI::fromJsonValue(m_lump_sum_savings_strategies, json[QString("lumpSumSavingsStrategies")]);
    m_lump_sum_savings_strategies_isSet = !json[QString("lumpSumSavingsStrategies")].isNull() && m_lump_sum_savings_strategies_isValid;

    m_periodic_savings_strategies_isValid = ::OpenAPI::fromJsonValue(m_periodic_savings_strategies, json[QString("periodicSavingsStrategies")]);
    m_periodic_savings_strategies_isSet = !json[QString("periodicSavingsStrategies")].isNull() && m_periodic_savings_strategies_isValid;

    m_rrsp_maximizer_strategies_isValid = ::OpenAPI::fromJsonValue(m_rrsp_maximizer_strategies, json[QString("rrspMaximizerStrategies")]);
    m_rrsp_maximizer_strategies_isSet = !json[QString("rrspMaximizerStrategies")].isNull() && m_rrsp_maximizer_strategies_isValid;

    m_surplus_savings_strategies_isValid = ::OpenAPI::fromJsonValue(m_surplus_savings_strategies, json[QString("surplusSavingsStrategies")]);
    m_surplus_savings_strategies_isSet = !json[QString("surplusSavingsStrategies")].isNull() && m_surplus_savings_strategies_isValid;
}

QString OAIISavingsStrategies::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIISavingsStrategies::asJsonObject() const {
    QJsonObject obj;
    if (m_lump_sum_savings_strategies.size() > 0) {
        obj.insert(QString("lumpSumSavingsStrategies"), ::OpenAPI::toJsonValue(m_lump_sum_savings_strategies));
    }
    if (m_periodic_savings_strategies.size() > 0) {
        obj.insert(QString("periodicSavingsStrategies"), ::OpenAPI::toJsonValue(m_periodic_savings_strategies));
    }
    if (m_rrsp_maximizer_strategies.size() > 0) {
        obj.insert(QString("rrspMaximizerStrategies"), ::OpenAPI::toJsonValue(m_rrsp_maximizer_strategies));
    }
    if (m_surplus_savings_strategies.size() > 0) {
        obj.insert(QString("surplusSavingsStrategies"), ::OpenAPI::toJsonValue(m_surplus_savings_strategies));
    }
    return obj;
}

QList<OAIILumpSumSavingsStrategy> OAIISavingsStrategies::getLumpSumSavingsStrategies() const {
    return m_lump_sum_savings_strategies;
}
void OAIISavingsStrategies::setLumpSumSavingsStrategies(const QList<OAIILumpSumSavingsStrategy> &lump_sum_savings_strategies) {
    m_lump_sum_savings_strategies = lump_sum_savings_strategies;
    m_lump_sum_savings_strategies_isSet = true;
}

bool OAIISavingsStrategies::is_lump_sum_savings_strategies_Set() const{
    return m_lump_sum_savings_strategies_isSet;
}

bool OAIISavingsStrategies::is_lump_sum_savings_strategies_Valid() const{
    return m_lump_sum_savings_strategies_isValid;
}

QList<OAIIPeriodicSavingsStrategy> OAIISavingsStrategies::getPeriodicSavingsStrategies() const {
    return m_periodic_savings_strategies;
}
void OAIISavingsStrategies::setPeriodicSavingsStrategies(const QList<OAIIPeriodicSavingsStrategy> &periodic_savings_strategies) {
    m_periodic_savings_strategies = periodic_savings_strategies;
    m_periodic_savings_strategies_isSet = true;
}

bool OAIISavingsStrategies::is_periodic_savings_strategies_Set() const{
    return m_periodic_savings_strategies_isSet;
}

bool OAIISavingsStrategies::is_periodic_savings_strategies_Valid() const{
    return m_periodic_savings_strategies_isValid;
}

QList<OAIIRrspMaximizerStrategy> OAIISavingsStrategies::getRrspMaximizerStrategies() const {
    return m_rrsp_maximizer_strategies;
}
void OAIISavingsStrategies::setRrspMaximizerStrategies(const QList<OAIIRrspMaximizerStrategy> &rrsp_maximizer_strategies) {
    m_rrsp_maximizer_strategies = rrsp_maximizer_strategies;
    m_rrsp_maximizer_strategies_isSet = true;
}

bool OAIISavingsStrategies::is_rrsp_maximizer_strategies_Set() const{
    return m_rrsp_maximizer_strategies_isSet;
}

bool OAIISavingsStrategies::is_rrsp_maximizer_strategies_Valid() const{
    return m_rrsp_maximizer_strategies_isValid;
}

QList<OAIISurplusSavingsStrategy> OAIISavingsStrategies::getSurplusSavingsStrategies() const {
    return m_surplus_savings_strategies;
}
void OAIISavingsStrategies::setSurplusSavingsStrategies(const QList<OAIISurplusSavingsStrategy> &surplus_savings_strategies) {
    m_surplus_savings_strategies = surplus_savings_strategies;
    m_surplus_savings_strategies_isSet = true;
}

bool OAIISavingsStrategies::is_surplus_savings_strategies_Set() const{
    return m_surplus_savings_strategies_isSet;
}

bool OAIISavingsStrategies::is_surplus_savings_strategies_Valid() const{
    return m_surplus_savings_strategies_isValid;
}

bool OAIISavingsStrategies::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_lump_sum_savings_strategies.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_periodic_savings_strategies.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_rrsp_maximizer_strategies.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_surplus_savings_strategies.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIISavingsStrategies::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
