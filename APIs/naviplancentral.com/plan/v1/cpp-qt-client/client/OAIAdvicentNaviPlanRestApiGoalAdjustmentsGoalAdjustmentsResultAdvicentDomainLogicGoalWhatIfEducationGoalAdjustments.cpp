/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments::OAIAdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments::OAIAdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments() {
    this->initializeModel();
}

OAIAdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments::~OAIAdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments() {}

void OAIAdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments::initializeModel() {

    m_adjusted_values_isSet = false;
    m_adjusted_values_isValid = false;

    m_created_isSet = false;
    m_created_isValid = false;

    m_goal_id_isSet = false;
    m_goal_id_isValid = false;
}

void OAIAdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments::fromJsonObject(QJsonObject json) {

    m_adjusted_values_isValid = ::OpenAPI::fromJsonValue(m_adjusted_values, json[QString("adjustedValues")]);
    m_adjusted_values_isSet = !json[QString("adjustedValues")].isNull() && m_adjusted_values_isValid;

    m_created_isValid = ::OpenAPI::fromJsonValue(m_created, json[QString("created")]);
    m_created_isSet = !json[QString("created")].isNull() && m_created_isValid;

    m_goal_id_isValid = ::OpenAPI::fromJsonValue(m_goal_id, json[QString("goalId")]);
    m_goal_id_isSet = !json[QString("goalId")].isNull() && m_goal_id_isValid;
}

QString OAIAdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments::asJsonObject() const {
    QJsonObject obj;
    if (m_adjusted_values.isSet()) {
        obj.insert(QString("adjustedValues"), ::OpenAPI::toJsonValue(m_adjusted_values));
    }
    if (m_created_isSet) {
        obj.insert(QString("created"), ::OpenAPI::toJsonValue(m_created));
    }
    if (m_goal_id_isSet) {
        obj.insert(QString("goalId"), ::OpenAPI::toJsonValue(m_goal_id));
    }
    return obj;
}

OAIAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments OAIAdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments::getAdjustedValues() const {
    return m_adjusted_values;
}
void OAIAdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments::setAdjustedValues(const OAIAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments &adjusted_values) {
    m_adjusted_values = adjusted_values;
    m_adjusted_values_isSet = true;
}

bool OAIAdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments::is_adjusted_values_Set() const{
    return m_adjusted_values_isSet;
}

bool OAIAdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments::is_adjusted_values_Valid() const{
    return m_adjusted_values_isValid;
}

QDateTime OAIAdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments::getCreated() const {
    return m_created;
}
void OAIAdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments::setCreated(const QDateTime &created) {
    m_created = created;
    m_created_isSet = true;
}

bool OAIAdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments::is_created_Set() const{
    return m_created_isSet;
}

bool OAIAdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments::is_created_Valid() const{
    return m_created_isValid;
}

qint32 OAIAdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments::getGoalId() const {
    return m_goal_id;
}
void OAIAdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments::setGoalId(const qint32 &goal_id) {
    m_goal_id = goal_id;
    m_goal_id_isSet = true;
}

bool OAIAdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments::is_goal_id_Set() const{
    return m_goal_id_isSet;
}

bool OAIAdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments::is_goal_id_Valid() const{
    return m_goal_id_isValid;
}

bool OAIAdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_adjusted_values.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_goal_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
