/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIPhoneNumbers.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIPhoneNumbers::OAIIPhoneNumbers(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIPhoneNumbers::OAIIPhoneNumbers() {
    this->initializeModel();
}

OAIIPhoneNumbers::~OAIIPhoneNumbers() {}

void OAIIPhoneNumbers::initializeModel() {

    m_additional_numbers_isSet = false;
    m_additional_numbers_isValid = false;

    m_business_isSet = false;
    m_business_isValid = false;

    m_cell_isSet = false;
    m_cell_isValid = false;

    m_fax_isSet = false;
    m_fax_isValid = false;

    m_home_isSet = false;
    m_home_isValid = false;

    m_pager_isSet = false;
    m_pager_isValid = false;
}

void OAIIPhoneNumbers::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIPhoneNumbers::fromJsonObject(QJsonObject json) {

    m_additional_numbers_isValid = ::OpenAPI::fromJsonValue(m_additional_numbers, json[QString("additionalNumbers")]);
    m_additional_numbers_isSet = !json[QString("additionalNumbers")].isNull() && m_additional_numbers_isValid;

    m_business_isValid = ::OpenAPI::fromJsonValue(m_business, json[QString("business")]);
    m_business_isSet = !json[QString("business")].isNull() && m_business_isValid;

    m_cell_isValid = ::OpenAPI::fromJsonValue(m_cell, json[QString("cell")]);
    m_cell_isSet = !json[QString("cell")].isNull() && m_cell_isValid;

    m_fax_isValid = ::OpenAPI::fromJsonValue(m_fax, json[QString("fax")]);
    m_fax_isSet = !json[QString("fax")].isNull() && m_fax_isValid;

    m_home_isValid = ::OpenAPI::fromJsonValue(m_home, json[QString("home")]);
    m_home_isSet = !json[QString("home")].isNull() && m_home_isValid;

    m_pager_isValid = ::OpenAPI::fromJsonValue(m_pager, json[QString("pager")]);
    m_pager_isSet = !json[QString("pager")].isNull() && m_pager_isValid;
}

QString OAIIPhoneNumbers::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIPhoneNumbers::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_numbers.isSet()) {
        obj.insert(QString("additionalNumbers"), ::OpenAPI::toJsonValue(m_additional_numbers));
    }
    if (m_business_isSet) {
        obj.insert(QString("business"), ::OpenAPI::toJsonValue(m_business));
    }
    if (m_cell_isSet) {
        obj.insert(QString("cell"), ::OpenAPI::toJsonValue(m_cell));
    }
    if (m_fax_isSet) {
        obj.insert(QString("fax"), ::OpenAPI::toJsonValue(m_fax));
    }
    if (m_home_isSet) {
        obj.insert(QString("home"), ::OpenAPI::toJsonValue(m_home));
    }
    if (m_pager_isSet) {
        obj.insert(QString("pager"), ::OpenAPI::toJsonValue(m_pager));
    }
    return obj;
}

OAIIBusinessPhoneNumbers OAIIPhoneNumbers::getAdditionalNumbers() const {
    return m_additional_numbers;
}
void OAIIPhoneNumbers::setAdditionalNumbers(const OAIIBusinessPhoneNumbers &additional_numbers) {
    m_additional_numbers = additional_numbers;
    m_additional_numbers_isSet = true;
}

bool OAIIPhoneNumbers::is_additional_numbers_Set() const{
    return m_additional_numbers_isSet;
}

bool OAIIPhoneNumbers::is_additional_numbers_Valid() const{
    return m_additional_numbers_isValid;
}

QString OAIIPhoneNumbers::getBusiness() const {
    return m_business;
}
void OAIIPhoneNumbers::setBusiness(const QString &business) {
    m_business = business;
    m_business_isSet = true;
}

bool OAIIPhoneNumbers::is_business_Set() const{
    return m_business_isSet;
}

bool OAIIPhoneNumbers::is_business_Valid() const{
    return m_business_isValid;
}

QString OAIIPhoneNumbers::getCell() const {
    return m_cell;
}
void OAIIPhoneNumbers::setCell(const QString &cell) {
    m_cell = cell;
    m_cell_isSet = true;
}

bool OAIIPhoneNumbers::is_cell_Set() const{
    return m_cell_isSet;
}

bool OAIIPhoneNumbers::is_cell_Valid() const{
    return m_cell_isValid;
}

QString OAIIPhoneNumbers::getFax() const {
    return m_fax;
}
void OAIIPhoneNumbers::setFax(const QString &fax) {
    m_fax = fax;
    m_fax_isSet = true;
}

bool OAIIPhoneNumbers::is_fax_Set() const{
    return m_fax_isSet;
}

bool OAIIPhoneNumbers::is_fax_Valid() const{
    return m_fax_isValid;
}

QString OAIIPhoneNumbers::getHome() const {
    return m_home;
}
void OAIIPhoneNumbers::setHome(const QString &home) {
    m_home = home;
    m_home_isSet = true;
}

bool OAIIPhoneNumbers::is_home_Set() const{
    return m_home_isSet;
}

bool OAIIPhoneNumbers::is_home_Valid() const{
    return m_home_isValid;
}

QString OAIIPhoneNumbers::getPager() const {
    return m_pager;
}
void OAIIPhoneNumbers::setPager(const QString &pager) {
    m_pager = pager;
    m_pager_isSet = true;
}

bool OAIIPhoneNumbers::is_pager_Set() const{
    return m_pager_isSet;
}

bool OAIIPhoneNumbers::is_pager_Valid() const{
    return m_pager_isValid;
}

bool OAIIPhoneNumbers::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_numbers.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_business_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cell_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pager_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIPhoneNumbers::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
