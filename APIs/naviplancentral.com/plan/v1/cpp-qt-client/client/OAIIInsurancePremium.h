/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIInsurancePremium.h
 *
 * 
 */

#ifndef OAIIInsurancePremium_H
#define OAIIInsurancePremium_H

#include <QJsonObject>

#include "OAICurrency.h"
#include "OAICurrencyWithGrowth.h"
#include "OAIDate.h"
#include "OAIIFormattedFrequency.h"
#include "OAIPercent.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICurrencyWithGrowth;
class OAICurrency;
class OAIDate;
class OAIIFormattedFrequency;
class OAIPercent;

class OAIIInsurancePremium : public OAIObject {
public:
    OAIIInsurancePremium();
    OAIIInsurancePremium(QString json);
    ~OAIIInsurancePremium() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICurrencyWithGrowth getAmount() const;
    void setAmount(const OAICurrencyWithGrowth &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    OAICurrency getAnnualAmount() const;
    void setAnnualAmount(const OAICurrency &annual_amount);
    bool is_annual_amount_Set() const;
    bool is_annual_amount_Valid() const;

    OAIDate getCeaseDate() const;
    void setCeaseDate(const OAIDate &cease_date);
    bool is_cease_date_Set() const;
    bool is_cease_date_Valid() const;

    QString getFormattedPayingMember() const;
    void setFormattedPayingMember(const QString &formatted_paying_member);
    bool is_formatted_paying_member_Set() const;
    bool is_formatted_paying_member_Valid() const;

    OAIIFormattedFrequency getFrequency() const;
    void setFrequency(const OAIIFormattedFrequency &frequency);
    bool is_frequency_Set() const;
    bool is_frequency_Valid() const;

    QString getPayingMember() const;
    void setPayingMember(const QString &paying_member);
    bool is_paying_member_Set() const;
    bool is_paying_member_Valid() const;

    OAIPercent getPremiumRefundAmount() const;
    void setPremiumRefundAmount(const OAIPercent &premium_refund_amount);
    bool is_premium_refund_amount_Set() const;
    bool is_premium_refund_amount_Valid() const;

    OAIDate getStartDate() const;
    void setStartDate(const OAIDate &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICurrencyWithGrowth m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    OAICurrency m_annual_amount;
    bool m_annual_amount_isSet;
    bool m_annual_amount_isValid;

    OAIDate m_cease_date;
    bool m_cease_date_isSet;
    bool m_cease_date_isValid;

    QString m_formatted_paying_member;
    bool m_formatted_paying_member_isSet;
    bool m_formatted_paying_member_isValid;

    OAIIFormattedFrequency m_frequency;
    bool m_frequency_isSet;
    bool m_frequency_isValid;

    QString m_paying_member;
    bool m_paying_member_isSet;
    bool m_paying_member_isValid;

    OAIPercent m_premium_refund_amount;
    bool m_premium_refund_amount_isSet;
    bool m_premium_refund_amount_isValid;

    OAIDate m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIInsurancePremium)

#endif // OAIIInsurancePremium_H
