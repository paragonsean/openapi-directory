/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIAssetValuation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIAssetValuation::OAIIAssetValuation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIAssetValuation::OAIIAssetValuation() {
    this->initializeModel();
}

OAIIAssetValuation::~OAIIAssetValuation() {}

void OAIIAssetValuation::initializeModel() {

    m_cost_basis_isSet = false;
    m_cost_basis_isValid = false;

    m_market_value_isSet = false;
    m_market_value_isValid = false;

    m_valuation_date_isSet = false;
    m_valuation_date_isValid = false;
}

void OAIIAssetValuation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIAssetValuation::fromJsonObject(QJsonObject json) {

    m_cost_basis_isValid = ::OpenAPI::fromJsonValue(m_cost_basis, json[QString("costBasis")]);
    m_cost_basis_isSet = !json[QString("costBasis")].isNull() && m_cost_basis_isValid;

    m_market_value_isValid = ::OpenAPI::fromJsonValue(m_market_value, json[QString("marketValue")]);
    m_market_value_isSet = !json[QString("marketValue")].isNull() && m_market_value_isValid;

    m_valuation_date_isValid = ::OpenAPI::fromJsonValue(m_valuation_date, json[QString("valuationDate")]);
    m_valuation_date_isSet = !json[QString("valuationDate")].isNull() && m_valuation_date_isValid;
}

QString OAIIAssetValuation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIAssetValuation::asJsonObject() const {
    QJsonObject obj;
    if (m_cost_basis.isSet()) {
        obj.insert(QString("costBasis"), ::OpenAPI::toJsonValue(m_cost_basis));
    }
    if (m_market_value.isSet()) {
        obj.insert(QString("marketValue"), ::OpenAPI::toJsonValue(m_market_value));
    }
    if (m_valuation_date.isSet()) {
        obj.insert(QString("valuationDate"), ::OpenAPI::toJsonValue(m_valuation_date));
    }
    return obj;
}

OAICurrency OAIIAssetValuation::getCostBasis() const {
    return m_cost_basis;
}
void OAIIAssetValuation::setCostBasis(const OAICurrency &cost_basis) {
    m_cost_basis = cost_basis;
    m_cost_basis_isSet = true;
}

bool OAIIAssetValuation::is_cost_basis_Set() const{
    return m_cost_basis_isSet;
}

bool OAIIAssetValuation::is_cost_basis_Valid() const{
    return m_cost_basis_isValid;
}

OAICurrency OAIIAssetValuation::getMarketValue() const {
    return m_market_value;
}
void OAIIAssetValuation::setMarketValue(const OAICurrency &market_value) {
    m_market_value = market_value;
    m_market_value_isSet = true;
}

bool OAIIAssetValuation::is_market_value_Set() const{
    return m_market_value_isSet;
}

bool OAIIAssetValuation::is_market_value_Valid() const{
    return m_market_value_isValid;
}

OAIDate OAIIAssetValuation::getValuationDate() const {
    return m_valuation_date;
}
void OAIIAssetValuation::setValuationDate(const OAIDate &valuation_date) {
    m_valuation_date = valuation_date;
    m_valuation_date_isSet = true;
}

bool OAIIAssetValuation::is_valuation_date_Set() const{
    return m_valuation_date_isSet;
}

bool OAIIAssetValuation::is_valuation_date_Valid() const{
    return m_valuation_date_isValid;
}

bool OAIIAssetValuation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cost_basis.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_market_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_valuation_date.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIAssetValuation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
