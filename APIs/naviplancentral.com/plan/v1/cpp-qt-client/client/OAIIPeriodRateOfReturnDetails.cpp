/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIPeriodRateOfReturnDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIPeriodRateOfReturnDetails::OAIIPeriodRateOfReturnDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIPeriodRateOfReturnDetails::OAIIPeriodRateOfReturnDetails() {
    this->initializeModel();
}

OAIIPeriodRateOfReturnDetails::~OAIIPeriodRateOfReturnDetails() {}

void OAIIPeriodRateOfReturnDetails::initializeModel() {

    m_breakdown_isSet = false;
    m_breakdown_isValid = false;

    m_standard_deviation_isSet = false;
    m_standard_deviation_isValid = false;

    m_total_isSet = false;
    m_total_isValid = false;
}

void OAIIPeriodRateOfReturnDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIPeriodRateOfReturnDetails::fromJsonObject(QJsonObject json) {

    m_breakdown_isValid = ::OpenAPI::fromJsonValue(m_breakdown, json[QString("breakdown")]);
    m_breakdown_isSet = !json[QString("breakdown")].isNull() && m_breakdown_isValid;

    m_standard_deviation_isValid = ::OpenAPI::fromJsonValue(m_standard_deviation, json[QString("standardDeviation")]);
    m_standard_deviation_isSet = !json[QString("standardDeviation")].isNull() && m_standard_deviation_isValid;

    m_total_isValid = ::OpenAPI::fromJsonValue(m_total, json[QString("total")]);
    m_total_isSet = !json[QString("total")].isNull() && m_total_isValid;
}

QString OAIIPeriodRateOfReturnDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIPeriodRateOfReturnDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_breakdown.isSet()) {
        obj.insert(QString("breakdown"), ::OpenAPI::toJsonValue(m_breakdown));
    }
    if (m_standard_deviation.isSet()) {
        obj.insert(QString("standardDeviation"), ::OpenAPI::toJsonValue(m_standard_deviation));
    }
    if (m_total.isSet()) {
        obj.insert(QString("total"), ::OpenAPI::toJsonValue(m_total));
    }
    return obj;
}

OAIIRateOfReturnBreakdown OAIIPeriodRateOfReturnDetails::getBreakdown() const {
    return m_breakdown;
}
void OAIIPeriodRateOfReturnDetails::setBreakdown(const OAIIRateOfReturnBreakdown &breakdown) {
    m_breakdown = breakdown;
    m_breakdown_isSet = true;
}

bool OAIIPeriodRateOfReturnDetails::is_breakdown_Set() const{
    return m_breakdown_isSet;
}

bool OAIIPeriodRateOfReturnDetails::is_breakdown_Valid() const{
    return m_breakdown_isValid;
}

OAIPercent OAIIPeriodRateOfReturnDetails::getStandardDeviation() const {
    return m_standard_deviation;
}
void OAIIPeriodRateOfReturnDetails::setStandardDeviation(const OAIPercent &standard_deviation) {
    m_standard_deviation = standard_deviation;
    m_standard_deviation_isSet = true;
}

bool OAIIPeriodRateOfReturnDetails::is_standard_deviation_Set() const{
    return m_standard_deviation_isSet;
}

bool OAIIPeriodRateOfReturnDetails::is_standard_deviation_Valid() const{
    return m_standard_deviation_isValid;
}

OAIPercent OAIIPeriodRateOfReturnDetails::getTotal() const {
    return m_total;
}
void OAIIPeriodRateOfReturnDetails::setTotal(const OAIPercent &total) {
    m_total = total;
    m_total_isSet = true;
}

bool OAIIPeriodRateOfReturnDetails::is_total_Set() const{
    return m_total_isSet;
}

bool OAIIPeriodRateOfReturnDetails::is_total_Valid() const{
    return m_total_isValid;
}

bool OAIIPeriodRateOfReturnDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_breakdown.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_standard_deviation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_total.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIPeriodRateOfReturnDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
