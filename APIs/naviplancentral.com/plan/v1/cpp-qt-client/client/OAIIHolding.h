/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIHolding.h
 *
 * 
 */

#ifndef OAIIHolding_H
#define OAIIHolding_H

#include <QJsonObject>

#include "OAIIAssetMix.h"
#include "OAIIAssetValuation.h"
#include "OAIIPeriodRateOfReturnDetails.h"
#include "OAIPercentOr_Currency.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIAssetMix;
class OAIPercentOr_Currency;
class OAIIPeriodRateOfReturnDetails;
class OAIIAssetValuation;

class OAIIHolding : public OAIObject {
public:
    OAIIHolding();
    OAIIHolding(QString json);
    ~OAIIHolding() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIIAssetMix getAssetMix() const;
    void setAssetMix(const OAIIAssetMix &asset_mix);
    bool is_asset_mix_Set() const;
    bool is_asset_mix_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIPercentOr_Currency getHoldAmount() const;
    void setHoldAmount(const OAIPercentOr_Currency &hold_amount);
    bool is_hold_amount_Set() const;
    bool is_hold_amount_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsClassified() const;
    void setIsClassified(const bool &is_classified);
    bool is_is_classified_Set() const;
    bool is_is_classified_Valid() const;

    OAIIPeriodRateOfReturnDetails getPreRetirementReturnRates() const;
    void setPreRetirementReturnRates(const OAIIPeriodRateOfReturnDetails &pre_retirement_return_rates);
    bool is_pre_retirement_return_rates_Set() const;
    bool is_pre_retirement_return_rates_Valid() const;

    OAIIPeriodRateOfReturnDetails getRetirementReturnRates() const;
    void setRetirementReturnRates(const OAIIPeriodRateOfReturnDetails &retirement_return_rates);
    bool is_retirement_return_rates_Set() const;
    bool is_retirement_return_rates_Valid() const;

    QString getSymbol() const;
    void setSymbol(const QString &symbol);
    bool is_symbol_Set() const;
    bool is_symbol_Valid() const;

    OAIIAssetValuation getValuation() const;
    void setValuation(const OAIIAssetValuation &valuation);
    bool is_valuation_Set() const;
    bool is_valuation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIIAssetMix m_asset_mix;
    bool m_asset_mix_isSet;
    bool m_asset_mix_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIPercentOr_Currency m_hold_amount;
    bool m_hold_amount_isSet;
    bool m_hold_amount_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_classified;
    bool m_is_classified_isSet;
    bool m_is_classified_isValid;

    OAIIPeriodRateOfReturnDetails m_pre_retirement_return_rates;
    bool m_pre_retirement_return_rates_isSet;
    bool m_pre_retirement_return_rates_isValid;

    OAIIPeriodRateOfReturnDetails m_retirement_return_rates;
    bool m_retirement_return_rates_isSet;
    bool m_retirement_return_rates_isValid;

    QString m_symbol;
    bool m_symbol_isSet;
    bool m_symbol_isValid;

    OAIIAssetValuation m_valuation;
    bool m_valuation_isSet;
    bool m_valuation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIHolding)

#endif // OAIIHolding_H
