/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIInvestmentAccountOwnershipData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIInvestmentAccountOwnershipData::OAIIInvestmentAccountOwnershipData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIInvestmentAccountOwnershipData::OAIIInvestmentAccountOwnershipData() {
    this->initializeModel();
}

OAIIInvestmentAccountOwnershipData::~OAIIInvestmentAccountOwnershipData() {}

void OAIIInvestmentAccountOwnershipData::initializeModel() {

    m_owner_isSet = false;
    m_owner_isValid = false;

    m_owners_name_isSet = false;
    m_owners_name_isValid = false;

    m_ownership_percent_isSet = false;
    m_ownership_percent_isValid = false;
}

void OAIIInvestmentAccountOwnershipData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIInvestmentAccountOwnershipData::fromJsonObject(QJsonObject json) {

    m_owner_isValid = ::OpenAPI::fromJsonValue(m_owner, json[QString("owner")]);
    m_owner_isSet = !json[QString("owner")].isNull() && m_owner_isValid;

    m_owners_name_isValid = ::OpenAPI::fromJsonValue(m_owners_name, json[QString("ownersName")]);
    m_owners_name_isSet = !json[QString("ownersName")].isNull() && m_owners_name_isValid;

    m_ownership_percent_isValid = ::OpenAPI::fromJsonValue(m_ownership_percent, json[QString("ownershipPercent")]);
    m_ownership_percent_isSet = !json[QString("ownershipPercent")].isNull() && m_ownership_percent_isValid;
}

QString OAIIInvestmentAccountOwnershipData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIInvestmentAccountOwnershipData::asJsonObject() const {
    QJsonObject obj;
    if (m_owner_isSet) {
        obj.insert(QString("owner"), ::OpenAPI::toJsonValue(m_owner));
    }
    if (m_owners_name_isSet) {
        obj.insert(QString("ownersName"), ::OpenAPI::toJsonValue(m_owners_name));
    }
    if (m_ownership_percent.isSet()) {
        obj.insert(QString("ownershipPercent"), ::OpenAPI::toJsonValue(m_ownership_percent));
    }
    return obj;
}

QString OAIIInvestmentAccountOwnershipData::getOwner() const {
    return m_owner;
}
void OAIIInvestmentAccountOwnershipData::setOwner(const QString &owner) {
    m_owner = owner;
    m_owner_isSet = true;
}

bool OAIIInvestmentAccountOwnershipData::is_owner_Set() const{
    return m_owner_isSet;
}

bool OAIIInvestmentAccountOwnershipData::is_owner_Valid() const{
    return m_owner_isValid;
}

QString OAIIInvestmentAccountOwnershipData::getOwnersName() const {
    return m_owners_name;
}
void OAIIInvestmentAccountOwnershipData::setOwnersName(const QString &owners_name) {
    m_owners_name = owners_name;
    m_owners_name_isSet = true;
}

bool OAIIInvestmentAccountOwnershipData::is_owners_name_Set() const{
    return m_owners_name_isSet;
}

bool OAIIInvestmentAccountOwnershipData::is_owners_name_Valid() const{
    return m_owners_name_isValid;
}

OAIPercent OAIIInvestmentAccountOwnershipData::getOwnershipPercent() const {
    return m_ownership_percent;
}
void OAIIInvestmentAccountOwnershipData::setOwnershipPercent(const OAIPercent &ownership_percent) {
    m_ownership_percent = ownership_percent;
    m_ownership_percent_isSet = true;
}

bool OAIIInvestmentAccountOwnershipData::is_ownership_percent_Set() const{
    return m_ownership_percent_isSet;
}

bool OAIIInvestmentAccountOwnershipData::is_ownership_percent_Valid() const{
    return m_ownership_percent_isValid;
}

bool OAIIInvestmentAccountOwnershipData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_owner_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owners_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ownership_percent.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIInvestmentAccountOwnershipData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
