/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIICashFlowByOwner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIICashFlowByOwner::OAIICashFlowByOwner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIICashFlowByOwner::OAIICashFlowByOwner() {
    this->initializeModel();
}

OAIICashFlowByOwner::~OAIICashFlowByOwner() {}

void OAIICashFlowByOwner::initializeModel() {

    m_client_cash_flow_isSet = false;
    m_client_cash_flow_isValid = false;

    m_co_client_cash_flow_isSet = false;
    m_co_client_cash_flow_isValid = false;

    m_total_cash_flow_isSet = false;
    m_total_cash_flow_isValid = false;
}

void OAIICashFlowByOwner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIICashFlowByOwner::fromJsonObject(QJsonObject json) {

    m_client_cash_flow_isValid = ::OpenAPI::fromJsonValue(m_client_cash_flow, json[QString("clientCashFlow")]);
    m_client_cash_flow_isSet = !json[QString("clientCashFlow")].isNull() && m_client_cash_flow_isValid;

    m_co_client_cash_flow_isValid = ::OpenAPI::fromJsonValue(m_co_client_cash_flow, json[QString("coClientCashFlow")]);
    m_co_client_cash_flow_isSet = !json[QString("coClientCashFlow")].isNull() && m_co_client_cash_flow_isValid;

    m_total_cash_flow_isValid = ::OpenAPI::fromJsonValue(m_total_cash_flow, json[QString("totalCashFlow")]);
    m_total_cash_flow_isSet = !json[QString("totalCashFlow")].isNull() && m_total_cash_flow_isValid;
}

QString OAIICashFlowByOwner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIICashFlowByOwner::asJsonObject() const {
    QJsonObject obj;
    if (m_client_cash_flow.isSet()) {
        obj.insert(QString("clientCashFlow"), ::OpenAPI::toJsonValue(m_client_cash_flow));
    }
    if (m_co_client_cash_flow.isSet()) {
        obj.insert(QString("coClientCashFlow"), ::OpenAPI::toJsonValue(m_co_client_cash_flow));
    }
    if (m_total_cash_flow.isSet()) {
        obj.insert(QString("totalCashFlow"), ::OpenAPI::toJsonValue(m_total_cash_flow));
    }
    return obj;
}

OAIICashFlow OAIICashFlowByOwner::getClientCashFlow() const {
    return m_client_cash_flow;
}
void OAIICashFlowByOwner::setClientCashFlow(const OAIICashFlow &client_cash_flow) {
    m_client_cash_flow = client_cash_flow;
    m_client_cash_flow_isSet = true;
}

bool OAIICashFlowByOwner::is_client_cash_flow_Set() const{
    return m_client_cash_flow_isSet;
}

bool OAIICashFlowByOwner::is_client_cash_flow_Valid() const{
    return m_client_cash_flow_isValid;
}

OAIICashFlow OAIICashFlowByOwner::getCoClientCashFlow() const {
    return m_co_client_cash_flow;
}
void OAIICashFlowByOwner::setCoClientCashFlow(const OAIICashFlow &co_client_cash_flow) {
    m_co_client_cash_flow = co_client_cash_flow;
    m_co_client_cash_flow_isSet = true;
}

bool OAIICashFlowByOwner::is_co_client_cash_flow_Set() const{
    return m_co_client_cash_flow_isSet;
}

bool OAIICashFlowByOwner::is_co_client_cash_flow_Valid() const{
    return m_co_client_cash_flow_isValid;
}

OAIICashFlow OAIICashFlowByOwner::getTotalCashFlow() const {
    return m_total_cash_flow;
}
void OAIICashFlowByOwner::setTotalCashFlow(const OAIICashFlow &total_cash_flow) {
    m_total_cash_flow = total_cash_flow;
    m_total_cash_flow_isSet = true;
}

bool OAIICashFlowByOwner::is_total_cash_flow_Set() const{
    return m_total_cash_flow_isSet;
}

bool OAIICashFlowByOwner::is_total_cash_flow_Valid() const{
    return m_total_cash_flow_isValid;
}

bool OAIICashFlowByOwner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_cash_flow.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_co_client_cash_flow.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_cash_flow.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIICashFlowByOwner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
