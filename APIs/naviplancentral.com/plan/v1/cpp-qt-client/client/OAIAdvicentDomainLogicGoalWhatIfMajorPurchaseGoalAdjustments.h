/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAdvicentDomainLogicGoalWhatIfMajorPurchaseGoalAdjustments.h
 *
 * 
 */

#ifndef OAIAdvicentDomainLogicGoalWhatIfMajorPurchaseGoalAdjustments_H
#define OAIAdvicentDomainLogicGoalWhatIfMajorPurchaseGoalAdjustments_H

#include <QJsonObject>

#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAdvicentDomainLogicGoalWhatIfMajorPurchaseGoalAdjustments : public OAIObject {
public:
    OAIAdvicentDomainLogicGoalWhatIfMajorPurchaseGoalAdjustments();
    OAIAdvicentDomainLogicGoalWhatIfMajorPurchaseGoalAdjustments(QString json);
    ~OAIAdvicentDomainLogicGoalWhatIfMajorPurchaseGoalAdjustments() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getLumpSumContribution() const;
    void setLumpSumContribution(const double &lump_sum_contribution);
    bool is_lump_sum_contribution_Set() const;
    bool is_lump_sum_contribution_Valid() const;

    QDateTime getLumpSumDate() const;
    void setLumpSumDate(const QDateTime &lump_sum_date);
    bool is_lump_sum_date_Set() const;
    bool is_lump_sum_date_Valid() const;

    double getMonthlySavingsContribution() const;
    void setMonthlySavingsContribution(const double &monthly_savings_contribution);
    bool is_monthly_savings_contribution_Set() const;
    bool is_monthly_savings_contribution_Valid() const;

    QDateTime getTargetDate() const;
    void setTargetDate(const QDateTime &target_date);
    bool is_target_date_Set() const;
    bool is_target_date_Valid() const;

    double getTotalNeed() const;
    void setTotalNeed(const double &total_need);
    bool is_total_need_Set() const;
    bool is_total_need_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_lump_sum_contribution;
    bool m_lump_sum_contribution_isSet;
    bool m_lump_sum_contribution_isValid;

    QDateTime m_lump_sum_date;
    bool m_lump_sum_date_isSet;
    bool m_lump_sum_date_isValid;

    double m_monthly_savings_contribution;
    bool m_monthly_savings_contribution_isSet;
    bool m_monthly_savings_contribution_isValid;

    QDateTime m_target_date;
    bool m_target_date_isSet;
    bool m_target_date_isValid;

    double m_total_need;
    bool m_total_need_isSet;
    bool m_total_need_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAdvicentDomainLogicGoalWhatIfMajorPurchaseGoalAdjustments)

#endif // OAIAdvicentDomainLogicGoalWhatIfMajorPurchaseGoalAdjustments_H
