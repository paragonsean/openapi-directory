/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIINetWorth.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIINetWorth::OAIINetWorth(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIINetWorth::OAIINetWorth() {
    this->initializeModel();
}

OAIINetWorth::~OAIINetWorth() {}

void OAIINetWorth::initializeModel() {

    m_net_worth_at_plan_date_isSet = false;
    m_net_worth_at_plan_date_isValid = false;

    m_net_worth_at_plan_end_isSet = false;
    m_net_worth_at_plan_end_isValid = false;

    m_net_worth_at_retirement_isSet = false;
    m_net_worth_at_retirement_isValid = false;
}

void OAIINetWorth::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIINetWorth::fromJsonObject(QJsonObject json) {

    m_net_worth_at_plan_date_isValid = ::OpenAPI::fromJsonValue(m_net_worth_at_plan_date, json[QString("netWorthAtPlanDate")]);
    m_net_worth_at_plan_date_isSet = !json[QString("netWorthAtPlanDate")].isNull() && m_net_worth_at_plan_date_isValid;

    m_net_worth_at_plan_end_isValid = ::OpenAPI::fromJsonValue(m_net_worth_at_plan_end, json[QString("netWorthAtPlanEnd")]);
    m_net_worth_at_plan_end_isSet = !json[QString("netWorthAtPlanEnd")].isNull() && m_net_worth_at_plan_end_isValid;

    m_net_worth_at_retirement_isValid = ::OpenAPI::fromJsonValue(m_net_worth_at_retirement, json[QString("netWorthAtRetirement")]);
    m_net_worth_at_retirement_isSet = !json[QString("netWorthAtRetirement")].isNull() && m_net_worth_at_retirement_isValid;
}

QString OAIINetWorth::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIINetWorth::asJsonObject() const {
    QJsonObject obj;
    if (m_net_worth_at_plan_date.isSet()) {
        obj.insert(QString("netWorthAtPlanDate"), ::OpenAPI::toJsonValue(m_net_worth_at_plan_date));
    }
    if (m_net_worth_at_plan_end.isSet()) {
        obj.insert(QString("netWorthAtPlanEnd"), ::OpenAPI::toJsonValue(m_net_worth_at_plan_end));
    }
    if (m_net_worth_at_retirement.isSet()) {
        obj.insert(QString("netWorthAtRetirement"), ::OpenAPI::toJsonValue(m_net_worth_at_retirement));
    }
    return obj;
}

OAIINetWorthAtDate OAIINetWorth::getNetWorthAtPlanDate() const {
    return m_net_worth_at_plan_date;
}
void OAIINetWorth::setNetWorthAtPlanDate(const OAIINetWorthAtDate &net_worth_at_plan_date) {
    m_net_worth_at_plan_date = net_worth_at_plan_date;
    m_net_worth_at_plan_date_isSet = true;
}

bool OAIINetWorth::is_net_worth_at_plan_date_Set() const{
    return m_net_worth_at_plan_date_isSet;
}

bool OAIINetWorth::is_net_worth_at_plan_date_Valid() const{
    return m_net_worth_at_plan_date_isValid;
}

OAIIOptionalField_INetWorthAtDate OAIINetWorth::getNetWorthAtPlanEnd() const {
    return m_net_worth_at_plan_end;
}
void OAIINetWorth::setNetWorthAtPlanEnd(const OAIIOptionalField_INetWorthAtDate &net_worth_at_plan_end) {
    m_net_worth_at_plan_end = net_worth_at_plan_end;
    m_net_worth_at_plan_end_isSet = true;
}

bool OAIINetWorth::is_net_worth_at_plan_end_Set() const{
    return m_net_worth_at_plan_end_isSet;
}

bool OAIINetWorth::is_net_worth_at_plan_end_Valid() const{
    return m_net_worth_at_plan_end_isValid;
}

OAIIOptionalField_INetWorthAtDate OAIINetWorth::getNetWorthAtRetirement() const {
    return m_net_worth_at_retirement;
}
void OAIINetWorth::setNetWorthAtRetirement(const OAIIOptionalField_INetWorthAtDate &net_worth_at_retirement) {
    m_net_worth_at_retirement = net_worth_at_retirement;
    m_net_worth_at_retirement_isSet = true;
}

bool OAIINetWorth::is_net_worth_at_retirement_Set() const{
    return m_net_worth_at_retirement_isSet;
}

bool OAIINetWorth::is_net_worth_at_retirement_Valid() const{
    return m_net_worth_at_retirement_isValid;
}

bool OAIINetWorth::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_net_worth_at_plan_date.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_net_worth_at_plan_end.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_net_worth_at_retirement.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIINetWorth::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
