/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIISavingsStrategies.h
 *
 * 
 */

#ifndef OAIISavingsStrategies_H
#define OAIISavingsStrategies_H

#include <QJsonObject>

#include "OAIILumpSumSavingsStrategy.h"
#include "OAIIPeriodicSavingsStrategy.h"
#include "OAIIRrspMaximizerStrategy.h"
#include "OAIISurplusSavingsStrategy.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIILumpSumSavingsStrategy;
class OAIIPeriodicSavingsStrategy;
class OAIIRrspMaximizerStrategy;
class OAIISurplusSavingsStrategy;

class OAIISavingsStrategies : public OAIObject {
public:
    OAIISavingsStrategies();
    OAIISavingsStrategies(QString json);
    ~OAIISavingsStrategies() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIILumpSumSavingsStrategy> getLumpSumSavingsStrategies() const;
    void setLumpSumSavingsStrategies(const QList<OAIILumpSumSavingsStrategy> &lump_sum_savings_strategies);
    bool is_lump_sum_savings_strategies_Set() const;
    bool is_lump_sum_savings_strategies_Valid() const;

    QList<OAIIPeriodicSavingsStrategy> getPeriodicSavingsStrategies() const;
    void setPeriodicSavingsStrategies(const QList<OAIIPeriodicSavingsStrategy> &periodic_savings_strategies);
    bool is_periodic_savings_strategies_Set() const;
    bool is_periodic_savings_strategies_Valid() const;

    QList<OAIIRrspMaximizerStrategy> getRrspMaximizerStrategies() const;
    void setRrspMaximizerStrategies(const QList<OAIIRrspMaximizerStrategy> &rrsp_maximizer_strategies);
    bool is_rrsp_maximizer_strategies_Set() const;
    bool is_rrsp_maximizer_strategies_Valid() const;

    QList<OAIISurplusSavingsStrategy> getSurplusSavingsStrategies() const;
    void setSurplusSavingsStrategies(const QList<OAIISurplusSavingsStrategy> &surplus_savings_strategies);
    bool is_surplus_savings_strategies_Set() const;
    bool is_surplus_savings_strategies_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIILumpSumSavingsStrategy> m_lump_sum_savings_strategies;
    bool m_lump_sum_savings_strategies_isSet;
    bool m_lump_sum_savings_strategies_isValid;

    QList<OAIIPeriodicSavingsStrategy> m_periodic_savings_strategies;
    bool m_periodic_savings_strategies_isSet;
    bool m_periodic_savings_strategies_isValid;

    QList<OAIIRrspMaximizerStrategy> m_rrsp_maximizer_strategies;
    bool m_rrsp_maximizer_strategies_isSet;
    bool m_rrsp_maximizer_strategies_isValid;

    QList<OAIISurplusSavingsStrategy> m_surplus_savings_strategies;
    bool m_surplus_savings_strategies_isSet;
    bool m_surplus_savings_strategies_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIISavingsStrategies)

#endif // OAIISavingsStrategies_H
