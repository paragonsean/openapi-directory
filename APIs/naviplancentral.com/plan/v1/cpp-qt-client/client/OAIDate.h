/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDate.h
 *
 * 
 */

#ifndef OAIDate_H
#define OAIDate_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDate : public OAIObject {
public:
    OAIDate();
    OAIDate(QString json);
    ~OAIDate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDay() const;
    void setDay(const qint32 &day);
    bool is_day_Set() const;
    bool is_day_Valid() const;

    QString getFormatted() const;
    void setFormatted(const QString &formatted);
    bool is_formatted_Set() const;
    bool is_formatted_Valid() const;

    QString getFormattedMmmMddyyyy() const;
    void setFormattedMmmMddyyyy(const QString &formatted_mmm_mddyyyy);
    bool is_formatted_mmm_mddyyyy_Set() const;
    bool is_formatted_mmm_mddyyyy_Valid() const;

    QString getFormattedMmMdd() const;
    void setFormattedMmMdd(const QString &formatted_mm_mdd);
    bool is_formatted_mm_mdd_Set() const;
    bool is_formatted_mm_mdd_Valid() const;

    QString getFormattedMmMddyyyy() const;
    void setFormattedMmMddyyyy(const QString &formatted_mm_mddyyyy);
    bool is_formatted_mm_mddyyyy_Set() const;
    bool is_formatted_mm_mddyyyy_Valid() const;

    QString getFormattedMmMyyyy() const;
    void setFormattedMmMyyyy(const QString &formatted_mm_myyyy);
    bool is_formatted_mm_myyyy_Set() const;
    bool is_formatted_mm_myyyy_Valid() const;

    QString getFormattedNa() const;
    void setFormattedNa(const QString &formatted_na);
    bool is_formatted_na_Set() const;
    bool is_formatted_na_Valid() const;

    qint32 getMonth() const;
    void setMonth(const qint32 &month);
    bool is_month_Set() const;
    bool is_month_Valid() const;

    QDateTime getToDateTime() const;
    void setToDateTime(const QDateTime &to_date_time);
    bool is_to_date_time_Set() const;
    bool is_to_date_time_Valid() const;

    QString getUrlEncoded() const;
    void setUrlEncoded(const QString &url_encoded);
    bool is_url_encoded_Set() const;
    bool is_url_encoded_Valid() const;

    qint32 getYear() const;
    void setYear(const qint32 &year);
    bool is_year_Set() const;
    bool is_year_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_day;
    bool m_day_isSet;
    bool m_day_isValid;

    QString m_formatted;
    bool m_formatted_isSet;
    bool m_formatted_isValid;

    QString m_formatted_mmm_mddyyyy;
    bool m_formatted_mmm_mddyyyy_isSet;
    bool m_formatted_mmm_mddyyyy_isValid;

    QString m_formatted_mm_mdd;
    bool m_formatted_mm_mdd_isSet;
    bool m_formatted_mm_mdd_isValid;

    QString m_formatted_mm_mddyyyy;
    bool m_formatted_mm_mddyyyy_isSet;
    bool m_formatted_mm_mddyyyy_isValid;

    QString m_formatted_mm_myyyy;
    bool m_formatted_mm_myyyy_isSet;
    bool m_formatted_mm_myyyy_isValid;

    QString m_formatted_na;
    bool m_formatted_na_isSet;
    bool m_formatted_na_isValid;

    qint32 m_month;
    bool m_month_isSet;
    bool m_month_isValid;

    QDateTime m_to_date_time;
    bool m_to_date_time_isSet;
    bool m_to_date_time_isValid;

    QString m_url_encoded;
    bool m_url_encoded_isSet;
    bool m_url_encoded_isValid;

    qint32 m_year;
    bool m_year_isSet;
    bool m_year_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDate)

#endif // OAIDate_H
