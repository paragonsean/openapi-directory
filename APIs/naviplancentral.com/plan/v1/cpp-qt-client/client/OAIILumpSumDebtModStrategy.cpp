/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIILumpSumDebtModStrategy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIILumpSumDebtModStrategy::OAIILumpSumDebtModStrategy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIILumpSumDebtModStrategy::OAIILumpSumDebtModStrategy() {
    this->initializeModel();
}

OAIILumpSumDebtModStrategy::~OAIILumpSumDebtModStrategy() {}

void OAIILumpSumDebtModStrategy::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_debt_modification_date_isSet = false;
    m_debt_modification_date_isValid = false;

    m_index_rate_isSet = false;
    m_index_rate_isValid = false;
}

void OAIILumpSumDebtModStrategy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIILumpSumDebtModStrategy::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_debt_modification_date_isValid = ::OpenAPI::fromJsonValue(m_debt_modification_date, json[QString("debtModificationDate")]);
    m_debt_modification_date_isSet = !json[QString("debtModificationDate")].isNull() && m_debt_modification_date_isValid;

    m_index_rate_isValid = ::OpenAPI::fromJsonValue(m_index_rate, json[QString("indexRate")]);
    m_index_rate_isSet = !json[QString("indexRate")].isNull() && m_index_rate_isValid;
}

QString OAIILumpSumDebtModStrategy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIILumpSumDebtModStrategy::asJsonObject() const {
    QJsonObject obj;
    if (m_amount.isSet()) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_debt_modification_date.isSet()) {
        obj.insert(QString("debtModificationDate"), ::OpenAPI::toJsonValue(m_debt_modification_date));
    }
    if (m_index_rate.isSet()) {
        obj.insert(QString("indexRate"), ::OpenAPI::toJsonValue(m_index_rate));
    }
    return obj;
}

OAICurrency OAIILumpSumDebtModStrategy::getAmount() const {
    return m_amount;
}
void OAIILumpSumDebtModStrategy::setAmount(const OAICurrency &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIILumpSumDebtModStrategy::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIILumpSumDebtModStrategy::is_amount_Valid() const{
    return m_amount_isValid;
}

OAIDate OAIILumpSumDebtModStrategy::getDebtModificationDate() const {
    return m_debt_modification_date;
}
void OAIILumpSumDebtModStrategy::setDebtModificationDate(const OAIDate &debt_modification_date) {
    m_debt_modification_date = debt_modification_date;
    m_debt_modification_date_isSet = true;
}

bool OAIILumpSumDebtModStrategy::is_debt_modification_date_Set() const{
    return m_debt_modification_date_isSet;
}

bool OAIILumpSumDebtModStrategy::is_debt_modification_date_Valid() const{
    return m_debt_modification_date_isValid;
}

OAIGrowthRateValues OAIILumpSumDebtModStrategy::getIndexRate() const {
    return m_index_rate;
}
void OAIILumpSumDebtModStrategy::setIndexRate(const OAIGrowthRateValues &index_rate) {
    m_index_rate = index_rate;
    m_index_rate_isSet = true;
}

bool OAIILumpSumDebtModStrategy::is_index_rate_Set() const{
    return m_index_rate_isSet;
}

bool OAIILumpSumDebtModStrategy::is_index_rate_Valid() const{
    return m_index_rate_isValid;
}

bool OAIILumpSumDebtModStrategy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_debt_modification_date.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_index_rate.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIILumpSumDebtModStrategy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
