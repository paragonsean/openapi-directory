/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIPlanModules.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIPlanModules::OAIIPlanModules(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIPlanModules::OAIIPlanModules() {
    this->initializeModel();
}

OAIIPlanModules::~OAIIPlanModules() {}

void OAIIPlanModules::initializeModel() {

    m_is_critical_illness_module_enabled_isSet = false;
    m_is_critical_illness_module_enabled_isValid = false;

    m_is_disability_income_module_enabled_isSet = false;
    m_is_disability_income_module_enabled_isValid = false;

    m_is_estate_planning_module_eabled_isSet = false;
    m_is_estate_planning_module_eabled_isValid = false;

    m_is_long_term_care_module_enabled_isSet = false;
    m_is_long_term_care_module_enabled_isValid = false;

    m_is_survivor_income_module_enabled_isSet = false;
    m_is_survivor_income_module_enabled_isValid = false;
}

void OAIIPlanModules::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIPlanModules::fromJsonObject(QJsonObject json) {

    m_is_critical_illness_module_enabled_isValid = ::OpenAPI::fromJsonValue(m_is_critical_illness_module_enabled, json[QString("isCriticalIllnessModuleEnabled")]);
    m_is_critical_illness_module_enabled_isSet = !json[QString("isCriticalIllnessModuleEnabled")].isNull() && m_is_critical_illness_module_enabled_isValid;

    m_is_disability_income_module_enabled_isValid = ::OpenAPI::fromJsonValue(m_is_disability_income_module_enabled, json[QString("isDisabilityIncomeModuleEnabled")]);
    m_is_disability_income_module_enabled_isSet = !json[QString("isDisabilityIncomeModuleEnabled")].isNull() && m_is_disability_income_module_enabled_isValid;

    m_is_estate_planning_module_eabled_isValid = ::OpenAPI::fromJsonValue(m_is_estate_planning_module_eabled, json[QString("isEstatePlanningModuleEabled")]);
    m_is_estate_planning_module_eabled_isSet = !json[QString("isEstatePlanningModuleEabled")].isNull() && m_is_estate_planning_module_eabled_isValid;

    m_is_long_term_care_module_enabled_isValid = ::OpenAPI::fromJsonValue(m_is_long_term_care_module_enabled, json[QString("isLongTermCareModuleEnabled")]);
    m_is_long_term_care_module_enabled_isSet = !json[QString("isLongTermCareModuleEnabled")].isNull() && m_is_long_term_care_module_enabled_isValid;

    m_is_survivor_income_module_enabled_isValid = ::OpenAPI::fromJsonValue(m_is_survivor_income_module_enabled, json[QString("isSurvivorIncomeModuleEnabled")]);
    m_is_survivor_income_module_enabled_isSet = !json[QString("isSurvivorIncomeModuleEnabled")].isNull() && m_is_survivor_income_module_enabled_isValid;
}

QString OAIIPlanModules::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIPlanModules::asJsonObject() const {
    QJsonObject obj;
    if (m_is_critical_illness_module_enabled_isSet) {
        obj.insert(QString("isCriticalIllnessModuleEnabled"), ::OpenAPI::toJsonValue(m_is_critical_illness_module_enabled));
    }
    if (m_is_disability_income_module_enabled_isSet) {
        obj.insert(QString("isDisabilityIncomeModuleEnabled"), ::OpenAPI::toJsonValue(m_is_disability_income_module_enabled));
    }
    if (m_is_estate_planning_module_eabled_isSet) {
        obj.insert(QString("isEstatePlanningModuleEabled"), ::OpenAPI::toJsonValue(m_is_estate_planning_module_eabled));
    }
    if (m_is_long_term_care_module_enabled_isSet) {
        obj.insert(QString("isLongTermCareModuleEnabled"), ::OpenAPI::toJsonValue(m_is_long_term_care_module_enabled));
    }
    if (m_is_survivor_income_module_enabled_isSet) {
        obj.insert(QString("isSurvivorIncomeModuleEnabled"), ::OpenAPI::toJsonValue(m_is_survivor_income_module_enabled));
    }
    return obj;
}

bool OAIIPlanModules::isIsCriticalIllnessModuleEnabled() const {
    return m_is_critical_illness_module_enabled;
}
void OAIIPlanModules::setIsCriticalIllnessModuleEnabled(const bool &is_critical_illness_module_enabled) {
    m_is_critical_illness_module_enabled = is_critical_illness_module_enabled;
    m_is_critical_illness_module_enabled_isSet = true;
}

bool OAIIPlanModules::is_is_critical_illness_module_enabled_Set() const{
    return m_is_critical_illness_module_enabled_isSet;
}

bool OAIIPlanModules::is_is_critical_illness_module_enabled_Valid() const{
    return m_is_critical_illness_module_enabled_isValid;
}

bool OAIIPlanModules::isIsDisabilityIncomeModuleEnabled() const {
    return m_is_disability_income_module_enabled;
}
void OAIIPlanModules::setIsDisabilityIncomeModuleEnabled(const bool &is_disability_income_module_enabled) {
    m_is_disability_income_module_enabled = is_disability_income_module_enabled;
    m_is_disability_income_module_enabled_isSet = true;
}

bool OAIIPlanModules::is_is_disability_income_module_enabled_Set() const{
    return m_is_disability_income_module_enabled_isSet;
}

bool OAIIPlanModules::is_is_disability_income_module_enabled_Valid() const{
    return m_is_disability_income_module_enabled_isValid;
}

bool OAIIPlanModules::isIsEstatePlanningModuleEabled() const {
    return m_is_estate_planning_module_eabled;
}
void OAIIPlanModules::setIsEstatePlanningModuleEabled(const bool &is_estate_planning_module_eabled) {
    m_is_estate_planning_module_eabled = is_estate_planning_module_eabled;
    m_is_estate_planning_module_eabled_isSet = true;
}

bool OAIIPlanModules::is_is_estate_planning_module_eabled_Set() const{
    return m_is_estate_planning_module_eabled_isSet;
}

bool OAIIPlanModules::is_is_estate_planning_module_eabled_Valid() const{
    return m_is_estate_planning_module_eabled_isValid;
}

bool OAIIPlanModules::isIsLongTermCareModuleEnabled() const {
    return m_is_long_term_care_module_enabled;
}
void OAIIPlanModules::setIsLongTermCareModuleEnabled(const bool &is_long_term_care_module_enabled) {
    m_is_long_term_care_module_enabled = is_long_term_care_module_enabled;
    m_is_long_term_care_module_enabled_isSet = true;
}

bool OAIIPlanModules::is_is_long_term_care_module_enabled_Set() const{
    return m_is_long_term_care_module_enabled_isSet;
}

bool OAIIPlanModules::is_is_long_term_care_module_enabled_Valid() const{
    return m_is_long_term_care_module_enabled_isValid;
}

bool OAIIPlanModules::isIsSurvivorIncomeModuleEnabled() const {
    return m_is_survivor_income_module_enabled;
}
void OAIIPlanModules::setIsSurvivorIncomeModuleEnabled(const bool &is_survivor_income_module_enabled) {
    m_is_survivor_income_module_enabled = is_survivor_income_module_enabled;
    m_is_survivor_income_module_enabled_isSet = true;
}

bool OAIIPlanModules::is_is_survivor_income_module_enabled_Set() const{
    return m_is_survivor_income_module_enabled_isSet;
}

bool OAIIPlanModules::is_is_survivor_income_module_enabled_Valid() const{
    return m_is_survivor_income_module_enabled_isValid;
}

bool OAIIPlanModules::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_critical_illness_module_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_disability_income_module_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_estate_planning_module_eabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_long_term_care_module_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_survivor_income_module_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIPlanModules::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
