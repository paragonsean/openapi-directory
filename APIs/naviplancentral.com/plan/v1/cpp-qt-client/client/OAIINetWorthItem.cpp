/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIINetWorthItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIINetWorthItem::OAIINetWorthItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIINetWorthItem::OAIINetWorthItem() {
    this->initializeModel();
}

OAIINetWorthItem::~OAIINetWorthItem() {}

void OAIINetWorthItem::initializeModel() {

    m_account_type_isSet = false;
    m_account_type_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIINetWorthItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIINetWorthItem::fromJsonObject(QJsonObject json) {

    m_account_type_isValid = ::OpenAPI::fromJsonValue(m_account_type, json[QString("accountType")]);
    m_account_type_isSet = !json[QString("accountType")].isNull() && m_account_type_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIINetWorthItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIINetWorthItem::asJsonObject() const {
    QJsonObject obj;
    if (m_account_type_isSet) {
        obj.insert(QString("accountType"), ::OpenAPI::toJsonValue(m_account_type));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_value.isSet()) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIINetWorthItem::getAccountType() const {
    return m_account_type;
}
void OAIINetWorthItem::setAccountType(const QString &account_type) {
    m_account_type = account_type;
    m_account_type_isSet = true;
}

bool OAIINetWorthItem::is_account_type_Set() const{
    return m_account_type_isSet;
}

bool OAIINetWorthItem::is_account_type_Valid() const{
    return m_account_type_isValid;
}

QString OAIINetWorthItem::getDescription() const {
    return m_description;
}
void OAIINetWorthItem::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIINetWorthItem::is_description_Set() const{
    return m_description_isSet;
}

bool OAIINetWorthItem::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIINetWorthItem::getId() const {
    return m_id;
}
void OAIINetWorthItem::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIINetWorthItem::is_id_Set() const{
    return m_id_isSet;
}

bool OAIINetWorthItem::is_id_Valid() const{
    return m_id_isValid;
}

OAICurrency OAIINetWorthItem::getValue() const {
    return m_value;
}
void OAIINetWorthItem::setValue(const OAICurrency &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIINetWorthItem::is_value_Set() const{
    return m_value_isSet;
}

bool OAIINetWorthItem::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIINetWorthItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIINetWorthItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
