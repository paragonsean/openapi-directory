/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIDependent.h
 *
 * 
 */

#ifndef OAIIDependent_H
#define OAIIDependent_H

#include <QJsonObject>

#include "OAIDate.h"
#include "OAIFormattedEnumType_Gender.h"
#include "OAIIAddress.h"
#include "OAIIEmployer.h"
#include "OAIIPersonName.h"
#include "OAIIPhoneNumbers.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIAddress;
class OAIDate;
class OAIIEmployer;
class OAIFormattedEnumType_Gender;
class OAIIPersonName;
class OAIIPhoneNumbers;

class OAIIDependent : public OAIObject {
public:
    OAIIDependent();
    OAIIDependent(QString json);
    ~OAIIDependent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIIAddress getAddress() const;
    void setAddress(const OAIIAddress &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    qint32 getAgeAsOfPlanDate() const;
    void setAgeAsOfPlanDate(const qint32 &age_as_of_plan_date);
    bool is_age_as_of_plan_date_Set() const;
    bool is_age_as_of_plan_date_Valid() const;

    OAIDate getBirthdate() const;
    void setBirthdate(const OAIDate &birthdate);
    bool is_birthdate_Set() const;
    bool is_birthdate_Valid() const;

    QString getCitizenship() const;
    void setCitizenship(const QString &citizenship);
    bool is_citizenship_Set() const;
    bool is_citizenship_Valid() const;

    QString getDependentOf() const;
    void setDependentOf(const QString &dependent_of);
    bool is_dependent_of_Set() const;
    bool is_dependent_of_Valid() const;

    QString getDependentOfId() const;
    void setDependentOfId(const QString &dependent_of_id);
    bool is_dependent_of_id_Set() const;
    bool is_dependent_of_id_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    OAIIEmployer getEmployer() const;
    void setEmployer(const OAIIEmployer &employer);
    bool is_employer_Set() const;
    bool is_employer_Valid() const;

    OAIFormattedEnumType_Gender getGender() const;
    void setGender(const OAIFormattedEnumType_Gender &gender);
    bool is_gender_Set() const;
    bool is_gender_Valid() const;

    OAIIPersonName getName() const;
    void setName(const OAIIPersonName &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOwnershipId() const;
    void setOwnershipId(const QString &ownership_id);
    bool is_ownership_id_Set() const;
    bool is_ownership_id_Valid() const;

    OAIIPhoneNumbers getPhone() const;
    void setPhone(const OAIIPhoneNumbers &phone);
    bool is_phone_Set() const;
    bool is_phone_Valid() const;

    QString getRelationship() const;
    void setRelationship(const QString &relationship);
    bool is_relationship_Set() const;
    bool is_relationship_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIIAddress m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    qint32 m_age_as_of_plan_date;
    bool m_age_as_of_plan_date_isSet;
    bool m_age_as_of_plan_date_isValid;

    OAIDate m_birthdate;
    bool m_birthdate_isSet;
    bool m_birthdate_isValid;

    QString m_citizenship;
    bool m_citizenship_isSet;
    bool m_citizenship_isValid;

    QString m_dependent_of;
    bool m_dependent_of_isSet;
    bool m_dependent_of_isValid;

    QString m_dependent_of_id;
    bool m_dependent_of_id_isSet;
    bool m_dependent_of_id_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    OAIIEmployer m_employer;
    bool m_employer_isSet;
    bool m_employer_isValid;

    OAIFormattedEnumType_Gender m_gender;
    bool m_gender_isSet;
    bool m_gender_isValid;

    OAIIPersonName m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_ownership_id;
    bool m_ownership_id_isSet;
    bool m_ownership_id_isValid;

    OAIIPhoneNumbers m_phone;
    bool m_phone_isSet;
    bool m_phone_isValid;

    QString m_relationship;
    bool m_relationship_isSet;
    bool m_relationship_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIDependent)

#endif // OAIIDependent_H
