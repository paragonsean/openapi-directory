/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResetPasswordModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResetPasswordModel::OAIResetPasswordModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResetPasswordModel::OAIResetPasswordModel() {
    this->initializeModel();
}

OAIResetPasswordModel::~OAIResetPasswordModel() {}

void OAIResetPasswordModel::initializeModel() {

    m_locale_isSet = false;
    m_locale_isValid = false;

    m_user_name_isSet = false;
    m_user_name_isValid = false;
}

void OAIResetPasswordModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResetPasswordModel::fromJsonObject(QJsonObject json) {

    m_locale_isValid = ::OpenAPI::fromJsonValue(m_locale, json[QString("locale")]);
    m_locale_isSet = !json[QString("locale")].isNull() && m_locale_isValid;

    m_user_name_isValid = ::OpenAPI::fromJsonValue(m_user_name, json[QString("userName")]);
    m_user_name_isSet = !json[QString("userName")].isNull() && m_user_name_isValid;
}

QString OAIResetPasswordModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResetPasswordModel::asJsonObject() const {
    QJsonObject obj;
    if (m_locale_isSet) {
        obj.insert(QString("locale"), ::OpenAPI::toJsonValue(m_locale));
    }
    if (m_user_name_isSet) {
        obj.insert(QString("userName"), ::OpenAPI::toJsonValue(m_user_name));
    }
    return obj;
}

QString OAIResetPasswordModel::getLocale() const {
    return m_locale;
}
void OAIResetPasswordModel::setLocale(const QString &locale) {
    m_locale = locale;
    m_locale_isSet = true;
}

bool OAIResetPasswordModel::is_locale_Set() const{
    return m_locale_isSet;
}

bool OAIResetPasswordModel::is_locale_Valid() const{
    return m_locale_isValid;
}

QString OAIResetPasswordModel::getUserName() const {
    return m_user_name;
}
void OAIResetPasswordModel::setUserName(const QString &user_name) {
    m_user_name = user_name;
    m_user_name_isSet = true;
}

bool OAIResetPasswordModel::is_user_name_Set() const{
    return m_user_name_isSet;
}

bool OAIResetPasswordModel::is_user_name_Valid() const{
    return m_user_name_isValid;
}

bool OAIResetPasswordModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_locale_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResetPasswordModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_locale_isValid && m_user_name_isValid && true;
}

} // namespace OpenAPI
