/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIVestingData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIVestingData::OAIIVestingData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIVestingData::OAIIVestingData() {
    this->initializeModel();
}

OAIIVestingData::~OAIIVestingData() {}

void OAIIVestingData::initializeModel() {

    m_date_isSet = false;
    m_date_isValid = false;

    m_percent_vested_isSet = false;
    m_percent_vested_isValid = false;
}

void OAIIVestingData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIVestingData::fromJsonObject(QJsonObject json) {

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("date")]);
    m_date_isSet = !json[QString("date")].isNull() && m_date_isValid;

    m_percent_vested_isValid = ::OpenAPI::fromJsonValue(m_percent_vested, json[QString("percentVested")]);
    m_percent_vested_isSet = !json[QString("percentVested")].isNull() && m_percent_vested_isValid;
}

QString OAIIVestingData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIVestingData::asJsonObject() const {
    QJsonObject obj;
    if (m_date.isSet()) {
        obj.insert(QString("date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_percent_vested.isSet()) {
        obj.insert(QString("percentVested"), ::OpenAPI::toJsonValue(m_percent_vested));
    }
    return obj;
}

OAIDate OAIIVestingData::getDate() const {
    return m_date;
}
void OAIIVestingData::setDate(const OAIDate &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAIIVestingData::is_date_Set() const{
    return m_date_isSet;
}

bool OAIIVestingData::is_date_Valid() const{
    return m_date_isValid;
}

OAIPercent OAIIVestingData::getPercentVested() const {
    return m_percent_vested;
}
void OAIIVestingData::setPercentVested(const OAIPercent &percent_vested) {
    m_percent_vested = percent_vested;
    m_percent_vested_isSet = true;
}

bool OAIIVestingData::is_percent_vested_Set() const{
    return m_percent_vested_isSet;
}

bool OAIIVestingData::is_percent_vested_Valid() const{
    return m_percent_vested_isValid;
}

bool OAIIVestingData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_date.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_percent_vested.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIVestingData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
