/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdvicentNaviPlanRestApiNetWorthModelsLifestyleAssetBaseModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdvicentNaviPlanRestApiNetWorthModelsLifestyleAssetBaseModel::OAIAdvicentNaviPlanRestApiNetWorthModelsLifestyleAssetBaseModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdvicentNaviPlanRestApiNetWorthModelsLifestyleAssetBaseModel::OAIAdvicentNaviPlanRestApiNetWorthModelsLifestyleAssetBaseModel() {
    this->initializeModel();
}

OAIAdvicentNaviPlanRestApiNetWorthModelsLifestyleAssetBaseModel::~OAIAdvicentNaviPlanRestApiNetWorthModelsLifestyleAssetBaseModel() {}

void OAIAdvicentNaviPlanRestApiNetWorthModelsLifestyleAssetBaseModel::initializeModel() {

    m_lifestyle_assets_isSet = false;
    m_lifestyle_assets_isValid = false;
}

void OAIAdvicentNaviPlanRestApiNetWorthModelsLifestyleAssetBaseModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdvicentNaviPlanRestApiNetWorthModelsLifestyleAssetBaseModel::fromJsonObject(QJsonObject json) {

    m_lifestyle_assets_isValid = ::OpenAPI::fromJsonValue(m_lifestyle_assets, json[QString("lifestyleAssets")]);
    m_lifestyle_assets_isSet = !json[QString("lifestyleAssets")].isNull() && m_lifestyle_assets_isValid;
}

QString OAIAdvicentNaviPlanRestApiNetWorthModelsLifestyleAssetBaseModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdvicentNaviPlanRestApiNetWorthModelsLifestyleAssetBaseModel::asJsonObject() const {
    QJsonObject obj;
    if (m_lifestyle_assets.size() > 0) {
        obj.insert(QString("lifestyleAssets"), ::OpenAPI::toJsonValue(m_lifestyle_assets));
    }
    return obj;
}

QList<OAIAdvicentNaviPlanRestApiNetWorthModelsLifestyleAssetModel> OAIAdvicentNaviPlanRestApiNetWorthModelsLifestyleAssetBaseModel::getLifestyleAssets() const {
    return m_lifestyle_assets;
}
void OAIAdvicentNaviPlanRestApiNetWorthModelsLifestyleAssetBaseModel::setLifestyleAssets(const QList<OAIAdvicentNaviPlanRestApiNetWorthModelsLifestyleAssetModel> &lifestyle_assets) {
    m_lifestyle_assets = lifestyle_assets;
    m_lifestyle_assets_isSet = true;
}

bool OAIAdvicentNaviPlanRestApiNetWorthModelsLifestyleAssetBaseModel::is_lifestyle_assets_Set() const{
    return m_lifestyle_assets_isSet;
}

bool OAIAdvicentNaviPlanRestApiNetWorthModelsLifestyleAssetBaseModel::is_lifestyle_assets_Valid() const{
    return m_lifestyle_assets_isValid;
}

bool OAIAdvicentNaviPlanRestApiNetWorthModelsLifestyleAssetBaseModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_lifestyle_assets.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdvicentNaviPlanRestApiNetWorthModelsLifestyleAssetBaseModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
