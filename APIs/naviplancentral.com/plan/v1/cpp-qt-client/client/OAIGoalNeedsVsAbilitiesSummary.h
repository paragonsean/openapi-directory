/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoalNeedsVsAbilitiesSummary.h
 *
 * 
 */

#ifndef OAIGoalNeedsVsAbilitiesSummary_H
#define OAIGoalNeedsVsAbilitiesSummary_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoalNeedsVsAbilitiesSummary : public OAIObject {
public:
    OAIGoalNeedsVsAbilitiesSummary();
    OAIGoalNeedsVsAbilitiesSummary(QString json);
    ~OAIGoalNeedsVsAbilitiesSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAbilities() const;
    void setAbilities(const double &abilities);
    bool is_abilities_Set() const;
    bool is_abilities_Valid() const;

    double getFixedNeeds() const;
    void setFixedNeeds(const double &fixed_needs);
    bool is_fixed_needs_Set() const;
    bool is_fixed_needs_Valid() const;

    double getFixedNeedsWithTaxes() const;
    void setFixedNeedsWithTaxes(const double &fixed_needs_with_taxes);
    bool is_fixed_needs_with_taxes_Set() const;
    bool is_fixed_needs_with_taxes_Valid() const;

    QString getGoalType() const;
    void setGoalType(const QString &goal_type);
    bool is_goal_type_Set() const;
    bool is_goal_type_Valid() const;

    qint32 getIdentifier() const;
    void setIdentifier(const qint32 &identifier);
    bool is_identifier_Set() const;
    bool is_identifier_Valid() const;

    double getTotalNeeds() const;
    void setTotalNeeds(const double &total_needs);
    bool is_total_needs_Set() const;
    bool is_total_needs_Valid() const;

    double getTotalNeedsWithTaxes() const;
    void setTotalNeedsWithTaxes(const double &total_needs_with_taxes);
    bool is_total_needs_with_taxes_Set() const;
    bool is_total_needs_with_taxes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_abilities;
    bool m_abilities_isSet;
    bool m_abilities_isValid;

    double m_fixed_needs;
    bool m_fixed_needs_isSet;
    bool m_fixed_needs_isValid;

    double m_fixed_needs_with_taxes;
    bool m_fixed_needs_with_taxes_isSet;
    bool m_fixed_needs_with_taxes_isValid;

    QString m_goal_type;
    bool m_goal_type_isSet;
    bool m_goal_type_isValid;

    qint32 m_identifier;
    bool m_identifier_isSet;
    bool m_identifier_isValid;

    double m_total_needs;
    bool m_total_needs_isSet;
    bool m_total_needs_isValid;

    double m_total_needs_with_taxes;
    bool m_total_needs_with_taxes_isSet;
    bool m_total_needs_with_taxes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoalNeedsVsAbilitiesSummary)

#endif // OAIGoalNeedsVsAbilitiesSummary_H
