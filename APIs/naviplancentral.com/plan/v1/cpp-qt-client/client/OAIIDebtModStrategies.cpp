/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIDebtModStrategies.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIDebtModStrategies::OAIIDebtModStrategies(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIDebtModStrategies::OAIIDebtModStrategies() {
    this->initializeModel();
}

OAIIDebtModStrategies::~OAIIDebtModStrategies() {}

void OAIIDebtModStrategies::initializeModel() {

    m_lump_sum_debt_mod_strategies_isSet = false;
    m_lump_sum_debt_mod_strategies_isValid = false;

    m_periodic_debt_mod_strategies_isSet = false;
    m_periodic_debt_mod_strategies_isValid = false;
}

void OAIIDebtModStrategies::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIDebtModStrategies::fromJsonObject(QJsonObject json) {

    m_lump_sum_debt_mod_strategies_isValid = ::OpenAPI::fromJsonValue(m_lump_sum_debt_mod_strategies, json[QString("lumpSumDebtModStrategies")]);
    m_lump_sum_debt_mod_strategies_isSet = !json[QString("lumpSumDebtModStrategies")].isNull() && m_lump_sum_debt_mod_strategies_isValid;

    m_periodic_debt_mod_strategies_isValid = ::OpenAPI::fromJsonValue(m_periodic_debt_mod_strategies, json[QString("periodicDebtModStrategies")]);
    m_periodic_debt_mod_strategies_isSet = !json[QString("periodicDebtModStrategies")].isNull() && m_periodic_debt_mod_strategies_isValid;
}

QString OAIIDebtModStrategies::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIDebtModStrategies::asJsonObject() const {
    QJsonObject obj;
    if (m_lump_sum_debt_mod_strategies.size() > 0) {
        obj.insert(QString("lumpSumDebtModStrategies"), ::OpenAPI::toJsonValue(m_lump_sum_debt_mod_strategies));
    }
    if (m_periodic_debt_mod_strategies.size() > 0) {
        obj.insert(QString("periodicDebtModStrategies"), ::OpenAPI::toJsonValue(m_periodic_debt_mod_strategies));
    }
    return obj;
}

QList<OAIILumpSumDebtModStrategy> OAIIDebtModStrategies::getLumpSumDebtModStrategies() const {
    return m_lump_sum_debt_mod_strategies;
}
void OAIIDebtModStrategies::setLumpSumDebtModStrategies(const QList<OAIILumpSumDebtModStrategy> &lump_sum_debt_mod_strategies) {
    m_lump_sum_debt_mod_strategies = lump_sum_debt_mod_strategies;
    m_lump_sum_debt_mod_strategies_isSet = true;
}

bool OAIIDebtModStrategies::is_lump_sum_debt_mod_strategies_Set() const{
    return m_lump_sum_debt_mod_strategies_isSet;
}

bool OAIIDebtModStrategies::is_lump_sum_debt_mod_strategies_Valid() const{
    return m_lump_sum_debt_mod_strategies_isValid;
}

QList<OAIIPeriodicDebtModStrategy> OAIIDebtModStrategies::getPeriodicDebtModStrategies() const {
    return m_periodic_debt_mod_strategies;
}
void OAIIDebtModStrategies::setPeriodicDebtModStrategies(const QList<OAIIPeriodicDebtModStrategy> &periodic_debt_mod_strategies) {
    m_periodic_debt_mod_strategies = periodic_debt_mod_strategies;
    m_periodic_debt_mod_strategies_isSet = true;
}

bool OAIIDebtModStrategies::is_periodic_debt_mod_strategies_Set() const{
    return m_periodic_debt_mod_strategies_isSet;
}

bool OAIIDebtModStrategies::is_periodic_debt_mod_strategies_Valid() const{
    return m_periodic_debt_mod_strategies_isValid;
}

bool OAIIDebtModStrategies::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_lump_sum_debt_mod_strategies.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_periodic_debt_mod_strategies.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIDebtModStrategies::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
