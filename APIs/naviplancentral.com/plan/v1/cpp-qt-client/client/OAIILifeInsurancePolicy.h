/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIILifeInsurancePolicy.h
 *
 * 
 */

#ifndef OAIILifeInsurancePolicy_H
#define OAIILifeInsurancePolicy_H

#include <QJsonObject>

#include "OAICurrency.h"
#include "OAIDate.h"
#include "OAIDescriptiveBoolean.h"
#include "OAIIInsurancePremium.h"
#include "OAITimePeriod.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITimePeriod;
class OAICurrency;
class OAIDate;
class OAIDescriptiveBoolean;
class OAIIInsurancePremium;

class OAIILifeInsurancePolicy : public OAIObject {
public:
    OAIILifeInsurancePolicy();
    OAIILifeInsurancePolicy(QString json);
    ~OAIILifeInsurancePolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBeneficiaryName() const;
    void setBeneficiaryName(const QString &beneficiary_name);
    bool is_beneficiary_name_Set() const;
    bool is_beneficiary_name_Valid() const;

    OAITimePeriod getBenefitPeriod() const;
    void setBenefitPeriod(const OAITimePeriod &benefit_period);
    bool is_benefit_period_Set() const;
    bool is_benefit_period_Valid() const;

    OAICurrency getCashSurrenderValue() const;
    void setCashSurrenderValue(const OAICurrency &cash_surrender_value);
    bool is_cash_surrender_value_Set() const;
    bool is_cash_surrender_value_Valid() const;

    OAIDate getCoverageCeaseDate() const;
    void setCoverageCeaseDate(const OAIDate &coverage_cease_date);
    bool is_coverage_cease_date_Set() const;
    bool is_coverage_cease_date_Valid() const;

    double getDailyBenefitValue() const;
    void setDailyBenefitValue(const double &daily_benefit_value);
    bool is_daily_benefit_value_Set() const;
    bool is_daily_benefit_value_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIDate getEffectiveDate() const;
    void setEffectiveDate(const OAIDate &effective_date);
    bool is_effective_date_Set() const;
    bool is_effective_date_Valid() const;

    QString getFormattedBenefitValue() const;
    void setFormattedBenefitValue(const QString &formatted_benefit_value);
    bool is_formatted_benefit_value_Set() const;
    bool is_formatted_benefit_value_Valid() const;

    QString getFormattedInsuredType() const;
    void setFormattedInsuredType(const QString &formatted_insured_type);
    bool is_formatted_insured_type_Set() const;
    bool is_formatted_insured_type_Valid() const;

    QString getFormattedPolicyType() const;
    void setFormattedPolicyType(const QString &formatted_policy_type);
    bool is_formatted_policy_type_Set() const;
    bool is_formatted_policy_type_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInsured() const;
    void setInsured(const QString &insured);
    bool is_insured_Set() const;
    bool is_insured_Valid() const;

    OAIDescriptiveBoolean getIsCsvPayableWithDeathBenefit() const;
    void setIsCsvPayableWithDeathBenefit(const OAIDescriptiveBoolean &is_csv_payable_with_death_benefit);
    bool is_is_csv_payable_with_death_benefit_Set() const;
    bool is_is_csv_payable_with_death_benefit_Valid() const;

    double getMonthlyBenefitValue() const;
    void setMonthlyBenefitValue(const double &monthly_benefit_value);
    bool is_monthly_benefit_value_Set() const;
    bool is_monthly_benefit_value_Valid() const;

    QString getOwnerName() const;
    void setOwnerName(const QString &owner_name);
    bool is_owner_name_Set() const;
    bool is_owner_name_Valid() const;

    QString getPolicyType() const;
    void setPolicyType(const QString &policy_type);
    bool is_policy_type_Set() const;
    bool is_policy_type_Valid() const;

    OAIIInsurancePremium getPremiumData() const;
    void setPremiumData(const OAIIInsurancePremium &premium_data);
    bool is_premium_data_Set() const;
    bool is_premium_data_Valid() const;

    OAIDescriptiveBoolean getPremiumsWaivedAtDisability() const;
    void setPremiumsWaivedAtDisability(const OAIDescriptiveBoolean &premiums_waived_at_disability);
    bool is_premiums_waived_at_disability_Set() const;
    bool is_premiums_waived_at_disability_Valid() const;

    double getRawBenefitValue() const;
    void setRawBenefitValue(const double &raw_benefit_value);
    bool is_raw_benefit_value_Set() const;
    bool is_raw_benefit_value_Valid() const;

    OAITimePeriod getWaitingPeriod() const;
    void setWaitingPeriod(const OAITimePeriod &waiting_period);
    bool is_waiting_period_Set() const;
    bool is_waiting_period_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_beneficiary_name;
    bool m_beneficiary_name_isSet;
    bool m_beneficiary_name_isValid;

    OAITimePeriod m_benefit_period;
    bool m_benefit_period_isSet;
    bool m_benefit_period_isValid;

    OAICurrency m_cash_surrender_value;
    bool m_cash_surrender_value_isSet;
    bool m_cash_surrender_value_isValid;

    OAIDate m_coverage_cease_date;
    bool m_coverage_cease_date_isSet;
    bool m_coverage_cease_date_isValid;

    double m_daily_benefit_value;
    bool m_daily_benefit_value_isSet;
    bool m_daily_benefit_value_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIDate m_effective_date;
    bool m_effective_date_isSet;
    bool m_effective_date_isValid;

    QString m_formatted_benefit_value;
    bool m_formatted_benefit_value_isSet;
    bool m_formatted_benefit_value_isValid;

    QString m_formatted_insured_type;
    bool m_formatted_insured_type_isSet;
    bool m_formatted_insured_type_isValid;

    QString m_formatted_policy_type;
    bool m_formatted_policy_type_isSet;
    bool m_formatted_policy_type_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_insured;
    bool m_insured_isSet;
    bool m_insured_isValid;

    OAIDescriptiveBoolean m_is_csv_payable_with_death_benefit;
    bool m_is_csv_payable_with_death_benefit_isSet;
    bool m_is_csv_payable_with_death_benefit_isValid;

    double m_monthly_benefit_value;
    bool m_monthly_benefit_value_isSet;
    bool m_monthly_benefit_value_isValid;

    QString m_owner_name;
    bool m_owner_name_isSet;
    bool m_owner_name_isValid;

    QString m_policy_type;
    bool m_policy_type_isSet;
    bool m_policy_type_isValid;

    OAIIInsurancePremium m_premium_data;
    bool m_premium_data_isSet;
    bool m_premium_data_isValid;

    OAIDescriptiveBoolean m_premiums_waived_at_disability;
    bool m_premiums_waived_at_disability_isSet;
    bool m_premiums_waived_at_disability_isValid;

    double m_raw_benefit_value;
    bool m_raw_benefit_value_isSet;
    bool m_raw_benefit_value_isValid;

    OAITimePeriod m_waiting_period;
    bool m_waiting_period_isSet;
    bool m_waiting_period_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIILifeInsurancePolicy)

#endif // OAIILifeInsurancePolicy_H
