/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHouseholdModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHouseholdModel::OAIHouseholdModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHouseholdModel::OAIHouseholdModel() {
    this->initializeModel();
}

OAIHouseholdModel::~OAIHouseholdModel() {}

void OAIHouseholdModel::initializeModel() {

    m_accessible_plans_isSet = false;
    m_accessible_plans_isValid = false;

    m_client_description_isSet = false;
    m_client_description_isValid = false;

    m_household_id_isSet = false;
    m_household_id_isValid = false;
}

void OAIHouseholdModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHouseholdModel::fromJsonObject(QJsonObject json) {

    m_accessible_plans_isValid = ::OpenAPI::fromJsonValue(m_accessible_plans, json[QString("accessiblePlans")]);
    m_accessible_plans_isSet = !json[QString("accessiblePlans")].isNull() && m_accessible_plans_isValid;

    m_client_description_isValid = ::OpenAPI::fromJsonValue(m_client_description, json[QString("clientDescription")]);
    m_client_description_isSet = !json[QString("clientDescription")].isNull() && m_client_description_isValid;

    m_household_id_isValid = ::OpenAPI::fromJsonValue(m_household_id, json[QString("householdId")]);
    m_household_id_isSet = !json[QString("householdId")].isNull() && m_household_id_isValid;
}

QString OAIHouseholdModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHouseholdModel::asJsonObject() const {
    QJsonObject obj;
    if (m_accessible_plans.size() > 0) {
        obj.insert(QString("accessiblePlans"), ::OpenAPI::toJsonValue(m_accessible_plans));
    }
    if (m_client_description_isSet) {
        obj.insert(QString("clientDescription"), ::OpenAPI::toJsonValue(m_client_description));
    }
    if (m_household_id_isSet) {
        obj.insert(QString("householdId"), ::OpenAPI::toJsonValue(m_household_id));
    }
    return obj;
}

QList<OAIPublishedPlanModel> OAIHouseholdModel::getAccessiblePlans() const {
    return m_accessible_plans;
}
void OAIHouseholdModel::setAccessiblePlans(const QList<OAIPublishedPlanModel> &accessible_plans) {
    m_accessible_plans = accessible_plans;
    m_accessible_plans_isSet = true;
}

bool OAIHouseholdModel::is_accessible_plans_Set() const{
    return m_accessible_plans_isSet;
}

bool OAIHouseholdModel::is_accessible_plans_Valid() const{
    return m_accessible_plans_isValid;
}

QString OAIHouseholdModel::getClientDescription() const {
    return m_client_description;
}
void OAIHouseholdModel::setClientDescription(const QString &client_description) {
    m_client_description = client_description;
    m_client_description_isSet = true;
}

bool OAIHouseholdModel::is_client_description_Set() const{
    return m_client_description_isSet;
}

bool OAIHouseholdModel::is_client_description_Valid() const{
    return m_client_description_isValid;
}

qint32 OAIHouseholdModel::getHouseholdId() const {
    return m_household_id;
}
void OAIHouseholdModel::setHouseholdId(const qint32 &household_id) {
    m_household_id = household_id;
    m_household_id_isSet = true;
}

bool OAIHouseholdModel::is_household_id_Set() const{
    return m_household_id_isSet;
}

bool OAIHouseholdModel::is_household_id_Valid() const{
    return m_household_id_isValid;
}

bool OAIHouseholdModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_accessible_plans.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_household_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHouseholdModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
