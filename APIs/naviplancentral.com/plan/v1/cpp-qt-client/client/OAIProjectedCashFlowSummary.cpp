/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectedCashFlowSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectedCashFlowSummary::OAIProjectedCashFlowSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectedCashFlowSummary::OAIProjectedCashFlowSummary() {
    this->initializeModel();
}

OAIProjectedCashFlowSummary::~OAIProjectedCashFlowSummary() {}

void OAIProjectedCashFlowSummary::initializeModel() {

    m_cash_flow_isSet = false;
    m_cash_flow_isValid = false;

    m_client_age_isSet = false;
    m_client_age_isValid = false;

    m_co_client_age_isSet = false;
    m_co_client_age_isValid = false;

    m_year_isSet = false;
    m_year_isValid = false;
}

void OAIProjectedCashFlowSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectedCashFlowSummary::fromJsonObject(QJsonObject json) {

    m_cash_flow_isValid = ::OpenAPI::fromJsonValue(m_cash_flow, json[QString("cashFlow")]);
    m_cash_flow_isSet = !json[QString("cashFlow")].isNull() && m_cash_flow_isValid;

    m_client_age_isValid = ::OpenAPI::fromJsonValue(m_client_age, json[QString("clientAge")]);
    m_client_age_isSet = !json[QString("clientAge")].isNull() && m_client_age_isValid;

    m_co_client_age_isValid = ::OpenAPI::fromJsonValue(m_co_client_age, json[QString("coClientAge")]);
    m_co_client_age_isSet = !json[QString("coClientAge")].isNull() && m_co_client_age_isValid;

    m_year_isValid = ::OpenAPI::fromJsonValue(m_year, json[QString("year")]);
    m_year_isSet = !json[QString("year")].isNull() && m_year_isValid;
}

QString OAIProjectedCashFlowSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectedCashFlowSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_cash_flow.isSet()) {
        obj.insert(QString("cashFlow"), ::OpenAPI::toJsonValue(m_cash_flow));
    }
    if (m_client_age_isSet) {
        obj.insert(QString("clientAge"), ::OpenAPI::toJsonValue(m_client_age));
    }
    if (m_co_client_age_isSet) {
        obj.insert(QString("coClientAge"), ::OpenAPI::toJsonValue(m_co_client_age));
    }
    if (m_year_isSet) {
        obj.insert(QString("year"), ::OpenAPI::toJsonValue(m_year));
    }
    return obj;
}

OAIICashFlowByOwner OAIProjectedCashFlowSummary::getCashFlow() const {
    return m_cash_flow;
}
void OAIProjectedCashFlowSummary::setCashFlow(const OAIICashFlowByOwner &cash_flow) {
    m_cash_flow = cash_flow;
    m_cash_flow_isSet = true;
}

bool OAIProjectedCashFlowSummary::is_cash_flow_Set() const{
    return m_cash_flow_isSet;
}

bool OAIProjectedCashFlowSummary::is_cash_flow_Valid() const{
    return m_cash_flow_isValid;
}

qint32 OAIProjectedCashFlowSummary::getClientAge() const {
    return m_client_age;
}
void OAIProjectedCashFlowSummary::setClientAge(const qint32 &client_age) {
    m_client_age = client_age;
    m_client_age_isSet = true;
}

bool OAIProjectedCashFlowSummary::is_client_age_Set() const{
    return m_client_age_isSet;
}

bool OAIProjectedCashFlowSummary::is_client_age_Valid() const{
    return m_client_age_isValid;
}

qint32 OAIProjectedCashFlowSummary::getCoClientAge() const {
    return m_co_client_age;
}
void OAIProjectedCashFlowSummary::setCoClientAge(const qint32 &co_client_age) {
    m_co_client_age = co_client_age;
    m_co_client_age_isSet = true;
}

bool OAIProjectedCashFlowSummary::is_co_client_age_Set() const{
    return m_co_client_age_isSet;
}

bool OAIProjectedCashFlowSummary::is_co_client_age_Valid() const{
    return m_co_client_age_isValid;
}

qint32 OAIProjectedCashFlowSummary::getYear() const {
    return m_year;
}
void OAIProjectedCashFlowSummary::setYear(const qint32 &year) {
    m_year = year;
    m_year_isSet = true;
}

bool OAIProjectedCashFlowSummary::is_year_Set() const{
    return m_year_isSet;
}

bool OAIProjectedCashFlowSummary::is_year_Valid() const{
    return m_year_isValid;
}

bool OAIProjectedCashFlowSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cash_flow.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_age_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_co_client_age_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_year_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectedCashFlowSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
