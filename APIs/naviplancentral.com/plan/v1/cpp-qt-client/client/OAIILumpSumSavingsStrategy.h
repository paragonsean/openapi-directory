/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIILumpSumSavingsStrategy.h
 *
 * 
 */

#ifndef OAIILumpSumSavingsStrategy_H
#define OAIILumpSumSavingsStrategy_H

#include <QJsonObject>

#include "OAIDate.h"
#include "OAIFormattedEnumType_SavingsStrategyType.h"
#include "OAIGrowthRateValues.h"
#include "OAIPercentOr_Currency.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPercentOr_Currency;
class OAIGrowthRateValues;
class OAIDate;
class OAIFormattedEnumType_SavingsStrategyType;

class OAIILumpSumSavingsStrategy : public OAIObject {
public:
    OAIILumpSumSavingsStrategy();
    OAIILumpSumSavingsStrategy(QString json);
    ~OAIILumpSumSavingsStrategy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPercentOr_Currency getAmountOrPercentOfSalary() const;
    void setAmountOrPercentOfSalary(const OAIPercentOr_Currency &amount_or_percent_of_salary);
    bool is_amount_or_percent_of_salary_Set() const;
    bool is_amount_or_percent_of_salary_Valid() const;

    QString getFormattedSavingsTypeWithDash() const;
    void setFormattedSavingsTypeWithDash(const QString &formatted_savings_type_with_dash);
    bool is_formatted_savings_type_with_dash_Set() const;
    bool is_formatted_savings_type_with_dash_Valid() const;

    OAIGrowthRateValues getIndexRate() const;
    void setIndexRate(const OAIGrowthRateValues &index_rate);
    bool is_index_rate_Set() const;
    bool is_index_rate_Valid() const;

    OAIDate getSavingsDate() const;
    void setSavingsDate(const OAIDate &savings_date);
    bool is_savings_date_Set() const;
    bool is_savings_date_Valid() const;

    OAIFormattedEnumType_SavingsStrategyType getSavingsType() const;
    void setSavingsType(const OAIFormattedEnumType_SavingsStrategyType &savings_type);
    bool is_savings_type_Set() const;
    bool is_savings_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPercentOr_Currency m_amount_or_percent_of_salary;
    bool m_amount_or_percent_of_salary_isSet;
    bool m_amount_or_percent_of_salary_isValid;

    QString m_formatted_savings_type_with_dash;
    bool m_formatted_savings_type_with_dash_isSet;
    bool m_formatted_savings_type_with_dash_isValid;

    OAIGrowthRateValues m_index_rate;
    bool m_index_rate_isSet;
    bool m_index_rate_isValid;

    OAIDate m_savings_date;
    bool m_savings_date_isSet;
    bool m_savings_date_isValid;

    OAIFormattedEnumType_SavingsStrategyType m_savings_type;
    bool m_savings_type_isSet;
    bool m_savings_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIILumpSumSavingsStrategy)

#endif // OAIILumpSumSavingsStrategy_H
