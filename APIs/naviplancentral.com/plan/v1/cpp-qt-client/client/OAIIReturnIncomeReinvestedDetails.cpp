/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIReturnIncomeReinvestedDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIReturnIncomeReinvestedDetails::OAIIReturnIncomeReinvestedDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIReturnIncomeReinvestedDetails::OAIIReturnIncomeReinvestedDetails() {
    this->initializeModel();
}

OAIIReturnIncomeReinvestedDetails::~OAIIReturnIncomeReinvestedDetails() {}

void OAIIReturnIncomeReinvestedDetails::initializeModel() {

    m_during_pre_retirement_period_isSet = false;
    m_during_pre_retirement_period_isValid = false;

    m_during_retirement_period_isSet = false;
    m_during_retirement_period_isValid = false;
}

void OAIIReturnIncomeReinvestedDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIReturnIncomeReinvestedDetails::fromJsonObject(QJsonObject json) {

    m_during_pre_retirement_period_isValid = ::OpenAPI::fromJsonValue(m_during_pre_retirement_period, json[QString("duringPreRetirementPeriod")]);
    m_during_pre_retirement_period_isSet = !json[QString("duringPreRetirementPeriod")].isNull() && m_during_pre_retirement_period_isValid;

    m_during_retirement_period_isValid = ::OpenAPI::fromJsonValue(m_during_retirement_period, json[QString("duringRetirementPeriod")]);
    m_during_retirement_period_isSet = !json[QString("duringRetirementPeriod")].isNull() && m_during_retirement_period_isValid;
}

QString OAIIReturnIncomeReinvestedDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIReturnIncomeReinvestedDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_during_pre_retirement_period.isSet()) {
        obj.insert(QString("duringPreRetirementPeriod"), ::OpenAPI::toJsonValue(m_during_pre_retirement_period));
    }
    if (m_during_retirement_period.isSet()) {
        obj.insert(QString("duringRetirementPeriod"), ::OpenAPI::toJsonValue(m_during_retirement_period));
    }
    return obj;
}

OAIDescriptiveBoolean OAIIReturnIncomeReinvestedDetails::getDuringPreRetirementPeriod() const {
    return m_during_pre_retirement_period;
}
void OAIIReturnIncomeReinvestedDetails::setDuringPreRetirementPeriod(const OAIDescriptiveBoolean &during_pre_retirement_period) {
    m_during_pre_retirement_period = during_pre_retirement_period;
    m_during_pre_retirement_period_isSet = true;
}

bool OAIIReturnIncomeReinvestedDetails::is_during_pre_retirement_period_Set() const{
    return m_during_pre_retirement_period_isSet;
}

bool OAIIReturnIncomeReinvestedDetails::is_during_pre_retirement_period_Valid() const{
    return m_during_pre_retirement_period_isValid;
}

OAIDescriptiveBoolean OAIIReturnIncomeReinvestedDetails::getDuringRetirementPeriod() const {
    return m_during_retirement_period;
}
void OAIIReturnIncomeReinvestedDetails::setDuringRetirementPeriod(const OAIDescriptiveBoolean &during_retirement_period) {
    m_during_retirement_period = during_retirement_period;
    m_during_retirement_period_isSet = true;
}

bool OAIIReturnIncomeReinvestedDetails::is_during_retirement_period_Set() const{
    return m_during_retirement_period_isSet;
}

bool OAIIReturnIncomeReinvestedDetails::is_during_retirement_period_Valid() const{
    return m_during_retirement_period_isValid;
}

bool OAIIReturnIncomeReinvestedDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_during_pre_retirement_period.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_during_retirement_period.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIReturnIncomeReinvestedDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
