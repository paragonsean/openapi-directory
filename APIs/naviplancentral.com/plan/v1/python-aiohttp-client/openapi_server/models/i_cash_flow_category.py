# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency import Currency
from openapi_server.models.i_cash_flow_item import ICashFlowItem
from openapi_server import util


class ICashFlowCategory(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_itemized_enabled: bool=None, itemized: List[ICashFlowItem]=None, total: Currency=None):
        """ICashFlowCategory - a model defined in OpenAPI

        :param is_itemized_enabled: The is_itemized_enabled of this ICashFlowCategory.
        :param itemized: The itemized of this ICashFlowCategory.
        :param total: The total of this ICashFlowCategory.
        """
        self.openapi_types = {
            'is_itemized_enabled': bool,
            'itemized': List[ICashFlowItem],
            'total': Currency
        }

        self.attribute_map = {
            'is_itemized_enabled': 'isItemizedEnabled',
            'itemized': 'itemized',
            'total': 'total'
        }

        self._is_itemized_enabled = is_itemized_enabled
        self._itemized = itemized
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ICashFlowCategory':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ICashFlowCategory of this ICashFlowCategory.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_itemized_enabled(self):
        """Gets the is_itemized_enabled of this ICashFlowCategory.


        :return: The is_itemized_enabled of this ICashFlowCategory.
        :rtype: bool
        """
        return self._is_itemized_enabled

    @is_itemized_enabled.setter
    def is_itemized_enabled(self, is_itemized_enabled):
        """Sets the is_itemized_enabled of this ICashFlowCategory.


        :param is_itemized_enabled: The is_itemized_enabled of this ICashFlowCategory.
        :type is_itemized_enabled: bool
        """

        self._is_itemized_enabled = is_itemized_enabled

    @property
    def itemized(self):
        """Gets the itemized of this ICashFlowCategory.


        :return: The itemized of this ICashFlowCategory.
        :rtype: List[ICashFlowItem]
        """
        return self._itemized

    @itemized.setter
    def itemized(self, itemized):
        """Sets the itemized of this ICashFlowCategory.


        :param itemized: The itemized of this ICashFlowCategory.
        :type itemized: List[ICashFlowItem]
        """

        self._itemized = itemized

    @property
    def total(self):
        """Gets the total of this ICashFlowCategory.


        :return: The total of this ICashFlowCategory.
        :rtype: Currency
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this ICashFlowCategory.


        :param total: The total of this ICashFlowCategory.
        :type total: Currency
        """

        self._total = total
