# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.advicent_navi_plan_rest_api_models_owner_model import AdvicentNaviPlanRestApiModelsOwnerModel
from openapi_server import util


class AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: float=None, coverage_percentage: float=None, description: str=None, end_date: datetime=None, id: int=None, inflation_rate: float=None, owners: List[AdvicentNaviPlanRestApiModelsOwnerModel]=None, start_date: datetime=None, type: str=None):
        """AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase - a model defined in OpenAPI

        :param amount: The amount of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        :param coverage_percentage: The coverage_percentage of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        :param description: The description of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        :param end_date: The end_date of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        :param id: The id of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        :param inflation_rate: The inflation_rate of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        :param owners: The owners of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        :param start_date: The start_date of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        :param type: The type of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        """
        self.openapi_types = {
            'amount': float,
            'coverage_percentage': float,
            'description': str,
            'end_date': datetime,
            'id': int,
            'inflation_rate': float,
            'owners': List[AdvicentNaviPlanRestApiModelsOwnerModel],
            'start_date': datetime,
            'type': str
        }

        self.attribute_map = {
            'amount': 'amount',
            'coverage_percentage': 'coveragePercentage',
            'description': 'description',
            'end_date': 'endDate',
            'id': 'id',
            'inflation_rate': 'inflationRate',
            'owners': 'owners',
            'start_date': 'startDate',
            'type': 'type'
        }

        self._amount = amount
        self._coverage_percentage = coverage_percentage
        self._description = description
        self._end_date = end_date
        self._id = id
        self._inflation_rate = inflation_rate
        self._owners = owners
        self._start_date = start_date
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.


        :return: The amount of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.


        :param amount: The amount of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        :type amount: float
        """

        self._amount = amount

    @property
    def coverage_percentage(self):
        """Gets the coverage_percentage of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.


        :return: The coverage_percentage of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        :rtype: float
        """
        return self._coverage_percentage

    @coverage_percentage.setter
    def coverage_percentage(self, coverage_percentage):
        """Sets the coverage_percentage of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.


        :param coverage_percentage: The coverage_percentage of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        :type coverage_percentage: float
        """

        self._coverage_percentage = coverage_percentage

    @property
    def description(self):
        """Gets the description of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.


        :return: The description of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.


        :param description: The description of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        :type description: str
        """

        self._description = description

    @property
    def end_date(self):
        """Gets the end_date of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.


        :return: The end_date of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.


        :param end_date: The end_date of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        :type end_date: datetime
        """

        self._end_date = end_date

    @property
    def id(self):
        """Gets the id of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.


        :return: The id of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.


        :param id: The id of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        :type id: int
        """

        self._id = id

    @property
    def inflation_rate(self):
        """Gets the inflation_rate of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.


        :return: The inflation_rate of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        :rtype: float
        """
        return self._inflation_rate

    @inflation_rate.setter
    def inflation_rate(self, inflation_rate):
        """Sets the inflation_rate of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.


        :param inflation_rate: The inflation_rate of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        :type inflation_rate: float
        """

        self._inflation_rate = inflation_rate

    @property
    def owners(self):
        """Gets the owners of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.


        :return: The owners of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        :rtype: List[AdvicentNaviPlanRestApiModelsOwnerModel]
        """
        return self._owners

    @owners.setter
    def owners(self, owners):
        """Sets the owners of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.


        :param owners: The owners of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        :type owners: List[AdvicentNaviPlanRestApiModelsOwnerModel]
        """

        self._owners = owners

    @property
    def start_date(self):
        """Gets the start_date of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.


        :return: The start_date of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.


        :param start_date: The start_date of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        :type start_date: datetime
        """

        self._start_date = start_date

    @property
    def type(self):
        """Gets the type of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.


        :return: The type of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.


        :param type: The type of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.
        :type type: str
        """

        self._type = type
