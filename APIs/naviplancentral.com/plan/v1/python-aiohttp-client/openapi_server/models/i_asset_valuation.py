# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency import Currency
from openapi_server.models.model_date import ModelDate
from openapi_server import util


class IAssetValuation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cost_basis: Currency=None, market_value: Currency=None, valuation_date: ModelDate=None):
        """IAssetValuation - a model defined in OpenAPI

        :param cost_basis: The cost_basis of this IAssetValuation.
        :param market_value: The market_value of this IAssetValuation.
        :param valuation_date: The valuation_date of this IAssetValuation.
        """
        self.openapi_types = {
            'cost_basis': Currency,
            'market_value': Currency,
            'valuation_date': ModelDate
        }

        self.attribute_map = {
            'cost_basis': 'costBasis',
            'market_value': 'marketValue',
            'valuation_date': 'valuationDate'
        }

        self._cost_basis = cost_basis
        self._market_value = market_value
        self._valuation_date = valuation_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IAssetValuation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IAssetValuation of this IAssetValuation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cost_basis(self):
        """Gets the cost_basis of this IAssetValuation.


        :return: The cost_basis of this IAssetValuation.
        :rtype: Currency
        """
        return self._cost_basis

    @cost_basis.setter
    def cost_basis(self, cost_basis):
        """Sets the cost_basis of this IAssetValuation.


        :param cost_basis: The cost_basis of this IAssetValuation.
        :type cost_basis: Currency
        """

        self._cost_basis = cost_basis

    @property
    def market_value(self):
        """Gets the market_value of this IAssetValuation.


        :return: The market_value of this IAssetValuation.
        :rtype: Currency
        """
        return self._market_value

    @market_value.setter
    def market_value(self, market_value):
        """Sets the market_value of this IAssetValuation.


        :param market_value: The market_value of this IAssetValuation.
        :type market_value: Currency
        """

        self._market_value = market_value

    @property
    def valuation_date(self):
        """Gets the valuation_date of this IAssetValuation.


        :return: The valuation_date of this IAssetValuation.
        :rtype: ModelDate
        """
        return self._valuation_date

    @valuation_date.setter
    def valuation_date(self, valuation_date):
        """Sets the valuation_date of this IAssetValuation.


        :param valuation_date: The valuation_date of this IAssetValuation.
        :type valuation_date: ModelDate
        """

        self._valuation_date = valuation_date
