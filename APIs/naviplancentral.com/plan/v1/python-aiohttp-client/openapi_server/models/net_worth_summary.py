# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NetWorthSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, total_assets: float=None, total_liabilities: float=None, total_net_worth: float=None):
        """NetWorthSummary - a model defined in OpenAPI

        :param total_assets: The total_assets of this NetWorthSummary.
        :param total_liabilities: The total_liabilities of this NetWorthSummary.
        :param total_net_worth: The total_net_worth of this NetWorthSummary.
        """
        self.openapi_types = {
            'total_assets': float,
            'total_liabilities': float,
            'total_net_worth': float
        }

        self.attribute_map = {
            'total_assets': 'totalAssets',
            'total_liabilities': 'totalLiabilities',
            'total_net_worth': 'totalNetWorth'
        }

        self._total_assets = total_assets
        self._total_liabilities = total_liabilities
        self._total_net_worth = total_net_worth

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetWorthSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NetWorthSummary of this NetWorthSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total_assets(self):
        """Gets the total_assets of this NetWorthSummary.


        :return: The total_assets of this NetWorthSummary.
        :rtype: float
        """
        return self._total_assets

    @total_assets.setter
    def total_assets(self, total_assets):
        """Sets the total_assets of this NetWorthSummary.


        :param total_assets: The total_assets of this NetWorthSummary.
        :type total_assets: float
        """

        self._total_assets = total_assets

    @property
    def total_liabilities(self):
        """Gets the total_liabilities of this NetWorthSummary.


        :return: The total_liabilities of this NetWorthSummary.
        :rtype: float
        """
        return self._total_liabilities

    @total_liabilities.setter
    def total_liabilities(self, total_liabilities):
        """Sets the total_liabilities of this NetWorthSummary.


        :param total_liabilities: The total_liabilities of this NetWorthSummary.
        :type total_liabilities: float
        """

        self._total_liabilities = total_liabilities

    @property
    def total_net_worth(self):
        """Gets the total_net_worth of this NetWorthSummary.


        :return: The total_net_worth of this NetWorthSummary.
        :rtype: float
        """
        return self._total_net_worth

    @total_net_worth.setter
    def total_net_worth(self, total_net_worth):
        """Sets the total_net_worth of this NetWorthSummary.


        :param total_net_worth: The total_net_worth of this NetWorthSummary.
        :type total_net_worth: float
        """

        self._total_net_worth = total_net_worth
