# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.object_link import ObjectLink
from openapi_server.models.projected_annual_summary import ProjectedAnnualSummary
from openapi_server import util


class ProjectedAnnualSummaryModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annual_summary: ProjectedAnnualSummary=None, links: List[ObjectLink]=None):
        """ProjectedAnnualSummaryModel - a model defined in OpenAPI

        :param annual_summary: The annual_summary of this ProjectedAnnualSummaryModel.
        :param links: The links of this ProjectedAnnualSummaryModel.
        """
        self.openapi_types = {
            'annual_summary': ProjectedAnnualSummary,
            'links': List[ObjectLink]
        }

        self.attribute_map = {
            'annual_summary': 'annualSummary',
            'links': 'links'
        }

        self._annual_summary = annual_summary
        self._links = links

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectedAnnualSummaryModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectedAnnualSummaryModel of this ProjectedAnnualSummaryModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annual_summary(self):
        """Gets the annual_summary of this ProjectedAnnualSummaryModel.


        :return: The annual_summary of this ProjectedAnnualSummaryModel.
        :rtype: ProjectedAnnualSummary
        """
        return self._annual_summary

    @annual_summary.setter
    def annual_summary(self, annual_summary):
        """Sets the annual_summary of this ProjectedAnnualSummaryModel.


        :param annual_summary: The annual_summary of this ProjectedAnnualSummaryModel.
        :type annual_summary: ProjectedAnnualSummary
        """

        self._annual_summary = annual_summary

    @property
    def links(self):
        """Gets the links of this ProjectedAnnualSummaryModel.


        :return: The links of this ProjectedAnnualSummaryModel.
        :rtype: List[ObjectLink]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this ProjectedAnnualSummaryModel.


        :param links: The links of this ProjectedAnnualSummaryModel.
        :type links: List[ObjectLink]
        """

        self._links = links
