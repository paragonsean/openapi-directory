# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency import Currency
from openapi_server.models.formatted_enum_type_inter_company_dividend_type import FormattedEnumTypeInterCompanyDividendType
from openapi_server.models.i_activity_data import IActivityData
from openapi_server import util


class IInterCompanyDividendReceived(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity_data: IActivityData=None, dividend_type: FormattedEnumTypeInterCompanyDividendType=None, general_rate_of_income_pool_amount: Currency=None, received_from: str=None):
        """IInterCompanyDividendReceived - a model defined in OpenAPI

        :param activity_data: The activity_data of this IInterCompanyDividendReceived.
        :param dividend_type: The dividend_type of this IInterCompanyDividendReceived.
        :param general_rate_of_income_pool_amount: The general_rate_of_income_pool_amount of this IInterCompanyDividendReceived.
        :param received_from: The received_from of this IInterCompanyDividendReceived.
        """
        self.openapi_types = {
            'activity_data': IActivityData,
            'dividend_type': FormattedEnumTypeInterCompanyDividendType,
            'general_rate_of_income_pool_amount': Currency,
            'received_from': str
        }

        self.attribute_map = {
            'activity_data': 'activityData',
            'dividend_type': 'dividendType',
            'general_rate_of_income_pool_amount': 'generalRateOfIncomePoolAmount',
            'received_from': 'receivedFrom'
        }

        self._activity_data = activity_data
        self._dividend_type = dividend_type
        self._general_rate_of_income_pool_amount = general_rate_of_income_pool_amount
        self._received_from = received_from

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IInterCompanyDividendReceived':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IInterCompanyDividendReceived of this IInterCompanyDividendReceived.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity_data(self):
        """Gets the activity_data of this IInterCompanyDividendReceived.


        :return: The activity_data of this IInterCompanyDividendReceived.
        :rtype: IActivityData
        """
        return self._activity_data

    @activity_data.setter
    def activity_data(self, activity_data):
        """Sets the activity_data of this IInterCompanyDividendReceived.


        :param activity_data: The activity_data of this IInterCompanyDividendReceived.
        :type activity_data: IActivityData
        """

        self._activity_data = activity_data

    @property
    def dividend_type(self):
        """Gets the dividend_type of this IInterCompanyDividendReceived.


        :return: The dividend_type of this IInterCompanyDividendReceived.
        :rtype: FormattedEnumTypeInterCompanyDividendType
        """
        return self._dividend_type

    @dividend_type.setter
    def dividend_type(self, dividend_type):
        """Sets the dividend_type of this IInterCompanyDividendReceived.


        :param dividend_type: The dividend_type of this IInterCompanyDividendReceived.
        :type dividend_type: FormattedEnumTypeInterCompanyDividendType
        """

        self._dividend_type = dividend_type

    @property
    def general_rate_of_income_pool_amount(self):
        """Gets the general_rate_of_income_pool_amount of this IInterCompanyDividendReceived.


        :return: The general_rate_of_income_pool_amount of this IInterCompanyDividendReceived.
        :rtype: Currency
        """
        return self._general_rate_of_income_pool_amount

    @general_rate_of_income_pool_amount.setter
    def general_rate_of_income_pool_amount(self, general_rate_of_income_pool_amount):
        """Sets the general_rate_of_income_pool_amount of this IInterCompanyDividendReceived.


        :param general_rate_of_income_pool_amount: The general_rate_of_income_pool_amount of this IInterCompanyDividendReceived.
        :type general_rate_of_income_pool_amount: Currency
        """

        self._general_rate_of_income_pool_amount = general_rate_of_income_pool_amount

    @property
    def received_from(self):
        """Gets the received_from of this IInterCompanyDividendReceived.


        :return: The received_from of this IInterCompanyDividendReceived.
        :rtype: str
        """
        return self._received_from

    @received_from.setter
    def received_from(self, received_from):
        """Sets the received_from of this IInterCompanyDividendReceived.


        :param received_from: The received_from of this IInterCompanyDividendReceived.
        :type received_from: str
        """

        self._received_from = received_from
