# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.advicent_navi_plan_rest_api_models_owner_model import AdvicentNaviPlanRestApiModelsOwnerModel
from openapi_server import util


class AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, end_date: datetime=None, id: int=None, legacy_id: str=None, outstanding_principal: float=None, outstanding_principal_as_of_date: datetime=None, owner: AdvicentNaviPlanRestApiModelsOwnerModel=None, start_date: datetime=None, type: int=None):
        """AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel - a model defined in OpenAPI

        :param description: The description of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        :param end_date: The end_date of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        :param id: The id of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        :param legacy_id: The legacy_id of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        :param outstanding_principal: The outstanding_principal of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        :param outstanding_principal_as_of_date: The outstanding_principal_as_of_date of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        :param owner: The owner of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        :param start_date: The start_date of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        :param type: The type of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        """
        self.openapi_types = {
            'description': str,
            'end_date': datetime,
            'id': int,
            'legacy_id': str,
            'outstanding_principal': float,
            'outstanding_principal_as_of_date': datetime,
            'owner': AdvicentNaviPlanRestApiModelsOwnerModel,
            'start_date': datetime,
            'type': int
        }

        self.attribute_map = {
            'description': 'description',
            'end_date': 'endDate',
            'id': 'id',
            'legacy_id': 'legacyId',
            'outstanding_principal': 'outstandingPrincipal',
            'outstanding_principal_as_of_date': 'outstandingPrincipalAsOfDate',
            'owner': 'owner',
            'start_date': 'startDate',
            'type': 'type'
        }

        self._description = description
        self._end_date = end_date
        self._id = id
        self._legacy_id = legacy_id
        self._outstanding_principal = outstanding_principal
        self._outstanding_principal_as_of_date = outstanding_principal_as_of_date
        self._owner = owner
        self._start_date = start_date
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.


        :return: The description of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.


        :param description: The description of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        :type description: str
        """

        self._description = description

    @property
    def end_date(self):
        """Gets the end_date of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.


        :return: The end_date of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.


        :param end_date: The end_date of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        :type end_date: datetime
        """

        self._end_date = end_date

    @property
    def id(self):
        """Gets the id of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.


        :return: The id of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.


        :param id: The id of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        :type id: int
        """

        self._id = id

    @property
    def legacy_id(self):
        """Gets the legacy_id of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.


        :return: The legacy_id of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        :rtype: str
        """
        return self._legacy_id

    @legacy_id.setter
    def legacy_id(self, legacy_id):
        """Sets the legacy_id of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.


        :param legacy_id: The legacy_id of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        :type legacy_id: str
        """

        self._legacy_id = legacy_id

    @property
    def outstanding_principal(self):
        """Gets the outstanding_principal of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.


        :return: The outstanding_principal of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        :rtype: float
        """
        return self._outstanding_principal

    @outstanding_principal.setter
    def outstanding_principal(self, outstanding_principal):
        """Sets the outstanding_principal of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.


        :param outstanding_principal: The outstanding_principal of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        :type outstanding_principal: float
        """

        self._outstanding_principal = outstanding_principal

    @property
    def outstanding_principal_as_of_date(self):
        """Gets the outstanding_principal_as_of_date of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.


        :return: The outstanding_principal_as_of_date of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        :rtype: datetime
        """
        return self._outstanding_principal_as_of_date

    @outstanding_principal_as_of_date.setter
    def outstanding_principal_as_of_date(self, outstanding_principal_as_of_date):
        """Sets the outstanding_principal_as_of_date of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.


        :param outstanding_principal_as_of_date: The outstanding_principal_as_of_date of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        :type outstanding_principal_as_of_date: datetime
        """

        self._outstanding_principal_as_of_date = outstanding_principal_as_of_date

    @property
    def owner(self):
        """Gets the owner of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.


        :return: The owner of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        :rtype: AdvicentNaviPlanRestApiModelsOwnerModel
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.


        :param owner: The owner of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        :type owner: AdvicentNaviPlanRestApiModelsOwnerModel
        """

        self._owner = owner

    @property
    def start_date(self):
        """Gets the start_date of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.


        :return: The start_date of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.


        :param start_date: The start_date of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        :type start_date: datetime
        """

        self._start_date = start_date

    @property
    def type(self):
        """Gets the type of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.


        :return: The type of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        :rtype: int
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.


        :param type: The type of this AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel.
        :type type: int
        """

        self._type = type
