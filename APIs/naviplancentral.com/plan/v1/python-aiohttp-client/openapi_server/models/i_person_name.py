# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IPersonName(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first_name: str=None, formal: str=None, full: str=None, last_name: str=None, middle: str=None, title: str=None):
        """IPersonName - a model defined in OpenAPI

        :param first_name: The first_name of this IPersonName.
        :param formal: The formal of this IPersonName.
        :param full: The full of this IPersonName.
        :param last_name: The last_name of this IPersonName.
        :param middle: The middle of this IPersonName.
        :param title: The title of this IPersonName.
        """
        self.openapi_types = {
            'first_name': str,
            'formal': str,
            'full': str,
            'last_name': str,
            'middle': str,
            'title': str
        }

        self.attribute_map = {
            'first_name': 'firstName',
            'formal': 'formal',
            'full': 'full',
            'last_name': 'lastName',
            'middle': 'middle',
            'title': 'title'
        }

        self._first_name = first_name
        self._formal = formal
        self._full = full
        self._last_name = last_name
        self._middle = middle
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IPersonName':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IPersonName of this IPersonName.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first_name(self):
        """Gets the first_name of this IPersonName.


        :return: The first_name of this IPersonName.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this IPersonName.


        :param first_name: The first_name of this IPersonName.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def formal(self):
        """Gets the formal of this IPersonName.


        :return: The formal of this IPersonName.
        :rtype: str
        """
        return self._formal

    @formal.setter
    def formal(self, formal):
        """Sets the formal of this IPersonName.


        :param formal: The formal of this IPersonName.
        :type formal: str
        """

        self._formal = formal

    @property
    def full(self):
        """Gets the full of this IPersonName.


        :return: The full of this IPersonName.
        :rtype: str
        """
        return self._full

    @full.setter
    def full(self, full):
        """Sets the full of this IPersonName.


        :param full: The full of this IPersonName.
        :type full: str
        """

        self._full = full

    @property
    def last_name(self):
        """Gets the last_name of this IPersonName.


        :return: The last_name of this IPersonName.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this IPersonName.


        :param last_name: The last_name of this IPersonName.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def middle(self):
        """Gets the middle of this IPersonName.


        :return: The middle of this IPersonName.
        :rtype: str
        """
        return self._middle

    @middle.setter
    def middle(self, middle):
        """Sets the middle of this IPersonName.


        :param middle: The middle of this IPersonName.
        :type middle: str
        """

        self._middle = middle

    @property
    def title(self):
        """Gets the title of this IPersonName.


        :return: The title of this IPersonName.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this IPersonName.


        :param title: The title of this IPersonName.
        :type title: str
        """

        self._title = title
