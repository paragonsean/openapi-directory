# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.i_lump_sum_savings_strategy import ILumpSumSavingsStrategy
from openapi_server.models.i_periodic_savings_strategy import IPeriodicSavingsStrategy
from openapi_server.models.i_rrsp_maximizer_strategy import IRrspMaximizerStrategy
from openapi_server.models.i_surplus_savings_strategy import ISurplusSavingsStrategy
from openapi_server import util


class ISavingsStrategies(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lump_sum_savings_strategies: List[ILumpSumSavingsStrategy]=None, periodic_savings_strategies: List[IPeriodicSavingsStrategy]=None, rrsp_maximizer_strategies: List[IRrspMaximizerStrategy]=None, surplus_savings_strategies: List[ISurplusSavingsStrategy]=None):
        """ISavingsStrategies - a model defined in OpenAPI

        :param lump_sum_savings_strategies: The lump_sum_savings_strategies of this ISavingsStrategies.
        :param periodic_savings_strategies: The periodic_savings_strategies of this ISavingsStrategies.
        :param rrsp_maximizer_strategies: The rrsp_maximizer_strategies of this ISavingsStrategies.
        :param surplus_savings_strategies: The surplus_savings_strategies of this ISavingsStrategies.
        """
        self.openapi_types = {
            'lump_sum_savings_strategies': List[ILumpSumSavingsStrategy],
            'periodic_savings_strategies': List[IPeriodicSavingsStrategy],
            'rrsp_maximizer_strategies': List[IRrspMaximizerStrategy],
            'surplus_savings_strategies': List[ISurplusSavingsStrategy]
        }

        self.attribute_map = {
            'lump_sum_savings_strategies': 'lumpSumSavingsStrategies',
            'periodic_savings_strategies': 'periodicSavingsStrategies',
            'rrsp_maximizer_strategies': 'rrspMaximizerStrategies',
            'surplus_savings_strategies': 'surplusSavingsStrategies'
        }

        self._lump_sum_savings_strategies = lump_sum_savings_strategies
        self._periodic_savings_strategies = periodic_savings_strategies
        self._rrsp_maximizer_strategies = rrsp_maximizer_strategies
        self._surplus_savings_strategies = surplus_savings_strategies

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ISavingsStrategies':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ISavingsStrategies of this ISavingsStrategies.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lump_sum_savings_strategies(self):
        """Gets the lump_sum_savings_strategies of this ISavingsStrategies.


        :return: The lump_sum_savings_strategies of this ISavingsStrategies.
        :rtype: List[ILumpSumSavingsStrategy]
        """
        return self._lump_sum_savings_strategies

    @lump_sum_savings_strategies.setter
    def lump_sum_savings_strategies(self, lump_sum_savings_strategies):
        """Sets the lump_sum_savings_strategies of this ISavingsStrategies.


        :param lump_sum_savings_strategies: The lump_sum_savings_strategies of this ISavingsStrategies.
        :type lump_sum_savings_strategies: List[ILumpSumSavingsStrategy]
        """

        self._lump_sum_savings_strategies = lump_sum_savings_strategies

    @property
    def periodic_savings_strategies(self):
        """Gets the periodic_savings_strategies of this ISavingsStrategies.


        :return: The periodic_savings_strategies of this ISavingsStrategies.
        :rtype: List[IPeriodicSavingsStrategy]
        """
        return self._periodic_savings_strategies

    @periodic_savings_strategies.setter
    def periodic_savings_strategies(self, periodic_savings_strategies):
        """Sets the periodic_savings_strategies of this ISavingsStrategies.


        :param periodic_savings_strategies: The periodic_savings_strategies of this ISavingsStrategies.
        :type periodic_savings_strategies: List[IPeriodicSavingsStrategy]
        """

        self._periodic_savings_strategies = periodic_savings_strategies

    @property
    def rrsp_maximizer_strategies(self):
        """Gets the rrsp_maximizer_strategies of this ISavingsStrategies.


        :return: The rrsp_maximizer_strategies of this ISavingsStrategies.
        :rtype: List[IRrspMaximizerStrategy]
        """
        return self._rrsp_maximizer_strategies

    @rrsp_maximizer_strategies.setter
    def rrsp_maximizer_strategies(self, rrsp_maximizer_strategies):
        """Sets the rrsp_maximizer_strategies of this ISavingsStrategies.


        :param rrsp_maximizer_strategies: The rrsp_maximizer_strategies of this ISavingsStrategies.
        :type rrsp_maximizer_strategies: List[IRrspMaximizerStrategy]
        """

        self._rrsp_maximizer_strategies = rrsp_maximizer_strategies

    @property
    def surplus_savings_strategies(self):
        """Gets the surplus_savings_strategies of this ISavingsStrategies.


        :return: The surplus_savings_strategies of this ISavingsStrategies.
        :rtype: List[ISurplusSavingsStrategy]
        """
        return self._surplus_savings_strategies

    @surplus_savings_strategies.setter
    def surplus_savings_strategies(self, surplus_savings_strategies):
        """Sets the surplus_savings_strategies of this ISavingsStrategies.


        :param surplus_savings_strategies: The surplus_savings_strategies of this ISavingsStrategies.
        :type surplus_savings_strategies: List[ISurplusSavingsStrategy]
        """

        self._surplus_savings_strategies = surplus_savings_strategies
