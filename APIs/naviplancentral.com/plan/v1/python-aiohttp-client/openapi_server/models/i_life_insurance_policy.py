# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency import Currency
from openapi_server.models.descriptive_boolean import DescriptiveBoolean
from openapi_server.models.i_insurance_premium import IInsurancePremium
from openapi_server.models.model_date import ModelDate
from openapi_server.models.time_period import TimePeriod
from openapi_server import util


class ILifeInsurancePolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, beneficiary_name: str=None, benefit_period: TimePeriod=None, cash_surrender_value: Currency=None, coverage_cease_date: ModelDate=None, daily_benefit_value: float=None, description: str=None, effective_date: ModelDate=None, formatted_benefit_value: str=None, formatted_insured_type: str=None, formatted_policy_type: str=None, id: str=None, insured: str=None, is_csv_payable_with_death_benefit: DescriptiveBoolean=None, monthly_benefit_value: float=None, owner_name: str=None, policy_type: str=None, premium_data: IInsurancePremium=None, premiums_waived_at_disability: DescriptiveBoolean=None, raw_benefit_value: float=None, waiting_period: TimePeriod=None):
        """ILifeInsurancePolicy - a model defined in OpenAPI

        :param beneficiary_name: The beneficiary_name of this ILifeInsurancePolicy.
        :param benefit_period: The benefit_period of this ILifeInsurancePolicy.
        :param cash_surrender_value: The cash_surrender_value of this ILifeInsurancePolicy.
        :param coverage_cease_date: The coverage_cease_date of this ILifeInsurancePolicy.
        :param daily_benefit_value: The daily_benefit_value of this ILifeInsurancePolicy.
        :param description: The description of this ILifeInsurancePolicy.
        :param effective_date: The effective_date of this ILifeInsurancePolicy.
        :param formatted_benefit_value: The formatted_benefit_value of this ILifeInsurancePolicy.
        :param formatted_insured_type: The formatted_insured_type of this ILifeInsurancePolicy.
        :param formatted_policy_type: The formatted_policy_type of this ILifeInsurancePolicy.
        :param id: The id of this ILifeInsurancePolicy.
        :param insured: The insured of this ILifeInsurancePolicy.
        :param is_csv_payable_with_death_benefit: The is_csv_payable_with_death_benefit of this ILifeInsurancePolicy.
        :param monthly_benefit_value: The monthly_benefit_value of this ILifeInsurancePolicy.
        :param owner_name: The owner_name of this ILifeInsurancePolicy.
        :param policy_type: The policy_type of this ILifeInsurancePolicy.
        :param premium_data: The premium_data of this ILifeInsurancePolicy.
        :param premiums_waived_at_disability: The premiums_waived_at_disability of this ILifeInsurancePolicy.
        :param raw_benefit_value: The raw_benefit_value of this ILifeInsurancePolicy.
        :param waiting_period: The waiting_period of this ILifeInsurancePolicy.
        """
        self.openapi_types = {
            'beneficiary_name': str,
            'benefit_period': TimePeriod,
            'cash_surrender_value': Currency,
            'coverage_cease_date': ModelDate,
            'daily_benefit_value': float,
            'description': str,
            'effective_date': ModelDate,
            'formatted_benefit_value': str,
            'formatted_insured_type': str,
            'formatted_policy_type': str,
            'id': str,
            'insured': str,
            'is_csv_payable_with_death_benefit': DescriptiveBoolean,
            'monthly_benefit_value': float,
            'owner_name': str,
            'policy_type': str,
            'premium_data': IInsurancePremium,
            'premiums_waived_at_disability': DescriptiveBoolean,
            'raw_benefit_value': float,
            'waiting_period': TimePeriod
        }

        self.attribute_map = {
            'beneficiary_name': 'beneficiaryName',
            'benefit_period': 'benefitPeriod',
            'cash_surrender_value': 'cashSurrenderValue',
            'coverage_cease_date': 'coverageCeaseDate',
            'daily_benefit_value': 'dailyBenefitValue',
            'description': 'description',
            'effective_date': 'effectiveDate',
            'formatted_benefit_value': 'formattedBenefitValue',
            'formatted_insured_type': 'formattedInsuredType',
            'formatted_policy_type': 'formattedPolicyType',
            'id': 'id',
            'insured': 'insured',
            'is_csv_payable_with_death_benefit': 'isCSVPayableWithDeathBenefit',
            'monthly_benefit_value': 'monthlyBenefitValue',
            'owner_name': 'ownerName',
            'policy_type': 'policyType',
            'premium_data': 'premiumData',
            'premiums_waived_at_disability': 'premiumsWaivedAtDisability',
            'raw_benefit_value': 'rawBenefitValue',
            'waiting_period': 'waitingPeriod'
        }

        self._beneficiary_name = beneficiary_name
        self._benefit_period = benefit_period
        self._cash_surrender_value = cash_surrender_value
        self._coverage_cease_date = coverage_cease_date
        self._daily_benefit_value = daily_benefit_value
        self._description = description
        self._effective_date = effective_date
        self._formatted_benefit_value = formatted_benefit_value
        self._formatted_insured_type = formatted_insured_type
        self._formatted_policy_type = formatted_policy_type
        self._id = id
        self._insured = insured
        self._is_csv_payable_with_death_benefit = is_csv_payable_with_death_benefit
        self._monthly_benefit_value = monthly_benefit_value
        self._owner_name = owner_name
        self._policy_type = policy_type
        self._premium_data = premium_data
        self._premiums_waived_at_disability = premiums_waived_at_disability
        self._raw_benefit_value = raw_benefit_value
        self._waiting_period = waiting_period

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ILifeInsurancePolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ILifeInsurancePolicy of this ILifeInsurancePolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def beneficiary_name(self):
        """Gets the beneficiary_name of this ILifeInsurancePolicy.


        :return: The beneficiary_name of this ILifeInsurancePolicy.
        :rtype: str
        """
        return self._beneficiary_name

    @beneficiary_name.setter
    def beneficiary_name(self, beneficiary_name):
        """Sets the beneficiary_name of this ILifeInsurancePolicy.


        :param beneficiary_name: The beneficiary_name of this ILifeInsurancePolicy.
        :type beneficiary_name: str
        """

        self._beneficiary_name = beneficiary_name

    @property
    def benefit_period(self):
        """Gets the benefit_period of this ILifeInsurancePolicy.


        :return: The benefit_period of this ILifeInsurancePolicy.
        :rtype: TimePeriod
        """
        return self._benefit_period

    @benefit_period.setter
    def benefit_period(self, benefit_period):
        """Sets the benefit_period of this ILifeInsurancePolicy.


        :param benefit_period: The benefit_period of this ILifeInsurancePolicy.
        :type benefit_period: TimePeriod
        """

        self._benefit_period = benefit_period

    @property
    def cash_surrender_value(self):
        """Gets the cash_surrender_value of this ILifeInsurancePolicy.


        :return: The cash_surrender_value of this ILifeInsurancePolicy.
        :rtype: Currency
        """
        return self._cash_surrender_value

    @cash_surrender_value.setter
    def cash_surrender_value(self, cash_surrender_value):
        """Sets the cash_surrender_value of this ILifeInsurancePolicy.


        :param cash_surrender_value: The cash_surrender_value of this ILifeInsurancePolicy.
        :type cash_surrender_value: Currency
        """

        self._cash_surrender_value = cash_surrender_value

    @property
    def coverage_cease_date(self):
        """Gets the coverage_cease_date of this ILifeInsurancePolicy.


        :return: The coverage_cease_date of this ILifeInsurancePolicy.
        :rtype: ModelDate
        """
        return self._coverage_cease_date

    @coverage_cease_date.setter
    def coverage_cease_date(self, coverage_cease_date):
        """Sets the coverage_cease_date of this ILifeInsurancePolicy.


        :param coverage_cease_date: The coverage_cease_date of this ILifeInsurancePolicy.
        :type coverage_cease_date: ModelDate
        """

        self._coverage_cease_date = coverage_cease_date

    @property
    def daily_benefit_value(self):
        """Gets the daily_benefit_value of this ILifeInsurancePolicy.


        :return: The daily_benefit_value of this ILifeInsurancePolicy.
        :rtype: float
        """
        return self._daily_benefit_value

    @daily_benefit_value.setter
    def daily_benefit_value(self, daily_benefit_value):
        """Sets the daily_benefit_value of this ILifeInsurancePolicy.


        :param daily_benefit_value: The daily_benefit_value of this ILifeInsurancePolicy.
        :type daily_benefit_value: float
        """

        self._daily_benefit_value = daily_benefit_value

    @property
    def description(self):
        """Gets the description of this ILifeInsurancePolicy.


        :return: The description of this ILifeInsurancePolicy.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ILifeInsurancePolicy.


        :param description: The description of this ILifeInsurancePolicy.
        :type description: str
        """

        self._description = description

    @property
    def effective_date(self):
        """Gets the effective_date of this ILifeInsurancePolicy.


        :return: The effective_date of this ILifeInsurancePolicy.
        :rtype: ModelDate
        """
        return self._effective_date

    @effective_date.setter
    def effective_date(self, effective_date):
        """Sets the effective_date of this ILifeInsurancePolicy.


        :param effective_date: The effective_date of this ILifeInsurancePolicy.
        :type effective_date: ModelDate
        """

        self._effective_date = effective_date

    @property
    def formatted_benefit_value(self):
        """Gets the formatted_benefit_value of this ILifeInsurancePolicy.


        :return: The formatted_benefit_value of this ILifeInsurancePolicy.
        :rtype: str
        """
        return self._formatted_benefit_value

    @formatted_benefit_value.setter
    def formatted_benefit_value(self, formatted_benefit_value):
        """Sets the formatted_benefit_value of this ILifeInsurancePolicy.


        :param formatted_benefit_value: The formatted_benefit_value of this ILifeInsurancePolicy.
        :type formatted_benefit_value: str
        """

        self._formatted_benefit_value = formatted_benefit_value

    @property
    def formatted_insured_type(self):
        """Gets the formatted_insured_type of this ILifeInsurancePolicy.


        :return: The formatted_insured_type of this ILifeInsurancePolicy.
        :rtype: str
        """
        return self._formatted_insured_type

    @formatted_insured_type.setter
    def formatted_insured_type(self, formatted_insured_type):
        """Sets the formatted_insured_type of this ILifeInsurancePolicy.


        :param formatted_insured_type: The formatted_insured_type of this ILifeInsurancePolicy.
        :type formatted_insured_type: str
        """

        self._formatted_insured_type = formatted_insured_type

    @property
    def formatted_policy_type(self):
        """Gets the formatted_policy_type of this ILifeInsurancePolicy.


        :return: The formatted_policy_type of this ILifeInsurancePolicy.
        :rtype: str
        """
        return self._formatted_policy_type

    @formatted_policy_type.setter
    def formatted_policy_type(self, formatted_policy_type):
        """Sets the formatted_policy_type of this ILifeInsurancePolicy.


        :param formatted_policy_type: The formatted_policy_type of this ILifeInsurancePolicy.
        :type formatted_policy_type: str
        """

        self._formatted_policy_type = formatted_policy_type

    @property
    def id(self):
        """Gets the id of this ILifeInsurancePolicy.


        :return: The id of this ILifeInsurancePolicy.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ILifeInsurancePolicy.


        :param id: The id of this ILifeInsurancePolicy.
        :type id: str
        """

        self._id = id

    @property
    def insured(self):
        """Gets the insured of this ILifeInsurancePolicy.


        :return: The insured of this ILifeInsurancePolicy.
        :rtype: str
        """
        return self._insured

    @insured.setter
    def insured(self, insured):
        """Sets the insured of this ILifeInsurancePolicy.


        :param insured: The insured of this ILifeInsurancePolicy.
        :type insured: str
        """
        allowed_values = ["Client", "CoClient", "FirstToDie", "SecondToDie", "Other"]  # noqa: E501
        if insured not in allowed_values:
            raise ValueError(
                "Invalid value for `insured` ({0}), must be one of {1}"
                .format(insured, allowed_values)
            )

        self._insured = insured

    @property
    def is_csv_payable_with_death_benefit(self):
        """Gets the is_csv_payable_with_death_benefit of this ILifeInsurancePolicy.


        :return: The is_csv_payable_with_death_benefit of this ILifeInsurancePolicy.
        :rtype: DescriptiveBoolean
        """
        return self._is_csv_payable_with_death_benefit

    @is_csv_payable_with_death_benefit.setter
    def is_csv_payable_with_death_benefit(self, is_csv_payable_with_death_benefit):
        """Sets the is_csv_payable_with_death_benefit of this ILifeInsurancePolicy.


        :param is_csv_payable_with_death_benefit: The is_csv_payable_with_death_benefit of this ILifeInsurancePolicy.
        :type is_csv_payable_with_death_benefit: DescriptiveBoolean
        """

        self._is_csv_payable_with_death_benefit = is_csv_payable_with_death_benefit

    @property
    def monthly_benefit_value(self):
        """Gets the monthly_benefit_value of this ILifeInsurancePolicy.


        :return: The monthly_benefit_value of this ILifeInsurancePolicy.
        :rtype: float
        """
        return self._monthly_benefit_value

    @monthly_benefit_value.setter
    def monthly_benefit_value(self, monthly_benefit_value):
        """Sets the monthly_benefit_value of this ILifeInsurancePolicy.


        :param monthly_benefit_value: The monthly_benefit_value of this ILifeInsurancePolicy.
        :type monthly_benefit_value: float
        """

        self._monthly_benefit_value = monthly_benefit_value

    @property
    def owner_name(self):
        """Gets the owner_name of this ILifeInsurancePolicy.


        :return: The owner_name of this ILifeInsurancePolicy.
        :rtype: str
        """
        return self._owner_name

    @owner_name.setter
    def owner_name(self, owner_name):
        """Sets the owner_name of this ILifeInsurancePolicy.


        :param owner_name: The owner_name of this ILifeInsurancePolicy.
        :type owner_name: str
        """

        self._owner_name = owner_name

    @property
    def policy_type(self):
        """Gets the policy_type of this ILifeInsurancePolicy.


        :return: The policy_type of this ILifeInsurancePolicy.
        :rtype: str
        """
        return self._policy_type

    @policy_type.setter
    def policy_type(self, policy_type):
        """Sets the policy_type of this ILifeInsurancePolicy.


        :param policy_type: The policy_type of this ILifeInsurancePolicy.
        :type policy_type: str
        """
        allowed_values = ["WholeLife", "UniversalLife", "Term1Life", "Term5Life", "Term10Life", "Term20Life", "Term100Life", "VariableLife", "VariableUniversalLife", "GroupLongTermDisability", "GroupShortTermDisability", "IndividualDisability", "LongTermCare", "CriticalIllness", "MedicalCoveragePlan", "CashToInsuredCoverage"]  # noqa: E501
        if policy_type not in allowed_values:
            raise ValueError(
                "Invalid value for `policy_type` ({0}), must be one of {1}"
                .format(policy_type, allowed_values)
            )

        self._policy_type = policy_type

    @property
    def premium_data(self):
        """Gets the premium_data of this ILifeInsurancePolicy.


        :return: The premium_data of this ILifeInsurancePolicy.
        :rtype: IInsurancePremium
        """
        return self._premium_data

    @premium_data.setter
    def premium_data(self, premium_data):
        """Sets the premium_data of this ILifeInsurancePolicy.


        :param premium_data: The premium_data of this ILifeInsurancePolicy.
        :type premium_data: IInsurancePremium
        """

        self._premium_data = premium_data

    @property
    def premiums_waived_at_disability(self):
        """Gets the premiums_waived_at_disability of this ILifeInsurancePolicy.


        :return: The premiums_waived_at_disability of this ILifeInsurancePolicy.
        :rtype: DescriptiveBoolean
        """
        return self._premiums_waived_at_disability

    @premiums_waived_at_disability.setter
    def premiums_waived_at_disability(self, premiums_waived_at_disability):
        """Sets the premiums_waived_at_disability of this ILifeInsurancePolicy.


        :param premiums_waived_at_disability: The premiums_waived_at_disability of this ILifeInsurancePolicy.
        :type premiums_waived_at_disability: DescriptiveBoolean
        """

        self._premiums_waived_at_disability = premiums_waived_at_disability

    @property
    def raw_benefit_value(self):
        """Gets the raw_benefit_value of this ILifeInsurancePolicy.


        :return: The raw_benefit_value of this ILifeInsurancePolicy.
        :rtype: float
        """
        return self._raw_benefit_value

    @raw_benefit_value.setter
    def raw_benefit_value(self, raw_benefit_value):
        """Sets the raw_benefit_value of this ILifeInsurancePolicy.


        :param raw_benefit_value: The raw_benefit_value of this ILifeInsurancePolicy.
        :type raw_benefit_value: float
        """

        self._raw_benefit_value = raw_benefit_value

    @property
    def waiting_period(self):
        """Gets the waiting_period of this ILifeInsurancePolicy.


        :return: The waiting_period of this ILifeInsurancePolicy.
        :rtype: TimePeriod
        """
        return self._waiting_period

    @waiting_period.setter
    def waiting_period(self, waiting_period):
        """Sets the waiting_period of this ILifeInsurancePolicy.


        :param waiting_period: The waiting_period of this ILifeInsurancePolicy.
        :type waiting_period: TimePeriod
        """

        self._waiting_period = waiting_period
