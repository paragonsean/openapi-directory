# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency_with_growth import CurrencyWithGrowth
from openapi_server.models.formatted_date_range import FormattedDateRange
from openapi_server.models.i_formatted_frequency import IFormattedFrequency
from openapi_server import util


class IActivityData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount_with_growth: CurrencyWithGrowth=None, applicable_date_range: FormattedDateRange=None, direct_to: str=None, frequency: IFormattedFrequency=None):
        """IActivityData - a model defined in OpenAPI

        :param amount_with_growth: The amount_with_growth of this IActivityData.
        :param applicable_date_range: The applicable_date_range of this IActivityData.
        :param direct_to: The direct_to of this IActivityData.
        :param frequency: The frequency of this IActivityData.
        """
        self.openapi_types = {
            'amount_with_growth': CurrencyWithGrowth,
            'applicable_date_range': FormattedDateRange,
            'direct_to': str,
            'frequency': IFormattedFrequency
        }

        self.attribute_map = {
            'amount_with_growth': 'amountWithGrowth',
            'applicable_date_range': 'applicableDateRange',
            'direct_to': 'directTo',
            'frequency': 'frequency'
        }

        self._amount_with_growth = amount_with_growth
        self._applicable_date_range = applicable_date_range
        self._direct_to = direct_to
        self._frequency = frequency

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IActivityData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IActivityData of this IActivityData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount_with_growth(self):
        """Gets the amount_with_growth of this IActivityData.


        :return: The amount_with_growth of this IActivityData.
        :rtype: CurrencyWithGrowth
        """
        return self._amount_with_growth

    @amount_with_growth.setter
    def amount_with_growth(self, amount_with_growth):
        """Sets the amount_with_growth of this IActivityData.


        :param amount_with_growth: The amount_with_growth of this IActivityData.
        :type amount_with_growth: CurrencyWithGrowth
        """

        self._amount_with_growth = amount_with_growth

    @property
    def applicable_date_range(self):
        """Gets the applicable_date_range of this IActivityData.


        :return: The applicable_date_range of this IActivityData.
        :rtype: FormattedDateRange
        """
        return self._applicable_date_range

    @applicable_date_range.setter
    def applicable_date_range(self, applicable_date_range):
        """Sets the applicable_date_range of this IActivityData.


        :param applicable_date_range: The applicable_date_range of this IActivityData.
        :type applicable_date_range: FormattedDateRange
        """

        self._applicable_date_range = applicable_date_range

    @property
    def direct_to(self):
        """Gets the direct_to of this IActivityData.


        :return: The direct_to of this IActivityData.
        :rtype: str
        """
        return self._direct_to

    @direct_to.setter
    def direct_to(self, direct_to):
        """Sets the direct_to of this IActivityData.


        :param direct_to: The direct_to of this IActivityData.
        :type direct_to: str
        """

        self._direct_to = direct_to

    @property
    def frequency(self):
        """Gets the frequency of this IActivityData.


        :return: The frequency of this IActivityData.
        :rtype: IFormattedFrequency
        """
        return self._frequency

    @frequency.setter
    def frequency(self, frequency):
        """Sets the frequency of this IActivityData.


        :param frequency: The frequency of this IActivityData.
        :type frequency: IFormattedFrequency
        """

        self._frequency = frequency
