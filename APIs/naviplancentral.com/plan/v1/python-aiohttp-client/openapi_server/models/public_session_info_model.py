# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PublicSessionInfoModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, eula_accepted: bool=None, has_account_aggregation: bool=None, has_goal_what_ifing: bool=None, has_user_set_password: bool=None, is_admin: bool=None, is_advisor: bool=None, is_client: bool=None, is_password_expired: bool=None, user_id: str=None, user_name: str=None):
        """PublicSessionInfoModel - a model defined in OpenAPI

        :param eula_accepted: The eula_accepted of this PublicSessionInfoModel.
        :param has_account_aggregation: The has_account_aggregation of this PublicSessionInfoModel.
        :param has_goal_what_ifing: The has_goal_what_ifing of this PublicSessionInfoModel.
        :param has_user_set_password: The has_user_set_password of this PublicSessionInfoModel.
        :param is_admin: The is_admin of this PublicSessionInfoModel.
        :param is_advisor: The is_advisor of this PublicSessionInfoModel.
        :param is_client: The is_client of this PublicSessionInfoModel.
        :param is_password_expired: The is_password_expired of this PublicSessionInfoModel.
        :param user_id: The user_id of this PublicSessionInfoModel.
        :param user_name: The user_name of this PublicSessionInfoModel.
        """
        self.openapi_types = {
            'eula_accepted': bool,
            'has_account_aggregation': bool,
            'has_goal_what_ifing': bool,
            'has_user_set_password': bool,
            'is_admin': bool,
            'is_advisor': bool,
            'is_client': bool,
            'is_password_expired': bool,
            'user_id': str,
            'user_name': str
        }

        self.attribute_map = {
            'eula_accepted': 'eulaAccepted',
            'has_account_aggregation': 'hasAccountAggregation',
            'has_goal_what_ifing': 'hasGoalWhatIfing',
            'has_user_set_password': 'hasUserSetPassword',
            'is_admin': 'isAdmin',
            'is_advisor': 'isAdvisor',
            'is_client': 'isClient',
            'is_password_expired': 'isPasswordExpired',
            'user_id': 'userId',
            'user_name': 'userName'
        }

        self._eula_accepted = eula_accepted
        self._has_account_aggregation = has_account_aggregation
        self._has_goal_what_ifing = has_goal_what_ifing
        self._has_user_set_password = has_user_set_password
        self._is_admin = is_admin
        self._is_advisor = is_advisor
        self._is_client = is_client
        self._is_password_expired = is_password_expired
        self._user_id = user_id
        self._user_name = user_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PublicSessionInfoModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PublicSessionInfoModel of this PublicSessionInfoModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def eula_accepted(self):
        """Gets the eula_accepted of this PublicSessionInfoModel.


        :return: The eula_accepted of this PublicSessionInfoModel.
        :rtype: bool
        """
        return self._eula_accepted

    @eula_accepted.setter
    def eula_accepted(self, eula_accepted):
        """Sets the eula_accepted of this PublicSessionInfoModel.


        :param eula_accepted: The eula_accepted of this PublicSessionInfoModel.
        :type eula_accepted: bool
        """

        self._eula_accepted = eula_accepted

    @property
    def has_account_aggregation(self):
        """Gets the has_account_aggregation of this PublicSessionInfoModel.


        :return: The has_account_aggregation of this PublicSessionInfoModel.
        :rtype: bool
        """
        return self._has_account_aggregation

    @has_account_aggregation.setter
    def has_account_aggregation(self, has_account_aggregation):
        """Sets the has_account_aggregation of this PublicSessionInfoModel.


        :param has_account_aggregation: The has_account_aggregation of this PublicSessionInfoModel.
        :type has_account_aggregation: bool
        """

        self._has_account_aggregation = has_account_aggregation

    @property
    def has_goal_what_ifing(self):
        """Gets the has_goal_what_ifing of this PublicSessionInfoModel.


        :return: The has_goal_what_ifing of this PublicSessionInfoModel.
        :rtype: bool
        """
        return self._has_goal_what_ifing

    @has_goal_what_ifing.setter
    def has_goal_what_ifing(self, has_goal_what_ifing):
        """Sets the has_goal_what_ifing of this PublicSessionInfoModel.


        :param has_goal_what_ifing: The has_goal_what_ifing of this PublicSessionInfoModel.
        :type has_goal_what_ifing: bool
        """

        self._has_goal_what_ifing = has_goal_what_ifing

    @property
    def has_user_set_password(self):
        """Gets the has_user_set_password of this PublicSessionInfoModel.


        :return: The has_user_set_password of this PublicSessionInfoModel.
        :rtype: bool
        """
        return self._has_user_set_password

    @has_user_set_password.setter
    def has_user_set_password(self, has_user_set_password):
        """Sets the has_user_set_password of this PublicSessionInfoModel.


        :param has_user_set_password: The has_user_set_password of this PublicSessionInfoModel.
        :type has_user_set_password: bool
        """

        self._has_user_set_password = has_user_set_password

    @property
    def is_admin(self):
        """Gets the is_admin of this PublicSessionInfoModel.


        :return: The is_admin of this PublicSessionInfoModel.
        :rtype: bool
        """
        return self._is_admin

    @is_admin.setter
    def is_admin(self, is_admin):
        """Sets the is_admin of this PublicSessionInfoModel.


        :param is_admin: The is_admin of this PublicSessionInfoModel.
        :type is_admin: bool
        """

        self._is_admin = is_admin

    @property
    def is_advisor(self):
        """Gets the is_advisor of this PublicSessionInfoModel.


        :return: The is_advisor of this PublicSessionInfoModel.
        :rtype: bool
        """
        return self._is_advisor

    @is_advisor.setter
    def is_advisor(self, is_advisor):
        """Sets the is_advisor of this PublicSessionInfoModel.


        :param is_advisor: The is_advisor of this PublicSessionInfoModel.
        :type is_advisor: bool
        """

        self._is_advisor = is_advisor

    @property
    def is_client(self):
        """Gets the is_client of this PublicSessionInfoModel.


        :return: The is_client of this PublicSessionInfoModel.
        :rtype: bool
        """
        return self._is_client

    @is_client.setter
    def is_client(self, is_client):
        """Sets the is_client of this PublicSessionInfoModel.


        :param is_client: The is_client of this PublicSessionInfoModel.
        :type is_client: bool
        """

        self._is_client = is_client

    @property
    def is_password_expired(self):
        """Gets the is_password_expired of this PublicSessionInfoModel.


        :return: The is_password_expired of this PublicSessionInfoModel.
        :rtype: bool
        """
        return self._is_password_expired

    @is_password_expired.setter
    def is_password_expired(self, is_password_expired):
        """Sets the is_password_expired of this PublicSessionInfoModel.


        :param is_password_expired: The is_password_expired of this PublicSessionInfoModel.
        :type is_password_expired: bool
        """

        self._is_password_expired = is_password_expired

    @property
    def user_id(self):
        """Gets the user_id of this PublicSessionInfoModel.


        :return: The user_id of this PublicSessionInfoModel.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this PublicSessionInfoModel.


        :param user_id: The user_id of this PublicSessionInfoModel.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def user_name(self):
        """Gets the user_name of this PublicSessionInfoModel.


        :return: The user_name of this PublicSessionInfoModel.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this PublicSessionInfoModel.


        :param user_name: The user_name of this PublicSessionInfoModel.
        :type user_name: str
        """

        self._user_name = user_name
