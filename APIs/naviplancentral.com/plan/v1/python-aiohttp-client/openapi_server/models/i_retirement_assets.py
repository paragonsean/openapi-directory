# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.i_retirement_asset_categories import IRetirementAssetCategories
from openapi_server.models.percent import Percent
from openapi_server import util


class IRetirementAssets(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, all_assets: IRetirementAssetCategories=None, client_assets: IRetirementAssetCategories=None, co_client_assets: IRetirementAssetCategories=None, community_property_assets: IRetirementAssetCategories=None, joint_assets: IRetirementAssetCategories=None, withdrawal_rate: Percent=None):
        """IRetirementAssets - a model defined in OpenAPI

        :param all_assets: The all_assets of this IRetirementAssets.
        :param client_assets: The client_assets of this IRetirementAssets.
        :param co_client_assets: The co_client_assets of this IRetirementAssets.
        :param community_property_assets: The community_property_assets of this IRetirementAssets.
        :param joint_assets: The joint_assets of this IRetirementAssets.
        :param withdrawal_rate: The withdrawal_rate of this IRetirementAssets.
        """
        self.openapi_types = {
            'all_assets': IRetirementAssetCategories,
            'client_assets': IRetirementAssetCategories,
            'co_client_assets': IRetirementAssetCategories,
            'community_property_assets': IRetirementAssetCategories,
            'joint_assets': IRetirementAssetCategories,
            'withdrawal_rate': Percent
        }

        self.attribute_map = {
            'all_assets': 'allAssets',
            'client_assets': 'clientAssets',
            'co_client_assets': 'coClientAssets',
            'community_property_assets': 'communityPropertyAssets',
            'joint_assets': 'jointAssets',
            'withdrawal_rate': 'withdrawalRate'
        }

        self._all_assets = all_assets
        self._client_assets = client_assets
        self._co_client_assets = co_client_assets
        self._community_property_assets = community_property_assets
        self._joint_assets = joint_assets
        self._withdrawal_rate = withdrawal_rate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IRetirementAssets':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IRetirementAssets of this IRetirementAssets.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def all_assets(self):
        """Gets the all_assets of this IRetirementAssets.


        :return: The all_assets of this IRetirementAssets.
        :rtype: IRetirementAssetCategories
        """
        return self._all_assets

    @all_assets.setter
    def all_assets(self, all_assets):
        """Sets the all_assets of this IRetirementAssets.


        :param all_assets: The all_assets of this IRetirementAssets.
        :type all_assets: IRetirementAssetCategories
        """

        self._all_assets = all_assets

    @property
    def client_assets(self):
        """Gets the client_assets of this IRetirementAssets.


        :return: The client_assets of this IRetirementAssets.
        :rtype: IRetirementAssetCategories
        """
        return self._client_assets

    @client_assets.setter
    def client_assets(self, client_assets):
        """Sets the client_assets of this IRetirementAssets.


        :param client_assets: The client_assets of this IRetirementAssets.
        :type client_assets: IRetirementAssetCategories
        """

        self._client_assets = client_assets

    @property
    def co_client_assets(self):
        """Gets the co_client_assets of this IRetirementAssets.


        :return: The co_client_assets of this IRetirementAssets.
        :rtype: IRetirementAssetCategories
        """
        return self._co_client_assets

    @co_client_assets.setter
    def co_client_assets(self, co_client_assets):
        """Sets the co_client_assets of this IRetirementAssets.


        :param co_client_assets: The co_client_assets of this IRetirementAssets.
        :type co_client_assets: IRetirementAssetCategories
        """

        self._co_client_assets = co_client_assets

    @property
    def community_property_assets(self):
        """Gets the community_property_assets of this IRetirementAssets.


        :return: The community_property_assets of this IRetirementAssets.
        :rtype: IRetirementAssetCategories
        """
        return self._community_property_assets

    @community_property_assets.setter
    def community_property_assets(self, community_property_assets):
        """Sets the community_property_assets of this IRetirementAssets.


        :param community_property_assets: The community_property_assets of this IRetirementAssets.
        :type community_property_assets: IRetirementAssetCategories
        """

        self._community_property_assets = community_property_assets

    @property
    def joint_assets(self):
        """Gets the joint_assets of this IRetirementAssets.


        :return: The joint_assets of this IRetirementAssets.
        :rtype: IRetirementAssetCategories
        """
        return self._joint_assets

    @joint_assets.setter
    def joint_assets(self, joint_assets):
        """Sets the joint_assets of this IRetirementAssets.


        :param joint_assets: The joint_assets of this IRetirementAssets.
        :type joint_assets: IRetirementAssetCategories
        """

        self._joint_assets = joint_assets

    @property
    def withdrawal_rate(self):
        """Gets the withdrawal_rate of this IRetirementAssets.


        :return: The withdrawal_rate of this IRetirementAssets.
        :rtype: Percent
        """
        return self._withdrawal_rate

    @withdrawal_rate.setter
    def withdrawal_rate(self, withdrawal_rate):
        """Sets the withdrawal_rate of this IRetirementAssets.


        :param withdrawal_rate: The withdrawal_rate of this IRetirementAssets.
        :type withdrawal_rate: Percent
        """

        self._withdrawal_rate = withdrawal_rate
