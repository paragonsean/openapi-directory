# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AdvicentNaviPlanRestApiNetWorthModelsHoldingModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, market_value: float=None, valuation_date: datetime=None):
        """AdvicentNaviPlanRestApiNetWorthModelsHoldingModel - a model defined in OpenAPI

        :param description: The description of this AdvicentNaviPlanRestApiNetWorthModelsHoldingModel.
        :param market_value: The market_value of this AdvicentNaviPlanRestApiNetWorthModelsHoldingModel.
        :param valuation_date: The valuation_date of this AdvicentNaviPlanRestApiNetWorthModelsHoldingModel.
        """
        self.openapi_types = {
            'description': str,
            'market_value': float,
            'valuation_date': datetime
        }

        self.attribute_map = {
            'description': 'description',
            'market_value': 'marketValue',
            'valuation_date': 'valuationDate'
        }

        self._description = description
        self._market_value = market_value
        self._valuation_date = valuation_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdvicentNaviPlanRestApiNetWorthModelsHoldingModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdvicentNaviPlanRestApiNetWorthModelsHoldingModel of this AdvicentNaviPlanRestApiNetWorthModelsHoldingModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this AdvicentNaviPlanRestApiNetWorthModelsHoldingModel.


        :return: The description of this AdvicentNaviPlanRestApiNetWorthModelsHoldingModel.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this AdvicentNaviPlanRestApiNetWorthModelsHoldingModel.


        :param description: The description of this AdvicentNaviPlanRestApiNetWorthModelsHoldingModel.
        :type description: str
        """

        self._description = description

    @property
    def market_value(self):
        """Gets the market_value of this AdvicentNaviPlanRestApiNetWorthModelsHoldingModel.


        :return: The market_value of this AdvicentNaviPlanRestApiNetWorthModelsHoldingModel.
        :rtype: float
        """
        return self._market_value

    @market_value.setter
    def market_value(self, market_value):
        """Sets the market_value of this AdvicentNaviPlanRestApiNetWorthModelsHoldingModel.


        :param market_value: The market_value of this AdvicentNaviPlanRestApiNetWorthModelsHoldingModel.
        :type market_value: float
        """

        self._market_value = market_value

    @property
    def valuation_date(self):
        """Gets the valuation_date of this AdvicentNaviPlanRestApiNetWorthModelsHoldingModel.


        :return: The valuation_date of this AdvicentNaviPlanRestApiNetWorthModelsHoldingModel.
        :rtype: datetime
        """
        return self._valuation_date

    @valuation_date.setter
    def valuation_date(self, valuation_date):
        """Sets the valuation_date of this AdvicentNaviPlanRestApiNetWorthModelsHoldingModel.


        :param valuation_date: The valuation_date of this AdvicentNaviPlanRestApiNetWorthModelsHoldingModel.
        :type valuation_date: datetime
        """

        self._valuation_date = valuation_date
