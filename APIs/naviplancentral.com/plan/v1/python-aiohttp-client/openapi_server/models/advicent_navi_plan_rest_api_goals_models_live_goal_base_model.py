# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.advicent_navi_plan_rest_api_goals_models_live_goal_base import AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase
from openapi_server import util


class AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_description: str=None, client_id: int=None, goals: List[AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase]=None, plan_description: str=None, plan_last_update_time: datetime=None):
        """AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel - a model defined in OpenAPI

        :param client_description: The client_description of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.
        :param client_id: The client_id of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.
        :param goals: The goals of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.
        :param plan_description: The plan_description of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.
        :param plan_last_update_time: The plan_last_update_time of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.
        """
        self.openapi_types = {
            'client_description': str,
            'client_id': int,
            'goals': List[AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase],
            'plan_description': str,
            'plan_last_update_time': datetime
        }

        self.attribute_map = {
            'client_description': 'clientDescription',
            'client_id': 'clientId',
            'goals': 'goals',
            'plan_description': 'planDescription',
            'plan_last_update_time': 'planLastUpdateTime'
        }

        self._client_description = client_description
        self._client_id = client_id
        self._goals = goals
        self._plan_description = plan_description
        self._plan_last_update_time = plan_last_update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_description(self):
        """Gets the client_description of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.


        :return: The client_description of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.
        :rtype: str
        """
        return self._client_description

    @client_description.setter
    def client_description(self, client_description):
        """Sets the client_description of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.


        :param client_description: The client_description of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.
        :type client_description: str
        """

        self._client_description = client_description

    @property
    def client_id(self):
        """Gets the client_id of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.


        :return: The client_id of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.
        :rtype: int
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.


        :param client_id: The client_id of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.
        :type client_id: int
        """

        self._client_id = client_id

    @property
    def goals(self):
        """Gets the goals of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.


        :return: The goals of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.
        :rtype: List[AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase]
        """
        return self._goals

    @goals.setter
    def goals(self, goals):
        """Sets the goals of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.


        :param goals: The goals of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.
        :type goals: List[AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase]
        """

        self._goals = goals

    @property
    def plan_description(self):
        """Gets the plan_description of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.


        :return: The plan_description of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.
        :rtype: str
        """
        return self._plan_description

    @plan_description.setter
    def plan_description(self, plan_description):
        """Sets the plan_description of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.


        :param plan_description: The plan_description of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.
        :type plan_description: str
        """

        self._plan_description = plan_description

    @property
    def plan_last_update_time(self):
        """Gets the plan_last_update_time of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.


        :return: The plan_last_update_time of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.
        :rtype: datetime
        """
        return self._plan_last_update_time

    @plan_last_update_time.setter
    def plan_last_update_time(self, plan_last_update_time):
        """Sets the plan_last_update_time of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.


        :param plan_last_update_time: The plan_last_update_time of this AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.
        :type plan_last_update_time: datetime
        """

        self._plan_last_update_time = plan_last_update_time
