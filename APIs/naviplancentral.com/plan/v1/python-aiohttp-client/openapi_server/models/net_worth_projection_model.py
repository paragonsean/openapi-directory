# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.object_link import ObjectLink
from openapi_server.models.projected_net_worth_summary import ProjectedNetWorthSummary
from openapi_server import util


class NetWorthProjectionModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links: List[ObjectLink]=None, net_worth: ProjectedNetWorthSummary=None):
        """NetWorthProjectionModel - a model defined in OpenAPI

        :param links: The links of this NetWorthProjectionModel.
        :param net_worth: The net_worth of this NetWorthProjectionModel.
        """
        self.openapi_types = {
            'links': List[ObjectLink],
            'net_worth': ProjectedNetWorthSummary
        }

        self.attribute_map = {
            'links': 'links',
            'net_worth': 'netWorth'
        }

        self._links = links
        self._net_worth = net_worth

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetWorthProjectionModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NetWorthProjectionModel of this NetWorthProjectionModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self):
        """Gets the links of this NetWorthProjectionModel.


        :return: The links of this NetWorthProjectionModel.
        :rtype: List[ObjectLink]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this NetWorthProjectionModel.


        :param links: The links of this NetWorthProjectionModel.
        :type links: List[ObjectLink]
        """

        self._links = links

    @property
    def net_worth(self):
        """Gets the net_worth of this NetWorthProjectionModel.


        :return: The net_worth of this NetWorthProjectionModel.
        :rtype: ProjectedNetWorthSummary
        """
        return self._net_worth

    @net_worth.setter
    def net_worth(self, net_worth):
        """Sets the net_worth of this NetWorthProjectionModel.


        :param net_worth: The net_worth of this NetWorthProjectionModel.
        :type net_worth: ProjectedNetWorthSummary
        """

        self._net_worth = net_worth
