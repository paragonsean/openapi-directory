# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency import Currency
from openapi_server.models.i_asset_id import IAssetId
from openapi_server.models.i_business_entity_activity import IBusinessEntityActivity
from openapi_server.models.i_liquidation_event import ILiquidationEvent
from openapi_server.models.model_date import ModelDate
from openapi_server.models.percent import Percent
from openapi_server import util


class IBusinessEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activities: List[IBusinessEntityActivity]=None, asset_id: IAssetId=None, business_type: str=None, business_type_formatted: str=None, current_annual_distributions: Currency=None, current_annual_dividends: Currency=None, current_annual_growth_rate: Percent=None, current_annual_net_income: Currency=None, entity_name: str=None, liquidation_event: ILiquidationEvent=None, market_valuation_date: ModelDate=None, market_value: Currency=None, owner: str=None, purchase_amount: Currency=None, purchase_date: ModelDate=None, standard_deviation: Percent=None):
        """IBusinessEntity - a model defined in OpenAPI

        :param activities: The activities of this IBusinessEntity.
        :param asset_id: The asset_id of this IBusinessEntity.
        :param business_type: The business_type of this IBusinessEntity.
        :param business_type_formatted: The business_type_formatted of this IBusinessEntity.
        :param current_annual_distributions: The current_annual_distributions of this IBusinessEntity.
        :param current_annual_dividends: The current_annual_dividends of this IBusinessEntity.
        :param current_annual_growth_rate: The current_annual_growth_rate of this IBusinessEntity.
        :param current_annual_net_income: The current_annual_net_income of this IBusinessEntity.
        :param entity_name: The entity_name of this IBusinessEntity.
        :param liquidation_event: The liquidation_event of this IBusinessEntity.
        :param market_valuation_date: The market_valuation_date of this IBusinessEntity.
        :param market_value: The market_value of this IBusinessEntity.
        :param owner: The owner of this IBusinessEntity.
        :param purchase_amount: The purchase_amount of this IBusinessEntity.
        :param purchase_date: The purchase_date of this IBusinessEntity.
        :param standard_deviation: The standard_deviation of this IBusinessEntity.
        """
        self.openapi_types = {
            'activities': List[IBusinessEntityActivity],
            'asset_id': IAssetId,
            'business_type': str,
            'business_type_formatted': str,
            'current_annual_distributions': Currency,
            'current_annual_dividends': Currency,
            'current_annual_growth_rate': Percent,
            'current_annual_net_income': Currency,
            'entity_name': str,
            'liquidation_event': ILiquidationEvent,
            'market_valuation_date': ModelDate,
            'market_value': Currency,
            'owner': str,
            'purchase_amount': Currency,
            'purchase_date': ModelDate,
            'standard_deviation': Percent
        }

        self.attribute_map = {
            'activities': 'activities',
            'asset_id': 'assetId',
            'business_type': 'businessType',
            'business_type_formatted': 'businessTypeFormatted',
            'current_annual_distributions': 'currentAnnualDistributions',
            'current_annual_dividends': 'currentAnnualDividends',
            'current_annual_growth_rate': 'currentAnnualGrowthRate',
            'current_annual_net_income': 'currentAnnualNetIncome',
            'entity_name': 'entityName',
            'liquidation_event': 'liquidationEvent',
            'market_valuation_date': 'marketValuationDate',
            'market_value': 'marketValue',
            'owner': 'owner',
            'purchase_amount': 'purchaseAmount',
            'purchase_date': 'purchaseDate',
            'standard_deviation': 'standardDeviation'
        }

        self._activities = activities
        self._asset_id = asset_id
        self._business_type = business_type
        self._business_type_formatted = business_type_formatted
        self._current_annual_distributions = current_annual_distributions
        self._current_annual_dividends = current_annual_dividends
        self._current_annual_growth_rate = current_annual_growth_rate
        self._current_annual_net_income = current_annual_net_income
        self._entity_name = entity_name
        self._liquidation_event = liquidation_event
        self._market_valuation_date = market_valuation_date
        self._market_value = market_value
        self._owner = owner
        self._purchase_amount = purchase_amount
        self._purchase_date = purchase_date
        self._standard_deviation = standard_deviation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IBusinessEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IBusinessEntity of this IBusinessEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activities(self):
        """Gets the activities of this IBusinessEntity.


        :return: The activities of this IBusinessEntity.
        :rtype: List[IBusinessEntityActivity]
        """
        return self._activities

    @activities.setter
    def activities(self, activities):
        """Sets the activities of this IBusinessEntity.


        :param activities: The activities of this IBusinessEntity.
        :type activities: List[IBusinessEntityActivity]
        """

        self._activities = activities

    @property
    def asset_id(self):
        """Gets the asset_id of this IBusinessEntity.


        :return: The asset_id of this IBusinessEntity.
        :rtype: IAssetId
        """
        return self._asset_id

    @asset_id.setter
    def asset_id(self, asset_id):
        """Sets the asset_id of this IBusinessEntity.


        :param asset_id: The asset_id of this IBusinessEntity.
        :type asset_id: IAssetId
        """

        self._asset_id = asset_id

    @property
    def business_type(self):
        """Gets the business_type of this IBusinessEntity.


        :return: The business_type of this IBusinessEntity.
        :rtype: str
        """
        return self._business_type

    @business_type.setter
    def business_type(self, business_type):
        """Sets the business_type of this IBusinessEntity.


        :param business_type: The business_type of this IBusinessEntity.
        :type business_type: str
        """
        allowed_values = ["Undefined", "LLC", "Partnership", "SCorporation", "CCorporation"]  # noqa: E501
        if business_type not in allowed_values:
            raise ValueError(
                "Invalid value for `business_type` ({0}), must be one of {1}"
                .format(business_type, allowed_values)
            )

        self._business_type = business_type

    @property
    def business_type_formatted(self):
        """Gets the business_type_formatted of this IBusinessEntity.


        :return: The business_type_formatted of this IBusinessEntity.
        :rtype: str
        """
        return self._business_type_formatted

    @business_type_formatted.setter
    def business_type_formatted(self, business_type_formatted):
        """Sets the business_type_formatted of this IBusinessEntity.


        :param business_type_formatted: The business_type_formatted of this IBusinessEntity.
        :type business_type_formatted: str
        """

        self._business_type_formatted = business_type_formatted

    @property
    def current_annual_distributions(self):
        """Gets the current_annual_distributions of this IBusinessEntity.


        :return: The current_annual_distributions of this IBusinessEntity.
        :rtype: Currency
        """
        return self._current_annual_distributions

    @current_annual_distributions.setter
    def current_annual_distributions(self, current_annual_distributions):
        """Sets the current_annual_distributions of this IBusinessEntity.


        :param current_annual_distributions: The current_annual_distributions of this IBusinessEntity.
        :type current_annual_distributions: Currency
        """

        self._current_annual_distributions = current_annual_distributions

    @property
    def current_annual_dividends(self):
        """Gets the current_annual_dividends of this IBusinessEntity.


        :return: The current_annual_dividends of this IBusinessEntity.
        :rtype: Currency
        """
        return self._current_annual_dividends

    @current_annual_dividends.setter
    def current_annual_dividends(self, current_annual_dividends):
        """Sets the current_annual_dividends of this IBusinessEntity.


        :param current_annual_dividends: The current_annual_dividends of this IBusinessEntity.
        :type current_annual_dividends: Currency
        """

        self._current_annual_dividends = current_annual_dividends

    @property
    def current_annual_growth_rate(self):
        """Gets the current_annual_growth_rate of this IBusinessEntity.


        :return: The current_annual_growth_rate of this IBusinessEntity.
        :rtype: Percent
        """
        return self._current_annual_growth_rate

    @current_annual_growth_rate.setter
    def current_annual_growth_rate(self, current_annual_growth_rate):
        """Sets the current_annual_growth_rate of this IBusinessEntity.


        :param current_annual_growth_rate: The current_annual_growth_rate of this IBusinessEntity.
        :type current_annual_growth_rate: Percent
        """

        self._current_annual_growth_rate = current_annual_growth_rate

    @property
    def current_annual_net_income(self):
        """Gets the current_annual_net_income of this IBusinessEntity.


        :return: The current_annual_net_income of this IBusinessEntity.
        :rtype: Currency
        """
        return self._current_annual_net_income

    @current_annual_net_income.setter
    def current_annual_net_income(self, current_annual_net_income):
        """Sets the current_annual_net_income of this IBusinessEntity.


        :param current_annual_net_income: The current_annual_net_income of this IBusinessEntity.
        :type current_annual_net_income: Currency
        """

        self._current_annual_net_income = current_annual_net_income

    @property
    def entity_name(self):
        """Gets the entity_name of this IBusinessEntity.


        :return: The entity_name of this IBusinessEntity.
        :rtype: str
        """
        return self._entity_name

    @entity_name.setter
    def entity_name(self, entity_name):
        """Sets the entity_name of this IBusinessEntity.


        :param entity_name: The entity_name of this IBusinessEntity.
        :type entity_name: str
        """

        self._entity_name = entity_name

    @property
    def liquidation_event(self):
        """Gets the liquidation_event of this IBusinessEntity.


        :return: The liquidation_event of this IBusinessEntity.
        :rtype: ILiquidationEvent
        """
        return self._liquidation_event

    @liquidation_event.setter
    def liquidation_event(self, liquidation_event):
        """Sets the liquidation_event of this IBusinessEntity.


        :param liquidation_event: The liquidation_event of this IBusinessEntity.
        :type liquidation_event: ILiquidationEvent
        """

        self._liquidation_event = liquidation_event

    @property
    def market_valuation_date(self):
        """Gets the market_valuation_date of this IBusinessEntity.


        :return: The market_valuation_date of this IBusinessEntity.
        :rtype: ModelDate
        """
        return self._market_valuation_date

    @market_valuation_date.setter
    def market_valuation_date(self, market_valuation_date):
        """Sets the market_valuation_date of this IBusinessEntity.


        :param market_valuation_date: The market_valuation_date of this IBusinessEntity.
        :type market_valuation_date: ModelDate
        """

        self._market_valuation_date = market_valuation_date

    @property
    def market_value(self):
        """Gets the market_value of this IBusinessEntity.


        :return: The market_value of this IBusinessEntity.
        :rtype: Currency
        """
        return self._market_value

    @market_value.setter
    def market_value(self, market_value):
        """Sets the market_value of this IBusinessEntity.


        :param market_value: The market_value of this IBusinessEntity.
        :type market_value: Currency
        """

        self._market_value = market_value

    @property
    def owner(self):
        """Gets the owner of this IBusinessEntity.


        :return: The owner of this IBusinessEntity.
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this IBusinessEntity.


        :param owner: The owner of this IBusinessEntity.
        :type owner: str
        """

        self._owner = owner

    @property
    def purchase_amount(self):
        """Gets the purchase_amount of this IBusinessEntity.


        :return: The purchase_amount of this IBusinessEntity.
        :rtype: Currency
        """
        return self._purchase_amount

    @purchase_amount.setter
    def purchase_amount(self, purchase_amount):
        """Sets the purchase_amount of this IBusinessEntity.


        :param purchase_amount: The purchase_amount of this IBusinessEntity.
        :type purchase_amount: Currency
        """

        self._purchase_amount = purchase_amount

    @property
    def purchase_date(self):
        """Gets the purchase_date of this IBusinessEntity.


        :return: The purchase_date of this IBusinessEntity.
        :rtype: ModelDate
        """
        return self._purchase_date

    @purchase_date.setter
    def purchase_date(self, purchase_date):
        """Sets the purchase_date of this IBusinessEntity.


        :param purchase_date: The purchase_date of this IBusinessEntity.
        :type purchase_date: ModelDate
        """

        self._purchase_date = purchase_date

    @property
    def standard_deviation(self):
        """Gets the standard_deviation of this IBusinessEntity.


        :return: The standard_deviation of this IBusinessEntity.
        :rtype: Percent
        """
        return self._standard_deviation

    @standard_deviation.setter
    def standard_deviation(self, standard_deviation):
        """Sets the standard_deviation of this IBusinessEntity.


        :param standard_deviation: The standard_deviation of this IBusinessEntity.
        :type standard_deviation: Percent
        """

        self._standard_deviation = standard_deviation
