# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.advicent_domain_logic_goal_what_if_retirement_goal_adjustments import AdvicentDomainLogicGoalWhatIfRetirementGoalAdjustments
from openapi_server.models.advicent_navi_plan_rest_api_goal_adjustments_coverage_projections import AdvicentNaviPlanRestApiGoalAdjustmentsCoverageProjections
from openapi_server import util


class AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, adjusted_values: AdvicentDomainLogicGoalWhatIfRetirementGoalAdjustments=None, created: datetime=None, goal_id: int=None, projected_results: AdvicentNaviPlanRestApiGoalAdjustmentsCoverageProjections=None):
        """AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel - a model defined in OpenAPI

        :param adjusted_values: The adjusted_values of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel.
        :param created: The created of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel.
        :param goal_id: The goal_id of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel.
        :param projected_results: The projected_results of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel.
        """
        self.openapi_types = {
            'adjusted_values': AdvicentDomainLogicGoalWhatIfRetirementGoalAdjustments,
            'created': datetime,
            'goal_id': int,
            'projected_results': AdvicentNaviPlanRestApiGoalAdjustmentsCoverageProjections
        }

        self.attribute_map = {
            'adjusted_values': 'adjustedValues',
            'created': 'created',
            'goal_id': 'goalId',
            'projected_results': 'projectedResults'
        }

        self._adjusted_values = adjusted_values
        self._created = created
        self._goal_id = goal_id
        self._projected_results = projected_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def adjusted_values(self):
        """Gets the adjusted_values of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel.


        :return: The adjusted_values of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel.
        :rtype: AdvicentDomainLogicGoalWhatIfRetirementGoalAdjustments
        """
        return self._adjusted_values

    @adjusted_values.setter
    def adjusted_values(self, adjusted_values):
        """Sets the adjusted_values of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel.


        :param adjusted_values: The adjusted_values of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel.
        :type adjusted_values: AdvicentDomainLogicGoalWhatIfRetirementGoalAdjustments
        """

        self._adjusted_values = adjusted_values

    @property
    def created(self):
        """Gets the created of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel.


        :return: The created of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel.


        :param created: The created of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel.
        :type created: datetime
        """

        self._created = created

    @property
    def goal_id(self):
        """Gets the goal_id of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel.


        :return: The goal_id of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel.
        :rtype: int
        """
        return self._goal_id

    @goal_id.setter
    def goal_id(self, goal_id):
        """Sets the goal_id of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel.


        :param goal_id: The goal_id of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel.
        :type goal_id: int
        """

        self._goal_id = goal_id

    @property
    def projected_results(self):
        """Gets the projected_results of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel.


        :return: The projected_results of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel.
        :rtype: AdvicentNaviPlanRestApiGoalAdjustmentsCoverageProjections
        """
        return self._projected_results

    @projected_results.setter
    def projected_results(self, projected_results):
        """Sets the projected_results of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel.


        :param projected_results: The projected_results of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel.
        :type projected_results: AdvicentNaviPlanRestApiGoalAdjustmentsCoverageProjections
        """

        self._projected_results = projected_results
