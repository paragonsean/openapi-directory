# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.i_common_share_class_details import ICommonShareClassDetails
from openapi_server.models.i_investment_account_ownership_data import IInvestmentAccountOwnershipData
from openapi_server.models.i_ownership_data import IOwnershipData
from openapi_server.models.i_preferred_share_class_details import IPreferredShareClassDetails
from openapi_server import util


class IOwnershipDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, common: List[IOwnershipData]=None, common_shares_details: List[ICommonShareClassDetails]=None, preferred: List[IOwnershipData]=None, preferred_shares_details: List[IPreferredShareClassDetails]=None, shareholder_percent_ownership: List[IInvestmentAccountOwnershipData]=None):
        """IOwnershipDetails - a model defined in OpenAPI

        :param common: The common of this IOwnershipDetails.
        :param common_shares_details: The common_shares_details of this IOwnershipDetails.
        :param preferred: The preferred of this IOwnershipDetails.
        :param preferred_shares_details: The preferred_shares_details of this IOwnershipDetails.
        :param shareholder_percent_ownership: The shareholder_percent_ownership of this IOwnershipDetails.
        """
        self.openapi_types = {
            'common': List[IOwnershipData],
            'common_shares_details': List[ICommonShareClassDetails],
            'preferred': List[IOwnershipData],
            'preferred_shares_details': List[IPreferredShareClassDetails],
            'shareholder_percent_ownership': List[IInvestmentAccountOwnershipData]
        }

        self.attribute_map = {
            'common': 'common',
            'common_shares_details': 'commonSharesDetails',
            'preferred': 'preferred',
            'preferred_shares_details': 'preferredSharesDetails',
            'shareholder_percent_ownership': 'shareholderPercentOwnership'
        }

        self._common = common
        self._common_shares_details = common_shares_details
        self._preferred = preferred
        self._preferred_shares_details = preferred_shares_details
        self._shareholder_percent_ownership = shareholder_percent_ownership

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IOwnershipDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IOwnershipDetails of this IOwnershipDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def common(self):
        """Gets the common of this IOwnershipDetails.


        :return: The common of this IOwnershipDetails.
        :rtype: List[IOwnershipData]
        """
        return self._common

    @common.setter
    def common(self, common):
        """Sets the common of this IOwnershipDetails.


        :param common: The common of this IOwnershipDetails.
        :type common: List[IOwnershipData]
        """

        self._common = common

    @property
    def common_shares_details(self):
        """Gets the common_shares_details of this IOwnershipDetails.


        :return: The common_shares_details of this IOwnershipDetails.
        :rtype: List[ICommonShareClassDetails]
        """
        return self._common_shares_details

    @common_shares_details.setter
    def common_shares_details(self, common_shares_details):
        """Sets the common_shares_details of this IOwnershipDetails.


        :param common_shares_details: The common_shares_details of this IOwnershipDetails.
        :type common_shares_details: List[ICommonShareClassDetails]
        """

        self._common_shares_details = common_shares_details

    @property
    def preferred(self):
        """Gets the preferred of this IOwnershipDetails.


        :return: The preferred of this IOwnershipDetails.
        :rtype: List[IOwnershipData]
        """
        return self._preferred

    @preferred.setter
    def preferred(self, preferred):
        """Sets the preferred of this IOwnershipDetails.


        :param preferred: The preferred of this IOwnershipDetails.
        :type preferred: List[IOwnershipData]
        """

        self._preferred = preferred

    @property
    def preferred_shares_details(self):
        """Gets the preferred_shares_details of this IOwnershipDetails.


        :return: The preferred_shares_details of this IOwnershipDetails.
        :rtype: List[IPreferredShareClassDetails]
        """
        return self._preferred_shares_details

    @preferred_shares_details.setter
    def preferred_shares_details(self, preferred_shares_details):
        """Sets the preferred_shares_details of this IOwnershipDetails.


        :param preferred_shares_details: The preferred_shares_details of this IOwnershipDetails.
        :type preferred_shares_details: List[IPreferredShareClassDetails]
        """

        self._preferred_shares_details = preferred_shares_details

    @property
    def shareholder_percent_ownership(self):
        """Gets the shareholder_percent_ownership of this IOwnershipDetails.


        :return: The shareholder_percent_ownership of this IOwnershipDetails.
        :rtype: List[IInvestmentAccountOwnershipData]
        """
        return self._shareholder_percent_ownership

    @shareholder_percent_ownership.setter
    def shareholder_percent_ownership(self, shareholder_percent_ownership):
        """Sets the shareholder_percent_ownership of this IOwnershipDetails.


        :param shareholder_percent_ownership: The shareholder_percent_ownership of this IOwnershipDetails.
        :type shareholder_percent_ownership: List[IInvestmentAccountOwnershipData]
        """

        self._shareholder_percent_ownership = shareholder_percent_ownership
