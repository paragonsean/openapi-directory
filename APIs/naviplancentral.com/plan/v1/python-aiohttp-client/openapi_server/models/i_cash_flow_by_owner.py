# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.i_cash_flow import ICashFlow
from openapi_server import util


class ICashFlowByOwner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_cash_flow: ICashFlow=None, co_client_cash_flow: ICashFlow=None, total_cash_flow: ICashFlow=None):
        """ICashFlowByOwner - a model defined in OpenAPI

        :param client_cash_flow: The client_cash_flow of this ICashFlowByOwner.
        :param co_client_cash_flow: The co_client_cash_flow of this ICashFlowByOwner.
        :param total_cash_flow: The total_cash_flow of this ICashFlowByOwner.
        """
        self.openapi_types = {
            'client_cash_flow': ICashFlow,
            'co_client_cash_flow': ICashFlow,
            'total_cash_flow': ICashFlow
        }

        self.attribute_map = {
            'client_cash_flow': 'clientCashFlow',
            'co_client_cash_flow': 'coClientCashFlow',
            'total_cash_flow': 'totalCashFlow'
        }

        self._client_cash_flow = client_cash_flow
        self._co_client_cash_flow = co_client_cash_flow
        self._total_cash_flow = total_cash_flow

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ICashFlowByOwner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ICashFlowByOwner of this ICashFlowByOwner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_cash_flow(self):
        """Gets the client_cash_flow of this ICashFlowByOwner.


        :return: The client_cash_flow of this ICashFlowByOwner.
        :rtype: ICashFlow
        """
        return self._client_cash_flow

    @client_cash_flow.setter
    def client_cash_flow(self, client_cash_flow):
        """Sets the client_cash_flow of this ICashFlowByOwner.


        :param client_cash_flow: The client_cash_flow of this ICashFlowByOwner.
        :type client_cash_flow: ICashFlow
        """

        self._client_cash_flow = client_cash_flow

    @property
    def co_client_cash_flow(self):
        """Gets the co_client_cash_flow of this ICashFlowByOwner.


        :return: The co_client_cash_flow of this ICashFlowByOwner.
        :rtype: ICashFlow
        """
        return self._co_client_cash_flow

    @co_client_cash_flow.setter
    def co_client_cash_flow(self, co_client_cash_flow):
        """Sets the co_client_cash_flow of this ICashFlowByOwner.


        :param co_client_cash_flow: The co_client_cash_flow of this ICashFlowByOwner.
        :type co_client_cash_flow: ICashFlow
        """

        self._co_client_cash_flow = co_client_cash_flow

    @property
    def total_cash_flow(self):
        """Gets the total_cash_flow of this ICashFlowByOwner.


        :return: The total_cash_flow of this ICashFlowByOwner.
        :rtype: ICashFlow
        """
        return self._total_cash_flow

    @total_cash_flow.setter
    def total_cash_flow(self, total_cash_flow):
        """Sets the total_cash_flow of this ICashFlowByOwner.


        :param total_cash_flow: The total_cash_flow of this ICashFlowByOwner.
        :type total_cash_flow: ICashFlow
        """

        self._total_cash_flow = total_cash_flow
