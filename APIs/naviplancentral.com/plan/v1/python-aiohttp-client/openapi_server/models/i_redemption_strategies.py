# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.i_lump_sum_redemption_strategy import ILumpSumRedemptionStrategy
from openapi_server.models.i_periodic_redemption_strategy import IPeriodicRedemptionStrategy
from openapi_server import util


class IRedemptionStrategies(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lump_sum_redemption_strategies: List[ILumpSumRedemptionStrategy]=None, periodic_redemption_strategies: List[IPeriodicRedemptionStrategy]=None):
        """IRedemptionStrategies - a model defined in OpenAPI

        :param lump_sum_redemption_strategies: The lump_sum_redemption_strategies of this IRedemptionStrategies.
        :param periodic_redemption_strategies: The periodic_redemption_strategies of this IRedemptionStrategies.
        """
        self.openapi_types = {
            'lump_sum_redemption_strategies': List[ILumpSumRedemptionStrategy],
            'periodic_redemption_strategies': List[IPeriodicRedemptionStrategy]
        }

        self.attribute_map = {
            'lump_sum_redemption_strategies': 'lumpSumRedemptionStrategies',
            'periodic_redemption_strategies': 'periodicRedemptionStrategies'
        }

        self._lump_sum_redemption_strategies = lump_sum_redemption_strategies
        self._periodic_redemption_strategies = periodic_redemption_strategies

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IRedemptionStrategies':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IRedemptionStrategies of this IRedemptionStrategies.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lump_sum_redemption_strategies(self):
        """Gets the lump_sum_redemption_strategies of this IRedemptionStrategies.


        :return: The lump_sum_redemption_strategies of this IRedemptionStrategies.
        :rtype: List[ILumpSumRedemptionStrategy]
        """
        return self._lump_sum_redemption_strategies

    @lump_sum_redemption_strategies.setter
    def lump_sum_redemption_strategies(self, lump_sum_redemption_strategies):
        """Sets the lump_sum_redemption_strategies of this IRedemptionStrategies.


        :param lump_sum_redemption_strategies: The lump_sum_redemption_strategies of this IRedemptionStrategies.
        :type lump_sum_redemption_strategies: List[ILumpSumRedemptionStrategy]
        """

        self._lump_sum_redemption_strategies = lump_sum_redemption_strategies

    @property
    def periodic_redemption_strategies(self):
        """Gets the periodic_redemption_strategies of this IRedemptionStrategies.


        :return: The periodic_redemption_strategies of this IRedemptionStrategies.
        :rtype: List[IPeriodicRedemptionStrategy]
        """
        return self._periodic_redemption_strategies

    @periodic_redemption_strategies.setter
    def periodic_redemption_strategies(self, periodic_redemption_strategies):
        """Sets the periodic_redemption_strategies of this IRedemptionStrategies.


        :param periodic_redemption_strategies: The periodic_redemption_strategies of this IRedemptionStrategies.
        :type periodic_redemption_strategies: List[IPeriodicRedemptionStrategy]
        """

        self._periodic_redemption_strategies = periodic_redemption_strategies
