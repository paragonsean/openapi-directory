# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.growth_rate_values import GrowthRateValues
from openapi_server.models.model_date import ModelDate
from openapi_server.models.percent_or_currency import PercentOrCurrency
from openapi_server import util


class ILumpSumRedemptionStrategy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount_or_percent_of_value: PercentOrCurrency=None, index_rate: GrowthRateValues=None, redemption_date: ModelDate=None):
        """ILumpSumRedemptionStrategy - a model defined in OpenAPI

        :param amount_or_percent_of_value: The amount_or_percent_of_value of this ILumpSumRedemptionStrategy.
        :param index_rate: The index_rate of this ILumpSumRedemptionStrategy.
        :param redemption_date: The redemption_date of this ILumpSumRedemptionStrategy.
        """
        self.openapi_types = {
            'amount_or_percent_of_value': PercentOrCurrency,
            'index_rate': GrowthRateValues,
            'redemption_date': ModelDate
        }

        self.attribute_map = {
            'amount_or_percent_of_value': 'amountOrPercentOfValue',
            'index_rate': 'indexRate',
            'redemption_date': 'redemptionDate'
        }

        self._amount_or_percent_of_value = amount_or_percent_of_value
        self._index_rate = index_rate
        self._redemption_date = redemption_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ILumpSumRedemptionStrategy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ILumpSumRedemptionStrategy of this ILumpSumRedemptionStrategy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount_or_percent_of_value(self):
        """Gets the amount_or_percent_of_value of this ILumpSumRedemptionStrategy.


        :return: The amount_or_percent_of_value of this ILumpSumRedemptionStrategy.
        :rtype: PercentOrCurrency
        """
        return self._amount_or_percent_of_value

    @amount_or_percent_of_value.setter
    def amount_or_percent_of_value(self, amount_or_percent_of_value):
        """Sets the amount_or_percent_of_value of this ILumpSumRedemptionStrategy.


        :param amount_or_percent_of_value: The amount_or_percent_of_value of this ILumpSumRedemptionStrategy.
        :type amount_or_percent_of_value: PercentOrCurrency
        """

        self._amount_or_percent_of_value = amount_or_percent_of_value

    @property
    def index_rate(self):
        """Gets the index_rate of this ILumpSumRedemptionStrategy.


        :return: The index_rate of this ILumpSumRedemptionStrategy.
        :rtype: GrowthRateValues
        """
        return self._index_rate

    @index_rate.setter
    def index_rate(self, index_rate):
        """Sets the index_rate of this ILumpSumRedemptionStrategy.


        :param index_rate: The index_rate of this ILumpSumRedemptionStrategy.
        :type index_rate: GrowthRateValues
        """

        self._index_rate = index_rate

    @property
    def redemption_date(self):
        """Gets the redemption_date of this ILumpSumRedemptionStrategy.


        :return: The redemption_date of this ILumpSumRedemptionStrategy.
        :rtype: ModelDate
        """
        return self._redemption_date

    @redemption_date.setter
    def redemption_date(self, redemption_date):
        """Sets the redemption_date of this ILumpSumRedemptionStrategy.


        :param redemption_date: The redemption_date of this ILumpSumRedemptionStrategy.
        :type redemption_date: ModelDate
        """

        self._redemption_date = redemption_date
