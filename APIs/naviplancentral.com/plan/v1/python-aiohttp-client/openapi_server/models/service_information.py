# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServiceInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, altair_connection_status: bool=None, name: str=None, pom_version: str=None, service_version: str=None, status: str=None):
        """ServiceInformation - a model defined in OpenAPI

        :param altair_connection_status: The altair_connection_status of this ServiceInformation.
        :param name: The name of this ServiceInformation.
        :param pom_version: The pom_version of this ServiceInformation.
        :param service_version: The service_version of this ServiceInformation.
        :param status: The status of this ServiceInformation.
        """
        self.openapi_types = {
            'altair_connection_status': bool,
            'name': str,
            'pom_version': str,
            'service_version': str,
            'status': str
        }

        self.attribute_map = {
            'altair_connection_status': 'altairConnectionStatus',
            'name': 'name',
            'pom_version': 'pomVersion',
            'service_version': 'serviceVersion',
            'status': 'status'
        }

        self._altair_connection_status = altair_connection_status
        self._name = name
        self._pom_version = pom_version
        self._service_version = service_version
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceInformation of this ServiceInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def altair_connection_status(self):
        """Gets the altair_connection_status of this ServiceInformation.


        :return: The altair_connection_status of this ServiceInformation.
        :rtype: bool
        """
        return self._altair_connection_status

    @altair_connection_status.setter
    def altair_connection_status(self, altair_connection_status):
        """Sets the altair_connection_status of this ServiceInformation.


        :param altair_connection_status: The altair_connection_status of this ServiceInformation.
        :type altair_connection_status: bool
        """

        self._altair_connection_status = altair_connection_status

    @property
    def name(self):
        """Gets the name of this ServiceInformation.


        :return: The name of this ServiceInformation.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ServiceInformation.


        :param name: The name of this ServiceInformation.
        :type name: str
        """

        self._name = name

    @property
    def pom_version(self):
        """Gets the pom_version of this ServiceInformation.


        :return: The pom_version of this ServiceInformation.
        :rtype: str
        """
        return self._pom_version

    @pom_version.setter
    def pom_version(self, pom_version):
        """Sets the pom_version of this ServiceInformation.


        :param pom_version: The pom_version of this ServiceInformation.
        :type pom_version: str
        """

        self._pom_version = pom_version

    @property
    def service_version(self):
        """Gets the service_version of this ServiceInformation.


        :return: The service_version of this ServiceInformation.
        :rtype: str
        """
        return self._service_version

    @service_version.setter
    def service_version(self, service_version):
        """Sets the service_version of this ServiceInformation.


        :param service_version: The service_version of this ServiceInformation.
        :type service_version: str
        """

        self._service_version = service_version

    @property
    def status(self):
        """Gets the status of this ServiceInformation.


        :return: The status of this ServiceInformation.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ServiceInformation.


        :param status: The status of this ServiceInformation.
        :type status: str
        """

        self._status = status
