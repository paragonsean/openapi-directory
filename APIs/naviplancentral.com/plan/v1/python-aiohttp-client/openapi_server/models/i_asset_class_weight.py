# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency import Currency
from openapi_server.models.percent import Percent
from openapi_server import util


class IAssetClassWeight(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dollar_value: Currency=None, percentage: Percent=None):
        """IAssetClassWeight - a model defined in OpenAPI

        :param dollar_value: The dollar_value of this IAssetClassWeight.
        :param percentage: The percentage of this IAssetClassWeight.
        """
        self.openapi_types = {
            'dollar_value': Currency,
            'percentage': Percent
        }

        self.attribute_map = {
            'dollar_value': 'dollarValue',
            'percentage': 'percentage'
        }

        self._dollar_value = dollar_value
        self._percentage = percentage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IAssetClassWeight':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IAssetClassWeight of this IAssetClassWeight.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dollar_value(self):
        """Gets the dollar_value of this IAssetClassWeight.


        :return: The dollar_value of this IAssetClassWeight.
        :rtype: Currency
        """
        return self._dollar_value

    @dollar_value.setter
    def dollar_value(self, dollar_value):
        """Sets the dollar_value of this IAssetClassWeight.


        :param dollar_value: The dollar_value of this IAssetClassWeight.
        :type dollar_value: Currency
        """

        self._dollar_value = dollar_value

    @property
    def percentage(self):
        """Gets the percentage of this IAssetClassWeight.


        :return: The percentage of this IAssetClassWeight.
        :rtype: Percent
        """
        return self._percentage

    @percentage.setter
    def percentage(self, percentage):
        """Sets the percentage of this IAssetClassWeight.


        :param percentage: The percentage of this IAssetClassWeight.
        :type percentage: Percent
        """

        self._percentage = percentage
