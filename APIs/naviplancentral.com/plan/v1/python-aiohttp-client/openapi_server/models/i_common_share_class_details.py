# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.i_share_class_structure import IShareClassStructure
from openapi_server import util


class ICommonShareClassDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, share_class_structure: IShareClassStructure=None):
        """ICommonShareClassDetails - a model defined in OpenAPI

        :param share_class_structure: The share_class_structure of this ICommonShareClassDetails.
        """
        self.openapi_types = {
            'share_class_structure': IShareClassStructure
        }

        self.attribute_map = {
            'share_class_structure': 'shareClassStructure'
        }

        self._share_class_structure = share_class_structure

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ICommonShareClassDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ICommonShareClassDetails of this ICommonShareClassDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def share_class_structure(self):
        """Gets the share_class_structure of this ICommonShareClassDetails.


        :return: The share_class_structure of this ICommonShareClassDetails.
        :rtype: IShareClassStructure
        """
        return self._share_class_structure

    @share_class_structure.setter
    def share_class_structure(self, share_class_structure):
        """Sets the share_class_structure of this ICommonShareClassDetails.


        :param share_class_structure: The share_class_structure of this ICommonShareClassDetails.
        :type share_class_structure: IShareClassStructure
        """

        self._share_class_structure = share_class_structure
