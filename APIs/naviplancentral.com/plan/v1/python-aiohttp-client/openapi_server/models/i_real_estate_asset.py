# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency import Currency
from openapi_server.models.currency_with_date import CurrencyWithDate
from openapi_server.models.model_date import ModelDate
from openapi_server.models.percent import Percent
from openapi_server import util


class IRealEstateAsset(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_year_net_rental_income: Currency=None, description: str=None, id: str=None, market_value_as_of: CurrencyWithDate=None, owner: str=None, pre_tax_growth_rate: Percent=None, purchase_amount: Currency=None, purchase_date: ModelDate=None, standard_deviation: Percent=None, start_of_year_cost_basis: Currency=None, start_of_year_market_value: Currency=None):
        """IRealEstateAsset - a model defined in OpenAPI

        :param current_year_net_rental_income: The current_year_net_rental_income of this IRealEstateAsset.
        :param description: The description of this IRealEstateAsset.
        :param id: The id of this IRealEstateAsset.
        :param market_value_as_of: The market_value_as_of of this IRealEstateAsset.
        :param owner: The owner of this IRealEstateAsset.
        :param pre_tax_growth_rate: The pre_tax_growth_rate of this IRealEstateAsset.
        :param purchase_amount: The purchase_amount of this IRealEstateAsset.
        :param purchase_date: The purchase_date of this IRealEstateAsset.
        :param standard_deviation: The standard_deviation of this IRealEstateAsset.
        :param start_of_year_cost_basis: The start_of_year_cost_basis of this IRealEstateAsset.
        :param start_of_year_market_value: The start_of_year_market_value of this IRealEstateAsset.
        """
        self.openapi_types = {
            'current_year_net_rental_income': Currency,
            'description': str,
            'id': str,
            'market_value_as_of': CurrencyWithDate,
            'owner': str,
            'pre_tax_growth_rate': Percent,
            'purchase_amount': Currency,
            'purchase_date': ModelDate,
            'standard_deviation': Percent,
            'start_of_year_cost_basis': Currency,
            'start_of_year_market_value': Currency
        }

        self.attribute_map = {
            'current_year_net_rental_income': 'currentYearNetRentalIncome',
            'description': 'description',
            'id': 'id',
            'market_value_as_of': 'marketValueAsOf',
            'owner': 'owner',
            'pre_tax_growth_rate': 'preTaxGrowthRate',
            'purchase_amount': 'purchaseAmount',
            'purchase_date': 'purchaseDate',
            'standard_deviation': 'standardDeviation',
            'start_of_year_cost_basis': 'startOfYearCostBasis',
            'start_of_year_market_value': 'startOfYearMarketValue'
        }

        self._current_year_net_rental_income = current_year_net_rental_income
        self._description = description
        self._id = id
        self._market_value_as_of = market_value_as_of
        self._owner = owner
        self._pre_tax_growth_rate = pre_tax_growth_rate
        self._purchase_amount = purchase_amount
        self._purchase_date = purchase_date
        self._standard_deviation = standard_deviation
        self._start_of_year_cost_basis = start_of_year_cost_basis
        self._start_of_year_market_value = start_of_year_market_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IRealEstateAsset':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IRealEstateAsset of this IRealEstateAsset.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_year_net_rental_income(self):
        """Gets the current_year_net_rental_income of this IRealEstateAsset.


        :return: The current_year_net_rental_income of this IRealEstateAsset.
        :rtype: Currency
        """
        return self._current_year_net_rental_income

    @current_year_net_rental_income.setter
    def current_year_net_rental_income(self, current_year_net_rental_income):
        """Sets the current_year_net_rental_income of this IRealEstateAsset.


        :param current_year_net_rental_income: The current_year_net_rental_income of this IRealEstateAsset.
        :type current_year_net_rental_income: Currency
        """

        self._current_year_net_rental_income = current_year_net_rental_income

    @property
    def description(self):
        """Gets the description of this IRealEstateAsset.


        :return: The description of this IRealEstateAsset.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this IRealEstateAsset.


        :param description: The description of this IRealEstateAsset.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this IRealEstateAsset.


        :return: The id of this IRealEstateAsset.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this IRealEstateAsset.


        :param id: The id of this IRealEstateAsset.
        :type id: str
        """

        self._id = id

    @property
    def market_value_as_of(self):
        """Gets the market_value_as_of of this IRealEstateAsset.


        :return: The market_value_as_of of this IRealEstateAsset.
        :rtype: CurrencyWithDate
        """
        return self._market_value_as_of

    @market_value_as_of.setter
    def market_value_as_of(self, market_value_as_of):
        """Sets the market_value_as_of of this IRealEstateAsset.


        :param market_value_as_of: The market_value_as_of of this IRealEstateAsset.
        :type market_value_as_of: CurrencyWithDate
        """

        self._market_value_as_of = market_value_as_of

    @property
    def owner(self):
        """Gets the owner of this IRealEstateAsset.


        :return: The owner of this IRealEstateAsset.
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this IRealEstateAsset.


        :param owner: The owner of this IRealEstateAsset.
        :type owner: str
        """
        allowed_values = ["All", "Head1", "Head2", "NonHead1", "NonHead2", "NonHead3", "NonHead4", "NonHead5", "NonHead6", "NonHead7", "NonHead8", "NonHead9", "CommunityProperty", "Joint", "Other", "AllDependents", "AllFamilyMembers", "Corporation"]  # noqa: E501
        if owner not in allowed_values:
            raise ValueError(
                "Invalid value for `owner` ({0}), must be one of {1}"
                .format(owner, allowed_values)
            )

        self._owner = owner

    @property
    def pre_tax_growth_rate(self):
        """Gets the pre_tax_growth_rate of this IRealEstateAsset.


        :return: The pre_tax_growth_rate of this IRealEstateAsset.
        :rtype: Percent
        """
        return self._pre_tax_growth_rate

    @pre_tax_growth_rate.setter
    def pre_tax_growth_rate(self, pre_tax_growth_rate):
        """Sets the pre_tax_growth_rate of this IRealEstateAsset.


        :param pre_tax_growth_rate: The pre_tax_growth_rate of this IRealEstateAsset.
        :type pre_tax_growth_rate: Percent
        """

        self._pre_tax_growth_rate = pre_tax_growth_rate

    @property
    def purchase_amount(self):
        """Gets the purchase_amount of this IRealEstateAsset.


        :return: The purchase_amount of this IRealEstateAsset.
        :rtype: Currency
        """
        return self._purchase_amount

    @purchase_amount.setter
    def purchase_amount(self, purchase_amount):
        """Sets the purchase_amount of this IRealEstateAsset.


        :param purchase_amount: The purchase_amount of this IRealEstateAsset.
        :type purchase_amount: Currency
        """

        self._purchase_amount = purchase_amount

    @property
    def purchase_date(self):
        """Gets the purchase_date of this IRealEstateAsset.


        :return: The purchase_date of this IRealEstateAsset.
        :rtype: ModelDate
        """
        return self._purchase_date

    @purchase_date.setter
    def purchase_date(self, purchase_date):
        """Sets the purchase_date of this IRealEstateAsset.


        :param purchase_date: The purchase_date of this IRealEstateAsset.
        :type purchase_date: ModelDate
        """

        self._purchase_date = purchase_date

    @property
    def standard_deviation(self):
        """Gets the standard_deviation of this IRealEstateAsset.


        :return: The standard_deviation of this IRealEstateAsset.
        :rtype: Percent
        """
        return self._standard_deviation

    @standard_deviation.setter
    def standard_deviation(self, standard_deviation):
        """Sets the standard_deviation of this IRealEstateAsset.


        :param standard_deviation: The standard_deviation of this IRealEstateAsset.
        :type standard_deviation: Percent
        """

        self._standard_deviation = standard_deviation

    @property
    def start_of_year_cost_basis(self):
        """Gets the start_of_year_cost_basis of this IRealEstateAsset.


        :return: The start_of_year_cost_basis of this IRealEstateAsset.
        :rtype: Currency
        """
        return self._start_of_year_cost_basis

    @start_of_year_cost_basis.setter
    def start_of_year_cost_basis(self, start_of_year_cost_basis):
        """Sets the start_of_year_cost_basis of this IRealEstateAsset.


        :param start_of_year_cost_basis: The start_of_year_cost_basis of this IRealEstateAsset.
        :type start_of_year_cost_basis: Currency
        """

        self._start_of_year_cost_basis = start_of_year_cost_basis

    @property
    def start_of_year_market_value(self):
        """Gets the start_of_year_market_value of this IRealEstateAsset.


        :return: The start_of_year_market_value of this IRealEstateAsset.
        :rtype: Currency
        """
        return self._start_of_year_market_value

    @start_of_year_market_value.setter
    def start_of_year_market_value(self, start_of_year_market_value):
        """Sets the start_of_year_market_value of this IRealEstateAsset.


        :param start_of_year_market_value: The start_of_year_market_value of this IRealEstateAsset.
        :type start_of_year_market_value: Currency
        """

        self._start_of_year_market_value = start_of_year_market_value
