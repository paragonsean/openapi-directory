# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency import Currency
from openapi_server.models.model_date import ModelDate
from openapi_server.models.percent import Percent
from openapi_server import util


class IBucketing(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, distribution_bucket_target_balance: Currency=None, end_date: ModelDate=None, indexed_at: Percent=None, return_rate: Percent=None, standard_deviation: Percent=None, start_date: ModelDate=None):
        """IBucketing - a model defined in OpenAPI

        :param distribution_bucket_target_balance: The distribution_bucket_target_balance of this IBucketing.
        :param end_date: The end_date of this IBucketing.
        :param indexed_at: The indexed_at of this IBucketing.
        :param return_rate: The return_rate of this IBucketing.
        :param standard_deviation: The standard_deviation of this IBucketing.
        :param start_date: The start_date of this IBucketing.
        """
        self.openapi_types = {
            'distribution_bucket_target_balance': Currency,
            'end_date': ModelDate,
            'indexed_at': Percent,
            'return_rate': Percent,
            'standard_deviation': Percent,
            'start_date': ModelDate
        }

        self.attribute_map = {
            'distribution_bucket_target_balance': 'distributionBucketTargetBalance',
            'end_date': 'endDate',
            'indexed_at': 'indexedAt',
            'return_rate': 'returnRate',
            'standard_deviation': 'standardDeviation',
            'start_date': 'startDate'
        }

        self._distribution_bucket_target_balance = distribution_bucket_target_balance
        self._end_date = end_date
        self._indexed_at = indexed_at
        self._return_rate = return_rate
        self._standard_deviation = standard_deviation
        self._start_date = start_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IBucketing':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IBucketing of this IBucketing.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def distribution_bucket_target_balance(self):
        """Gets the distribution_bucket_target_balance of this IBucketing.


        :return: The distribution_bucket_target_balance of this IBucketing.
        :rtype: Currency
        """
        return self._distribution_bucket_target_balance

    @distribution_bucket_target_balance.setter
    def distribution_bucket_target_balance(self, distribution_bucket_target_balance):
        """Sets the distribution_bucket_target_balance of this IBucketing.


        :param distribution_bucket_target_balance: The distribution_bucket_target_balance of this IBucketing.
        :type distribution_bucket_target_balance: Currency
        """

        self._distribution_bucket_target_balance = distribution_bucket_target_balance

    @property
    def end_date(self):
        """Gets the end_date of this IBucketing.


        :return: The end_date of this IBucketing.
        :rtype: ModelDate
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this IBucketing.


        :param end_date: The end_date of this IBucketing.
        :type end_date: ModelDate
        """

        self._end_date = end_date

    @property
    def indexed_at(self):
        """Gets the indexed_at of this IBucketing.


        :return: The indexed_at of this IBucketing.
        :rtype: Percent
        """
        return self._indexed_at

    @indexed_at.setter
    def indexed_at(self, indexed_at):
        """Sets the indexed_at of this IBucketing.


        :param indexed_at: The indexed_at of this IBucketing.
        :type indexed_at: Percent
        """

        self._indexed_at = indexed_at

    @property
    def return_rate(self):
        """Gets the return_rate of this IBucketing.


        :return: The return_rate of this IBucketing.
        :rtype: Percent
        """
        return self._return_rate

    @return_rate.setter
    def return_rate(self, return_rate):
        """Sets the return_rate of this IBucketing.


        :param return_rate: The return_rate of this IBucketing.
        :type return_rate: Percent
        """

        self._return_rate = return_rate

    @property
    def standard_deviation(self):
        """Gets the standard_deviation of this IBucketing.


        :return: The standard_deviation of this IBucketing.
        :rtype: Percent
        """
        return self._standard_deviation

    @standard_deviation.setter
    def standard_deviation(self, standard_deviation):
        """Sets the standard_deviation of this IBucketing.


        :param standard_deviation: The standard_deviation of this IBucketing.
        :type standard_deviation: Percent
        """

        self._standard_deviation = standard_deviation

    @property
    def start_date(self):
        """Gets the start_date of this IBucketing.


        :return: The start_date of this IBucketing.
        :rtype: ModelDate
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this IBucketing.


        :param start_date: The start_date of this IBucketing.
        :type start_date: ModelDate
        """

        self._start_date = start_date
