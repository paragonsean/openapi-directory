# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency import Currency
from openapi_server import util


class IOutstandingShareholderLoans(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_amount: Currency=None, co_client_amount: Currency=None, other_amount: Currency=None):
        """IOutstandingShareholderLoans - a model defined in OpenAPI

        :param client_amount: The client_amount of this IOutstandingShareholderLoans.
        :param co_client_amount: The co_client_amount of this IOutstandingShareholderLoans.
        :param other_amount: The other_amount of this IOutstandingShareholderLoans.
        """
        self.openapi_types = {
            'client_amount': Currency,
            'co_client_amount': Currency,
            'other_amount': Currency
        }

        self.attribute_map = {
            'client_amount': 'clientAmount',
            'co_client_amount': 'coClientAmount',
            'other_amount': 'otherAmount'
        }

        self._client_amount = client_amount
        self._co_client_amount = co_client_amount
        self._other_amount = other_amount

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IOutstandingShareholderLoans':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IOutstandingShareholderLoans of this IOutstandingShareholderLoans.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_amount(self):
        """Gets the client_amount of this IOutstandingShareholderLoans.


        :return: The client_amount of this IOutstandingShareholderLoans.
        :rtype: Currency
        """
        return self._client_amount

    @client_amount.setter
    def client_amount(self, client_amount):
        """Sets the client_amount of this IOutstandingShareholderLoans.


        :param client_amount: The client_amount of this IOutstandingShareholderLoans.
        :type client_amount: Currency
        """

        self._client_amount = client_amount

    @property
    def co_client_amount(self):
        """Gets the co_client_amount of this IOutstandingShareholderLoans.


        :return: The co_client_amount of this IOutstandingShareholderLoans.
        :rtype: Currency
        """
        return self._co_client_amount

    @co_client_amount.setter
    def co_client_amount(self, co_client_amount):
        """Sets the co_client_amount of this IOutstandingShareholderLoans.


        :param co_client_amount: The co_client_amount of this IOutstandingShareholderLoans.
        :type co_client_amount: Currency
        """

        self._co_client_amount = co_client_amount

    @property
    def other_amount(self):
        """Gets the other_amount of this IOutstandingShareholderLoans.


        :return: The other_amount of this IOutstandingShareholderLoans.
        :rtype: Currency
        """
        return self._other_amount

    @other_amount.setter
    def other_amount(self, other_amount):
        """Sets the other_amount of this IOutstandingShareholderLoans.


        :param other_amount: The other_amount of this IOutstandingShareholderLoans.
        :type other_amount: Currency
        """

        self._other_amount = other_amount
