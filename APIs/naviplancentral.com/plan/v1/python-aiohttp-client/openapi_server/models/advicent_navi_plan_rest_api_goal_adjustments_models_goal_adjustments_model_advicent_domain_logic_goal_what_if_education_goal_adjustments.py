# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.advicent_domain_logic_goal_what_if_education_goal_adjustments import AdvicentDomainLogicGoalWhatIfEducationGoalAdjustments
from openapi_server import util


class AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalAdjustmentsModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, adjusted_values: AdvicentDomainLogicGoalWhatIfEducationGoalAdjustments=None):
        """AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalAdjustmentsModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments - a model defined in OpenAPI

        :param adjusted_values: The adjusted_values of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalAdjustmentsModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments.
        """
        self.openapi_types = {
            'adjusted_values': AdvicentDomainLogicGoalWhatIfEducationGoalAdjustments
        }

        self.attribute_map = {
            'adjusted_values': 'adjustedValues'
        }

        self._adjusted_values = adjusted_values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalAdjustmentsModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalAdjustmentsModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalAdjustmentsModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def adjusted_values(self):
        """Gets the adjusted_values of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalAdjustmentsModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments.


        :return: The adjusted_values of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalAdjustmentsModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments.
        :rtype: AdvicentDomainLogicGoalWhatIfEducationGoalAdjustments
        """
        return self._adjusted_values

    @adjusted_values.setter
    def adjusted_values(self, adjusted_values):
        """Sets the adjusted_values of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalAdjustmentsModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments.


        :param adjusted_values: The adjusted_values of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalAdjustmentsModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments.
        :type adjusted_values: AdvicentDomainLogicGoalWhatIfEducationGoalAdjustments
        """

        self._adjusted_values = adjusted_values
