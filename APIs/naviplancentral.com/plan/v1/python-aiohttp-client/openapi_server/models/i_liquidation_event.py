# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_date import ModelDate
from openapi_server import util


class ILiquidationEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first_sale_date: ModelDate=None, last_sale_date: ModelDate=None, liquidation_type: str=None, liquidation_type_description: str=None, sale_dates_description: str=None):
        """ILiquidationEvent - a model defined in OpenAPI

        :param first_sale_date: The first_sale_date of this ILiquidationEvent.
        :param last_sale_date: The last_sale_date of this ILiquidationEvent.
        :param liquidation_type: The liquidation_type of this ILiquidationEvent.
        :param liquidation_type_description: The liquidation_type_description of this ILiquidationEvent.
        :param sale_dates_description: The sale_dates_description of this ILiquidationEvent.
        """
        self.openapi_types = {
            'first_sale_date': ModelDate,
            'last_sale_date': ModelDate,
            'liquidation_type': str,
            'liquidation_type_description': str,
            'sale_dates_description': str
        }

        self.attribute_map = {
            'first_sale_date': 'firstSaleDate',
            'last_sale_date': 'lastSaleDate',
            'liquidation_type': 'liquidationType',
            'liquidation_type_description': 'liquidationTypeDescription',
            'sale_dates_description': 'saleDatesDescription'
        }

        self._first_sale_date = first_sale_date
        self._last_sale_date = last_sale_date
        self._liquidation_type = liquidation_type
        self._liquidation_type_description = liquidation_type_description
        self._sale_dates_description = sale_dates_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ILiquidationEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ILiquidationEvent of this ILiquidationEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first_sale_date(self):
        """Gets the first_sale_date of this ILiquidationEvent.


        :return: The first_sale_date of this ILiquidationEvent.
        :rtype: ModelDate
        """
        return self._first_sale_date

    @first_sale_date.setter
    def first_sale_date(self, first_sale_date):
        """Sets the first_sale_date of this ILiquidationEvent.


        :param first_sale_date: The first_sale_date of this ILiquidationEvent.
        :type first_sale_date: ModelDate
        """

        self._first_sale_date = first_sale_date

    @property
    def last_sale_date(self):
        """Gets the last_sale_date of this ILiquidationEvent.


        :return: The last_sale_date of this ILiquidationEvent.
        :rtype: ModelDate
        """
        return self._last_sale_date

    @last_sale_date.setter
    def last_sale_date(self, last_sale_date):
        """Sets the last_sale_date of this ILiquidationEvent.


        :param last_sale_date: The last_sale_date of this ILiquidationEvent.
        :type last_sale_date: ModelDate
        """

        self._last_sale_date = last_sale_date

    @property
    def liquidation_type(self):
        """Gets the liquidation_type of this ILiquidationEvent.


        :return: The liquidation_type of this ILiquidationEvent.
        :rtype: str
        """
        return self._liquidation_type

    @liquidation_type.setter
    def liquidation_type(self, liquidation_type):
        """Sets the liquidation_type of this ILiquidationEvent.


        :param liquidation_type: The liquidation_type of this ILiquidationEvent.
        :type liquidation_type: str
        """
        allowed_values = ["SellAtPlanEnd", "SellAllOnSpecificDate", "SellInInstallments"]  # noqa: E501
        if liquidation_type not in allowed_values:
            raise ValueError(
                "Invalid value for `liquidation_type` ({0}), must be one of {1}"
                .format(liquidation_type, allowed_values)
            )

        self._liquidation_type = liquidation_type

    @property
    def liquidation_type_description(self):
        """Gets the liquidation_type_description of this ILiquidationEvent.


        :return: The liquidation_type_description of this ILiquidationEvent.
        :rtype: str
        """
        return self._liquidation_type_description

    @liquidation_type_description.setter
    def liquidation_type_description(self, liquidation_type_description):
        """Sets the liquidation_type_description of this ILiquidationEvent.


        :param liquidation_type_description: The liquidation_type_description of this ILiquidationEvent.
        :type liquidation_type_description: str
        """

        self._liquidation_type_description = liquidation_type_description

    @property
    def sale_dates_description(self):
        """Gets the sale_dates_description of this ILiquidationEvent.


        :return: The sale_dates_description of this ILiquidationEvent.
        :rtype: str
        """
        return self._sale_dates_description

    @sale_dates_description.setter
    def sale_dates_description(self, sale_dates_description):
        """Sets the sale_dates_description of this ILiquidationEvent.


        :param sale_dates_description: The sale_dates_description of this ILiquidationEvent.
        :type sale_dates_description: str
        """

        self._sale_dates_description = sale_dates_description
