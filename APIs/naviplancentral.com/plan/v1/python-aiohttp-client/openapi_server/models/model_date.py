# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ModelDate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, day: int=None, formatted: str=None, formatted_mmm_mddyyyy: str=None, formatted_mm_mdd: str=None, formatted_mm_mddyyyy: str=None, formatted_mm_myyyy: str=None, formatted_na: str=None, month: int=None, to_date_time: datetime=None, url_encoded: str=None, year: int=None):
        """ModelDate - a model defined in OpenAPI

        :param day: The day of this ModelDate.
        :param formatted: The formatted of this ModelDate.
        :param formatted_mmm_mddyyyy: The formatted_mmm_mddyyyy of this ModelDate.
        :param formatted_mm_mdd: The formatted_mm_mdd of this ModelDate.
        :param formatted_mm_mddyyyy: The formatted_mm_mddyyyy of this ModelDate.
        :param formatted_mm_myyyy: The formatted_mm_myyyy of this ModelDate.
        :param formatted_na: The formatted_na of this ModelDate.
        :param month: The month of this ModelDate.
        :param to_date_time: The to_date_time of this ModelDate.
        :param url_encoded: The url_encoded of this ModelDate.
        :param year: The year of this ModelDate.
        """
        self.openapi_types = {
            'day': int,
            'formatted': str,
            'formatted_mmm_mddyyyy': str,
            'formatted_mm_mdd': str,
            'formatted_mm_mddyyyy': str,
            'formatted_mm_myyyy': str,
            'formatted_na': str,
            'month': int,
            'to_date_time': datetime,
            'url_encoded': str,
            'year': int
        }

        self.attribute_map = {
            'day': 'day',
            'formatted': 'formatted',
            'formatted_mmm_mddyyyy': 'formattedMMMMddyyyy',
            'formatted_mm_mdd': 'formattedMMMdd',
            'formatted_mm_mddyyyy': 'formattedMMMddyyyy',
            'formatted_mm_myyyy': 'formattedMMMyyyy',
            'formatted_na': 'formattedNA',
            'month': 'month',
            'to_date_time': 'toDateTime',
            'url_encoded': 'urlEncoded',
            'year': 'year'
        }

        self._day = day
        self._formatted = formatted
        self._formatted_mmm_mddyyyy = formatted_mmm_mddyyyy
        self._formatted_mm_mdd = formatted_mm_mdd
        self._formatted_mm_mddyyyy = formatted_mm_mddyyyy
        self._formatted_mm_myyyy = formatted_mm_myyyy
        self._formatted_na = formatted_na
        self._month = month
        self._to_date_time = to_date_time
        self._url_encoded = url_encoded
        self._year = year

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModelDate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Date of this ModelDate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def day(self):
        """Gets the day of this ModelDate.


        :return: The day of this ModelDate.
        :rtype: int
        """
        return self._day

    @day.setter
    def day(self, day):
        """Sets the day of this ModelDate.


        :param day: The day of this ModelDate.
        :type day: int
        """

        self._day = day

    @property
    def formatted(self):
        """Gets the formatted of this ModelDate.


        :return: The formatted of this ModelDate.
        :rtype: str
        """
        return self._formatted

    @formatted.setter
    def formatted(self, formatted):
        """Sets the formatted of this ModelDate.


        :param formatted: The formatted of this ModelDate.
        :type formatted: str
        """

        self._formatted = formatted

    @property
    def formatted_mmm_mddyyyy(self):
        """Gets the formatted_mmm_mddyyyy of this ModelDate.


        :return: The formatted_mmm_mddyyyy of this ModelDate.
        :rtype: str
        """
        return self._formatted_mmm_mddyyyy

    @formatted_mmm_mddyyyy.setter
    def formatted_mmm_mddyyyy(self, formatted_mmm_mddyyyy):
        """Sets the formatted_mmm_mddyyyy of this ModelDate.


        :param formatted_mmm_mddyyyy: The formatted_mmm_mddyyyy of this ModelDate.
        :type formatted_mmm_mddyyyy: str
        """

        self._formatted_mmm_mddyyyy = formatted_mmm_mddyyyy

    @property
    def formatted_mm_mdd(self):
        """Gets the formatted_mm_mdd of this ModelDate.


        :return: The formatted_mm_mdd of this ModelDate.
        :rtype: str
        """
        return self._formatted_mm_mdd

    @formatted_mm_mdd.setter
    def formatted_mm_mdd(self, formatted_mm_mdd):
        """Sets the formatted_mm_mdd of this ModelDate.


        :param formatted_mm_mdd: The formatted_mm_mdd of this ModelDate.
        :type formatted_mm_mdd: str
        """

        self._formatted_mm_mdd = formatted_mm_mdd

    @property
    def formatted_mm_mddyyyy(self):
        """Gets the formatted_mm_mddyyyy of this ModelDate.


        :return: The formatted_mm_mddyyyy of this ModelDate.
        :rtype: str
        """
        return self._formatted_mm_mddyyyy

    @formatted_mm_mddyyyy.setter
    def formatted_mm_mddyyyy(self, formatted_mm_mddyyyy):
        """Sets the formatted_mm_mddyyyy of this ModelDate.


        :param formatted_mm_mddyyyy: The formatted_mm_mddyyyy of this ModelDate.
        :type formatted_mm_mddyyyy: str
        """

        self._formatted_mm_mddyyyy = formatted_mm_mddyyyy

    @property
    def formatted_mm_myyyy(self):
        """Gets the formatted_mm_myyyy of this ModelDate.


        :return: The formatted_mm_myyyy of this ModelDate.
        :rtype: str
        """
        return self._formatted_mm_myyyy

    @formatted_mm_myyyy.setter
    def formatted_mm_myyyy(self, formatted_mm_myyyy):
        """Sets the formatted_mm_myyyy of this ModelDate.


        :param formatted_mm_myyyy: The formatted_mm_myyyy of this ModelDate.
        :type formatted_mm_myyyy: str
        """

        self._formatted_mm_myyyy = formatted_mm_myyyy

    @property
    def formatted_na(self):
        """Gets the formatted_na of this ModelDate.


        :return: The formatted_na of this ModelDate.
        :rtype: str
        """
        return self._formatted_na

    @formatted_na.setter
    def formatted_na(self, formatted_na):
        """Sets the formatted_na of this ModelDate.


        :param formatted_na: The formatted_na of this ModelDate.
        :type formatted_na: str
        """

        self._formatted_na = formatted_na

    @property
    def month(self):
        """Gets the month of this ModelDate.


        :return: The month of this ModelDate.
        :rtype: int
        """
        return self._month

    @month.setter
    def month(self, month):
        """Sets the month of this ModelDate.


        :param month: The month of this ModelDate.
        :type month: int
        """

        self._month = month

    @property
    def to_date_time(self):
        """Gets the to_date_time of this ModelDate.


        :return: The to_date_time of this ModelDate.
        :rtype: datetime
        """
        return self._to_date_time

    @to_date_time.setter
    def to_date_time(self, to_date_time):
        """Sets the to_date_time of this ModelDate.


        :param to_date_time: The to_date_time of this ModelDate.
        :type to_date_time: datetime
        """

        self._to_date_time = to_date_time

    @property
    def url_encoded(self):
        """Gets the url_encoded of this ModelDate.


        :return: The url_encoded of this ModelDate.
        :rtype: str
        """
        return self._url_encoded

    @url_encoded.setter
    def url_encoded(self, url_encoded):
        """Sets the url_encoded of this ModelDate.


        :param url_encoded: The url_encoded of this ModelDate.
        :type url_encoded: str
        """

        self._url_encoded = url_encoded

    @property
    def year(self):
        """Gets the year of this ModelDate.


        :return: The year of this ModelDate.
        :rtype: int
        """
        return self._year

    @year.setter
    def year(self, year):
        """Sets the year of this ModelDate.


        :param year: The year of this ModelDate.
        :type year: int
        """

        self._year = year
