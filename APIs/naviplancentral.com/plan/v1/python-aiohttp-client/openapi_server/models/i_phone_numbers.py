# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.i_business_phone_numbers import IBusinessPhoneNumbers
from openapi_server import util


class IPhoneNumbers(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_numbers: IBusinessPhoneNumbers=None, business: str=None, cell: str=None, fax: str=None, home: str=None, pager: str=None):
        """IPhoneNumbers - a model defined in OpenAPI

        :param additional_numbers: The additional_numbers of this IPhoneNumbers.
        :param business: The business of this IPhoneNumbers.
        :param cell: The cell of this IPhoneNumbers.
        :param fax: The fax of this IPhoneNumbers.
        :param home: The home of this IPhoneNumbers.
        :param pager: The pager of this IPhoneNumbers.
        """
        self.openapi_types = {
            'additional_numbers': IBusinessPhoneNumbers,
            'business': str,
            'cell': str,
            'fax': str,
            'home': str,
            'pager': str
        }

        self.attribute_map = {
            'additional_numbers': 'additionalNumbers',
            'business': 'business',
            'cell': 'cell',
            'fax': 'fax',
            'home': 'home',
            'pager': 'pager'
        }

        self._additional_numbers = additional_numbers
        self._business = business
        self._cell = cell
        self._fax = fax
        self._home = home
        self._pager = pager

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IPhoneNumbers':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IPhoneNumbers of this IPhoneNumbers.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_numbers(self):
        """Gets the additional_numbers of this IPhoneNumbers.


        :return: The additional_numbers of this IPhoneNumbers.
        :rtype: IBusinessPhoneNumbers
        """
        return self._additional_numbers

    @additional_numbers.setter
    def additional_numbers(self, additional_numbers):
        """Sets the additional_numbers of this IPhoneNumbers.


        :param additional_numbers: The additional_numbers of this IPhoneNumbers.
        :type additional_numbers: IBusinessPhoneNumbers
        """

        self._additional_numbers = additional_numbers

    @property
    def business(self):
        """Gets the business of this IPhoneNumbers.


        :return: The business of this IPhoneNumbers.
        :rtype: str
        """
        return self._business

    @business.setter
    def business(self, business):
        """Sets the business of this IPhoneNumbers.


        :param business: The business of this IPhoneNumbers.
        :type business: str
        """

        self._business = business

    @property
    def cell(self):
        """Gets the cell of this IPhoneNumbers.


        :return: The cell of this IPhoneNumbers.
        :rtype: str
        """
        return self._cell

    @cell.setter
    def cell(self, cell):
        """Sets the cell of this IPhoneNumbers.


        :param cell: The cell of this IPhoneNumbers.
        :type cell: str
        """

        self._cell = cell

    @property
    def fax(self):
        """Gets the fax of this IPhoneNumbers.


        :return: The fax of this IPhoneNumbers.
        :rtype: str
        """
        return self._fax

    @fax.setter
    def fax(self, fax):
        """Sets the fax of this IPhoneNumbers.


        :param fax: The fax of this IPhoneNumbers.
        :type fax: str
        """

        self._fax = fax

    @property
    def home(self):
        """Gets the home of this IPhoneNumbers.


        :return: The home of this IPhoneNumbers.
        :rtype: str
        """
        return self._home

    @home.setter
    def home(self, home):
        """Sets the home of this IPhoneNumbers.


        :param home: The home of this IPhoneNumbers.
        :type home: str
        """

        self._home = home

    @property
    def pager(self):
        """Gets the pager of this IPhoneNumbers.


        :return: The pager of this IPhoneNumbers.
        :rtype: str
        """
        return self._pager

    @pager.setter
    def pager(self, pager):
        """Sets the pager of this IPhoneNumbers.


        :param pager: The pager of this IPhoneNumbers.
        :type pager: str
        """

        self._pager = pager
