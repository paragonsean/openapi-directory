# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.goal_coverage_percent import GoalCoveragePercent
from openapi_server import util


class IOptionalFieldGoalCoveragePercent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None, populated: bool=None, value: GoalCoveragePercent=None):
        """IOptionalFieldGoalCoveragePercent - a model defined in OpenAPI

        :param enabled: The enabled of this IOptionalFieldGoalCoveragePercent.
        :param populated: The populated of this IOptionalFieldGoalCoveragePercent.
        :param value: The value of this IOptionalFieldGoalCoveragePercent.
        """
        self.openapi_types = {
            'enabled': bool,
            'populated': bool,
            'value': GoalCoveragePercent
        }

        self.attribute_map = {
            'enabled': 'enabled',
            'populated': 'populated',
            'value': 'value'
        }

        self._enabled = enabled
        self._populated = populated
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IOptionalFieldGoalCoveragePercent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IOptionalField[GoalCoveragePercent] of this IOptionalFieldGoalCoveragePercent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self):
        """Gets the enabled of this IOptionalFieldGoalCoveragePercent.


        :return: The enabled of this IOptionalFieldGoalCoveragePercent.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this IOptionalFieldGoalCoveragePercent.


        :param enabled: The enabled of this IOptionalFieldGoalCoveragePercent.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def populated(self):
        """Gets the populated of this IOptionalFieldGoalCoveragePercent.


        :return: The populated of this IOptionalFieldGoalCoveragePercent.
        :rtype: bool
        """
        return self._populated

    @populated.setter
    def populated(self, populated):
        """Sets the populated of this IOptionalFieldGoalCoveragePercent.


        :param populated: The populated of this IOptionalFieldGoalCoveragePercent.
        :type populated: bool
        """

        self._populated = populated

    @property
    def value(self):
        """Gets the value of this IOptionalFieldGoalCoveragePercent.


        :return: The value of this IOptionalFieldGoalCoveragePercent.
        :rtype: GoalCoveragePercent
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this IOptionalFieldGoalCoveragePercent.


        :param value: The value of this IOptionalFieldGoalCoveragePercent.
        :type value: GoalCoveragePercent
        """

        self._value = value
