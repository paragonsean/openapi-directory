# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.advicent_navi_plan_rest_api_goal_adjustments_coverage_projections import AdvicentNaviPlanRestApiGoalAdjustmentsCoverageProjections
from openapi_server.models.advicent_navi_plan_rest_api_goal_adjustments_goal_adjustments_result_advicent_domain_logic_goal_what_if_education_goal_adjustments import AdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments
from openapi_server import util


class AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, goal_adjustments: AdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments=None, projected_results: AdvicentNaviPlanRestApiGoalAdjustmentsCoverageProjections=None):
        """AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments - a model defined in OpenAPI

        :param goal_adjustments: The goal_adjustments of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments.
        :param projected_results: The projected_results of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments.
        """
        self.openapi_types = {
            'goal_adjustments': AdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments,
            'projected_results': AdvicentNaviPlanRestApiGoalAdjustmentsCoverageProjections
        }

        self.attribute_map = {
            'goal_adjustments': 'goalAdjustments',
            'projected_results': 'projectedResults'
        }

        self._goal_adjustments = goal_adjustments
        self._projected_results = projected_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def goal_adjustments(self):
        """Gets the goal_adjustments of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments.


        :return: The goal_adjustments of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments.
        :rtype: AdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments
        """
        return self._goal_adjustments

    @goal_adjustments.setter
    def goal_adjustments(self, goal_adjustments):
        """Sets the goal_adjustments of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments.


        :param goal_adjustments: The goal_adjustments of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments.
        :type goal_adjustments: AdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments
        """

        self._goal_adjustments = goal_adjustments

    @property
    def projected_results(self):
        """Gets the projected_results of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments.


        :return: The projected_results of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments.
        :rtype: AdvicentNaviPlanRestApiGoalAdjustmentsCoverageProjections
        """
        return self._projected_results

    @projected_results.setter
    def projected_results(self, projected_results):
        """Sets the projected_results of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments.


        :param projected_results: The projected_results of this AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments.
        :type projected_results: AdvicentNaviPlanRestApiGoalAdjustmentsCoverageProjections
        """

        self._projected_results = projected_results
