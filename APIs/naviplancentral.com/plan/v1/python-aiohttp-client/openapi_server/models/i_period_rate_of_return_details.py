# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.i_rate_of_return_breakdown import IRateOfReturnBreakdown
from openapi_server.models.percent import Percent
from openapi_server import util


class IPeriodRateOfReturnDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, breakdown: IRateOfReturnBreakdown=None, standard_deviation: Percent=None, total: Percent=None):
        """IPeriodRateOfReturnDetails - a model defined in OpenAPI

        :param breakdown: The breakdown of this IPeriodRateOfReturnDetails.
        :param standard_deviation: The standard_deviation of this IPeriodRateOfReturnDetails.
        :param total: The total of this IPeriodRateOfReturnDetails.
        """
        self.openapi_types = {
            'breakdown': IRateOfReturnBreakdown,
            'standard_deviation': Percent,
            'total': Percent
        }

        self.attribute_map = {
            'breakdown': 'breakdown',
            'standard_deviation': 'standardDeviation',
            'total': 'total'
        }

        self._breakdown = breakdown
        self._standard_deviation = standard_deviation
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IPeriodRateOfReturnDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IPeriodRateOfReturnDetails of this IPeriodRateOfReturnDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def breakdown(self):
        """Gets the breakdown of this IPeriodRateOfReturnDetails.


        :return: The breakdown of this IPeriodRateOfReturnDetails.
        :rtype: IRateOfReturnBreakdown
        """
        return self._breakdown

    @breakdown.setter
    def breakdown(self, breakdown):
        """Sets the breakdown of this IPeriodRateOfReturnDetails.


        :param breakdown: The breakdown of this IPeriodRateOfReturnDetails.
        :type breakdown: IRateOfReturnBreakdown
        """

        self._breakdown = breakdown

    @property
    def standard_deviation(self):
        """Gets the standard_deviation of this IPeriodRateOfReturnDetails.


        :return: The standard_deviation of this IPeriodRateOfReturnDetails.
        :rtype: Percent
        """
        return self._standard_deviation

    @standard_deviation.setter
    def standard_deviation(self, standard_deviation):
        """Sets the standard_deviation of this IPeriodRateOfReturnDetails.


        :param standard_deviation: The standard_deviation of this IPeriodRateOfReturnDetails.
        :type standard_deviation: Percent
        """

        self._standard_deviation = standard_deviation

    @property
    def total(self):
        """Gets the total of this IPeriodRateOfReturnDetails.


        :return: The total of this IPeriodRateOfReturnDetails.
        :rtype: Percent
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this IPeriodRateOfReturnDetails.


        :param total: The total of this IPeriodRateOfReturnDetails.
        :type total: Percent
        """

        self._total = total
