# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescriptiveBoolean(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, raw_value: bool=None, value_as_yes_no: str=None):
        """DescriptiveBoolean - a model defined in OpenAPI

        :param raw_value: The raw_value of this DescriptiveBoolean.
        :param value_as_yes_no: The value_as_yes_no of this DescriptiveBoolean.
        """
        self.openapi_types = {
            'raw_value': bool,
            'value_as_yes_no': str
        }

        self.attribute_map = {
            'raw_value': 'rawValue',
            'value_as_yes_no': 'valueAsYesNo'
        }

        self._raw_value = raw_value
        self._value_as_yes_no = value_as_yes_no

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescriptiveBoolean':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescriptiveBoolean of this DescriptiveBoolean.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def raw_value(self):
        """Gets the raw_value of this DescriptiveBoolean.


        :return: The raw_value of this DescriptiveBoolean.
        :rtype: bool
        """
        return self._raw_value

    @raw_value.setter
    def raw_value(self, raw_value):
        """Sets the raw_value of this DescriptiveBoolean.


        :param raw_value: The raw_value of this DescriptiveBoolean.
        :type raw_value: bool
        """

        self._raw_value = raw_value

    @property
    def value_as_yes_no(self):
        """Gets the value_as_yes_no of this DescriptiveBoolean.


        :return: The value_as_yes_no of this DescriptiveBoolean.
        :rtype: str
        """
        return self._value_as_yes_no

    @value_as_yes_no.setter
    def value_as_yes_no(self, value_as_yes_no):
        """Sets the value_as_yes_no of this DescriptiveBoolean.


        :param value_as_yes_no: The value_as_yes_no of this DescriptiveBoolean.
        :type value_as_yes_no: str
        """

        self._value_as_yes_no = value_as_yes_no
