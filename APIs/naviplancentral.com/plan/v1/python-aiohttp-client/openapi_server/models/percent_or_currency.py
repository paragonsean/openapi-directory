# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency import Currency
from openapi_server.models.percent import Percent
from openapi_server import util


class PercentOrCurrency(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, currency: Currency=None, percent: Percent=None):
        """PercentOrCurrency - a model defined in OpenAPI

        :param currency: The currency of this PercentOrCurrency.
        :param percent: The percent of this PercentOrCurrency.
        """
        self.openapi_types = {
            'currency': Currency,
            'percent': Percent
        }

        self.attribute_map = {
            'currency': 'currency',
            'percent': 'percent'
        }

        self._currency = currency
        self._percent = percent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PercentOrCurrency':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PercentOr[Currency] of this PercentOrCurrency.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def currency(self):
        """Gets the currency of this PercentOrCurrency.


        :return: The currency of this PercentOrCurrency.
        :rtype: Currency
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this PercentOrCurrency.


        :param currency: The currency of this PercentOrCurrency.
        :type currency: Currency
        """

        self._currency = currency

    @property
    def percent(self):
        """Gets the percent of this PercentOrCurrency.


        :return: The percent of this PercentOrCurrency.
        :rtype: Percent
        """
        return self._percent

    @percent.setter
    def percent(self, percent):
        """Sets the percent of this PercentOrCurrency.


        :param percent: The percent of this PercentOrCurrency.
        :type percent: Percent
        """

        self._percent = percent
