/*
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.AdvicentNaviPlanRestApiModelsOwnerModel;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:57:21.776546-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_LEGACY_ID = "legacyId";
  @SerializedName(SERIALIZED_NAME_LEGACY_ID)
  private String legacyId;

  public static final String SERIALIZED_NAME_MARKET_VALUE = "marketValue";
  @SerializedName(SERIALIZED_NAME_MARKET_VALUE)
  private Double marketValue;

  public static final String SERIALIZED_NAME_OWNER = "owner";
  @SerializedName(SERIALIZED_NAME_OWNER)
  private AdvicentNaviPlanRestApiModelsOwnerModel owner;

  public static final String SERIALIZED_NAME_PURCHASE_AMOUNT = "purchaseAmount";
  @SerializedName(SERIALIZED_NAME_PURCHASE_AMOUNT)
  private Double purchaseAmount;

  public static final String SERIALIZED_NAME_PURCHASE_DATE = "purchaseDate";
  @SerializedName(SERIALIZED_NAME_PURCHASE_DATE)
  private OffsetDateTime purchaseDate;

  public static final String SERIALIZED_NAME_VALUATION_DATE = "valuationDate";
  @SerializedName(SERIALIZED_NAME_VALUATION_DATE)
  private OffsetDateTime valuationDate;

  public AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel() {
  }

  public AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel legacyId(String legacyId) {
    this.legacyId = legacyId;
    return this;
  }

  /**
   * Get legacyId
   * @return legacyId
   */
  @javax.annotation.Nullable
  public String getLegacyId() {
    return legacyId;
  }

  public void setLegacyId(String legacyId) {
    this.legacyId = legacyId;
  }


  public AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel marketValue(Double marketValue) {
    this.marketValue = marketValue;
    return this;
  }

  /**
   * Get marketValue
   * @return marketValue
   */
  @javax.annotation.Nullable
  public Double getMarketValue() {
    return marketValue;
  }

  public void setMarketValue(Double marketValue) {
    this.marketValue = marketValue;
  }


  public AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel owner(AdvicentNaviPlanRestApiModelsOwnerModel owner) {
    this.owner = owner;
    return this;
  }

  /**
   * Get owner
   * @return owner
   */
  @javax.annotation.Nullable
  public AdvicentNaviPlanRestApiModelsOwnerModel getOwner() {
    return owner;
  }

  public void setOwner(AdvicentNaviPlanRestApiModelsOwnerModel owner) {
    this.owner = owner;
  }


  public AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel purchaseAmount(Double purchaseAmount) {
    this.purchaseAmount = purchaseAmount;
    return this;
  }

  /**
   * Get purchaseAmount
   * @return purchaseAmount
   */
  @javax.annotation.Nullable
  public Double getPurchaseAmount() {
    return purchaseAmount;
  }

  public void setPurchaseAmount(Double purchaseAmount) {
    this.purchaseAmount = purchaseAmount;
  }


  public AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel purchaseDate(OffsetDateTime purchaseDate) {
    this.purchaseDate = purchaseDate;
    return this;
  }

  /**
   * Get purchaseDate
   * @return purchaseDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getPurchaseDate() {
    return purchaseDate;
  }

  public void setPurchaseDate(OffsetDateTime purchaseDate) {
    this.purchaseDate = purchaseDate;
  }


  public AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel valuationDate(OffsetDateTime valuationDate) {
    this.valuationDate = valuationDate;
    return this;
  }

  /**
   * Get valuationDate
   * @return valuationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getValuationDate() {
    return valuationDate;
  }

  public void setValuationDate(OffsetDateTime valuationDate) {
    this.valuationDate = valuationDate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel advicentNaviPlanRestApiNetWorthModelsRealEstateModel = (AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel) o;
    return Objects.equals(this.description, advicentNaviPlanRestApiNetWorthModelsRealEstateModel.description) &&
        Objects.equals(this.id, advicentNaviPlanRestApiNetWorthModelsRealEstateModel.id) &&
        Objects.equals(this.legacyId, advicentNaviPlanRestApiNetWorthModelsRealEstateModel.legacyId) &&
        Objects.equals(this.marketValue, advicentNaviPlanRestApiNetWorthModelsRealEstateModel.marketValue) &&
        Objects.equals(this.owner, advicentNaviPlanRestApiNetWorthModelsRealEstateModel.owner) &&
        Objects.equals(this.purchaseAmount, advicentNaviPlanRestApiNetWorthModelsRealEstateModel.purchaseAmount) &&
        Objects.equals(this.purchaseDate, advicentNaviPlanRestApiNetWorthModelsRealEstateModel.purchaseDate) &&
        Objects.equals(this.valuationDate, advicentNaviPlanRestApiNetWorthModelsRealEstateModel.valuationDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, id, legacyId, marketValue, owner, purchaseAmount, purchaseDate, valuationDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    legacyId: ").append(toIndentedString(legacyId)).append("\n");
    sb.append("    marketValue: ").append(toIndentedString(marketValue)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    purchaseAmount: ").append(toIndentedString(purchaseAmount)).append("\n");
    sb.append("    purchaseDate: ").append(toIndentedString(purchaseDate)).append("\n");
    sb.append("    valuationDate: ").append(toIndentedString(valuationDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("id");
    openapiFields.add("legacyId");
    openapiFields.add("marketValue");
    openapiFields.add("owner");
    openapiFields.add("purchaseAmount");
    openapiFields.add("purchaseDate");
    openapiFields.add("valuationDate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel is not found in the empty JSON string", AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("legacyId") != null && !jsonObj.get("legacyId").isJsonNull()) && !jsonObj.get("legacyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legacyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legacyId").toString()));
      }
      // validate the optional field `owner`
      if (jsonObj.get("owner") != null && !jsonObj.get("owner").isJsonNull()) {
        AdvicentNaviPlanRestApiModelsOwnerModel.validateJsonElement(jsonObj.get("owner"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel.class));

       return (TypeAdapter<T>) new TypeAdapter<AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel>() {
           @Override
           public void write(JsonWriter out, AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel
   * @throws IOException if the JSON string is invalid with respect to AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel
   */
  public static AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel.class);
  }

  /**
   * Convert an instance of AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

