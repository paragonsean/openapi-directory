/*
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Date;
import org.openapitools.client.model.FormattedEnumTypeSavingsStrategyType;
import org.openapitools.client.model.GrowthRateValues;
import org.openapitools.client.model.PercentOrCurrency;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ILumpSumSavingsStrategy
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:57:21.776546-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ILumpSumSavingsStrategy {
  public static final String SERIALIZED_NAME_AMOUNT_OR_PERCENT_OF_SALARY = "amountOrPercentOfSalary";
  @SerializedName(SERIALIZED_NAME_AMOUNT_OR_PERCENT_OF_SALARY)
  private PercentOrCurrency amountOrPercentOfSalary;

  public static final String SERIALIZED_NAME_FORMATTED_SAVINGS_TYPE_WITH_DASH = "formattedSavingsTypeWithDash";
  @SerializedName(SERIALIZED_NAME_FORMATTED_SAVINGS_TYPE_WITH_DASH)
  private String formattedSavingsTypeWithDash;

  public static final String SERIALIZED_NAME_INDEX_RATE = "indexRate";
  @SerializedName(SERIALIZED_NAME_INDEX_RATE)
  private GrowthRateValues indexRate;

  public static final String SERIALIZED_NAME_SAVINGS_DATE = "savingsDate";
  @SerializedName(SERIALIZED_NAME_SAVINGS_DATE)
  private Date savingsDate;

  public static final String SERIALIZED_NAME_SAVINGS_TYPE = "savingsType";
  @SerializedName(SERIALIZED_NAME_SAVINGS_TYPE)
  private FormattedEnumTypeSavingsStrategyType savingsType;

  public ILumpSumSavingsStrategy() {
  }

  public ILumpSumSavingsStrategy(
     String formattedSavingsTypeWithDash
  ) {
    this();
    this.formattedSavingsTypeWithDash = formattedSavingsTypeWithDash;
  }

  public ILumpSumSavingsStrategy amountOrPercentOfSalary(PercentOrCurrency amountOrPercentOfSalary) {
    this.amountOrPercentOfSalary = amountOrPercentOfSalary;
    return this;
  }

  /**
   * Get amountOrPercentOfSalary
   * @return amountOrPercentOfSalary
   */
  @javax.annotation.Nullable
  public PercentOrCurrency getAmountOrPercentOfSalary() {
    return amountOrPercentOfSalary;
  }

  public void setAmountOrPercentOfSalary(PercentOrCurrency amountOrPercentOfSalary) {
    this.amountOrPercentOfSalary = amountOrPercentOfSalary;
  }


  /**
   * Get formattedSavingsTypeWithDash
   * @return formattedSavingsTypeWithDash
   */
  @javax.annotation.Nullable
  public String getFormattedSavingsTypeWithDash() {
    return formattedSavingsTypeWithDash;
  }



  public ILumpSumSavingsStrategy indexRate(GrowthRateValues indexRate) {
    this.indexRate = indexRate;
    return this;
  }

  /**
   * Get indexRate
   * @return indexRate
   */
  @javax.annotation.Nullable
  public GrowthRateValues getIndexRate() {
    return indexRate;
  }

  public void setIndexRate(GrowthRateValues indexRate) {
    this.indexRate = indexRate;
  }


  public ILumpSumSavingsStrategy savingsDate(Date savingsDate) {
    this.savingsDate = savingsDate;
    return this;
  }

  /**
   * Get savingsDate
   * @return savingsDate
   */
  @javax.annotation.Nullable
  public Date getSavingsDate() {
    return savingsDate;
  }

  public void setSavingsDate(Date savingsDate) {
    this.savingsDate = savingsDate;
  }


  public ILumpSumSavingsStrategy savingsType(FormattedEnumTypeSavingsStrategyType savingsType) {
    this.savingsType = savingsType;
    return this;
  }

  /**
   * Get savingsType
   * @return savingsType
   */
  @javax.annotation.Nullable
  public FormattedEnumTypeSavingsStrategyType getSavingsType() {
    return savingsType;
  }

  public void setSavingsType(FormattedEnumTypeSavingsStrategyType savingsType) {
    this.savingsType = savingsType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ILumpSumSavingsStrategy ilumpSumSavingsStrategy = (ILumpSumSavingsStrategy) o;
    return Objects.equals(this.amountOrPercentOfSalary, ilumpSumSavingsStrategy.amountOrPercentOfSalary) &&
        Objects.equals(this.formattedSavingsTypeWithDash, ilumpSumSavingsStrategy.formattedSavingsTypeWithDash) &&
        Objects.equals(this.indexRate, ilumpSumSavingsStrategy.indexRate) &&
        Objects.equals(this.savingsDate, ilumpSumSavingsStrategy.savingsDate) &&
        Objects.equals(this.savingsType, ilumpSumSavingsStrategy.savingsType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amountOrPercentOfSalary, formattedSavingsTypeWithDash, indexRate, savingsDate, savingsType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ILumpSumSavingsStrategy {\n");
    sb.append("    amountOrPercentOfSalary: ").append(toIndentedString(amountOrPercentOfSalary)).append("\n");
    sb.append("    formattedSavingsTypeWithDash: ").append(toIndentedString(formattedSavingsTypeWithDash)).append("\n");
    sb.append("    indexRate: ").append(toIndentedString(indexRate)).append("\n");
    sb.append("    savingsDate: ").append(toIndentedString(savingsDate)).append("\n");
    sb.append("    savingsType: ").append(toIndentedString(savingsType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("amountOrPercentOfSalary");
    openapiFields.add("formattedSavingsTypeWithDash");
    openapiFields.add("indexRate");
    openapiFields.add("savingsDate");
    openapiFields.add("savingsType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ILumpSumSavingsStrategy
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ILumpSumSavingsStrategy.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ILumpSumSavingsStrategy is not found in the empty JSON string", ILumpSumSavingsStrategy.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ILumpSumSavingsStrategy.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ILumpSumSavingsStrategy` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `amountOrPercentOfSalary`
      if (jsonObj.get("amountOrPercentOfSalary") != null && !jsonObj.get("amountOrPercentOfSalary").isJsonNull()) {
        PercentOrCurrency.validateJsonElement(jsonObj.get("amountOrPercentOfSalary"));
      }
      if ((jsonObj.get("formattedSavingsTypeWithDash") != null && !jsonObj.get("formattedSavingsTypeWithDash").isJsonNull()) && !jsonObj.get("formattedSavingsTypeWithDash").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `formattedSavingsTypeWithDash` to be a primitive type in the JSON string but got `%s`", jsonObj.get("formattedSavingsTypeWithDash").toString()));
      }
      // validate the optional field `indexRate`
      if (jsonObj.get("indexRate") != null && !jsonObj.get("indexRate").isJsonNull()) {
        GrowthRateValues.validateJsonElement(jsonObj.get("indexRate"));
      }
      // validate the optional field `savingsDate`
      if (jsonObj.get("savingsDate") != null && !jsonObj.get("savingsDate").isJsonNull()) {
        Date.validateJsonElement(jsonObj.get("savingsDate"));
      }
      // validate the optional field `savingsType`
      if (jsonObj.get("savingsType") != null && !jsonObj.get("savingsType").isJsonNull()) {
        FormattedEnumTypeSavingsStrategyType.validateJsonElement(jsonObj.get("savingsType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ILumpSumSavingsStrategy.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ILumpSumSavingsStrategy' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ILumpSumSavingsStrategy> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ILumpSumSavingsStrategy.class));

       return (TypeAdapter<T>) new TypeAdapter<ILumpSumSavingsStrategy>() {
           @Override
           public void write(JsonWriter out, ILumpSumSavingsStrategy value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ILumpSumSavingsStrategy read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ILumpSumSavingsStrategy given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ILumpSumSavingsStrategy
   * @throws IOException if the JSON string is invalid with respect to ILumpSumSavingsStrategy
   */
  public static ILumpSumSavingsStrategy fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ILumpSumSavingsStrategy.class);
  }

  /**
   * Convert an instance of ILumpSumSavingsStrategy to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

