/*
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ILumpSumSavingsStrategy;
import org.openapitools.client.model.IPeriodicSavingsStrategy;
import org.openapitools.client.model.IRrspMaximizerStrategy;
import org.openapitools.client.model.ISurplusSavingsStrategy;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ISavingsStrategies
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:57:21.776546-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ISavingsStrategies {
  public static final String SERIALIZED_NAME_LUMP_SUM_SAVINGS_STRATEGIES = "lumpSumSavingsStrategies";
  @SerializedName(SERIALIZED_NAME_LUMP_SUM_SAVINGS_STRATEGIES)
  private List<ILumpSumSavingsStrategy> lumpSumSavingsStrategies = new ArrayList<>();

  public static final String SERIALIZED_NAME_PERIODIC_SAVINGS_STRATEGIES = "periodicSavingsStrategies";
  @SerializedName(SERIALIZED_NAME_PERIODIC_SAVINGS_STRATEGIES)
  private List<IPeriodicSavingsStrategy> periodicSavingsStrategies = new ArrayList<>();

  public static final String SERIALIZED_NAME_RRSP_MAXIMIZER_STRATEGIES = "rrspMaximizerStrategies";
  @SerializedName(SERIALIZED_NAME_RRSP_MAXIMIZER_STRATEGIES)
  private List<IRrspMaximizerStrategy> rrspMaximizerStrategies = new ArrayList<>();

  public static final String SERIALIZED_NAME_SURPLUS_SAVINGS_STRATEGIES = "surplusSavingsStrategies";
  @SerializedName(SERIALIZED_NAME_SURPLUS_SAVINGS_STRATEGIES)
  private List<ISurplusSavingsStrategy> surplusSavingsStrategies = new ArrayList<>();

  public ISavingsStrategies() {
  }

  public ISavingsStrategies(
     List<ILumpSumSavingsStrategy> lumpSumSavingsStrategies, 
     List<IPeriodicSavingsStrategy> periodicSavingsStrategies, 
     List<IRrspMaximizerStrategy> rrspMaximizerStrategies, 
     List<ISurplusSavingsStrategy> surplusSavingsStrategies
  ) {
    this();
    this.lumpSumSavingsStrategies = lumpSumSavingsStrategies;
    this.periodicSavingsStrategies = periodicSavingsStrategies;
    this.rrspMaximizerStrategies = rrspMaximizerStrategies;
    this.surplusSavingsStrategies = surplusSavingsStrategies;
  }

  /**
   * Get lumpSumSavingsStrategies
   * @return lumpSumSavingsStrategies
   */
  @javax.annotation.Nullable
  public List<ILumpSumSavingsStrategy> getLumpSumSavingsStrategies() {
    return lumpSumSavingsStrategies;
  }



  /**
   * Get periodicSavingsStrategies
   * @return periodicSavingsStrategies
   */
  @javax.annotation.Nullable
  public List<IPeriodicSavingsStrategy> getPeriodicSavingsStrategies() {
    return periodicSavingsStrategies;
  }



  /**
   * Get rrspMaximizerStrategies
   * @return rrspMaximizerStrategies
   */
  @javax.annotation.Nullable
  public List<IRrspMaximizerStrategy> getRrspMaximizerStrategies() {
    return rrspMaximizerStrategies;
  }



  /**
   * Get surplusSavingsStrategies
   * @return surplusSavingsStrategies
   */
  @javax.annotation.Nullable
  public List<ISurplusSavingsStrategy> getSurplusSavingsStrategies() {
    return surplusSavingsStrategies;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ISavingsStrategies isavingsStrategies = (ISavingsStrategies) o;
    return Objects.equals(this.lumpSumSavingsStrategies, isavingsStrategies.lumpSumSavingsStrategies) &&
        Objects.equals(this.periodicSavingsStrategies, isavingsStrategies.periodicSavingsStrategies) &&
        Objects.equals(this.rrspMaximizerStrategies, isavingsStrategies.rrspMaximizerStrategies) &&
        Objects.equals(this.surplusSavingsStrategies, isavingsStrategies.surplusSavingsStrategies);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lumpSumSavingsStrategies, periodicSavingsStrategies, rrspMaximizerStrategies, surplusSavingsStrategies);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ISavingsStrategies {\n");
    sb.append("    lumpSumSavingsStrategies: ").append(toIndentedString(lumpSumSavingsStrategies)).append("\n");
    sb.append("    periodicSavingsStrategies: ").append(toIndentedString(periodicSavingsStrategies)).append("\n");
    sb.append("    rrspMaximizerStrategies: ").append(toIndentedString(rrspMaximizerStrategies)).append("\n");
    sb.append("    surplusSavingsStrategies: ").append(toIndentedString(surplusSavingsStrategies)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("lumpSumSavingsStrategies");
    openapiFields.add("periodicSavingsStrategies");
    openapiFields.add("rrspMaximizerStrategies");
    openapiFields.add("surplusSavingsStrategies");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ISavingsStrategies
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ISavingsStrategies.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ISavingsStrategies is not found in the empty JSON string", ISavingsStrategies.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ISavingsStrategies.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ISavingsStrategies` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("lumpSumSavingsStrategies") != null && !jsonObj.get("lumpSumSavingsStrategies").isJsonNull()) {
        JsonArray jsonArraylumpSumSavingsStrategies = jsonObj.getAsJsonArray("lumpSumSavingsStrategies");
        if (jsonArraylumpSumSavingsStrategies != null) {
          // ensure the json data is an array
          if (!jsonObj.get("lumpSumSavingsStrategies").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `lumpSumSavingsStrategies` to be an array in the JSON string but got `%s`", jsonObj.get("lumpSumSavingsStrategies").toString()));
          }

          // validate the optional field `lumpSumSavingsStrategies` (array)
          for (int i = 0; i < jsonArraylumpSumSavingsStrategies.size(); i++) {
            ILumpSumSavingsStrategy.validateJsonElement(jsonArraylumpSumSavingsStrategies.get(i));
          };
        }
      }
      if (jsonObj.get("periodicSavingsStrategies") != null && !jsonObj.get("periodicSavingsStrategies").isJsonNull()) {
        JsonArray jsonArrayperiodicSavingsStrategies = jsonObj.getAsJsonArray("periodicSavingsStrategies");
        if (jsonArrayperiodicSavingsStrategies != null) {
          // ensure the json data is an array
          if (!jsonObj.get("periodicSavingsStrategies").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `periodicSavingsStrategies` to be an array in the JSON string but got `%s`", jsonObj.get("periodicSavingsStrategies").toString()));
          }

          // validate the optional field `periodicSavingsStrategies` (array)
          for (int i = 0; i < jsonArrayperiodicSavingsStrategies.size(); i++) {
            IPeriodicSavingsStrategy.validateJsonElement(jsonArrayperiodicSavingsStrategies.get(i));
          };
        }
      }
      if (jsonObj.get("rrspMaximizerStrategies") != null && !jsonObj.get("rrspMaximizerStrategies").isJsonNull()) {
        JsonArray jsonArrayrrspMaximizerStrategies = jsonObj.getAsJsonArray("rrspMaximizerStrategies");
        if (jsonArrayrrspMaximizerStrategies != null) {
          // ensure the json data is an array
          if (!jsonObj.get("rrspMaximizerStrategies").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `rrspMaximizerStrategies` to be an array in the JSON string but got `%s`", jsonObj.get("rrspMaximizerStrategies").toString()));
          }

          // validate the optional field `rrspMaximizerStrategies` (array)
          for (int i = 0; i < jsonArrayrrspMaximizerStrategies.size(); i++) {
            IRrspMaximizerStrategy.validateJsonElement(jsonArrayrrspMaximizerStrategies.get(i));
          };
        }
      }
      if (jsonObj.get("surplusSavingsStrategies") != null && !jsonObj.get("surplusSavingsStrategies").isJsonNull()) {
        JsonArray jsonArraysurplusSavingsStrategies = jsonObj.getAsJsonArray("surplusSavingsStrategies");
        if (jsonArraysurplusSavingsStrategies != null) {
          // ensure the json data is an array
          if (!jsonObj.get("surplusSavingsStrategies").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `surplusSavingsStrategies` to be an array in the JSON string but got `%s`", jsonObj.get("surplusSavingsStrategies").toString()));
          }

          // validate the optional field `surplusSavingsStrategies` (array)
          for (int i = 0; i < jsonArraysurplusSavingsStrategies.size(); i++) {
            ISurplusSavingsStrategy.validateJsonElement(jsonArraysurplusSavingsStrategies.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ISavingsStrategies.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ISavingsStrategies' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ISavingsStrategies> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ISavingsStrategies.class));

       return (TypeAdapter<T>) new TypeAdapter<ISavingsStrategies>() {
           @Override
           public void write(JsonWriter out, ISavingsStrategies value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ISavingsStrategies read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ISavingsStrategies given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ISavingsStrategies
   * @throws IOException if the JSON string is invalid with respect to ISavingsStrategies
   */
  public static ISavingsStrategies fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ISavingsStrategies.class);
  }

  /**
   * Convert an instance of ISavingsStrategies to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

