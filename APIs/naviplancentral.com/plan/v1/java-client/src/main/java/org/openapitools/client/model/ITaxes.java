/*
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Currency;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ITaxes
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:57:21.776546-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ITaxes {
  public static final String SERIALIZED_NAME_ESTATE = "estate";
  @SerializedName(SERIALIZED_NAME_ESTATE)
  private Currency estate;

  public static final String SERIALIZED_NAME_FEDERAL_INCOME = "federalIncome";
  @SerializedName(SERIALIZED_NAME_FEDERAL_INCOME)
  private Currency federalIncome;

  public static final String SERIALIZED_NAME_GIFT_AND_GENERATION_SKIPPING_TRANSFER = "giftAndGenerationSkippingTransfer";
  @SerializedName(SERIALIZED_NAME_GIFT_AND_GENERATION_SKIPPING_TRANSFER)
  private Currency giftAndGenerationSkippingTransfer;

  public static final String SERIALIZED_NAME_MEDICARE = "medicare";
  @SerializedName(SERIALIZED_NAME_MEDICARE)
  private Currency medicare;

  public static final String SERIALIZED_NAME_PENSION_EARLY_DISTRIBUTION_PENALTY = "pensionEarlyDistributionPenalty";
  @SerializedName(SERIALIZED_NAME_PENSION_EARLY_DISTRIBUTION_PENALTY)
  private Currency pensionEarlyDistributionPenalty;

  public static final String SERIALIZED_NAME_PENSION_PENALTY_ON_EXCESS_DISTRIBUTIONS = "pensionPenaltyOnExcessDistributions";
  @SerializedName(SERIALIZED_NAME_PENSION_PENALTY_ON_EXCESS_DISTRIBUTIONS)
  private Currency pensionPenaltyOnExcessDistributions;

  public static final String SERIALIZED_NAME_REFUNDABLE_CREDITS = "refundableCredits";
  @SerializedName(SERIALIZED_NAME_REFUNDABLE_CREDITS)
  private Currency refundableCredits;

  public static final String SERIALIZED_NAME_SOCIAL_SECURITY_EMPLOYER = "socialSecurityEmployer";
  @SerializedName(SERIALIZED_NAME_SOCIAL_SECURITY_EMPLOYER)
  private Currency socialSecurityEmployer;

  public static final String SERIALIZED_NAME_SOCIAL_SECURITY_SELF_EMPLOYED = "socialSecuritySelfEmployed";
  @SerializedName(SERIALIZED_NAME_SOCIAL_SECURITY_SELF_EMPLOYED)
  private Currency socialSecuritySelfEmployed;

  public static final String SERIALIZED_NAME_STATE_INCOME = "stateIncome";
  @SerializedName(SERIALIZED_NAME_STATE_INCOME)
  private Currency stateIncome;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private Currency total;

  public ITaxes() {
  }

  public ITaxes estate(Currency estate) {
    this.estate = estate;
    return this;
  }

  /**
   * Get estate
   * @return estate
   */
  @javax.annotation.Nullable
  public Currency getEstate() {
    return estate;
  }

  public void setEstate(Currency estate) {
    this.estate = estate;
  }


  public ITaxes federalIncome(Currency federalIncome) {
    this.federalIncome = federalIncome;
    return this;
  }

  /**
   * Get federalIncome
   * @return federalIncome
   */
  @javax.annotation.Nullable
  public Currency getFederalIncome() {
    return federalIncome;
  }

  public void setFederalIncome(Currency federalIncome) {
    this.federalIncome = federalIncome;
  }


  public ITaxes giftAndGenerationSkippingTransfer(Currency giftAndGenerationSkippingTransfer) {
    this.giftAndGenerationSkippingTransfer = giftAndGenerationSkippingTransfer;
    return this;
  }

  /**
   * Get giftAndGenerationSkippingTransfer
   * @return giftAndGenerationSkippingTransfer
   */
  @javax.annotation.Nullable
  public Currency getGiftAndGenerationSkippingTransfer() {
    return giftAndGenerationSkippingTransfer;
  }

  public void setGiftAndGenerationSkippingTransfer(Currency giftAndGenerationSkippingTransfer) {
    this.giftAndGenerationSkippingTransfer = giftAndGenerationSkippingTransfer;
  }


  public ITaxes medicare(Currency medicare) {
    this.medicare = medicare;
    return this;
  }

  /**
   * Get medicare
   * @return medicare
   */
  @javax.annotation.Nullable
  public Currency getMedicare() {
    return medicare;
  }

  public void setMedicare(Currency medicare) {
    this.medicare = medicare;
  }


  public ITaxes pensionEarlyDistributionPenalty(Currency pensionEarlyDistributionPenalty) {
    this.pensionEarlyDistributionPenalty = pensionEarlyDistributionPenalty;
    return this;
  }

  /**
   * Get pensionEarlyDistributionPenalty
   * @return pensionEarlyDistributionPenalty
   */
  @javax.annotation.Nullable
  public Currency getPensionEarlyDistributionPenalty() {
    return pensionEarlyDistributionPenalty;
  }

  public void setPensionEarlyDistributionPenalty(Currency pensionEarlyDistributionPenalty) {
    this.pensionEarlyDistributionPenalty = pensionEarlyDistributionPenalty;
  }


  public ITaxes pensionPenaltyOnExcessDistributions(Currency pensionPenaltyOnExcessDistributions) {
    this.pensionPenaltyOnExcessDistributions = pensionPenaltyOnExcessDistributions;
    return this;
  }

  /**
   * Get pensionPenaltyOnExcessDistributions
   * @return pensionPenaltyOnExcessDistributions
   */
  @javax.annotation.Nullable
  public Currency getPensionPenaltyOnExcessDistributions() {
    return pensionPenaltyOnExcessDistributions;
  }

  public void setPensionPenaltyOnExcessDistributions(Currency pensionPenaltyOnExcessDistributions) {
    this.pensionPenaltyOnExcessDistributions = pensionPenaltyOnExcessDistributions;
  }


  public ITaxes refundableCredits(Currency refundableCredits) {
    this.refundableCredits = refundableCredits;
    return this;
  }

  /**
   * Get refundableCredits
   * @return refundableCredits
   */
  @javax.annotation.Nullable
  public Currency getRefundableCredits() {
    return refundableCredits;
  }

  public void setRefundableCredits(Currency refundableCredits) {
    this.refundableCredits = refundableCredits;
  }


  public ITaxes socialSecurityEmployer(Currency socialSecurityEmployer) {
    this.socialSecurityEmployer = socialSecurityEmployer;
    return this;
  }

  /**
   * Get socialSecurityEmployer
   * @return socialSecurityEmployer
   */
  @javax.annotation.Nullable
  public Currency getSocialSecurityEmployer() {
    return socialSecurityEmployer;
  }

  public void setSocialSecurityEmployer(Currency socialSecurityEmployer) {
    this.socialSecurityEmployer = socialSecurityEmployer;
  }


  public ITaxes socialSecuritySelfEmployed(Currency socialSecuritySelfEmployed) {
    this.socialSecuritySelfEmployed = socialSecuritySelfEmployed;
    return this;
  }

  /**
   * Get socialSecuritySelfEmployed
   * @return socialSecuritySelfEmployed
   */
  @javax.annotation.Nullable
  public Currency getSocialSecuritySelfEmployed() {
    return socialSecuritySelfEmployed;
  }

  public void setSocialSecuritySelfEmployed(Currency socialSecuritySelfEmployed) {
    this.socialSecuritySelfEmployed = socialSecuritySelfEmployed;
  }


  public ITaxes stateIncome(Currency stateIncome) {
    this.stateIncome = stateIncome;
    return this;
  }

  /**
   * Get stateIncome
   * @return stateIncome
   */
  @javax.annotation.Nullable
  public Currency getStateIncome() {
    return stateIncome;
  }

  public void setStateIncome(Currency stateIncome) {
    this.stateIncome = stateIncome;
  }


  public ITaxes total(Currency total) {
    this.total = total;
    return this;
  }

  /**
   * Get total
   * @return total
   */
  @javax.annotation.Nullable
  public Currency getTotal() {
    return total;
  }

  public void setTotal(Currency total) {
    this.total = total;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ITaxes itaxes = (ITaxes) o;
    return Objects.equals(this.estate, itaxes.estate) &&
        Objects.equals(this.federalIncome, itaxes.federalIncome) &&
        Objects.equals(this.giftAndGenerationSkippingTransfer, itaxes.giftAndGenerationSkippingTransfer) &&
        Objects.equals(this.medicare, itaxes.medicare) &&
        Objects.equals(this.pensionEarlyDistributionPenalty, itaxes.pensionEarlyDistributionPenalty) &&
        Objects.equals(this.pensionPenaltyOnExcessDistributions, itaxes.pensionPenaltyOnExcessDistributions) &&
        Objects.equals(this.refundableCredits, itaxes.refundableCredits) &&
        Objects.equals(this.socialSecurityEmployer, itaxes.socialSecurityEmployer) &&
        Objects.equals(this.socialSecuritySelfEmployed, itaxes.socialSecuritySelfEmployed) &&
        Objects.equals(this.stateIncome, itaxes.stateIncome) &&
        Objects.equals(this.total, itaxes.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(estate, federalIncome, giftAndGenerationSkippingTransfer, medicare, pensionEarlyDistributionPenalty, pensionPenaltyOnExcessDistributions, refundableCredits, socialSecurityEmployer, socialSecuritySelfEmployed, stateIncome, total);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ITaxes {\n");
    sb.append("    estate: ").append(toIndentedString(estate)).append("\n");
    sb.append("    federalIncome: ").append(toIndentedString(federalIncome)).append("\n");
    sb.append("    giftAndGenerationSkippingTransfer: ").append(toIndentedString(giftAndGenerationSkippingTransfer)).append("\n");
    sb.append("    medicare: ").append(toIndentedString(medicare)).append("\n");
    sb.append("    pensionEarlyDistributionPenalty: ").append(toIndentedString(pensionEarlyDistributionPenalty)).append("\n");
    sb.append("    pensionPenaltyOnExcessDistributions: ").append(toIndentedString(pensionPenaltyOnExcessDistributions)).append("\n");
    sb.append("    refundableCredits: ").append(toIndentedString(refundableCredits)).append("\n");
    sb.append("    socialSecurityEmployer: ").append(toIndentedString(socialSecurityEmployer)).append("\n");
    sb.append("    socialSecuritySelfEmployed: ").append(toIndentedString(socialSecuritySelfEmployed)).append("\n");
    sb.append("    stateIncome: ").append(toIndentedString(stateIncome)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("estate");
    openapiFields.add("federalIncome");
    openapiFields.add("giftAndGenerationSkippingTransfer");
    openapiFields.add("medicare");
    openapiFields.add("pensionEarlyDistributionPenalty");
    openapiFields.add("pensionPenaltyOnExcessDistributions");
    openapiFields.add("refundableCredits");
    openapiFields.add("socialSecurityEmployer");
    openapiFields.add("socialSecuritySelfEmployed");
    openapiFields.add("stateIncome");
    openapiFields.add("total");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ITaxes
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ITaxes.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ITaxes is not found in the empty JSON string", ITaxes.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ITaxes.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ITaxes` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `estate`
      if (jsonObj.get("estate") != null && !jsonObj.get("estate").isJsonNull()) {
        Currency.validateJsonElement(jsonObj.get("estate"));
      }
      // validate the optional field `federalIncome`
      if (jsonObj.get("federalIncome") != null && !jsonObj.get("federalIncome").isJsonNull()) {
        Currency.validateJsonElement(jsonObj.get("federalIncome"));
      }
      // validate the optional field `giftAndGenerationSkippingTransfer`
      if (jsonObj.get("giftAndGenerationSkippingTransfer") != null && !jsonObj.get("giftAndGenerationSkippingTransfer").isJsonNull()) {
        Currency.validateJsonElement(jsonObj.get("giftAndGenerationSkippingTransfer"));
      }
      // validate the optional field `medicare`
      if (jsonObj.get("medicare") != null && !jsonObj.get("medicare").isJsonNull()) {
        Currency.validateJsonElement(jsonObj.get("medicare"));
      }
      // validate the optional field `pensionEarlyDistributionPenalty`
      if (jsonObj.get("pensionEarlyDistributionPenalty") != null && !jsonObj.get("pensionEarlyDistributionPenalty").isJsonNull()) {
        Currency.validateJsonElement(jsonObj.get("pensionEarlyDistributionPenalty"));
      }
      // validate the optional field `pensionPenaltyOnExcessDistributions`
      if (jsonObj.get("pensionPenaltyOnExcessDistributions") != null && !jsonObj.get("pensionPenaltyOnExcessDistributions").isJsonNull()) {
        Currency.validateJsonElement(jsonObj.get("pensionPenaltyOnExcessDistributions"));
      }
      // validate the optional field `refundableCredits`
      if (jsonObj.get("refundableCredits") != null && !jsonObj.get("refundableCredits").isJsonNull()) {
        Currency.validateJsonElement(jsonObj.get("refundableCredits"));
      }
      // validate the optional field `socialSecurityEmployer`
      if (jsonObj.get("socialSecurityEmployer") != null && !jsonObj.get("socialSecurityEmployer").isJsonNull()) {
        Currency.validateJsonElement(jsonObj.get("socialSecurityEmployer"));
      }
      // validate the optional field `socialSecuritySelfEmployed`
      if (jsonObj.get("socialSecuritySelfEmployed") != null && !jsonObj.get("socialSecuritySelfEmployed").isJsonNull()) {
        Currency.validateJsonElement(jsonObj.get("socialSecuritySelfEmployed"));
      }
      // validate the optional field `stateIncome`
      if (jsonObj.get("stateIncome") != null && !jsonObj.get("stateIncome").isJsonNull()) {
        Currency.validateJsonElement(jsonObj.get("stateIncome"));
      }
      // validate the optional field `total`
      if (jsonObj.get("total") != null && !jsonObj.get("total").isJsonNull()) {
        Currency.validateJsonElement(jsonObj.get("total"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ITaxes.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ITaxes' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ITaxes> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ITaxes.class));

       return (TypeAdapter<T>) new TypeAdapter<ITaxes>() {
           @Override
           public void write(JsonWriter out, ITaxes value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ITaxes read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ITaxes given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ITaxes
   * @throws IOException if the JSON string is invalid with respect to ITaxes
   */
  public static ITaxes fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ITaxes.class);
  }

  /**
   * Convert an instance of ITaxes to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

