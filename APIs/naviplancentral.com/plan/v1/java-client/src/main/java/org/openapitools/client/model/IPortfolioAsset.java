/*
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Currency;
import org.openapitools.client.model.FormattedDateRange;
import org.openapitools.client.model.GoalId;
import org.openapitools.client.model.IRateOfReturnDetails;
import org.openapitools.client.model.IRedemptionStrategies;
import org.openapitools.client.model.IReturnIncomeReinvestedDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * IPortfolioAsset
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:57:21.776546-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class IPortfolioAsset {
  public static final String SERIALIZED_NAME_APPLICABLE_RANGE_RETIREMENT_LIQUIDATED_ASSETS = "applicableRangeRetirementLiquidatedAssets";
  @SerializedName(SERIALIZED_NAME_APPLICABLE_RANGE_RETIREMENT_LIQUIDATED_ASSETS)
  private FormattedDateRange applicableRangeRetirementLiquidatedAssets;

  public static final String SERIALIZED_NAME_COST_BASIS = "costBasis";
  @SerializedName(SERIALIZED_NAME_COST_BASIS)
  private Currency costBasis;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_GOAL_FUNDING_DESCRIPTION = "goalFundingDescription";
  @SerializedName(SERIALIZED_NAME_GOAL_FUNDING_DESCRIPTION)
  private String goalFundingDescription;

  public static final String SERIALIZED_NAME_GOAL_FUNDING_GOAL_ID = "goalFundingGoalId";
  @SerializedName(SERIALIZED_NAME_GOAL_FUNDING_GOAL_ID)
  private GoalId goalFundingGoalId;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_INCOME_REINVESTED = "incomeReinvested";
  @SerializedName(SERIALIZED_NAME_INCOME_REINVESTED)
  private IReturnIncomeReinvestedDetails incomeReinvested;

  public static final String SERIALIZED_NAME_IS_SYSTEM_GENERATED = "isSystemGenerated";
  @SerializedName(SERIALIZED_NAME_IS_SYSTEM_GENERATED)
  private Boolean isSystemGenerated;

  public static final String SERIALIZED_NAME_MARKET_VALUE = "marketValue";
  @SerializedName(SERIALIZED_NAME_MARKET_VALUE)
  private Currency marketValue;

  public static final String SERIALIZED_NAME_PARENT_ACCOUNT_ID = "parentAccountId";
  @SerializedName(SERIALIZED_NAME_PARENT_ACCOUNT_ID)
  private String parentAccountId;

  public static final String SERIALIZED_NAME_RATE_OF_RETURN = "rateOfReturn";
  @SerializedName(SERIALIZED_NAME_RATE_OF_RETURN)
  private IRateOfReturnDetails rateOfReturn;

  public static final String SERIALIZED_NAME_REDEMPTION_STRATEGIES = "redemptionStrategies";
  @SerializedName(SERIALIZED_NAME_REDEMPTION_STRATEGIES)
  private IRedemptionStrategies redemptionStrategies;

  public IPortfolioAsset() {
  }

  public IPortfolioAsset(
     String description, 
     String goalFundingDescription, 
     String id, 
     Boolean isSystemGenerated, 
     String parentAccountId
  ) {
    this();
    this.description = description;
    this.goalFundingDescription = goalFundingDescription;
    this.id = id;
    this.isSystemGenerated = isSystemGenerated;
    this.parentAccountId = parentAccountId;
  }

  public IPortfolioAsset applicableRangeRetirementLiquidatedAssets(FormattedDateRange applicableRangeRetirementLiquidatedAssets) {
    this.applicableRangeRetirementLiquidatedAssets = applicableRangeRetirementLiquidatedAssets;
    return this;
  }

  /**
   * Get applicableRangeRetirementLiquidatedAssets
   * @return applicableRangeRetirementLiquidatedAssets
   */
  @javax.annotation.Nullable
  public FormattedDateRange getApplicableRangeRetirementLiquidatedAssets() {
    return applicableRangeRetirementLiquidatedAssets;
  }

  public void setApplicableRangeRetirementLiquidatedAssets(FormattedDateRange applicableRangeRetirementLiquidatedAssets) {
    this.applicableRangeRetirementLiquidatedAssets = applicableRangeRetirementLiquidatedAssets;
  }


  public IPortfolioAsset costBasis(Currency costBasis) {
    this.costBasis = costBasis;
    return this;
  }

  /**
   * Get costBasis
   * @return costBasis
   */
  @javax.annotation.Nullable
  public Currency getCostBasis() {
    return costBasis;
  }

  public void setCostBasis(Currency costBasis) {
    this.costBasis = costBasis;
  }


  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }



  /**
   * Get goalFundingDescription
   * @return goalFundingDescription
   */
  @javax.annotation.Nullable
  public String getGoalFundingDescription() {
    return goalFundingDescription;
  }



  public IPortfolioAsset goalFundingGoalId(GoalId goalFundingGoalId) {
    this.goalFundingGoalId = goalFundingGoalId;
    return this;
  }

  /**
   * Get goalFundingGoalId
   * @return goalFundingGoalId
   */
  @javax.annotation.Nullable
  public GoalId getGoalFundingGoalId() {
    return goalFundingGoalId;
  }

  public void setGoalFundingGoalId(GoalId goalFundingGoalId) {
    this.goalFundingGoalId = goalFundingGoalId;
  }


  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }



  public IPortfolioAsset incomeReinvested(IReturnIncomeReinvestedDetails incomeReinvested) {
    this.incomeReinvested = incomeReinvested;
    return this;
  }

  /**
   * Get incomeReinvested
   * @return incomeReinvested
   */
  @javax.annotation.Nullable
  public IReturnIncomeReinvestedDetails getIncomeReinvested() {
    return incomeReinvested;
  }

  public void setIncomeReinvested(IReturnIncomeReinvestedDetails incomeReinvested) {
    this.incomeReinvested = incomeReinvested;
  }


  /**
   * Get isSystemGenerated
   * @return isSystemGenerated
   */
  @javax.annotation.Nullable
  public Boolean getIsSystemGenerated() {
    return isSystemGenerated;
  }



  public IPortfolioAsset marketValue(Currency marketValue) {
    this.marketValue = marketValue;
    return this;
  }

  /**
   * Get marketValue
   * @return marketValue
   */
  @javax.annotation.Nullable
  public Currency getMarketValue() {
    return marketValue;
  }

  public void setMarketValue(Currency marketValue) {
    this.marketValue = marketValue;
  }


  /**
   * Get parentAccountId
   * @return parentAccountId
   */
  @javax.annotation.Nullable
  public String getParentAccountId() {
    return parentAccountId;
  }



  public IPortfolioAsset rateOfReturn(IRateOfReturnDetails rateOfReturn) {
    this.rateOfReturn = rateOfReturn;
    return this;
  }

  /**
   * Get rateOfReturn
   * @return rateOfReturn
   */
  @javax.annotation.Nullable
  public IRateOfReturnDetails getRateOfReturn() {
    return rateOfReturn;
  }

  public void setRateOfReturn(IRateOfReturnDetails rateOfReturn) {
    this.rateOfReturn = rateOfReturn;
  }


  public IPortfolioAsset redemptionStrategies(IRedemptionStrategies redemptionStrategies) {
    this.redemptionStrategies = redemptionStrategies;
    return this;
  }

  /**
   * Get redemptionStrategies
   * @return redemptionStrategies
   */
  @javax.annotation.Nullable
  public IRedemptionStrategies getRedemptionStrategies() {
    return redemptionStrategies;
  }

  public void setRedemptionStrategies(IRedemptionStrategies redemptionStrategies) {
    this.redemptionStrategies = redemptionStrategies;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IPortfolioAsset iportfolioAsset = (IPortfolioAsset) o;
    return Objects.equals(this.applicableRangeRetirementLiquidatedAssets, iportfolioAsset.applicableRangeRetirementLiquidatedAssets) &&
        Objects.equals(this.costBasis, iportfolioAsset.costBasis) &&
        Objects.equals(this.description, iportfolioAsset.description) &&
        Objects.equals(this.goalFundingDescription, iportfolioAsset.goalFundingDescription) &&
        Objects.equals(this.goalFundingGoalId, iportfolioAsset.goalFundingGoalId) &&
        Objects.equals(this.id, iportfolioAsset.id) &&
        Objects.equals(this.incomeReinvested, iportfolioAsset.incomeReinvested) &&
        Objects.equals(this.isSystemGenerated, iportfolioAsset.isSystemGenerated) &&
        Objects.equals(this.marketValue, iportfolioAsset.marketValue) &&
        Objects.equals(this.parentAccountId, iportfolioAsset.parentAccountId) &&
        Objects.equals(this.rateOfReturn, iportfolioAsset.rateOfReturn) &&
        Objects.equals(this.redemptionStrategies, iportfolioAsset.redemptionStrategies);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicableRangeRetirementLiquidatedAssets, costBasis, description, goalFundingDescription, goalFundingGoalId, id, incomeReinvested, isSystemGenerated, marketValue, parentAccountId, rateOfReturn, redemptionStrategies);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IPortfolioAsset {\n");
    sb.append("    applicableRangeRetirementLiquidatedAssets: ").append(toIndentedString(applicableRangeRetirementLiquidatedAssets)).append("\n");
    sb.append("    costBasis: ").append(toIndentedString(costBasis)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    goalFundingDescription: ").append(toIndentedString(goalFundingDescription)).append("\n");
    sb.append("    goalFundingGoalId: ").append(toIndentedString(goalFundingGoalId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    incomeReinvested: ").append(toIndentedString(incomeReinvested)).append("\n");
    sb.append("    isSystemGenerated: ").append(toIndentedString(isSystemGenerated)).append("\n");
    sb.append("    marketValue: ").append(toIndentedString(marketValue)).append("\n");
    sb.append("    parentAccountId: ").append(toIndentedString(parentAccountId)).append("\n");
    sb.append("    rateOfReturn: ").append(toIndentedString(rateOfReturn)).append("\n");
    sb.append("    redemptionStrategies: ").append(toIndentedString(redemptionStrategies)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("applicableRangeRetirementLiquidatedAssets");
    openapiFields.add("costBasis");
    openapiFields.add("description");
    openapiFields.add("goalFundingDescription");
    openapiFields.add("goalFundingGoalId");
    openapiFields.add("id");
    openapiFields.add("incomeReinvested");
    openapiFields.add("isSystemGenerated");
    openapiFields.add("marketValue");
    openapiFields.add("parentAccountId");
    openapiFields.add("rateOfReturn");
    openapiFields.add("redemptionStrategies");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IPortfolioAsset
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IPortfolioAsset.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IPortfolioAsset is not found in the empty JSON string", IPortfolioAsset.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IPortfolioAsset.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IPortfolioAsset` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `applicableRangeRetirementLiquidatedAssets`
      if (jsonObj.get("applicableRangeRetirementLiquidatedAssets") != null && !jsonObj.get("applicableRangeRetirementLiquidatedAssets").isJsonNull()) {
        FormattedDateRange.validateJsonElement(jsonObj.get("applicableRangeRetirementLiquidatedAssets"));
      }
      // validate the optional field `costBasis`
      if (jsonObj.get("costBasis") != null && !jsonObj.get("costBasis").isJsonNull()) {
        Currency.validateJsonElement(jsonObj.get("costBasis"));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("goalFundingDescription") != null && !jsonObj.get("goalFundingDescription").isJsonNull()) && !jsonObj.get("goalFundingDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `goalFundingDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("goalFundingDescription").toString()));
      }
      // validate the optional field `goalFundingGoalId`
      if (jsonObj.get("goalFundingGoalId") != null && !jsonObj.get("goalFundingGoalId").isJsonNull()) {
        GoalId.validateJsonElement(jsonObj.get("goalFundingGoalId"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `incomeReinvested`
      if (jsonObj.get("incomeReinvested") != null && !jsonObj.get("incomeReinvested").isJsonNull()) {
        IReturnIncomeReinvestedDetails.validateJsonElement(jsonObj.get("incomeReinvested"));
      }
      // validate the optional field `marketValue`
      if (jsonObj.get("marketValue") != null && !jsonObj.get("marketValue").isJsonNull()) {
        Currency.validateJsonElement(jsonObj.get("marketValue"));
      }
      if ((jsonObj.get("parentAccountId") != null && !jsonObj.get("parentAccountId").isJsonNull()) && !jsonObj.get("parentAccountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentAccountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentAccountId").toString()));
      }
      // validate the optional field `rateOfReturn`
      if (jsonObj.get("rateOfReturn") != null && !jsonObj.get("rateOfReturn").isJsonNull()) {
        IRateOfReturnDetails.validateJsonElement(jsonObj.get("rateOfReturn"));
      }
      // validate the optional field `redemptionStrategies`
      if (jsonObj.get("redemptionStrategies") != null && !jsonObj.get("redemptionStrategies").isJsonNull()) {
        IRedemptionStrategies.validateJsonElement(jsonObj.get("redemptionStrategies"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IPortfolioAsset.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IPortfolioAsset' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IPortfolioAsset> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IPortfolioAsset.class));

       return (TypeAdapter<T>) new TypeAdapter<IPortfolioAsset>() {
           @Override
           public void write(JsonWriter out, IPortfolioAsset value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IPortfolioAsset read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IPortfolioAsset given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IPortfolioAsset
   * @throws IOException if the JSON string is invalid with respect to IPortfolioAsset
   */
  public static IPortfolioAsset fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IPortfolioAsset.class);
  }

  /**
   * Convert an instance of IPortfolioAsset to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

