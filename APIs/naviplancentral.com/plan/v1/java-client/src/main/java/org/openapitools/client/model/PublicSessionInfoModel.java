/*
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PublicSessionInfoModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:57:21.776546-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PublicSessionInfoModel {
  public static final String SERIALIZED_NAME_EULA_ACCEPTED = "eulaAccepted";
  @SerializedName(SERIALIZED_NAME_EULA_ACCEPTED)
  private Boolean eulaAccepted;

  public static final String SERIALIZED_NAME_HAS_ACCOUNT_AGGREGATION = "hasAccountAggregation";
  @SerializedName(SERIALIZED_NAME_HAS_ACCOUNT_AGGREGATION)
  private Boolean hasAccountAggregation;

  public static final String SERIALIZED_NAME_HAS_GOAL_WHAT_IFING = "hasGoalWhatIfing";
  @SerializedName(SERIALIZED_NAME_HAS_GOAL_WHAT_IFING)
  private Boolean hasGoalWhatIfing;

  public static final String SERIALIZED_NAME_HAS_USER_SET_PASSWORD = "hasUserSetPassword";
  @SerializedName(SERIALIZED_NAME_HAS_USER_SET_PASSWORD)
  private Boolean hasUserSetPassword;

  public static final String SERIALIZED_NAME_IS_ADMIN = "isAdmin";
  @SerializedName(SERIALIZED_NAME_IS_ADMIN)
  private Boolean isAdmin;

  public static final String SERIALIZED_NAME_IS_ADVISOR = "isAdvisor";
  @SerializedName(SERIALIZED_NAME_IS_ADVISOR)
  private Boolean isAdvisor;

  public static final String SERIALIZED_NAME_IS_CLIENT = "isClient";
  @SerializedName(SERIALIZED_NAME_IS_CLIENT)
  private Boolean isClient;

  public static final String SERIALIZED_NAME_IS_PASSWORD_EXPIRED = "isPasswordExpired";
  @SerializedName(SERIALIZED_NAME_IS_PASSWORD_EXPIRED)
  private Boolean isPasswordExpired;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_USER_NAME = "userName";
  @SerializedName(SERIALIZED_NAME_USER_NAME)
  private String userName;

  public PublicSessionInfoModel() {
  }

  public PublicSessionInfoModel eulaAccepted(Boolean eulaAccepted) {
    this.eulaAccepted = eulaAccepted;
    return this;
  }

  /**
   * Get eulaAccepted
   * @return eulaAccepted
   */
  @javax.annotation.Nullable
  public Boolean getEulaAccepted() {
    return eulaAccepted;
  }

  public void setEulaAccepted(Boolean eulaAccepted) {
    this.eulaAccepted = eulaAccepted;
  }


  public PublicSessionInfoModel hasAccountAggregation(Boolean hasAccountAggregation) {
    this.hasAccountAggregation = hasAccountAggregation;
    return this;
  }

  /**
   * Get hasAccountAggregation
   * @return hasAccountAggregation
   */
  @javax.annotation.Nullable
  public Boolean getHasAccountAggregation() {
    return hasAccountAggregation;
  }

  public void setHasAccountAggregation(Boolean hasAccountAggregation) {
    this.hasAccountAggregation = hasAccountAggregation;
  }


  public PublicSessionInfoModel hasGoalWhatIfing(Boolean hasGoalWhatIfing) {
    this.hasGoalWhatIfing = hasGoalWhatIfing;
    return this;
  }

  /**
   * Get hasGoalWhatIfing
   * @return hasGoalWhatIfing
   */
  @javax.annotation.Nullable
  public Boolean getHasGoalWhatIfing() {
    return hasGoalWhatIfing;
  }

  public void setHasGoalWhatIfing(Boolean hasGoalWhatIfing) {
    this.hasGoalWhatIfing = hasGoalWhatIfing;
  }


  public PublicSessionInfoModel hasUserSetPassword(Boolean hasUserSetPassword) {
    this.hasUserSetPassword = hasUserSetPassword;
    return this;
  }

  /**
   * Get hasUserSetPassword
   * @return hasUserSetPassword
   */
  @javax.annotation.Nullable
  public Boolean getHasUserSetPassword() {
    return hasUserSetPassword;
  }

  public void setHasUserSetPassword(Boolean hasUserSetPassword) {
    this.hasUserSetPassword = hasUserSetPassword;
  }


  public PublicSessionInfoModel isAdmin(Boolean isAdmin) {
    this.isAdmin = isAdmin;
    return this;
  }

  /**
   * Get isAdmin
   * @return isAdmin
   */
  @javax.annotation.Nullable
  public Boolean getIsAdmin() {
    return isAdmin;
  }

  public void setIsAdmin(Boolean isAdmin) {
    this.isAdmin = isAdmin;
  }


  public PublicSessionInfoModel isAdvisor(Boolean isAdvisor) {
    this.isAdvisor = isAdvisor;
    return this;
  }

  /**
   * Get isAdvisor
   * @return isAdvisor
   */
  @javax.annotation.Nullable
  public Boolean getIsAdvisor() {
    return isAdvisor;
  }

  public void setIsAdvisor(Boolean isAdvisor) {
    this.isAdvisor = isAdvisor;
  }


  public PublicSessionInfoModel isClient(Boolean isClient) {
    this.isClient = isClient;
    return this;
  }

  /**
   * Get isClient
   * @return isClient
   */
  @javax.annotation.Nullable
  public Boolean getIsClient() {
    return isClient;
  }

  public void setIsClient(Boolean isClient) {
    this.isClient = isClient;
  }


  public PublicSessionInfoModel isPasswordExpired(Boolean isPasswordExpired) {
    this.isPasswordExpired = isPasswordExpired;
    return this;
  }

  /**
   * Get isPasswordExpired
   * @return isPasswordExpired
   */
  @javax.annotation.Nullable
  public Boolean getIsPasswordExpired() {
    return isPasswordExpired;
  }

  public void setIsPasswordExpired(Boolean isPasswordExpired) {
    this.isPasswordExpired = isPasswordExpired;
  }


  public PublicSessionInfoModel userId(String userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }


  public PublicSessionInfoModel userName(String userName) {
    this.userName = userName;
    return this;
  }

  /**
   * Get userName
   * @return userName
   */
  @javax.annotation.Nullable
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PublicSessionInfoModel publicSessionInfoModel = (PublicSessionInfoModel) o;
    return Objects.equals(this.eulaAccepted, publicSessionInfoModel.eulaAccepted) &&
        Objects.equals(this.hasAccountAggregation, publicSessionInfoModel.hasAccountAggregation) &&
        Objects.equals(this.hasGoalWhatIfing, publicSessionInfoModel.hasGoalWhatIfing) &&
        Objects.equals(this.hasUserSetPassword, publicSessionInfoModel.hasUserSetPassword) &&
        Objects.equals(this.isAdmin, publicSessionInfoModel.isAdmin) &&
        Objects.equals(this.isAdvisor, publicSessionInfoModel.isAdvisor) &&
        Objects.equals(this.isClient, publicSessionInfoModel.isClient) &&
        Objects.equals(this.isPasswordExpired, publicSessionInfoModel.isPasswordExpired) &&
        Objects.equals(this.userId, publicSessionInfoModel.userId) &&
        Objects.equals(this.userName, publicSessionInfoModel.userName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eulaAccepted, hasAccountAggregation, hasGoalWhatIfing, hasUserSetPassword, isAdmin, isAdvisor, isClient, isPasswordExpired, userId, userName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PublicSessionInfoModel {\n");
    sb.append("    eulaAccepted: ").append(toIndentedString(eulaAccepted)).append("\n");
    sb.append("    hasAccountAggregation: ").append(toIndentedString(hasAccountAggregation)).append("\n");
    sb.append("    hasGoalWhatIfing: ").append(toIndentedString(hasGoalWhatIfing)).append("\n");
    sb.append("    hasUserSetPassword: ").append(toIndentedString(hasUserSetPassword)).append("\n");
    sb.append("    isAdmin: ").append(toIndentedString(isAdmin)).append("\n");
    sb.append("    isAdvisor: ").append(toIndentedString(isAdvisor)).append("\n");
    sb.append("    isClient: ").append(toIndentedString(isClient)).append("\n");
    sb.append("    isPasswordExpired: ").append(toIndentedString(isPasswordExpired)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("eulaAccepted");
    openapiFields.add("hasAccountAggregation");
    openapiFields.add("hasGoalWhatIfing");
    openapiFields.add("hasUserSetPassword");
    openapiFields.add("isAdmin");
    openapiFields.add("isAdvisor");
    openapiFields.add("isClient");
    openapiFields.add("isPasswordExpired");
    openapiFields.add("userId");
    openapiFields.add("userName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PublicSessionInfoModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PublicSessionInfoModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PublicSessionInfoModel is not found in the empty JSON string", PublicSessionInfoModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PublicSessionInfoModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PublicSessionInfoModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("userId") != null && !jsonObj.get("userId").isJsonNull()) && !jsonObj.get("userId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userId").toString()));
      }
      if ((jsonObj.get("userName") != null && !jsonObj.get("userName").isJsonNull()) && !jsonObj.get("userName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PublicSessionInfoModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PublicSessionInfoModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PublicSessionInfoModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PublicSessionInfoModel.class));

       return (TypeAdapter<T>) new TypeAdapter<PublicSessionInfoModel>() {
           @Override
           public void write(JsonWriter out, PublicSessionInfoModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PublicSessionInfoModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PublicSessionInfoModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PublicSessionInfoModel
   * @throws IOException if the JSON string is invalid with respect to PublicSessionInfoModel
   */
  public static PublicSessionInfoModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PublicSessionInfoModel.class);
  }

  /**
   * Convert an instance of PublicSessionInfoModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

