/*
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Date;
import org.openapitools.client.model.DescriptiveBoolean;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * IEstateDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:57:21.776546-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class IEstateDetails {
  public static final String SERIALIZED_NAME_ENABLE_FIFTY_PERCENT_SOLUTION = "enableFiftyPercentSolution";
  @SerializedName(SERIALIZED_NAME_ENABLE_FIFTY_PERCENT_SOLUTION)
  private DescriptiveBoolean enableFiftyPercentSolution;

  public static final String SERIALIZED_NAME_ESTATE_FREEZE = "estateFreeze";
  @SerializedName(SERIALIZED_NAME_ESTATE_FREEZE)
  private DescriptiveBoolean estateFreeze;

  public static final String SERIALIZED_NAME_ESTATE_FREEZE_DATE = "estateFreezeDate";
  @SerializedName(SERIALIZED_NAME_ESTATE_FREEZE_DATE)
  private Date estateFreezeDate;

  public static final String SERIALIZED_NAME_SHARE_OPTIONS_AT_FIRST_DEATH = "shareOptionsAtFirstDeath";
  @SerializedName(SERIALIZED_NAME_SHARE_OPTIONS_AT_FIRST_DEATH)
  private String shareOptionsAtFirstDeath;

  public static final String SERIALIZED_NAME_SHARE_OPTIONS_AT_SECOND_DEATH_AND_DEATH_IN_THE_SAME_YEAR = "shareOptionsAtSecondDeathAndDeathInTheSameYear";
  @SerializedName(SERIALIZED_NAME_SHARE_OPTIONS_AT_SECOND_DEATH_AND_DEATH_IN_THE_SAME_YEAR)
  private String shareOptionsAtSecondDeathAndDeathInTheSameYear;

  public IEstateDetails() {
  }

  public IEstateDetails(
     String shareOptionsAtFirstDeath, 
     String shareOptionsAtSecondDeathAndDeathInTheSameYear
  ) {
    this();
    this.shareOptionsAtFirstDeath = shareOptionsAtFirstDeath;
    this.shareOptionsAtSecondDeathAndDeathInTheSameYear = shareOptionsAtSecondDeathAndDeathInTheSameYear;
  }

  public IEstateDetails enableFiftyPercentSolution(DescriptiveBoolean enableFiftyPercentSolution) {
    this.enableFiftyPercentSolution = enableFiftyPercentSolution;
    return this;
  }

  /**
   * Get enableFiftyPercentSolution
   * @return enableFiftyPercentSolution
   */
  @javax.annotation.Nullable
  public DescriptiveBoolean getEnableFiftyPercentSolution() {
    return enableFiftyPercentSolution;
  }

  public void setEnableFiftyPercentSolution(DescriptiveBoolean enableFiftyPercentSolution) {
    this.enableFiftyPercentSolution = enableFiftyPercentSolution;
  }


  public IEstateDetails estateFreeze(DescriptiveBoolean estateFreeze) {
    this.estateFreeze = estateFreeze;
    return this;
  }

  /**
   * Get estateFreeze
   * @return estateFreeze
   */
  @javax.annotation.Nullable
  public DescriptiveBoolean getEstateFreeze() {
    return estateFreeze;
  }

  public void setEstateFreeze(DescriptiveBoolean estateFreeze) {
    this.estateFreeze = estateFreeze;
  }


  public IEstateDetails estateFreezeDate(Date estateFreezeDate) {
    this.estateFreezeDate = estateFreezeDate;
    return this;
  }

  /**
   * Get estateFreezeDate
   * @return estateFreezeDate
   */
  @javax.annotation.Nullable
  public Date getEstateFreezeDate() {
    return estateFreezeDate;
  }

  public void setEstateFreezeDate(Date estateFreezeDate) {
    this.estateFreezeDate = estateFreezeDate;
  }


  /**
   * Get shareOptionsAtFirstDeath
   * @return shareOptionsAtFirstDeath
   */
  @javax.annotation.Nullable
  public String getShareOptionsAtFirstDeath() {
    return shareOptionsAtFirstDeath;
  }



  /**
   * Get shareOptionsAtSecondDeathAndDeathInTheSameYear
   * @return shareOptionsAtSecondDeathAndDeathInTheSameYear
   */
  @javax.annotation.Nullable
  public String getShareOptionsAtSecondDeathAndDeathInTheSameYear() {
    return shareOptionsAtSecondDeathAndDeathInTheSameYear;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IEstateDetails iestateDetails = (IEstateDetails) o;
    return Objects.equals(this.enableFiftyPercentSolution, iestateDetails.enableFiftyPercentSolution) &&
        Objects.equals(this.estateFreeze, iestateDetails.estateFreeze) &&
        Objects.equals(this.estateFreezeDate, iestateDetails.estateFreezeDate) &&
        Objects.equals(this.shareOptionsAtFirstDeath, iestateDetails.shareOptionsAtFirstDeath) &&
        Objects.equals(this.shareOptionsAtSecondDeathAndDeathInTheSameYear, iestateDetails.shareOptionsAtSecondDeathAndDeathInTheSameYear);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enableFiftyPercentSolution, estateFreeze, estateFreezeDate, shareOptionsAtFirstDeath, shareOptionsAtSecondDeathAndDeathInTheSameYear);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IEstateDetails {\n");
    sb.append("    enableFiftyPercentSolution: ").append(toIndentedString(enableFiftyPercentSolution)).append("\n");
    sb.append("    estateFreeze: ").append(toIndentedString(estateFreeze)).append("\n");
    sb.append("    estateFreezeDate: ").append(toIndentedString(estateFreezeDate)).append("\n");
    sb.append("    shareOptionsAtFirstDeath: ").append(toIndentedString(shareOptionsAtFirstDeath)).append("\n");
    sb.append("    shareOptionsAtSecondDeathAndDeathInTheSameYear: ").append(toIndentedString(shareOptionsAtSecondDeathAndDeathInTheSameYear)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("enableFiftyPercentSolution");
    openapiFields.add("estateFreeze");
    openapiFields.add("estateFreezeDate");
    openapiFields.add("shareOptionsAtFirstDeath");
    openapiFields.add("shareOptionsAtSecondDeathAndDeathInTheSameYear");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IEstateDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IEstateDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IEstateDetails is not found in the empty JSON string", IEstateDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IEstateDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IEstateDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `enableFiftyPercentSolution`
      if (jsonObj.get("enableFiftyPercentSolution") != null && !jsonObj.get("enableFiftyPercentSolution").isJsonNull()) {
        DescriptiveBoolean.validateJsonElement(jsonObj.get("enableFiftyPercentSolution"));
      }
      // validate the optional field `estateFreeze`
      if (jsonObj.get("estateFreeze") != null && !jsonObj.get("estateFreeze").isJsonNull()) {
        DescriptiveBoolean.validateJsonElement(jsonObj.get("estateFreeze"));
      }
      // validate the optional field `estateFreezeDate`
      if (jsonObj.get("estateFreezeDate") != null && !jsonObj.get("estateFreezeDate").isJsonNull()) {
        Date.validateJsonElement(jsonObj.get("estateFreezeDate"));
      }
      if ((jsonObj.get("shareOptionsAtFirstDeath") != null && !jsonObj.get("shareOptionsAtFirstDeath").isJsonNull()) && !jsonObj.get("shareOptionsAtFirstDeath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shareOptionsAtFirstDeath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shareOptionsAtFirstDeath").toString()));
      }
      if ((jsonObj.get("shareOptionsAtSecondDeathAndDeathInTheSameYear") != null && !jsonObj.get("shareOptionsAtSecondDeathAndDeathInTheSameYear").isJsonNull()) && !jsonObj.get("shareOptionsAtSecondDeathAndDeathInTheSameYear").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shareOptionsAtSecondDeathAndDeathInTheSameYear` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shareOptionsAtSecondDeathAndDeathInTheSameYear").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IEstateDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IEstateDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IEstateDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IEstateDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<IEstateDetails>() {
           @Override
           public void write(JsonWriter out, IEstateDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IEstateDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IEstateDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IEstateDetails
   * @throws IOException if the JSON string is invalid with respect to IEstateDetails
   */
  public static IEstateDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IEstateDetails.class);
  }

  /**
   * Convert an instance of IEstateDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

