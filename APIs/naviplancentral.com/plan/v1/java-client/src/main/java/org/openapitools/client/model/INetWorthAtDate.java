/*
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Currency;
import org.openapitools.client.model.IAssets;
import org.openapitools.client.model.ILiabilities;
import org.openapitools.client.model.IRetirementAssets;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * INetWorthAtDate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:57:21.776546-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class INetWorthAtDate {
  public static final String SERIALIZED_NAME_ASSETS = "assets";
  @SerializedName(SERIALIZED_NAME_ASSETS)
  private IAssets assets;

  public static final String SERIALIZED_NAME_ASSETS_FUNDING_RETIREMENT = "assetsFundingRetirement";
  @SerializedName(SERIALIZED_NAME_ASSETS_FUNDING_RETIREMENT)
  private IRetirementAssets assetsFundingRetirement;

  public static final String SERIALIZED_NAME_CLIENT_NET_WORTH = "clientNetWorth";
  @SerializedName(SERIALIZED_NAME_CLIENT_NET_WORTH)
  private Currency clientNetWorth;

  public static final String SERIALIZED_NAME_CO_CLIENT_NET_WORTH = "coClientNetWorth";
  @SerializedName(SERIALIZED_NAME_CO_CLIENT_NET_WORTH)
  private Currency coClientNetWorth;

  public static final String SERIALIZED_NAME_COMMUNITY_PROPERTY_NET_WORTH = "communityPropertyNetWorth";
  @SerializedName(SERIALIZED_NAME_COMMUNITY_PROPERTY_NET_WORTH)
  private Currency communityPropertyNetWorth;

  public static final String SERIALIZED_NAME_JOINT_NET_WORTH = "jointNetWorth";
  @SerializedName(SERIALIZED_NAME_JOINT_NET_WORTH)
  private Currency jointNetWorth;

  public static final String SERIALIZED_NAME_LIABILITIES = "liabilities";
  @SerializedName(SERIALIZED_NAME_LIABILITIES)
  private ILiabilities liabilities;

  public static final String SERIALIZED_NAME_TOTAL_NET_WORTH = "totalNetWorth";
  @SerializedName(SERIALIZED_NAME_TOTAL_NET_WORTH)
  private Currency totalNetWorth;

  public INetWorthAtDate() {
  }

  public INetWorthAtDate assets(IAssets assets) {
    this.assets = assets;
    return this;
  }

  /**
   * Get assets
   * @return assets
   */
  @javax.annotation.Nullable
  public IAssets getAssets() {
    return assets;
  }

  public void setAssets(IAssets assets) {
    this.assets = assets;
  }


  public INetWorthAtDate assetsFundingRetirement(IRetirementAssets assetsFundingRetirement) {
    this.assetsFundingRetirement = assetsFundingRetirement;
    return this;
  }

  /**
   * Get assetsFundingRetirement
   * @return assetsFundingRetirement
   */
  @javax.annotation.Nullable
  public IRetirementAssets getAssetsFundingRetirement() {
    return assetsFundingRetirement;
  }

  public void setAssetsFundingRetirement(IRetirementAssets assetsFundingRetirement) {
    this.assetsFundingRetirement = assetsFundingRetirement;
  }


  public INetWorthAtDate clientNetWorth(Currency clientNetWorth) {
    this.clientNetWorth = clientNetWorth;
    return this;
  }

  /**
   * Get clientNetWorth
   * @return clientNetWorth
   */
  @javax.annotation.Nullable
  public Currency getClientNetWorth() {
    return clientNetWorth;
  }

  public void setClientNetWorth(Currency clientNetWorth) {
    this.clientNetWorth = clientNetWorth;
  }


  public INetWorthAtDate coClientNetWorth(Currency coClientNetWorth) {
    this.coClientNetWorth = coClientNetWorth;
    return this;
  }

  /**
   * Get coClientNetWorth
   * @return coClientNetWorth
   */
  @javax.annotation.Nullable
  public Currency getCoClientNetWorth() {
    return coClientNetWorth;
  }

  public void setCoClientNetWorth(Currency coClientNetWorth) {
    this.coClientNetWorth = coClientNetWorth;
  }


  public INetWorthAtDate communityPropertyNetWorth(Currency communityPropertyNetWorth) {
    this.communityPropertyNetWorth = communityPropertyNetWorth;
    return this;
  }

  /**
   * Get communityPropertyNetWorth
   * @return communityPropertyNetWorth
   */
  @javax.annotation.Nullable
  public Currency getCommunityPropertyNetWorth() {
    return communityPropertyNetWorth;
  }

  public void setCommunityPropertyNetWorth(Currency communityPropertyNetWorth) {
    this.communityPropertyNetWorth = communityPropertyNetWorth;
  }


  public INetWorthAtDate jointNetWorth(Currency jointNetWorth) {
    this.jointNetWorth = jointNetWorth;
    return this;
  }

  /**
   * Get jointNetWorth
   * @return jointNetWorth
   */
  @javax.annotation.Nullable
  public Currency getJointNetWorth() {
    return jointNetWorth;
  }

  public void setJointNetWorth(Currency jointNetWorth) {
    this.jointNetWorth = jointNetWorth;
  }


  public INetWorthAtDate liabilities(ILiabilities liabilities) {
    this.liabilities = liabilities;
    return this;
  }

  /**
   * Get liabilities
   * @return liabilities
   */
  @javax.annotation.Nullable
  public ILiabilities getLiabilities() {
    return liabilities;
  }

  public void setLiabilities(ILiabilities liabilities) {
    this.liabilities = liabilities;
  }


  public INetWorthAtDate totalNetWorth(Currency totalNetWorth) {
    this.totalNetWorth = totalNetWorth;
    return this;
  }

  /**
   * Get totalNetWorth
   * @return totalNetWorth
   */
  @javax.annotation.Nullable
  public Currency getTotalNetWorth() {
    return totalNetWorth;
  }

  public void setTotalNetWorth(Currency totalNetWorth) {
    this.totalNetWorth = totalNetWorth;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    INetWorthAtDate inetWorthAtDate = (INetWorthAtDate) o;
    return Objects.equals(this.assets, inetWorthAtDate.assets) &&
        Objects.equals(this.assetsFundingRetirement, inetWorthAtDate.assetsFundingRetirement) &&
        Objects.equals(this.clientNetWorth, inetWorthAtDate.clientNetWorth) &&
        Objects.equals(this.coClientNetWorth, inetWorthAtDate.coClientNetWorth) &&
        Objects.equals(this.communityPropertyNetWorth, inetWorthAtDate.communityPropertyNetWorth) &&
        Objects.equals(this.jointNetWorth, inetWorthAtDate.jointNetWorth) &&
        Objects.equals(this.liabilities, inetWorthAtDate.liabilities) &&
        Objects.equals(this.totalNetWorth, inetWorthAtDate.totalNetWorth);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assets, assetsFundingRetirement, clientNetWorth, coClientNetWorth, communityPropertyNetWorth, jointNetWorth, liabilities, totalNetWorth);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class INetWorthAtDate {\n");
    sb.append("    assets: ").append(toIndentedString(assets)).append("\n");
    sb.append("    assetsFundingRetirement: ").append(toIndentedString(assetsFundingRetirement)).append("\n");
    sb.append("    clientNetWorth: ").append(toIndentedString(clientNetWorth)).append("\n");
    sb.append("    coClientNetWorth: ").append(toIndentedString(coClientNetWorth)).append("\n");
    sb.append("    communityPropertyNetWorth: ").append(toIndentedString(communityPropertyNetWorth)).append("\n");
    sb.append("    jointNetWorth: ").append(toIndentedString(jointNetWorth)).append("\n");
    sb.append("    liabilities: ").append(toIndentedString(liabilities)).append("\n");
    sb.append("    totalNetWorth: ").append(toIndentedString(totalNetWorth)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("assets");
    openapiFields.add("assetsFundingRetirement");
    openapiFields.add("clientNetWorth");
    openapiFields.add("coClientNetWorth");
    openapiFields.add("communityPropertyNetWorth");
    openapiFields.add("jointNetWorth");
    openapiFields.add("liabilities");
    openapiFields.add("totalNetWorth");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to INetWorthAtDate
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!INetWorthAtDate.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in INetWorthAtDate is not found in the empty JSON string", INetWorthAtDate.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!INetWorthAtDate.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `INetWorthAtDate` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `assets`
      if (jsonObj.get("assets") != null && !jsonObj.get("assets").isJsonNull()) {
        IAssets.validateJsonElement(jsonObj.get("assets"));
      }
      // validate the optional field `assetsFundingRetirement`
      if (jsonObj.get("assetsFundingRetirement") != null && !jsonObj.get("assetsFundingRetirement").isJsonNull()) {
        IRetirementAssets.validateJsonElement(jsonObj.get("assetsFundingRetirement"));
      }
      // validate the optional field `clientNetWorth`
      if (jsonObj.get("clientNetWorth") != null && !jsonObj.get("clientNetWorth").isJsonNull()) {
        Currency.validateJsonElement(jsonObj.get("clientNetWorth"));
      }
      // validate the optional field `coClientNetWorth`
      if (jsonObj.get("coClientNetWorth") != null && !jsonObj.get("coClientNetWorth").isJsonNull()) {
        Currency.validateJsonElement(jsonObj.get("coClientNetWorth"));
      }
      // validate the optional field `communityPropertyNetWorth`
      if (jsonObj.get("communityPropertyNetWorth") != null && !jsonObj.get("communityPropertyNetWorth").isJsonNull()) {
        Currency.validateJsonElement(jsonObj.get("communityPropertyNetWorth"));
      }
      // validate the optional field `jointNetWorth`
      if (jsonObj.get("jointNetWorth") != null && !jsonObj.get("jointNetWorth").isJsonNull()) {
        Currency.validateJsonElement(jsonObj.get("jointNetWorth"));
      }
      // validate the optional field `liabilities`
      if (jsonObj.get("liabilities") != null && !jsonObj.get("liabilities").isJsonNull()) {
        ILiabilities.validateJsonElement(jsonObj.get("liabilities"));
      }
      // validate the optional field `totalNetWorth`
      if (jsonObj.get("totalNetWorth") != null && !jsonObj.get("totalNetWorth").isJsonNull()) {
        Currency.validateJsonElement(jsonObj.get("totalNetWorth"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!INetWorthAtDate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'INetWorthAtDate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<INetWorthAtDate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(INetWorthAtDate.class));

       return (TypeAdapter<T>) new TypeAdapter<INetWorthAtDate>() {
           @Override
           public void write(JsonWriter out, INetWorthAtDate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public INetWorthAtDate read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of INetWorthAtDate given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of INetWorthAtDate
   * @throws IOException if the JSON string is invalid with respect to INetWorthAtDate
   */
  public static INetWorthAtDate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, INetWorthAtDate.class);
  }

  /**
   * Convert an instance of INetWorthAtDate to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

