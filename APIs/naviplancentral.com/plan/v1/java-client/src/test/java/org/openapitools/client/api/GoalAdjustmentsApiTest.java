/*
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments;
import org.openapitools.client.model.AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfMajorPurchaseGoalAdjustments;
import org.openapitools.client.model.AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfRetirementGoalAdjustments;
import org.openapitools.client.model.AdvicentNaviPlanRestApiGoalAdjustmentsModelsEducationGoalAdjustmentsModel;
import org.openapitools.client.model.AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalAdjustmentsModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments;
import org.openapitools.client.model.AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalAdjustmentsModelAdvicentDomainLogicGoalWhatIfMajorPurchaseGoalAdjustments;
import org.openapitools.client.model.AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalAdjustmentsModelAdvicentDomainLogicGoalWhatIfRetirementGoalAdjustments;
import org.openapitools.client.model.AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalSuccessRateResultsModel;
import org.openapitools.client.model.AdvicentNaviPlanRestApiGoalAdjustmentsModelsMajorPurchaseGoalAdjustmentsModel;
import org.openapitools.client.model.AdvicentNaviPlanRestApiGoalAdjustmentsModelsRestrictionsResultModel;
import org.openapitools.client.model.AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel;
import org.openapitools.client.model.AdvicentNaviPlanRestApiGoalAdjustmentsModelsWhatAreMyOptionsModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GoalAdjustmentsApi
 */
@Disabled
public class GoalAdjustmentsApiTest {

    private final GoalAdjustmentsApi api = new GoalAdjustmentsApi();

    /**
     * Retrieve the adjustments
     *
     * This function retrieves a goal and the adjustments made to it
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void goalAdjustmentsGetEducationByIdClientidPlanidTest() throws ApiException {
        Integer id = null;
        String planId = null;
        String clientId = null;
        AdvicentNaviPlanRestApiGoalAdjustmentsModelsEducationGoalAdjustmentsModel response = api.goalAdjustmentsGetEducationByIdClientidPlanid(id, planId, clientId);
        // TODO: test validations
    }

    /**
     * Returns a list of goal adjustment restrictions.
     *
     * This function returns a list of adjustment restrictions for all goals.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void goalAdjustmentsGetGoalAdjustmentRestrictionsByClientidPlanidTest() throws ApiException {
        String planId = null;
        String clientId = null;
        AdvicentNaviPlanRestApiGoalAdjustmentsModelsRestrictionsResultModel response = api.goalAdjustmentsGetGoalAdjustmentRestrictionsByClientidPlanid(planId, clientId);
        // TODO: test validations
    }

    /**
     * Returns a list of goals with their relevant success rates.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void goalAdjustmentsGetGoalSuccessRatesByClientidPlanidTest() throws ApiException {
        String planId = null;
        String clientId = null;
        AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalSuccessRateResultsModel response = api.goalAdjustmentsGetGoalSuccessRatesByClientidPlanid(planId, clientId);
        // TODO: test validations
    }

    /**
     * Retrieve the adjustments
     *
     * This function retrieves a goal and the adjustments made to it
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void goalAdjustmentsGetMajorPurchaseByIdClientidPlanidTest() throws ApiException {
        Integer id = null;
        String planId = null;
        String clientId = null;
        AdvicentNaviPlanRestApiGoalAdjustmentsModelsMajorPurchaseGoalAdjustmentsModel response = api.goalAdjustmentsGetMajorPurchaseByIdClientidPlanid(id, planId, clientId);
        // TODO: test validations
    }

    /**
     * Retrieve the adjustments
     *
     * This function retrieves a goal and the adjustments made to it for a particular client
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void goalAdjustmentsGetRetirementByClientidPlanidTest() throws ApiException {
        String planId = null;
        String clientId = null;
        AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel response = api.goalAdjustmentsGetRetirementByClientidPlanid(planId, clientId);
        // TODO: test validations
    }

    /**
     * Returns WAMO values for current goal
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void goalAdjustmentsGetWhatAreMyOptionsByIdClientidPlanidTest() throws ApiException {
        Integer id = null;
        String planId = null;
        String clientId = null;
        AdvicentNaviPlanRestApiGoalAdjustmentsModelsWhatAreMyOptionsModel response = api.goalAdjustmentsGetWhatAreMyOptionsByIdClientidPlanid(id, planId, clientId);
        // TODO: test validations
    }

    /**
     * Perform calculations
     *
     * This function returns the posted object and the adjusted calculation values
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void goalAdjustmentsPostEducationByIdGoaladjustmentsPlanidTest() throws ApiException {
        Integer id = null;
        String planId = null;
        AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalAdjustmentsModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments goalAdjustments = null;
        AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments response = api.goalAdjustmentsPostEducationByIdGoaladjustmentsPlanid(id, planId, goalAdjustments);
        // TODO: test validations
    }

    /**
     * Perform calculations
     *
     * This function returns the posted object and the adjusted calculation values
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void goalAdjustmentsPostMajorPurchaseByIdGoaladjustmentsPlanidTest() throws ApiException {
        Integer id = null;
        String planId = null;
        AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalAdjustmentsModelAdvicentDomainLogicGoalWhatIfMajorPurchaseGoalAdjustments goalAdjustments = null;
        AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfMajorPurchaseGoalAdjustments response = api.goalAdjustmentsPostMajorPurchaseByIdGoaladjustmentsPlanid(id, planId, goalAdjustments);
        // TODO: test validations
    }

    /**
     * Perform calculations
     *
     * This function returns the posted object and the adjusted calculation values
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void goalAdjustmentsPostRetirementByGoaladjustmentsPlanidTest() throws ApiException {
        String planId = null;
        AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalAdjustmentsModelAdvicentDomainLogicGoalWhatIfRetirementGoalAdjustments goalAdjustments = null;
        AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfRetirementGoalAdjustments response = api.goalAdjustmentsPostRetirementByGoaladjustmentsPlanid(planId, goalAdjustments);
        // TODO: test validations
    }

}
