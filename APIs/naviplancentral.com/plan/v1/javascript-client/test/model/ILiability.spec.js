/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NaviPlanApi);
  }
}(this, function(expect, NaviPlanApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NaviPlanApi.ILiability();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ILiability', function() {
    it('should create an instance of ILiability', function() {
      // uncomment below and update the code to test ILiability
      //var instance = new NaviPlanApi.ILiability();
      //expect(instance).to.be.a(NaviPlanApi.ILiability);
    });

    it('should have the property annualPaymentAmount (base name: "annualPaymentAmount")', function() {
      // uncomment below and update the code to test the property annualPaymentAmount
      //var instance = new NaviPlanApi.ILiability();
      //expect(instance).to.be();
    });

    it('should have the property balanceAsOf (base name: "balanceAsOf")', function() {
      // uncomment below and update the code to test the property balanceAsOf
      //var instance = new NaviPlanApi.ILiability();
      //expect(instance).to.be();
    });

    it('should have the property balanceAsOfPlanDate (base name: "balanceAsOfPlanDate")', function() {
      // uncomment below and update the code to test the property balanceAsOfPlanDate
      //var instance = new NaviPlanApi.ILiability();
      //expect(instance).to.be();
    });

    it('should have the property debtModStrategies (base name: "debtModStrategies")', function() {
      // uncomment below and update the code to test the property debtModStrategies
      //var instance = new NaviPlanApi.ILiability();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new NaviPlanApi.ILiability();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new NaviPlanApi.ILiability();
      //expect(instance).to.be();
    });

    it('should have the property insuredForDisability (base name: "insuredForDisability")', function() {
      // uncomment below and update the code to test the property insuredForDisability
      //var instance = new NaviPlanApi.ILiability();
      //expect(instance).to.be();
    });

    it('should have the property insuredForLife (base name: "insuredForLife")', function() {
      // uncomment below and update the code to test the property insuredForLife
      //var instance = new NaviPlanApi.ILiability();
      //expect(instance).to.be();
    });

    it('should have the property interestRate (base name: "interestRate")', function() {
      // uncomment below and update the code to test the property interestRate
      //var instance = new NaviPlanApi.ILiability();
      //expect(instance).to.be();
    });

    it('should have the property isInterestRateVariable (base name: "isInterestRateVariable")', function() {
      // uncomment below and update the code to test the property isInterestRateVariable
      //var instance = new NaviPlanApi.ILiability();
      //expect(instance).to.be();
    });

    it('should have the property isPaymentVariable (base name: "isPaymentVariable")', function() {
      // uncomment below and update the code to test the property isPaymentVariable
      //var instance = new NaviPlanApi.ILiability();
      //expect(instance).to.be();
    });

    it('should have the property linkedAssetId (base name: "linkedAssetId")', function() {
      // uncomment below and update the code to test the property linkedAssetId
      //var instance = new NaviPlanApi.ILiability();
      //expect(instance).to.be();
    });

    it('should have the property linkedAssetName (base name: "linkedAssetName")', function() {
      // uncomment below and update the code to test the property linkedAssetName
      //var instance = new NaviPlanApi.ILiability();
      //expect(instance).to.be();
    });

    it('should have the property loanDate (base name: "loanDate")', function() {
      // uncomment below and update the code to test the property loanDate
      //var instance = new NaviPlanApi.ILiability();
      //expect(instance).to.be();
    });

    it('should have the property originalBalance (base name: "originalBalance")', function() {
      // uncomment below and update the code to test the property originalBalance
      //var instance = new NaviPlanApi.ILiability();
      //expect(instance).to.be();
    });

    it('should have the property owner (base name: "owner")', function() {
      // uncomment below and update the code to test the property owner
      //var instance = new NaviPlanApi.ILiability();
      //expect(instance).to.be();
    });

    it('should have the property paidOffByRetirement (base name: "paidOffByRetirement")', function() {
      // uncomment below and update the code to test the property paidOffByRetirement
      //var instance = new NaviPlanApi.ILiability();
      //expect(instance).to.be();
    });

    it('should have the property payOffDate (base name: "payOffDate")', function() {
      // uncomment below and update the code to test the property payOffDate
      //var instance = new NaviPlanApi.ILiability();
      //expect(instance).to.be();
    });

    it('should have the property payOffOptionType (base name: "payOffOptionType")', function() {
      // uncomment below and update the code to test the property payOffOptionType
      //var instance = new NaviPlanApi.ILiability();
      //expect(instance).to.be();
    });

    it('should have the property paymentAmount (base name: "paymentAmount")', function() {
      // uncomment below and update the code to test the property paymentAmount
      //var instance = new NaviPlanApi.ILiability();
      //expect(instance).to.be();
    });

    it('should have the property paymentFrequency (base name: "paymentFrequency")', function() {
      // uncomment below and update the code to test the property paymentFrequency
      //var instance = new NaviPlanApi.ILiability();
      //expect(instance).to.be();
    });

    it('should have the property paymentType (base name: "paymentType")', function() {
      // uncomment below and update the code to test the property paymentType
      //var instance = new NaviPlanApi.ILiability();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new NaviPlanApi.ILiability();
      //expect(instance).to.be();
    });

  });

}));
