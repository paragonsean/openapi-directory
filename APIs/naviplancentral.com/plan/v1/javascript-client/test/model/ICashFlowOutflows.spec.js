/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NaviPlanApi);
  }
}(this, function(expect, NaviPlanApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NaviPlanApi.ICashFlowOutflows();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ICashFlowOutflows', function() {
    it('should create an instance of ICashFlowOutflows', function() {
      // uncomment below and update the code to test ICashFlowOutflows
      //var instance = new NaviPlanApi.ICashFlowOutflows();
      //expect(instance).to.be.a(NaviPlanApi.ICashFlowOutflows);
    });

    it('should have the property contributions (base name: "contributions")', function() {
      // uncomment below and update the code to test the property contributions
      //var instance = new NaviPlanApi.ICashFlowOutflows();
      //expect(instance).to.be();
    });

    it('should have the property educationExpenses (base name: "educationExpenses")', function() {
      // uncomment below and update the code to test the property educationExpenses
      //var instance = new NaviPlanApi.ICashFlowOutflows();
      //expect(instance).to.be();
    });

    it('should have the property employerExpenses (base name: "employerExpenses")', function() {
      // uncomment below and update the code to test the property employerExpenses
      //var instance = new NaviPlanApi.ICashFlowOutflows();
      //expect(instance).to.be();
    });

    it('should have the property employmentBusinessExpenses (base name: "employmentBusinessExpenses")', function() {
      // uncomment below and update the code to test the property employmentBusinessExpenses
      //var instance = new NaviPlanApi.ICashFlowOutflows();
      //expect(instance).to.be();
    });

    it('should have the property investmentExpenses (base name: "investmentExpenses")', function() {
      // uncomment below and update the code to test the property investmentExpenses
      //var instance = new NaviPlanApi.ICashFlowOutflows();
      //expect(instance).to.be();
    });

    it('should have the property lifestyleExpenses (base name: "lifestyleExpenses")', function() {
      // uncomment below and update the code to test the property lifestyleExpenses
      //var instance = new NaviPlanApi.ICashFlowOutflows();
      //expect(instance).to.be();
    });

    it('should have the property lifestyleExpensesDiscretionary (base name: "lifestyleExpensesDiscretionary")', function() {
      // uncomment below and update the code to test the property lifestyleExpensesDiscretionary
      //var instance = new NaviPlanApi.ICashFlowOutflows();
      //expect(instance).to.be();
    });

    it('should have the property lifestyleExpensesFixed (base name: "lifestyleExpensesFixed")', function() {
      // uncomment below and update the code to test the property lifestyleExpensesFixed
      //var instance = new NaviPlanApi.ICashFlowOutflows();
      //expect(instance).to.be();
    });

    it('should have the property lockedInContributions (base name: "lockedInContributions")', function() {
      // uncomment below and update the code to test the property lockedInContributions
      //var instance = new NaviPlanApi.ICashFlowOutflows();
      //expect(instance).to.be();
    });

    it('should have the property medicalExpenses (base name: "medicalExpenses")', function() {
      // uncomment below and update the code to test the property medicalExpenses
      //var instance = new NaviPlanApi.ICashFlowOutflows();
      //expect(instance).to.be();
    });

    it('should have the property miscellaneousExpenses (base name: "miscellaneousExpenses")', function() {
      // uncomment below and update the code to test the property miscellaneousExpenses
      //var instance = new NaviPlanApi.ICashFlowOutflows();
      //expect(instance).to.be();
    });

    it('should have the property miscellaneousExpensesDiscretionary (base name: "miscellaneousExpensesDiscretionary")', function() {
      // uncomment below and update the code to test the property miscellaneousExpensesDiscretionary
      //var instance = new NaviPlanApi.ICashFlowOutflows();
      //expect(instance).to.be();
    });

    it('should have the property miscellaneousExpensesFixed (base name: "miscellaneousExpensesFixed")', function() {
      // uncomment below and update the code to test the property miscellaneousExpensesFixed
      //var instance = new NaviPlanApi.ICashFlowOutflows();
      //expect(instance).to.be();
    });

    it('should have the property nonQualifiedContributions (base name: "nonQualifiedContributions")', function() {
      // uncomment below and update the code to test the property nonQualifiedContributions
      //var instance = new NaviPlanApi.ICashFlowOutflows();
      //expect(instance).to.be();
    });

    it('should have the property nonQualifiedReinvestments (base name: "nonQualifiedReinvestments")', function() {
      // uncomment below and update the code to test the property nonQualifiedReinvestments
      //var instance = new NaviPlanApi.ICashFlowOutflows();
      //expect(instance).to.be();
    });

    it('should have the property privateCorporationOutflows (base name: "privateCorporationOutflows")', function() {
      // uncomment below and update the code to test the property privateCorporationOutflows
      //var instance = new NaviPlanApi.ICashFlowOutflows();
      //expect(instance).to.be();
    });

    it('should have the property qualifiedContributions (base name: "qualifiedContributions")', function() {
      // uncomment below and update the code to test the property qualifiedContributions
      //var instance = new NaviPlanApi.ICashFlowOutflows();
      //expect(instance).to.be();
    });

    it('should have the property rothContributions (base name: "rothContributions")', function() {
      // uncomment below and update the code to test the property rothContributions
      //var instance = new NaviPlanApi.ICashFlowOutflows();
      //expect(instance).to.be();
    });

    it('should have the property surplusOutflows (base name: "surplusOutflows")', function() {
      // uncomment below and update the code to test the property surplusOutflows
      //var instance = new NaviPlanApi.ICashFlowOutflows();
      //expect(instance).to.be();
    });

    it('should have the property surplusSavings (base name: "surplusSavings")', function() {
      // uncomment below and update the code to test the property surplusSavings
      //var instance = new NaviPlanApi.ICashFlowOutflows();
      //expect(instance).to.be();
    });

    it('should have the property tfsaContributions (base name: "tfsaContributions")', function() {
      // uncomment below and update the code to test the property tfsaContributions
      //var instance = new NaviPlanApi.ICashFlowOutflows();
      //expect(instance).to.be();
    });

    it('should have the property totalNeeds (base name: "totalNeeds")', function() {
      // uncomment below and update the code to test the property totalNeeds
      //var instance = new NaviPlanApi.ICashFlowOutflows();
      //expect(instance).to.be();
    });

    it('should have the property totalWithTaxes (base name: "totalWithTaxes")', function() {
      // uncomment below and update the code to test the property totalWithTaxes
      //var instance = new NaviPlanApi.ICashFlowOutflows();
      //expect(instance).to.be();
    });

    it('should have the property totalWithoutTaxes (base name: "totalWithoutTaxes")', function() {
      // uncomment below and update the code to test the property totalWithoutTaxes
      //var instance = new NaviPlanApi.ICashFlowOutflows();
      //expect(instance).to.be();
    });

  });

}));
