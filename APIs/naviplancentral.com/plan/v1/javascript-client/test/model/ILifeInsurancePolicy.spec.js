/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NaviPlanApi);
  }
}(this, function(expect, NaviPlanApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NaviPlanApi.ILifeInsurancePolicy();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ILifeInsurancePolicy', function() {
    it('should create an instance of ILifeInsurancePolicy', function() {
      // uncomment below and update the code to test ILifeInsurancePolicy
      //var instance = new NaviPlanApi.ILifeInsurancePolicy();
      //expect(instance).to.be.a(NaviPlanApi.ILifeInsurancePolicy);
    });

    it('should have the property beneficiaryName (base name: "beneficiaryName")', function() {
      // uncomment below and update the code to test the property beneficiaryName
      //var instance = new NaviPlanApi.ILifeInsurancePolicy();
      //expect(instance).to.be();
    });

    it('should have the property benefitPeriod (base name: "benefitPeriod")', function() {
      // uncomment below and update the code to test the property benefitPeriod
      //var instance = new NaviPlanApi.ILifeInsurancePolicy();
      //expect(instance).to.be();
    });

    it('should have the property cashSurrenderValue (base name: "cashSurrenderValue")', function() {
      // uncomment below and update the code to test the property cashSurrenderValue
      //var instance = new NaviPlanApi.ILifeInsurancePolicy();
      //expect(instance).to.be();
    });

    it('should have the property coverageCeaseDate (base name: "coverageCeaseDate")', function() {
      // uncomment below and update the code to test the property coverageCeaseDate
      //var instance = new NaviPlanApi.ILifeInsurancePolicy();
      //expect(instance).to.be();
    });

    it('should have the property dailyBenefitValue (base name: "dailyBenefitValue")', function() {
      // uncomment below and update the code to test the property dailyBenefitValue
      //var instance = new NaviPlanApi.ILifeInsurancePolicy();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new NaviPlanApi.ILifeInsurancePolicy();
      //expect(instance).to.be();
    });

    it('should have the property effectiveDate (base name: "effectiveDate")', function() {
      // uncomment below and update the code to test the property effectiveDate
      //var instance = new NaviPlanApi.ILifeInsurancePolicy();
      //expect(instance).to.be();
    });

    it('should have the property formattedBenefitValue (base name: "formattedBenefitValue")', function() {
      // uncomment below and update the code to test the property formattedBenefitValue
      //var instance = new NaviPlanApi.ILifeInsurancePolicy();
      //expect(instance).to.be();
    });

    it('should have the property formattedInsuredType (base name: "formattedInsuredType")', function() {
      // uncomment below and update the code to test the property formattedInsuredType
      //var instance = new NaviPlanApi.ILifeInsurancePolicy();
      //expect(instance).to.be();
    });

    it('should have the property formattedPolicyType (base name: "formattedPolicyType")', function() {
      // uncomment below and update the code to test the property formattedPolicyType
      //var instance = new NaviPlanApi.ILifeInsurancePolicy();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new NaviPlanApi.ILifeInsurancePolicy();
      //expect(instance).to.be();
    });

    it('should have the property insured (base name: "insured")', function() {
      // uncomment below and update the code to test the property insured
      //var instance = new NaviPlanApi.ILifeInsurancePolicy();
      //expect(instance).to.be();
    });

    it('should have the property isCSVPayableWithDeathBenefit (base name: "isCSVPayableWithDeathBenefit")', function() {
      // uncomment below and update the code to test the property isCSVPayableWithDeathBenefit
      //var instance = new NaviPlanApi.ILifeInsurancePolicy();
      //expect(instance).to.be();
    });

    it('should have the property monthlyBenefitValue (base name: "monthlyBenefitValue")', function() {
      // uncomment below and update the code to test the property monthlyBenefitValue
      //var instance = new NaviPlanApi.ILifeInsurancePolicy();
      //expect(instance).to.be();
    });

    it('should have the property ownerName (base name: "ownerName")', function() {
      // uncomment below and update the code to test the property ownerName
      //var instance = new NaviPlanApi.ILifeInsurancePolicy();
      //expect(instance).to.be();
    });

    it('should have the property policyType (base name: "policyType")', function() {
      // uncomment below and update the code to test the property policyType
      //var instance = new NaviPlanApi.ILifeInsurancePolicy();
      //expect(instance).to.be();
    });

    it('should have the property premiumData (base name: "premiumData")', function() {
      // uncomment below and update the code to test the property premiumData
      //var instance = new NaviPlanApi.ILifeInsurancePolicy();
      //expect(instance).to.be();
    });

    it('should have the property premiumsWaivedAtDisability (base name: "premiumsWaivedAtDisability")', function() {
      // uncomment below and update the code to test the property premiumsWaivedAtDisability
      //var instance = new NaviPlanApi.ILifeInsurancePolicy();
      //expect(instance).to.be();
    });

    it('should have the property rawBenefitValue (base name: "rawBenefitValue")', function() {
      // uncomment below and update the code to test the property rawBenefitValue
      //var instance = new NaviPlanApi.ILifeInsurancePolicy();
      //expect(instance).to.be();
    });

    it('should have the property waitingPeriod (base name: "waitingPeriod")', function() {
      // uncomment below and update the code to test the property waitingPeriod
      //var instance = new NaviPlanApi.ILifeInsurancePolicy();
      //expect(instance).to.be();
    });

  });

}));
