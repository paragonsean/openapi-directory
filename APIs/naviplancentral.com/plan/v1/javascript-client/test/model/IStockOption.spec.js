/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NaviPlanApi);
  }
}(this, function(expect, NaviPlanApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NaviPlanApi.IStockOption();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('IStockOption', function() {
    it('should create an instance of IStockOption', function() {
      // uncomment below and update the code to test IStockOption
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be.a(NaviPlanApi.IStockOption);
    });

    it('should have the property annualDividendPerUnit (base name: "annualDividendPerUnit")', function() {
      // uncomment below and update the code to test the property annualDividendPerUnit
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be();
    });

    it('should have the property applicableRangeRetirementLiquidatedAssets (base name: "applicableRangeRetirementLiquidatedAssets")', function() {
      // uncomment below and update the code to test the property applicableRangeRetirementLiquidatedAssets
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be();
    });

    it('should have the property company (base name: "company")', function() {
      // uncomment below and update the code to test the property company
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be();
    });

    it('should have the property currentUnitPrice (base name: "currentUnitPrice")', function() {
      // uncomment below and update the code to test the property currentUnitPrice
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be();
    });

    it('should have the property currentUnitPriceDate (base name: "currentUnitPriceDate")', function() {
      // uncomment below and update the code to test the property currentUnitPriceDate
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be();
    });

    it('should have the property endOfPlanYearExercisableGrossValue (base name: "endOfPlanYearExercisableGrossValue")', function() {
      // uncomment below and update the code to test the property endOfPlanYearExercisableGrossValue
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be();
    });

    it('should have the property exerciseCost (base name: "exerciseCost")', function() {
      // uncomment below and update the code to test the property exerciseCost
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be();
    });

    it('should have the property expirationDate (base name: "expirationDate")', function() {
      // uncomment below and update the code to test the property expirationDate
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be();
    });

    it('should have the property grantDate (base name: "grantDate")', function() {
      // uncomment below and update the code to test the property grantDate
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be();
    });

    it('should have the property grantedOptions (base name: "grantedOptions")', function() {
      // uncomment below and update the code to test the property grantedOptions
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be();
    });

    it('should have the property growthRate (base name: "growthRate")', function() {
      // uncomment below and update the code to test the property growthRate
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be();
    });

    it('should have the property optionsExercisable (base name: "optionsExercisable")', function() {
      // uncomment below and update the code to test the property optionsExercisable
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be();
    });

    it('should have the property optionsExercised (base name: "optionsExercised")', function() {
      // uncomment below and update the code to test the property optionsExercised
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be();
    });

    it('should have the property optionsVested (base name: "optionsVested")', function() {
      // uncomment below and update the code to test the property optionsVested
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be();
    });

    it('should have the property owner (base name: "owner")', function() {
      // uncomment below and update the code to test the property owner
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be();
    });

    it('should have the property preTaxProfit (base name: "preTaxProfit")', function() {
      // uncomment below and update the code to test the property preTaxProfit
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be();
    });

    it('should have the property startOfYearAMTBasis (base name: "startOfYearAMTBasis")', function() {
      // uncomment below and update the code to test the property startOfYearAMTBasis
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be();
    });

    it('should have the property startOfYearCostBasis (base name: "startOfYearCostBasis")', function() {
      // uncomment below and update the code to test the property startOfYearCostBasis
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be();
    });

    it('should have the property startOfYearUnitPrice (base name: "startOfYearUnitPrice")', function() {
      // uncomment below and update the code to test the property startOfYearUnitPrice
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be();
    });

    it('should have the property strikePrice (base name: "strikePrice")', function() {
      // uncomment below and update the code to test the property strikePrice
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be();
    });

    it('should have the property symbol (base name: "symbol")', function() {
      // uncomment below and update the code to test the property symbol
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be();
    });

    it('should have the property typeFormatted (base name: "typeFormatted")', function() {
      // uncomment below and update the code to test the property typeFormatted
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be();
    });

    it('should have the property vestingSchedule (base name: "vestingSchedule")', function() {
      // uncomment below and update the code to test the property vestingSchedule
      //var instance = new NaviPlanApi.IStockOption();
      //expect(instance).to.be();
    });

  });

}));
