/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Currency from './Currency';

/**
 * The IAccumulationCategoryData model module.
 * @module model/IAccumulationCategoryData
 * @version v1
 */
class IAccumulationCategoryData {
    /**
     * Constructs a new <code>IAccumulationCategoryData</code>.
     * @alias module:model/IAccumulationCategoryData
     */
    constructor() { 
        
        IAccumulationCategoryData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IAccumulationCategoryData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IAccumulationCategoryData} obj Optional instance to populate.
     * @return {module:model/IAccumulationCategoryData} The populated <code>IAccumulationCategoryData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IAccumulationCategoryData();

            if (data.hasOwnProperty('allAssets')) {
                obj['allAssets'] = Currency.constructFromObject(data['allAssets']);
            }
            if (data.hasOwnProperty('lockedIn')) {
                obj['lockedIn'] = Currency.constructFromObject(data['lockedIn']);
            }
            if (data.hasOwnProperty('nonQualified')) {
                obj['nonQualified'] = Currency.constructFromObject(data['nonQualified']);
            }
            if (data.hasOwnProperty('qualified')) {
                obj['qualified'] = Currency.constructFromObject(data['qualified']);
            }
            if (data.hasOwnProperty('roth')) {
                obj['roth'] = Currency.constructFromObject(data['roth']);
            }
            if (data.hasOwnProperty('tfsa')) {
                obj['tfsa'] = Currency.constructFromObject(data['tfsa']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IAccumulationCategoryData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IAccumulationCategoryData</code>.
     */
    static validateJSON(data) {
        // validate the optional field `allAssets`
        if (data['allAssets']) { // data not null
          Currency.validateJSON(data['allAssets']);
        }
        // validate the optional field `lockedIn`
        if (data['lockedIn']) { // data not null
          Currency.validateJSON(data['lockedIn']);
        }
        // validate the optional field `nonQualified`
        if (data['nonQualified']) { // data not null
          Currency.validateJSON(data['nonQualified']);
        }
        // validate the optional field `qualified`
        if (data['qualified']) { // data not null
          Currency.validateJSON(data['qualified']);
        }
        // validate the optional field `roth`
        if (data['roth']) { // data not null
          Currency.validateJSON(data['roth']);
        }
        // validate the optional field `tfsa`
        if (data['tfsa']) { // data not null
          Currency.validateJSON(data['tfsa']);
        }

        return true;
    }


}



/**
 * @member {module:model/Currency} allAssets
 */
IAccumulationCategoryData.prototype['allAssets'] = undefined;

/**
 * @member {module:model/Currency} lockedIn
 */
IAccumulationCategoryData.prototype['lockedIn'] = undefined;

/**
 * @member {module:model/Currency} nonQualified
 */
IAccumulationCategoryData.prototype['nonQualified'] = undefined;

/**
 * @member {module:model/Currency} qualified
 */
IAccumulationCategoryData.prototype['qualified'] = undefined;

/**
 * @member {module:model/Currency} roth
 */
IAccumulationCategoryData.prototype['roth'] = undefined;

/**
 * @member {module:model/Currency} tfsa
 */
IAccumulationCategoryData.prototype['tfsa'] = undefined;






export default IAccumulationCategoryData;

