/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Currency from './Currency';
import ICashFlowCategory from './ICashFlowCategory';

/**
 * The ICashFlowIncomes model module.
 * @module model/ICashFlowIncomes
 * @version v1
 */
class ICashFlowIncomes {
    /**
     * Constructs a new <code>ICashFlowIncomes</code>.
     * @alias module:model/ICashFlowIncomes
     */
    constructor() { 
        
        ICashFlowIncomes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ICashFlowIncomes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ICashFlowIncomes} obj Optional instance to populate.
     * @return {module:model/ICashFlowIncomes} The populated <code>ICashFlowIncomes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ICashFlowIncomes();

            if (data.hasOwnProperty('annuityPayments')) {
                obj['annuityPayments'] = ICashFlowCategory.constructFromObject(data['annuityPayments']);
            }
            if (data.hasOwnProperty('disabilityIncomes')) {
                obj['disabilityIncomes'] = Currency.constructFromObject(data['disabilityIncomes']);
            }
            if (data.hasOwnProperty('earnedIncome')) {
                obj['earnedIncome'] = ICashFlowCategory.constructFromObject(data['earnedIncome']);
            }
            if (data.hasOwnProperty('insuranceBenefits')) {
                obj['insuranceBenefits'] = ICashFlowCategory.constructFromObject(data['insuranceBenefits']);
            }
            if (data.hasOwnProperty('investmentIncomes')) {
                obj['investmentIncomes'] = ICashFlowCategory.constructFromObject(data['investmentIncomes']);
            }
            if (data.hasOwnProperty('lifestyleAssetLiquidations')) {
                obj['lifestyleAssetLiquidations'] = ICashFlowCategory.constructFromObject(data['lifestyleAssetLiquidations']);
            }
            if (data.hasOwnProperty('lockedInLiquidations')) {
                obj['lockedInLiquidations'] = Currency.constructFromObject(data['lockedInLiquidations']);
            }
            if (data.hasOwnProperty('longTermCareBenefits')) {
                obj['longTermCareBenefits'] = Currency.constructFromObject(data['longTermCareBenefits']);
            }
            if (data.hasOwnProperty('miscellaneousIncomes')) {
                obj['miscellaneousIncomes'] = ICashFlowCategory.constructFromObject(data['miscellaneousIncomes']);
            }
            if (data.hasOwnProperty('nonQualifiedLiquidations')) {
                obj['nonQualifiedLiquidations'] = ICashFlowCategory.constructFromObject(data['nonQualifiedLiquidations']);
            }
            if (data.hasOwnProperty('pension')) {
                obj['pension'] = ICashFlowCategory.constructFromObject(data['pension']);
            }
            if (data.hasOwnProperty('privateCorporations')) {
                obj['privateCorporations'] = ICashFlowCategory.constructFromObject(data['privateCorporations']);
            }
            if (data.hasOwnProperty('qualifiedLiquidations')) {
                obj['qualifiedLiquidations'] = ICashFlowCategory.constructFromObject(data['qualifiedLiquidations']);
            }
            if (data.hasOwnProperty('qualifiedLiquidationsNonRequiredMinimumDistributions')) {
                obj['qualifiedLiquidationsNonRequiredMinimumDistributions'] = ICashFlowCategory.constructFromObject(data['qualifiedLiquidationsNonRequiredMinimumDistributions']);
            }
            if (data.hasOwnProperty('requiredMinimumDistributions')) {
                obj['requiredMinimumDistributions'] = ICashFlowCategory.constructFromObject(data['requiredMinimumDistributions']);
            }
            if (data.hasOwnProperty('retirementIncome')) {
                obj['retirementIncome'] = Currency.constructFromObject(data['retirementIncome']);
            }
            if (data.hasOwnProperty('rothLiquidations')) {
                obj['rothLiquidations'] = Currency.constructFromObject(data['rothLiquidations']);
            }
            if (data.hasOwnProperty('socialSecurity')) {
                obj['socialSecurity'] = ICashFlowCategory.constructFromObject(data['socialSecurity']);
            }
            if (data.hasOwnProperty('tfsaLiquidations')) {
                obj['tfsaLiquidations'] = Currency.constructFromObject(data['tfsaLiquidations']);
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ICashFlowCategory.constructFromObject(data['total']);
            }
            if (data.hasOwnProperty('withdrawals')) {
                obj['withdrawals'] = Currency.constructFromObject(data['withdrawals']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ICashFlowIncomes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ICashFlowIncomes</code>.
     */
    static validateJSON(data) {
        // validate the optional field `annuityPayments`
        if (data['annuityPayments']) { // data not null
          ICashFlowCategory.validateJSON(data['annuityPayments']);
        }
        // validate the optional field `disabilityIncomes`
        if (data['disabilityIncomes']) { // data not null
          Currency.validateJSON(data['disabilityIncomes']);
        }
        // validate the optional field `earnedIncome`
        if (data['earnedIncome']) { // data not null
          ICashFlowCategory.validateJSON(data['earnedIncome']);
        }
        // validate the optional field `insuranceBenefits`
        if (data['insuranceBenefits']) { // data not null
          ICashFlowCategory.validateJSON(data['insuranceBenefits']);
        }
        // validate the optional field `investmentIncomes`
        if (data['investmentIncomes']) { // data not null
          ICashFlowCategory.validateJSON(data['investmentIncomes']);
        }
        // validate the optional field `lifestyleAssetLiquidations`
        if (data['lifestyleAssetLiquidations']) { // data not null
          ICashFlowCategory.validateJSON(data['lifestyleAssetLiquidations']);
        }
        // validate the optional field `lockedInLiquidations`
        if (data['lockedInLiquidations']) { // data not null
          Currency.validateJSON(data['lockedInLiquidations']);
        }
        // validate the optional field `longTermCareBenefits`
        if (data['longTermCareBenefits']) { // data not null
          Currency.validateJSON(data['longTermCareBenefits']);
        }
        // validate the optional field `miscellaneousIncomes`
        if (data['miscellaneousIncomes']) { // data not null
          ICashFlowCategory.validateJSON(data['miscellaneousIncomes']);
        }
        // validate the optional field `nonQualifiedLiquidations`
        if (data['nonQualifiedLiquidations']) { // data not null
          ICashFlowCategory.validateJSON(data['nonQualifiedLiquidations']);
        }
        // validate the optional field `pension`
        if (data['pension']) { // data not null
          ICashFlowCategory.validateJSON(data['pension']);
        }
        // validate the optional field `privateCorporations`
        if (data['privateCorporations']) { // data not null
          ICashFlowCategory.validateJSON(data['privateCorporations']);
        }
        // validate the optional field `qualifiedLiquidations`
        if (data['qualifiedLiquidations']) { // data not null
          ICashFlowCategory.validateJSON(data['qualifiedLiquidations']);
        }
        // validate the optional field `qualifiedLiquidationsNonRequiredMinimumDistributions`
        if (data['qualifiedLiquidationsNonRequiredMinimumDistributions']) { // data not null
          ICashFlowCategory.validateJSON(data['qualifiedLiquidationsNonRequiredMinimumDistributions']);
        }
        // validate the optional field `requiredMinimumDistributions`
        if (data['requiredMinimumDistributions']) { // data not null
          ICashFlowCategory.validateJSON(data['requiredMinimumDistributions']);
        }
        // validate the optional field `retirementIncome`
        if (data['retirementIncome']) { // data not null
          Currency.validateJSON(data['retirementIncome']);
        }
        // validate the optional field `rothLiquidations`
        if (data['rothLiquidations']) { // data not null
          Currency.validateJSON(data['rothLiquidations']);
        }
        // validate the optional field `socialSecurity`
        if (data['socialSecurity']) { // data not null
          ICashFlowCategory.validateJSON(data['socialSecurity']);
        }
        // validate the optional field `tfsaLiquidations`
        if (data['tfsaLiquidations']) { // data not null
          Currency.validateJSON(data['tfsaLiquidations']);
        }
        // validate the optional field `total`
        if (data['total']) { // data not null
          ICashFlowCategory.validateJSON(data['total']);
        }
        // validate the optional field `withdrawals`
        if (data['withdrawals']) { // data not null
          Currency.validateJSON(data['withdrawals']);
        }

        return true;
    }


}



/**
 * @member {module:model/ICashFlowCategory} annuityPayments
 */
ICashFlowIncomes.prototype['annuityPayments'] = undefined;

/**
 * @member {module:model/Currency} disabilityIncomes
 */
ICashFlowIncomes.prototype['disabilityIncomes'] = undefined;

/**
 * @member {module:model/ICashFlowCategory} earnedIncome
 */
ICashFlowIncomes.prototype['earnedIncome'] = undefined;

/**
 * @member {module:model/ICashFlowCategory} insuranceBenefits
 */
ICashFlowIncomes.prototype['insuranceBenefits'] = undefined;

/**
 * @member {module:model/ICashFlowCategory} investmentIncomes
 */
ICashFlowIncomes.prototype['investmentIncomes'] = undefined;

/**
 * @member {module:model/ICashFlowCategory} lifestyleAssetLiquidations
 */
ICashFlowIncomes.prototype['lifestyleAssetLiquidations'] = undefined;

/**
 * @member {module:model/Currency} lockedInLiquidations
 */
ICashFlowIncomes.prototype['lockedInLiquidations'] = undefined;

/**
 * @member {module:model/Currency} longTermCareBenefits
 */
ICashFlowIncomes.prototype['longTermCareBenefits'] = undefined;

/**
 * @member {module:model/ICashFlowCategory} miscellaneousIncomes
 */
ICashFlowIncomes.prototype['miscellaneousIncomes'] = undefined;

/**
 * @member {module:model/ICashFlowCategory} nonQualifiedLiquidations
 */
ICashFlowIncomes.prototype['nonQualifiedLiquidations'] = undefined;

/**
 * @member {module:model/ICashFlowCategory} pension
 */
ICashFlowIncomes.prototype['pension'] = undefined;

/**
 * @member {module:model/ICashFlowCategory} privateCorporations
 */
ICashFlowIncomes.prototype['privateCorporations'] = undefined;

/**
 * @member {module:model/ICashFlowCategory} qualifiedLiquidations
 */
ICashFlowIncomes.prototype['qualifiedLiquidations'] = undefined;

/**
 * @member {module:model/ICashFlowCategory} qualifiedLiquidationsNonRequiredMinimumDistributions
 */
ICashFlowIncomes.prototype['qualifiedLiquidationsNonRequiredMinimumDistributions'] = undefined;

/**
 * @member {module:model/ICashFlowCategory} requiredMinimumDistributions
 */
ICashFlowIncomes.prototype['requiredMinimumDistributions'] = undefined;

/**
 * @member {module:model/Currency} retirementIncome
 */
ICashFlowIncomes.prototype['retirementIncome'] = undefined;

/**
 * @member {module:model/Currency} rothLiquidations
 */
ICashFlowIncomes.prototype['rothLiquidations'] = undefined;

/**
 * @member {module:model/ICashFlowCategory} socialSecurity
 */
ICashFlowIncomes.prototype['socialSecurity'] = undefined;

/**
 * @member {module:model/Currency} tfsaLiquidations
 */
ICashFlowIncomes.prototype['tfsaLiquidations'] = undefined;

/**
 * @member {module:model/ICashFlowCategory} total
 */
ICashFlowIncomes.prototype['total'] = undefined;

/**
 * @member {module:model/Currency} withdrawals
 */
ICashFlowIncomes.prototype['withdrawals'] = undefined;






export default ICashFlowIncomes;

