/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IRetirementAssetCategories from './IRetirementAssetCategories';
import Percent from './Percent';

/**
 * The IRetirementAssets model module.
 * @module model/IRetirementAssets
 * @version v1
 */
class IRetirementAssets {
    /**
     * Constructs a new <code>IRetirementAssets</code>.
     * @alias module:model/IRetirementAssets
     */
    constructor() { 
        
        IRetirementAssets.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IRetirementAssets</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IRetirementAssets} obj Optional instance to populate.
     * @return {module:model/IRetirementAssets} The populated <code>IRetirementAssets</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IRetirementAssets();

            if (data.hasOwnProperty('allAssets')) {
                obj['allAssets'] = IRetirementAssetCategories.constructFromObject(data['allAssets']);
            }
            if (data.hasOwnProperty('clientAssets')) {
                obj['clientAssets'] = IRetirementAssetCategories.constructFromObject(data['clientAssets']);
            }
            if (data.hasOwnProperty('coClientAssets')) {
                obj['coClientAssets'] = IRetirementAssetCategories.constructFromObject(data['coClientAssets']);
            }
            if (data.hasOwnProperty('communityPropertyAssets')) {
                obj['communityPropertyAssets'] = IRetirementAssetCategories.constructFromObject(data['communityPropertyAssets']);
            }
            if (data.hasOwnProperty('jointAssets')) {
                obj['jointAssets'] = IRetirementAssetCategories.constructFromObject(data['jointAssets']);
            }
            if (data.hasOwnProperty('withdrawalRate')) {
                obj['withdrawalRate'] = Percent.constructFromObject(data['withdrawalRate']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IRetirementAssets</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IRetirementAssets</code>.
     */
    static validateJSON(data) {
        // validate the optional field `allAssets`
        if (data['allAssets']) { // data not null
          IRetirementAssetCategories.validateJSON(data['allAssets']);
        }
        // validate the optional field `clientAssets`
        if (data['clientAssets']) { // data not null
          IRetirementAssetCategories.validateJSON(data['clientAssets']);
        }
        // validate the optional field `coClientAssets`
        if (data['coClientAssets']) { // data not null
          IRetirementAssetCategories.validateJSON(data['coClientAssets']);
        }
        // validate the optional field `communityPropertyAssets`
        if (data['communityPropertyAssets']) { // data not null
          IRetirementAssetCategories.validateJSON(data['communityPropertyAssets']);
        }
        // validate the optional field `jointAssets`
        if (data['jointAssets']) { // data not null
          IRetirementAssetCategories.validateJSON(data['jointAssets']);
        }
        // validate the optional field `withdrawalRate`
        if (data['withdrawalRate']) { // data not null
          Percent.validateJSON(data['withdrawalRate']);
        }

        return true;
    }


}



/**
 * @member {module:model/IRetirementAssetCategories} allAssets
 */
IRetirementAssets.prototype['allAssets'] = undefined;

/**
 * @member {module:model/IRetirementAssetCategories} clientAssets
 */
IRetirementAssets.prototype['clientAssets'] = undefined;

/**
 * @member {module:model/IRetirementAssetCategories} coClientAssets
 */
IRetirementAssets.prototype['coClientAssets'] = undefined;

/**
 * @member {module:model/IRetirementAssetCategories} communityPropertyAssets
 */
IRetirementAssets.prototype['communityPropertyAssets'] = undefined;

/**
 * @member {module:model/IRetirementAssetCategories} jointAssets
 */
IRetirementAssets.prototype['jointAssets'] = undefined;

/**
 * @member {module:model/Percent} withdrawalRate
 */
IRetirementAssets.prototype['withdrawalRate'] = undefined;






export default IRetirementAssets;

