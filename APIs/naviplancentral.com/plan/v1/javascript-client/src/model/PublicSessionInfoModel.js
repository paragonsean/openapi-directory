/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PublicSessionInfoModel model module.
 * @module model/PublicSessionInfoModel
 * @version v1
 */
class PublicSessionInfoModel {
    /**
     * Constructs a new <code>PublicSessionInfoModel</code>.
     * @alias module:model/PublicSessionInfoModel
     */
    constructor() { 
        
        PublicSessionInfoModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PublicSessionInfoModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PublicSessionInfoModel} obj Optional instance to populate.
     * @return {module:model/PublicSessionInfoModel} The populated <code>PublicSessionInfoModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PublicSessionInfoModel();

            if (data.hasOwnProperty('eulaAccepted')) {
                obj['eulaAccepted'] = ApiClient.convertToType(data['eulaAccepted'], 'Boolean');
            }
            if (data.hasOwnProperty('hasAccountAggregation')) {
                obj['hasAccountAggregation'] = ApiClient.convertToType(data['hasAccountAggregation'], 'Boolean');
            }
            if (data.hasOwnProperty('hasGoalWhatIfing')) {
                obj['hasGoalWhatIfing'] = ApiClient.convertToType(data['hasGoalWhatIfing'], 'Boolean');
            }
            if (data.hasOwnProperty('hasUserSetPassword')) {
                obj['hasUserSetPassword'] = ApiClient.convertToType(data['hasUserSetPassword'], 'Boolean');
            }
            if (data.hasOwnProperty('isAdmin')) {
                obj['isAdmin'] = ApiClient.convertToType(data['isAdmin'], 'Boolean');
            }
            if (data.hasOwnProperty('isAdvisor')) {
                obj['isAdvisor'] = ApiClient.convertToType(data['isAdvisor'], 'Boolean');
            }
            if (data.hasOwnProperty('isClient')) {
                obj['isClient'] = ApiClient.convertToType(data['isClient'], 'Boolean');
            }
            if (data.hasOwnProperty('isPasswordExpired')) {
                obj['isPasswordExpired'] = ApiClient.convertToType(data['isPasswordExpired'], 'Boolean');
            }
            if (data.hasOwnProperty('userId')) {
                obj['userId'] = ApiClient.convertToType(data['userId'], 'String');
            }
            if (data.hasOwnProperty('userName')) {
                obj['userName'] = ApiClient.convertToType(data['userName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PublicSessionInfoModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PublicSessionInfoModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['userId'] && !(typeof data['userId'] === 'string' || data['userId'] instanceof String)) {
            throw new Error("Expected the field `userId` to be a primitive type in the JSON string but got " + data['userId']);
        }
        // ensure the json data is a string
        if (data['userName'] && !(typeof data['userName'] === 'string' || data['userName'] instanceof String)) {
            throw new Error("Expected the field `userName` to be a primitive type in the JSON string but got " + data['userName']);
        }

        return true;
    }


}



/**
 * @member {Boolean} eulaAccepted
 */
PublicSessionInfoModel.prototype['eulaAccepted'] = undefined;

/**
 * @member {Boolean} hasAccountAggregation
 */
PublicSessionInfoModel.prototype['hasAccountAggregation'] = undefined;

/**
 * @member {Boolean} hasGoalWhatIfing
 */
PublicSessionInfoModel.prototype['hasGoalWhatIfing'] = undefined;

/**
 * @member {Boolean} hasUserSetPassword
 */
PublicSessionInfoModel.prototype['hasUserSetPassword'] = undefined;

/**
 * @member {Boolean} isAdmin
 */
PublicSessionInfoModel.prototype['isAdmin'] = undefined;

/**
 * @member {Boolean} isAdvisor
 */
PublicSessionInfoModel.prototype['isAdvisor'] = undefined;

/**
 * @member {Boolean} isClient
 */
PublicSessionInfoModel.prototype['isClient'] = undefined;

/**
 * @member {Boolean} isPasswordExpired
 */
PublicSessionInfoModel.prototype['isPasswordExpired'] = undefined;

/**
 * @member {String} userId
 */
PublicSessionInfoModel.prototype['userId'] = undefined;

/**
 * @member {String} userName
 */
PublicSessionInfoModel.prototype['userName'] = undefined;






export default PublicSessionInfoModel;

