/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IOptionalFieldBenefitCurrencyWithGrowth from './IOptionalFieldBenefitCurrencyWithGrowth';
import ModelDate from './ModelDate';
import Percent from './Percent';

/**
 * The IDefinedBenefitPension model module.
 * @module model/IDefinedBenefitPension
 * @version v1
 */
class IDefinedBenefitPension {
    /**
     * Constructs a new <code>IDefinedBenefitPension</code>.
     * @alias module:model/IDefinedBenefitPension
     */
    constructor() { 
        
        IDefinedBenefitPension.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IDefinedBenefitPension</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IDefinedBenefitPension} obj Optional instance to populate.
     * @return {module:model/IDefinedBenefitPension} The populated <code>IDefinedBenefitPension</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IDefinedBenefitPension();

            if (data.hasOwnProperty('benefit')) {
                obj['benefit'] = IOptionalFieldBenefitCurrencyWithGrowth.constructFromObject(data['benefit']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('isBenefitFormula')) {
                obj['isBenefitFormula'] = ApiClient.convertToType(data['isBenefitFormula'], 'Boolean');
            }
            if (data.hasOwnProperty('isBenefitIntegratedWithCppQpp')) {
                obj['isBenefitIntegratedWithCppQpp'] = ApiClient.convertToType(data['isBenefitIntegratedWithCppQpp'], 'Boolean');
            }
            if (data.hasOwnProperty('isFormulaIntegratedWithCppQpp')) {
                obj['isFormulaIntegratedWithCppQpp'] = ApiClient.convertToType(data['isFormulaIntegratedWithCppQpp'], 'Boolean');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = ApiClient.convertToType(data['owner'], 'String');
            }
            if (data.hasOwnProperty('pensionType')) {
                obj['pensionType'] = ApiClient.convertToType(data['pensionType'], 'String');
            }
            if (data.hasOwnProperty('percentPayableToSurvivor')) {
                obj['percentPayableToSurvivor'] = Percent.constructFromObject(data['percentPayableToSurvivor']);
            }
            if (data.hasOwnProperty('projectedYearsOfService')) {
                obj['projectedYearsOfService'] = ApiClient.convertToType(data['projectedYearsOfService'], 'Number');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ModelDate.constructFromObject(data['startDate']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IDefinedBenefitPension</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IDefinedBenefitPension</code>.
     */
    static validateJSON(data) {
        // validate the optional field `benefit`
        if (data['benefit']) { // data not null
          IOptionalFieldBenefitCurrencyWithGrowth.validateJSON(data['benefit']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['owner'] && !(typeof data['owner'] === 'string' || data['owner'] instanceof String)) {
            throw new Error("Expected the field `owner` to be a primitive type in the JSON string but got " + data['owner']);
        }
        // ensure the json data is a string
        if (data['pensionType'] && !(typeof data['pensionType'] === 'string' || data['pensionType'] instanceof String)) {
            throw new Error("Expected the field `pensionType` to be a primitive type in the JSON string but got " + data['pensionType']);
        }
        // validate the optional field `percentPayableToSurvivor`
        if (data['percentPayableToSurvivor']) { // data not null
          Percent.validateJSON(data['percentPayableToSurvivor']);
        }
        // validate the optional field `startDate`
        if (data['startDate']) { // data not null
          ModelDate.validateJSON(data['startDate']);
        }

        return true;
    }


}



/**
 * @member {module:model/IOptionalFieldBenefitCurrencyWithGrowth} benefit
 */
IDefinedBenefitPension.prototype['benefit'] = undefined;

/**
 * @member {String} description
 */
IDefinedBenefitPension.prototype['description'] = undefined;

/**
 * @member {Boolean} isBenefitFormula
 */
IDefinedBenefitPension.prototype['isBenefitFormula'] = undefined;

/**
 * @member {Boolean} isBenefitIntegratedWithCppQpp
 */
IDefinedBenefitPension.prototype['isBenefitIntegratedWithCppQpp'] = undefined;

/**
 * @member {Boolean} isFormulaIntegratedWithCppQpp
 */
IDefinedBenefitPension.prototype['isFormulaIntegratedWithCppQpp'] = undefined;

/**
 * @member {module:model/IDefinedBenefitPension.OwnerEnum} owner
 */
IDefinedBenefitPension.prototype['owner'] = undefined;

/**
 * @member {String} pensionType
 */
IDefinedBenefitPension.prototype['pensionType'] = undefined;

/**
 * @member {module:model/Percent} percentPayableToSurvivor
 */
IDefinedBenefitPension.prototype['percentPayableToSurvivor'] = undefined;

/**
 * @member {Number} projectedYearsOfService
 */
IDefinedBenefitPension.prototype['projectedYearsOfService'] = undefined;

/**
 * @member {module:model/ModelDate} startDate
 */
IDefinedBenefitPension.prototype['startDate'] = undefined;





/**
 * Allowed values for the <code>owner</code> property.
 * @enum {String}
 * @readonly
 */
IDefinedBenefitPension['OwnerEnum'] = {

    /**
     * value: "Client"
     * @const
     */
    "Client": "Client",

    /**
     * value: "CoClient"
     * @const
     */
    "CoClient": "CoClient"
};



export default IDefinedBenefitPension;

