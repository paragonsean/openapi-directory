/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IOwnershipData from './IOwnershipData';

/**
 * The IShareClassStructure model module.
 * @module model/IShareClassStructure
 * @version v1
 */
class IShareClassStructure {
    /**
     * Constructs a new <code>IShareClassStructure</code>.
     * @alias module:model/IShareClassStructure
     */
    constructor() { 
        
        IShareClassStructure.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IShareClassStructure</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IShareClassStructure} obj Optional instance to populate.
     * @return {module:model/IShareClassStructure} The populated <code>IShareClassStructure</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IShareClassStructure();

            if (data.hasOwnProperty('clientOwnershipData')) {
                obj['clientOwnershipData'] = IOwnershipData.constructFromObject(data['clientOwnershipData']);
            }
            if (data.hasOwnProperty('coClientOwnershipData')) {
                obj['coClientOwnershipData'] = IOwnershipData.constructFromObject(data['coClientOwnershipData']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('otherOwnershipData')) {
                obj['otherOwnershipData'] = IOwnershipData.constructFromObject(data['otherOwnershipData']);
            }
            if (data.hasOwnProperty('parentCorporationOwnershipData')) {
                obj['parentCorporationOwnershipData'] = IOwnershipData.constructFromObject(data['parentCorporationOwnershipData']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IShareClassStructure</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IShareClassStructure</code>.
     */
    static validateJSON(data) {
        // validate the optional field `clientOwnershipData`
        if (data['clientOwnershipData']) { // data not null
          IOwnershipData.validateJSON(data['clientOwnershipData']);
        }
        // validate the optional field `coClientOwnershipData`
        if (data['coClientOwnershipData']) { // data not null
          IOwnershipData.validateJSON(data['coClientOwnershipData']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `otherOwnershipData`
        if (data['otherOwnershipData']) { // data not null
          IOwnershipData.validateJSON(data['otherOwnershipData']);
        }
        // validate the optional field `parentCorporationOwnershipData`
        if (data['parentCorporationOwnershipData']) { // data not null
          IOwnershipData.validateJSON(data['parentCorporationOwnershipData']);
        }

        return true;
    }


}



/**
 * @member {module:model/IOwnershipData} clientOwnershipData
 */
IShareClassStructure.prototype['clientOwnershipData'] = undefined;

/**
 * @member {module:model/IOwnershipData} coClientOwnershipData
 */
IShareClassStructure.prototype['coClientOwnershipData'] = undefined;

/**
 * @member {String} description
 */
IShareClassStructure.prototype['description'] = undefined;

/**
 * @member {Number} id
 */
IShareClassStructure.prototype['id'] = undefined;

/**
 * @member {module:model/IOwnershipData} otherOwnershipData
 */
IShareClassStructure.prototype['otherOwnershipData'] = undefined;

/**
 * @member {module:model/IOwnershipData} parentCorporationOwnershipData
 */
IShareClassStructure.prototype['parentCorporationOwnershipData'] = undefined;






export default IShareClassStructure;

