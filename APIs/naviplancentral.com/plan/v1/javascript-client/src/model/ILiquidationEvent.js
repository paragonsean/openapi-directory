/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelDate from './ModelDate';

/**
 * The ILiquidationEvent model module.
 * @module model/ILiquidationEvent
 * @version v1
 */
class ILiquidationEvent {
    /**
     * Constructs a new <code>ILiquidationEvent</code>.
     * @alias module:model/ILiquidationEvent
     */
    constructor() { 
        
        ILiquidationEvent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ILiquidationEvent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ILiquidationEvent} obj Optional instance to populate.
     * @return {module:model/ILiquidationEvent} The populated <code>ILiquidationEvent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ILiquidationEvent();

            if (data.hasOwnProperty('firstSaleDate')) {
                obj['firstSaleDate'] = ModelDate.constructFromObject(data['firstSaleDate']);
            }
            if (data.hasOwnProperty('lastSaleDate')) {
                obj['lastSaleDate'] = ModelDate.constructFromObject(data['lastSaleDate']);
            }
            if (data.hasOwnProperty('liquidationType')) {
                obj['liquidationType'] = ApiClient.convertToType(data['liquidationType'], 'String');
            }
            if (data.hasOwnProperty('liquidationTypeDescription')) {
                obj['liquidationTypeDescription'] = ApiClient.convertToType(data['liquidationTypeDescription'], 'String');
            }
            if (data.hasOwnProperty('saleDatesDescription')) {
                obj['saleDatesDescription'] = ApiClient.convertToType(data['saleDatesDescription'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ILiquidationEvent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ILiquidationEvent</code>.
     */
    static validateJSON(data) {
        // validate the optional field `firstSaleDate`
        if (data['firstSaleDate']) { // data not null
          ModelDate.validateJSON(data['firstSaleDate']);
        }
        // validate the optional field `lastSaleDate`
        if (data['lastSaleDate']) { // data not null
          ModelDate.validateJSON(data['lastSaleDate']);
        }
        // ensure the json data is a string
        if (data['liquidationType'] && !(typeof data['liquidationType'] === 'string' || data['liquidationType'] instanceof String)) {
            throw new Error("Expected the field `liquidationType` to be a primitive type in the JSON string but got " + data['liquidationType']);
        }
        // ensure the json data is a string
        if (data['liquidationTypeDescription'] && !(typeof data['liquidationTypeDescription'] === 'string' || data['liquidationTypeDescription'] instanceof String)) {
            throw new Error("Expected the field `liquidationTypeDescription` to be a primitive type in the JSON string but got " + data['liquidationTypeDescription']);
        }
        // ensure the json data is a string
        if (data['saleDatesDescription'] && !(typeof data['saleDatesDescription'] === 'string' || data['saleDatesDescription'] instanceof String)) {
            throw new Error("Expected the field `saleDatesDescription` to be a primitive type in the JSON string but got " + data['saleDatesDescription']);
        }

        return true;
    }


}



/**
 * @member {module:model/ModelDate} firstSaleDate
 */
ILiquidationEvent.prototype['firstSaleDate'] = undefined;

/**
 * @member {module:model/ModelDate} lastSaleDate
 */
ILiquidationEvent.prototype['lastSaleDate'] = undefined;

/**
 * @member {module:model/ILiquidationEvent.LiquidationTypeEnum} liquidationType
 */
ILiquidationEvent.prototype['liquidationType'] = undefined;

/**
 * @member {String} liquidationTypeDescription
 */
ILiquidationEvent.prototype['liquidationTypeDescription'] = undefined;

/**
 * @member {String} saleDatesDescription
 */
ILiquidationEvent.prototype['saleDatesDescription'] = undefined;





/**
 * Allowed values for the <code>liquidationType</code> property.
 * @enum {String}
 * @readonly
 */
ILiquidationEvent['LiquidationTypeEnum'] = {

    /**
     * value: "SellAtPlanEnd"
     * @const
     */
    "SellAtPlanEnd": "SellAtPlanEnd",

    /**
     * value: "SellAllOnSpecificDate"
     * @const
     */
    "SellAllOnSpecificDate": "SellAllOnSpecificDate",

    /**
     * value: "SellInInstallments"
     * @const
     */
    "SellInInstallments": "SellInInstallments"
};



export default ILiquidationEvent;

