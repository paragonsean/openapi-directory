/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelDate from './ModelDate';

/**
 * The FormattedDateRange model module.
 * @module model/FormattedDateRange
 * @version v1
 */
class FormattedDateRange {
    /**
     * Constructs a new <code>FormattedDateRange</code>.
     * @alias module:model/FormattedDateRange
     */
    constructor() { 
        
        FormattedDateRange.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FormattedDateRange</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FormattedDateRange} obj Optional instance to populate.
     * @return {module:model/FormattedDateRange} The populated <code>FormattedDateRange</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FormattedDateRange();

            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ModelDate.constructFromObject(data['endDate']);
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ModelDate.constructFromObject(data['startDate']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FormattedDateRange</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FormattedDateRange</code>.
     */
    static validateJSON(data) {
        // validate the optional field `endDate`
        if (data['endDate']) { // data not null
          ModelDate.validateJSON(data['endDate']);
        }
        // validate the optional field `startDate`
        if (data['startDate']) { // data not null
          ModelDate.validateJSON(data['startDate']);
        }

        return true;
    }


}



/**
 * @member {module:model/ModelDate} endDate
 */
FormattedDateRange.prototype['endDate'] = undefined;

/**
 * @member {module:model/ModelDate} startDate
 */
FormattedDateRange.prototype['startDate'] = undefined;






export default FormattedDateRange;

