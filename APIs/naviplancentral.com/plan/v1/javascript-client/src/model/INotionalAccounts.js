/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Currency from './Currency';

/**
 * The INotionalAccounts model module.
 * @module model/INotionalAccounts
 * @version v1
 */
class INotionalAccounts {
    /**
     * Constructs a new <code>INotionalAccounts</code>.
     * @alias module:model/INotionalAccounts
     */
    constructor() { 
        
        INotionalAccounts.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>INotionalAccounts</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/INotionalAccounts} obj Optional instance to populate.
     * @return {module:model/INotionalAccounts} The populated <code>INotionalAccounts</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new INotionalAccounts();

            if (data.hasOwnProperty('capitalDividendAccountEndOfYearValue')) {
                obj['capitalDividendAccountEndOfYearValue'] = Currency.constructFromObject(data['capitalDividendAccountEndOfYearValue']);
            }
            if (data.hasOwnProperty('capitalLossesCarryoverEndOfYearValue')) {
                obj['capitalLossesCarryoverEndOfYearValue'] = Currency.constructFromObject(data['capitalLossesCarryoverEndOfYearValue']);
            }
            if (data.hasOwnProperty('dividendRefund')) {
                obj['dividendRefund'] = Currency.constructFromObject(data['dividendRefund']);
            }
            if (data.hasOwnProperty('generalRateOfIncomePoolEndOfYearValue')) {
                obj['generalRateOfIncomePoolEndOfYearValue'] = Currency.constructFromObject(data['generalRateOfIncomePoolEndOfYearValue']);
            }
            if (data.hasOwnProperty('nonEligibleRefundableDividendTaxOnHandEndOfYearValue')) {
                obj['nonEligibleRefundableDividendTaxOnHandEndOfYearValue'] = Currency.constructFromObject(data['nonEligibleRefundableDividendTaxOnHandEndOfYearValue']);
            }
            if (data.hasOwnProperty('nrdtohDividendRefund')) {
                obj['nrdtohDividendRefund'] = Currency.constructFromObject(data['nrdtohDividendRefund']);
            }
            if (data.hasOwnProperty('refundableDividendTaxOnHandEndOfYearValue')) {
                obj['refundableDividendTaxOnHandEndOfYearValue'] = Currency.constructFromObject(data['refundableDividendTaxOnHandEndOfYearValue']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>INotionalAccounts</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>INotionalAccounts</code>.
     */
    static validateJSON(data) {
        // validate the optional field `capitalDividendAccountEndOfYearValue`
        if (data['capitalDividendAccountEndOfYearValue']) { // data not null
          Currency.validateJSON(data['capitalDividendAccountEndOfYearValue']);
        }
        // validate the optional field `capitalLossesCarryoverEndOfYearValue`
        if (data['capitalLossesCarryoverEndOfYearValue']) { // data not null
          Currency.validateJSON(data['capitalLossesCarryoverEndOfYearValue']);
        }
        // validate the optional field `dividendRefund`
        if (data['dividendRefund']) { // data not null
          Currency.validateJSON(data['dividendRefund']);
        }
        // validate the optional field `generalRateOfIncomePoolEndOfYearValue`
        if (data['generalRateOfIncomePoolEndOfYearValue']) { // data not null
          Currency.validateJSON(data['generalRateOfIncomePoolEndOfYearValue']);
        }
        // validate the optional field `nonEligibleRefundableDividendTaxOnHandEndOfYearValue`
        if (data['nonEligibleRefundableDividendTaxOnHandEndOfYearValue']) { // data not null
          Currency.validateJSON(data['nonEligibleRefundableDividendTaxOnHandEndOfYearValue']);
        }
        // validate the optional field `nrdtohDividendRefund`
        if (data['nrdtohDividendRefund']) { // data not null
          Currency.validateJSON(data['nrdtohDividendRefund']);
        }
        // validate the optional field `refundableDividendTaxOnHandEndOfYearValue`
        if (data['refundableDividendTaxOnHandEndOfYearValue']) { // data not null
          Currency.validateJSON(data['refundableDividendTaxOnHandEndOfYearValue']);
        }

        return true;
    }


}



/**
 * @member {module:model/Currency} capitalDividendAccountEndOfYearValue
 */
INotionalAccounts.prototype['capitalDividendAccountEndOfYearValue'] = undefined;

/**
 * @member {module:model/Currency} capitalLossesCarryoverEndOfYearValue
 */
INotionalAccounts.prototype['capitalLossesCarryoverEndOfYearValue'] = undefined;

/**
 * @member {module:model/Currency} dividendRefund
 */
INotionalAccounts.prototype['dividendRefund'] = undefined;

/**
 * @member {module:model/Currency} generalRateOfIncomePoolEndOfYearValue
 */
INotionalAccounts.prototype['generalRateOfIncomePoolEndOfYearValue'] = undefined;

/**
 * @member {module:model/Currency} nonEligibleRefundableDividendTaxOnHandEndOfYearValue
 */
INotionalAccounts.prototype['nonEligibleRefundableDividendTaxOnHandEndOfYearValue'] = undefined;

/**
 * @member {module:model/Currency} nrdtohDividendRefund
 */
INotionalAccounts.prototype['nrdtohDividendRefund'] = undefined;

/**
 * @member {module:model/Currency} refundableDividendTaxOnHandEndOfYearValue
 */
INotionalAccounts.prototype['refundableDividendTaxOnHandEndOfYearValue'] = undefined;






export default INotionalAccounts;

