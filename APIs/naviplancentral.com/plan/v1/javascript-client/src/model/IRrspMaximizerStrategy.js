/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DescriptiveBoolean from './DescriptiveBoolean';
import FormattedDateRange from './FormattedDateRange';

/**
 * The IRrspMaximizerStrategy model module.
 * @module model/IRrspMaximizerStrategy
 * @version v1
 */
class IRrspMaximizerStrategy {
    /**
     * Constructs a new <code>IRrspMaximizerStrategy</code>.
     * @alias module:model/IRrspMaximizerStrategy
     */
    constructor() { 
        
        IRrspMaximizerStrategy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IRrspMaximizerStrategy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IRrspMaximizerStrategy} obj Optional instance to populate.
     * @return {module:model/IRrspMaximizerStrategy} The populated <code>IRrspMaximizerStrategy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IRrspMaximizerStrategy();

            if (data.hasOwnProperty('applicable')) {
                obj['applicable'] = ApiClient.convertToType(data['applicable'], 'String');
            }
            if (data.hasOwnProperty('applicableRange')) {
                obj['applicableRange'] = FormattedDateRange.constructFromObject(data['applicableRange']);
            }
            if (data.hasOwnProperty('assetName')) {
                obj['assetName'] = ApiClient.convertToType(data['assetName'], 'String');
            }
            if (data.hasOwnProperty('constrainedByCashflow')) {
                obj['constrainedByCashflow'] = DescriptiveBoolean.constructFromObject(data['constrainedByCashflow']);
            }
            if (data.hasOwnProperty('month')) {
                obj['month'] = ApiClient.convertToType(data['month'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IRrspMaximizerStrategy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IRrspMaximizerStrategy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['applicable'] && !(typeof data['applicable'] === 'string' || data['applicable'] instanceof String)) {
            throw new Error("Expected the field `applicable` to be a primitive type in the JSON string but got " + data['applicable']);
        }
        // validate the optional field `applicableRange`
        if (data['applicableRange']) { // data not null
          FormattedDateRange.validateJSON(data['applicableRange']);
        }
        // ensure the json data is a string
        if (data['assetName'] && !(typeof data['assetName'] === 'string' || data['assetName'] instanceof String)) {
            throw new Error("Expected the field `assetName` to be a primitive type in the JSON string but got " + data['assetName']);
        }
        // validate the optional field `constrainedByCashflow`
        if (data['constrainedByCashflow']) { // data not null
          DescriptiveBoolean.validateJSON(data['constrainedByCashflow']);
        }
        // ensure the json data is a string
        if (data['month'] && !(typeof data['month'] === 'string' || data['month'] instanceof String)) {
            throw new Error("Expected the field `month` to be a primitive type in the JSON string but got " + data['month']);
        }

        return true;
    }


}



/**
 * @member {String} applicable
 */
IRrspMaximizerStrategy.prototype['applicable'] = undefined;

/**
 * @member {module:model/FormattedDateRange} applicableRange
 */
IRrspMaximizerStrategy.prototype['applicableRange'] = undefined;

/**
 * @member {String} assetName
 */
IRrspMaximizerStrategy.prototype['assetName'] = undefined;

/**
 * @member {module:model/DescriptiveBoolean} constrainedByCashflow
 */
IRrspMaximizerStrategy.prototype['constrainedByCashflow'] = undefined;

/**
 * @member {String} month
 */
IRrspMaximizerStrategy.prototype['month'] = undefined;






export default IRrspMaximizerStrategy;

