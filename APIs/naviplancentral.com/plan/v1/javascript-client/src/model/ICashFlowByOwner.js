/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ICashFlow from './ICashFlow';

/**
 * The ICashFlowByOwner model module.
 * @module model/ICashFlowByOwner
 * @version v1
 */
class ICashFlowByOwner {
    /**
     * Constructs a new <code>ICashFlowByOwner</code>.
     * @alias module:model/ICashFlowByOwner
     */
    constructor() { 
        
        ICashFlowByOwner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ICashFlowByOwner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ICashFlowByOwner} obj Optional instance to populate.
     * @return {module:model/ICashFlowByOwner} The populated <code>ICashFlowByOwner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ICashFlowByOwner();

            if (data.hasOwnProperty('clientCashFlow')) {
                obj['clientCashFlow'] = ICashFlow.constructFromObject(data['clientCashFlow']);
            }
            if (data.hasOwnProperty('coClientCashFlow')) {
                obj['coClientCashFlow'] = ICashFlow.constructFromObject(data['coClientCashFlow']);
            }
            if (data.hasOwnProperty('totalCashFlow')) {
                obj['totalCashFlow'] = ICashFlow.constructFromObject(data['totalCashFlow']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ICashFlowByOwner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ICashFlowByOwner</code>.
     */
    static validateJSON(data) {
        // validate the optional field `clientCashFlow`
        if (data['clientCashFlow']) { // data not null
          ICashFlow.validateJSON(data['clientCashFlow']);
        }
        // validate the optional field `coClientCashFlow`
        if (data['coClientCashFlow']) { // data not null
          ICashFlow.validateJSON(data['coClientCashFlow']);
        }
        // validate the optional field `totalCashFlow`
        if (data['totalCashFlow']) { // data not null
          ICashFlow.validateJSON(data['totalCashFlow']);
        }

        return true;
    }


}



/**
 * @member {module:model/ICashFlow} clientCashFlow
 */
ICashFlowByOwner.prototype['clientCashFlow'] = undefined;

/**
 * @member {module:model/ICashFlow} coClientCashFlow
 */
ICashFlowByOwner.prototype['coClientCashFlow'] = undefined;

/**
 * @member {module:model/ICashFlow} totalCashFlow
 */
ICashFlowByOwner.prototype['totalCashFlow'] = undefined;






export default ICashFlowByOwner;

