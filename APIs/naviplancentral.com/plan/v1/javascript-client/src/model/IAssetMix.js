/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IAssetClass from './IAssetClass';

/**
 * The IAssetMix model module.
 * @module model/IAssetMix
 * @version v1
 */
class IAssetMix {
    /**
     * Constructs a new <code>IAssetMix</code>.
     * @alias module:model/IAssetMix
     */
    constructor() { 
        
        IAssetMix.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IAssetMix</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IAssetMix} obj Optional instance to populate.
     * @return {module:model/IAssetMix} The populated <code>IAssetMix</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IAssetMix();

            if (data.hasOwnProperty('assetClassDisplayLevel')) {
                obj['assetClassDisplayLevel'] = ApiClient.convertToType(data['assetClassDisplayLevel'], 'Number');
            }
            if (data.hasOwnProperty('assetClassInfoForDisplayLevel')) {
                obj['assetClassInfoForDisplayLevel'] = ApiClient.convertToType(data['assetClassInfoForDisplayLevel'], ['Number']);
            }
            if (data.hasOwnProperty('classes')) {
                obj['classes'] = ApiClient.convertToType(data['classes'], [IAssetClass]);
            }
            if (data.hasOwnProperty('superAssetClasses')) {
                obj['superAssetClasses'] = ApiClient.convertToType(data['superAssetClasses'], [IAssetClass]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IAssetMix</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IAssetMix</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['assetClassInfoForDisplayLevel'])) {
            throw new Error("Expected the field `assetClassInfoForDisplayLevel` to be an array in the JSON data but got " + data['assetClassInfoForDisplayLevel']);
        }
        if (data['classes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['classes'])) {
                throw new Error("Expected the field `classes` to be an array in the JSON data but got " + data['classes']);
            }
            // validate the optional field `classes` (array)
            for (const item of data['classes']) {
                IAssetClass.validateJSON(item);
            };
        }
        if (data['superAssetClasses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['superAssetClasses'])) {
                throw new Error("Expected the field `superAssetClasses` to be an array in the JSON data but got " + data['superAssetClasses']);
            }
            // validate the optional field `superAssetClasses` (array)
            for (const item of data['superAssetClasses']) {
                IAssetClass.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Number} assetClassDisplayLevel
 */
IAssetMix.prototype['assetClassDisplayLevel'] = undefined;

/**
 * @member {Array.<Number>} assetClassInfoForDisplayLevel
 */
IAssetMix.prototype['assetClassInfoForDisplayLevel'] = undefined;

/**
 * @member {Array.<module:model/IAssetClass>} classes
 */
IAssetMix.prototype['classes'] = undefined;

/**
 * @member {Array.<module:model/IAssetClass>} superAssetClasses
 */
IAssetMix.prototype['superAssetClasses'] = undefined;






export default IAssetMix;

