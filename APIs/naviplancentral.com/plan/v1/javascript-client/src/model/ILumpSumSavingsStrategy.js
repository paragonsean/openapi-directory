/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FormattedEnumTypeSavingsStrategyType from './FormattedEnumTypeSavingsStrategyType';
import GrowthRateValues from './GrowthRateValues';
import ModelDate from './ModelDate';
import PercentOrCurrency from './PercentOrCurrency';

/**
 * The ILumpSumSavingsStrategy model module.
 * @module model/ILumpSumSavingsStrategy
 * @version v1
 */
class ILumpSumSavingsStrategy {
    /**
     * Constructs a new <code>ILumpSumSavingsStrategy</code>.
     * @alias module:model/ILumpSumSavingsStrategy
     */
    constructor() { 
        
        ILumpSumSavingsStrategy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ILumpSumSavingsStrategy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ILumpSumSavingsStrategy} obj Optional instance to populate.
     * @return {module:model/ILumpSumSavingsStrategy} The populated <code>ILumpSumSavingsStrategy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ILumpSumSavingsStrategy();

            if (data.hasOwnProperty('amountOrPercentOfSalary')) {
                obj['amountOrPercentOfSalary'] = PercentOrCurrency.constructFromObject(data['amountOrPercentOfSalary']);
            }
            if (data.hasOwnProperty('formattedSavingsTypeWithDash')) {
                obj['formattedSavingsTypeWithDash'] = ApiClient.convertToType(data['formattedSavingsTypeWithDash'], 'String');
            }
            if (data.hasOwnProperty('indexRate')) {
                obj['indexRate'] = GrowthRateValues.constructFromObject(data['indexRate']);
            }
            if (data.hasOwnProperty('savingsDate')) {
                obj['savingsDate'] = ModelDate.constructFromObject(data['savingsDate']);
            }
            if (data.hasOwnProperty('savingsType')) {
                obj['savingsType'] = FormattedEnumTypeSavingsStrategyType.constructFromObject(data['savingsType']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ILumpSumSavingsStrategy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ILumpSumSavingsStrategy</code>.
     */
    static validateJSON(data) {
        // validate the optional field `amountOrPercentOfSalary`
        if (data['amountOrPercentOfSalary']) { // data not null
          PercentOrCurrency.validateJSON(data['amountOrPercentOfSalary']);
        }
        // ensure the json data is a string
        if (data['formattedSavingsTypeWithDash'] && !(typeof data['formattedSavingsTypeWithDash'] === 'string' || data['formattedSavingsTypeWithDash'] instanceof String)) {
            throw new Error("Expected the field `formattedSavingsTypeWithDash` to be a primitive type in the JSON string but got " + data['formattedSavingsTypeWithDash']);
        }
        // validate the optional field `indexRate`
        if (data['indexRate']) { // data not null
          GrowthRateValues.validateJSON(data['indexRate']);
        }
        // validate the optional field `savingsDate`
        if (data['savingsDate']) { // data not null
          ModelDate.validateJSON(data['savingsDate']);
        }
        // validate the optional field `savingsType`
        if (data['savingsType']) { // data not null
          FormattedEnumTypeSavingsStrategyType.validateJSON(data['savingsType']);
        }

        return true;
    }


}



/**
 * @member {module:model/PercentOrCurrency} amountOrPercentOfSalary
 */
ILumpSumSavingsStrategy.prototype['amountOrPercentOfSalary'] = undefined;

/**
 * @member {String} formattedSavingsTypeWithDash
 */
ILumpSumSavingsStrategy.prototype['formattedSavingsTypeWithDash'] = undefined;

/**
 * @member {module:model/GrowthRateValues} indexRate
 */
ILumpSumSavingsStrategy.prototype['indexRate'] = undefined;

/**
 * @member {module:model/ModelDate} savingsDate
 */
ILumpSumSavingsStrategy.prototype['savingsDate'] = undefined;

/**
 * @member {module:model/FormattedEnumTypeSavingsStrategyType} savingsType
 */
ILumpSumSavingsStrategy.prototype['savingsType'] = undefined;






export default ILumpSumSavingsStrategy;

