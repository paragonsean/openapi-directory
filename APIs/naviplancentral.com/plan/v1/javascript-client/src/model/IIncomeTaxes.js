/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Percent from './Percent';

/**
 * The IIncomeTaxes model module.
 * @module model/IIncomeTaxes
 * @version v1
 */
class IIncomeTaxes {
    /**
     * Constructs a new <code>IIncomeTaxes</code>.
     * @alias module:model/IIncomeTaxes
     */
    constructor() { 
        
        IIncomeTaxes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IIncomeTaxes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IIncomeTaxes} obj Optional instance to populate.
     * @return {module:model/IIncomeTaxes} The populated <code>IIncomeTaxes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IIncomeTaxes();

            if (data.hasOwnProperty('averageTaxRate')) {
                obj['averageTaxRate'] = Percent.constructFromObject(data['averageTaxRate']);
            }
            if (data.hasOwnProperty('combinedStateAndAverageTaxRate')) {
                obj['combinedStateAndAverageTaxRate'] = Percent.constructFromObject(data['combinedStateAndAverageTaxRate']);
            }
            if (data.hasOwnProperty('combinedStateAndLongTermCapitalGainsTaxRate')) {
                obj['combinedStateAndLongTermCapitalGainsTaxRate'] = Percent.constructFromObject(data['combinedStateAndLongTermCapitalGainsTaxRate']);
            }
            if (data.hasOwnProperty('combinedStateAndMarginalTaxRate')) {
                obj['combinedStateAndMarginalTaxRate'] = Percent.constructFromObject(data['combinedStateAndMarginalTaxRate']);
            }
            if (data.hasOwnProperty('longTermCapitalGainsTaxRate')) {
                obj['longTermCapitalGainsTaxRate'] = Percent.constructFromObject(data['longTermCapitalGainsTaxRate']);
            }
            if (data.hasOwnProperty('marginalTaxRate')) {
                obj['marginalTaxRate'] = Percent.constructFromObject(data['marginalTaxRate']);
            }
            if (data.hasOwnProperty('stateTaxRate')) {
                obj['stateTaxRate'] = Percent.constructFromObject(data['stateTaxRate']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IIncomeTaxes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IIncomeTaxes</code>.
     */
    static validateJSON(data) {
        // validate the optional field `averageTaxRate`
        if (data['averageTaxRate']) { // data not null
          Percent.validateJSON(data['averageTaxRate']);
        }
        // validate the optional field `combinedStateAndAverageTaxRate`
        if (data['combinedStateAndAverageTaxRate']) { // data not null
          Percent.validateJSON(data['combinedStateAndAverageTaxRate']);
        }
        // validate the optional field `combinedStateAndLongTermCapitalGainsTaxRate`
        if (data['combinedStateAndLongTermCapitalGainsTaxRate']) { // data not null
          Percent.validateJSON(data['combinedStateAndLongTermCapitalGainsTaxRate']);
        }
        // validate the optional field `combinedStateAndMarginalTaxRate`
        if (data['combinedStateAndMarginalTaxRate']) { // data not null
          Percent.validateJSON(data['combinedStateAndMarginalTaxRate']);
        }
        // validate the optional field `longTermCapitalGainsTaxRate`
        if (data['longTermCapitalGainsTaxRate']) { // data not null
          Percent.validateJSON(data['longTermCapitalGainsTaxRate']);
        }
        // validate the optional field `marginalTaxRate`
        if (data['marginalTaxRate']) { // data not null
          Percent.validateJSON(data['marginalTaxRate']);
        }
        // validate the optional field `stateTaxRate`
        if (data['stateTaxRate']) { // data not null
          Percent.validateJSON(data['stateTaxRate']);
        }

        return true;
    }


}



/**
 * @member {module:model/Percent} averageTaxRate
 */
IIncomeTaxes.prototype['averageTaxRate'] = undefined;

/**
 * @member {module:model/Percent} combinedStateAndAverageTaxRate
 */
IIncomeTaxes.prototype['combinedStateAndAverageTaxRate'] = undefined;

/**
 * @member {module:model/Percent} combinedStateAndLongTermCapitalGainsTaxRate
 */
IIncomeTaxes.prototype['combinedStateAndLongTermCapitalGainsTaxRate'] = undefined;

/**
 * @member {module:model/Percent} combinedStateAndMarginalTaxRate
 */
IIncomeTaxes.prototype['combinedStateAndMarginalTaxRate'] = undefined;

/**
 * @member {module:model/Percent} longTermCapitalGainsTaxRate
 */
IIncomeTaxes.prototype['longTermCapitalGainsTaxRate'] = undefined;

/**
 * @member {module:model/Percent} marginalTaxRate
 */
IIncomeTaxes.prototype['marginalTaxRate'] = undefined;

/**
 * @member {module:model/Percent} stateTaxRate
 */
IIncomeTaxes.prototype['stateTaxRate'] = undefined;






export default IIncomeTaxes;

