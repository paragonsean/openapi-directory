/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdvicentNaviPlanRestApiModelsOwnerModel from './AdvicentNaviPlanRestApiModelsOwnerModel';

/**
 * The AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase model module.
 * @module model/AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase
 * @version v1
 */
class AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase {
    /**
     * Constructs a new <code>AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase</code>.
     * @alias module:model/AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase
     */
    constructor() { 
        
        AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase} obj Optional instance to populate.
     * @return {module:model/AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase} The populated <code>AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase();

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('coveragePercentage')) {
                obj['coveragePercentage'] = ApiClient.convertToType(data['coveragePercentage'], 'Number');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], 'Date');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('inflationRate')) {
                obj['inflationRate'] = ApiClient.convertToType(data['inflationRate'], 'Number');
            }
            if (data.hasOwnProperty('owners')) {
                obj['owners'] = ApiClient.convertToType(data['owners'], [AdvicentNaviPlanRestApiModelsOwnerModel]);
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        if (data['owners']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['owners'])) {
                throw new Error("Expected the field `owners` to be an array in the JSON data but got " + data['owners']);
            }
            // validate the optional field `owners` (array)
            for (const item of data['owners']) {
                AdvicentNaviPlanRestApiModelsOwnerModel.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {Number} amount
 */
AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.prototype['amount'] = undefined;

/**
 * @member {Number} coveragePercentage
 */
AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.prototype['coveragePercentage'] = undefined;

/**
 * @member {String} description
 */
AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.prototype['description'] = undefined;

/**
 * @member {Date} endDate
 */
AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.prototype['endDate'] = undefined;

/**
 * @member {Number} id
 */
AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.prototype['id'] = undefined;

/**
 * @member {Number} inflationRate
 */
AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.prototype['inflationRate'] = undefined;

/**
 * @member {Array.<module:model/AdvicentNaviPlanRestApiModelsOwnerModel>} owners
 */
AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.prototype['owners'] = undefined;

/**
 * @member {Date} startDate
 */
AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.prototype['startDate'] = undefined;

/**
 * @member {String} type
 */
AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.prototype['type'] = undefined;






export default AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase;

