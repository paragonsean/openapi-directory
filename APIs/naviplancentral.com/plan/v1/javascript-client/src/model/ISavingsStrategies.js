/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ILumpSumSavingsStrategy from './ILumpSumSavingsStrategy';
import IPeriodicSavingsStrategy from './IPeriodicSavingsStrategy';
import IRrspMaximizerStrategy from './IRrspMaximizerStrategy';
import ISurplusSavingsStrategy from './ISurplusSavingsStrategy';

/**
 * The ISavingsStrategies model module.
 * @module model/ISavingsStrategies
 * @version v1
 */
class ISavingsStrategies {
    /**
     * Constructs a new <code>ISavingsStrategies</code>.
     * @alias module:model/ISavingsStrategies
     */
    constructor() { 
        
        ISavingsStrategies.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ISavingsStrategies</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ISavingsStrategies} obj Optional instance to populate.
     * @return {module:model/ISavingsStrategies} The populated <code>ISavingsStrategies</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ISavingsStrategies();

            if (data.hasOwnProperty('lumpSumSavingsStrategies')) {
                obj['lumpSumSavingsStrategies'] = ApiClient.convertToType(data['lumpSumSavingsStrategies'], [ILumpSumSavingsStrategy]);
            }
            if (data.hasOwnProperty('periodicSavingsStrategies')) {
                obj['periodicSavingsStrategies'] = ApiClient.convertToType(data['periodicSavingsStrategies'], [IPeriodicSavingsStrategy]);
            }
            if (data.hasOwnProperty('rrspMaximizerStrategies')) {
                obj['rrspMaximizerStrategies'] = ApiClient.convertToType(data['rrspMaximizerStrategies'], [IRrspMaximizerStrategy]);
            }
            if (data.hasOwnProperty('surplusSavingsStrategies')) {
                obj['surplusSavingsStrategies'] = ApiClient.convertToType(data['surplusSavingsStrategies'], [ISurplusSavingsStrategy]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ISavingsStrategies</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ISavingsStrategies</code>.
     */
    static validateJSON(data) {
        if (data['lumpSumSavingsStrategies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['lumpSumSavingsStrategies'])) {
                throw new Error("Expected the field `lumpSumSavingsStrategies` to be an array in the JSON data but got " + data['lumpSumSavingsStrategies']);
            }
            // validate the optional field `lumpSumSavingsStrategies` (array)
            for (const item of data['lumpSumSavingsStrategies']) {
                ILumpSumSavingsStrategy.validateJSON(item);
            };
        }
        if (data['periodicSavingsStrategies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['periodicSavingsStrategies'])) {
                throw new Error("Expected the field `periodicSavingsStrategies` to be an array in the JSON data but got " + data['periodicSavingsStrategies']);
            }
            // validate the optional field `periodicSavingsStrategies` (array)
            for (const item of data['periodicSavingsStrategies']) {
                IPeriodicSavingsStrategy.validateJSON(item);
            };
        }
        if (data['rrspMaximizerStrategies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['rrspMaximizerStrategies'])) {
                throw new Error("Expected the field `rrspMaximizerStrategies` to be an array in the JSON data but got " + data['rrspMaximizerStrategies']);
            }
            // validate the optional field `rrspMaximizerStrategies` (array)
            for (const item of data['rrspMaximizerStrategies']) {
                IRrspMaximizerStrategy.validateJSON(item);
            };
        }
        if (data['surplusSavingsStrategies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['surplusSavingsStrategies'])) {
                throw new Error("Expected the field `surplusSavingsStrategies` to be an array in the JSON data but got " + data['surplusSavingsStrategies']);
            }
            // validate the optional field `surplusSavingsStrategies` (array)
            for (const item of data['surplusSavingsStrategies']) {
                ISurplusSavingsStrategy.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/ILumpSumSavingsStrategy>} lumpSumSavingsStrategies
 */
ISavingsStrategies.prototype['lumpSumSavingsStrategies'] = undefined;

/**
 * @member {Array.<module:model/IPeriodicSavingsStrategy>} periodicSavingsStrategies
 */
ISavingsStrategies.prototype['periodicSavingsStrategies'] = undefined;

/**
 * @member {Array.<module:model/IRrspMaximizerStrategy>} rrspMaximizerStrategies
 */
ISavingsStrategies.prototype['rrspMaximizerStrategies'] = undefined;

/**
 * @member {Array.<module:model/ISurplusSavingsStrategy>} surplusSavingsStrategies
 */
ISavingsStrategies.prototype['surplusSavingsStrategies'] = undefined;






export default ISavingsStrategies;

