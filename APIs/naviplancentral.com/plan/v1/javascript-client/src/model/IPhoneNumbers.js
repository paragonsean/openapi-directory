/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IBusinessPhoneNumbers from './IBusinessPhoneNumbers';

/**
 * The IPhoneNumbers model module.
 * @module model/IPhoneNumbers
 * @version v1
 */
class IPhoneNumbers {
    /**
     * Constructs a new <code>IPhoneNumbers</code>.
     * @alias module:model/IPhoneNumbers
     */
    constructor() { 
        
        IPhoneNumbers.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IPhoneNumbers</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IPhoneNumbers} obj Optional instance to populate.
     * @return {module:model/IPhoneNumbers} The populated <code>IPhoneNumbers</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IPhoneNumbers();

            if (data.hasOwnProperty('additionalNumbers')) {
                obj['additionalNumbers'] = IBusinessPhoneNumbers.constructFromObject(data['additionalNumbers']);
            }
            if (data.hasOwnProperty('business')) {
                obj['business'] = ApiClient.convertToType(data['business'], 'String');
            }
            if (data.hasOwnProperty('cell')) {
                obj['cell'] = ApiClient.convertToType(data['cell'], 'String');
            }
            if (data.hasOwnProperty('fax')) {
                obj['fax'] = ApiClient.convertToType(data['fax'], 'String');
            }
            if (data.hasOwnProperty('home')) {
                obj['home'] = ApiClient.convertToType(data['home'], 'String');
            }
            if (data.hasOwnProperty('pager')) {
                obj['pager'] = ApiClient.convertToType(data['pager'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IPhoneNumbers</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IPhoneNumbers</code>.
     */
    static validateJSON(data) {
        // validate the optional field `additionalNumbers`
        if (data['additionalNumbers']) { // data not null
          IBusinessPhoneNumbers.validateJSON(data['additionalNumbers']);
        }
        // ensure the json data is a string
        if (data['business'] && !(typeof data['business'] === 'string' || data['business'] instanceof String)) {
            throw new Error("Expected the field `business` to be a primitive type in the JSON string but got " + data['business']);
        }
        // ensure the json data is a string
        if (data['cell'] && !(typeof data['cell'] === 'string' || data['cell'] instanceof String)) {
            throw new Error("Expected the field `cell` to be a primitive type in the JSON string but got " + data['cell']);
        }
        // ensure the json data is a string
        if (data['fax'] && !(typeof data['fax'] === 'string' || data['fax'] instanceof String)) {
            throw new Error("Expected the field `fax` to be a primitive type in the JSON string but got " + data['fax']);
        }
        // ensure the json data is a string
        if (data['home'] && !(typeof data['home'] === 'string' || data['home'] instanceof String)) {
            throw new Error("Expected the field `home` to be a primitive type in the JSON string but got " + data['home']);
        }
        // ensure the json data is a string
        if (data['pager'] && !(typeof data['pager'] === 'string' || data['pager'] instanceof String)) {
            throw new Error("Expected the field `pager` to be a primitive type in the JSON string but got " + data['pager']);
        }

        return true;
    }


}



/**
 * @member {module:model/IBusinessPhoneNumbers} additionalNumbers
 */
IPhoneNumbers.prototype['additionalNumbers'] = undefined;

/**
 * @member {String} business
 */
IPhoneNumbers.prototype['business'] = undefined;

/**
 * @member {String} cell
 */
IPhoneNumbers.prototype['cell'] = undefined;

/**
 * @member {String} fax
 */
IPhoneNumbers.prototype['fax'] = undefined;

/**
 * @member {String} home
 */
IPhoneNumbers.prototype['home'] = undefined;

/**
 * @member {String} pager
 */
IPhoneNumbers.prototype['pager'] = undefined;






export default IPhoneNumbers;

