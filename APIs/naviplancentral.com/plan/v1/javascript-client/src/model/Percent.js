/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Percent model module.
 * @module model/Percent
 * @version v1
 */
class Percent {
    /**
     * Constructs a new <code>Percent</code>.
     * @alias module:model/Percent
     */
    constructor() { 
        
        Percent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Percent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Percent} obj Optional instance to populate.
     * @return {module:model/Percent} The populated <code>Percent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Percent();

            if (data.hasOwnProperty('formattedDoubleDecimal')) {
                obj['formattedDoubleDecimal'] = ApiClient.convertToType(data['formattedDoubleDecimal'], 'String');
            }
            if (data.hasOwnProperty('formattedNoDecimal')) {
                obj['formattedNoDecimal'] = ApiClient.convertToType(data['formattedNoDecimal'], 'String');
            }
            if (data.hasOwnProperty('formattedSingleDecimal')) {
                obj['formattedSingleDecimal'] = ApiClient.convertToType(data['formattedSingleDecimal'], 'String');
            }
            if (data.hasOwnProperty('raw')) {
                obj['raw'] = ApiClient.convertToType(data['raw'], 'Number');
            }
            if (data.hasOwnProperty('rawCappedAt100')) {
                obj['rawCappedAt100'] = ApiClient.convertToType(data['rawCappedAt100'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Percent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Percent</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['formattedDoubleDecimal'] && !(typeof data['formattedDoubleDecimal'] === 'string' || data['formattedDoubleDecimal'] instanceof String)) {
            throw new Error("Expected the field `formattedDoubleDecimal` to be a primitive type in the JSON string but got " + data['formattedDoubleDecimal']);
        }
        // ensure the json data is a string
        if (data['formattedNoDecimal'] && !(typeof data['formattedNoDecimal'] === 'string' || data['formattedNoDecimal'] instanceof String)) {
            throw new Error("Expected the field `formattedNoDecimal` to be a primitive type in the JSON string but got " + data['formattedNoDecimal']);
        }
        // ensure the json data is a string
        if (data['formattedSingleDecimal'] && !(typeof data['formattedSingleDecimal'] === 'string' || data['formattedSingleDecimal'] instanceof String)) {
            throw new Error("Expected the field `formattedSingleDecimal` to be a primitive type in the JSON string but got " + data['formattedSingleDecimal']);
        }

        return true;
    }


}



/**
 * @member {String} formattedDoubleDecimal
 */
Percent.prototype['formattedDoubleDecimal'] = undefined;

/**
 * @member {String} formattedNoDecimal
 */
Percent.prototype['formattedNoDecimal'] = undefined;

/**
 * @member {String} formattedSingleDecimal
 */
Percent.prototype['formattedSingleDecimal'] = undefined;

/**
 * @member {Number} raw
 */
Percent.prototype['raw'] = undefined;

/**
 * @member {Number} rawCappedAt100
 */
Percent.prototype['rawCappedAt100'] = undefined;






export default Percent;

