/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ServiceInformation model module.
 * @module model/ServiceInformation
 * @version v1
 */
class ServiceInformation {
    /**
     * Constructs a new <code>ServiceInformation</code>.
     * @alias module:model/ServiceInformation
     */
    constructor() { 
        
        ServiceInformation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceInformation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceInformation} obj Optional instance to populate.
     * @return {module:model/ServiceInformation} The populated <code>ServiceInformation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceInformation();

            if (data.hasOwnProperty('altairConnectionStatus')) {
                obj['altairConnectionStatus'] = ApiClient.convertToType(data['altairConnectionStatus'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('pomVersion')) {
                obj['pomVersion'] = ApiClient.convertToType(data['pomVersion'], 'String');
            }
            if (data.hasOwnProperty('serviceVersion')) {
                obj['serviceVersion'] = ApiClient.convertToType(data['serviceVersion'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceInformation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceInformation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['pomVersion'] && !(typeof data['pomVersion'] === 'string' || data['pomVersion'] instanceof String)) {
            throw new Error("Expected the field `pomVersion` to be a primitive type in the JSON string but got " + data['pomVersion']);
        }
        // ensure the json data is a string
        if (data['serviceVersion'] && !(typeof data['serviceVersion'] === 'string' || data['serviceVersion'] instanceof String)) {
            throw new Error("Expected the field `serviceVersion` to be a primitive type in the JSON string but got " + data['serviceVersion']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * @member {Boolean} altairConnectionStatus
 */
ServiceInformation.prototype['altairConnectionStatus'] = undefined;

/**
 * @member {String} name
 */
ServiceInformation.prototype['name'] = undefined;

/**
 * @member {String} pomVersion
 */
ServiceInformation.prototype['pomVersion'] = undefined;

/**
 * @member {String} serviceVersion
 */
ServiceInformation.prototype['serviceVersion'] = undefined;

/**
 * @member {String} status
 */
ServiceInformation.prototype['status'] = undefined;






export default ServiceInformation;

