/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase from './AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase';

/**
 * The AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel model module.
 * @module model/AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel
 * @version v1
 */
class AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel {
    /**
     * Constructs a new <code>AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel</code>.
     * @alias module:model/AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel
     */
    constructor() { 
        
        AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel} obj Optional instance to populate.
     * @return {module:model/AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel} The populated <code>AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel();

            if (data.hasOwnProperty('clientDescription')) {
                obj['clientDescription'] = ApiClient.convertToType(data['clientDescription'], 'String');
            }
            if (data.hasOwnProperty('clientId')) {
                obj['clientId'] = ApiClient.convertToType(data['clientId'], 'Number');
            }
            if (data.hasOwnProperty('goals')) {
                obj['goals'] = ApiClient.convertToType(data['goals'], [AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase]);
            }
            if (data.hasOwnProperty('planDescription')) {
                obj['planDescription'] = ApiClient.convertToType(data['planDescription'], 'String');
            }
            if (data.hasOwnProperty('planLastUpdateTime')) {
                obj['planLastUpdateTime'] = ApiClient.convertToType(data['planLastUpdateTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['clientDescription'] && !(typeof data['clientDescription'] === 'string' || data['clientDescription'] instanceof String)) {
            throw new Error("Expected the field `clientDescription` to be a primitive type in the JSON string but got " + data['clientDescription']);
        }
        if (data['goals']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['goals'])) {
                throw new Error("Expected the field `goals` to be an array in the JSON data but got " + data['goals']);
            }
            // validate the optional field `goals` (array)
            for (const item of data['goals']) {
                AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['planDescription'] && !(typeof data['planDescription'] === 'string' || data['planDescription'] instanceof String)) {
            throw new Error("Expected the field `planDescription` to be a primitive type in the JSON string but got " + data['planDescription']);
        }

        return true;
    }


}



/**
 * @member {String} clientDescription
 */
AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.prototype['clientDescription'] = undefined;

/**
 * @member {Number} clientId
 */
AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.prototype['clientId'] = undefined;

/**
 * @member {Array.<module:model/AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase>} goals
 */
AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.prototype['goals'] = undefined;

/**
 * @member {String} planDescription
 */
AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.prototype['planDescription'] = undefined;

/**
 * @member {Date} planLastUpdateTime
 */
AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel.prototype['planLastUpdateTime'] = undefined;






export default AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel;

