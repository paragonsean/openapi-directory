/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Percent from './Percent';

/**
 * The IInvestmentAccountOwnershipData model module.
 * @module model/IInvestmentAccountOwnershipData
 * @version v1
 */
class IInvestmentAccountOwnershipData {
    /**
     * Constructs a new <code>IInvestmentAccountOwnershipData</code>.
     * @alias module:model/IInvestmentAccountOwnershipData
     */
    constructor() { 
        
        IInvestmentAccountOwnershipData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IInvestmentAccountOwnershipData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IInvestmentAccountOwnershipData} obj Optional instance to populate.
     * @return {module:model/IInvestmentAccountOwnershipData} The populated <code>IInvestmentAccountOwnershipData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IInvestmentAccountOwnershipData();

            if (data.hasOwnProperty('owner')) {
                obj['owner'] = ApiClient.convertToType(data['owner'], 'String');
            }
            if (data.hasOwnProperty('ownersName')) {
                obj['ownersName'] = ApiClient.convertToType(data['ownersName'], 'String');
            }
            if (data.hasOwnProperty('ownershipPercent')) {
                obj['ownershipPercent'] = Percent.constructFromObject(data['ownershipPercent']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IInvestmentAccountOwnershipData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IInvestmentAccountOwnershipData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['owner'] && !(typeof data['owner'] === 'string' || data['owner'] instanceof String)) {
            throw new Error("Expected the field `owner` to be a primitive type in the JSON string but got " + data['owner']);
        }
        // ensure the json data is a string
        if (data['ownersName'] && !(typeof data['ownersName'] === 'string' || data['ownersName'] instanceof String)) {
            throw new Error("Expected the field `ownersName` to be a primitive type in the JSON string but got " + data['ownersName']);
        }
        // validate the optional field `ownershipPercent`
        if (data['ownershipPercent']) { // data not null
          Percent.validateJSON(data['ownershipPercent']);
        }

        return true;
    }


}



/**
 * @member {module:model/IInvestmentAccountOwnershipData.OwnerEnum} owner
 */
IInvestmentAccountOwnershipData.prototype['owner'] = undefined;

/**
 * @member {String} ownersName
 */
IInvestmentAccountOwnershipData.prototype['ownersName'] = undefined;

/**
 * @member {module:model/Percent} ownershipPercent
 */
IInvestmentAccountOwnershipData.prototype['ownershipPercent'] = undefined;





/**
 * Allowed values for the <code>owner</code> property.
 * @enum {String}
 * @readonly
 */
IInvestmentAccountOwnershipData['OwnerEnum'] = {

    /**
     * value: "All"
     * @const
     */
    "All": "All",

    /**
     * value: "Head1"
     * @const
     */
    "Head1": "Head1",

    /**
     * value: "Head2"
     * @const
     */
    "Head2": "Head2",

    /**
     * value: "NonHead1"
     * @const
     */
    "NonHead1": "NonHead1",

    /**
     * value: "NonHead2"
     * @const
     */
    "NonHead2": "NonHead2",

    /**
     * value: "NonHead3"
     * @const
     */
    "NonHead3": "NonHead3",

    /**
     * value: "NonHead4"
     * @const
     */
    "NonHead4": "NonHead4",

    /**
     * value: "NonHead5"
     * @const
     */
    "NonHead5": "NonHead5",

    /**
     * value: "NonHead6"
     * @const
     */
    "NonHead6": "NonHead6",

    /**
     * value: "NonHead7"
     * @const
     */
    "NonHead7": "NonHead7",

    /**
     * value: "NonHead8"
     * @const
     */
    "NonHead8": "NonHead8",

    /**
     * value: "NonHead9"
     * @const
     */
    "NonHead9": "NonHead9",

    /**
     * value: "CommunityProperty"
     * @const
     */
    "CommunityProperty": "CommunityProperty",

    /**
     * value: "Joint"
     * @const
     */
    "Joint": "Joint",

    /**
     * value: "Other"
     * @const
     */
    "Other": "Other",

    /**
     * value: "AllDependents"
     * @const
     */
    "AllDependents": "AllDependents",

    /**
     * value: "AllFamilyMembers"
     * @const
     */
    "AllFamilyMembers": "AllFamilyMembers",

    /**
     * value: "Corporation"
     * @const
     */
    "Corporation": "Corporation"
};



export default IInvestmentAccountOwnershipData;

