/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CurrencyWithGrowth from './CurrencyWithGrowth';
import FormattedDateRange from './FormattedDateRange';
import IFormattedFrequency from './IFormattedFrequency';

/**
 * The IActivityData model module.
 * @module model/IActivityData
 * @version v1
 */
class IActivityData {
    /**
     * Constructs a new <code>IActivityData</code>.
     * @alias module:model/IActivityData
     */
    constructor() { 
        
        IActivityData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IActivityData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IActivityData} obj Optional instance to populate.
     * @return {module:model/IActivityData} The populated <code>IActivityData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IActivityData();

            if (data.hasOwnProperty('amountWithGrowth')) {
                obj['amountWithGrowth'] = CurrencyWithGrowth.constructFromObject(data['amountWithGrowth']);
            }
            if (data.hasOwnProperty('applicableDateRange')) {
                obj['applicableDateRange'] = FormattedDateRange.constructFromObject(data['applicableDateRange']);
            }
            if (data.hasOwnProperty('directTo')) {
                obj['directTo'] = ApiClient.convertToType(data['directTo'], 'String');
            }
            if (data.hasOwnProperty('frequency')) {
                obj['frequency'] = IFormattedFrequency.constructFromObject(data['frequency']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IActivityData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IActivityData</code>.
     */
    static validateJSON(data) {
        // validate the optional field `amountWithGrowth`
        if (data['amountWithGrowth']) { // data not null
          CurrencyWithGrowth.validateJSON(data['amountWithGrowth']);
        }
        // validate the optional field `applicableDateRange`
        if (data['applicableDateRange']) { // data not null
          FormattedDateRange.validateJSON(data['applicableDateRange']);
        }
        // ensure the json data is a string
        if (data['directTo'] && !(typeof data['directTo'] === 'string' || data['directTo'] instanceof String)) {
            throw new Error("Expected the field `directTo` to be a primitive type in the JSON string but got " + data['directTo']);
        }
        // validate the optional field `frequency`
        if (data['frequency']) { // data not null
          IFormattedFrequency.validateJSON(data['frequency']);
        }

        return true;
    }


}



/**
 * @member {module:model/CurrencyWithGrowth} amountWithGrowth
 */
IActivityData.prototype['amountWithGrowth'] = undefined;

/**
 * @member {module:model/FormattedDateRange} applicableDateRange
 */
IActivityData.prototype['applicableDateRange'] = undefined;

/**
 * @member {String} directTo
 */
IActivityData.prototype['directTo'] = undefined;

/**
 * @member {module:model/IFormattedFrequency} frequency
 */
IActivityData.prototype['frequency'] = undefined;






export default IActivityData;

