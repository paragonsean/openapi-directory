/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FormattedMaritalOrTaxFilingStatus from './FormattedMaritalOrTaxFilingStatus';
import IGovernmentPensions from './IGovernmentPensions';
import IIncomeTaxes from './IIncomeTaxes';
import ModelDate from './ModelDate';

/**
 * The IHeadAssumptions model module.
 * @module model/IHeadAssumptions
 * @version v1
 */
class IHeadAssumptions {
    /**
     * Constructs a new <code>IHeadAssumptions</code>.
     * @alias module:model/IHeadAssumptions
     */
    constructor() { 
        
        IHeadAssumptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IHeadAssumptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IHeadAssumptions} obj Optional instance to populate.
     * @return {module:model/IHeadAssumptions} The populated <code>IHeadAssumptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IHeadAssumptions();

            if (data.hasOwnProperty('alreadyRetired')) {
                obj['alreadyRetired'] = ApiClient.convertToType(data['alreadyRetired'], 'Boolean');
            }
            if (data.hasOwnProperty('deceasedAge')) {
                obj['deceasedAge'] = ApiClient.convertToType(data['deceasedAge'], 'Number');
            }
            if (data.hasOwnProperty('deceasedDate')) {
                obj['deceasedDate'] = ModelDate.constructFromObject(data['deceasedDate']);
            }
            if (data.hasOwnProperty('estateIncomeTaxes')) {
                obj['estateIncomeTaxes'] = IIncomeTaxes.constructFromObject(data['estateIncomeTaxes']);
            }
            if (data.hasOwnProperty('governmentPensions')) {
                obj['governmentPensions'] = IGovernmentPensions.constructFromObject(data['governmentPensions']);
            }
            if (data.hasOwnProperty('maritalOrTaxFilingStatus')) {
                obj['maritalOrTaxFilingStatus'] = FormattedMaritalOrTaxFilingStatus.constructFromObject(data['maritalOrTaxFilingStatus']);
            }
            if (data.hasOwnProperty('preRetirementIncomeTaxes')) {
                obj['preRetirementIncomeTaxes'] = IIncomeTaxes.constructFromObject(data['preRetirementIncomeTaxes']);
            }
            if (data.hasOwnProperty('retirementAge')) {
                obj['retirementAge'] = ApiClient.convertToType(data['retirementAge'], 'Number');
            }
            if (data.hasOwnProperty('retirementDate')) {
                obj['retirementDate'] = ModelDate.constructFromObject(data['retirementDate']);
            }
            if (data.hasOwnProperty('retirementIncomeTaxes')) {
                obj['retirementIncomeTaxes'] = IIncomeTaxes.constructFromObject(data['retirementIncomeTaxes']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IHeadAssumptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IHeadAssumptions</code>.
     */
    static validateJSON(data) {
        // validate the optional field `deceasedDate`
        if (data['deceasedDate']) { // data not null
          ModelDate.validateJSON(data['deceasedDate']);
        }
        // validate the optional field `estateIncomeTaxes`
        if (data['estateIncomeTaxes']) { // data not null
          IIncomeTaxes.validateJSON(data['estateIncomeTaxes']);
        }
        // validate the optional field `governmentPensions`
        if (data['governmentPensions']) { // data not null
          IGovernmentPensions.validateJSON(data['governmentPensions']);
        }
        // validate the optional field `maritalOrTaxFilingStatus`
        if (data['maritalOrTaxFilingStatus']) { // data not null
          FormattedMaritalOrTaxFilingStatus.validateJSON(data['maritalOrTaxFilingStatus']);
        }
        // validate the optional field `preRetirementIncomeTaxes`
        if (data['preRetirementIncomeTaxes']) { // data not null
          IIncomeTaxes.validateJSON(data['preRetirementIncomeTaxes']);
        }
        // validate the optional field `retirementDate`
        if (data['retirementDate']) { // data not null
          ModelDate.validateJSON(data['retirementDate']);
        }
        // validate the optional field `retirementIncomeTaxes`
        if (data['retirementIncomeTaxes']) { // data not null
          IIncomeTaxes.validateJSON(data['retirementIncomeTaxes']);
        }

        return true;
    }


}



/**
 * @member {Boolean} alreadyRetired
 */
IHeadAssumptions.prototype['alreadyRetired'] = undefined;

/**
 * @member {Number} deceasedAge
 */
IHeadAssumptions.prototype['deceasedAge'] = undefined;

/**
 * @member {module:model/ModelDate} deceasedDate
 */
IHeadAssumptions.prototype['deceasedDate'] = undefined;

/**
 * @member {module:model/IIncomeTaxes} estateIncomeTaxes
 */
IHeadAssumptions.prototype['estateIncomeTaxes'] = undefined;

/**
 * @member {module:model/IGovernmentPensions} governmentPensions
 */
IHeadAssumptions.prototype['governmentPensions'] = undefined;

/**
 * @member {module:model/FormattedMaritalOrTaxFilingStatus} maritalOrTaxFilingStatus
 */
IHeadAssumptions.prototype['maritalOrTaxFilingStatus'] = undefined;

/**
 * @member {module:model/IIncomeTaxes} preRetirementIncomeTaxes
 */
IHeadAssumptions.prototype['preRetirementIncomeTaxes'] = undefined;

/**
 * @member {Number} retirementAge
 */
IHeadAssumptions.prototype['retirementAge'] = undefined;

/**
 * @member {module:model/ModelDate} retirementDate
 */
IHeadAssumptions.prototype['retirementDate'] = undefined;

/**
 * @member {module:model/IIncomeTaxes} retirementIncomeTaxes
 */
IHeadAssumptions.prototype['retirementIncomeTaxes'] = undefined;






export default IHeadAssumptions;

