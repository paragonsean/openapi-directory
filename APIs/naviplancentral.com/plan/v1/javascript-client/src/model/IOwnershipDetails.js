/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ICommonShareClassDetails from './ICommonShareClassDetails';
import IInvestmentAccountOwnershipData from './IInvestmentAccountOwnershipData';
import IOwnershipData from './IOwnershipData';
import IPreferredShareClassDetails from './IPreferredShareClassDetails';

/**
 * The IOwnershipDetails model module.
 * @module model/IOwnershipDetails
 * @version v1
 */
class IOwnershipDetails {
    /**
     * Constructs a new <code>IOwnershipDetails</code>.
     * @alias module:model/IOwnershipDetails
     */
    constructor() { 
        
        IOwnershipDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IOwnershipDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IOwnershipDetails} obj Optional instance to populate.
     * @return {module:model/IOwnershipDetails} The populated <code>IOwnershipDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IOwnershipDetails();

            if (data.hasOwnProperty('common')) {
                obj['common'] = ApiClient.convertToType(data['common'], [IOwnershipData]);
            }
            if (data.hasOwnProperty('commonSharesDetails')) {
                obj['commonSharesDetails'] = ApiClient.convertToType(data['commonSharesDetails'], [ICommonShareClassDetails]);
            }
            if (data.hasOwnProperty('preferred')) {
                obj['preferred'] = ApiClient.convertToType(data['preferred'], [IOwnershipData]);
            }
            if (data.hasOwnProperty('preferredSharesDetails')) {
                obj['preferredSharesDetails'] = ApiClient.convertToType(data['preferredSharesDetails'], [IPreferredShareClassDetails]);
            }
            if (data.hasOwnProperty('shareholderPercentOwnership')) {
                obj['shareholderPercentOwnership'] = ApiClient.convertToType(data['shareholderPercentOwnership'], [IInvestmentAccountOwnershipData]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IOwnershipDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IOwnershipDetails</code>.
     */
    static validateJSON(data) {
        if (data['common']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['common'])) {
                throw new Error("Expected the field `common` to be an array in the JSON data but got " + data['common']);
            }
            // validate the optional field `common` (array)
            for (const item of data['common']) {
                IOwnershipData.validateJSON(item);
            };
        }
        if (data['commonSharesDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['commonSharesDetails'])) {
                throw new Error("Expected the field `commonSharesDetails` to be an array in the JSON data but got " + data['commonSharesDetails']);
            }
            // validate the optional field `commonSharesDetails` (array)
            for (const item of data['commonSharesDetails']) {
                ICommonShareClassDetails.validateJSON(item);
            };
        }
        if (data['preferred']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['preferred'])) {
                throw new Error("Expected the field `preferred` to be an array in the JSON data but got " + data['preferred']);
            }
            // validate the optional field `preferred` (array)
            for (const item of data['preferred']) {
                IOwnershipData.validateJSON(item);
            };
        }
        if (data['preferredSharesDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['preferredSharesDetails'])) {
                throw new Error("Expected the field `preferredSharesDetails` to be an array in the JSON data but got " + data['preferredSharesDetails']);
            }
            // validate the optional field `preferredSharesDetails` (array)
            for (const item of data['preferredSharesDetails']) {
                IPreferredShareClassDetails.validateJSON(item);
            };
        }
        if (data['shareholderPercentOwnership']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['shareholderPercentOwnership'])) {
                throw new Error("Expected the field `shareholderPercentOwnership` to be an array in the JSON data but got " + data['shareholderPercentOwnership']);
            }
            // validate the optional field `shareholderPercentOwnership` (array)
            for (const item of data['shareholderPercentOwnership']) {
                IInvestmentAccountOwnershipData.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/IOwnershipData>} common
 */
IOwnershipDetails.prototype['common'] = undefined;

/**
 * @member {Array.<module:model/ICommonShareClassDetails>} commonSharesDetails
 */
IOwnershipDetails.prototype['commonSharesDetails'] = undefined;

/**
 * @member {Array.<module:model/IOwnershipData>} preferred
 */
IOwnershipDetails.prototype['preferred'] = undefined;

/**
 * @member {Array.<module:model/IPreferredShareClassDetails>} preferredSharesDetails
 */
IOwnershipDetails.prototype['preferredSharesDetails'] = undefined;

/**
 * @member {Array.<module:model/IInvestmentAccountOwnershipData>} shareholderPercentOwnership
 */
IOwnershipDetails.prototype['shareholderPercentOwnership'] = undefined;






export default IOwnershipDetails;

