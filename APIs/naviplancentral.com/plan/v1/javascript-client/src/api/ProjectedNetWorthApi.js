/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import NetWorthProjectionModel from '../model/NetWorthProjectionModel';
import NetWorthProjectionsModel from '../model/NetWorthProjectionsModel';

/**
* ProjectedNetWorth service.
* @module api/ProjectedNetWorthApi
* @version v1
*/
export default class ProjectedNetWorthApi {

    /**
    * Constructs a new ProjectedNetWorthApi. 
    * @alias module:api/ProjectedNetWorthApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the projectedNetWorthGetByIdPlanid operation.
     * @callback module:api/ProjectedNetWorthApi~projectedNetWorthGetByIdPlanidCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NetWorthProjectionModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve projected net worth by id
     * This operation retrieves an object containing net worth information                 for a single specified year of the projected plan. These are EOY numbers.
     * @param {Number} id Index into the list of annual projections
     * @param {String} planId Id of the plan to retrieve data from (e.g. 1001-11-3).
     * @param {module:api/ProjectedNetWorthApi~projectedNetWorthGetByIdPlanidCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NetWorthProjectionModel}
     */
    projectedNetWorthGetByIdPlanid(id, planId, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling projectedNetWorthGetByIdPlanid");
      }
      // verify the required parameter 'planId' is set
      if (planId === undefined || planId === null) {
        throw new Error("Missing the required parameter 'planId' when calling projectedNetWorthGetByIdPlanid");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'planId': planId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = NetWorthProjectionModel;
      return this.apiClient.callApi(
        '/api/ProjectedNetWorth/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the projectedNetWorthGetByPlanid operation.
     * @callback module:api/ProjectedNetWorthApi~projectedNetWorthGetByPlanidCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NetWorthProjectionsModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve projected net worth
     * This operation retrieves an object containing net worth information                 for each year of the projected plan. These are EOY numbers.
     * @param {String} planId Id of the plan to retrieve data from (e.g. 1001-11-3).
     * @param {module:api/ProjectedNetWorthApi~projectedNetWorthGetByPlanidCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NetWorthProjectionsModel}
     */
    projectedNetWorthGetByPlanid(planId, callback) {
      let postBody = null;
      // verify the required parameter 'planId' is set
      if (planId === undefined || planId === null) {
        throw new Error("Missing the required parameter 'planId' when calling projectedNetWorthGetByPlanid");
      }

      let pathParams = {
      };
      let queryParams = {
        'planId': planId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = NetWorthProjectionsModel;
      return this.apiClient.callApi(
        '/api/ProjectedNetWorth', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
