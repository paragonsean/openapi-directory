/**
 * NaviPlan API
 * An API for accessing NaviPlan plan data for a client.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AssetsFundingGoalModel from '../model/AssetsFundingGoalModel';
import NeedsVsAbilitiesModel from '../model/NeedsVsAbilitiesModel';

/**
* ProjectedGoals service.
* @module api/ProjectedGoalsApi
* @version v1
*/
export default class ProjectedGoalsApi {

    /**
    * Constructs a new ProjectedGoalsApi. 
    * @alias module:api/ProjectedGoalsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the projectedGoalsGetAssetsFundingGoalsByPlanid operation.
     * @callback module:api/ProjectedGoalsApi~projectedGoalsGetAssetsFundingGoalsByPlanidCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AssetsFundingGoalModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve assets funding goals over time
     * This operation retrieves the assets funding each goal throughout the plan years
     * @param {String} planId Id of the plan to retrieve data from (e.g. 1001-11-3).
     * @param {module:api/ProjectedGoalsApi~projectedGoalsGetAssetsFundingGoalsByPlanidCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AssetsFundingGoalModel}
     */
    projectedGoalsGetAssetsFundingGoalsByPlanid(planId, callback) {
      let postBody = null;
      // verify the required parameter 'planId' is set
      if (planId === undefined || planId === null) {
        throw new Error("Missing the required parameter 'planId' when calling projectedGoalsGetAssetsFundingGoalsByPlanid");
      }

      let pathParams = {
      };
      let queryParams = {
        'planId': planId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = AssetsFundingGoalModel;
      return this.apiClient.callApi(
        '/api/ProjectedGoals/AssetsFundingGoals', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the projectedGoalsGetNeedsVsAbilitiesByPlanid operation.
     * @callback module:api/ProjectedGoalsApi~projectedGoalsGetNeedsVsAbilitiesByPlanidCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NeedsVsAbilitiesModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve needs vs abilities data
     * This operation retrieves a needs and abilities data for all goals throughout                the plan years.
     * @param {String} planId Id of the plan to retrieve data from (e.g. 1001-11-3).
     * @param {module:api/ProjectedGoalsApi~projectedGoalsGetNeedsVsAbilitiesByPlanidCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NeedsVsAbilitiesModel}
     */
    projectedGoalsGetNeedsVsAbilitiesByPlanid(planId, callback) {
      let postBody = null;
      // verify the required parameter 'planId' is set
      if (planId === undefined || planId === null) {
        throw new Error("Missing the required parameter 'planId' when calling projectedGoalsGetNeedsVsAbilitiesByPlanid");
      }

      let pathParams = {
      };
      let queryParams = {
        'planId': planId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = NeedsVsAbilitiesModel;
      return this.apiClient.callApi(
        '/api/ProjectedGoals/NeedsVsAbilities', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
