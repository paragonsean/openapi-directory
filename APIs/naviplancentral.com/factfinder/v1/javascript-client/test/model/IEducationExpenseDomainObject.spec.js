/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AdvicentFactFinderService);
  }
}(this, function(expect, AdvicentFactFinderService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AdvicentFactFinderService.IEducationExpenseDomainObject();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('IEducationExpenseDomainObject', function() {
    it('should create an instance of IEducationExpenseDomainObject', function() {
      // uncomment below and update the code to test IEducationExpenseDomainObject
      //var instance = new AdvicentFactFinderService.IEducationExpenseDomainObject();
      //expect(instance).to.be.a(AdvicentFactFinderService.IEducationExpenseDomainObject);
    });

    it('should have the property annualCost (base name: "annualCost")', function() {
      // uncomment below and update the code to test the property annualCost
      //var instance = new AdvicentFactFinderService.IEducationExpenseDomainObject();
      //expect(instance).to.be();
    });

    it('should have the property educationExpenseId (base name: "educationExpenseId")', function() {
      // uncomment below and update the code to test the property educationExpenseId
      //var instance = new AdvicentFactFinderService.IEducationExpenseDomainObject();
      //expect(instance).to.be();
    });

    it('should have the property educationGoalId (base name: "educationGoalId")', function() {
      // uncomment below and update the code to test the property educationGoalId
      //var instance = new AdvicentFactFinderService.IEducationExpenseDomainObject();
      //expect(instance).to.be();
    });

    it('should have the property externalDestinationId (base name: "externalDestinationId")', function() {
      // uncomment below and update the code to test the property externalDestinationId
      //var instance = new AdvicentFactFinderService.IEducationExpenseDomainObject();
      //expect(instance).to.be();
    });

    it('should have the property member (base name: "member")', function() {
      // uncomment below and update the code to test the property member
      //var instance = new AdvicentFactFinderService.IEducationExpenseDomainObject();
      //expect(instance).to.be();
    });

    it('should have the property memberDependentId (base name: "memberDependentId")', function() {
      // uncomment below and update the code to test the property memberDependentId
      //var instance = new AdvicentFactFinderService.IEducationExpenseDomainObject();
      //expect(instance).to.be();
    });

    it('should have the property startYear (base name: "startYear")', function() {
      // uncomment below and update the code to test the property startYear
      //var instance = new AdvicentFactFinderService.IEducationExpenseDomainObject();
      //expect(instance).to.be();
    });

    it('should have the property years (base name: "years")', function() {
      // uncomment below and update the code to test the property years
      //var instance = new AdvicentFactFinderService.IEducationExpenseDomainObject();
      //expect(instance).to.be();
    });

  });

}));
