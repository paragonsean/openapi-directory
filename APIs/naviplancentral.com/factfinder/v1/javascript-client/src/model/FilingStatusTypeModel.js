/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ObjectLink from './ObjectLink';

/**
 * The FilingStatusTypeModel model module.
 * @module model/FilingStatusTypeModel
 * @version v1
 */
class FilingStatusTypeModel {
    /**
     * Constructs a new <code>FilingStatusTypeModel</code>.
     * @alias module:model/FilingStatusTypeModel
     */
    constructor() { 
        
        FilingStatusTypeModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FilingStatusTypeModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FilingStatusTypeModel} obj Optional instance to populate.
     * @return {module:model/FilingStatusTypeModel} The populated <code>FilingStatusTypeModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FilingStatusTypeModel();

            if (data.hasOwnProperty('filingStatusTypeId')) {
                obj['filingStatusTypeId'] = ApiClient.convertToType(data['filingStatusTypeId'], 'Number');
            }
            if (data.hasOwnProperty('filingStatusTypeName')) {
                obj['filingStatusTypeName'] = ApiClient.convertToType(data['filingStatusTypeName'], 'String');
            }
            if (data.hasOwnProperty('hasJointDependent')) {
                obj['hasJointDependent'] = ApiClient.convertToType(data['hasJointDependent'], 'Boolean');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], [ObjectLink]);
            }
            if (data.hasOwnProperty('partnerStatuses')) {
                obj['partnerStatuses'] = ApiClient.convertToType(data['partnerStatuses'], ['Number']);
            }
            if (data.hasOwnProperty('validForSingleAnalysis')) {
                obj['validForSingleAnalysis'] = ApiClient.convertToType(data['validForSingleAnalysis'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FilingStatusTypeModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FilingStatusTypeModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['filingStatusTypeName'] && !(typeof data['filingStatusTypeName'] === 'string' || data['filingStatusTypeName'] instanceof String)) {
            throw new Error("Expected the field `filingStatusTypeName` to be a primitive type in the JSON string but got " + data['filingStatusTypeName']);
        }
        if (data['links']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['links'])) {
                throw new Error("Expected the field `links` to be an array in the JSON data but got " + data['links']);
            }
            // validate the optional field `links` (array)
            for (const item of data['links']) {
                ObjectLink.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['partnerStatuses'])) {
            throw new Error("Expected the field `partnerStatuses` to be an array in the JSON data but got " + data['partnerStatuses']);
        }

        return true;
    }


}



/**
 * @member {Number} filingStatusTypeId
 */
FilingStatusTypeModel.prototype['filingStatusTypeId'] = undefined;

/**
 * @member {String} filingStatusTypeName
 */
FilingStatusTypeModel.prototype['filingStatusTypeName'] = undefined;

/**
 * @member {Boolean} hasJointDependent
 */
FilingStatusTypeModel.prototype['hasJointDependent'] = undefined;

/**
 * @member {Array.<module:model/ObjectLink>} links
 */
FilingStatusTypeModel.prototype['links'] = undefined;

/**
 * @member {Array.<Number>} partnerStatuses
 */
FilingStatusTypeModel.prototype['partnerStatuses'] = undefined;

/**
 * @member {Boolean} validForSingleAnalysis
 */
FilingStatusTypeModel.prototype['validForSingleAnalysis'] = undefined;






export default FilingStatusTypeModel;

