/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IAccountWithSubEntitiesDomainObject from './IAccountWithSubEntitiesDomainObject';
import ICriticalIllnessInsurancePolicyDomainObject from './ICriticalIllnessInsurancePolicyDomainObject';
import IDemographicsWithDependentsDomainObject from './IDemographicsWithDependentsDomainObject';
import IDisabilityInsurancePolicyDomainObject from './IDisabilityInsurancePolicyDomainObject';
import IEducationGoalWithExpensesDomainObject from './IEducationGoalWithExpensesDomainObject';
import IExpenseDomainObject from './IExpenseDomainObject';
import IFactFinderDefinedBenefitPensionDomainObject from './IFactFinderDefinedBenefitPensionDomainObject';
import IFactFinderLiabilityDomainObject from './IFactFinderLiabilityDomainObject';
import IFactFinderLifestyleAssetDomainObject from './IFactFinderLifestyleAssetDomainObject';
import IIncomeDomainObject from './IIncomeDomainObject';
import ILifeInsurancePolicyDomainObject from './ILifeInsurancePolicyDomainObject';
import ILongTermCareInsurancePolicyDomainObject from './ILongTermCareInsurancePolicyDomainObject';
import IMajorPurchaseGoalDomainObject from './IMajorPurchaseGoalDomainObject';
import IRealEstateAssetDomainObject from './IRealEstateAssetDomainObject';
import IRetirementGoalWithExpensesDomainObject from './IRetirementGoalWithExpensesDomainObject';

/**
 * The IFactFinderSnapshotDomainObject model module.
 * @module model/IFactFinderSnapshotDomainObject
 * @version v1
 */
class IFactFinderSnapshotDomainObject {
    /**
     * Constructs a new <code>IFactFinderSnapshotDomainObject</code>.
     * @alias module:model/IFactFinderSnapshotDomainObject
     */
    constructor() { 
        
        IFactFinderSnapshotDomainObject.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IFactFinderSnapshotDomainObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IFactFinderSnapshotDomainObject} obj Optional instance to populate.
     * @return {module:model/IFactFinderSnapshotDomainObject} The populated <code>IFactFinderSnapshotDomainObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IFactFinderSnapshotDomainObject();

            if (data.hasOwnProperty('accounts')) {
                obj['accounts'] = ApiClient.convertToType(data['accounts'], [IAccountWithSubEntitiesDomainObject]);
            }
            if (data.hasOwnProperty('criticalIllnessInsurancePolicies')) {
                obj['criticalIllnessInsurancePolicies'] = ApiClient.convertToType(data['criticalIllnessInsurancePolicies'], [ICriticalIllnessInsurancePolicyDomainObject]);
            }
            if (data.hasOwnProperty('definedBenefitPensions')) {
                obj['definedBenefitPensions'] = ApiClient.convertToType(data['definedBenefitPensions'], [IFactFinderDefinedBenefitPensionDomainObject]);
            }
            if (data.hasOwnProperty('demographics')) {
                obj['demographics'] = IDemographicsWithDependentsDomainObject.constructFromObject(data['demographics']);
            }
            if (data.hasOwnProperty('disabilityInsurancePolicies')) {
                obj['disabilityInsurancePolicies'] = ApiClient.convertToType(data['disabilityInsurancePolicies'], [IDisabilityInsurancePolicyDomainObject]);
            }
            if (data.hasOwnProperty('educationGoals')) {
                obj['educationGoals'] = ApiClient.convertToType(data['educationGoals'], [IEducationGoalWithExpensesDomainObject]);
            }
            if (data.hasOwnProperty('expenses')) {
                obj['expenses'] = ApiClient.convertToType(data['expenses'], [IExpenseDomainObject]);
            }
            if (data.hasOwnProperty('incomes')) {
                obj['incomes'] = ApiClient.convertToType(data['incomes'], [IIncomeDomainObject]);
            }
            if (data.hasOwnProperty('liabilities')) {
                obj['liabilities'] = ApiClient.convertToType(data['liabilities'], [IFactFinderLiabilityDomainObject]);
            }
            if (data.hasOwnProperty('lifeInsurancePolicies')) {
                obj['lifeInsurancePolicies'] = ApiClient.convertToType(data['lifeInsurancePolicies'], [ILifeInsurancePolicyDomainObject]);
            }
            if (data.hasOwnProperty('lifestyleAssets')) {
                obj['lifestyleAssets'] = ApiClient.convertToType(data['lifestyleAssets'], [IFactFinderLifestyleAssetDomainObject]);
            }
            if (data.hasOwnProperty('longTermCareInsurancePolicies')) {
                obj['longTermCareInsurancePolicies'] = ApiClient.convertToType(data['longTermCareInsurancePolicies'], [ILongTermCareInsurancePolicyDomainObject]);
            }
            if (data.hasOwnProperty('majorPurchaseGoals')) {
                obj['majorPurchaseGoals'] = ApiClient.convertToType(data['majorPurchaseGoals'], [IMajorPurchaseGoalDomainObject]);
            }
            if (data.hasOwnProperty('planYear')) {
                obj['planYear'] = ApiClient.convertToType(data['planYear'], 'Number');
            }
            if (data.hasOwnProperty('realEstateAssets')) {
                obj['realEstateAssets'] = ApiClient.convertToType(data['realEstateAssets'], [IRealEstateAssetDomainObject]);
            }
            if (data.hasOwnProperty('retirementGoal')) {
                obj['retirementGoal'] = IRetirementGoalWithExpensesDomainObject.constructFromObject(data['retirementGoal']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IFactFinderSnapshotDomainObject</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IFactFinderSnapshotDomainObject</code>.
     */
    static validateJSON(data) {
        if (data['accounts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['accounts'])) {
                throw new Error("Expected the field `accounts` to be an array in the JSON data but got " + data['accounts']);
            }
            // validate the optional field `accounts` (array)
            for (const item of data['accounts']) {
                IAccountWithSubEntitiesDomainObject.validateJSON(item);
            };
        }
        if (data['criticalIllnessInsurancePolicies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['criticalIllnessInsurancePolicies'])) {
                throw new Error("Expected the field `criticalIllnessInsurancePolicies` to be an array in the JSON data but got " + data['criticalIllnessInsurancePolicies']);
            }
            // validate the optional field `criticalIllnessInsurancePolicies` (array)
            for (const item of data['criticalIllnessInsurancePolicies']) {
                ICriticalIllnessInsurancePolicyDomainObject.validateJSON(item);
            };
        }
        if (data['definedBenefitPensions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['definedBenefitPensions'])) {
                throw new Error("Expected the field `definedBenefitPensions` to be an array in the JSON data but got " + data['definedBenefitPensions']);
            }
            // validate the optional field `definedBenefitPensions` (array)
            for (const item of data['definedBenefitPensions']) {
                IFactFinderDefinedBenefitPensionDomainObject.validateJSON(item);
            };
        }
        // validate the optional field `demographics`
        if (data['demographics']) { // data not null
          IDemographicsWithDependentsDomainObject.validateJSON(data['demographics']);
        }
        if (data['disabilityInsurancePolicies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['disabilityInsurancePolicies'])) {
                throw new Error("Expected the field `disabilityInsurancePolicies` to be an array in the JSON data but got " + data['disabilityInsurancePolicies']);
            }
            // validate the optional field `disabilityInsurancePolicies` (array)
            for (const item of data['disabilityInsurancePolicies']) {
                IDisabilityInsurancePolicyDomainObject.validateJSON(item);
            };
        }
        if (data['educationGoals']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['educationGoals'])) {
                throw new Error("Expected the field `educationGoals` to be an array in the JSON data but got " + data['educationGoals']);
            }
            // validate the optional field `educationGoals` (array)
            for (const item of data['educationGoals']) {
                IEducationGoalWithExpensesDomainObject.validateJSON(item);
            };
        }
        if (data['expenses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['expenses'])) {
                throw new Error("Expected the field `expenses` to be an array in the JSON data but got " + data['expenses']);
            }
            // validate the optional field `expenses` (array)
            for (const item of data['expenses']) {
                IExpenseDomainObject.validateJSON(item);
            };
        }
        if (data['incomes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['incomes'])) {
                throw new Error("Expected the field `incomes` to be an array in the JSON data but got " + data['incomes']);
            }
            // validate the optional field `incomes` (array)
            for (const item of data['incomes']) {
                IIncomeDomainObject.validateJSON(item);
            };
        }
        if (data['liabilities']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['liabilities'])) {
                throw new Error("Expected the field `liabilities` to be an array in the JSON data but got " + data['liabilities']);
            }
            // validate the optional field `liabilities` (array)
            for (const item of data['liabilities']) {
                IFactFinderLiabilityDomainObject.validateJSON(item);
            };
        }
        if (data['lifeInsurancePolicies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['lifeInsurancePolicies'])) {
                throw new Error("Expected the field `lifeInsurancePolicies` to be an array in the JSON data but got " + data['lifeInsurancePolicies']);
            }
            // validate the optional field `lifeInsurancePolicies` (array)
            for (const item of data['lifeInsurancePolicies']) {
                ILifeInsurancePolicyDomainObject.validateJSON(item);
            };
        }
        if (data['lifestyleAssets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['lifestyleAssets'])) {
                throw new Error("Expected the field `lifestyleAssets` to be an array in the JSON data but got " + data['lifestyleAssets']);
            }
            // validate the optional field `lifestyleAssets` (array)
            for (const item of data['lifestyleAssets']) {
                IFactFinderLifestyleAssetDomainObject.validateJSON(item);
            };
        }
        if (data['longTermCareInsurancePolicies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['longTermCareInsurancePolicies'])) {
                throw new Error("Expected the field `longTermCareInsurancePolicies` to be an array in the JSON data but got " + data['longTermCareInsurancePolicies']);
            }
            // validate the optional field `longTermCareInsurancePolicies` (array)
            for (const item of data['longTermCareInsurancePolicies']) {
                ILongTermCareInsurancePolicyDomainObject.validateJSON(item);
            };
        }
        if (data['majorPurchaseGoals']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['majorPurchaseGoals'])) {
                throw new Error("Expected the field `majorPurchaseGoals` to be an array in the JSON data but got " + data['majorPurchaseGoals']);
            }
            // validate the optional field `majorPurchaseGoals` (array)
            for (const item of data['majorPurchaseGoals']) {
                IMajorPurchaseGoalDomainObject.validateJSON(item);
            };
        }
        if (data['realEstateAssets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['realEstateAssets'])) {
                throw new Error("Expected the field `realEstateAssets` to be an array in the JSON data but got " + data['realEstateAssets']);
            }
            // validate the optional field `realEstateAssets` (array)
            for (const item of data['realEstateAssets']) {
                IRealEstateAssetDomainObject.validateJSON(item);
            };
        }
        // validate the optional field `retirementGoal`
        if (data['retirementGoal']) { // data not null
          IRetirementGoalWithExpensesDomainObject.validateJSON(data['retirementGoal']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/IAccountWithSubEntitiesDomainObject>} accounts
 */
IFactFinderSnapshotDomainObject.prototype['accounts'] = undefined;

/**
 * @member {Array.<module:model/ICriticalIllnessInsurancePolicyDomainObject>} criticalIllnessInsurancePolicies
 */
IFactFinderSnapshotDomainObject.prototype['criticalIllnessInsurancePolicies'] = undefined;

/**
 * @member {Array.<module:model/IFactFinderDefinedBenefitPensionDomainObject>} definedBenefitPensions
 */
IFactFinderSnapshotDomainObject.prototype['definedBenefitPensions'] = undefined;

/**
 * @member {module:model/IDemographicsWithDependentsDomainObject} demographics
 */
IFactFinderSnapshotDomainObject.prototype['demographics'] = undefined;

/**
 * @member {Array.<module:model/IDisabilityInsurancePolicyDomainObject>} disabilityInsurancePolicies
 */
IFactFinderSnapshotDomainObject.prototype['disabilityInsurancePolicies'] = undefined;

/**
 * @member {Array.<module:model/IEducationGoalWithExpensesDomainObject>} educationGoals
 */
IFactFinderSnapshotDomainObject.prototype['educationGoals'] = undefined;

/**
 * @member {Array.<module:model/IExpenseDomainObject>} expenses
 */
IFactFinderSnapshotDomainObject.prototype['expenses'] = undefined;

/**
 * @member {Array.<module:model/IIncomeDomainObject>} incomes
 */
IFactFinderSnapshotDomainObject.prototype['incomes'] = undefined;

/**
 * @member {Array.<module:model/IFactFinderLiabilityDomainObject>} liabilities
 */
IFactFinderSnapshotDomainObject.prototype['liabilities'] = undefined;

/**
 * @member {Array.<module:model/ILifeInsurancePolicyDomainObject>} lifeInsurancePolicies
 */
IFactFinderSnapshotDomainObject.prototype['lifeInsurancePolicies'] = undefined;

/**
 * @member {Array.<module:model/IFactFinderLifestyleAssetDomainObject>} lifestyleAssets
 */
IFactFinderSnapshotDomainObject.prototype['lifestyleAssets'] = undefined;

/**
 * @member {Array.<module:model/ILongTermCareInsurancePolicyDomainObject>} longTermCareInsurancePolicies
 */
IFactFinderSnapshotDomainObject.prototype['longTermCareInsurancePolicies'] = undefined;

/**
 * @member {Array.<module:model/IMajorPurchaseGoalDomainObject>} majorPurchaseGoals
 */
IFactFinderSnapshotDomainObject.prototype['majorPurchaseGoals'] = undefined;

/**
 * @member {Number} planYear
 */
IFactFinderSnapshotDomainObject.prototype['planYear'] = undefined;

/**
 * @member {Array.<module:model/IRealEstateAssetDomainObject>} realEstateAssets
 */
IFactFinderSnapshotDomainObject.prototype['realEstateAssets'] = undefined;

/**
 * @member {module:model/IRetirementGoalWithExpensesDomainObject} retirementGoal
 */
IFactFinderSnapshotDomainObject.prototype['retirementGoal'] = undefined;






export default IFactFinderSnapshotDomainObject;

