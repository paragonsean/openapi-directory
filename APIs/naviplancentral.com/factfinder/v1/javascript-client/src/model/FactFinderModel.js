/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FactFinderModel model module.
 * @module model/FactFinderModel
 * @version v1
 */
class FactFinderModel {
    /**
     * Constructs a new <code>FactFinderModel</code>.
     * @alias module:model/FactFinderModel
     */
    constructor() { 
        
        FactFinderModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FactFinderModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FactFinderModel} obj Optional instance to populate.
     * @return {module:model/FactFinderModel} The populated <code>FactFinderModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FactFinderModel();

            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FactFinderModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FactFinderModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * @member {module:model/FactFinderModel.StatusEnum} status
 */
FactFinderModel.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
FactFinderModel['StatusEnum'] = {

    /**
     * value: "New"
     * @const
     */
    "New": "New",

    /**
     * value: "InProgress"
     * @const
     */
    "InProgress": "InProgress",

    /**
     * value: "ClientSubmitted"
     * @const
     */
    "ClientSubmitted": "ClientSubmitted",

    /**
     * value: "AdvisorAccepted"
     * @const
     */
    "AdvisorAccepted": "AdvisorAccepted",

    /**
     * value: "Canceled"
     * @const
     */
    "Canceled": "Canceled",

    /**
     * value: "Draft"
     * @const
     */
    "Draft": "Draft",

    /**
     * value: "Deleted"
     * @const
     */
    "Deleted": "Deleted"
};



export default FactFinderModel;

