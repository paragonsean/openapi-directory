/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AccountHoldingModel model module.
 * @module model/AccountHoldingModel
 * @version v1
 */
class AccountHoldingModel {
    /**
     * Constructs a new <code>AccountHoldingModel</code>.
     * @alias module:model/AccountHoldingModel
     * @param description {String} 
     */
    constructor(description) { 
        
        AccountHoldingModel.initialize(this, description);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, description) { 
        obj['description'] = description;
    }

    /**
     * Constructs a <code>AccountHoldingModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccountHoldingModel} obj Optional instance to populate.
     * @return {module:model/AccountHoldingModel} The populated <code>AccountHoldingModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccountHoldingModel();

            if (data.hasOwnProperty('costBasis')) {
                obj['costBasis'] = ApiClient.convertToType(data['costBasis'], 'Number');
            }
            if (data.hasOwnProperty('cusip')) {
                obj['cusip'] = ApiClient.convertToType(data['cusip'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('externalDestinationId')) {
                obj['externalDestinationId'] = ApiClient.convertToType(data['externalDestinationId'], 'String');
            }
            if (data.hasOwnProperty('marketValue')) {
                obj['marketValue'] = ApiClient.convertToType(data['marketValue'], 'Number');
            }
            if (data.hasOwnProperty('symbol')) {
                obj['symbol'] = ApiClient.convertToType(data['symbol'], 'String');
            }
            if (data.hasOwnProperty('valuationDate')) {
                obj['valuationDate'] = ApiClient.convertToType(data['valuationDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccountHoldingModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccountHoldingModel</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AccountHoldingModel.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['cusip'] && !(typeof data['cusip'] === 'string' || data['cusip'] instanceof String)) {
            throw new Error("Expected the field `cusip` to be a primitive type in the JSON string but got " + data['cusip']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['externalDestinationId'] && !(typeof data['externalDestinationId'] === 'string' || data['externalDestinationId'] instanceof String)) {
            throw new Error("Expected the field `externalDestinationId` to be a primitive type in the JSON string but got " + data['externalDestinationId']);
        }
        // ensure the json data is a string
        if (data['symbol'] && !(typeof data['symbol'] === 'string' || data['symbol'] instanceof String)) {
            throw new Error("Expected the field `symbol` to be a primitive type in the JSON string but got " + data['symbol']);
        }

        return true;
    }


}

AccountHoldingModel.RequiredProperties = ["description"];

/**
 * @member {Number} costBasis
 */
AccountHoldingModel.prototype['costBasis'] = undefined;

/**
 * @member {String} cusip
 */
AccountHoldingModel.prototype['cusip'] = undefined;

/**
 * @member {String} description
 */
AccountHoldingModel.prototype['description'] = undefined;

/**
 * @member {String} externalDestinationId
 */
AccountHoldingModel.prototype['externalDestinationId'] = undefined;

/**
 * @member {Number} marketValue
 */
AccountHoldingModel.prototype['marketValue'] = undefined;

/**
 * @member {String} symbol
 */
AccountHoldingModel.prototype['symbol'] = undefined;

/**
 * @member {Date} valuationDate
 */
AccountHoldingModel.prototype['valuationDate'] = undefined;






export default AccountHoldingModel;

