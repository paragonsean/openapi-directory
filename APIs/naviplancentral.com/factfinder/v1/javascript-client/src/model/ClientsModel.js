/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ClientsModel model module.
 * @module model/ClientsModel
 * @version v1
 */
class ClientsModel {
    /**
     * Constructs a new <code>ClientsModel</code>.
     * @alias module:model/ClientsModel
     * @param factFinderId {Number} 
     * @param planAction {module:model/ClientsModel.PlanActionEnum} 
     */
    constructor(factFinderId, planAction) { 
        
        ClientsModel.initialize(this, factFinderId, planAction);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, factFinderId, planAction) { 
        obj['factFinderId'] = factFinderId;
        obj['planAction'] = planAction;
    }

    /**
     * Constructs a <code>ClientsModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClientsModel} obj Optional instance to populate.
     * @return {module:model/ClientsModel} The populated <code>ClientsModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClientsModel();

            if (data.hasOwnProperty('externalDestinationName')) {
                obj['externalDestinationName'] = ApiClient.convertToType(data['externalDestinationName'], 'String');
            }
            if (data.hasOwnProperty('factFinderId')) {
                obj['factFinderId'] = ApiClient.convertToType(data['factFinderId'], 'Number');
            }
            if (data.hasOwnProperty('planAction')) {
                obj['planAction'] = ApiClient.convertToType(data['planAction'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClientsModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClientsModel</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ClientsModel.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['externalDestinationName'] && !(typeof data['externalDestinationName'] === 'string' || data['externalDestinationName'] instanceof String)) {
            throw new Error("Expected the field `externalDestinationName` to be a primitive type in the JSON string but got " + data['externalDestinationName']);
        }
        // ensure the json data is a string
        if (data['planAction'] && !(typeof data['planAction'] === 'string' || data['planAction'] instanceof String)) {
            throw new Error("Expected the field `planAction` to be a primitive type in the JSON string but got " + data['planAction']);
        }

        return true;
    }


}

ClientsModel.RequiredProperties = ["factFinderId", "planAction"];

/**
 * @member {String} externalDestinationName
 */
ClientsModel.prototype['externalDestinationName'] = undefined;

/**
 * @member {Number} factFinderId
 */
ClientsModel.prototype['factFinderId'] = undefined;

/**
 * @member {module:model/ClientsModel.PlanActionEnum} planAction
 */
ClientsModel.prototype['planAction'] = undefined;





/**
 * Allowed values for the <code>planAction</code> property.
 * @enum {String}
 * @readonly
 */
ClientsModel['PlanActionEnum'] = {

    /**
     * value: "New"
     * @const
     */
    "New": "New",

    /**
     * value: "Duplicate"
     * @const
     */
    "Duplicate": "Duplicate",

    /**
     * value: "Project"
     * @const
     */
    "Project": "Project",

    /**
     * value: "Update"
     * @const
     */
    "Update": "Update"
};



export default ClientsModel;

