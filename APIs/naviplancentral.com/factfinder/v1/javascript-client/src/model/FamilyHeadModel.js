/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FamilyHeadModel model module.
 * @module model/FamilyHeadModel
 * @version v1
 */
class FamilyHeadModel {
    /**
     * Constructs a new <code>FamilyHeadModel</code>.
     * @alias module:model/FamilyHeadModel
     * @param alreadyRetired {Boolean} 
     * @param birthDate {Date} 
     * @param firstName {String} 
     * @param gender {module:model/FamilyHeadModel.GenderEnum} 
     * @param lastName {String} 
     * @param taxFilingStatus {Number} 
     */
    constructor(alreadyRetired, birthDate, firstName, gender, lastName, taxFilingStatus) { 
        
        FamilyHeadModel.initialize(this, alreadyRetired, birthDate, firstName, gender, lastName, taxFilingStatus);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, alreadyRetired, birthDate, firstName, gender, lastName, taxFilingStatus) { 
        obj['alreadyRetired'] = alreadyRetired;
        obj['birthDate'] = birthDate;
        obj['firstName'] = firstName;
        obj['gender'] = gender;
        obj['lastName'] = lastName;
        obj['taxFilingStatus'] = taxFilingStatus;
    }

    /**
     * Constructs a <code>FamilyHeadModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FamilyHeadModel} obj Optional instance to populate.
     * @return {module:model/FamilyHeadModel} The populated <code>FamilyHeadModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FamilyHeadModel();

            if (data.hasOwnProperty('alreadyRetired')) {
                obj['alreadyRetired'] = ApiClient.convertToType(data['alreadyRetired'], 'Boolean');
            }
            if (data.hasOwnProperty('birthDate')) {
                obj['birthDate'] = ApiClient.convertToType(data['birthDate'], 'Date');
            }
            if (data.hasOwnProperty('externalDestinationId')) {
                obj['externalDestinationId'] = ApiClient.convertToType(data['externalDestinationId'], 'String');
            }
            if (data.hasOwnProperty('firstName')) {
                obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
            }
            if (data.hasOwnProperty('gender')) {
                obj['gender'] = ApiClient.convertToType(data['gender'], 'String');
            }
            if (data.hasOwnProperty('lastName')) {
                obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
            }
            if (data.hasOwnProperty('taxFilingStatus')) {
                obj['taxFilingStatus'] = ApiClient.convertToType(data['taxFilingStatus'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FamilyHeadModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FamilyHeadModel</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FamilyHeadModel.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['externalDestinationId'] && !(typeof data['externalDestinationId'] === 'string' || data['externalDestinationId'] instanceof String)) {
            throw new Error("Expected the field `externalDestinationId` to be a primitive type in the JSON string but got " + data['externalDestinationId']);
        }
        // ensure the json data is a string
        if (data['firstName'] && !(typeof data['firstName'] === 'string' || data['firstName'] instanceof String)) {
            throw new Error("Expected the field `firstName` to be a primitive type in the JSON string but got " + data['firstName']);
        }
        // ensure the json data is a string
        if (data['gender'] && !(typeof data['gender'] === 'string' || data['gender'] instanceof String)) {
            throw new Error("Expected the field `gender` to be a primitive type in the JSON string but got " + data['gender']);
        }
        // ensure the json data is a string
        if (data['lastName'] && !(typeof data['lastName'] === 'string' || data['lastName'] instanceof String)) {
            throw new Error("Expected the field `lastName` to be a primitive type in the JSON string but got " + data['lastName']);
        }

        return true;
    }


}

FamilyHeadModel.RequiredProperties = ["alreadyRetired", "birthDate", "firstName", "gender", "lastName", "taxFilingStatus"];

/**
 * @member {Boolean} alreadyRetired
 */
FamilyHeadModel.prototype['alreadyRetired'] = undefined;

/**
 * @member {Date} birthDate
 */
FamilyHeadModel.prototype['birthDate'] = undefined;

/**
 * @member {String} externalDestinationId
 */
FamilyHeadModel.prototype['externalDestinationId'] = undefined;

/**
 * @member {String} firstName
 */
FamilyHeadModel.prototype['firstName'] = undefined;

/**
 * @member {module:model/FamilyHeadModel.GenderEnum} gender
 */
FamilyHeadModel.prototype['gender'] = undefined;

/**
 * @member {String} lastName
 */
FamilyHeadModel.prototype['lastName'] = undefined;

/**
 * @member {Number} taxFilingStatus
 */
FamilyHeadModel.prototype['taxFilingStatus'] = undefined;





/**
 * Allowed values for the <code>gender</code> property.
 * @enum {String}
 * @readonly
 */
FamilyHeadModel['GenderEnum'] = {

    /**
     * value: "Male"
     * @const
     */
    "Male": "Male",

    /**
     * value: "Female"
     * @const
     */
    "Female": "Female",

    /**
     * value: "None"
     * @const
     */
    "None": "None"
};



export default FamilyHeadModel;

