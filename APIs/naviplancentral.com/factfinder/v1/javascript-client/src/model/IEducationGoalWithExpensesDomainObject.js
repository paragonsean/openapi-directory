/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IEducationExpenseDomainObject from './IEducationExpenseDomainObject';

/**
 * The IEducationGoalWithExpensesDomainObject model module.
 * @module model/IEducationGoalWithExpensesDomainObject
 * @version v1
 */
class IEducationGoalWithExpensesDomainObject {
    /**
     * Constructs a new <code>IEducationGoalWithExpensesDomainObject</code>.
     * @alias module:model/IEducationGoalWithExpensesDomainObject
     */
    constructor() { 
        
        IEducationGoalWithExpensesDomainObject.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IEducationGoalWithExpensesDomainObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IEducationGoalWithExpensesDomainObject} obj Optional instance to populate.
     * @return {module:model/IEducationGoalWithExpensesDomainObject} The populated <code>IEducationGoalWithExpensesDomainObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IEducationGoalWithExpensesDomainObject();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('educationExpenses')) {
                obj['educationExpenses'] = ApiClient.convertToType(data['educationExpenses'], [IEducationExpenseDomainObject]);
            }
            if (data.hasOwnProperty('educationGoalId')) {
                obj['educationGoalId'] = ApiClient.convertToType(data['educationGoalId'], 'Number');
            }
            if (data.hasOwnProperty('externalDestinationId')) {
                obj['externalDestinationId'] = ApiClient.convertToType(data['externalDestinationId'], 'String');
            }
            if (data.hasOwnProperty('factFinderId')) {
                obj['factFinderId'] = ApiClient.convertToType(data['factFinderId'], 'Number');
            }
            if (data.hasOwnProperty('projectedCost')) {
                obj['projectedCost'] = ApiClient.convertToType(data['projectedCost'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IEducationGoalWithExpensesDomainObject</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IEducationGoalWithExpensesDomainObject</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        if (data['educationExpenses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['educationExpenses'])) {
                throw new Error("Expected the field `educationExpenses` to be an array in the JSON data but got " + data['educationExpenses']);
            }
            // validate the optional field `educationExpenses` (array)
            for (const item of data['educationExpenses']) {
                IEducationExpenseDomainObject.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['externalDestinationId'] && !(typeof data['externalDestinationId'] === 'string' || data['externalDestinationId'] instanceof String)) {
            throw new Error("Expected the field `externalDestinationId` to be a primitive type in the JSON string but got " + data['externalDestinationId']);
        }

        return true;
    }


}



/**
 * @member {String} description
 */
IEducationGoalWithExpensesDomainObject.prototype['description'] = undefined;

/**
 * @member {Array.<module:model/IEducationExpenseDomainObject>} educationExpenses
 */
IEducationGoalWithExpensesDomainObject.prototype['educationExpenses'] = undefined;

/**
 * @member {Number} educationGoalId
 */
IEducationGoalWithExpensesDomainObject.prototype['educationGoalId'] = undefined;

/**
 * @member {String} externalDestinationId
 */
IEducationGoalWithExpensesDomainObject.prototype['externalDestinationId'] = undefined;

/**
 * @member {Number} factFinderId
 */
IEducationGoalWithExpensesDomainObject.prototype['factFinderId'] = undefined;

/**
 * @member {Number} projectedCost
 */
IEducationGoalWithExpensesDomainObject.prototype['projectedCost'] = undefined;






export default IEducationGoalWithExpensesDomainObject;

