/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IRetirementExpenseDomainObject model module.
 * @module model/IRetirementExpenseDomainObject
 * @version v1
 */
class IRetirementExpenseDomainObject {
    /**
     * Constructs a new <code>IRetirementExpenseDomainObject</code>.
     * @alias module:model/IRetirementExpenseDomainObject
     */
    constructor() { 
        
        IRetirementExpenseDomainObject.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IRetirementExpenseDomainObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IRetirementExpenseDomainObject} obj Optional instance to populate.
     * @return {module:model/IRetirementExpenseDomainObject} The populated <code>IRetirementExpenseDomainObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IRetirementExpenseDomainObject();

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('annualPeriod')) {
                obj['annualPeriod'] = ApiClient.convertToType(data['annualPeriod'], 'Number');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], 'Date');
            }
            if (data.hasOwnProperty('externalDestinationId')) {
                obj['externalDestinationId'] = ApiClient.convertToType(data['externalDestinationId'], 'String');
            }
            if (data.hasOwnProperty('frequency')) {
                obj['frequency'] = ApiClient.convertToType(data['frequency'], 'Number');
            }
            if (data.hasOwnProperty('member')) {
                obj['member'] = ApiClient.convertToType(data['member'], 'String');
            }
            if (data.hasOwnProperty('retirementExpenseId')) {
                obj['retirementExpenseId'] = ApiClient.convertToType(data['retirementExpenseId'], 'Number');
            }
            if (data.hasOwnProperty('retirementGoalId')) {
                obj['retirementGoalId'] = ApiClient.convertToType(data['retirementGoalId'], 'Number');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IRetirementExpenseDomainObject</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IRetirementExpenseDomainObject</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['externalDestinationId'] && !(typeof data['externalDestinationId'] === 'string' || data['externalDestinationId'] instanceof String)) {
            throw new Error("Expected the field `externalDestinationId` to be a primitive type in the JSON string but got " + data['externalDestinationId']);
        }
        // ensure the json data is a string
        if (data['member'] && !(typeof data['member'] === 'string' || data['member'] instanceof String)) {
            throw new Error("Expected the field `member` to be a primitive type in the JSON string but got " + data['member']);
        }

        return true;
    }


}



/**
 * @member {Number} amount
 */
IRetirementExpenseDomainObject.prototype['amount'] = undefined;

/**
 * @member {Number} annualPeriod
 */
IRetirementExpenseDomainObject.prototype['annualPeriod'] = undefined;

/**
 * @member {String} description
 */
IRetirementExpenseDomainObject.prototype['description'] = undefined;

/**
 * @member {Date} endDate
 */
IRetirementExpenseDomainObject.prototype['endDate'] = undefined;

/**
 * @member {String} externalDestinationId
 */
IRetirementExpenseDomainObject.prototype['externalDestinationId'] = undefined;

/**
 * @member {Number} frequency
 */
IRetirementExpenseDomainObject.prototype['frequency'] = undefined;

/**
 * @member {module:model/IRetirementExpenseDomainObject.MemberEnum} member
 */
IRetirementExpenseDomainObject.prototype['member'] = undefined;

/**
 * @member {Number} retirementExpenseId
 */
IRetirementExpenseDomainObject.prototype['retirementExpenseId'] = undefined;

/**
 * @member {Number} retirementGoalId
 */
IRetirementExpenseDomainObject.prototype['retirementGoalId'] = undefined;

/**
 * @member {Date} startDate
 */
IRetirementExpenseDomainObject.prototype['startDate'] = undefined;





/**
 * Allowed values for the <code>member</code> property.
 * @enum {String}
 * @readonly
 */
IRetirementExpenseDomainObject['MemberEnum'] = {

    /**
     * value: "Client"
     * @const
     */
    "Client": "Client",

    /**
     * value: "CoClient"
     * @const
     */
    "CoClient": "CoClient",

    /**
     * value: "Joint"
     * @const
     */
    "Joint": "Joint"
};



export default IRetirementExpenseDomainObject;

