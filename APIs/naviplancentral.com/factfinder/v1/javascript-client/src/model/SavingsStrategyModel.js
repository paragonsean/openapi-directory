/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SavingsStrategyModel model module.
 * @module model/SavingsStrategyModel
 * @version v1
 */
class SavingsStrategyModel {
    /**
     * Constructs a new <code>SavingsStrategyModel</code>.
     * @alias module:model/SavingsStrategyModel
     */
    constructor() { 
        
        SavingsStrategyModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SavingsStrategyModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SavingsStrategyModel} obj Optional instance to populate.
     * @return {module:model/SavingsStrategyModel} The populated <code>SavingsStrategyModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SavingsStrategyModel();

            if (data.hasOwnProperty('employerSavingsAmount')) {
                obj['employerSavingsAmount'] = ApiClient.convertToType(data['employerSavingsAmount'], 'Number');
            }
            if (data.hasOwnProperty('employerSavingsAmountType')) {
                obj['employerSavingsAmountType'] = ApiClient.convertToType(data['employerSavingsAmountType'], 'String');
            }
            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], 'Date');
            }
            if (data.hasOwnProperty('externalDestinationId')) {
                obj['externalDestinationId'] = ApiClient.convertToType(data['externalDestinationId'], 'String');
            }
            if (data.hasOwnProperty('frequencyId')) {
                obj['frequencyId'] = ApiClient.convertToType(data['frequencyId'], 'Number');
            }
            if (data.hasOwnProperty('mandatoryAmount')) {
                obj['mandatoryAmount'] = ApiClient.convertToType(data['mandatoryAmount'], 'Number');
            }
            if (data.hasOwnProperty('mandatoryAmountType')) {
                obj['mandatoryAmountType'] = ApiClient.convertToType(data['mandatoryAmountType'], 'String');
            }
            if (data.hasOwnProperty('postTaxSavingsAmount')) {
                obj['postTaxSavingsAmount'] = ApiClient.convertToType(data['postTaxSavingsAmount'], 'Number');
            }
            if (data.hasOwnProperty('postTaxSavingsAmountType')) {
                obj['postTaxSavingsAmountType'] = ApiClient.convertToType(data['postTaxSavingsAmountType'], 'String');
            }
            if (data.hasOwnProperty('preTaxSavingsAmount')) {
                obj['preTaxSavingsAmount'] = ApiClient.convertToType(data['preTaxSavingsAmount'], 'Number');
            }
            if (data.hasOwnProperty('preTaxSavingsAmountType')) {
                obj['preTaxSavingsAmountType'] = ApiClient.convertToType(data['preTaxSavingsAmountType'], 'String');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SavingsStrategyModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SavingsStrategyModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['employerSavingsAmountType'] && !(typeof data['employerSavingsAmountType'] === 'string' || data['employerSavingsAmountType'] instanceof String)) {
            throw new Error("Expected the field `employerSavingsAmountType` to be a primitive type in the JSON string but got " + data['employerSavingsAmountType']);
        }
        // ensure the json data is a string
        if (data['externalDestinationId'] && !(typeof data['externalDestinationId'] === 'string' || data['externalDestinationId'] instanceof String)) {
            throw new Error("Expected the field `externalDestinationId` to be a primitive type in the JSON string but got " + data['externalDestinationId']);
        }
        // ensure the json data is a string
        if (data['mandatoryAmountType'] && !(typeof data['mandatoryAmountType'] === 'string' || data['mandatoryAmountType'] instanceof String)) {
            throw new Error("Expected the field `mandatoryAmountType` to be a primitive type in the JSON string but got " + data['mandatoryAmountType']);
        }
        // ensure the json data is a string
        if (data['postTaxSavingsAmountType'] && !(typeof data['postTaxSavingsAmountType'] === 'string' || data['postTaxSavingsAmountType'] instanceof String)) {
            throw new Error("Expected the field `postTaxSavingsAmountType` to be a primitive type in the JSON string but got " + data['postTaxSavingsAmountType']);
        }
        // ensure the json data is a string
        if (data['preTaxSavingsAmountType'] && !(typeof data['preTaxSavingsAmountType'] === 'string' || data['preTaxSavingsAmountType'] instanceof String)) {
            throw new Error("Expected the field `preTaxSavingsAmountType` to be a primitive type in the JSON string but got " + data['preTaxSavingsAmountType']);
        }

        return true;
    }


}



/**
 * @member {Number} employerSavingsAmount
 */
SavingsStrategyModel.prototype['employerSavingsAmount'] = undefined;

/**
 * @member {module:model/SavingsStrategyModel.EmployerSavingsAmountTypeEnum} employerSavingsAmountType
 */
SavingsStrategyModel.prototype['employerSavingsAmountType'] = undefined;

/**
 * @member {Date} endDate
 */
SavingsStrategyModel.prototype['endDate'] = undefined;

/**
 * @member {String} externalDestinationId
 */
SavingsStrategyModel.prototype['externalDestinationId'] = undefined;

/**
 * @member {Number} frequencyId
 */
SavingsStrategyModel.prototype['frequencyId'] = undefined;

/**
 * @member {Number} mandatoryAmount
 */
SavingsStrategyModel.prototype['mandatoryAmount'] = undefined;

/**
 * @member {module:model/SavingsStrategyModel.MandatoryAmountTypeEnum} mandatoryAmountType
 */
SavingsStrategyModel.prototype['mandatoryAmountType'] = undefined;

/**
 * @member {Number} postTaxSavingsAmount
 */
SavingsStrategyModel.prototype['postTaxSavingsAmount'] = undefined;

/**
 * @member {module:model/SavingsStrategyModel.PostTaxSavingsAmountTypeEnum} postTaxSavingsAmountType
 */
SavingsStrategyModel.prototype['postTaxSavingsAmountType'] = undefined;

/**
 * @member {Number} preTaxSavingsAmount
 */
SavingsStrategyModel.prototype['preTaxSavingsAmount'] = undefined;

/**
 * @member {module:model/SavingsStrategyModel.PreTaxSavingsAmountTypeEnum} preTaxSavingsAmountType
 */
SavingsStrategyModel.prototype['preTaxSavingsAmountType'] = undefined;

/**
 * @member {Date} startDate
 */
SavingsStrategyModel.prototype['startDate'] = undefined;





/**
 * Allowed values for the <code>employerSavingsAmountType</code> property.
 * @enum {String}
 * @readonly
 */
SavingsStrategyModel['EmployerSavingsAmountTypeEnum'] = {

    /**
     * value: "Dollar"
     * @const
     */
    "Dollar": "Dollar",

    /**
     * value: "Percent"
     * @const
     */
    "Percent": "Percent",

    /**
     * value: "Max"
     * @const
     */
    "Max": "Max"
};


/**
 * Allowed values for the <code>mandatoryAmountType</code> property.
 * @enum {String}
 * @readonly
 */
SavingsStrategyModel['MandatoryAmountTypeEnum'] = {

    /**
     * value: "Dollar"
     * @const
     */
    "Dollar": "Dollar",

    /**
     * value: "Percent"
     * @const
     */
    "Percent": "Percent",

    /**
     * value: "Max"
     * @const
     */
    "Max": "Max"
};


/**
 * Allowed values for the <code>postTaxSavingsAmountType</code> property.
 * @enum {String}
 * @readonly
 */
SavingsStrategyModel['PostTaxSavingsAmountTypeEnum'] = {

    /**
     * value: "Dollar"
     * @const
     */
    "Dollar": "Dollar",

    /**
     * value: "Percent"
     * @const
     */
    "Percent": "Percent",

    /**
     * value: "Max"
     * @const
     */
    "Max": "Max"
};


/**
 * Allowed values for the <code>preTaxSavingsAmountType</code> property.
 * @enum {String}
 * @readonly
 */
SavingsStrategyModel['PreTaxSavingsAmountTypeEnum'] = {

    /**
     * value: "Dollar"
     * @const
     */
    "Dollar": "Dollar",

    /**
     * value: "Percent"
     * @const
     */
    "Percent": "Percent",

    /**
     * value: "Max"
     * @const
     */
    "Max": "Max"
};



export default SavingsStrategyModel;

