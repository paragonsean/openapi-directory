/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FactFinderModuleModel model module.
 * @module model/FactFinderModuleModel
 * @version v1
 */
class FactFinderModuleModel {
    /**
     * Constructs a new <code>FactFinderModuleModel</code>.
     * @alias module:model/FactFinderModuleModel
     * @param moduleName {module:model/FactFinderModuleModel.ModuleNameEnum} 
     */
    constructor(moduleName) { 
        
        FactFinderModuleModel.initialize(this, moduleName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, moduleName) { 
        obj['moduleName'] = moduleName;
    }

    /**
     * Constructs a <code>FactFinderModuleModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FactFinderModuleModel} obj Optional instance to populate.
     * @return {module:model/FactFinderModuleModel} The populated <code>FactFinderModuleModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FactFinderModuleModel();

            if (data.hasOwnProperty('available')) {
                obj['available'] = ApiClient.convertToType(data['available'], 'Boolean');
            }
            if (data.hasOwnProperty('moduleName')) {
                obj['moduleName'] = ApiClient.convertToType(data['moduleName'], 'String');
            }
            if (data.hasOwnProperty('visited')) {
                obj['visited'] = ApiClient.convertToType(data['visited'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FactFinderModuleModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FactFinderModuleModel</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FactFinderModuleModel.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['moduleName'] && !(typeof data['moduleName'] === 'string' || data['moduleName'] instanceof String)) {
            throw new Error("Expected the field `moduleName` to be a primitive type in the JSON string but got " + data['moduleName']);
        }

        return true;
    }


}

FactFinderModuleModel.RequiredProperties = ["moduleName"];

/**
 * @member {Boolean} available
 */
FactFinderModuleModel.prototype['available'] = undefined;

/**
 * @member {module:model/FactFinderModuleModel.ModuleNameEnum} moduleName
 */
FactFinderModuleModel.prototype['moduleName'] = undefined;

/**
 * @member {Boolean} visited
 */
FactFinderModuleModel.prototype['visited'] = undefined;





/**
 * Allowed values for the <code>moduleName</code> property.
 * @enum {String}
 * @readonly
 */
FactFinderModuleModel['ModuleNameEnum'] = {

    /**
     * value: "Demographics"
     * @const
     */
    "Demographics": "Demographics",

    /**
     * value: "Assets"
     * @const
     */
    "Assets": "Assets",

    /**
     * value: "Liabilities"
     * @const
     */
    "Liabilities": "Liabilities",

    /**
     * value: "Incomes"
     * @const
     */
    "Incomes": "Incomes",

    /**
     * value: "Expenses"
     * @const
     */
    "Expenses": "Expenses",

    /**
     * value: "Insurance"
     * @const
     */
    "Insurance": "Insurance",

    /**
     * value: "Retirement"
     * @const
     */
    "Retirement": "Retirement",

    /**
     * value: "Education"
     * @const
     */
    "Education": "Education",

    /**
     * value: "MajorPurchase"
     * @const
     */
    "MajorPurchase": "MajorPurchase"
};



export default FactFinderModuleModel;

