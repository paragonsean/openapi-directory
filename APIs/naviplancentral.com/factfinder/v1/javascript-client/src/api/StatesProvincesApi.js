/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import StateProvinceModel from '../model/StateProvinceModel';
import StatesProvincesModel from '../model/StatesProvincesModel';

/**
* StatesProvinces service.
* @module api/StatesProvincesApi
* @version v1
*/
export default class StatesProvincesApi {

    /**
    * Constructs a new StatesProvincesApi. 
    * @alias module:api/StatesProvincesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the statesProvincesGetByCountry operation.
     * @callback module:api/StatesProvincesApi~statesProvincesGetByCountryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StatesProvincesModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Description: This operation retrieves all States and Provinces for the specified country.<br />                Purpose: Provides access to the States and Provinces.
     * @param {module:model/String} country The country used to filter States and Provinces
     * @param {module:api/StatesProvincesApi~statesProvincesGetByCountryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StatesProvincesModel}
     */
    statesProvincesGetByCountry(country, callback) {
      let postBody = null;
      // verify the required parameter 'country' is set
      if (country === undefined || country === null) {
        throw new Error("Missing the required parameter 'country' when calling statesProvincesGetByCountry");
      }

      let pathParams = {
      };
      let queryParams = {
        'country': country
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = StatesProvincesModel;
      return this.apiClient.callApi(
        '/api/StatesProvinces', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the statesProvincesGetById operation.
     * @callback module:api/StatesProvincesApi~statesProvincesGetByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StateProvinceModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Description: This operation retrieves the States and Provinces for the specified id.<br />                Purpose: Provides access to the States and Provinces.
     * @param {Number} id The ID of the State or Province used to retreive the State or Province information
     * @param {module:api/StatesProvincesApi~statesProvincesGetByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StateProvinceModel}
     */
    statesProvincesGetById(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling statesProvincesGetById");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = StateProvinceModel;
      return this.apiClient.callApi(
        '/api/StatesProvinces/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
