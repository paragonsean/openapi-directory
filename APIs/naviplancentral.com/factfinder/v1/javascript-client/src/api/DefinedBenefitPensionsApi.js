/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DefinedBenefitPensionModel from '../model/DefinedBenefitPensionModel';
import DefinedBenefitPensionWithIdModel from '../model/DefinedBenefitPensionWithIdModel';
import DefinedBenefitPensionsModel from '../model/DefinedBenefitPensionsModel';

/**
* DefinedBenefitPensions service.
* @module api/DefinedBenefitPensionsApi
* @version v1
*/
export default class DefinedBenefitPensionsApi {

    /**
    * Constructs a new DefinedBenefitPensionsApi. 
    * @alias module:api/DefinedBenefitPensionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the definedBenefitPensionsDeleteDefinedBenefitPensionById operation.
     * @callback module:api/DefinedBenefitPensionsApi~definedBenefitPensionsDeleteDefinedBenefitPensionByIdCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Description: The operation removes a Defined Benefit Pension tied to a Fact Finder.<br />                Purpose: Allows for removal of a Defined Benefit Pension from a Fact Finder.
     * @param {Number} id The Defined Benefit Pension ID used to identify which Defined Benefit Pension to remove
     * @param {module:api/DefinedBenefitPensionsApi~definedBenefitPensionsDeleteDefinedBenefitPensionByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    definedBenefitPensionsDeleteDefinedBenefitPensionById(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling definedBenefitPensionsDeleteDefinedBenefitPensionById");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/DefinedBenefitPensions/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the definedBenefitPensionsGetById operation.
     * @callback module:api/DefinedBenefitPensionsApi~definedBenefitPensionsGetByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DefinedBenefitPensionWithIdModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Description: This operation retrieves a single Defined Benefit Pension for the specified Defined Benefit Pension ID.<br />                Purpose: Provides access to the Defined Benefit Pension including description and start date.
     * @param {Number} id The ID of the Defined Benefit Pension used to retreive the Defined Benefit Pension
     * @param {module:api/DefinedBenefitPensionsApi~definedBenefitPensionsGetByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DefinedBenefitPensionWithIdModel}
     */
    definedBenefitPensionsGetById(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling definedBenefitPensionsGetById");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = DefinedBenefitPensionWithIdModel;
      return this.apiClient.callApi(
        '/api/DefinedBenefitPensions/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the definedBenefitPensionsGetDefinedBenefitPensionsByFactFinderIdByFactfinderid operation.
     * @callback module:api/DefinedBenefitPensionsApi~definedBenefitPensionsGetDefinedBenefitPensionsByFactFinderIdByFactfinderidCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DefinedBenefitPensionsModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Description: This operation retrieves all Defined Benefit Pensions for the specified Fact Finder ID.<br />                Purpose: Provides access to the Defined Benefit Pensions including description and start date.
     * @param {Number} factFinderId The ID of the Fact Finder used to retrieve Defined Benefit Pensions
     * @param {module:api/DefinedBenefitPensionsApi~definedBenefitPensionsGetDefinedBenefitPensionsByFactFinderIdByFactfinderidCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DefinedBenefitPensionsModel}
     */
    definedBenefitPensionsGetDefinedBenefitPensionsByFactFinderIdByFactfinderid(factFinderId, callback) {
      let postBody = null;
      // verify the required parameter 'factFinderId' is set
      if (factFinderId === undefined || factFinderId === null) {
        throw new Error("Missing the required parameter 'factFinderId' when calling definedBenefitPensionsGetDefinedBenefitPensionsByFactFinderIdByFactfinderid");
      }

      let pathParams = {
      };
      let queryParams = {
        'factFinderId': factFinderId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = DefinedBenefitPensionsModel;
      return this.apiClient.callApi(
        '/api/DefinedBenefitPensions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the definedBenefitPensionsPostByModel operation.
     * @callback module:api/DefinedBenefitPensionsApi~definedBenefitPensionsPostByModelCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Description: The operation creates a Defined Benefit Pension.<br />                Purpose: Allows for creation of Defined Benefit Pensions on a Fact Finder.
     * @param {module:model/DefinedBenefitPensionModel} model The Defined Benefit Pension to be added to the Fact Finder
     * @param {module:api/DefinedBenefitPensionsApi~definedBenefitPensionsPostByModelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    definedBenefitPensionsPostByModel(model, callback) {
      let postBody = model;
      // verify the required parameter 'model' is set
      if (model === undefined || model === null) {
        throw new Error("Missing the required parameter 'model' when calling definedBenefitPensionsPostByModel");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'text/json'];
      let accepts = ['application/json', 'text/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/DefinedBenefitPensions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the definedBenefitPensionsPutDefinedBenefitPensionByIdModel operation.
     * @callback module:api/DefinedBenefitPensionsApi~definedBenefitPensionsPutDefinedBenefitPensionByIdModelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DefinedBenefitPensionModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Description: The operation updates a Defined Benefit Pension.<br />                Purpose: Allows for complete replacement of a Defined Benefit Pension on a Fact Finder.
     * @param {Number} id The existing Defined Benefit Pension ID used to identify which Defined Benefit Pension to update
     * @param {module:model/DefinedBenefitPensionModel} model The Defined Benefit Pension to be updated on a Fact Finder
     * @param {module:api/DefinedBenefitPensionsApi~definedBenefitPensionsPutDefinedBenefitPensionByIdModelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DefinedBenefitPensionModel}
     */
    definedBenefitPensionsPutDefinedBenefitPensionByIdModel(id, model, callback) {
      let postBody = model;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling definedBenefitPensionsPutDefinedBenefitPensionByIdModel");
      }
      // verify the required parameter 'model' is set
      if (model === undefined || model === null) {
        throw new Error("Missing the required parameter 'model' when calling definedBenefitPensionsPutDefinedBenefitPensionByIdModel");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'text/json'];
      let accepts = ['application/json', 'text/json'];
      let returnType = DefinedBenefitPensionModel;
      return this.apiClient.callApi(
        '/api/DefinedBenefitPensions/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
