/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import LongTermCareInsurancePoliciesModel from '../model/LongTermCareInsurancePoliciesModel';
import LongTermCareInsurancePolicyModel from '../model/LongTermCareInsurancePolicyModel';
import LongTermCareInsurancePolicyWithIdModel from '../model/LongTermCareInsurancePolicyWithIdModel';

/**
* LongTermCareInsurancePolicies service.
* @module api/LongTermCareInsurancePoliciesApi
* @version v1
*/
export default class LongTermCareInsurancePoliciesApi {

    /**
    * Constructs a new LongTermCareInsurancePoliciesApi. 
    * @alias module:api/LongTermCareInsurancePoliciesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the longTermCareInsurancePoliciesDeleteById operation.
     * @callback module:api/LongTermCareInsurancePoliciesApi~longTermCareInsurancePoliciesDeleteByIdCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Description: The operation removes a Long Term Care Insurance Policy tied to a Fact Finder.<br />                Purpose: Allows for removal of a Long Term Care Insurance Policy from a Fact Finder.
     * @param {Number} id The Long Term Care Insurance Policy ID used to identify which Long Term Care Insurance Policy to remove
     * @param {module:api/LongTermCareInsurancePoliciesApi~longTermCareInsurancePoliciesDeleteByIdCallback} callback The callback function, accepting three arguments: error, data, response
     */
    longTermCareInsurancePoliciesDeleteById(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling longTermCareInsurancePoliciesDeleteById");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/LongTermCareInsurancePolicies/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the longTermCareInsurancePoliciesGetById operation.
     * @callback module:api/LongTermCareInsurancePoliciesApi~longTermCareInsurancePoliciesGetByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LongTermCareInsurancePolicyWithIdModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Description: This operation retrieves a single Long Term Care Insurance Policy for the specified Long Term Care Insurance Policy ID.<br />                Purpose: Provides access to the Long Term Care Insurance Policy including description and premium.
     * @param {Number} id The ID of the Long Term Care Insurance Policy used to retreive the Long Term Care Insurance Policy
     * @param {module:api/LongTermCareInsurancePoliciesApi~longTermCareInsurancePoliciesGetByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LongTermCareInsurancePolicyWithIdModel}
     */
    longTermCareInsurancePoliciesGetById(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling longTermCareInsurancePoliciesGetById");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = LongTermCareInsurancePolicyWithIdModel;
      return this.apiClient.callApi(
        '/api/LongTermCareInsurancePolicies/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the longTermCareInsurancePoliciesGetLongTermCareInsurancePoliciesByFactFinderIdByFactfinderid operation.
     * @callback module:api/LongTermCareInsurancePoliciesApi~longTermCareInsurancePoliciesGetLongTermCareInsurancePoliciesByFactFinderIdByFactfinderidCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LongTermCareInsurancePoliciesModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Description: This operation retrieves all Long Term Care Insurance Policies for the specified Fact Finder ID.<br />                Purpose: Provides access to the Long Term Care Insurance Policies including description and premium.
     * @param {Number} factFinderId The ID of the Fact Finder used to retrieve Long Term Care Insurance Policies
     * @param {module:api/LongTermCareInsurancePoliciesApi~longTermCareInsurancePoliciesGetLongTermCareInsurancePoliciesByFactFinderIdByFactfinderidCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LongTermCareInsurancePoliciesModel}
     */
    longTermCareInsurancePoliciesGetLongTermCareInsurancePoliciesByFactFinderIdByFactfinderid(factFinderId, callback) {
      let postBody = null;
      // verify the required parameter 'factFinderId' is set
      if (factFinderId === undefined || factFinderId === null) {
        throw new Error("Missing the required parameter 'factFinderId' when calling longTermCareInsurancePoliciesGetLongTermCareInsurancePoliciesByFactFinderIdByFactfinderid");
      }

      let pathParams = {
      };
      let queryParams = {
        'factFinderId': factFinderId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = LongTermCareInsurancePoliciesModel;
      return this.apiClient.callApi(
        '/api/LongTermCareInsurancePolicies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the longTermCareInsurancePoliciesPostByModel operation.
     * @callback module:api/LongTermCareInsurancePoliciesApi~longTermCareInsurancePoliciesPostByModelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LongTermCareInsurancePolicyWithIdModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Description: The operation creates a Long Term Care Insurance Policy.<br />                Purpose: Allows for creation of Long Term Care Insurance Policies on a Fact Finder.
     * @param {module:model/LongTermCareInsurancePolicyModel} model The Long Term Care Insurance Policy to be added to the Fact Finder
     * @param {module:api/LongTermCareInsurancePoliciesApi~longTermCareInsurancePoliciesPostByModelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LongTermCareInsurancePolicyWithIdModel}
     */
    longTermCareInsurancePoliciesPostByModel(model, callback) {
      let postBody = model;
      // verify the required parameter 'model' is set
      if (model === undefined || model === null) {
        throw new Error("Missing the required parameter 'model' when calling longTermCareInsurancePoliciesPostByModel");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'text/json'];
      let accepts = ['application/json', 'text/json'];
      let returnType = LongTermCareInsurancePolicyWithIdModel;
      return this.apiClient.callApi(
        '/api/LongTermCareInsurancePolicies', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the longTermCareInsurancePoliciesPutByIdModel operation.
     * @callback module:api/LongTermCareInsurancePoliciesApi~longTermCareInsurancePoliciesPutByIdModelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LongTermCareInsurancePolicyWithIdModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Description: The operation updates a Long Term Care Insurance Policy.<br />                Purpose: Allows for complete replacement of a Long Term Care Insurance Policy on a Fact Finder.
     * @param {Number} id The existing Long Term Care Insurance Policy ID used to identify which Long Term Care Insurance Policy to update
     * @param {module:model/LongTermCareInsurancePolicyModel} model The Long Term Care Insurance Policy to be updated on a Fact Finder
     * @param {module:api/LongTermCareInsurancePoliciesApi~longTermCareInsurancePoliciesPutByIdModelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LongTermCareInsurancePolicyWithIdModel}
     */
    longTermCareInsurancePoliciesPutByIdModel(id, model, callback) {
      let postBody = model;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling longTermCareInsurancePoliciesPutByIdModel");
      }
      // verify the required parameter 'model' is set
      if (model === undefined || model === null) {
        throw new Error("Missing the required parameter 'model' when calling longTermCareInsurancePoliciesPutByIdModel");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'text/json'];
      let accepts = ['application/json', 'text/json'];
      let returnType = LongTermCareInsurancePolicyWithIdModel;
      return this.apiClient.callApi(
        '/api/LongTermCareInsurancePolicies/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
