/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStatesProvincesModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStatesProvincesModel::OAIStatesProvincesModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStatesProvincesModel::OAIStatesProvincesModel() {
    this->initializeModel();
}

OAIStatesProvincesModel::~OAIStatesProvincesModel() {}

void OAIStatesProvincesModel::initializeModel() {

    m_states_provinces_isSet = false;
    m_states_provinces_isValid = false;
}

void OAIStatesProvincesModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStatesProvincesModel::fromJsonObject(QJsonObject json) {

    m_states_provinces_isValid = ::OpenAPI::fromJsonValue(m_states_provinces, json[QString("statesProvinces")]);
    m_states_provinces_isSet = !json[QString("statesProvinces")].isNull() && m_states_provinces_isValid;
}

QString OAIStatesProvincesModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStatesProvincesModel::asJsonObject() const {
    QJsonObject obj;
    if (m_states_provinces.size() > 0) {
        obj.insert(QString("statesProvinces"), ::OpenAPI::toJsonValue(m_states_provinces));
    }
    return obj;
}

QList<OAIStateProvinceModel> OAIStatesProvincesModel::getStatesProvinces() const {
    return m_states_provinces;
}
void OAIStatesProvincesModel::setStatesProvinces(const QList<OAIStateProvinceModel> &states_provinces) {
    m_states_provinces = states_provinces;
    m_states_provinces_isSet = true;
}

bool OAIStatesProvincesModel::is_states_provinces_Set() const{
    return m_states_provinces_isSet;
}

bool OAIStatesProvincesModel::is_states_provinces_Valid() const{
    return m_states_provinces_isValid;
}

bool OAIStatesProvincesModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_states_provinces.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStatesProvincesModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
