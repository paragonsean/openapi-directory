/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFactFinderWithIdModel.h
 *
 * 
 */

#ifndef OAIFactFinderWithIdModel_H
#define OAIFactFinderWithIdModel_H

#include <QJsonObject>

#include "OAIFactFinderModulesModel.h"
#include "OAIObjectLink.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIObjectLink;
class OAIFactFinderModulesModel;

class OAIFactFinderWithIdModel : public OAIObject {
public:
    OAIFactFinderWithIdModel();
    OAIFactFinderWithIdModel(QString json);
    ~OAIFactFinderWithIdModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCountryCode() const;
    void setCountryCode(const QString &country_code);
    bool is_country_code_Set() const;
    bool is_country_code_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    qint32 getFactFinderId() const;
    void setFactFinderId(const qint32 &fact_finder_id);
    bool is_fact_finder_id_Set() const;
    bool is_fact_finder_id_Valid() const;

    qint32 getHouseholdId() const;
    void setHouseholdId(const qint32 &household_id);
    bool is_household_id_Set() const;
    bool is_household_id_Valid() const;

    QDateTime getLastStatusUpdate() const;
    void setLastStatusUpdate(const QDateTime &last_status_update);
    bool is_last_status_update_Set() const;
    bool is_last_status_update_Valid() const;

    QList<OAIObjectLink> getLinks() const;
    void setLinks(const QList<OAIObjectLink> &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    OAIFactFinderModulesModel getModules() const;
    void setModules(const OAIFactFinderModulesModel &modules);
    bool is_modules_Set() const;
    bool is_modules_Valid() const;

    qint32 getPlanId() const;
    void setPlanId(const qint32 &plan_id);
    bool is_plan_id_Set() const;
    bool is_plan_id_Valid() const;

    QString getPlanLevel() const;
    void setPlanLevel(const QString &plan_level);
    bool is_plan_level_Set() const;
    bool is_plan_level_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_country_code;
    bool m_country_code_isSet;
    bool m_country_code_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    qint32 m_fact_finder_id;
    bool m_fact_finder_id_isSet;
    bool m_fact_finder_id_isValid;

    qint32 m_household_id;
    bool m_household_id_isSet;
    bool m_household_id_isValid;

    QDateTime m_last_status_update;
    bool m_last_status_update_isSet;
    bool m_last_status_update_isValid;

    QList<OAIObjectLink> m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    OAIFactFinderModulesModel m_modules;
    bool m_modules_isSet;
    bool m_modules_isValid;

    qint32 m_plan_id;
    bool m_plan_id_isSet;
    bool m_plan_id_isValid;

    QString m_plan_level;
    bool m_plan_level_isSet;
    bool m_plan_level_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFactFinderWithIdModel)

#endif // OAIFactFinderWithIdModel_H
