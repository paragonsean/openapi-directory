/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAILifeInsurancePoliciesApi_H
#define OAI_OAILifeInsurancePoliciesApi_H

#include "OAIHelpers.h"
#include "OAIHttpRequest.h"
#include "OAIServerConfiguration.h"
#include "OAIOauth.h"

#include "OAILifeInsurancePoliciesModel.h"
#include "OAILifeInsurancePolicyModel.h"
#include "OAILifeInsurancePolicySubaccountModel.h"
#include "OAILifeInsurancePolicySubaccountWithIdModel.h"
#include "OAILifeInsurancePolicySubaccountsModel.h"
#include "OAILifeInsurancePolicyWithIdModel.h"
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace OpenAPI {

class OAILifeInsurancePoliciesApi : public QObject {
    Q_OBJECT

public:
    OAILifeInsurancePoliciesApi(const int timeOut = 0);
    ~OAILifeInsurancePoliciesApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables = QMap<QString, OAIServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void lifeInsurancePoliciesDeleteById(const qint32 &id);

    /**
    * @param[in]  life_insurance_policy_id qint32 [required]
    * @param[in]  id qint32 [required]
    */
    virtual void lifeInsurancePoliciesDeleteSubaccountByLifeinsurancepolicyidId(const qint32 &life_insurance_policy_id, const qint32 &id);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void lifeInsurancePoliciesGetById(const qint32 &id);

    /**
    * @param[in]  fact_finder_id qint32 [required]
    */
    virtual void lifeInsurancePoliciesGetLifeInsurancePoliciesByFactFinderIdByFactfinderid(const qint32 &fact_finder_id);

    /**
    * @param[in]  life_insurance_policy_id qint32 [required]
    * @param[in]  id qint32 [required]
    */
    virtual void lifeInsurancePoliciesGetSubaccountByLifeinsurancepolicyidId(const qint32 &life_insurance_policy_id, const qint32 &id);

    /**
    * @param[in]  life_insurance_policy_id qint32 [required]
    */
    virtual void lifeInsurancePoliciesGetSubaccountsByLifeinsurancepolicyid(const qint32 &life_insurance_policy_id);

    /**
    * @param[in]  model OAILifeInsurancePolicyModel [required]
    */
    virtual void lifeInsurancePoliciesPostByModel(const OAILifeInsurancePolicyModel &model);

    /**
    * @param[in]  life_insurance_policy_id qint32 [required]
    * @param[in]  model OAILifeInsurancePolicySubaccountModel [required]
    */
    virtual void lifeInsurancePoliciesPostSubaccountByLifeinsurancepolicyidModel(const qint32 &life_insurance_policy_id, const OAILifeInsurancePolicySubaccountModel &model);

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  model OAILifeInsurancePolicyModel [required]
    */
    virtual void lifeInsurancePoliciesPutByIdModel(const qint32 &id, const OAILifeInsurancePolicyModel &model);

    /**
    * @param[in]  life_insurance_policy_id qint32 [required]
    * @param[in]  id qint32 [required]
    * @param[in]  model OAILifeInsurancePolicySubaccountModel [required]
    */
    virtual void lifeInsurancePoliciesPutSubaccountByLifeinsurancepolicyidIdModel(const qint32 &life_insurance_policy_id, const qint32 &id, const OAILifeInsurancePolicySubaccountModel &model);


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<OAIServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    OAIHttpRequestInput _latestInput;
    OAIHttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void lifeInsurancePoliciesDeleteByIdCallback(OAIHttpRequestWorker *worker);
    void lifeInsurancePoliciesDeleteSubaccountByLifeinsurancepolicyidIdCallback(OAIHttpRequestWorker *worker);
    void lifeInsurancePoliciesGetByIdCallback(OAIHttpRequestWorker *worker);
    void lifeInsurancePoliciesGetLifeInsurancePoliciesByFactFinderIdByFactfinderidCallback(OAIHttpRequestWorker *worker);
    void lifeInsurancePoliciesGetSubaccountByLifeinsurancepolicyidIdCallback(OAIHttpRequestWorker *worker);
    void lifeInsurancePoliciesGetSubaccountsByLifeinsurancepolicyidCallback(OAIHttpRequestWorker *worker);
    void lifeInsurancePoliciesPostByModelCallback(OAIHttpRequestWorker *worker);
    void lifeInsurancePoliciesPostSubaccountByLifeinsurancepolicyidModelCallback(OAIHttpRequestWorker *worker);
    void lifeInsurancePoliciesPutByIdModelCallback(OAIHttpRequestWorker *worker);
    void lifeInsurancePoliciesPutSubaccountByLifeinsurancepolicyidIdModelCallback(OAIHttpRequestWorker *worker);

Q_SIGNALS:

    void lifeInsurancePoliciesDeleteByIdSignal();
    void lifeInsurancePoliciesDeleteSubaccountByLifeinsurancepolicyidIdSignal();
    void lifeInsurancePoliciesGetByIdSignal(OAILifeInsurancePolicyWithIdModel summary);
    void lifeInsurancePoliciesGetLifeInsurancePoliciesByFactFinderIdByFactfinderidSignal(OAILifeInsurancePoliciesModel summary);
    void lifeInsurancePoliciesGetSubaccountByLifeinsurancepolicyidIdSignal(OAILifeInsurancePolicySubaccountWithIdModel summary);
    void lifeInsurancePoliciesGetSubaccountsByLifeinsurancepolicyidSignal(OAILifeInsurancePolicySubaccountsModel summary);
    void lifeInsurancePoliciesPostByModelSignal(OAILifeInsurancePolicyWithIdModel summary);
    void lifeInsurancePoliciesPostSubaccountByLifeinsurancepolicyidModelSignal(OAILifeInsurancePolicySubaccountWithIdModel summary);
    void lifeInsurancePoliciesPutByIdModelSignal(OAILifeInsurancePolicyWithIdModel summary);
    void lifeInsurancePoliciesPutSubaccountByLifeinsurancepolicyidIdModelSignal(OAILifeInsurancePolicySubaccountModel summary);


    void lifeInsurancePoliciesDeleteByIdSignalFull(OAIHttpRequestWorker *worker);
    void lifeInsurancePoliciesDeleteSubaccountByLifeinsurancepolicyidIdSignalFull(OAIHttpRequestWorker *worker);
    void lifeInsurancePoliciesGetByIdSignalFull(OAIHttpRequestWorker *worker, OAILifeInsurancePolicyWithIdModel summary);
    void lifeInsurancePoliciesGetLifeInsurancePoliciesByFactFinderIdByFactfinderidSignalFull(OAIHttpRequestWorker *worker, OAILifeInsurancePoliciesModel summary);
    void lifeInsurancePoliciesGetSubaccountByLifeinsurancepolicyidIdSignalFull(OAIHttpRequestWorker *worker, OAILifeInsurancePolicySubaccountWithIdModel summary);
    void lifeInsurancePoliciesGetSubaccountsByLifeinsurancepolicyidSignalFull(OAIHttpRequestWorker *worker, OAILifeInsurancePolicySubaccountsModel summary);
    void lifeInsurancePoliciesPostByModelSignalFull(OAIHttpRequestWorker *worker, OAILifeInsurancePolicyWithIdModel summary);
    void lifeInsurancePoliciesPostSubaccountByLifeinsurancepolicyidModelSignalFull(OAIHttpRequestWorker *worker, OAILifeInsurancePolicySubaccountWithIdModel summary);
    void lifeInsurancePoliciesPutByIdModelSignalFull(OAIHttpRequestWorker *worker, OAILifeInsurancePolicyWithIdModel summary);
    void lifeInsurancePoliciesPutSubaccountByLifeinsurancepolicyidIdModelSignalFull(OAIHttpRequestWorker *worker, OAILifeInsurancePolicySubaccountModel summary);

    Q_DECL_DEPRECATED_X("Use lifeInsurancePoliciesDeleteByIdSignalError() instead")
    void lifeInsurancePoliciesDeleteByIdSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void lifeInsurancePoliciesDeleteByIdSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use lifeInsurancePoliciesDeleteSubaccountByLifeinsurancepolicyidIdSignalError() instead")
    void lifeInsurancePoliciesDeleteSubaccountByLifeinsurancepolicyidIdSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void lifeInsurancePoliciesDeleteSubaccountByLifeinsurancepolicyidIdSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use lifeInsurancePoliciesGetByIdSignalError() instead")
    void lifeInsurancePoliciesGetByIdSignalE(OAILifeInsurancePolicyWithIdModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void lifeInsurancePoliciesGetByIdSignalError(OAILifeInsurancePolicyWithIdModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use lifeInsurancePoliciesGetLifeInsurancePoliciesByFactFinderIdByFactfinderidSignalError() instead")
    void lifeInsurancePoliciesGetLifeInsurancePoliciesByFactFinderIdByFactfinderidSignalE(OAILifeInsurancePoliciesModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void lifeInsurancePoliciesGetLifeInsurancePoliciesByFactFinderIdByFactfinderidSignalError(OAILifeInsurancePoliciesModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use lifeInsurancePoliciesGetSubaccountByLifeinsurancepolicyidIdSignalError() instead")
    void lifeInsurancePoliciesGetSubaccountByLifeinsurancepolicyidIdSignalE(OAILifeInsurancePolicySubaccountWithIdModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void lifeInsurancePoliciesGetSubaccountByLifeinsurancepolicyidIdSignalError(OAILifeInsurancePolicySubaccountWithIdModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use lifeInsurancePoliciesGetSubaccountsByLifeinsurancepolicyidSignalError() instead")
    void lifeInsurancePoliciesGetSubaccountsByLifeinsurancepolicyidSignalE(OAILifeInsurancePolicySubaccountsModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void lifeInsurancePoliciesGetSubaccountsByLifeinsurancepolicyidSignalError(OAILifeInsurancePolicySubaccountsModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use lifeInsurancePoliciesPostByModelSignalError() instead")
    void lifeInsurancePoliciesPostByModelSignalE(OAILifeInsurancePolicyWithIdModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void lifeInsurancePoliciesPostByModelSignalError(OAILifeInsurancePolicyWithIdModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use lifeInsurancePoliciesPostSubaccountByLifeinsurancepolicyidModelSignalError() instead")
    void lifeInsurancePoliciesPostSubaccountByLifeinsurancepolicyidModelSignalE(OAILifeInsurancePolicySubaccountWithIdModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void lifeInsurancePoliciesPostSubaccountByLifeinsurancepolicyidModelSignalError(OAILifeInsurancePolicySubaccountWithIdModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use lifeInsurancePoliciesPutByIdModelSignalError() instead")
    void lifeInsurancePoliciesPutByIdModelSignalE(OAILifeInsurancePolicyWithIdModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void lifeInsurancePoliciesPutByIdModelSignalError(OAILifeInsurancePolicyWithIdModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use lifeInsurancePoliciesPutSubaccountByLifeinsurancepolicyidIdModelSignalError() instead")
    void lifeInsurancePoliciesPutSubaccountByLifeinsurancepolicyidIdModelSignalE(OAILifeInsurancePolicySubaccountModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void lifeInsurancePoliciesPutSubaccountByLifeinsurancepolicyidIdModelSignalError(OAILifeInsurancePolicySubaccountModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use lifeInsurancePoliciesDeleteByIdSignalErrorFull() instead")
    void lifeInsurancePoliciesDeleteByIdSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void lifeInsurancePoliciesDeleteByIdSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use lifeInsurancePoliciesDeleteSubaccountByLifeinsurancepolicyidIdSignalErrorFull() instead")
    void lifeInsurancePoliciesDeleteSubaccountByLifeinsurancepolicyidIdSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void lifeInsurancePoliciesDeleteSubaccountByLifeinsurancepolicyidIdSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use lifeInsurancePoliciesGetByIdSignalErrorFull() instead")
    void lifeInsurancePoliciesGetByIdSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void lifeInsurancePoliciesGetByIdSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use lifeInsurancePoliciesGetLifeInsurancePoliciesByFactFinderIdByFactfinderidSignalErrorFull() instead")
    void lifeInsurancePoliciesGetLifeInsurancePoliciesByFactFinderIdByFactfinderidSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void lifeInsurancePoliciesGetLifeInsurancePoliciesByFactFinderIdByFactfinderidSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use lifeInsurancePoliciesGetSubaccountByLifeinsurancepolicyidIdSignalErrorFull() instead")
    void lifeInsurancePoliciesGetSubaccountByLifeinsurancepolicyidIdSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void lifeInsurancePoliciesGetSubaccountByLifeinsurancepolicyidIdSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use lifeInsurancePoliciesGetSubaccountsByLifeinsurancepolicyidSignalErrorFull() instead")
    void lifeInsurancePoliciesGetSubaccountsByLifeinsurancepolicyidSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void lifeInsurancePoliciesGetSubaccountsByLifeinsurancepolicyidSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use lifeInsurancePoliciesPostByModelSignalErrorFull() instead")
    void lifeInsurancePoliciesPostByModelSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void lifeInsurancePoliciesPostByModelSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use lifeInsurancePoliciesPostSubaccountByLifeinsurancepolicyidModelSignalErrorFull() instead")
    void lifeInsurancePoliciesPostSubaccountByLifeinsurancepolicyidModelSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void lifeInsurancePoliciesPostSubaccountByLifeinsurancepolicyidModelSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use lifeInsurancePoliciesPutByIdModelSignalErrorFull() instead")
    void lifeInsurancePoliciesPutByIdModelSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void lifeInsurancePoliciesPutByIdModelSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use lifeInsurancePoliciesPutSubaccountByLifeinsurancepolicyidIdModelSignalErrorFull() instead")
    void lifeInsurancePoliciesPutSubaccountByLifeinsurancepolicyidIdModelSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void lifeInsurancePoliciesPutSubaccountByLifeinsurancepolicyidIdModelSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace OpenAPI
#endif
