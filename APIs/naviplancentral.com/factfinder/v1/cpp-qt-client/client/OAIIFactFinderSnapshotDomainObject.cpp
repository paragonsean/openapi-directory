/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIFactFinderSnapshotDomainObject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIFactFinderSnapshotDomainObject::OAIIFactFinderSnapshotDomainObject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIFactFinderSnapshotDomainObject::OAIIFactFinderSnapshotDomainObject() {
    this->initializeModel();
}

OAIIFactFinderSnapshotDomainObject::~OAIIFactFinderSnapshotDomainObject() {}

void OAIIFactFinderSnapshotDomainObject::initializeModel() {

    m_accounts_isSet = false;
    m_accounts_isValid = false;

    m_critical_illness_insurance_policies_isSet = false;
    m_critical_illness_insurance_policies_isValid = false;

    m_defined_benefit_pensions_isSet = false;
    m_defined_benefit_pensions_isValid = false;

    m_demographics_isSet = false;
    m_demographics_isValid = false;

    m_disability_insurance_policies_isSet = false;
    m_disability_insurance_policies_isValid = false;

    m_education_goals_isSet = false;
    m_education_goals_isValid = false;

    m_expenses_isSet = false;
    m_expenses_isValid = false;

    m_incomes_isSet = false;
    m_incomes_isValid = false;

    m_liabilities_isSet = false;
    m_liabilities_isValid = false;

    m_life_insurance_policies_isSet = false;
    m_life_insurance_policies_isValid = false;

    m_lifestyle_assets_isSet = false;
    m_lifestyle_assets_isValid = false;

    m_long_term_care_insurance_policies_isSet = false;
    m_long_term_care_insurance_policies_isValid = false;

    m_major_purchase_goals_isSet = false;
    m_major_purchase_goals_isValid = false;

    m_plan_year_isSet = false;
    m_plan_year_isValid = false;

    m_real_estate_assets_isSet = false;
    m_real_estate_assets_isValid = false;

    m_retirement_goal_isSet = false;
    m_retirement_goal_isValid = false;
}

void OAIIFactFinderSnapshotDomainObject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIFactFinderSnapshotDomainObject::fromJsonObject(QJsonObject json) {

    m_accounts_isValid = ::OpenAPI::fromJsonValue(m_accounts, json[QString("accounts")]);
    m_accounts_isSet = !json[QString("accounts")].isNull() && m_accounts_isValid;

    m_critical_illness_insurance_policies_isValid = ::OpenAPI::fromJsonValue(m_critical_illness_insurance_policies, json[QString("criticalIllnessInsurancePolicies")]);
    m_critical_illness_insurance_policies_isSet = !json[QString("criticalIllnessInsurancePolicies")].isNull() && m_critical_illness_insurance_policies_isValid;

    m_defined_benefit_pensions_isValid = ::OpenAPI::fromJsonValue(m_defined_benefit_pensions, json[QString("definedBenefitPensions")]);
    m_defined_benefit_pensions_isSet = !json[QString("definedBenefitPensions")].isNull() && m_defined_benefit_pensions_isValid;

    m_demographics_isValid = ::OpenAPI::fromJsonValue(m_demographics, json[QString("demographics")]);
    m_demographics_isSet = !json[QString("demographics")].isNull() && m_demographics_isValid;

    m_disability_insurance_policies_isValid = ::OpenAPI::fromJsonValue(m_disability_insurance_policies, json[QString("disabilityInsurancePolicies")]);
    m_disability_insurance_policies_isSet = !json[QString("disabilityInsurancePolicies")].isNull() && m_disability_insurance_policies_isValid;

    m_education_goals_isValid = ::OpenAPI::fromJsonValue(m_education_goals, json[QString("educationGoals")]);
    m_education_goals_isSet = !json[QString("educationGoals")].isNull() && m_education_goals_isValid;

    m_expenses_isValid = ::OpenAPI::fromJsonValue(m_expenses, json[QString("expenses")]);
    m_expenses_isSet = !json[QString("expenses")].isNull() && m_expenses_isValid;

    m_incomes_isValid = ::OpenAPI::fromJsonValue(m_incomes, json[QString("incomes")]);
    m_incomes_isSet = !json[QString("incomes")].isNull() && m_incomes_isValid;

    m_liabilities_isValid = ::OpenAPI::fromJsonValue(m_liabilities, json[QString("liabilities")]);
    m_liabilities_isSet = !json[QString("liabilities")].isNull() && m_liabilities_isValid;

    m_life_insurance_policies_isValid = ::OpenAPI::fromJsonValue(m_life_insurance_policies, json[QString("lifeInsurancePolicies")]);
    m_life_insurance_policies_isSet = !json[QString("lifeInsurancePolicies")].isNull() && m_life_insurance_policies_isValid;

    m_lifestyle_assets_isValid = ::OpenAPI::fromJsonValue(m_lifestyle_assets, json[QString("lifestyleAssets")]);
    m_lifestyle_assets_isSet = !json[QString("lifestyleAssets")].isNull() && m_lifestyle_assets_isValid;

    m_long_term_care_insurance_policies_isValid = ::OpenAPI::fromJsonValue(m_long_term_care_insurance_policies, json[QString("longTermCareInsurancePolicies")]);
    m_long_term_care_insurance_policies_isSet = !json[QString("longTermCareInsurancePolicies")].isNull() && m_long_term_care_insurance_policies_isValid;

    m_major_purchase_goals_isValid = ::OpenAPI::fromJsonValue(m_major_purchase_goals, json[QString("majorPurchaseGoals")]);
    m_major_purchase_goals_isSet = !json[QString("majorPurchaseGoals")].isNull() && m_major_purchase_goals_isValid;

    m_plan_year_isValid = ::OpenAPI::fromJsonValue(m_plan_year, json[QString("planYear")]);
    m_plan_year_isSet = !json[QString("planYear")].isNull() && m_plan_year_isValid;

    m_real_estate_assets_isValid = ::OpenAPI::fromJsonValue(m_real_estate_assets, json[QString("realEstateAssets")]);
    m_real_estate_assets_isSet = !json[QString("realEstateAssets")].isNull() && m_real_estate_assets_isValid;

    m_retirement_goal_isValid = ::OpenAPI::fromJsonValue(m_retirement_goal, json[QString("retirementGoal")]);
    m_retirement_goal_isSet = !json[QString("retirementGoal")].isNull() && m_retirement_goal_isValid;
}

QString OAIIFactFinderSnapshotDomainObject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIFactFinderSnapshotDomainObject::asJsonObject() const {
    QJsonObject obj;
    if (m_accounts.size() > 0) {
        obj.insert(QString("accounts"), ::OpenAPI::toJsonValue(m_accounts));
    }
    if (m_critical_illness_insurance_policies.size() > 0) {
        obj.insert(QString("criticalIllnessInsurancePolicies"), ::OpenAPI::toJsonValue(m_critical_illness_insurance_policies));
    }
    if (m_defined_benefit_pensions.size() > 0) {
        obj.insert(QString("definedBenefitPensions"), ::OpenAPI::toJsonValue(m_defined_benefit_pensions));
    }
    if (m_demographics.isSet()) {
        obj.insert(QString("demographics"), ::OpenAPI::toJsonValue(m_demographics));
    }
    if (m_disability_insurance_policies.size() > 0) {
        obj.insert(QString("disabilityInsurancePolicies"), ::OpenAPI::toJsonValue(m_disability_insurance_policies));
    }
    if (m_education_goals.size() > 0) {
        obj.insert(QString("educationGoals"), ::OpenAPI::toJsonValue(m_education_goals));
    }
    if (m_expenses.size() > 0) {
        obj.insert(QString("expenses"), ::OpenAPI::toJsonValue(m_expenses));
    }
    if (m_incomes.size() > 0) {
        obj.insert(QString("incomes"), ::OpenAPI::toJsonValue(m_incomes));
    }
    if (m_liabilities.size() > 0) {
        obj.insert(QString("liabilities"), ::OpenAPI::toJsonValue(m_liabilities));
    }
    if (m_life_insurance_policies.size() > 0) {
        obj.insert(QString("lifeInsurancePolicies"), ::OpenAPI::toJsonValue(m_life_insurance_policies));
    }
    if (m_lifestyle_assets.size() > 0) {
        obj.insert(QString("lifestyleAssets"), ::OpenAPI::toJsonValue(m_lifestyle_assets));
    }
    if (m_long_term_care_insurance_policies.size() > 0) {
        obj.insert(QString("longTermCareInsurancePolicies"), ::OpenAPI::toJsonValue(m_long_term_care_insurance_policies));
    }
    if (m_major_purchase_goals.size() > 0) {
        obj.insert(QString("majorPurchaseGoals"), ::OpenAPI::toJsonValue(m_major_purchase_goals));
    }
    if (m_plan_year_isSet) {
        obj.insert(QString("planYear"), ::OpenAPI::toJsonValue(m_plan_year));
    }
    if (m_real_estate_assets.size() > 0) {
        obj.insert(QString("realEstateAssets"), ::OpenAPI::toJsonValue(m_real_estate_assets));
    }
    if (m_retirement_goal.isSet()) {
        obj.insert(QString("retirementGoal"), ::OpenAPI::toJsonValue(m_retirement_goal));
    }
    return obj;
}

QList<OAIIAccountWithSubEntitiesDomainObject> OAIIFactFinderSnapshotDomainObject::getAccounts() const {
    return m_accounts;
}
void OAIIFactFinderSnapshotDomainObject::setAccounts(const QList<OAIIAccountWithSubEntitiesDomainObject> &accounts) {
    m_accounts = accounts;
    m_accounts_isSet = true;
}

bool OAIIFactFinderSnapshotDomainObject::is_accounts_Set() const{
    return m_accounts_isSet;
}

bool OAIIFactFinderSnapshotDomainObject::is_accounts_Valid() const{
    return m_accounts_isValid;
}

QList<OAIICriticalIllnessInsurancePolicyDomainObject> OAIIFactFinderSnapshotDomainObject::getCriticalIllnessInsurancePolicies() const {
    return m_critical_illness_insurance_policies;
}
void OAIIFactFinderSnapshotDomainObject::setCriticalIllnessInsurancePolicies(const QList<OAIICriticalIllnessInsurancePolicyDomainObject> &critical_illness_insurance_policies) {
    m_critical_illness_insurance_policies = critical_illness_insurance_policies;
    m_critical_illness_insurance_policies_isSet = true;
}

bool OAIIFactFinderSnapshotDomainObject::is_critical_illness_insurance_policies_Set() const{
    return m_critical_illness_insurance_policies_isSet;
}

bool OAIIFactFinderSnapshotDomainObject::is_critical_illness_insurance_policies_Valid() const{
    return m_critical_illness_insurance_policies_isValid;
}

QList<OAIIFactFinderDefinedBenefitPensionDomainObject> OAIIFactFinderSnapshotDomainObject::getDefinedBenefitPensions() const {
    return m_defined_benefit_pensions;
}
void OAIIFactFinderSnapshotDomainObject::setDefinedBenefitPensions(const QList<OAIIFactFinderDefinedBenefitPensionDomainObject> &defined_benefit_pensions) {
    m_defined_benefit_pensions = defined_benefit_pensions;
    m_defined_benefit_pensions_isSet = true;
}

bool OAIIFactFinderSnapshotDomainObject::is_defined_benefit_pensions_Set() const{
    return m_defined_benefit_pensions_isSet;
}

bool OAIIFactFinderSnapshotDomainObject::is_defined_benefit_pensions_Valid() const{
    return m_defined_benefit_pensions_isValid;
}

OAIIDemographicsWithDependentsDomainObject OAIIFactFinderSnapshotDomainObject::getDemographics() const {
    return m_demographics;
}
void OAIIFactFinderSnapshotDomainObject::setDemographics(const OAIIDemographicsWithDependentsDomainObject &demographics) {
    m_demographics = demographics;
    m_demographics_isSet = true;
}

bool OAIIFactFinderSnapshotDomainObject::is_demographics_Set() const{
    return m_demographics_isSet;
}

bool OAIIFactFinderSnapshotDomainObject::is_demographics_Valid() const{
    return m_demographics_isValid;
}

QList<OAIIDisabilityInsurancePolicyDomainObject> OAIIFactFinderSnapshotDomainObject::getDisabilityInsurancePolicies() const {
    return m_disability_insurance_policies;
}
void OAIIFactFinderSnapshotDomainObject::setDisabilityInsurancePolicies(const QList<OAIIDisabilityInsurancePolicyDomainObject> &disability_insurance_policies) {
    m_disability_insurance_policies = disability_insurance_policies;
    m_disability_insurance_policies_isSet = true;
}

bool OAIIFactFinderSnapshotDomainObject::is_disability_insurance_policies_Set() const{
    return m_disability_insurance_policies_isSet;
}

bool OAIIFactFinderSnapshotDomainObject::is_disability_insurance_policies_Valid() const{
    return m_disability_insurance_policies_isValid;
}

QList<OAIIEducationGoalWithExpensesDomainObject> OAIIFactFinderSnapshotDomainObject::getEducationGoals() const {
    return m_education_goals;
}
void OAIIFactFinderSnapshotDomainObject::setEducationGoals(const QList<OAIIEducationGoalWithExpensesDomainObject> &education_goals) {
    m_education_goals = education_goals;
    m_education_goals_isSet = true;
}

bool OAIIFactFinderSnapshotDomainObject::is_education_goals_Set() const{
    return m_education_goals_isSet;
}

bool OAIIFactFinderSnapshotDomainObject::is_education_goals_Valid() const{
    return m_education_goals_isValid;
}

QList<OAIIExpenseDomainObject> OAIIFactFinderSnapshotDomainObject::getExpenses() const {
    return m_expenses;
}
void OAIIFactFinderSnapshotDomainObject::setExpenses(const QList<OAIIExpenseDomainObject> &expenses) {
    m_expenses = expenses;
    m_expenses_isSet = true;
}

bool OAIIFactFinderSnapshotDomainObject::is_expenses_Set() const{
    return m_expenses_isSet;
}

bool OAIIFactFinderSnapshotDomainObject::is_expenses_Valid() const{
    return m_expenses_isValid;
}

QList<OAIIIncomeDomainObject> OAIIFactFinderSnapshotDomainObject::getIncomes() const {
    return m_incomes;
}
void OAIIFactFinderSnapshotDomainObject::setIncomes(const QList<OAIIIncomeDomainObject> &incomes) {
    m_incomes = incomes;
    m_incomes_isSet = true;
}

bool OAIIFactFinderSnapshotDomainObject::is_incomes_Set() const{
    return m_incomes_isSet;
}

bool OAIIFactFinderSnapshotDomainObject::is_incomes_Valid() const{
    return m_incomes_isValid;
}

QList<OAIIFactFinderLiabilityDomainObject> OAIIFactFinderSnapshotDomainObject::getLiabilities() const {
    return m_liabilities;
}
void OAIIFactFinderSnapshotDomainObject::setLiabilities(const QList<OAIIFactFinderLiabilityDomainObject> &liabilities) {
    m_liabilities = liabilities;
    m_liabilities_isSet = true;
}

bool OAIIFactFinderSnapshotDomainObject::is_liabilities_Set() const{
    return m_liabilities_isSet;
}

bool OAIIFactFinderSnapshotDomainObject::is_liabilities_Valid() const{
    return m_liabilities_isValid;
}

QList<OAIILifeInsurancePolicyDomainObject> OAIIFactFinderSnapshotDomainObject::getLifeInsurancePolicies() const {
    return m_life_insurance_policies;
}
void OAIIFactFinderSnapshotDomainObject::setLifeInsurancePolicies(const QList<OAIILifeInsurancePolicyDomainObject> &life_insurance_policies) {
    m_life_insurance_policies = life_insurance_policies;
    m_life_insurance_policies_isSet = true;
}

bool OAIIFactFinderSnapshotDomainObject::is_life_insurance_policies_Set() const{
    return m_life_insurance_policies_isSet;
}

bool OAIIFactFinderSnapshotDomainObject::is_life_insurance_policies_Valid() const{
    return m_life_insurance_policies_isValid;
}

QList<OAIIFactFinderLifestyleAssetDomainObject> OAIIFactFinderSnapshotDomainObject::getLifestyleAssets() const {
    return m_lifestyle_assets;
}
void OAIIFactFinderSnapshotDomainObject::setLifestyleAssets(const QList<OAIIFactFinderLifestyleAssetDomainObject> &lifestyle_assets) {
    m_lifestyle_assets = lifestyle_assets;
    m_lifestyle_assets_isSet = true;
}

bool OAIIFactFinderSnapshotDomainObject::is_lifestyle_assets_Set() const{
    return m_lifestyle_assets_isSet;
}

bool OAIIFactFinderSnapshotDomainObject::is_lifestyle_assets_Valid() const{
    return m_lifestyle_assets_isValid;
}

QList<OAIILongTermCareInsurancePolicyDomainObject> OAIIFactFinderSnapshotDomainObject::getLongTermCareInsurancePolicies() const {
    return m_long_term_care_insurance_policies;
}
void OAIIFactFinderSnapshotDomainObject::setLongTermCareInsurancePolicies(const QList<OAIILongTermCareInsurancePolicyDomainObject> &long_term_care_insurance_policies) {
    m_long_term_care_insurance_policies = long_term_care_insurance_policies;
    m_long_term_care_insurance_policies_isSet = true;
}

bool OAIIFactFinderSnapshotDomainObject::is_long_term_care_insurance_policies_Set() const{
    return m_long_term_care_insurance_policies_isSet;
}

bool OAIIFactFinderSnapshotDomainObject::is_long_term_care_insurance_policies_Valid() const{
    return m_long_term_care_insurance_policies_isValid;
}

QList<OAIIMajorPurchaseGoalDomainObject> OAIIFactFinderSnapshotDomainObject::getMajorPurchaseGoals() const {
    return m_major_purchase_goals;
}
void OAIIFactFinderSnapshotDomainObject::setMajorPurchaseGoals(const QList<OAIIMajorPurchaseGoalDomainObject> &major_purchase_goals) {
    m_major_purchase_goals = major_purchase_goals;
    m_major_purchase_goals_isSet = true;
}

bool OAIIFactFinderSnapshotDomainObject::is_major_purchase_goals_Set() const{
    return m_major_purchase_goals_isSet;
}

bool OAIIFactFinderSnapshotDomainObject::is_major_purchase_goals_Valid() const{
    return m_major_purchase_goals_isValid;
}

qint32 OAIIFactFinderSnapshotDomainObject::getPlanYear() const {
    return m_plan_year;
}
void OAIIFactFinderSnapshotDomainObject::setPlanYear(const qint32 &plan_year) {
    m_plan_year = plan_year;
    m_plan_year_isSet = true;
}

bool OAIIFactFinderSnapshotDomainObject::is_plan_year_Set() const{
    return m_plan_year_isSet;
}

bool OAIIFactFinderSnapshotDomainObject::is_plan_year_Valid() const{
    return m_plan_year_isValid;
}

QList<OAIIRealEstateAssetDomainObject> OAIIFactFinderSnapshotDomainObject::getRealEstateAssets() const {
    return m_real_estate_assets;
}
void OAIIFactFinderSnapshotDomainObject::setRealEstateAssets(const QList<OAIIRealEstateAssetDomainObject> &real_estate_assets) {
    m_real_estate_assets = real_estate_assets;
    m_real_estate_assets_isSet = true;
}

bool OAIIFactFinderSnapshotDomainObject::is_real_estate_assets_Set() const{
    return m_real_estate_assets_isSet;
}

bool OAIIFactFinderSnapshotDomainObject::is_real_estate_assets_Valid() const{
    return m_real_estate_assets_isValid;
}

OAIIRetirementGoalWithExpensesDomainObject OAIIFactFinderSnapshotDomainObject::getRetirementGoal() const {
    return m_retirement_goal;
}
void OAIIFactFinderSnapshotDomainObject::setRetirementGoal(const OAIIRetirementGoalWithExpensesDomainObject &retirement_goal) {
    m_retirement_goal = retirement_goal;
    m_retirement_goal_isSet = true;
}

bool OAIIFactFinderSnapshotDomainObject::is_retirement_goal_Set() const{
    return m_retirement_goal_isSet;
}

bool OAIIFactFinderSnapshotDomainObject::is_retirement_goal_Valid() const{
    return m_retirement_goal_isValid;
}

bool OAIIFactFinderSnapshotDomainObject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_accounts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_critical_illness_insurance_policies.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_defined_benefit_pensions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_demographics.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_disability_insurance_policies.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_education_goals.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_expenses.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_incomes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_liabilities.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_life_insurance_policies.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_lifestyle_assets.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_long_term_care_insurance_policies.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_major_purchase_goals.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_plan_year_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_real_estate_assets.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_retirement_goal.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIFactFinderSnapshotDomainObject::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
