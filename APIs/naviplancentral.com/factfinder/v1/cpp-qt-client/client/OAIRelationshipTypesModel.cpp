/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRelationshipTypesModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRelationshipTypesModel::OAIRelationshipTypesModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRelationshipTypesModel::OAIRelationshipTypesModel() {
    this->initializeModel();
}

OAIRelationshipTypesModel::~OAIRelationshipTypesModel() {}

void OAIRelationshipTypesModel::initializeModel() {

    m_relationship_types_isSet = false;
    m_relationship_types_isValid = false;
}

void OAIRelationshipTypesModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRelationshipTypesModel::fromJsonObject(QJsonObject json) {

    m_relationship_types_isValid = ::OpenAPI::fromJsonValue(m_relationship_types, json[QString("relationshipTypes")]);
    m_relationship_types_isSet = !json[QString("relationshipTypes")].isNull() && m_relationship_types_isValid;
}

QString OAIRelationshipTypesModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRelationshipTypesModel::asJsonObject() const {
    QJsonObject obj;
    if (m_relationship_types.size() > 0) {
        obj.insert(QString("relationshipTypes"), ::OpenAPI::toJsonValue(m_relationship_types));
    }
    return obj;
}

QList<OAIRelationshipTypeModel> OAIRelationshipTypesModel::getRelationshipTypes() const {
    return m_relationship_types;
}
void OAIRelationshipTypesModel::setRelationshipTypes(const QList<OAIRelationshipTypeModel> &relationship_types) {
    m_relationship_types = relationship_types;
    m_relationship_types_isSet = true;
}

bool OAIRelationshipTypesModel::is_relationship_types_Set() const{
    return m_relationship_types_isSet;
}

bool OAIRelationshipTypesModel::is_relationship_types_Valid() const{
    return m_relationship_types_isValid;
}

bool OAIRelationshipTypesModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_relationship_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRelationshipTypesModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
