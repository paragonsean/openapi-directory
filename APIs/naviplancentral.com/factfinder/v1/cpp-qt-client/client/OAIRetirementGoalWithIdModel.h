/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRetirementGoalWithIdModel.h
 *
 * 
 */

#ifndef OAIRetirementGoalWithIdModel_H
#define OAIRetirementGoalWithIdModel_H

#include <QJsonObject>

#include "OAIObjectLink.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIObjectLink;

class OAIRetirementGoalWithIdModel : public OAIObject {
public:
    OAIRetirementGoalWithIdModel();
    OAIRetirementGoalWithIdModel(QString json);
    ~OAIRetirementGoalWithIdModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getExternalDestinationId() const;
    void setExternalDestinationId(const QString &external_destination_id);
    bool is_external_destination_id_Set() const;
    bool is_external_destination_id_Valid() const;

    qint32 getFactFinderId() const;
    void setFactFinderId(const qint32 &fact_finder_id);
    bool is_fact_finder_id_Set() const;
    bool is_fact_finder_id_Valid() const;

    QDateTime getHead1RetirementDate() const;
    void setHead1RetirementDate(const QDateTime &head1_retirement_date);
    bool is_head1_retirement_date_Set() const;
    bool is_head1_retirement_date_Valid() const;

    QDateTime getHead2RetirementDate() const;
    void setHead2RetirementDate(const QDateTime &head2_retirement_date);
    bool is_head2_retirement_date_Set() const;
    bool is_head2_retirement_date_Valid() const;

    QList<OAIObjectLink> getLinks() const;
    void setLinks(const QList<OAIObjectLink> &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    qint32 getRetirementGoalId() const;
    void setRetirementGoalId(const qint32 &retirement_goal_id);
    bool is_retirement_goal_id_Set() const;
    bool is_retirement_goal_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_external_destination_id;
    bool m_external_destination_id_isSet;
    bool m_external_destination_id_isValid;

    qint32 m_fact_finder_id;
    bool m_fact_finder_id_isSet;
    bool m_fact_finder_id_isValid;

    QDateTime m_head1_retirement_date;
    bool m_head1_retirement_date_isSet;
    bool m_head1_retirement_date_isValid;

    QDateTime m_head2_retirement_date;
    bool m_head2_retirement_date_isSet;
    bool m_head2_retirement_date_isValid;

    QList<OAIObjectLink> m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    qint32 m_retirement_goal_id;
    bool m_retirement_goal_id_isSet;
    bool m_retirement_goal_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRetirementGoalWithIdModel)

#endif // OAIRetirementGoalWithIdModel_H
