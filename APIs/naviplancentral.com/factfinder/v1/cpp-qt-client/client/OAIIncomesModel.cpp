/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIncomesModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIncomesModel::OAIIncomesModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIncomesModel::OAIIncomesModel() {
    this->initializeModel();
}

OAIIncomesModel::~OAIIncomesModel() {}

void OAIIncomesModel::initializeModel() {

    m_incomes_isSet = false;
    m_incomes_isValid = false;
}

void OAIIncomesModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIncomesModel::fromJsonObject(QJsonObject json) {

    m_incomes_isValid = ::OpenAPI::fromJsonValue(m_incomes, json[QString("incomes")]);
    m_incomes_isSet = !json[QString("incomes")].isNull() && m_incomes_isValid;
}

QString OAIIncomesModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIncomesModel::asJsonObject() const {
    QJsonObject obj;
    if (m_incomes.size() > 0) {
        obj.insert(QString("incomes"), ::OpenAPI::toJsonValue(m_incomes));
    }
    return obj;
}

QList<OAIIncomeWithIdModel> OAIIncomesModel::getIncomes() const {
    return m_incomes;
}
void OAIIncomesModel::setIncomes(const QList<OAIIncomeWithIdModel> &incomes) {
    m_incomes = incomes;
    m_incomes_isSet = true;
}

bool OAIIncomesModel::is_incomes_Set() const{
    return m_incomes_isSet;
}

bool OAIIncomesModel::is_incomes_Valid() const{
    return m_incomes_isValid;
}

bool OAIIncomesModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_incomes.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIncomesModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
