/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountHoldingsModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountHoldingsModel::OAIAccountHoldingsModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountHoldingsModel::OAIAccountHoldingsModel() {
    this->initializeModel();
}

OAIAccountHoldingsModel::~OAIAccountHoldingsModel() {}

void OAIAccountHoldingsModel::initializeModel() {

    m_holdings_isSet = false;
    m_holdings_isValid = false;
}

void OAIAccountHoldingsModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountHoldingsModel::fromJsonObject(QJsonObject json) {

    m_holdings_isValid = ::OpenAPI::fromJsonValue(m_holdings, json[QString("holdings")]);
    m_holdings_isSet = !json[QString("holdings")].isNull() && m_holdings_isValid;
}

QString OAIAccountHoldingsModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountHoldingsModel::asJsonObject() const {
    QJsonObject obj;
    if (m_holdings.size() > 0) {
        obj.insert(QString("holdings"), ::OpenAPI::toJsonValue(m_holdings));
    }
    return obj;
}

QList<OAIAccountHoldingWithIdModel> OAIAccountHoldingsModel::getHoldings() const {
    return m_holdings;
}
void OAIAccountHoldingsModel::setHoldings(const QList<OAIAccountHoldingWithIdModel> &holdings) {
    m_holdings = holdings;
    m_holdings_isSet = true;
}

bool OAIAccountHoldingsModel::is_holdings_Set() const{
    return m_holdings_isSet;
}

bool OAIAccountHoldingsModel::is_holdings_Valid() const{
    return m_holdings_isValid;
}

bool OAIAccountHoldingsModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_holdings.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountHoldingsModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
