/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIEducationGoalsApi_H
#define OAI_OAIEducationGoalsApi_H

#include "OAIHelpers.h"
#include "OAIHttpRequest.h"
#include "OAIServerConfiguration.h"
#include "OAIOauth.h"

#include "OAIEducationExpenseModel.h"
#include "OAIEducationExpenseWithIdModel.h"
#include "OAIEducationExpensesModel.h"
#include "OAIEducationGoalModel.h"
#include "OAIEducationGoalWithIdModel.h"
#include "OAIEducationGoalsModel.h"
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace OpenAPI {

class OAIEducationGoalsApi : public QObject {
    Q_OBJECT

public:
    OAIEducationGoalsApi(const int timeOut = 0);
    ~OAIEducationGoalsApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables = QMap<QString, OAIServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);

    /**
    * @param[in]  education_goal_id qint32 [required]
    * @param[in]  id qint32 [required]
    */
    virtual void educationGoalsDeleteByEducationgoalidId(const qint32 &education_goal_id, const qint32 &id);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void educationGoalsDeleteById(const qint32 &id);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void educationGoalsGetById(const qint32 &id);

    /**
    * @param[in]  education_goal_id qint32 [required]
    * @param[in]  id qint32 [required]
    */
    virtual void educationGoalsGetEducationExpenseByEducationgoalidId(const qint32 &education_goal_id, const qint32 &id);

    /**
    * @param[in]  education_goal_id qint32 [required]
    */
    virtual void educationGoalsGetEducationExpensesByEducationGoalIdByEducationgoalid(const qint32 &education_goal_id);

    /**
    * @param[in]  fact_finder_id qint32 [required]
    */
    virtual void educationGoalsGetEducationGoalsByFactFinderIdByFactfinderid(const qint32 &fact_finder_id);

    /**
    * @param[in]  education_goal_id qint32 [required]
    * @param[in]  model OAIEducationExpenseModel [required]
    */
    virtual void educationGoalsPostByEducationgoalidModel(const qint32 &education_goal_id, const OAIEducationExpenseModel &model);

    /**
    * @param[in]  model OAIEducationGoalModel [required]
    */
    virtual void educationGoalsPostByModel(const OAIEducationGoalModel &model);

    /**
    * @param[in]  education_goal_id qint32 [required]
    * @param[in]  id qint32 [required]
    * @param[in]  model OAIEducationExpenseModel [required]
    */
    virtual void educationGoalsPutByEducationgoalidIdModel(const qint32 &education_goal_id, const qint32 &id, const OAIEducationExpenseModel &model);

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  model OAIEducationGoalModel [required]
    */
    virtual void educationGoalsPutByIdModel(const qint32 &id, const OAIEducationGoalModel &model);


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<OAIServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    OAIHttpRequestInput _latestInput;
    OAIHttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void educationGoalsDeleteByEducationgoalidIdCallback(OAIHttpRequestWorker *worker);
    void educationGoalsDeleteByIdCallback(OAIHttpRequestWorker *worker);
    void educationGoalsGetByIdCallback(OAIHttpRequestWorker *worker);
    void educationGoalsGetEducationExpenseByEducationgoalidIdCallback(OAIHttpRequestWorker *worker);
    void educationGoalsGetEducationExpensesByEducationGoalIdByEducationgoalidCallback(OAIHttpRequestWorker *worker);
    void educationGoalsGetEducationGoalsByFactFinderIdByFactfinderidCallback(OAIHttpRequestWorker *worker);
    void educationGoalsPostByEducationgoalidModelCallback(OAIHttpRequestWorker *worker);
    void educationGoalsPostByModelCallback(OAIHttpRequestWorker *worker);
    void educationGoalsPutByEducationgoalidIdModelCallback(OAIHttpRequestWorker *worker);
    void educationGoalsPutByIdModelCallback(OAIHttpRequestWorker *worker);

Q_SIGNALS:

    void educationGoalsDeleteByEducationgoalidIdSignal();
    void educationGoalsDeleteByIdSignal();
    void educationGoalsGetByIdSignal(OAIEducationGoalWithIdModel summary);
    void educationGoalsGetEducationExpenseByEducationgoalidIdSignal(OAIEducationExpenseWithIdModel summary);
    void educationGoalsGetEducationExpensesByEducationGoalIdByEducationgoalidSignal(OAIEducationExpensesModel summary);
    void educationGoalsGetEducationGoalsByFactFinderIdByFactfinderidSignal(OAIEducationGoalsModel summary);
    void educationGoalsPostByEducationgoalidModelSignal(OAIEducationExpenseWithIdModel summary);
    void educationGoalsPostByModelSignal(OAIEducationGoalWithIdModel summary);
    void educationGoalsPutByEducationgoalidIdModelSignal(OAIEducationExpenseWithIdModel summary);
    void educationGoalsPutByIdModelSignal(OAIEducationGoalWithIdModel summary);


    void educationGoalsDeleteByEducationgoalidIdSignalFull(OAIHttpRequestWorker *worker);
    void educationGoalsDeleteByIdSignalFull(OAIHttpRequestWorker *worker);
    void educationGoalsGetByIdSignalFull(OAIHttpRequestWorker *worker, OAIEducationGoalWithIdModel summary);
    void educationGoalsGetEducationExpenseByEducationgoalidIdSignalFull(OAIHttpRequestWorker *worker, OAIEducationExpenseWithIdModel summary);
    void educationGoalsGetEducationExpensesByEducationGoalIdByEducationgoalidSignalFull(OAIHttpRequestWorker *worker, OAIEducationExpensesModel summary);
    void educationGoalsGetEducationGoalsByFactFinderIdByFactfinderidSignalFull(OAIHttpRequestWorker *worker, OAIEducationGoalsModel summary);
    void educationGoalsPostByEducationgoalidModelSignalFull(OAIHttpRequestWorker *worker, OAIEducationExpenseWithIdModel summary);
    void educationGoalsPostByModelSignalFull(OAIHttpRequestWorker *worker, OAIEducationGoalWithIdModel summary);
    void educationGoalsPutByEducationgoalidIdModelSignalFull(OAIHttpRequestWorker *worker, OAIEducationExpenseWithIdModel summary);
    void educationGoalsPutByIdModelSignalFull(OAIHttpRequestWorker *worker, OAIEducationGoalWithIdModel summary);

    Q_DECL_DEPRECATED_X("Use educationGoalsDeleteByEducationgoalidIdSignalError() instead")
    void educationGoalsDeleteByEducationgoalidIdSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void educationGoalsDeleteByEducationgoalidIdSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use educationGoalsDeleteByIdSignalError() instead")
    void educationGoalsDeleteByIdSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void educationGoalsDeleteByIdSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use educationGoalsGetByIdSignalError() instead")
    void educationGoalsGetByIdSignalE(OAIEducationGoalWithIdModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void educationGoalsGetByIdSignalError(OAIEducationGoalWithIdModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use educationGoalsGetEducationExpenseByEducationgoalidIdSignalError() instead")
    void educationGoalsGetEducationExpenseByEducationgoalidIdSignalE(OAIEducationExpenseWithIdModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void educationGoalsGetEducationExpenseByEducationgoalidIdSignalError(OAIEducationExpenseWithIdModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use educationGoalsGetEducationExpensesByEducationGoalIdByEducationgoalidSignalError() instead")
    void educationGoalsGetEducationExpensesByEducationGoalIdByEducationgoalidSignalE(OAIEducationExpensesModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void educationGoalsGetEducationExpensesByEducationGoalIdByEducationgoalidSignalError(OAIEducationExpensesModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use educationGoalsGetEducationGoalsByFactFinderIdByFactfinderidSignalError() instead")
    void educationGoalsGetEducationGoalsByFactFinderIdByFactfinderidSignalE(OAIEducationGoalsModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void educationGoalsGetEducationGoalsByFactFinderIdByFactfinderidSignalError(OAIEducationGoalsModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use educationGoalsPostByEducationgoalidModelSignalError() instead")
    void educationGoalsPostByEducationgoalidModelSignalE(OAIEducationExpenseWithIdModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void educationGoalsPostByEducationgoalidModelSignalError(OAIEducationExpenseWithIdModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use educationGoalsPostByModelSignalError() instead")
    void educationGoalsPostByModelSignalE(OAIEducationGoalWithIdModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void educationGoalsPostByModelSignalError(OAIEducationGoalWithIdModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use educationGoalsPutByEducationgoalidIdModelSignalError() instead")
    void educationGoalsPutByEducationgoalidIdModelSignalE(OAIEducationExpenseWithIdModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void educationGoalsPutByEducationgoalidIdModelSignalError(OAIEducationExpenseWithIdModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use educationGoalsPutByIdModelSignalError() instead")
    void educationGoalsPutByIdModelSignalE(OAIEducationGoalWithIdModel summary, QNetworkReply::NetworkError error_type, QString error_str);
    void educationGoalsPutByIdModelSignalError(OAIEducationGoalWithIdModel summary, QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use educationGoalsDeleteByEducationgoalidIdSignalErrorFull() instead")
    void educationGoalsDeleteByEducationgoalidIdSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void educationGoalsDeleteByEducationgoalidIdSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use educationGoalsDeleteByIdSignalErrorFull() instead")
    void educationGoalsDeleteByIdSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void educationGoalsDeleteByIdSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use educationGoalsGetByIdSignalErrorFull() instead")
    void educationGoalsGetByIdSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void educationGoalsGetByIdSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use educationGoalsGetEducationExpenseByEducationgoalidIdSignalErrorFull() instead")
    void educationGoalsGetEducationExpenseByEducationgoalidIdSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void educationGoalsGetEducationExpenseByEducationgoalidIdSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use educationGoalsGetEducationExpensesByEducationGoalIdByEducationgoalidSignalErrorFull() instead")
    void educationGoalsGetEducationExpensesByEducationGoalIdByEducationgoalidSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void educationGoalsGetEducationExpensesByEducationGoalIdByEducationgoalidSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use educationGoalsGetEducationGoalsByFactFinderIdByFactfinderidSignalErrorFull() instead")
    void educationGoalsGetEducationGoalsByFactFinderIdByFactfinderidSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void educationGoalsGetEducationGoalsByFactFinderIdByFactfinderidSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use educationGoalsPostByEducationgoalidModelSignalErrorFull() instead")
    void educationGoalsPostByEducationgoalidModelSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void educationGoalsPostByEducationgoalidModelSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use educationGoalsPostByModelSignalErrorFull() instead")
    void educationGoalsPostByModelSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void educationGoalsPostByModelSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use educationGoalsPutByEducationgoalidIdModelSignalErrorFull() instead")
    void educationGoalsPutByEducationgoalidIdModelSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void educationGoalsPutByEducationgoalidIdModelSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use educationGoalsPutByIdModelSignalErrorFull() instead")
    void educationGoalsPutByIdModelSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void educationGoalsPutByIdModelSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace OpenAPI
#endif
