/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFilingStatusTypeModel.h
 *
 * 
 */

#ifndef OAIFilingStatusTypeModel_H
#define OAIFilingStatusTypeModel_H

#include <QJsonObject>

#include "OAIObjectLink.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIObjectLink;

class OAIFilingStatusTypeModel : public OAIObject {
public:
    OAIFilingStatusTypeModel();
    OAIFilingStatusTypeModel(QString json);
    ~OAIFilingStatusTypeModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getFilingStatusTypeId() const;
    void setFilingStatusTypeId(const qint32 &filing_status_type_id);
    bool is_filing_status_type_id_Set() const;
    bool is_filing_status_type_id_Valid() const;

    QString getFilingStatusTypeName() const;
    void setFilingStatusTypeName(const QString &filing_status_type_name);
    bool is_filing_status_type_name_Set() const;
    bool is_filing_status_type_name_Valid() const;

    bool isHasJointDependent() const;
    void setHasJointDependent(const bool &has_joint_dependent);
    bool is_has_joint_dependent_Set() const;
    bool is_has_joint_dependent_Valid() const;

    QList<OAIObjectLink> getLinks() const;
    void setLinks(const QList<OAIObjectLink> &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QList<qint32> getPartnerStatuses() const;
    void setPartnerStatuses(const QList<qint32> &partner_statuses);
    bool is_partner_statuses_Set() const;
    bool is_partner_statuses_Valid() const;

    bool isValidForSingleAnalysis() const;
    void setValidForSingleAnalysis(const bool &valid_for_single_analysis);
    bool is_valid_for_single_analysis_Set() const;
    bool is_valid_for_single_analysis_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_filing_status_type_id;
    bool m_filing_status_type_id_isSet;
    bool m_filing_status_type_id_isValid;

    QString m_filing_status_type_name;
    bool m_filing_status_type_name_isSet;
    bool m_filing_status_type_name_isValid;

    bool m_has_joint_dependent;
    bool m_has_joint_dependent_isSet;
    bool m_has_joint_dependent_isValid;

    QList<OAIObjectLink> m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QList<qint32> m_partner_statuses;
    bool m_partner_statuses_isSet;
    bool m_partner_statuses_isValid;

    bool m_valid_for_single_analysis;
    bool m_valid_for_single_analysis_isSet;
    bool m_valid_for_single_analysis_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFilingStatusTypeModel)

#endif // OAIFilingStatusTypeModel_H
