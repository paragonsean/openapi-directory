/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDefinedBenefitPensionWithIdModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDefinedBenefitPensionWithIdModel::OAIDefinedBenefitPensionWithIdModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDefinedBenefitPensionWithIdModel::OAIDefinedBenefitPensionWithIdModel() {
    this->initializeModel();
}

OAIDefinedBenefitPensionWithIdModel::~OAIDefinedBenefitPensionWithIdModel() {}

void OAIDefinedBenefitPensionWithIdModel::initializeModel() {

    m_defined_benefit_pension_id_isSet = false;
    m_defined_benefit_pension_id_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_estimated_amount_isSet = false;
    m_estimated_amount_isValid = false;

    m_external_destination_id_isSet = false;
    m_external_destination_id_isValid = false;

    m_fact_finder_id_isSet = false;
    m_fact_finder_id_isValid = false;

    m_links_isSet = false;
    m_links_isValid = false;

    m_member_isSet = false;
    m_member_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;
}

void OAIDefinedBenefitPensionWithIdModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDefinedBenefitPensionWithIdModel::fromJsonObject(QJsonObject json) {

    m_defined_benefit_pension_id_isValid = ::OpenAPI::fromJsonValue(m_defined_benefit_pension_id, json[QString("definedBenefitPensionId")]);
    m_defined_benefit_pension_id_isSet = !json[QString("definedBenefitPensionId")].isNull() && m_defined_benefit_pension_id_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_estimated_amount_isValid = ::OpenAPI::fromJsonValue(m_estimated_amount, json[QString("estimatedAmount")]);
    m_estimated_amount_isSet = !json[QString("estimatedAmount")].isNull() && m_estimated_amount_isValid;

    m_external_destination_id_isValid = ::OpenAPI::fromJsonValue(m_external_destination_id, json[QString("externalDestinationId")]);
    m_external_destination_id_isSet = !json[QString("externalDestinationId")].isNull() && m_external_destination_id_isValid;

    m_fact_finder_id_isValid = ::OpenAPI::fromJsonValue(m_fact_finder_id, json[QString("factFinderId")]);
    m_fact_finder_id_isSet = !json[QString("factFinderId")].isNull() && m_fact_finder_id_isValid;

    m_links_isValid = ::OpenAPI::fromJsonValue(m_links, json[QString("links")]);
    m_links_isSet = !json[QString("links")].isNull() && m_links_isValid;

    m_member_isValid = ::OpenAPI::fromJsonValue(m_member, json[QString("member")]);
    m_member_isSet = !json[QString("member")].isNull() && m_member_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("startDate")]);
    m_start_date_isSet = !json[QString("startDate")].isNull() && m_start_date_isValid;
}

QString OAIDefinedBenefitPensionWithIdModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDefinedBenefitPensionWithIdModel::asJsonObject() const {
    QJsonObject obj;
    if (m_defined_benefit_pension_id_isSet) {
        obj.insert(QString("definedBenefitPensionId"), ::OpenAPI::toJsonValue(m_defined_benefit_pension_id));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_estimated_amount_isSet) {
        obj.insert(QString("estimatedAmount"), ::OpenAPI::toJsonValue(m_estimated_amount));
    }
    if (m_external_destination_id_isSet) {
        obj.insert(QString("externalDestinationId"), ::OpenAPI::toJsonValue(m_external_destination_id));
    }
    if (m_fact_finder_id_isSet) {
        obj.insert(QString("factFinderId"), ::OpenAPI::toJsonValue(m_fact_finder_id));
    }
    if (m_links.size() > 0) {
        obj.insert(QString("links"), ::OpenAPI::toJsonValue(m_links));
    }
    if (m_member_isSet) {
        obj.insert(QString("member"), ::OpenAPI::toJsonValue(m_member));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("startDate"), ::OpenAPI::toJsonValue(m_start_date));
    }
    return obj;
}

qint32 OAIDefinedBenefitPensionWithIdModel::getDefinedBenefitPensionId() const {
    return m_defined_benefit_pension_id;
}
void OAIDefinedBenefitPensionWithIdModel::setDefinedBenefitPensionId(const qint32 &defined_benefit_pension_id) {
    m_defined_benefit_pension_id = defined_benefit_pension_id;
    m_defined_benefit_pension_id_isSet = true;
}

bool OAIDefinedBenefitPensionWithIdModel::is_defined_benefit_pension_id_Set() const{
    return m_defined_benefit_pension_id_isSet;
}

bool OAIDefinedBenefitPensionWithIdModel::is_defined_benefit_pension_id_Valid() const{
    return m_defined_benefit_pension_id_isValid;
}

QString OAIDefinedBenefitPensionWithIdModel::getDescription() const {
    return m_description;
}
void OAIDefinedBenefitPensionWithIdModel::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIDefinedBenefitPensionWithIdModel::is_description_Set() const{
    return m_description_isSet;
}

bool OAIDefinedBenefitPensionWithIdModel::is_description_Valid() const{
    return m_description_isValid;
}

double OAIDefinedBenefitPensionWithIdModel::getEstimatedAmount() const {
    return m_estimated_amount;
}
void OAIDefinedBenefitPensionWithIdModel::setEstimatedAmount(const double &estimated_amount) {
    m_estimated_amount = estimated_amount;
    m_estimated_amount_isSet = true;
}

bool OAIDefinedBenefitPensionWithIdModel::is_estimated_amount_Set() const{
    return m_estimated_amount_isSet;
}

bool OAIDefinedBenefitPensionWithIdModel::is_estimated_amount_Valid() const{
    return m_estimated_amount_isValid;
}

QString OAIDefinedBenefitPensionWithIdModel::getExternalDestinationId() const {
    return m_external_destination_id;
}
void OAIDefinedBenefitPensionWithIdModel::setExternalDestinationId(const QString &external_destination_id) {
    m_external_destination_id = external_destination_id;
    m_external_destination_id_isSet = true;
}

bool OAIDefinedBenefitPensionWithIdModel::is_external_destination_id_Set() const{
    return m_external_destination_id_isSet;
}

bool OAIDefinedBenefitPensionWithIdModel::is_external_destination_id_Valid() const{
    return m_external_destination_id_isValid;
}

qint32 OAIDefinedBenefitPensionWithIdModel::getFactFinderId() const {
    return m_fact_finder_id;
}
void OAIDefinedBenefitPensionWithIdModel::setFactFinderId(const qint32 &fact_finder_id) {
    m_fact_finder_id = fact_finder_id;
    m_fact_finder_id_isSet = true;
}

bool OAIDefinedBenefitPensionWithIdModel::is_fact_finder_id_Set() const{
    return m_fact_finder_id_isSet;
}

bool OAIDefinedBenefitPensionWithIdModel::is_fact_finder_id_Valid() const{
    return m_fact_finder_id_isValid;
}

QList<OAIObjectLink> OAIDefinedBenefitPensionWithIdModel::getLinks() const {
    return m_links;
}
void OAIDefinedBenefitPensionWithIdModel::setLinks(const QList<OAIObjectLink> &links) {
    m_links = links;
    m_links_isSet = true;
}

bool OAIDefinedBenefitPensionWithIdModel::is_links_Set() const{
    return m_links_isSet;
}

bool OAIDefinedBenefitPensionWithIdModel::is_links_Valid() const{
    return m_links_isValid;
}

QString OAIDefinedBenefitPensionWithIdModel::getMember() const {
    return m_member;
}
void OAIDefinedBenefitPensionWithIdModel::setMember(const QString &member) {
    m_member = member;
    m_member_isSet = true;
}

bool OAIDefinedBenefitPensionWithIdModel::is_member_Set() const{
    return m_member_isSet;
}

bool OAIDefinedBenefitPensionWithIdModel::is_member_Valid() const{
    return m_member_isValid;
}

QDateTime OAIDefinedBenefitPensionWithIdModel::getStartDate() const {
    return m_start_date;
}
void OAIDefinedBenefitPensionWithIdModel::setStartDate(const QDateTime &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAIDefinedBenefitPensionWithIdModel::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAIDefinedBenefitPensionWithIdModel::is_start_date_Valid() const{
    return m_start_date_isValid;
}

bool OAIDefinedBenefitPensionWithIdModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_defined_benefit_pension_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_estimated_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_destination_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fact_finder_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_links.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_member_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDefinedBenefitPensionWithIdModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
