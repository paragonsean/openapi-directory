/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFactFinderSnapshotWithIdModel.h
 *
 * 
 */

#ifndef OAIFactFinderSnapshotWithIdModel_H
#define OAIFactFinderSnapshotWithIdModel_H

#include <QJsonObject>

#include "OAIIFactFinderSnapshotDomainObject.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIFactFinderSnapshotDomainObject;

class OAIFactFinderSnapshotWithIdModel : public OAIObject {
public:
    OAIFactFinderSnapshotWithIdModel();
    OAIFactFinderSnapshotWithIdModel(QString json);
    ~OAIFactFinderSnapshotWithIdModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    OAIIFactFinderSnapshotDomainObject getFactFinderData() const;
    void setFactFinderData(const OAIIFactFinderSnapshotDomainObject &fact_finder_data);
    bool is_fact_finder_data_Set() const;
    bool is_fact_finder_data_Valid() const;

    qint32 getFactFinderId() const;
    void setFactFinderId(const qint32 &fact_finder_id);
    bool is_fact_finder_id_Set() const;
    bool is_fact_finder_id_Valid() const;

    QString getFactFinderStatus() const;
    void setFactFinderStatus(const QString &fact_finder_status);
    bool is_fact_finder_status_Set() const;
    bool is_fact_finder_status_Valid() const;

    qint32 getSnapshotId() const;
    void setSnapshotId(const qint32 &snapshot_id);
    bool is_snapshot_id_Set() const;
    bool is_snapshot_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    OAIIFactFinderSnapshotDomainObject m_fact_finder_data;
    bool m_fact_finder_data_isSet;
    bool m_fact_finder_data_isValid;

    qint32 m_fact_finder_id;
    bool m_fact_finder_id_isSet;
    bool m_fact_finder_id_isValid;

    QString m_fact_finder_status;
    bool m_fact_finder_status_isSet;
    bool m_fact_finder_status_isValid;

    qint32 m_snapshot_id;
    bool m_snapshot_id_isSet;
    bool m_snapshot_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFactFinderSnapshotWithIdModel)

#endif // OAIFactFinderSnapshotWithIdModel_H
