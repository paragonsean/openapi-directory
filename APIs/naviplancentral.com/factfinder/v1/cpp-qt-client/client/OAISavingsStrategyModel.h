/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISavingsStrategyModel.h
 *
 * 
 */

#ifndef OAISavingsStrategyModel_H
#define OAISavingsStrategyModel_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISavingsStrategyModel : public OAIObject {
public:
    OAISavingsStrategyModel();
    OAISavingsStrategyModel(QString json);
    ~OAISavingsStrategyModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getEmployerSavingsAmount() const;
    void setEmployerSavingsAmount(const double &employer_savings_amount);
    bool is_employer_savings_amount_Set() const;
    bool is_employer_savings_amount_Valid() const;

    QString getEmployerSavingsAmountType() const;
    void setEmployerSavingsAmountType(const QString &employer_savings_amount_type);
    bool is_employer_savings_amount_type_Set() const;
    bool is_employer_savings_amount_type_Valid() const;

    QDateTime getEndDate() const;
    void setEndDate(const QDateTime &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    QString getExternalDestinationId() const;
    void setExternalDestinationId(const QString &external_destination_id);
    bool is_external_destination_id_Set() const;
    bool is_external_destination_id_Valid() const;

    qint32 getFrequencyId() const;
    void setFrequencyId(const qint32 &frequency_id);
    bool is_frequency_id_Set() const;
    bool is_frequency_id_Valid() const;

    double getMandatoryAmount() const;
    void setMandatoryAmount(const double &mandatory_amount);
    bool is_mandatory_amount_Set() const;
    bool is_mandatory_amount_Valid() const;

    QString getMandatoryAmountType() const;
    void setMandatoryAmountType(const QString &mandatory_amount_type);
    bool is_mandatory_amount_type_Set() const;
    bool is_mandatory_amount_type_Valid() const;

    double getPostTaxSavingsAmount() const;
    void setPostTaxSavingsAmount(const double &post_tax_savings_amount);
    bool is_post_tax_savings_amount_Set() const;
    bool is_post_tax_savings_amount_Valid() const;

    QString getPostTaxSavingsAmountType() const;
    void setPostTaxSavingsAmountType(const QString &post_tax_savings_amount_type);
    bool is_post_tax_savings_amount_type_Set() const;
    bool is_post_tax_savings_amount_type_Valid() const;

    double getPreTaxSavingsAmount() const;
    void setPreTaxSavingsAmount(const double &pre_tax_savings_amount);
    bool is_pre_tax_savings_amount_Set() const;
    bool is_pre_tax_savings_amount_Valid() const;

    QString getPreTaxSavingsAmountType() const;
    void setPreTaxSavingsAmountType(const QString &pre_tax_savings_amount_type);
    bool is_pre_tax_savings_amount_type_Set() const;
    bool is_pre_tax_savings_amount_type_Valid() const;

    QDateTime getStartDate() const;
    void setStartDate(const QDateTime &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_employer_savings_amount;
    bool m_employer_savings_amount_isSet;
    bool m_employer_savings_amount_isValid;

    QString m_employer_savings_amount_type;
    bool m_employer_savings_amount_type_isSet;
    bool m_employer_savings_amount_type_isValid;

    QDateTime m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    QString m_external_destination_id;
    bool m_external_destination_id_isSet;
    bool m_external_destination_id_isValid;

    qint32 m_frequency_id;
    bool m_frequency_id_isSet;
    bool m_frequency_id_isValid;

    double m_mandatory_amount;
    bool m_mandatory_amount_isSet;
    bool m_mandatory_amount_isValid;

    QString m_mandatory_amount_type;
    bool m_mandatory_amount_type_isSet;
    bool m_mandatory_amount_type_isValid;

    double m_post_tax_savings_amount;
    bool m_post_tax_savings_amount_isSet;
    bool m_post_tax_savings_amount_isValid;

    QString m_post_tax_savings_amount_type;
    bool m_post_tax_savings_amount_type_isSet;
    bool m_post_tax_savings_amount_type_isValid;

    double m_pre_tax_savings_amount;
    bool m_pre_tax_savings_amount_isSet;
    bool m_pre_tax_savings_amount_isValid;

    QString m_pre_tax_savings_amount_type;
    bool m_pre_tax_savings_amount_type_isSet;
    bool m_pre_tax_savings_amount_type_isValid;

    QDateTime m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISavingsStrategyModel)

#endif // OAISavingsStrategyModel_H
