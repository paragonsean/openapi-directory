/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFrequencyTypesModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFrequencyTypesModel::OAIFrequencyTypesModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFrequencyTypesModel::OAIFrequencyTypesModel() {
    this->initializeModel();
}

OAIFrequencyTypesModel::~OAIFrequencyTypesModel() {}

void OAIFrequencyTypesModel::initializeModel() {

    m_frequency_types_isSet = false;
    m_frequency_types_isValid = false;
}

void OAIFrequencyTypesModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFrequencyTypesModel::fromJsonObject(QJsonObject json) {

    m_frequency_types_isValid = ::OpenAPI::fromJsonValue(m_frequency_types, json[QString("frequencyTypes")]);
    m_frequency_types_isSet = !json[QString("frequencyTypes")].isNull() && m_frequency_types_isValid;
}

QString OAIFrequencyTypesModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFrequencyTypesModel::asJsonObject() const {
    QJsonObject obj;
    if (m_frequency_types.size() > 0) {
        obj.insert(QString("frequencyTypes"), ::OpenAPI::toJsonValue(m_frequency_types));
    }
    return obj;
}

QList<OAIFrequencyTypeModel> OAIFrequencyTypesModel::getFrequencyTypes() const {
    return m_frequency_types;
}
void OAIFrequencyTypesModel::setFrequencyTypes(const QList<OAIFrequencyTypeModel> &frequency_types) {
    m_frequency_types = frequency_types;
    m_frequency_types_isSet = true;
}

bool OAIFrequencyTypesModel::is_frequency_types_Set() const{
    return m_frequency_types_isSet;
}

bool OAIFrequencyTypesModel::is_frequency_types_Valid() const{
    return m_frequency_types_isValid;
}

bool OAIFrequencyTypesModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_frequency_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFrequencyTypesModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
