/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDemographicsDependentModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDemographicsDependentModel::OAIDemographicsDependentModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDemographicsDependentModel::OAIDemographicsDependentModel() {
    this->initializeModel();
}

OAIDemographicsDependentModel::~OAIDemographicsDependentModel() {}

void OAIDemographicsDependentModel::initializeModel() {

    m_birth_date_isSet = false;
    m_birth_date_isValid = false;

    m_dependent_of_isSet = false;
    m_dependent_of_isValid = false;

    m_external_destination_id_isSet = false;
    m_external_destination_id_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_relationship_isSet = false;
    m_relationship_isValid = false;
}

void OAIDemographicsDependentModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDemographicsDependentModel::fromJsonObject(QJsonObject json) {

    m_birth_date_isValid = ::OpenAPI::fromJsonValue(m_birth_date, json[QString("birthDate")]);
    m_birth_date_isSet = !json[QString("birthDate")].isNull() && m_birth_date_isValid;

    m_dependent_of_isValid = ::OpenAPI::fromJsonValue(m_dependent_of, json[QString("dependentOf")]);
    m_dependent_of_isSet = !json[QString("dependentOf")].isNull() && m_dependent_of_isValid;

    m_external_destination_id_isValid = ::OpenAPI::fromJsonValue(m_external_destination_id, json[QString("externalDestinationId")]);
    m_external_destination_id_isSet = !json[QString("externalDestinationId")].isNull() && m_external_destination_id_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("lastName")]);
    m_last_name_isSet = !json[QString("lastName")].isNull() && m_last_name_isValid;

    m_relationship_isValid = ::OpenAPI::fromJsonValue(m_relationship, json[QString("relationship")]);
    m_relationship_isSet = !json[QString("relationship")].isNull() && m_relationship_isValid;
}

QString OAIDemographicsDependentModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDemographicsDependentModel::asJsonObject() const {
    QJsonObject obj;
    if (m_birth_date_isSet) {
        obj.insert(QString("birthDate"), ::OpenAPI::toJsonValue(m_birth_date));
    }
    if (m_dependent_of_isSet) {
        obj.insert(QString("dependentOf"), ::OpenAPI::toJsonValue(m_dependent_of));
    }
    if (m_external_destination_id_isSet) {
        obj.insert(QString("externalDestinationId"), ::OpenAPI::toJsonValue(m_external_destination_id));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("firstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("lastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_relationship_isSet) {
        obj.insert(QString("relationship"), ::OpenAPI::toJsonValue(m_relationship));
    }
    return obj;
}

QDateTime OAIDemographicsDependentModel::getBirthDate() const {
    return m_birth_date;
}
void OAIDemographicsDependentModel::setBirthDate(const QDateTime &birth_date) {
    m_birth_date = birth_date;
    m_birth_date_isSet = true;
}

bool OAIDemographicsDependentModel::is_birth_date_Set() const{
    return m_birth_date_isSet;
}

bool OAIDemographicsDependentModel::is_birth_date_Valid() const{
    return m_birth_date_isValid;
}

QString OAIDemographicsDependentModel::getDependentOf() const {
    return m_dependent_of;
}
void OAIDemographicsDependentModel::setDependentOf(const QString &dependent_of) {
    m_dependent_of = dependent_of;
    m_dependent_of_isSet = true;
}

bool OAIDemographicsDependentModel::is_dependent_of_Set() const{
    return m_dependent_of_isSet;
}

bool OAIDemographicsDependentModel::is_dependent_of_Valid() const{
    return m_dependent_of_isValid;
}

QString OAIDemographicsDependentModel::getExternalDestinationId() const {
    return m_external_destination_id;
}
void OAIDemographicsDependentModel::setExternalDestinationId(const QString &external_destination_id) {
    m_external_destination_id = external_destination_id;
    m_external_destination_id_isSet = true;
}

bool OAIDemographicsDependentModel::is_external_destination_id_Set() const{
    return m_external_destination_id_isSet;
}

bool OAIDemographicsDependentModel::is_external_destination_id_Valid() const{
    return m_external_destination_id_isValid;
}

QString OAIDemographicsDependentModel::getFirstName() const {
    return m_first_name;
}
void OAIDemographicsDependentModel::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIDemographicsDependentModel::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIDemographicsDependentModel::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIDemographicsDependentModel::getLastName() const {
    return m_last_name;
}
void OAIDemographicsDependentModel::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIDemographicsDependentModel::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIDemographicsDependentModel::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAIDemographicsDependentModel::getRelationship() const {
    return m_relationship;
}
void OAIDemographicsDependentModel::setRelationship(const QString &relationship) {
    m_relationship = relationship;
    m_relationship_isSet = true;
}

bool OAIDemographicsDependentModel::is_relationship_Set() const{
    return m_relationship_isSet;
}

bool OAIDemographicsDependentModel::is_relationship_Valid() const{
    return m_relationship_isValid;
}

bool OAIDemographicsDependentModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_birth_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dependent_of_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_destination_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_relationship_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDemographicsDependentModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_birth_date_isValid && m_dependent_of_isValid && m_first_name_isValid && m_last_name_isValid && m_relationship_isValid && true;
}

} // namespace OpenAPI
