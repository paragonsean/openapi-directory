/**
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILiabilityWithIdModel.h
 *
 * 
 */

#ifndef OAILiabilityWithIdModel_H
#define OAILiabilityWithIdModel_H

#include <QJsonObject>

#include "OAIObjectLink.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIObjectLink;

class OAILiabilityWithIdModel : public OAIObject {
public:
    OAILiabilityWithIdModel();
    OAILiabilityWithIdModel(QString json);
    ~OAILiabilityWithIdModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getBalance() const;
    void setBalance(const double &balance);
    bool is_balance_Set() const;
    bool is_balance_Valid() const;

    QDateTime getBalanceAsOfDate() const;
    void setBalanceAsOfDate(const QDateTime &balance_as_of_date);
    bool is_balance_as_of_date_Set() const;
    bool is_balance_as_of_date_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getExternalDestinationId() const;
    void setExternalDestinationId(const QString &external_destination_id);
    bool is_external_destination_id_Set() const;
    bool is_external_destination_id_Valid() const;

    QString getExternalSourceId() const;
    void setExternalSourceId(const QString &external_source_id);
    bool is_external_source_id_Set() const;
    bool is_external_source_id_Valid() const;

    QString getExternalSourceName() const;
    void setExternalSourceName(const QString &external_source_name);
    bool is_external_source_name_Set() const;
    bool is_external_source_name_Valid() const;

    qint32 getFactFinderId() const;
    void setFactFinderId(const qint32 &fact_finder_id);
    bool is_fact_finder_id_Set() const;
    bool is_fact_finder_id_Valid() const;

    qint32 getFrequency() const;
    void setFrequency(const qint32 &frequency);
    bool is_frequency_Set() const;
    bool is_frequency_Valid() const;

    double getInterestRate() const;
    void setInterestRate(const double &interest_rate);
    bool is_interest_rate_Set() const;
    bool is_interest_rate_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    qint32 getLiabilityId() const;
    void setLiabilityId(const qint32 &liability_id);
    bool is_liability_id_Set() const;
    bool is_liability_id_Valid() const;

    qint32 getLiabilityType() const;
    void setLiabilityType(const qint32 &liability_type);
    bool is_liability_type_Set() const;
    bool is_liability_type_Valid() const;

    QList<OAIObjectLink> getLinks() const;
    void setLinks(const QList<OAIObjectLink> &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QDateTime getLoanDate() const;
    void setLoanDate(const QDateTime &loan_date);
    bool is_loan_date_Set() const;
    bool is_loan_date_Valid() const;

    double getOriginalPrincipal() const;
    void setOriginalPrincipal(const double &original_principal);
    bool is_original_principal_Set() const;
    bool is_original_principal_Valid() const;

    QString getOwner() const;
    void setOwner(const QString &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    double getPayment() const;
    void setPayment(const double &payment);
    bool is_payment_Set() const;
    bool is_payment_Valid() const;

    QString getPaymentType() const;
    void setPaymentType(const QString &payment_type);
    bool is_payment_type_Set() const;
    bool is_payment_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_balance;
    bool m_balance_isSet;
    bool m_balance_isValid;

    QDateTime m_balance_as_of_date;
    bool m_balance_as_of_date_isSet;
    bool m_balance_as_of_date_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_external_destination_id;
    bool m_external_destination_id_isSet;
    bool m_external_destination_id_isValid;

    QString m_external_source_id;
    bool m_external_source_id_isSet;
    bool m_external_source_id_isValid;

    QString m_external_source_name;
    bool m_external_source_name_isSet;
    bool m_external_source_name_isValid;

    qint32 m_fact_finder_id;
    bool m_fact_finder_id_isSet;
    bool m_fact_finder_id_isValid;

    qint32 m_frequency;
    bool m_frequency_isSet;
    bool m_frequency_isValid;

    double m_interest_rate;
    bool m_interest_rate_isSet;
    bool m_interest_rate_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    qint32 m_liability_id;
    bool m_liability_id_isSet;
    bool m_liability_id_isValid;

    qint32 m_liability_type;
    bool m_liability_type_isSet;
    bool m_liability_type_isValid;

    QList<OAIObjectLink> m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QDateTime m_loan_date;
    bool m_loan_date_isSet;
    bool m_loan_date_isValid;

    double m_original_principal;
    bool m_original_principal_isSet;
    bool m_original_principal_isValid;

    QString m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    double m_payment;
    bool m_payment_isSet;
    bool m_payment_isValid;

    QString m_payment_type;
    bool m_payment_type_isSet;
    bool m_payment_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILiabilityWithIdModel)

#endif // OAILiabilityWithIdModel_H
