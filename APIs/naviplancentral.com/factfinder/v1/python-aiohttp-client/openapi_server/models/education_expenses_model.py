# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.education_expense_with_id_model import EducationExpenseWithIdModel
from openapi_server import util


class EducationExpensesModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, education_expenses: List[EducationExpenseWithIdModel]=None):
        """EducationExpensesModel - a model defined in OpenAPI

        :param education_expenses: The education_expenses of this EducationExpensesModel.
        """
        self.openapi_types = {
            'education_expenses': List[EducationExpenseWithIdModel]
        }

        self.attribute_map = {
            'education_expenses': 'educationExpenses'
        }

        self._education_expenses = education_expenses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EducationExpensesModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EducationExpensesModel of this EducationExpensesModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def education_expenses(self):
        """Gets the education_expenses of this EducationExpensesModel.


        :return: The education_expenses of this EducationExpensesModel.
        :rtype: List[EducationExpenseWithIdModel]
        """
        return self._education_expenses

    @education_expenses.setter
    def education_expenses(self, education_expenses):
        """Sets the education_expenses of this EducationExpensesModel.


        :param education_expenses: The education_expenses of this EducationExpensesModel.
        :type education_expenses: List[EducationExpenseWithIdModel]
        """

        self._education_expenses = education_expenses
