# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.expense_type_model import ExpenseTypeModel
from openapi_server import util


class ExpenseTypesModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expense_types: List[ExpenseTypeModel]=None):
        """ExpenseTypesModel - a model defined in OpenAPI

        :param expense_types: The expense_types of this ExpenseTypesModel.
        """
        self.openapi_types = {
            'expense_types': List[ExpenseTypeModel]
        }

        self.attribute_map = {
            'expense_types': 'expenseTypes'
        }

        self._expense_types = expense_types

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExpenseTypesModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExpenseTypesModel of this ExpenseTypesModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expense_types(self):
        """Gets the expense_types of this ExpenseTypesModel.


        :return: The expense_types of this ExpenseTypesModel.
        :rtype: List[ExpenseTypeModel]
        """
        return self._expense_types

    @expense_types.setter
    def expense_types(self, expense_types):
        """Sets the expense_types of this ExpenseTypesModel.


        :param expense_types: The expense_types of this ExpenseTypesModel.
        :type expense_types: List[ExpenseTypeModel]
        """

        self._expense_types = expense_types
