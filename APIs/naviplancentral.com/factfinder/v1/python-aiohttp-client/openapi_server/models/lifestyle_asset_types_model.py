# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.lifestyle_asset_type_model import LifestyleAssetTypeModel
from openapi_server import util


class LifestyleAssetTypesModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lifestyle_asset_types: List[LifestyleAssetTypeModel]=None):
        """LifestyleAssetTypesModel - a model defined in OpenAPI

        :param lifestyle_asset_types: The lifestyle_asset_types of this LifestyleAssetTypesModel.
        """
        self.openapi_types = {
            'lifestyle_asset_types': List[LifestyleAssetTypeModel]
        }

        self.attribute_map = {
            'lifestyle_asset_types': 'lifestyleAssetTypes'
        }

        self._lifestyle_asset_types = lifestyle_asset_types

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LifestyleAssetTypesModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LifestyleAssetTypesModel of this LifestyleAssetTypesModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lifestyle_asset_types(self):
        """Gets the lifestyle_asset_types of this LifestyleAssetTypesModel.


        :return: The lifestyle_asset_types of this LifestyleAssetTypesModel.
        :rtype: List[LifestyleAssetTypeModel]
        """
        return self._lifestyle_asset_types

    @lifestyle_asset_types.setter
    def lifestyle_asset_types(self, lifestyle_asset_types):
        """Sets the lifestyle_asset_types of this LifestyleAssetTypesModel.


        :param lifestyle_asset_types: The lifestyle_asset_types of this LifestyleAssetTypesModel.
        :type lifestyle_asset_types: List[LifestyleAssetTypeModel]
        """

        self._lifestyle_asset_types = lifestyle_asset_types
