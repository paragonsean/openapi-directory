# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_with_sub_entities_model import AccountWithSubEntitiesModel
from openapi_server import util


class AccountsWithSubEntitiesModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accounts: List[AccountWithSubEntitiesModel]=None):
        """AccountsWithSubEntitiesModel - a model defined in OpenAPI

        :param accounts: The accounts of this AccountsWithSubEntitiesModel.
        """
        self.openapi_types = {
            'accounts': List[AccountWithSubEntitiesModel]
        }

        self.attribute_map = {
            'accounts': 'accounts'
        }

        self._accounts = accounts

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountsWithSubEntitiesModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountsWithSubEntitiesModel of this AccountsWithSubEntitiesModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accounts(self):
        """Gets the accounts of this AccountsWithSubEntitiesModel.


        :return: The accounts of this AccountsWithSubEntitiesModel.
        :rtype: List[AccountWithSubEntitiesModel]
        """
        return self._accounts

    @accounts.setter
    def accounts(self, accounts):
        """Sets the accounts of this AccountsWithSubEntitiesModel.


        :param accounts: The accounts of this AccountsWithSubEntitiesModel.
        :type accounts: List[AccountWithSubEntitiesModel]
        """

        self._accounts = accounts
