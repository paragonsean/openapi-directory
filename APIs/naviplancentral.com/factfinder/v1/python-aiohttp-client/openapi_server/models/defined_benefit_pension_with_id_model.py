# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.object_link import ObjectLink
from openapi_server import util


class DefinedBenefitPensionWithIdModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, defined_benefit_pension_id: int=None, description: str=None, estimated_amount: float=None, external_destination_id: str=None, fact_finder_id: int=None, links: List[ObjectLink]=None, member: str=None, start_date: datetime=None):
        """DefinedBenefitPensionWithIdModel - a model defined in OpenAPI

        :param defined_benefit_pension_id: The defined_benefit_pension_id of this DefinedBenefitPensionWithIdModel.
        :param description: The description of this DefinedBenefitPensionWithIdModel.
        :param estimated_amount: The estimated_amount of this DefinedBenefitPensionWithIdModel.
        :param external_destination_id: The external_destination_id of this DefinedBenefitPensionWithIdModel.
        :param fact_finder_id: The fact_finder_id of this DefinedBenefitPensionWithIdModel.
        :param links: The links of this DefinedBenefitPensionWithIdModel.
        :param member: The member of this DefinedBenefitPensionWithIdModel.
        :param start_date: The start_date of this DefinedBenefitPensionWithIdModel.
        """
        self.openapi_types = {
            'defined_benefit_pension_id': int,
            'description': str,
            'estimated_amount': float,
            'external_destination_id': str,
            'fact_finder_id': int,
            'links': List[ObjectLink],
            'member': str,
            'start_date': datetime
        }

        self.attribute_map = {
            'defined_benefit_pension_id': 'definedBenefitPensionId',
            'description': 'description',
            'estimated_amount': 'estimatedAmount',
            'external_destination_id': 'externalDestinationId',
            'fact_finder_id': 'factFinderId',
            'links': 'links',
            'member': 'member',
            'start_date': 'startDate'
        }

        self._defined_benefit_pension_id = defined_benefit_pension_id
        self._description = description
        self._estimated_amount = estimated_amount
        self._external_destination_id = external_destination_id
        self._fact_finder_id = fact_finder_id
        self._links = links
        self._member = member
        self._start_date = start_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DefinedBenefitPensionWithIdModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DefinedBenefitPensionWithIdModel of this DefinedBenefitPensionWithIdModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def defined_benefit_pension_id(self):
        """Gets the defined_benefit_pension_id of this DefinedBenefitPensionWithIdModel.


        :return: The defined_benefit_pension_id of this DefinedBenefitPensionWithIdModel.
        :rtype: int
        """
        return self._defined_benefit_pension_id

    @defined_benefit_pension_id.setter
    def defined_benefit_pension_id(self, defined_benefit_pension_id):
        """Sets the defined_benefit_pension_id of this DefinedBenefitPensionWithIdModel.


        :param defined_benefit_pension_id: The defined_benefit_pension_id of this DefinedBenefitPensionWithIdModel.
        :type defined_benefit_pension_id: int
        """

        self._defined_benefit_pension_id = defined_benefit_pension_id

    @property
    def description(self):
        """Gets the description of this DefinedBenefitPensionWithIdModel.


        :return: The description of this DefinedBenefitPensionWithIdModel.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DefinedBenefitPensionWithIdModel.


        :param description: The description of this DefinedBenefitPensionWithIdModel.
        :type description: str
        """

        self._description = description

    @property
    def estimated_amount(self):
        """Gets the estimated_amount of this DefinedBenefitPensionWithIdModel.


        :return: The estimated_amount of this DefinedBenefitPensionWithIdModel.
        :rtype: float
        """
        return self._estimated_amount

    @estimated_amount.setter
    def estimated_amount(self, estimated_amount):
        """Sets the estimated_amount of this DefinedBenefitPensionWithIdModel.


        :param estimated_amount: The estimated_amount of this DefinedBenefitPensionWithIdModel.
        :type estimated_amount: float
        """

        self._estimated_amount = estimated_amount

    @property
    def external_destination_id(self):
        """Gets the external_destination_id of this DefinedBenefitPensionWithIdModel.


        :return: The external_destination_id of this DefinedBenefitPensionWithIdModel.
        :rtype: str
        """
        return self._external_destination_id

    @external_destination_id.setter
    def external_destination_id(self, external_destination_id):
        """Sets the external_destination_id of this DefinedBenefitPensionWithIdModel.


        :param external_destination_id: The external_destination_id of this DefinedBenefitPensionWithIdModel.
        :type external_destination_id: str
        """

        self._external_destination_id = external_destination_id

    @property
    def fact_finder_id(self):
        """Gets the fact_finder_id of this DefinedBenefitPensionWithIdModel.


        :return: The fact_finder_id of this DefinedBenefitPensionWithIdModel.
        :rtype: int
        """
        return self._fact_finder_id

    @fact_finder_id.setter
    def fact_finder_id(self, fact_finder_id):
        """Sets the fact_finder_id of this DefinedBenefitPensionWithIdModel.


        :param fact_finder_id: The fact_finder_id of this DefinedBenefitPensionWithIdModel.
        :type fact_finder_id: int
        """

        self._fact_finder_id = fact_finder_id

    @property
    def links(self):
        """Gets the links of this DefinedBenefitPensionWithIdModel.


        :return: The links of this DefinedBenefitPensionWithIdModel.
        :rtype: List[ObjectLink]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this DefinedBenefitPensionWithIdModel.


        :param links: The links of this DefinedBenefitPensionWithIdModel.
        :type links: List[ObjectLink]
        """

        self._links = links

    @property
    def member(self):
        """Gets the member of this DefinedBenefitPensionWithIdModel.


        :return: The member of this DefinedBenefitPensionWithIdModel.
        :rtype: str
        """
        return self._member

    @member.setter
    def member(self, member):
        """Sets the member of this DefinedBenefitPensionWithIdModel.


        :param member: The member of this DefinedBenefitPensionWithIdModel.
        :type member: str
        """
        allowed_values = ["Client", "CoClient"]  # noqa: E501
        if member not in allowed_values:
            raise ValueError(
                "Invalid value for `member` ({0}), must be one of {1}"
                .format(member, allowed_values)
            )

        self._member = member

    @property
    def start_date(self):
        """Gets the start_date of this DefinedBenefitPensionWithIdModel.


        :return: The start_date of this DefinedBenefitPensionWithIdModel.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this DefinedBenefitPensionWithIdModel.


        :param start_date: The start_date of this DefinedBenefitPensionWithIdModel.
        :type start_date: datetime
        """

        self._start_date = start_date
