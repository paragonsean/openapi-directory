# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.retirement_expense_with_id_model import RetirementExpenseWithIdModel
from openapi_server import util


class RetirementExpensesModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, retirement_expenses: List[RetirementExpenseWithIdModel]=None):
        """RetirementExpensesModel - a model defined in OpenAPI

        :param retirement_expenses: The retirement_expenses of this RetirementExpensesModel.
        """
        self.openapi_types = {
            'retirement_expenses': List[RetirementExpenseWithIdModel]
        }

        self.attribute_map = {
            'retirement_expenses': 'retirementExpenses'
        }

        self._retirement_expenses = retirement_expenses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RetirementExpensesModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RetirementExpensesModel of this RetirementExpensesModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def retirement_expenses(self):
        """Gets the retirement_expenses of this RetirementExpensesModel.


        :return: The retirement_expenses of this RetirementExpensesModel.
        :rtype: List[RetirementExpenseWithIdModel]
        """
        return self._retirement_expenses

    @retirement_expenses.setter
    def retirement_expenses(self, retirement_expenses):
        """Sets the retirement_expenses of this RetirementExpensesModel.


        :param retirement_expenses: The retirement_expenses of this RetirementExpensesModel.
        :type retirement_expenses: List[RetirementExpenseWithIdModel]
        """

        self._retirement_expenses = retirement_expenses
