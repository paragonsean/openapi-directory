# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClientModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_id: int=None, message: str=None, owner_user: str=None, plan_id: int=None, success: bool=None):
        """ClientModel - a model defined in OpenAPI

        :param client_id: The client_id of this ClientModel.
        :param message: The message of this ClientModel.
        :param owner_user: The owner_user of this ClientModel.
        :param plan_id: The plan_id of this ClientModel.
        :param success: The success of this ClientModel.
        """
        self.openapi_types = {
            'client_id': int,
            'message': str,
            'owner_user': str,
            'plan_id': int,
            'success': bool
        }

        self.attribute_map = {
            'client_id': 'clientId',
            'message': 'message',
            'owner_user': 'ownerUser',
            'plan_id': 'planId',
            'success': 'success'
        }

        self._client_id = client_id
        self._message = message
        self._owner_user = owner_user
        self._plan_id = plan_id
        self._success = success

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClientModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClientModel of this ClientModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_id(self):
        """Gets the client_id of this ClientModel.


        :return: The client_id of this ClientModel.
        :rtype: int
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this ClientModel.


        :param client_id: The client_id of this ClientModel.
        :type client_id: int
        """

        self._client_id = client_id

    @property
    def message(self):
        """Gets the message of this ClientModel.


        :return: The message of this ClientModel.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this ClientModel.


        :param message: The message of this ClientModel.
        :type message: str
        """

        self._message = message

    @property
    def owner_user(self):
        """Gets the owner_user of this ClientModel.


        :return: The owner_user of this ClientModel.
        :rtype: str
        """
        return self._owner_user

    @owner_user.setter
    def owner_user(self, owner_user):
        """Sets the owner_user of this ClientModel.


        :param owner_user: The owner_user of this ClientModel.
        :type owner_user: str
        """

        self._owner_user = owner_user

    @property
    def plan_id(self):
        """Gets the plan_id of this ClientModel.


        :return: The plan_id of this ClientModel.
        :rtype: int
        """
        return self._plan_id

    @plan_id.setter
    def plan_id(self, plan_id):
        """Sets the plan_id of this ClientModel.


        :param plan_id: The plan_id of this ClientModel.
        :type plan_id: int
        """

        self._plan_id = plan_id

    @property
    def success(self):
        """Gets the success of this ClientModel.


        :return: The success of this ClientModel.
        :rtype: bool
        """
        return self._success

    @success.setter
    def success(self, success):
        """Sets the success of this ClientModel.


        :param success: The success of this ClientModel.
        :type success: bool
        """

        self._success = success
