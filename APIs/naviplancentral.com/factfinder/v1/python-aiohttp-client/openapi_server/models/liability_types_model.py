# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.liability_type_model import LiabilityTypeModel
from openapi_server import util


class LiabilityTypesModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, liability_types: List[LiabilityTypeModel]=None):
        """LiabilityTypesModel - a model defined in OpenAPI

        :param liability_types: The liability_types of this LiabilityTypesModel.
        """
        self.openapi_types = {
            'liability_types': List[LiabilityTypeModel]
        }

        self.attribute_map = {
            'liability_types': 'liabilityTypes'
        }

        self._liability_types = liability_types

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LiabilityTypesModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LiabilityTypesModel of this LiabilityTypesModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def liability_types(self):
        """Gets the liability_types of this LiabilityTypesModel.


        :return: The liability_types of this LiabilityTypesModel.
        :rtype: List[LiabilityTypeModel]
        """
        return self._liability_types

    @liability_types.setter
    def liability_types(self, liability_types):
        """Sets the liability_types of this LiabilityTypesModel.


        :param liability_types: The liability_types of this LiabilityTypesModel.
        :type liability_types: List[LiabilityTypeModel]
        """

        self._liability_types = liability_types
