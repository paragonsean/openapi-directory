# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IFamilyHeadDomainObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, already_retired: bool=None, birth_date: datetime=None, external_destination_id: str=None, first_name: str=None, gender: str=None, last_name: str=None, tax_filing_status: int=None):
        """IFamilyHeadDomainObject - a model defined in OpenAPI

        :param already_retired: The already_retired of this IFamilyHeadDomainObject.
        :param birth_date: The birth_date of this IFamilyHeadDomainObject.
        :param external_destination_id: The external_destination_id of this IFamilyHeadDomainObject.
        :param first_name: The first_name of this IFamilyHeadDomainObject.
        :param gender: The gender of this IFamilyHeadDomainObject.
        :param last_name: The last_name of this IFamilyHeadDomainObject.
        :param tax_filing_status: The tax_filing_status of this IFamilyHeadDomainObject.
        """
        self.openapi_types = {
            'already_retired': bool,
            'birth_date': datetime,
            'external_destination_id': str,
            'first_name': str,
            'gender': str,
            'last_name': str,
            'tax_filing_status': int
        }

        self.attribute_map = {
            'already_retired': 'alreadyRetired',
            'birth_date': 'birthDate',
            'external_destination_id': 'externalDestinationId',
            'first_name': 'firstName',
            'gender': 'gender',
            'last_name': 'lastName',
            'tax_filing_status': 'taxFilingStatus'
        }

        self._already_retired = already_retired
        self._birth_date = birth_date
        self._external_destination_id = external_destination_id
        self._first_name = first_name
        self._gender = gender
        self._last_name = last_name
        self._tax_filing_status = tax_filing_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IFamilyHeadDomainObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IFamilyHeadDomainObject of this IFamilyHeadDomainObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def already_retired(self):
        """Gets the already_retired of this IFamilyHeadDomainObject.


        :return: The already_retired of this IFamilyHeadDomainObject.
        :rtype: bool
        """
        return self._already_retired

    @already_retired.setter
    def already_retired(self, already_retired):
        """Sets the already_retired of this IFamilyHeadDomainObject.


        :param already_retired: The already_retired of this IFamilyHeadDomainObject.
        :type already_retired: bool
        """

        self._already_retired = already_retired

    @property
    def birth_date(self):
        """Gets the birth_date of this IFamilyHeadDomainObject.


        :return: The birth_date of this IFamilyHeadDomainObject.
        :rtype: datetime
        """
        return self._birth_date

    @birth_date.setter
    def birth_date(self, birth_date):
        """Sets the birth_date of this IFamilyHeadDomainObject.


        :param birth_date: The birth_date of this IFamilyHeadDomainObject.
        :type birth_date: datetime
        """

        self._birth_date = birth_date

    @property
    def external_destination_id(self):
        """Gets the external_destination_id of this IFamilyHeadDomainObject.


        :return: The external_destination_id of this IFamilyHeadDomainObject.
        :rtype: str
        """
        return self._external_destination_id

    @external_destination_id.setter
    def external_destination_id(self, external_destination_id):
        """Sets the external_destination_id of this IFamilyHeadDomainObject.


        :param external_destination_id: The external_destination_id of this IFamilyHeadDomainObject.
        :type external_destination_id: str
        """

        self._external_destination_id = external_destination_id

    @property
    def first_name(self):
        """Gets the first_name of this IFamilyHeadDomainObject.


        :return: The first_name of this IFamilyHeadDomainObject.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this IFamilyHeadDomainObject.


        :param first_name: The first_name of this IFamilyHeadDomainObject.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def gender(self):
        """Gets the gender of this IFamilyHeadDomainObject.


        :return: The gender of this IFamilyHeadDomainObject.
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this IFamilyHeadDomainObject.


        :param gender: The gender of this IFamilyHeadDomainObject.
        :type gender: str
        """
        allowed_values = ["Male", "Female", "None"]  # noqa: E501
        if gender not in allowed_values:
            raise ValueError(
                "Invalid value for `gender` ({0}), must be one of {1}"
                .format(gender, allowed_values)
            )

        self._gender = gender

    @property
    def last_name(self):
        """Gets the last_name of this IFamilyHeadDomainObject.


        :return: The last_name of this IFamilyHeadDomainObject.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this IFamilyHeadDomainObject.


        :param last_name: The last_name of this IFamilyHeadDomainObject.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def tax_filing_status(self):
        """Gets the tax_filing_status of this IFamilyHeadDomainObject.


        :return: The tax_filing_status of this IFamilyHeadDomainObject.
        :rtype: int
        """
        return self._tax_filing_status

    @tax_filing_status.setter
    def tax_filing_status(self, tax_filing_status):
        """Sets the tax_filing_status of this IFamilyHeadDomainObject.


        :param tax_filing_status: The tax_filing_status of this IFamilyHeadDomainObject.
        :type tax_filing_status: int
        """

        self._tax_filing_status = tax_filing_status
