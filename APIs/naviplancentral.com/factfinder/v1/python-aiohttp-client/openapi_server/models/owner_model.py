# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OwnerModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, owner: str=None, owner_dependent_id: int=None):
        """OwnerModel - a model defined in OpenAPI

        :param display_name: The display_name of this OwnerModel.
        :param owner: The owner of this OwnerModel.
        :param owner_dependent_id: The owner_dependent_id of this OwnerModel.
        """
        self.openapi_types = {
            'display_name': str,
            'owner': str,
            'owner_dependent_id': int
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'owner': 'owner',
            'owner_dependent_id': 'ownerDependentId'
        }

        self._display_name = display_name
        self._owner = owner
        self._owner_dependent_id = owner_dependent_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OwnerModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OwnerModel of this OwnerModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this OwnerModel.


        :return: The display_name of this OwnerModel.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this OwnerModel.


        :param display_name: The display_name of this OwnerModel.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def owner(self):
        """Gets the owner of this OwnerModel.


        :return: The owner of this OwnerModel.
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this OwnerModel.


        :param owner: The owner of this OwnerModel.
        :type owner: str
        """

        self._owner = owner

    @property
    def owner_dependent_id(self):
        """Gets the owner_dependent_id of this OwnerModel.


        :return: The owner_dependent_id of this OwnerModel.
        :rtype: int
        """
        return self._owner_dependent_id

    @owner_dependent_id.setter
    def owner_dependent_id(self, owner_dependent_id):
        """Sets the owner_dependent_id of this OwnerModel.


        :param owner_dependent_id: The owner_dependent_id of this OwnerModel.
        :type owner_dependent_id: int
        """

        self._owner_dependent_id = owner_dependent_id
