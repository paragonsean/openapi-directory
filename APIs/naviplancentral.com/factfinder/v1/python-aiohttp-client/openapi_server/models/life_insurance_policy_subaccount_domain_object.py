# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LifeInsurancePolicySubaccountDomainObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, external_destination_id: str=None, life_insurance_policy_id: int=None, life_insurance_policy_subaccount_id: int=None, market_value: float=None, symbol: str=None):
        """LifeInsurancePolicySubaccountDomainObject - a model defined in OpenAPI

        :param description: The description of this LifeInsurancePolicySubaccountDomainObject.
        :param external_destination_id: The external_destination_id of this LifeInsurancePolicySubaccountDomainObject.
        :param life_insurance_policy_id: The life_insurance_policy_id of this LifeInsurancePolicySubaccountDomainObject.
        :param life_insurance_policy_subaccount_id: The life_insurance_policy_subaccount_id of this LifeInsurancePolicySubaccountDomainObject.
        :param market_value: The market_value of this LifeInsurancePolicySubaccountDomainObject.
        :param symbol: The symbol of this LifeInsurancePolicySubaccountDomainObject.
        """
        self.openapi_types = {
            'description': str,
            'external_destination_id': str,
            'life_insurance_policy_id': int,
            'life_insurance_policy_subaccount_id': int,
            'market_value': float,
            'symbol': str
        }

        self.attribute_map = {
            'description': 'description',
            'external_destination_id': 'externalDestinationId',
            'life_insurance_policy_id': 'lifeInsurancePolicyId',
            'life_insurance_policy_subaccount_id': 'lifeInsurancePolicySubaccountId',
            'market_value': 'marketValue',
            'symbol': 'symbol'
        }

        self._description = description
        self._external_destination_id = external_destination_id
        self._life_insurance_policy_id = life_insurance_policy_id
        self._life_insurance_policy_subaccount_id = life_insurance_policy_subaccount_id
        self._market_value = market_value
        self._symbol = symbol

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LifeInsurancePolicySubaccountDomainObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LifeInsurancePolicySubaccountDomainObject of this LifeInsurancePolicySubaccountDomainObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this LifeInsurancePolicySubaccountDomainObject.


        :return: The description of this LifeInsurancePolicySubaccountDomainObject.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this LifeInsurancePolicySubaccountDomainObject.


        :param description: The description of this LifeInsurancePolicySubaccountDomainObject.
        :type description: str
        """

        self._description = description

    @property
    def external_destination_id(self):
        """Gets the external_destination_id of this LifeInsurancePolicySubaccountDomainObject.


        :return: The external_destination_id of this LifeInsurancePolicySubaccountDomainObject.
        :rtype: str
        """
        return self._external_destination_id

    @external_destination_id.setter
    def external_destination_id(self, external_destination_id):
        """Sets the external_destination_id of this LifeInsurancePolicySubaccountDomainObject.


        :param external_destination_id: The external_destination_id of this LifeInsurancePolicySubaccountDomainObject.
        :type external_destination_id: str
        """

        self._external_destination_id = external_destination_id

    @property
    def life_insurance_policy_id(self):
        """Gets the life_insurance_policy_id of this LifeInsurancePolicySubaccountDomainObject.


        :return: The life_insurance_policy_id of this LifeInsurancePolicySubaccountDomainObject.
        :rtype: int
        """
        return self._life_insurance_policy_id

    @life_insurance_policy_id.setter
    def life_insurance_policy_id(self, life_insurance_policy_id):
        """Sets the life_insurance_policy_id of this LifeInsurancePolicySubaccountDomainObject.


        :param life_insurance_policy_id: The life_insurance_policy_id of this LifeInsurancePolicySubaccountDomainObject.
        :type life_insurance_policy_id: int
        """

        self._life_insurance_policy_id = life_insurance_policy_id

    @property
    def life_insurance_policy_subaccount_id(self):
        """Gets the life_insurance_policy_subaccount_id of this LifeInsurancePolicySubaccountDomainObject.


        :return: The life_insurance_policy_subaccount_id of this LifeInsurancePolicySubaccountDomainObject.
        :rtype: int
        """
        return self._life_insurance_policy_subaccount_id

    @life_insurance_policy_subaccount_id.setter
    def life_insurance_policy_subaccount_id(self, life_insurance_policy_subaccount_id):
        """Sets the life_insurance_policy_subaccount_id of this LifeInsurancePolicySubaccountDomainObject.


        :param life_insurance_policy_subaccount_id: The life_insurance_policy_subaccount_id of this LifeInsurancePolicySubaccountDomainObject.
        :type life_insurance_policy_subaccount_id: int
        """

        self._life_insurance_policy_subaccount_id = life_insurance_policy_subaccount_id

    @property
    def market_value(self):
        """Gets the market_value of this LifeInsurancePolicySubaccountDomainObject.


        :return: The market_value of this LifeInsurancePolicySubaccountDomainObject.
        :rtype: float
        """
        return self._market_value

    @market_value.setter
    def market_value(self, market_value):
        """Sets the market_value of this LifeInsurancePolicySubaccountDomainObject.


        :param market_value: The market_value of this LifeInsurancePolicySubaccountDomainObject.
        :type market_value: float
        """

        self._market_value = market_value

    @property
    def symbol(self):
        """Gets the symbol of this LifeInsurancePolicySubaccountDomainObject.


        :return: The symbol of this LifeInsurancePolicySubaccountDomainObject.
        :rtype: str
        """
        return self._symbol

    @symbol.setter
    def symbol(self, symbol):
        """Sets the symbol of this LifeInsurancePolicySubaccountDomainObject.


        :param symbol: The symbol of this LifeInsurancePolicySubaccountDomainObject.
        :type symbol: str
        """

        self._symbol = symbol
