# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.expense_with_id_model import ExpenseWithIdModel
from openapi_server import util


class ExpensesModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expenses: List[ExpenseWithIdModel]=None):
        """ExpensesModel - a model defined in OpenAPI

        :param expenses: The expenses of this ExpensesModel.
        """
        self.openapi_types = {
            'expenses': List[ExpenseWithIdModel]
        }

        self.attribute_map = {
            'expenses': 'expenses'
        }

        self._expenses = expenses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExpensesModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExpensesModel of this ExpensesModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expenses(self):
        """Gets the expenses of this ExpensesModel.


        :return: The expenses of this ExpensesModel.
        :rtype: List[ExpenseWithIdModel]
        """
        return self._expenses

    @expenses.setter
    def expenses(self, expenses):
        """Sets the expenses of this ExpensesModel.


        :param expenses: The expenses of this ExpensesModel.
        :type expenses: List[ExpenseWithIdModel]
        """

        self._expenses = expenses
