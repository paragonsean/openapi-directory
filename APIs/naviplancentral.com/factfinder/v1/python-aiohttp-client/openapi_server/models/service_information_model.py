# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServiceInformationModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, schema_version: int=None, service_version: str=None, status: str=None):
        """ServiceInformationModel - a model defined in OpenAPI

        :param name: The name of this ServiceInformationModel.
        :param schema_version: The schema_version of this ServiceInformationModel.
        :param service_version: The service_version of this ServiceInformationModel.
        :param status: The status of this ServiceInformationModel.
        """
        self.openapi_types = {
            'name': str,
            'schema_version': int,
            'service_version': str,
            'status': str
        }

        self.attribute_map = {
            'name': 'name',
            'schema_version': 'schemaVersion',
            'service_version': 'serviceVersion',
            'status': 'status'
        }

        self._name = name
        self._schema_version = schema_version
        self._service_version = service_version
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceInformationModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceInformationModel of this ServiceInformationModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ServiceInformationModel.


        :return: The name of this ServiceInformationModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ServiceInformationModel.


        :param name: The name of this ServiceInformationModel.
        :type name: str
        """

        self._name = name

    @property
    def schema_version(self):
        """Gets the schema_version of this ServiceInformationModel.


        :return: The schema_version of this ServiceInformationModel.
        :rtype: int
        """
        return self._schema_version

    @schema_version.setter
    def schema_version(self, schema_version):
        """Sets the schema_version of this ServiceInformationModel.


        :param schema_version: The schema_version of this ServiceInformationModel.
        :type schema_version: int
        """

        self._schema_version = schema_version

    @property
    def service_version(self):
        """Gets the service_version of this ServiceInformationModel.


        :return: The service_version of this ServiceInformationModel.
        :rtype: str
        """
        return self._service_version

    @service_version.setter
    def service_version(self, service_version):
        """Sets the service_version of this ServiceInformationModel.


        :param service_version: The service_version of this ServiceInformationModel.
        :type service_version: str
        """

        self._service_version = service_version

    @property
    def status(self):
        """Gets the status of this ServiceInformationModel.


        :return: The status of this ServiceInformationModel.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ServiceInformationModel.


        :param status: The status of this ServiceInformationModel.
        :type status: str
        """

        self._status = status
