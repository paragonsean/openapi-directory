# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IIncomeDomainObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annual_amount: float=None, description: str=None, end_date: datetime=None, external_destination_id: str=None, fact_finder_id: int=None, income_id: int=None, income_type_id: int=None, owner: str=None, start_date: datetime=None):
        """IIncomeDomainObject - a model defined in OpenAPI

        :param annual_amount: The annual_amount of this IIncomeDomainObject.
        :param description: The description of this IIncomeDomainObject.
        :param end_date: The end_date of this IIncomeDomainObject.
        :param external_destination_id: The external_destination_id of this IIncomeDomainObject.
        :param fact_finder_id: The fact_finder_id of this IIncomeDomainObject.
        :param income_id: The income_id of this IIncomeDomainObject.
        :param income_type_id: The income_type_id of this IIncomeDomainObject.
        :param owner: The owner of this IIncomeDomainObject.
        :param start_date: The start_date of this IIncomeDomainObject.
        """
        self.openapi_types = {
            'annual_amount': float,
            'description': str,
            'end_date': datetime,
            'external_destination_id': str,
            'fact_finder_id': int,
            'income_id': int,
            'income_type_id': int,
            'owner': str,
            'start_date': datetime
        }

        self.attribute_map = {
            'annual_amount': 'annualAmount',
            'description': 'description',
            'end_date': 'endDate',
            'external_destination_id': 'externalDestinationId',
            'fact_finder_id': 'factFinderId',
            'income_id': 'incomeId',
            'income_type_id': 'incomeTypeId',
            'owner': 'owner',
            'start_date': 'startDate'
        }

        self._annual_amount = annual_amount
        self._description = description
        self._end_date = end_date
        self._external_destination_id = external_destination_id
        self._fact_finder_id = fact_finder_id
        self._income_id = income_id
        self._income_type_id = income_type_id
        self._owner = owner
        self._start_date = start_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IIncomeDomainObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IIncomeDomainObject of this IIncomeDomainObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annual_amount(self):
        """Gets the annual_amount of this IIncomeDomainObject.


        :return: The annual_amount of this IIncomeDomainObject.
        :rtype: float
        """
        return self._annual_amount

    @annual_amount.setter
    def annual_amount(self, annual_amount):
        """Sets the annual_amount of this IIncomeDomainObject.


        :param annual_amount: The annual_amount of this IIncomeDomainObject.
        :type annual_amount: float
        """

        self._annual_amount = annual_amount

    @property
    def description(self):
        """Gets the description of this IIncomeDomainObject.


        :return: The description of this IIncomeDomainObject.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this IIncomeDomainObject.


        :param description: The description of this IIncomeDomainObject.
        :type description: str
        """

        self._description = description

    @property
    def end_date(self):
        """Gets the end_date of this IIncomeDomainObject.


        :return: The end_date of this IIncomeDomainObject.
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this IIncomeDomainObject.


        :param end_date: The end_date of this IIncomeDomainObject.
        :type end_date: datetime
        """

        self._end_date = end_date

    @property
    def external_destination_id(self):
        """Gets the external_destination_id of this IIncomeDomainObject.


        :return: The external_destination_id of this IIncomeDomainObject.
        :rtype: str
        """
        return self._external_destination_id

    @external_destination_id.setter
    def external_destination_id(self, external_destination_id):
        """Sets the external_destination_id of this IIncomeDomainObject.


        :param external_destination_id: The external_destination_id of this IIncomeDomainObject.
        :type external_destination_id: str
        """

        self._external_destination_id = external_destination_id

    @property
    def fact_finder_id(self):
        """Gets the fact_finder_id of this IIncomeDomainObject.


        :return: The fact_finder_id of this IIncomeDomainObject.
        :rtype: int
        """
        return self._fact_finder_id

    @fact_finder_id.setter
    def fact_finder_id(self, fact_finder_id):
        """Sets the fact_finder_id of this IIncomeDomainObject.


        :param fact_finder_id: The fact_finder_id of this IIncomeDomainObject.
        :type fact_finder_id: int
        """

        self._fact_finder_id = fact_finder_id

    @property
    def income_id(self):
        """Gets the income_id of this IIncomeDomainObject.


        :return: The income_id of this IIncomeDomainObject.
        :rtype: int
        """
        return self._income_id

    @income_id.setter
    def income_id(self, income_id):
        """Sets the income_id of this IIncomeDomainObject.


        :param income_id: The income_id of this IIncomeDomainObject.
        :type income_id: int
        """

        self._income_id = income_id

    @property
    def income_type_id(self):
        """Gets the income_type_id of this IIncomeDomainObject.


        :return: The income_type_id of this IIncomeDomainObject.
        :rtype: int
        """
        return self._income_type_id

    @income_type_id.setter
    def income_type_id(self, income_type_id):
        """Sets the income_type_id of this IIncomeDomainObject.


        :param income_type_id: The income_type_id of this IIncomeDomainObject.
        :type income_type_id: int
        """

        self._income_type_id = income_type_id

    @property
    def owner(self):
        """Gets the owner of this IIncomeDomainObject.


        :return: The owner of this IIncomeDomainObject.
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this IIncomeDomainObject.


        :param owner: The owner of this IIncomeDomainObject.
        :type owner: str
        """
        allowed_values = ["Client", "CoClient"]  # noqa: E501
        if owner not in allowed_values:
            raise ValueError(
                "Invalid value for `owner` ({0}), must be one of {1}"
                .format(owner, allowed_values)
            )

        self._owner = owner

    @property
    def start_date(self):
        """Gets the start_date of this IIncomeDomainObject.


        :return: The start_date of this IIncomeDomainObject.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this IIncomeDomainObject.


        :param start_date: The start_date of this IIncomeDomainObject.
        :type start_date: datetime
        """

        self._start_date = start_date
