# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.object_link import ObjectLink
from openapi_server import util


class EducationGoalWithIdModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, education_goal_id: int=None, external_destination_id: str=None, fact_finder_id: int=None, links: List[ObjectLink]=None, projected_cost: float=None):
        """EducationGoalWithIdModel - a model defined in OpenAPI

        :param description: The description of this EducationGoalWithIdModel.
        :param education_goal_id: The education_goal_id of this EducationGoalWithIdModel.
        :param external_destination_id: The external_destination_id of this EducationGoalWithIdModel.
        :param fact_finder_id: The fact_finder_id of this EducationGoalWithIdModel.
        :param links: The links of this EducationGoalWithIdModel.
        :param projected_cost: The projected_cost of this EducationGoalWithIdModel.
        """
        self.openapi_types = {
            'description': str,
            'education_goal_id': int,
            'external_destination_id': str,
            'fact_finder_id': int,
            'links': List[ObjectLink],
            'projected_cost': float
        }

        self.attribute_map = {
            'description': 'description',
            'education_goal_id': 'educationGoalId',
            'external_destination_id': 'externalDestinationId',
            'fact_finder_id': 'factFinderId',
            'links': 'links',
            'projected_cost': 'projectedCost'
        }

        self._description = description
        self._education_goal_id = education_goal_id
        self._external_destination_id = external_destination_id
        self._fact_finder_id = fact_finder_id
        self._links = links
        self._projected_cost = projected_cost

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EducationGoalWithIdModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EducationGoalWithIdModel of this EducationGoalWithIdModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this EducationGoalWithIdModel.


        :return: The description of this EducationGoalWithIdModel.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this EducationGoalWithIdModel.


        :param description: The description of this EducationGoalWithIdModel.
        :type description: str
        """

        self._description = description

    @property
    def education_goal_id(self):
        """Gets the education_goal_id of this EducationGoalWithIdModel.


        :return: The education_goal_id of this EducationGoalWithIdModel.
        :rtype: int
        """
        return self._education_goal_id

    @education_goal_id.setter
    def education_goal_id(self, education_goal_id):
        """Sets the education_goal_id of this EducationGoalWithIdModel.


        :param education_goal_id: The education_goal_id of this EducationGoalWithIdModel.
        :type education_goal_id: int
        """

        self._education_goal_id = education_goal_id

    @property
    def external_destination_id(self):
        """Gets the external_destination_id of this EducationGoalWithIdModel.


        :return: The external_destination_id of this EducationGoalWithIdModel.
        :rtype: str
        """
        return self._external_destination_id

    @external_destination_id.setter
    def external_destination_id(self, external_destination_id):
        """Sets the external_destination_id of this EducationGoalWithIdModel.


        :param external_destination_id: The external_destination_id of this EducationGoalWithIdModel.
        :type external_destination_id: str
        """

        self._external_destination_id = external_destination_id

    @property
    def fact_finder_id(self):
        """Gets the fact_finder_id of this EducationGoalWithIdModel.


        :return: The fact_finder_id of this EducationGoalWithIdModel.
        :rtype: int
        """
        return self._fact_finder_id

    @fact_finder_id.setter
    def fact_finder_id(self, fact_finder_id):
        """Sets the fact_finder_id of this EducationGoalWithIdModel.


        :param fact_finder_id: The fact_finder_id of this EducationGoalWithIdModel.
        :type fact_finder_id: int
        """

        self._fact_finder_id = fact_finder_id

    @property
    def links(self):
        """Gets the links of this EducationGoalWithIdModel.


        :return: The links of this EducationGoalWithIdModel.
        :rtype: List[ObjectLink]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this EducationGoalWithIdModel.


        :param links: The links of this EducationGoalWithIdModel.
        :type links: List[ObjectLink]
        """

        self._links = links

    @property
    def projected_cost(self):
        """Gets the projected_cost of this EducationGoalWithIdModel.


        :return: The projected_cost of this EducationGoalWithIdModel.
        :rtype: float
        """
        return self._projected_cost

    @projected_cost.setter
    def projected_cost(self, projected_cost):
        """Sets the projected_cost of this EducationGoalWithIdModel.


        :param projected_cost: The projected_cost of this EducationGoalWithIdModel.
        :type projected_cost: float
        """

        self._projected_cost = projected_cost
