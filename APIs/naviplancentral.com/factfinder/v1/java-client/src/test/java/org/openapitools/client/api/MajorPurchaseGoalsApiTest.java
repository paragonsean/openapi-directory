/*
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.MajorPurchaseGoalModel;
import org.openapitools.client.model.MajorPurchaseGoalWithIdModel;
import org.openapitools.client.model.MajorPurchaseGoalsModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MajorPurchaseGoalsApi
 */
@Disabled
public class MajorPurchaseGoalsApiTest {

    private final MajorPurchaseGoalsApi api = new MajorPurchaseGoalsApi();

    /**
     * Description: The operation removes a Major Purchase tied to a Fact Finder.&lt;br /&gt;                Purpose: Allows for removal of a Major Purchase from a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void majorPurchaseGoalsDeleteByIdTest() throws ApiException {
        Integer id = null;
        api.majorPurchaseGoalsDeleteById(id);
        // TODO: test validations
    }

    /**
     * Description: This operation retrieves a single Major Purchase for the specified Major Purchase ID.&lt;br /&gt;                Purpose: Provides access to the Major Purchase including description and amount.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void majorPurchaseGoalsGetByIdTest() throws ApiException {
        Integer id = null;
        MajorPurchaseGoalWithIdModel response = api.majorPurchaseGoalsGetById(id);
        // TODO: test validations
    }

    /**
     * Description: This operation retrieves all Major Purchases for the specified Fact Finder ID.&lt;br /&gt;                Purpose: Provides access to the Major Purchases including description and amount.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void majorPurchaseGoalsGetMajorPurchaseGoalsByFactFinderIdByFactfinderidTest() throws ApiException {
        Integer factFinderId = null;
        MajorPurchaseGoalsModel response = api.majorPurchaseGoalsGetMajorPurchaseGoalsByFactFinderIdByFactfinderid(factFinderId);
        // TODO: test validations
    }

    /**
     * Description: The operation creates a Major Purchase.&lt;br /&gt;                Purpose: Allows for creation of Major Purchases on a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void majorPurchaseGoalsPostByModelTest() throws ApiException {
        MajorPurchaseGoalModel model = null;
        MajorPurchaseGoalWithIdModel response = api.majorPurchaseGoalsPostByModel(model);
        // TODO: test validations
    }

    /**
     * Description: The operation updates a Major Purchase.&lt;br /&gt;                Purpose: Allows for complete replacement of a Major Purchase on a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void majorPurchaseGoalsPutByIdModelTest() throws ApiException {
        Integer id = null;
        MajorPurchaseGoalModel model = null;
        MajorPurchaseGoalWithIdModel response = api.majorPurchaseGoalsPutByIdModel(id, model);
        // TODO: test validations
    }

}
