/*
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AccountHoldingWithIdModel;
import org.openapitools.client.model.ObjectLink;
import org.openapitools.client.model.SavingsStrategyWithIdModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AccountWithSubEntitiesModel
 */
public class AccountWithSubEntitiesModelTest {
    private final AccountWithSubEntitiesModel model = new AccountWithSubEntitiesModel();

    /**
     * Model tests for AccountWithSubEntitiesModel
     */
    @Test
    public void testAccountWithSubEntitiesModel() {
        // TODO: test AccountWithSubEntitiesModel
    }

    /**
     * Test the property 'accountId'
     */
    @Test
    public void accountIdTest() {
        // TODO: test accountId
    }

    /**
     * Test the property 'accountType'
     */
    @Test
    public void accountTypeTest() {
        // TODO: test accountType
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'externalDestinationId'
     */
    @Test
    public void externalDestinationIdTest() {
        // TODO: test externalDestinationId
    }

    /**
     * Test the property 'externalSourceId'
     */
    @Test
    public void externalSourceIdTest() {
        // TODO: test externalSourceId
    }

    /**
     * Test the property 'externalSourceName'
     */
    @Test
    public void externalSourceNameTest() {
        // TODO: test externalSourceName
    }

    /**
     * Test the property 'factFinderId'
     */
    @Test
    public void factFinderIdTest() {
        // TODO: test factFinderId
    }

    /**
     * Test the property 'holdings'
     */
    @Test
    public void holdingsTest() {
        // TODO: test holdings
    }

    /**
     * Test the property 'lastUpdated'
     */
    @Test
    public void lastUpdatedTest() {
        // TODO: test lastUpdated
    }

    /**
     * Test the property 'links'
     */
    @Test
    public void linksTest() {
        // TODO: test links
    }

    /**
     * Test the property 'marketValue'
     */
    @Test
    public void marketValueTest() {
        // TODO: test marketValue
    }

    /**
     * Test the property 'owner'
     */
    @Test
    public void ownerTest() {
        // TODO: test owner
    }

    /**
     * Test the property 'ownerDependentId'
     */
    @Test
    public void ownerDependentIdTest() {
        // TODO: test ownerDependentId
    }

    /**
     * Test the property 'savingsStrategies'
     */
    @Test
    public void savingsStrategiesTest() {
        // TODO: test savingsStrategies
    }

}
