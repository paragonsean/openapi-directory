/*
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.EducationExpenseModel;
import org.openapitools.client.model.EducationExpenseWithIdModel;
import org.openapitools.client.model.EducationExpensesModel;
import org.openapitools.client.model.EducationGoalModel;
import org.openapitools.client.model.EducationGoalWithIdModel;
import org.openapitools.client.model.EducationGoalsModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EducationGoalsApi
 */
@Disabled
public class EducationGoalsApiTest {

    private final EducationGoalsApi api = new EducationGoalsApi();

    /**
     * Description: The operation removes an Education Goal Expense tied to a Fact Finder.&lt;br /&gt;                Purpose: Allows for removal of an Education Goal Expense from a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void educationGoalsDeleteByEducationgoalidIdTest() throws ApiException {
        Integer educationGoalId = null;
        Integer id = null;
        api.educationGoalsDeleteByEducationgoalidId(educationGoalId, id);
        // TODO: test validations
    }

    /**
     * Description: The operation removes an Education Goal tied to a Fact Finder.&lt;br /&gt;                Purpose: Allows for removal of an Education Goal from a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void educationGoalsDeleteByIdTest() throws ApiException {
        Integer id = null;
        api.educationGoalsDeleteById(id);
        // TODO: test validations
    }

    /**
     * Description: This operation retrieves a single Education Goal for the specified Education Goal ID.&lt;br /&gt;                Purpose: Provides access to the Education Goal including description and projected cost.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void educationGoalsGetByIdTest() throws ApiException {
        Integer id = null;
        EducationGoalWithIdModel response = api.educationGoalsGetById(id);
        // TODO: test validations
    }

    /**
     * Description: This operation retrieves a single Education Goal Expense for the specified Education Goal Expense ID.&lt;br /&gt;                Purpose: Provides access to the Education Goal Expense including description and annual cost.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void educationGoalsGetEducationExpenseByEducationgoalidIdTest() throws ApiException {
        Integer educationGoalId = null;
        Integer id = null;
        EducationExpenseWithIdModel response = api.educationGoalsGetEducationExpenseByEducationgoalidId(educationGoalId, id);
        // TODO: test validations
    }

    /**
     * Description: This operation retrieves all Education Goal Expenses for the specified Education Goal ID.&lt;br /&gt;                Purpose: Provides access to the Education Goal Expenses including description and annual cost.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void educationGoalsGetEducationExpensesByEducationGoalIdByEducationgoalidTest() throws ApiException {
        Integer educationGoalId = null;
        EducationExpensesModel response = api.educationGoalsGetEducationExpensesByEducationGoalIdByEducationgoalid(educationGoalId);
        // TODO: test validations
    }

    /**
     * Description: This operation retrieves all Education Goals for the specified Fact Finder ID.&lt;br /&gt;                Purpose: Provides access to the Education Goals including description and projected cost.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void educationGoalsGetEducationGoalsByFactFinderIdByFactfinderidTest() throws ApiException {
        Integer factFinderId = null;
        EducationGoalsModel response = api.educationGoalsGetEducationGoalsByFactFinderIdByFactfinderid(factFinderId);
        // TODO: test validations
    }

    /**
     * Description: The operation creates an Education Goal Expense.&lt;br /&gt;                Purpose: Allows for creation of Education Goal Expenses on a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void educationGoalsPostByEducationgoalidModelTest() throws ApiException {
        Integer educationGoalId = null;
        EducationExpenseModel model = null;
        EducationExpenseWithIdModel response = api.educationGoalsPostByEducationgoalidModel(educationGoalId, model);
        // TODO: test validations
    }

    /**
     * Description: The operation creates an Education Goal.&lt;br /&gt;                Purpose: Allows for creation of Education Goals on a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void educationGoalsPostByModelTest() throws ApiException {
        EducationGoalModel model = null;
        EducationGoalWithIdModel response = api.educationGoalsPostByModel(model);
        // TODO: test validations
    }

    /**
     * Description: The operation updates an Education Goal Expense.&lt;br /&gt;                Purpose: Allows for complete replacement of an Education Goal Expense on a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void educationGoalsPutByEducationgoalidIdModelTest() throws ApiException {
        Integer educationGoalId = null;
        Integer id = null;
        EducationExpenseModel model = null;
        EducationExpenseWithIdModel response = api.educationGoalsPutByEducationgoalidIdModel(educationGoalId, id, model);
        // TODO: test validations
    }

    /**
     * Description: The operation creates an Education Goal Expense.&lt;br /&gt;                Purpose: Allows for creation of Education Goal Expenses on a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void educationGoalsPutByIdModelTest() throws ApiException {
        Integer id = null;
        EducationGoalModel model = null;
        EducationGoalWithIdModel response = api.educationGoalsPutByIdModel(id, model);
        // TODO: test validations
    }

}
