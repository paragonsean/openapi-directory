/*
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ExpenseModel;
import org.openapitools.client.model.ExpenseWithIdModel;
import org.openapitools.client.model.ExpensesModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ExpensesApi
 */
@Disabled
public class ExpensesApiTest {

    private final ExpensesApi api = new ExpensesApi();

    /**
     * Description: The operation removes an Expense tied to a Fact Finder.&lt;br /&gt;                Purpose: Allows for removal of an Expense from a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void expensesDeleteByIdTest() throws ApiException {
        Integer id = null;
        api.expensesDeleteById(id);
        // TODO: test validations
    }

    /**
     * Description: This operation retrieves a single Expense for the specified Expense ID.&lt;br /&gt;                Purpose: Provides access to the Expense including description and Expense type.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void expensesGetByIdTest() throws ApiException {
        Integer id = null;
        ExpenseWithIdModel response = api.expensesGetById(id);
        // TODO: test validations
    }

    /**
     * Description: This operation retrieves all Expenses for the specified Fact Finder ID.&lt;br /&gt;                Purpose: Provides access to the Expenses including description and Expense type.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void expensesGetExpensesByFactFinderIdByFactfinderidTest() throws ApiException {
        Integer factFinderId = null;
        ExpensesModel response = api.expensesGetExpensesByFactFinderIdByFactfinderid(factFinderId);
        // TODO: test validations
    }

    /**
     * Description: The operation creates an Expense.&lt;br /&gt;                Purpose: Allows for creation of Expenses on a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void expensesPostByModelTest() throws ApiException {
        ExpenseModel model = null;
        ExpenseWithIdModel response = api.expensesPostByModel(model);
        // TODO: test validations
    }

    /**
     * Description: The operation updates an Expense.&lt;br /&gt;                Purpose: Allows for complete replacement of an Expense on a Fact Finder. &lt;br /&gt;&lt;br /&gt;                Note: Expense type cannot be changed for expenses prepopulated from NaviPlan.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void expensesPutByIdModelTest() throws ApiException {
        Integer id = null;
        ExpenseModel model = null;
        ExpenseWithIdModel response = api.expensesPutByIdModel(id, model);
        // TODO: test validations
    }

}
