/*
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DemographicsDependentModel;
import org.openapitools.client.model.DemographicsDependentWithIdModel;
import org.openapitools.client.model.DemographicsDependentsModel;
import org.openapitools.client.model.DemographicsModel;
import org.openapitools.client.model.DemographicsWithIdModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DemographicsApi
 */
@Disabled
public class DemographicsApiTest {

    private final DemographicsApi api = new DemographicsApi();

    /**
     * Description: The operation removes a Dependent tied to a Fact Finder.&lt;br /&gt;                Purpose: Allows for removal of a Dependent from a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void demographicsDeleteDependentByDemographicidIdTest() throws ApiException {
        Integer demographicId = null;
        Integer id = null;
        api.demographicsDeleteDependentByDemographicidId(demographicId, id);
        // TODO: test validations
    }

    /**
     * Description: This operation retrieves Demographic information for the specified Demographic information ID.&lt;br /&gt;                Purpose: Provides access to the Demographic information including city and state.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void demographicsGetByIdTest() throws ApiException {
        Integer id = null;
        DemographicsWithIdModel response = api.demographicsGetById(id);
        // TODO: test validations
    }

    /**
     * Description: This operation retrieves all Demographic information for the specified Fact Finder ID.&lt;br /&gt;                Purpose: Provides access to the Demographic information including city and state.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void demographicsGetDemographicsByFactFinderIdByFactfinderidTest() throws ApiException {
        Integer factFinderId = null;
        DemographicsWithIdModel response = api.demographicsGetDemographicsByFactFinderIdByFactfinderid(factFinderId);
        // TODO: test validations
    }

    /**
     * Description: This operation retrieves a single Dependent for the specified Dependent ID.&lt;br /&gt;                Purpose: Provides access to the Dependent including first and last name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void demographicsGetDependentByDemographicidIdTest() throws ApiException {
        Integer demographicId = null;
        Integer id = null;
        DemographicsDependentWithIdModel response = api.demographicsGetDependentByDemographicidId(demographicId, id);
        // TODO: test validations
    }

    /**
     * Description: This operation retrieves all Dependents for the specified Demographic information ID.&lt;br /&gt;                Purpose: Provides access to the Dependents including first and last name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void demographicsGetDependentsByDemographicidTest() throws ApiException {
        Integer demographicId = null;
        DemographicsDependentsModel response = api.demographicsGetDependentsByDemographicid(demographicId);
        // TODO: test validations
    }

    /**
     * Description: The operation creates a Dependent.&lt;br /&gt;                Purpose: Allows for creation of Dependents on a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void demographicsPostByDemographicidModelTest() throws ApiException {
        Integer demographicId = null;
        DemographicsDependentModel model = null;
        DemographicsDependentWithIdModel response = api.demographicsPostByDemographicidModel(demographicId, model);
        // TODO: test validations
    }

    /**
     * Description: The operation creates Demographic information.&lt;br /&gt;                Purpose: Allows for creation of Demographic information on a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void demographicsPostByModelTest() throws ApiException {
        DemographicsModel model = null;
        DemographicsWithIdModel response = api.demographicsPostByModel(model);
        // TODO: test validations
    }

    /**
     * Description: The operation updates a Dependent.&lt;br /&gt;                Purpose: Allows for complete replacement of a Dependent on a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void demographicsPutByDemographicidIdModelTest() throws ApiException {
        Integer demographicId = null;
        Integer id = null;
        DemographicsDependentModel model = null;
        DemographicsDependentWithIdModel response = api.demographicsPutByDemographicidIdModel(demographicId, id, model);
        // TODO: test validations
    }

    /**
     * Description: The operation updates Demographic information.&lt;br /&gt;                Purpose: Allows for complete replacement of Demographic information on a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void demographicsPutByIdModelTest() throws ApiException {
        Integer id = null;
        DemographicsModel model = null;
        DemographicsWithIdModel response = api.demographicsPutByIdModel(id, model);
        // TODO: test validations
    }

}
