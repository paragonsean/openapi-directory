/*
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CriticalIllnessInsurancePoliciesModel;
import org.openapitools.client.model.CriticalIllnessInsurancePolicyModel;
import org.openapitools.client.model.CriticalIllnessInsurancePolicyWithIdModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CriticalIllnessInsurancePoliciesApi
 */
@Disabled
public class CriticalIllnessInsurancePoliciesApiTest {

    private final CriticalIllnessInsurancePoliciesApi api = new CriticalIllnessInsurancePoliciesApi();

    /**
     * Description: The operation removes a Critical Illness Insurance Policy tied to a Fact Finder.&lt;br /&gt;                Purpose: Allows for removal of a Critical Illness Insurance Policy from a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void criticalIllnessInsurancePoliciesDeleteByIdTest() throws ApiException {
        Integer id = null;
        api.criticalIllnessInsurancePoliciesDeleteById(id);
        // TODO: test validations
    }

    /**
     * Description: This operation retrieves a single Critical Illness Insurance Policy for the specified Critical Illness Insurance Policy ID.&lt;br /&gt;                Purpose: Provides access to the Critical Illness Insurance Policy including description and policy type.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void criticalIllnessInsurancePoliciesGetByIdTest() throws ApiException {
        Integer id = null;
        CriticalIllnessInsurancePolicyWithIdModel response = api.criticalIllnessInsurancePoliciesGetById(id);
        // TODO: test validations
    }

    /**
     * Description: This operation retrieves all Critical Illness Insurance Policies for the specified Fact Finder ID.&lt;br /&gt;                Purpose: Provides access to the Critical Illness Insurance Policies including description and policy type.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void criticalIllnessInsurancePoliciesGetCriticalIllnessInsurancePoliciesByFactFinderIdByFactfinderidTest() throws ApiException {
        Integer factFinderId = null;
        CriticalIllnessInsurancePoliciesModel response = api.criticalIllnessInsurancePoliciesGetCriticalIllnessInsurancePoliciesByFactFinderIdByFactfinderid(factFinderId);
        // TODO: test validations
    }

    /**
     * Description: The operation creates a Critical Illness Insurance Policy.&lt;br /&gt;                Purpose: Allows for creation of Critical Illness Insurance Policies on a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void criticalIllnessInsurancePoliciesPostByModelTest() throws ApiException {
        CriticalIllnessInsurancePolicyModel model = null;
        CriticalIllnessInsurancePolicyWithIdModel response = api.criticalIllnessInsurancePoliciesPostByModel(model);
        // TODO: test validations
    }

    /**
     * Description: The operation updates a Critical Illness Insurance Policy.&lt;br /&gt;                Purpose: Allows for complete replacement of a Critical Illness Insurance Policy on a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void criticalIllnessInsurancePoliciesPutByIdModelTest() throws ApiException {
        Integer id = null;
        CriticalIllnessInsurancePolicyModel model = null;
        CriticalIllnessInsurancePolicyWithIdModel response = api.criticalIllnessInsurancePoliciesPutByIdModel(id, model);
        // TODO: test validations
    }

}
