/*
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.LiabilitiesModel;
import org.openapitools.client.model.LiabilityModel;
import org.openapitools.client.model.LiabilityWithIdModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LiabilitiesApi
 */
@Disabled
public class LiabilitiesApiTest {

    private final LiabilitiesApi api = new LiabilitiesApi();

    /**
     * Description: The operation removes a Liability tied to a Fact Finder.&lt;br /&gt;                Purpose: Allows for removal of a Liability from a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void liabilitiesDeleteByIdTest() throws ApiException {
        Integer id = null;
        api.liabilitiesDeleteById(id);
        // TODO: test validations
    }

    /**
     * Description: This operation retrieves a single Liability for the specified Liability ID.&lt;br /&gt;                Purpose: Provides access to the Liability including owner and type.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void liabilitiesGetByIdTest() throws ApiException {
        Integer id = null;
        LiabilityWithIdModel response = api.liabilitiesGetById(id);
        // TODO: test validations
    }

    /**
     * Description: This operation retrieves all Liabilities for the specified Fact Finder ID.&lt;br /&gt;                Purpose: Provides access to the Liabilities including owner and type.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void liabilitiesGetLiabilitiesByFactFinderIdByFactfinderidExternalsourceidTest() throws ApiException {
        Integer factFinderId = null;
        String externalSourceId = null;
        LiabilitiesModel response = api.liabilitiesGetLiabilitiesByFactFinderIdByFactfinderidExternalsourceid(factFinderId, externalSourceId);
        // TODO: test validations
    }

    /**
     * Description: The operation creates a Liability.&lt;br /&gt;                Purpose: Allows for creation of Liabilities on a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void liabilitiesPostByModelTest() throws ApiException {
        LiabilityModel model = null;
        LiabilityWithIdModel response = api.liabilitiesPostByModel(model);
        // TODO: test validations
    }

    /**
     * Description: The operation updates a Liability.&lt;br /&gt;                Purpose: Allows for complete replacement of a Liability on a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void liabilitiesPutByIdModelTest() throws ApiException {
        Integer id = null;
        LiabilityModel model = null;
        LiabilityWithIdModel response = api.liabilitiesPutByIdModel(id, model);
        // TODO: test validations
    }

}
