/*
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DisabilityInsurancePoliciesModel;
import org.openapitools.client.model.DisabilityInsurancePolicyModel;
import org.openapitools.client.model.DisabilityInsurancePolicyWithIdModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DisabilityInsurancePoliciesApi
 */
@Disabled
public class DisabilityInsurancePoliciesApiTest {

    private final DisabilityInsurancePoliciesApi api = new DisabilityInsurancePoliciesApi();

    /**
     * Description: The operation removes a Disability Insurance Policy tied to a Fact Finder.&lt;br /&gt;                Purpose: Allows for removal of a Disability Insurance Policy from a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void disabilityInsurancePoliciesDeleteByIdTest() throws ApiException {
        Integer id = null;
        api.disabilityInsurancePoliciesDeleteById(id);
        // TODO: test validations
    }

    /**
     * Description: This operation retrieves a single Disability Insurance Policy for the specified Disability Insurance Policy ID.&lt;br /&gt;                Purpose: Provides access to the Disability Insurance Policy including description and policy type.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void disabilityInsurancePoliciesGetByIdTest() throws ApiException {
        Integer id = null;
        DisabilityInsurancePolicyWithIdModel response = api.disabilityInsurancePoliciesGetById(id);
        // TODO: test validations
    }

    /**
     * Description: This operation retrieves all Disability Insurance Policies for the specified Fact Finder ID.&lt;br /&gt;                Purpose: Provides access to the Disability Insurance Policies including description and policy type.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void disabilityInsurancePoliciesGetDisabilityInsurancePoliciesByFactFinderIdByFactfinderidTest() throws ApiException {
        Integer factFinderId = null;
        DisabilityInsurancePoliciesModel response = api.disabilityInsurancePoliciesGetDisabilityInsurancePoliciesByFactFinderIdByFactfinderid(factFinderId);
        // TODO: test validations
    }

    /**
     * Description: The operation creates a Disability Insurance Policy.&lt;br /&gt;                Purpose: Allows for creation of Disability Insurance Policies on a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void disabilityInsurancePoliciesPostByModelTest() throws ApiException {
        DisabilityInsurancePolicyModel model = null;
        DisabilityInsurancePolicyWithIdModel response = api.disabilityInsurancePoliciesPostByModel(model);
        // TODO: test validations
    }

    /**
     * Description: The operation updates a Disability Insurance Policy.&lt;br /&gt;                Purpose: Allows for complete replacement of a Disability Insurance Policy on a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void disabilityInsurancePoliciesPutByIdModelTest() throws ApiException {
        Integer id = null;
        DisabilityInsurancePolicyModel model = null;
        DisabilityInsurancePolicyWithIdModel response = api.disabilityInsurancePoliciesPutByIdModel(id, model);
        // TODO: test validations
    }

}
