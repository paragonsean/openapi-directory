/*
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.RetirementExpenseModel;
import org.openapitools.client.model.RetirementExpenseWithIdModel;
import org.openapitools.client.model.RetirementExpensesModel;
import org.openapitools.client.model.RetirementGoalModel;
import org.openapitools.client.model.RetirementGoalWithIdModel;
import org.openapitools.client.model.RetirementGoalsModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RetirementGoalsApi
 */
@Disabled
public class RetirementGoalsApiTest {

    private final RetirementGoalsApi api = new RetirementGoalsApi();

    /**
     * Description: The operation removes a Retirement Goal tied to a Fact Finder.&lt;br /&gt;                Purpose: Allows for removal of a Retirement Goal from a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retirementGoalsDeleteByIdTest() throws ApiException {
        Integer id = null;
        api.retirementGoalsDeleteById(id);
        // TODO: test validations
    }

    /**
     * Description: The operation removes a Retirement Goal Expense tied to a Fact Finder.&lt;br /&gt;                Purpose: Allows for removal of a Retirement Goal Expense from a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retirementGoalsDeleteByRetirementgoalidIdTest() throws ApiException {
        Integer retirementGoalId = null;
        Integer id = null;
        api.retirementGoalsDeleteByRetirementgoalidId(retirementGoalId, id);
        // TODO: test validations
    }

    /**
     * Description: This operation retrieves a single Retirement Goal for the specified Retirement Goal ID.&lt;br /&gt;                Purpose: Provides access to the Retirement Goal including retirement date.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retirementGoalsGetByIdTest() throws ApiException {
        Integer id = null;
        RetirementGoalWithIdModel response = api.retirementGoalsGetById(id);
        // TODO: test validations
    }

    /**
     * Description: This operation retrieves a single Retirement Goal Expense for the specified Retirement Goal Expense ID.&lt;br /&gt;                Purpose: Provides access to the Retirement Goal Expense including description and amount.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retirementGoalsGetRetirementExpenseByRetirementgoalidIdTest() throws ApiException {
        Integer retirementGoalId = null;
        Integer id = null;
        RetirementExpenseWithIdModel response = api.retirementGoalsGetRetirementExpenseByRetirementgoalidId(retirementGoalId, id);
        // TODO: test validations
    }

    /**
     * Description: This operation retrieves all Retirement Goal Expenses for the specified Retirement Goal ID.&lt;br /&gt;                Purpose: Provides access to the Retirement Goal Expenses including description and amount.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retirementGoalsGetRetirementExpensesByRetirementGoalIdByRetirementgoalidTest() throws ApiException {
        Integer retirementGoalId = null;
        RetirementExpensesModel response = api.retirementGoalsGetRetirementExpensesByRetirementGoalIdByRetirementgoalid(retirementGoalId);
        // TODO: test validations
    }

    /**
     * Description: This operation retrieves all Retirement Goals for the specified Fact Finder ID.&lt;br /&gt;                Purpose: Provides access to the Retirement Goals including retirement date.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retirementGoalsGetRetirementGoalsByFactFinderIdByFactfinderidTest() throws ApiException {
        Integer factFinderId = null;
        RetirementGoalsModel response = api.retirementGoalsGetRetirementGoalsByFactFinderIdByFactfinderid(factFinderId);
        // TODO: test validations
    }

    /**
     * Description: The operation creates a Retirement Goal.&lt;br /&gt;                Purpose: Allows for creation of Retirement Goals on a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retirementGoalsPostByModelTest() throws ApiException {
        RetirementGoalModel model = null;
        RetirementGoalWithIdModel response = api.retirementGoalsPostByModel(model);
        // TODO: test validations
    }

    /**
     * Description: The operation creates a Retirement Goal Expense.&lt;br /&gt;                Purpose: Allows for creation of Retirement Goal Expenses on a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retirementGoalsPostByRetirementgoalidModelTest() throws ApiException {
        Integer retirementGoalId = null;
        RetirementExpenseModel model = null;
        RetirementExpenseWithIdModel response = api.retirementGoalsPostByRetirementgoalidModel(retirementGoalId, model);
        // TODO: test validations
    }

    /**
     * Description: The operation updates a Retirement Goal.&lt;br /&gt;                Purpose: Allows for complete replacement of a Retirement Goal on a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retirementGoalsPutByIdModelTest() throws ApiException {
        Integer id = null;
        RetirementGoalModel model = null;
        RetirementGoalWithIdModel response = api.retirementGoalsPutByIdModel(id, model);
        // TODO: test validations
    }

    /**
     * Description: The operation updates a Retirement Goal Expense.&lt;br /&gt;                Purpose: Allows for complete replacement of a Retirement Goal Expense on a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retirementGoalsPutByRetirementgoalidIdModelTest() throws ApiException {
        Integer retirementGoalId = null;
        Integer id = null;
        RetirementExpenseModel model = null;
        RetirementExpenseWithIdModel response = api.retirementGoalsPutByRetirementgoalidIdModel(retirementGoalId, id, model);
        // TODO: test validations
    }

}
