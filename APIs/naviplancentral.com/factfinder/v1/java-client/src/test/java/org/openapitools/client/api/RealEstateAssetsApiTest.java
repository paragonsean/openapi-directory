/*
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.RealEstateAssetModel;
import org.openapitools.client.model.RealEstateAssetWithIdModel;
import org.openapitools.client.model.RealEstateAssetsModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RealEstateAssetsApi
 */
@Disabled
public class RealEstateAssetsApiTest {

    private final RealEstateAssetsApi api = new RealEstateAssetsApi();

    /**
     * Description: The operation removes a Real Estate Asset tied to a Fact Finder.&lt;br /&gt;                Purpose: Allows for removal of a Real Estate Asset from a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void realEstateAssetsDeleteByIdTest() throws ApiException {
        Integer id = null;
        api.realEstateAssetsDeleteById(id);
        // TODO: test validations
    }

    /**
     * Description: This operation retrieves a single Real Estate Asset for the specified Real Estate Asset ID.&lt;br /&gt;                Purpose: Provides access to the Real Estate Asset including description and market value.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void realEstateAssetsGetByIdTest() throws ApiException {
        Integer id = null;
        RealEstateAssetWithIdModel response = api.realEstateAssetsGetById(id);
        // TODO: test validations
    }

    /**
     * Description: This operation retrieves all Real Estate Assets for the specified Fact Finder ID.&lt;br /&gt;                Purpose: Provides access to the Real Estate Assets including description and market value.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void realEstateAssetsGetRealEstateAssetsByFactFinderIdByFactfinderidTest() throws ApiException {
        Integer factFinderId = null;
        RealEstateAssetsModel response = api.realEstateAssetsGetRealEstateAssetsByFactFinderIdByFactfinderid(factFinderId);
        // TODO: test validations
    }

    /**
     * Description: The operation creates a Real Estate Asset.&lt;br /&gt;                Purpose: Allows for creation of Real Estate Assets on a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void realEstateAssetsPostByModelTest() throws ApiException {
        RealEstateAssetModel model = null;
        RealEstateAssetWithIdModel response = api.realEstateAssetsPostByModel(model);
        // TODO: test validations
    }

    /**
     * Description: The operation updates a Real Estate Asset.&lt;br /&gt;                Purpose: Allows for complete replacement of a Real Estate Asset on a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void realEstateAssetsPutByIdModelTest() throws ApiException {
        Integer id = null;
        RealEstateAssetModel model = null;
        RealEstateAssetWithIdModel response = api.realEstateAssetsPutByIdModel(id, model);
        // TODO: test validations
    }

}
