/*
 * Advicent.FactFinderService
 * An API for accessing the NaviPlan Fact Finder.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.FactFinderEntityModel;
import org.openapitools.client.model.FactFinderModel;
import org.openapitools.client.model.FactFinderPopulatableEntityModel;
import org.openapitools.client.model.FactFinderPopulationModel;
import org.openapitools.client.model.FactFinderSnapshotWithIdModel;
import org.openapitools.client.model.FactFinderSnapshotsModel;
import org.openapitools.client.model.FactFinderWithIdModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FactFindersApi
 */
@Disabled
public class FactFindersApiTest {

    private final FactFindersApi api = new FactFindersApi();

    /**
     * Description: This operation deletes a single Fact Finder for the specified Fact Finder ID.&lt;br /&gt;                Purpose: Deletes the fact finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void factFindersDeleteByIdTest() throws ApiException {
        Integer id = null;
        Object response = api.factFindersDeleteById(id);
        // TODO: test validations
    }

    /**
     * Description: This operation retrieves all Fact Finders for the specified householdId,                 or if null, all households associated with the user.&lt;br /&gt;                Purpose: Provides access to the Fact Finder including status.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void factFindersGetByHouseholdIdByHouseholdidTest() throws ApiException {
        Integer householdId = null;
        List<FactFinderWithIdModel> response = api.factFindersGetByHouseholdIdByHouseholdid(householdId);
        // TODO: test validations
    }

    /**
     * Description: This operation retrieves a single Fact Finder for the specified Fact Finder ID.&lt;br /&gt;                Purpose: Provides access to the Fact Finder including status.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void factFindersGetByIdTest() throws ApiException {
        Integer id = null;
        FactFinderWithIdModel response = api.factFindersGetById(id);
        // TODO: test validations
    }

    /**
     * Description: The operation retrieves Snapshots of a Fact Finder.&lt;br /&gt;                Purpose: Allows for advisors to view all Snapshots taken of a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void factFindersGetSnapshotsByFactfinderidTest() throws ApiException {
        Integer factFinderId = null;
        FactFinderSnapshotsModel response = api.factFindersGetSnapshotsByFactfinderid(factFinderId);
        // TODO: test validations
    }

    /**
     * Description: The operation creates a completely empty draft Fact Finder.&lt;br /&gt;                Requirements: A householdId and list of modules must be provided.&lt;br /&gt;                Purpose: Stages a Fact Finder for population.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void factFindersPostByModelTest() throws ApiException {
        FactFinderEntityModel model = null;
        Object response = api.factFindersPostByModel(model);
        // TODO: test validations
    }

    /**
     * Description: The operation creates a new Populated Fact Finder.&lt;br /&gt;                Requirements: A householdId and list of modules must be provided.&lt;br /&gt;                Purpose: Creation of a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void factFindersPostPopulateByModelTest() throws ApiException {
        FactFinderPopulatableEntityModel model = null;
        Object response = api.factFindersPostPopulateByModel(model);
        // TODO: test validations
    }

    /**
     * Description: The operation creates a Snapshot of a Fact Finder.&lt;br /&gt;                Purpose: Allows for advisors to compare the current fact finder to a snapshot prior to acceptance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void factFindersPostSnapshotsByFactfinderidTest() throws ApiException {
        Integer factFinderId = null;
        Object response = api.factFindersPostSnapshotsByFactfinderid(factFinderId);
        // TODO: test validations
    }

    /**
     * Description: The operation updates a Fact Finder.&lt;br /&gt;                Purpose: Allows for the updating of a Fact Finder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void factFindersPutByIdModelTest() throws ApiException {
        Integer id = null;
        FactFinderModel model = null;
        FactFinderWithIdModel response = api.factFindersPutByIdModel(id, model);
        // TODO: test validations
    }

    /**
     * Description: The operation populates a fact finder.&lt;br /&gt;                Purpose: Allows for the population of a Fact Finder based on a NaviPlan plan or client. This                         operation cannot be performed on a Fact Finder more than once.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void factFindersPutPopulateFactFinderByIdModelTest() throws ApiException {
        Integer id = null;
        FactFinderPopulationModel model = null;
        FactFinderWithIdModel response = api.factFindersPutPopulateFactFinderByIdModel(id, model);
        // TODO: test validations
    }

}
