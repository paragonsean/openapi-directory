openapi: 3.0.1
info:
  contact: {}
  description: An API for accessing the NaviPlan Fact Finder.
  title: Advicent.FactFinderService
  version: v1
  x-apisguru-categories:
  - financial
  x-logo:
    url: https://twitter.com/Advicent/profile_image?size=original
  x-origin:
  - format: swagger
    url: https://demo.uat.naviplancentral.com/factfinder/swagger/docs/v1
    version: "2.0"
  - format: swagger
    url: https://demo.uat.naviplancentral.com/factfinder/swagger/docs/v1
    version: "2.0"
  x-providerName: naviplancentral.com
  x-serviceName: factfinder
servers:
- url: https://demo.uat.naviplancentral.com/factfinder
- url: http://demo.uat.naviplancentral.com/factfinder
paths:
  /api/AccountTypes:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Account Types for the\
        \ specified country.<br />\r\n              Purpose: Provides access to the\
        \ Account Types including id and type description."
      operationId: AccountTypes_GetByCountry
      parameters:
      - description: The country used to filter Account Types
        in: query
        name: country
        required: true
        schema:
          enum:
          - UnitedStates
          - Canada
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTypesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AccountTypesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "404":
          content: {}
          description: Account Type not found
      tags:
      - AccountTypes
      x-accepts:
      - application/json
      - text/json
  /api/AccountTypes/{id}:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Account Types for the\
        \ specified id.<br />\r\n              Purpose: Provides access to the Account\
        \ Types including id and type description."
      operationId: AccountTypes_GetById
      parameters:
      - description: The ID of Account Type used to retreive the Account Type information
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTypeModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AccountTypeModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "404":
          content: {}
          description: Account Type not found
      tags:
      - AccountTypes
      x-accepts:
      - application/json
      - text/json
  /api/Accounts:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Accounts for the specified\
        \ Fact Finder ID and/or external source ID.<br />\r\n              Purpose:\
        \ Provides access to the Account information including description and market\
        \ value."
      operationId: Accounts_GetAccountsByFactFinderIdByFactfinderidExternalsourceid
      parameters:
      - description: The ID of the Fact Finder used to retrieve Accounts
        in: query
        name: factFinderId
        required: true
        schema:
          format: int32
          type: integer
      - description: The external ID used to filter Accounts
        in: query
        name: externalSourceId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AccountsModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Account data access.
        "403":
          content: {}
          description: Request is restricted for access to Account.
        "404":
          content: {}
          description: Account not found.
      tags:
      - Accounts
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      description: "Description: The operation creates an Account.<br />\r\n     \
        \         Purpose: Allows for creation of Accounts on a Fact Finder."
      operationId: Accounts_PostByModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountModel'
        description: The Account to be added to the Fact Finder
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AccountWithIdModel'
          description: Created
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Account data access.
        "403":
          content: {}
          description: Request is restricted for access to Account.
        "404":
          content: {}
          description: Account not found.
      tags:
      - Accounts
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/Accounts/{accountId}/Holdings:
    get:
      deprecated: false
      description: Retrieves all holdings in the specified Account.
      operationId: Accounts_GetAccountHoldingsByAccountid
      parameters:
      - description: The ID of the Account used to retrieve the Account Holding data
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountHoldingsModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AccountHoldingsModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Account data access.
        "403":
          content: {}
          description: Request is restricted for access to Account.
        "404":
          content: {}
          description: Account not found.
      tags:
      - Accounts
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      description: Creates a holding and adds it to an existing Account.
      operationId: Accounts_PostAccountHoldingByAccountidModel
      parameters:
      - description: The existing Account ID used to identify which Account to add
          the holding to
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountHoldingModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountHoldingModel'
        description: The holding data
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountHoldingWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AccountHoldingWithIdModel'
          description: Created
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Account data access.
        "403":
          content: {}
          description: Request is restricted for access to Account.
        "404":
          content: {}
          description: Account not found.
      tags:
      - Accounts
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
    put:
      deprecated: false
      description: Updates all holdings associated with an account
      operationId: Accounts_PutHoldingsByAccountidHoldings
      parameters:
      - description: The account with the holding to be updated
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountHoldingsWithoutIdModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountHoldingsWithoutIdModel'
        description: The list of holdings for an account
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountHoldingsModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AccountHoldingsModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Account data access.
        "403":
          content: {}
          description: Request is restricted for access to Account.
        "404":
          content: {}
          description: Account not found.
      tags:
      - Accounts
      x-codegen-request-body-name: holdings
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/Accounts/{accountId}/Holdings/{id}:
    delete:
      deprecated: false
      description: "Description: This operation deletes a single Account Holding for\
        \ the specified Account Holding ID and Account ID.<br />\r\n             \
        \ Purpose: Provides the ability to remove individual holdings from a specified\
        \ Account."
      operationId: Accounts_DeleteAccountHoldingByAccountidId
      parameters:
      - description: The ID of the Account used to retrieve the Account data that
          the specified holding belongs to.
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the Account Holding used to delete the Account Holding
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Deleted
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Account data access.
        "403":
          content: {}
          description: Request is restricted for access to Account.
        "404":
          content: {}
          description: Account not found.
      tags:
      - Accounts
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: "Description: This operation retrieves a single Account Holding\
        \ for the specified Account Holding ID and Account ID.<br />\r\n         \
        \     Purpose: Provides access to the Account Holding information including\
        \ description and market value."
      operationId: Accounts_GetAccountHoldingByAccountidId
      parameters:
      - description: The ID of the Account used to retrieve the Account Holding data
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the Account Holding used to retrieve the Account Holding
          data
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountHoldingWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AccountHoldingWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Account data access.
        "403":
          content: {}
          description: Request is restricted for access to Account.
        "404":
          content: {}
          description: Account not found.
      tags:
      - Accounts
      x-accepts:
      - application/json
      - text/json
    put:
      deprecated: false
      description: Updates a holding associated with an account
      operationId: Accounts_PutByAccountidIdHolding
      parameters:
      - description: The account with the holding to be updated
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: The id of the holding to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountHoldingModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountHoldingModel'
        description: The holding values used to update the current holding
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountHoldingModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AccountHoldingModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Account data access.
        "403":
          content: {}
          description: Request is restricted for access to Account.
        "404":
          content: {}
          description: Account not found.
      tags:
      - Accounts
      x-codegen-request-body-name: holding
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/Accounts/{accountId}/SavingsStrategies:
    delete:
      deprecated: false
      description: Deletes all savings strategies tied to an account
      operationId: Accounts_DeleteSavingsStrategiesByAccountid
      parameters:
      - description: Id of the account that holds the savings strategies
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Deleted
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Account data access.
        "403":
          content: {}
          description: Request is restricted for access to Account.
        "404":
          content: {}
          description: Account not found.
      tags:
      - Accounts
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: Get all of the savings strategies for a specific account
      operationId: Accounts_GetSavingsStrategiesByAccountIdByAccountid
      parameters:
      - description: The id of the account to retrieve the savings strategies from
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavingsStrategiesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/SavingsStrategiesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Account data access.
        "403":
          content: {}
          description: Request is restricted for access to Account.
        "404":
          content: {}
          description: Account not found.
      tags:
      - Accounts
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      description: Creates a savings strategy on a specific account
      operationId: Accounts_PostSavingsStrategyByAccountidSavingsstrategy
      parameters:
      - description: Id of the account to create a savings strategy for
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SavingsStrategyModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SavingsStrategyModel'
        description: Values for the strategy to be created
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavingsStrategyWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/SavingsStrategyWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Account data access.
        "403":
          content: {}
          description: Request is restricted for access to Account.
        "404":
          content: {}
          description: Account not found.
      tags:
      - Accounts
      x-codegen-request-body-name: savingsStrategy
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/Accounts/{accountId}/SavingsStrategies/{id}:
    delete:
      deprecated: false
      description: Deletes a specific savings strategy
      operationId: Accounts_DeleteSavingsStrategyByAccountidId
      parameters:
      - description: Id of the account that holds the savings strategy
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: Id of the savings strategy to be deleted
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Deleted
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Account data access.
        "403":
          content: {}
          description: Request is restricted for access to Account.
        "404":
          content: {}
          description: Account not found.
      tags:
      - Accounts
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: Get a specific savings strategy for an account
      operationId: Accounts_GetSavingsStrategiesByAccountIdAndSavingsStrategyIdByAccountidId
      parameters:
      - description: The id of the account to retrieve the savings strategies from
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: The id of the savings strategy to get
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavingsStrategyWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/SavingsStrategyWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Account data access.
        "403":
          content: {}
          description: Request is restricted for access to Account.
        "404":
          content: {}
          description: Account not found.
      tags:
      - Accounts
      x-accepts:
      - application/json
      - text/json
    put:
      deprecated: false
      description: Updates a specific savings strategy
      operationId: Accounts_PutSavingsStrategyByAccountidIdSavingsstrategy
      parameters:
      - description: Id of the account that holds the savings strategy
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
      - description: Id of the savings strategy to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SavingsStrategyModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SavingsStrategyModel'
        description: The model with which to update the savings strategy with
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavingsStrategyWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/SavingsStrategyWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Account data access.
        "403":
          content: {}
          description: Request is restricted for access to Account.
        "404":
          content: {}
          description: Account not found.
      tags:
      - Accounts
      x-codegen-request-body-name: savingsStrategy
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/Accounts/{id}:
    delete:
      deprecated: false
      description: "Description: The operation removes an Account tied to a Fact Finder.<br\
        \ />\r\n              Purpose: Allows for removal of an Account from a Fact\
        \ Finder."
      operationId: Accounts_DeleteAccountById
      parameters:
      - description: The Account ID used to identify which Account to remove
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Deleted
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Account data access.
        "403":
          content: {}
          description: Request is restricted for access to Account.
        "404":
          content: {}
          description: Account not found.
      tags:
      - Accounts
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: "Description: This operation retrieves a single Account for the\
        \ specified Account ID.<br />\r\n              Purpose: Provides access to\
        \ the Account information including description and market value."
      operationId: Accounts_GetById
      parameters:
      - description: The ID of the Account used to retrieve the Account data
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AccountWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Account data access.
        "403":
          content: {}
          description: Request is restricted for access to Account.
        "404":
          content: {}
          description: Account not found.
      tags:
      - Accounts
      x-accepts:
      - application/json
      - text/json
    put:
      deprecated: false
      description: "Description: The operation updates an Account, deletes associated\
        \ saving strategies if the account type changes.<br />\r\n              Purpose:\
        \ Allows for complete replacement of an Account on a Fact Finder."
      operationId: Accounts_PutByIdModel
      parameters:
      - description: The existing Account ID used to identify which Account to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountModel'
        description: The Account to be updated on a Fact Finder
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AccountWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Account data access.
        "403":
          content: {}
          description: Request is restricted for access to Account.
        "404":
          content: {}
          description: Account not found.
      tags:
      - Accounts
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/Clients:
    post:
      deprecated: false
      description: "Description: This operation submits the Fact Finder data to an\
        \ external system.<br />\r\n              Purpose: Allows Fact Finder data\
        \ to be persisted in another system for that system's consumption and use."
      operationId: Clients_PostByModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientsModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ClientsModel'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ClientModel'
          description: Created
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Client data access.
        "403":
          content: {}
          description: Request is restricted for access to Client.
      tags:
      - Clients
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/CriticalIllnessInsurancePolicies:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Critical Illness Insurance\
        \ Policies for the specified Fact Finder ID.<br />\r\n              Purpose:\
        \ Provides access to the Critical Illness Insurance Policies including description\
        \ and policy type."
      operationId: CriticalIllnessInsurancePolicies_GetCriticalIllnessInsurancePoliciesByFactFinderIdByFactfinderid
      parameters:
      - description: The ID of the Fact Finder used to retrieve Critical Illness Insurance
          Policies
        in: query
        name: factFinderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CriticalIllnessInsurancePoliciesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CriticalIllnessInsurancePoliciesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Critical Illness Insurance Policy data access.
        "403":
          content: {}
          description: Request is restricted for access to Critical Illness Insurance
            Policy.
        "404":
          content: {}
          description: Critical Illness Insurance Policy not found.
      tags:
      - CriticalIllnessInsurancePolicies
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      description: "Description: The operation creates a Critical Illness Insurance\
        \ Policy.<br />\r\n              Purpose: Allows for creation of Critical\
        \ Illness Insurance Policies on a Fact Finder."
      operationId: CriticalIllnessInsurancePolicies_PostByModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CriticalIllnessInsurancePolicyModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CriticalIllnessInsurancePolicyModel'
        description: The Critical Illness Insurance Policy to be added to the Fact
          Finder
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CriticalIllnessInsurancePolicyWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CriticalIllnessInsurancePolicyWithIdModel'
          description: Created
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Critical Illness Insurance Policy data access.
        "403":
          content: {}
          description: Request is restricted for access to Critical Illness Insurance
            Policy.
        "404":
          content: {}
          description: Critical Illness Insurance Policy not found.
      tags:
      - CriticalIllnessInsurancePolicies
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/CriticalIllnessInsurancePolicies/{id}:
    delete:
      deprecated: false
      description: "Description: The operation removes a Critical Illness Insurance\
        \ Policy tied to a Fact Finder.<br />\r\n              Purpose: Allows for\
        \ removal of a Critical Illness Insurance Policy from a Fact Finder."
      operationId: CriticalIllnessInsurancePolicies_DeleteById
      parameters:
      - description: The Critical Illness Insurance Policy ID used to identify which
          Critical Illness Insurance Policy to remove
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Deleted
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Critical Illness Insurance Policy data access.
        "403":
          content: {}
          description: Request is restricted for access to Critical Illness Insurance
            Policy.
        "404":
          content: {}
          description: Critical Illness Insurance Policy not found.
      tags:
      - CriticalIllnessInsurancePolicies
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: "Description: This operation retrieves a single Critical Illness\
        \ Insurance Policy for the specified Critical Illness Insurance Policy ID.<br\
        \ />\r\n              Purpose: Provides access to the Critical Illness Insurance\
        \ Policy including description and policy type."
      operationId: CriticalIllnessInsurancePolicies_GetById
      parameters:
      - description: The ID of the Critical Illness Insurance Policy used to retreive
          the Critical Illness Insurance Policy
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CriticalIllnessInsurancePolicyWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CriticalIllnessInsurancePolicyWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Critical Illness Insurance Policy data access.
        "403":
          content: {}
          description: Request is restricted for access to Critical Illness Insurance
            Policy.
        "404":
          content: {}
          description: Critical Illness Insurance Policy not found.
      tags:
      - CriticalIllnessInsurancePolicies
      x-accepts:
      - application/json
      - text/json
    put:
      deprecated: false
      description: "Description: The operation updates a Critical Illness Insurance\
        \ Policy.<br />\r\n              Purpose: Allows for complete replacement\
        \ of a Critical Illness Insurance Policy on a Fact Finder."
      operationId: CriticalIllnessInsurancePolicies_PutByIdModel
      parameters:
      - description: The existing Critical Illness Insurance Policy ID used to identify
          which Critical Illness Insurance Policy to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CriticalIllnessInsurancePolicyModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CriticalIllnessInsurancePolicyModel'
        description: The Critical Illness Insurance Policy to be updated on a Fact
          Finder
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CriticalIllnessInsurancePolicyWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CriticalIllnessInsurancePolicyWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Critical Illness Insurance Policy data access.
        "403":
          content: {}
          description: Request is restricted for access to Critical Illness Insurance
            Policy.
        "404":
          content: {}
          description: Critical Illness Insurance Policy not found.
      tags:
      - CriticalIllnessInsurancePolicies
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/CriticalIllnessInsurancePolicyTypes:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Critical Illness Insurance\
        \ Policy Types for the specified country.<br />\r\n              Purpose:\
        \ Provides access to the Critical Illness Insurance Policy Types including\
        \ id and type description."
      operationId: CriticalIllnessInsurancePolicyTypes_GetByCountry
      parameters:
      - description: The country used to filter Critical Illness Insurance Policy
          Types
        in: query
        name: country
        required: true
        schema:
          enum:
          - UnitedStates
          - Canada
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CriticalIllnessInsurancePolicyTypesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CriticalIllnessInsurancePolicyTypesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "404":
          content: {}
          description: Critical Illness Insurance Policy Type not found.
      tags:
      - CriticalIllnessInsurancePolicyTypes
      x-accepts:
      - application/json
      - text/json
  /api/CriticalIllnessInsurancePolicyTypes/{id}:
    get:
      deprecated: false
      description: "Description: This operation retrieves the Critical Illness Insurance\
        \ Policy Type for the specified id.<br />\r\n              Purpose: Provides\
        \ access to the Critical Illness Insurance Policy Types including id and type\
        \ description."
      operationId: CriticalIllnessInsurancePolicyTypes_GetById
      parameters:
      - description: The ID of Critical Illness Insurance Policy Type used to retreive
          the Critical Illness Insurance Policy Type information
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CriticalIllnessInsurancePolicyTypeModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CriticalIllnessInsurancePolicyTypeModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "404":
          content: {}
          description: Critical Illness Insurance Policy Type not found.
      tags:
      - CriticalIllnessInsurancePolicyTypes
      x-accepts:
      - application/json
      - text/json
  /api/DefinedBenefitPensions:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Defined Benefit Pensions\
        \ for the specified Fact Finder ID.<br />\r\n              Purpose: Provides\
        \ access to the Defined Benefit Pensions including description and start date."
      operationId: DefinedBenefitPensions_GetDefinedBenefitPensionsByFactFinderIdByFactfinderid
      parameters:
      - description: The ID of the Fact Finder used to retrieve Defined Benefit Pensions
        in: query
        name: factFinderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefinedBenefitPensionsModel'
            text/json:
              schema:
                $ref: '#/components/schemas/DefinedBenefitPensionsModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Defined Benefit Pension data access.
        "403":
          content: {}
          description: Request is restricted for access to Defined Benefit Pension.
        "404":
          content: {}
          description: Defined Benefit Pension not found.
      tags:
      - DefinedBenefitPensions
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      description: "Description: The operation creates a Defined Benefit Pension.<br\
        \ />\r\n              Purpose: Allows for creation of Defined Benefit Pensions\
        \ on a Fact Finder."
      operationId: DefinedBenefitPensions_PostByModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefinedBenefitPensionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/DefinedBenefitPensionModel'
        description: The Defined Benefit Pension to be added to the Fact Finder
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefinedBenefitPensionWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/DefinedBenefitPensionWithIdModel'
          description: Created
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Defined Benefit Pension data access.
        "403":
          content: {}
          description: Request is restricted for access to Defined Benefit Pension.
        "404":
          content: {}
          description: Defined Benefit Pension not found.
      tags:
      - DefinedBenefitPensions
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/DefinedBenefitPensions/{id}:
    delete:
      deprecated: false
      description: "Description: The operation removes a Defined Benefit Pension tied\
        \ to a Fact Finder.<br />\r\n              Purpose: Allows for removal of\
        \ a Defined Benefit Pension from a Fact Finder."
      operationId: DefinedBenefitPensions_DeleteDefinedBenefitPensionById
      parameters:
      - description: The Defined Benefit Pension ID used to identify which Defined
          Benefit Pension to remove
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK
        "204":
          content: {}
          description: Deleted
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Defined Benefit Pension data access.
        "403":
          content: {}
          description: Request is restricted for access to Defined Benefit Pension.
        "404":
          content: {}
          description: Defined Benefit Pension not found.
      tags:
      - DefinedBenefitPensions
      x-accepts:
      - application/json
      - text/json
    get:
      deprecated: false
      description: "Description: This operation retrieves a single Defined Benefit\
        \ Pension for the specified Defined Benefit Pension ID.<br />\r\n        \
        \      Purpose: Provides access to the Defined Benefit Pension including description\
        \ and start date."
      operationId: DefinedBenefitPensions_GetById
      parameters:
      - description: The ID of the Defined Benefit Pension used to retreive the Defined
          Benefit Pension
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefinedBenefitPensionWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/DefinedBenefitPensionWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Defined Benefit Pension data access.
        "403":
          content: {}
          description: Request is restricted for access to Defined Benefit Pension.
        "404":
          content: {}
          description: Defined Benefit Pension not found.
      tags:
      - DefinedBenefitPensions
      x-accepts:
      - application/json
      - text/json
    put:
      deprecated: false
      description: "Description: The operation updates a Defined Benefit Pension.<br\
        \ />\r\n              Purpose: Allows for complete replacement of a Defined\
        \ Benefit Pension on a Fact Finder."
      operationId: DefinedBenefitPensions_PutDefinedBenefitPensionByIdModel
      parameters:
      - description: The existing Defined Benefit Pension ID used to identify which
          Defined Benefit Pension to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefinedBenefitPensionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/DefinedBenefitPensionModel'
        description: The Defined Benefit Pension to be updated on a Fact Finder
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefinedBenefitPensionModel'
            text/json:
              schema:
                $ref: '#/components/schemas/DefinedBenefitPensionModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Defined Benefit Pension data access.
        "403":
          content: {}
          description: Request is restricted for access to Defined Benefit Pension.
        "404":
          content: {}
          description: Defined Benefit Pension not found.
      tags:
      - DefinedBenefitPensions
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/Demographics:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Demographic information\
        \ for the specified Fact Finder ID.<br />\r\n              Purpose: Provides\
        \ access to the Demographic information including city and state."
      operationId: Demographics_GetDemographicsByFactFinderIdByFactfinderid
      parameters:
      - description: The ID of the Fact Finder used to retrieve Demographic information
        in: query
        name: factFinderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemographicsWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/DemographicsWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Demographic information data access.
        "403":
          content: {}
          description: Request is restricted for access to Demographic information.
        "404":
          content: {}
          description: Demographic information not found.
      tags:
      - Demographics
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      description: "Description: The operation creates Demographic information.<br\
        \ />\r\n              Purpose: Allows for creation of Demographic information\
        \ on a Fact Finder."
      operationId: Demographics_PostByModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemographicsModel'
          text/json:
            schema:
              $ref: '#/components/schemas/DemographicsModel'
        description: The Demographic information to be added to the Fact Finder
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemographicsWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/DemographicsWithIdModel'
          description: Created
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Demographic information data access.
        "403":
          content: {}
          description: Request is restricted for access to Demographic information.
        "404":
          content: {}
          description: Demographic information not found.
      tags:
      - Demographics
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/Demographics/{demographicId}/Dependents:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Dependents for the specified\
        \ Demographic information ID.<br />\r\n              Purpose: Provides access\
        \ to the Dependents including first and last name."
      operationId: Demographics_GetDependentsByDemographicid
      parameters:
      - description: The ID of the Demographic information used to retrieve Dependents
        in: path
        name: demographicId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemographicsDependentsModel'
            text/json:
              schema:
                $ref: '#/components/schemas/DemographicsDependentsModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Demographic information data access.
        "403":
          content: {}
          description: Request is restricted for access to Demographic information.
        "404":
          content: {}
          description: Demographic information not found.
      tags:
      - Demographics
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      description: "Description: The operation creates a Dependent.<br />\r\n    \
        \          Purpose: Allows for creation of Dependents on a Fact Finder."
      operationId: Demographics_PostByDemographicidModel
      parameters:
      - description: The ID of the Demographic information to add the Dependent to
        in: path
        name: demographicId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemographicsDependentModel'
          text/json:
            schema:
              $ref: '#/components/schemas/DemographicsDependentModel'
        description: The Dependent to be added to the Fact Finder
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemographicsDependentWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/DemographicsDependentWithIdModel'
          description: Created
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Dependent information data access.
        "403":
          content: {}
          description: Request is restricted for access to Dependent information.
        "404":
          content: {}
          description: Dependent information not found.
        "409":
          content: {}
          description: The request cannot be completed.
      tags:
      - Demographics
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/Demographics/{demographicId}/Dependents/{id}:
    delete:
      deprecated: false
      description: "Description: The operation removes a Dependent tied to a Fact\
        \ Finder.<br />\r\n              Purpose: Allows for removal of a Dependent\
        \ from a Fact Finder."
      operationId: Demographics_DeleteDependentByDemographicidId
      parameters:
      - description: The ID of the Demographic information used to identify which
          Dependent to remove
        in: path
        name: demographicId
        required: true
        schema:
          format: int32
          type: integer
      - description: The Dependent ID used to identify which Dependent to remove
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Deleted
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Dependent information data access.
        "403":
          content: {}
          description: Request is restricted for access to Dependent information.
        "404":
          content: {}
          description: Dependent information not found.
      tags:
      - Demographics
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: "Description: This operation retrieves a single Dependent for the\
        \ specified Dependent ID.<br />\r\n              Purpose: Provides access\
        \ to the Dependent including first and last name."
      operationId: Demographics_GetDependentByDemographicidId
      parameters:
      - description: The ID of the Demographic information used to retrieve Dependents
        in: path
        name: demographicId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the Dependent used to retreive the Dependent
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemographicsDependentWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/DemographicsDependentWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Demographic information data access.
        "403":
          content: {}
          description: Request is restricted for access to Demographic information.
        "404":
          content: {}
          description: Demographic information not found.
      tags:
      - Demographics
      x-accepts:
      - application/json
      - text/json
    put:
      deprecated: false
      description: "Description: The operation updates a Dependent.<br />\r\n    \
        \          Purpose: Allows for complete replacement of a Dependent on a Fact\
        \ Finder."
      operationId: Demographics_PutByDemographicidIdModel
      parameters:
      - description: The ID of the Demographic information used to identify which
          Dependent to update
        in: path
        name: demographicId
        required: true
        schema:
          format: int32
          type: integer
      - description: The existing Dependent ID used to identify which Dependent to
          update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemographicsDependentModel'
          text/json:
            schema:
              $ref: '#/components/schemas/DemographicsDependentModel'
        description: The Dependent to be updated on a Fact Finder
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemographicsDependentWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/DemographicsDependentWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Dependent information data access.
        "403":
          content: {}
          description: Request is restricted for access to Dependent information.
        "404":
          content: {}
          description: Dependent information not found.
      tags:
      - Demographics
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/Demographics/{id}:
    get:
      deprecated: false
      description: "Description: This operation retrieves Demographic information\
        \ for the specified Demographic information ID.<br />\r\n              Purpose:\
        \ Provides access to the Demographic information including city and state."
      operationId: Demographics_GetById
      parameters:
      - description: The ID of the Demographic information used to retreive the Demographic
          information
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemographicsWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/DemographicsWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Demographic information data access.
        "403":
          content: {}
          description: Request is restricted for access to Demographic information.
        "404":
          content: {}
          description: Demographic information not found.
      tags:
      - Demographics
      x-accepts:
      - application/json
      - text/json
    put:
      deprecated: false
      description: "Description: The operation updates Demographic information.<br\
        \ />\r\n              Purpose: Allows for complete replacement of Demographic\
        \ information on a Fact Finder."
      operationId: Demographics_PutByIdModel
      parameters:
      - description: The existing Demographic information ID used to identify which
          Demographic information to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemographicsModel'
          text/json:
            schema:
              $ref: '#/components/schemas/DemographicsModel'
        description: The Demographic information to be updated on a Fact Finder
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemographicsWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/DemographicsWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Demographic information data access.
        "403":
          content: {}
          description: Request is restricted for access to Demographic information.
        "404":
          content: {}
          description: Demographic information not found.
        "409":
          content: {}
          description: The request cannot be completed.
      tags:
      - Demographics
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/DisabilityInsurancePolicies:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Disability Insurance\
        \ Policies for the specified Fact Finder ID.<br />\r\n              Purpose:\
        \ Provides access to the Disability Insurance Policies including description\
        \ and policy type."
      operationId: DisabilityInsurancePolicies_GetDisabilityInsurancePoliciesByFactFinderIdByFactfinderid
      parameters:
      - description: The ID of the Fact Finder used to retrieve Disability Insurance
          Policies
        in: query
        name: factFinderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabilityInsurancePoliciesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/DisabilityInsurancePoliciesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Disability Insurance Policy data access.
        "403":
          content: {}
          description: Request is restricted for access to Disability Insurance Policy.
        "404":
          content: {}
          description: Disability Insurance Policy not found.
      tags:
      - DisabilityInsurancePolicies
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      description: "Description: The operation creates a Disability Insurance Policy.<br\
        \ />\r\n              Purpose: Allows for creation of Disability Insurance\
        \ Policies on a Fact Finder."
      operationId: DisabilityInsurancePolicies_PostByModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisabilityInsurancePolicyModel'
          text/json:
            schema:
              $ref: '#/components/schemas/DisabilityInsurancePolicyModel'
        description: The Disability Insurance Policy to be added to the Fact Finder
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabilityInsurancePolicyWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/DisabilityInsurancePolicyWithIdModel'
          description: Created
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Disability Insurance Policy data access.
        "403":
          content: {}
          description: Request is restricted for access to Disability Insurance Policy.
        "404":
          content: {}
          description: Disability Insurance Policy not found.
      tags:
      - DisabilityInsurancePolicies
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/DisabilityInsurancePolicies/{id}:
    delete:
      deprecated: false
      description: "Description: The operation removes a Disability Insurance Policy\
        \ tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal\
        \ of a Disability Insurance Policy from a Fact Finder."
      operationId: DisabilityInsurancePolicies_DeleteById
      parameters:
      - description: The Disability Insurance Policy ID used to identify which Disability
          Insurance Policy to remove
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Deleted
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Disability Insurance Policy data access.
        "403":
          content: {}
          description: Request is restricted for access to Disability Insurance Policy.
        "404":
          content: {}
          description: Disability Insurance Policy not found.
      tags:
      - DisabilityInsurancePolicies
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: "Description: This operation retrieves a single Disability Insurance\
        \ Policy for the specified Disability Insurance Policy ID.<br />\r\n     \
        \         Purpose: Provides access to the Disability Insurance Policy including\
        \ description and policy type."
      operationId: DisabilityInsurancePolicies_GetById
      parameters:
      - description: The ID of the Disability Insurance Policy used to retreive the
          Disability Insurance Policy
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabilityInsurancePolicyWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/DisabilityInsurancePolicyWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Disability Insurance Policy data access.
        "403":
          content: {}
          description: Request is restricted for access to Disability Insurance Policy.
        "404":
          content: {}
          description: Disability Insurance Policy not found.
      tags:
      - DisabilityInsurancePolicies
      x-accepts:
      - application/json
      - text/json
    put:
      deprecated: false
      description: "Description: The operation updates a Disability Insurance Policy.<br\
        \ />\r\n              Purpose: Allows for complete replacement of a Disability\
        \ Insurance Policy on a Fact Finder."
      operationId: DisabilityInsurancePolicies_PutByIdModel
      parameters:
      - description: The existing Disability Insurance Policy ID used to identify
          which Disability Insurance Policy to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisabilityInsurancePolicyModel'
          text/json:
            schema:
              $ref: '#/components/schemas/DisabilityInsurancePolicyModel'
        description: The Disability Insurance Policy to be updated on a Fact Finder
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabilityInsurancePolicyWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/DisabilityInsurancePolicyWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Disability Insurance Policy data access.
        "403":
          content: {}
          description: Request is restricted for access to Disability Insurance Policy.
        "404":
          content: {}
          description: Disability Insurance Policy not found.
      tags:
      - DisabilityInsurancePolicies
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/DisabilityInsurancePolicyTypes:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Disability Insurance\
        \ Policy Types for the specified country.<br />\r\n              Purpose:\
        \ Provides access to the Disability Insurance Policy Types including id and\
        \ type description."
      operationId: DisabilityInsurancePolicyTypes_GetByCountry
      parameters:
      - description: The country used to filter Disability Insurance Policy Types
        in: query
        name: country
        required: true
        schema:
          enum:
          - UnitedStates
          - Canada
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabilityInsurancePolicyTypesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/DisabilityInsurancePolicyTypesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "404":
          content: {}
          description: Disability Insurance Policy Type not found.
      tags:
      - DisabilityInsurancePolicyTypes
      x-accepts:
      - application/json
      - text/json
  /api/DisabilityInsurancePolicyTypes/{id}:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Disability Insurance\
        \ Policy Types for the specified id.<br />\r\n              Purpose: Provides\
        \ access to the Disability Insurance Policy Types including id and type description."
      operationId: DisabilityInsurancePolicyTypes_GetById
      parameters:
      - description: The ID of Disability Insurance Policy Type used to retreive the
          Disability Insurance Policy Type information
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabilityInsurancePolicyTypeModel'
            text/json:
              schema:
                $ref: '#/components/schemas/DisabilityInsurancePolicyTypeModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "404":
          content: {}
          description: Disability Insurance Policy Type not found.
      tags:
      - DisabilityInsurancePolicyTypes
      x-accepts:
      - application/json
      - text/json
  /api/EducationGoals:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Education Goals for\
        \ the specified Fact Finder ID.<br />\r\n              Purpose: Provides access\
        \ to the Education Goals including description and projected cost."
      operationId: EducationGoals_GetEducationGoalsByFactFinderIdByFactfinderid
      parameters:
      - description: The ID of the Fact Finder used to retrieve Education Goals
        in: query
        name: factFinderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationGoalsModel'
            text/json:
              schema:
                $ref: '#/components/schemas/EducationGoalsModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Education Goal data access.
        "403":
          content: {}
          description: Request is restricted for access to Education Goal.
        "404":
          content: {}
          description: Education Goal not found.
      tags:
      - EducationGoals
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      description: "Description: The operation creates an Education Goal.<br />\r\n\
        \              Purpose: Allows for creation of Education Goals on a Fact Finder."
      operationId: EducationGoals_PostByModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EducationGoalModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EducationGoalModel'
        description: The Education Goal to be added to the Fact Finder
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationGoalWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/EducationGoalWithIdModel'
          description: Created
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Education Goal data access.
        "403":
          content: {}
          description: Request is restricted for access to Education Goal.
        "404":
          content: {}
          description: Education Goal not found.
      tags:
      - EducationGoals
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/EducationGoals/{educationGoalId}/Expenses:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Education Goal Expenses\
        \ for the specified Education Goal ID.<br />\r\n              Purpose: Provides\
        \ access to the Education Goal Expenses including description and annual cost."
      operationId: EducationGoals_GetEducationExpensesByEducationGoalIdByEducationgoalid
      parameters:
      - description: The ID of the Education Goal used to retrieve Education Goal
          Expenses
        in: path
        name: educationGoalId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationExpensesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/EducationExpensesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Education Goal Expense data access.
        "403":
          content: {}
          description: Request is restricted for access to Education Goal Expense.
        "404":
          content: {}
          description: Education Goal Expense not found.
      tags:
      - EducationGoals
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      description: "Description: The operation creates an Education Goal Expense.<br\
        \ />\r\n              Purpose: Allows for creation of Education Goal Expenses\
        \ on a Fact Finder."
      operationId: EducationGoals_PostByEducationgoalidModel
      parameters:
      - description: The Education Goal ID used to locate the Goal to add the expense
          to
        in: path
        name: educationGoalId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EducationExpenseModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EducationExpenseModel'
        description: The Education Goal Expense to be added to the Fact Finder
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationExpenseWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/EducationExpenseWithIdModel'
          description: Created
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Education Goal Expense data access.
        "403":
          content: {}
          description: Request is restricted for access to Education Goal Expense.
        "404":
          content: {}
          description: Education Goal Expense not found.
      tags:
      - EducationGoals
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/EducationGoals/{educationGoalId}/Expenses/{id}:
    delete:
      deprecated: false
      description: "Description: The operation removes an Education Goal Expense tied\
        \ to a Fact Finder.<br />\r\n              Purpose: Allows for removal of\
        \ an Education Goal Expense from a Fact Finder."
      operationId: EducationGoals_DeleteByEducationgoalidId
      parameters:
      - description: The Education Goal ID used to locate the Goal to delete the Expense
          under
        in: path
        name: educationGoalId
        required: true
        schema:
          format: int32
          type: integer
      - description: The Education Goal Expense ID used to identify which Education
          Goal Expense to remove
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Deleted
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Education Goal Expense data access.
        "403":
          content: {}
          description: Request is restricted for access to Education Goal Expense.
        "404":
          content: {}
          description: Education Goal Expense not found.
      tags:
      - EducationGoals
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: "Description: This operation retrieves a single Education Goal\
        \ Expense for the specified Education Goal Expense ID.<br />\r\n         \
        \     Purpose: Provides access to the Education Goal Expense including description\
        \ and annual cost."
      operationId: EducationGoals_GetEducationExpenseByEducationgoalidId
      parameters:
      - description: The ID of the Education Goal used to retrieve Education Goal
          Expenses
        in: path
        name: educationGoalId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the Education Goal Expense used to retreive the Education
          Goal Expense
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationExpenseWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/EducationExpenseWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Education Goal Expense data access.
        "403":
          content: {}
          description: Request is restricted for access to Education Goal Expense.
        "404":
          content: {}
          description: Education Goal Expense not found.
      tags:
      - EducationGoals
      x-accepts:
      - application/json
      - text/json
    put:
      deprecated: false
      description: "Description: The operation updates an Education Goal Expense.<br\
        \ />\r\n              Purpose: Allows for complete replacement of an Education\
        \ Goal Expense on a Fact Finder."
      operationId: EducationGoals_PutByEducationgoalidIdModel
      parameters:
      - description: The Education Goal ID used to locate the Goal to update the Expense
          under
        in: path
        name: educationGoalId
        required: true
        schema:
          format: int32
          type: integer
      - description: The existing Education Goal Expense ID used to identify which
          Education Goal Expense to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EducationExpenseModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EducationExpenseModel'
        description: The Education Goal Expense to be added to the Fact Finder
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationExpenseWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/EducationExpenseWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Education Goal Expense data access.
        "403":
          content: {}
          description: Request is restricted for access to Education Goal Expense.
        "404":
          content: {}
          description: Education Goal Expense not found.
      tags:
      - EducationGoals
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/EducationGoals/{id}:
    delete:
      deprecated: false
      description: "Description: The operation removes an Education Goal tied to a\
        \ Fact Finder.<br />\r\n              Purpose: Allows for removal of an Education\
        \ Goal from a Fact Finder."
      operationId: EducationGoals_DeleteById
      parameters:
      - description: The Education Goal ID used to identify which Education Goal to
          remove
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Deleted
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Education Goal data access.
        "403":
          content: {}
          description: Request is restricted for access to Education Goal.
        "404":
          content: {}
          description: Education Goal not found.
      tags:
      - EducationGoals
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: "Description: This operation retrieves a single Education Goal\
        \ for the specified Education Goal ID.<br />\r\n              Purpose: Provides\
        \ access to the Education Goal including description and projected cost."
      operationId: EducationGoals_GetById
      parameters:
      - description: The ID of the Education Goal used to retreive the Education Goal
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationGoalWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/EducationGoalWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Education Goal data access.
        "403":
          content: {}
          description: Request is restricted for access to Education Goal.
        "404":
          content: {}
          description: Education Goal not found.
      tags:
      - EducationGoals
      x-accepts:
      - application/json
      - text/json
    put:
      deprecated: false
      description: "Description: The operation creates an Education Goal Expense.<br\
        \ />\r\n              Purpose: Allows for creation of Education Goal Expenses\
        \ on a Fact Finder."
      operationId: EducationGoals_PutByIdModel
      parameters:
      - description: The Education Goal ID used to locate the Goal to add the Expense
          to
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EducationGoalModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EducationGoalModel'
        description: The Education Goal Expense to be added to the Fact Finder
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationGoalWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/EducationGoalWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Education Goal Expense data access.
        "403":
          content: {}
          description: Request is restricted for access to Education Goal Expense.
        "404":
          content: {}
          description: Education Goal Expense not found.
      tags:
      - EducationGoals
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/ExpenseTypes:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Expense Types for the\
        \ specified country.<br />\r\n              Purpose: Provides access to the\
        \ Expense Types including id and type description."
      operationId: ExpenseTypes_GetByCountry
      parameters:
      - description: The country used to filter Expense Types
        in: query
        name: country
        required: true
        schema:
          enum:
          - UnitedStates
          - Canada
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseTypesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpenseTypesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "404":
          content: {}
          description: Expense Type not found.
      tags:
      - ExpenseTypes
      x-accepts:
      - application/json
      - text/json
  /api/ExpenseTypes/{id}:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Expense Types for the\
        \ specified country.<br />\r\n              Purpose: Provides access to the\
        \ Expense Types including id and type description."
      operationId: ExpenseTypes_GetById
      parameters:
      - description: The ID of Expense Type used to retreive the Expense Type information
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseTypeModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpenseTypeModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "404":
          content: {}
          description: Expense Type not found.
      tags:
      - ExpenseTypes
      x-accepts:
      - application/json
      - text/json
  /api/Expenses:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Expenses for the specified\
        \ Fact Finder ID.<br />\r\n              Purpose: Provides access to the Expenses\
        \ including description and Expense type."
      operationId: Expenses_GetExpensesByFactFinderIdByFactfinderid
      parameters:
      - description: The ID of the Fact Finder used to retrieve Expenses
        in: query
        name: factFinderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpensesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpensesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Expense data access.
        "403":
          content: {}
          description: Request is restricted for access to Expense.
        "404":
          content: {}
          description: Expense not found.
      tags:
      - Expenses
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      description: "Description: The operation creates an Expense.<br />\r\n     \
        \         Purpose: Allows for creation of Expenses on a Fact Finder."
      operationId: Expenses_PostByModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ExpenseModel'
        description: The Expense to be added to the Fact Finder
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpenseWithIdModel'
          description: Created
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Expense data access.
        "403":
          content: {}
          description: Request is restricted for access to Expense.
        "404":
          content: {}
          description: Expense not found.
      tags:
      - Expenses
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/Expenses/{id}:
    delete:
      deprecated: false
      description: "Description: The operation removes an Expense tied to a Fact Finder.<br\
        \ />\r\n              Purpose: Allows for removal of an Expense from a Fact\
        \ Finder."
      operationId: Expenses_DeleteById
      parameters:
      - description: The Expense ID used to identify which Expense to remove
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Deleted
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Expense data access.
        "403":
          content: {}
          description: Request is restricted for access to Expense.
        "404":
          content: {}
          description: Expense not found.
      tags:
      - Expenses
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: "Description: This operation retrieves a single Expense for the\
        \ specified Expense ID.<br />\r\n              Purpose: Provides access to\
        \ the Expense including description and Expense type."
      operationId: Expenses_GetById
      parameters:
      - description: The ID of the Expense used to retreive the Expense
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpenseWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Expense data access.
        "403":
          content: {}
          description: Request is restricted for access to Expense.
        "404":
          content: {}
          description: Expense not found.
      tags:
      - Expenses
      x-accepts:
      - application/json
      - text/json
    put:
      deprecated: false
      description: "Description: The operation updates an Expense.<br />\r\n     \
        \         Purpose: Allows for complete replacement of an Expense on a Fact\
        \ Finder. <br /><br />\r\n              Note: Expense type cannot be changed\
        \ for expenses prepopulated from NaviPlan."
      operationId: Expenses_PutByIdModel
      parameters:
      - description: The existing Expense ID used to identify which Expense to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ExpenseModel'
        description: The Expense to be updated on a Fact Finder
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpenseWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Expense data access.
        "403":
          content: {}
          description: Request is restricted for access to Expense.
        "404":
          content: {}
          description: Expense not found.
      tags:
      - Expenses
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/FactFinders:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Fact Finders for the\
        \ specified householdId, \r\n              or if null, all households associated\
        \ with the user.<br />\r\n              Purpose: Provides access to the Fact\
        \ Finder including status."
      operationId: FactFinders_GetByHouseholdIdByHouseholdid
      parameters:
      - description: "The ID of the household used to retrieve the fact finders. If\
          \ not set, uses all households associated with the user"
        in: query
        name: householdId
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FactFinderWithIdModel'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/FactFinderWithIdModel'
                type: array
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Fact Finder data access.
        "403":
          content: {}
          description: Request is restricted for access to Fact Finder.
        "404":
          content: {}
          description: Fact Finder not found.
      tags:
      - FactFinders
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      description: "Description: The operation creates a completely empty draft Fact\
        \ Finder.<br />\r\n              Requirements: A householdId and list of modules\
        \ must be provided.<br />\r\n              Purpose: Stages a Fact Finder for\
        \ population."
      operationId: FactFinders_PostByModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FactFinderEntityModel'
          text/json:
            schema:
              $ref: '#/components/schemas/FactFinderEntityModel'
        description: The Household the Fact Finder will belong to and the modules
          that are available.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FactFinderWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/FactFinderWithIdModel'
          description: Created
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Fact Finder data access.
        "403":
          content: {}
          description: Request is restricted for access to Fact Finder.
        "404":
          content: {}
          description: Fact Finder not found.
        "409":
          content: {}
          description: The request cannot be completed.
      tags:
      - FactFinders
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/FactFinders/Populate:
    post:
      deprecated: false
      description: "Description: The operation creates a new Populated Fact Finder.<br\
        \ />\r\n              Requirements: A householdId and list of modules must\
        \ be provided.<br />\r\n              Purpose: Creation of a Fact Finder."
      operationId: FactFinders_PostPopulateByModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FactFinderPopulatableEntityModel'
          text/json:
            schema:
              $ref: '#/components/schemas/FactFinderPopulatableEntityModel'
        description: "The Household the Fact Finder will belong to and the modules\
          \ that are available. \r\n            Optional PlanId to populate from"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FactFinderWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/FactFinderWithIdModel'
          description: Created
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Fact Finder data access.
        "403":
          content: {}
          description: Request is restricted for access to Fact Finder.
        "404":
          content: {}
          description: Fact Finder not found.
        "409":
          content: {}
          description: The request cannot be completed.
      tags:
      - FactFinders
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/FactFinders/{factFinderId}/Modules:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Fact Finder Modules\
        \ for the specified Fact Finder ID.<br />\r\n              Purpose: Provides\
        \ access to the Fact Finder Modules including description and policy type."
      operationId: FactFinderModules_GetByFactfinderid
      parameters:
      - description: The ID of the Fact Finder used to retrieve Fact Finder Modules
        in: path
        name: factFinderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FactFinderModulesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/FactFinderModulesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Fact Finder Module data access.
        "404":
          content: {}
          description: Fact Finder Module not found.
      tags:
      - FactFinderModules
      x-accepts:
      - application/json
      - text/json
  /api/FactFinders/{factFinderId}/Modules/{id}:
    get:
      deprecated: false
      description: "Description: This operation retrieves a single Fact Finder Module\
        \ for the specified Fact Finder Module ID.<br />\r\n              Purpose:\
        \ Provides access to the Fact Finder Module including description and policy\
        \ type."
      operationId: FactFinderModules_GetByFactfinderidId
      parameters:
      - description: The ID of the Fact Finder used to retrieve Fact Finder Module
        in: path
        name: factFinderId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the Fact Finder Module used to retreive the Fact Finder
          Module
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FactFinderModuleWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/FactFinderModuleWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Fact Finder Module data access.
        "404":
          content: {}
          description: Fact Finder Module not found.
      tags:
      - FactFinderModules
      x-accepts:
      - application/json
      - text/json
    put:
      deprecated: false
      description: "Description: The operation updates a Fact Finder Module.<br />\r\
        \n              Purpose: Allows for complete replacement of a Fact Finder\
        \ Module on a Fact Finder."
      operationId: FactFinderModules_PutByModelFactfinderidId
      parameters:
      - description: The ID of the Fact Finder used to identify the Fact Finder Module
          to update
        in: path
        name: factFinderId
        required: true
        schema:
          format: int32
          type: integer
      - description: The existing Fact Finder Module ID used to identify which Fact
          Finder Module to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FactFinderModuleModel'
          text/json:
            schema:
              $ref: '#/components/schemas/FactFinderModuleModel'
        description: The Fact Finder Module to be updated on a Fact Finder
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FactFinderModuleWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/FactFinderModuleWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Fact Finder Module data access.
        "404":
          content: {}
          description: Fact Finder Module not found.
      tags:
      - FactFinderModules
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/FactFinders/{factFinderId}/Snapshots:
    get:
      deprecated: false
      description: "Description: The operation retrieves Snapshots of a Fact Finder.<br\
        \ />\r\n              Purpose: Allows for advisors to view all Snapshots taken\
        \ of a Fact Finder."
      operationId: FactFinders_GetSnapshotsByFactfinderid
      parameters:
      - description: The ID of the Fact Finder to retrieve Snapshots for
        in: path
        name: factFinderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FactFinderSnapshotsModel'
            text/json:
              schema:
                $ref: '#/components/schemas/FactFinderSnapshotsModel'
          description: Created
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Fact Finder data access.
        "403":
          content: {}
          description: Request is restricted for access to Fact Finder.
        "404":
          content: {}
          description: Fact Finder not found.
      tags:
      - FactFinders
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      description: "Description: The operation creates a Snapshot of a Fact Finder.<br\
        \ />\r\n              Purpose: Allows for advisors to compare the current\
        \ fact finder to a snapshot prior to acceptance."
      operationId: FactFinders_PostSnapshotsByFactfinderid
      parameters:
      - description: The ID of the Fact Finder used to create the Fact Finder Snapshot
        in: path
        name: factFinderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FactFinderSnapshotWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/FactFinderSnapshotWithIdModel'
          description: Created
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Fact Finder data access.
        "403":
          content: {}
          description: Request is restricted for access to Fact Finder.
        "404":
          content: {}
          description: Fact Finder not found.
      tags:
      - FactFinders
      x-accepts:
      - application/json
      - text/json
  /api/FactFinders/{id}:
    delete:
      deprecated: false
      description: "Description: This operation deletes a single Fact Finder for the\
        \ specified Fact Finder ID.<br />\r\n              Purpose: Deletes the fact\
        \ finder."
      operationId: FactFinders_DeleteById
      parameters:
      - description: The ID of the Fact Finder to be deleted
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK
        "204":
          content: {}
          description: Deleted
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Fact Finder data access.
        "403":
          content: {}
          description: Request is restricted for access to Fact Finder.
        "404":
          content: {}
          description: Fact Finder not found.
      tags:
      - FactFinders
      x-accepts:
      - application/json
      - text/json
    get:
      deprecated: false
      description: "Description: This operation retrieves a single Fact Finder for\
        \ the specified Fact Finder ID.<br />\r\n              Purpose: Provides access\
        \ to the Fact Finder including status."
      operationId: FactFinders_GetById
      parameters:
      - description: The ID of the Fact Finder used to retrieve the Fact Finder
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FactFinderWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/FactFinderWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Fact Finder data access.
        "403":
          content: {}
          description: Request is restricted for access to Fact Finder.
        "404":
          content: {}
          description: Fact Finder not found.
      tags:
      - FactFinders
      x-accepts:
      - application/json
      - text/json
    put:
      deprecated: false
      description: "Description: The operation updates a Fact Finder.<br />\r\n  \
        \            Purpose: Allows for the updating of a Fact Finder."
      operationId: FactFinders_PutByIdModel
      parameters:
      - description: The existing Fact Finder ID used to identify which Fact Finder
          to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FactFinderModel'
          text/json:
            schema:
              $ref: '#/components/schemas/FactFinderModel'
        description: The Fact Finder to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FactFinderWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/FactFinderWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Fact Finder data access.
        "403":
          content: {}
          description: Request is restricted for access to Fact Finder.
        "404":
          content: {}
          description: Fact Finder not found.
      tags:
      - FactFinders
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/FactFinders/{id}/Populate:
    put:
      deprecated: false
      description: "Description: The operation populates a fact finder.<br />\r\n\
        \              Purpose: Allows for the population of a Fact Finder based on\
        \ a NaviPlan plan or client. This\r\n                       operation cannot\
        \ be performed on a Fact Finder more than once."
      operationId: FactFinders_PutPopulateFactFinderByIdModel
      parameters:
      - description: The existing Fact Finder ID used to identify which Fact Finder
          to populate.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FactFinderPopulationModel'
          text/json:
            schema:
              $ref: '#/components/schemas/FactFinderPopulationModel'
        description: "The plan to populate a fact finder from. If not provided, the\
          \ client id will be inferred."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FactFinderWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/FactFinderWithIdModel'
          description: Fact Finder was successfully populated.
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Fact Finder data access.
        "403":
          content: {}
          description: Request is restricted for access to Fact Finder.
        "404":
          content: {}
          description: Fact Finder not found.
        "409":
          content: {}
          description: Fact Finder already populated.
      tags:
      - FactFinders
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/FilingStatusTypes:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Filing Status Types\
        \ for the specified country.<br />\r\n              Purpose: Provides access\
        \ to the Filing Status Types including id and type description."
      operationId: FilingStatusTypes_GetByCountry
      parameters:
      - description: The country used to filter Filing Status Types
        in: query
        name: country
        required: true
        schema:
          enum:
          - UnitedStates
          - Canada
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilingStatusTypesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/FilingStatusTypesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "404":
          content: {}
          description: Filing Status Type not found.
      tags:
      - FilingStatusTypes
      x-accepts:
      - application/json
      - text/json
  /api/FilingStatusTypes/{id}:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Filing Status Type for\
        \ the specified id.<br />\r\n              Purpose: Provides access to the\
        \ Filing Status Types including id and type description."
      operationId: FilingStatusTypes_GetById
      parameters:
      - description: The ID of Filing Status Type used to retreive the Filing Status
          Type information
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilingStatusTypeModel'
            text/json:
              schema:
                $ref: '#/components/schemas/FilingStatusTypeModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "404":
          content: {}
          description: Filing Status Type not found.
      tags:
      - FilingStatusTypes
      x-accepts:
      - application/json
      - text/json
  /api/FrequencyTypes:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Frequency Types for\
        \ the specified country and entity.<br />\r\n              Purpose: Provides\
        \ access to the Frequency Types including id and type description."
      operationId: FrequencyTypes_GetByEntityCountry
      parameters:
      - description: The entity used to filter Frequency Types
        in: query
        name: entity
        required: true
        schema:
          enum:
          - CriticalIllnessInsurancePolicies
          - DisabilityInsurancePoliciesPremium
          - DisabilityInsurancePoliciesBenefit
          - Expenses
          - Liabilities
          - LifeInsurancePolicies
          - LongTermCareInsurancePoliciesBenefit
          - LongTermCareInsurancePoliciesPremium
          - RealEstateAssets
          - RetirementExpenses
          - SavingsStrategies
          type: string
      - description: The country used to filter Frequency Types
        in: query
        name: country
        required: true
        schema:
          enum:
          - UnitedStates
          - Canada
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrequencyTypesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/FrequencyTypesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "404":
          content: {}
          description: Frequency Type not found.
      tags:
      - FrequencyTypes
      x-accepts:
      - application/json
      - text/json
  /api/FrequencyTypes/{id}:
    get:
      deprecated: false
      description: "Description: This operation retrieves the Frequency Type for the\
        \ specified id.<br />\r\n              Purpose: Provides access to the Frequency\
        \ Types including id and type description."
      operationId: FrequencyTypes_GetById
      parameters:
      - description: The ID of Frequency Type used to retreive the Frequency Type
          information
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrequencyTypeModel'
            text/json:
              schema:
                $ref: '#/components/schemas/FrequencyTypeModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "404":
          content: {}
          description: Frequency Type not found.
      tags:
      - FrequencyTypes
      x-accepts:
      - application/json
      - text/json
  /api/IncomeTypes:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Income Types for the\
        \ specified country.<br />\r\n              Purpose: Provides access to the\
        \ Income Types including id and type description."
      operationId: IncomeTypes_GetByCountry
      parameters:
      - description: The country used to filter Income Types
        in: query
        name: country
        required: true
        schema:
          enum:
          - UnitedStates
          - Canada
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeTypesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/IncomeTypesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "404":
          content: {}
          description: Income Type not found.
      tags:
      - IncomeTypes
      x-accepts:
      - application/json
      - text/json
  /api/IncomeTypes/{id}:
    get:
      deprecated: false
      description: "Description: This operation retrieves the Income Type for the\
        \ specified id.<br />\r\n              Purpose: Provides access to the Income\
        \ Types including id and type description."
      operationId: IncomeTypes_GetById
      parameters:
      - description: The ID of Income Type used to retreive the Income Type information
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeTypeModel'
            text/json:
              schema:
                $ref: '#/components/schemas/IncomeTypeModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "404":
          content: {}
          description: Income Type not found.
      tags:
      - IncomeTypes
      x-accepts:
      - application/json
      - text/json
  /api/Incomes:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Incomes for the specified\
        \ Fact Finder ID.<br />\r\n              Purpose: Provides access to the Incomes\
        \ including annual amount and start date."
      operationId: Incomes_GetIncomesByFactFinderIdByFactfinderid
      parameters:
      - description: The ID of the Fact Finder used to retrieve Incomes
        in: query
        name: factFinderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/IncomesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Income data access.
        "403":
          content: {}
          description: Request is restricted for access to Income.
        "404":
          content: {}
          description: Income not found.
      tags:
      - Incomes
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      description: "Description: The operation creates an Income.<br />\r\n      \
        \        Purpose: Allows for creation of Incomes on a Fact Finder."
      operationId: Incomes_PostByModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncomeModel'
          text/json:
            schema:
              $ref: '#/components/schemas/IncomeModel'
        description: The Income to be added to the Fact Finder
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/IncomeWithIdModel'
          description: Created
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Income data access.
        "403":
          content: {}
          description: Request is restricted for access to Income.
        "404":
          content: {}
          description: Income not found.
      tags:
      - Incomes
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/Incomes/{id}:
    delete:
      deprecated: false
      description: "Description: The operation removes an Income tied to a Fact Finder.<br\
        \ />\r\n              Purpose: Allows for removal of an Income from a Fact\
        \ Finder."
      operationId: Incomes_DeleteById
      parameters:
      - description: The Income ID used to identify which Income to remove
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Deleted
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Income data access.
        "403":
          content: {}
          description: Request is restricted for access to Income.
        "404":
          content: {}
          description: Income not found.
      tags:
      - Incomes
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: "Description: This operation retrieves a single Income for the\
        \ specified Income ID.<br />\r\n              Purpose: Provides access to\
        \ the Income including annual amount and start date."
      operationId: Incomes_GetById
      parameters:
      - description: The ID of the Income used to retreive the Income
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/IncomeWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Income data access.
        "403":
          content: {}
          description: Request is restricted for access to Income.
        "404":
          content: {}
          description: Income not found.
      tags:
      - Incomes
      x-accepts:
      - application/json
      - text/json
    put:
      deprecated: false
      description: "Description: The operation updates an Income.<br />\r\n      \
        \        Purpose: Allows for complete replacement of an Income on a Fact Finder."
      operationId: Incomes_PutByIdModel
      parameters:
      - description: The existing Income ID used to identify which Income to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncomeModel'
          text/json:
            schema:
              $ref: '#/components/schemas/IncomeModel'
        description: The Income to be updated on a Fact Finder
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/IncomeWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Income data access.
        "403":
          content: {}
          description: Request is restricted for access to Income.
        "404":
          content: {}
          description: Income not found.
      tags:
      - Incomes
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/Liabilities:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Liabilities for the\
        \ specified Fact Finder ID.<br />\r\n              Purpose: Provides access\
        \ to the Liabilities including owner and type."
      operationId: Liabilities_GetLiabilitiesByFactFinderIdByFactfinderidExternalsourceid
      parameters:
      - description: The ID of the Fact Finder used to retrieve Liabilities
        in: query
        name: factFinderId
        required: true
        schema:
          format: int32
          type: integer
      - description: The external source ID used to filter Liabilities
        in: query
        name: externalSourceId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiabilitiesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LiabilitiesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Liability data access.
        "403":
          content: {}
          description: Request is restricted for access to Liability.
        "404":
          content: {}
          description: Liability not found.
      tags:
      - Liabilities
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      description: "Description: The operation creates a Liability.<br />\r\n    \
        \          Purpose: Allows for creation of Liabilities on a Fact Finder."
      operationId: Liabilities_PostByModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiabilityModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LiabilityModel'
        description: The Liability to be added to the Fact Finder
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiabilityWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LiabilityWithIdModel'
          description: Created
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Liability data access.
        "403":
          content: {}
          description: Request is restricted for access to Liability.
        "404":
          content: {}
          description: Liability not found.
      tags:
      - Liabilities
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/Liabilities/{id}:
    delete:
      deprecated: false
      description: "Description: The operation removes a Liability tied to a Fact\
        \ Finder.<br />\r\n              Purpose: Allows for removal of a Liability\
        \ from a Fact Finder."
      operationId: Liabilities_DeleteById
      parameters:
      - description: The Liability ID used to identify which Liability to remove
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Deleted
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Liability data access.
        "403":
          content: {}
          description: Request is restricted for access to Liability.
        "404":
          content: {}
          description: Liability not found.
      tags:
      - Liabilities
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: "Description: This operation retrieves a single Liability for the\
        \ specified Liability ID.<br />\r\n              Purpose: Provides access\
        \ to the Liability including owner and type."
      operationId: Liabilities_GetById
      parameters:
      - description: The ID of the Liability used to retreive the Liability
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiabilityWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LiabilityWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Liability data access.
        "403":
          content: {}
          description: Request is restricted for access to Liability.
        "404":
          content: {}
          description: Liability not found.
      tags:
      - Liabilities
      x-accepts:
      - application/json
      - text/json
    put:
      deprecated: false
      description: "Description: The operation updates a Liability.<br />\r\n    \
        \          Purpose: Allows for complete replacement of a Liability on a Fact\
        \ Finder."
      operationId: Liabilities_PutByIdModel
      parameters:
      - description: The existing Liability ID used to identify which Liability to
          update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiabilityModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LiabilityModel'
        description: The Liability to be updated on a Fact Finder
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiabilityWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LiabilityWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Liability data access.
        "403":
          content: {}
          description: Request is restricted for access to Liability.
        "404":
          content: {}
          description: Liability not found.
      tags:
      - Liabilities
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/LiabilityTypes:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Liability Types for\
        \ the specified country.<br />\r\n              Purpose: Provides access to\
        \ the Liability Types including id and type description."
      operationId: LiabilityTypes_GetByCountry
      parameters:
      - description: The country used to filter Liability Types
        in: query
        name: country
        required: true
        schema:
          enum:
          - UnitedStates
          - Canada
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiabilityTypesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LiabilityTypesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "404":
          content: {}
          description: Liability Type not found.
      tags:
      - LiabilityTypes
      x-accepts:
      - application/json
      - text/json
  /api/LiabilityTypes/{id}:
    get:
      deprecated: false
      description: "Description: This operation retrieves the Liability Type for the\
        \ specified id.<br />\r\n              Purpose: Provides access to the Liability\
        \ Types including id and type description."
      operationId: LiabilityTypes_GetById
      parameters:
      - description: The ID of Liability Type used to retreive the Liability Type
          information
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiabilityTypeModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LiabilityTypeModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "404":
          content: {}
          description: Liability Type not found.
      tags:
      - LiabilityTypes
      x-accepts:
      - application/json
      - text/json
  /api/LifeInsurancePolicies:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Life Insurance Policies\
        \ for the specified Fact Finder ID.<br />\r\n              Purpose: Provides\
        \ access to the Life Insurance Policies including description and policy type."
      operationId: LifeInsurancePolicies_GetLifeInsurancePoliciesByFactFinderIdByFactfinderid
      parameters:
      - description: The ID of the Fact Finder used to retrieve Life Insurance Policies
        in: query
        name: factFinderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifeInsurancePoliciesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LifeInsurancePoliciesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Life Insurance Policy data access.
        "403":
          content: {}
          description: Request is restricted for access to Life Insurance Policy.
        "404":
          content: {}
          description: Life Insurance Policy not found.
      tags:
      - LifeInsurancePolicies
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      description: "Description: The operation creates a Life Insurance Policy.<br\
        \ />\r\n              Purpose: Allows for creation of Life Insurance Policies\
        \ on a Fact Finder."
      operationId: LifeInsurancePolicies_PostByModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LifeInsurancePolicyModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LifeInsurancePolicyModel'
        description: The Life Insurance Policy to be added to the Fact Finder
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifeInsurancePolicyWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LifeInsurancePolicyWithIdModel'
          description: Created
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Life Insurance Policy data access.
        "403":
          content: {}
          description: Request is restricted for access to Life Insurance Policy.
        "404":
          content: {}
          description: Life Insurance Policy not found.
      tags:
      - LifeInsurancePolicies
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/LifeInsurancePolicies/{id}:
    delete:
      deprecated: false
      description: "Description: The operation removes a Life Insurance Policy tied\
        \ to a Fact Finder.<br />\r\n              Purpose: Allows for removal of\
        \ a Life Insurance Policy and associated subaccounts from a Fact Finder."
      operationId: LifeInsurancePolicies_DeleteById
      parameters:
      - description: The Life Insurance Policy ID used to identify which Life Insurance
          Policy to remove
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Deleted
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Life Insurance Policy data access.
        "403":
          content: {}
          description: Request is restricted for access to Life Insurance Policy.
        "404":
          content: {}
          description: Life Insurance Policy not found.
      tags:
      - LifeInsurancePolicies
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: "Description: This operation retrieves a single Life Insurance\
        \ Policy for the specified Life Insurance Policy ID.<br />\r\n           \
        \   Purpose: Provides access to the Life Insurance Policy including description\
        \ and policy type."
      operationId: LifeInsurancePolicies_GetById
      parameters:
      - description: The ID of the Life Insurance Policy used to retreive the Life
          Insurance Policy
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifeInsurancePolicyWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LifeInsurancePolicyWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Life Insurance Policy data access.
        "403":
          content: {}
          description: Request is restricted for access to Life Insurance Policy.
        "404":
          content: {}
          description: Life Insurance Policy not found.
      tags:
      - LifeInsurancePolicies
      x-accepts:
      - application/json
      - text/json
    put:
      deprecated: false
      description: "Description: The operation updates a Life Insurance Policy, deletes\
        \ associated sub-accounts if the policy type changes.<br />\r\n          \
        \    Purpose: Allows for complete replacement of a Life Insurance Policy on\
        \ a Fact Finder."
      operationId: LifeInsurancePolicies_PutByIdModel
      parameters:
      - description: The existing Life Insurance Policy ID used to identify which
          Life Insurance Policy to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LifeInsurancePolicyModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LifeInsurancePolicyModel'
        description: The Life Insurance Policy to be updated on a Fact Finder
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifeInsurancePolicyWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LifeInsurancePolicyWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Life Insurance Policy data access.
        "403":
          content: {}
          description: Request is restricted for access to Life Insurance Policy.
        "404":
          content: {}
          description: Life Insurance Policy not found.
      tags:
      - LifeInsurancePolicies
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/LifeInsurancePolicies/{lifeInsurancePolicyId}/Subaccounts:
    get:
      deprecated: false
      description: "Description: Get all the subaccounts for an existing Life Insurance\
        \ Policy.<br />\r\n              Purpose: Provides access to all the Life\
        \ Insurance Policy subaccounts."
      operationId: LifeInsurancePolicies_GetSubaccountsByLifeinsurancepolicyid
      parameters:
      - description: The ID of the Life Insurance Policy used to retrieve the Life
          Insurance Policy Subaccounts.
        in: path
        name: lifeInsurancePolicyId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifeInsurancePolicySubaccountsModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LifeInsurancePolicySubaccountsModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Life Insurance Policy data access.
        "403":
          content: {}
          description: Request is restricted for access to Life Insurance Policy.
        "404":
          content: {}
          description: Life Insurance Policy not found.
      tags:
      - LifeInsurancePolicies
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      description: "Description: Creates a subaccount and adds it to an existing Life\
        \ Insurance Policy.<br />\r\n              Purpose: Allows for creation of\
        \ subaccount on a Life Insurance Policy."
      operationId: LifeInsurancePolicies_PostSubaccountByLifeinsurancepolicyidModel
      parameters:
      - description: The ID of the Life Insurance Policy used to create the Life Insurance
          Policy Subaccount.
        in: path
        name: lifeInsurancePolicyId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LifeInsurancePolicySubaccountModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LifeInsurancePolicySubaccountModel'
        description: The Life Insurance Policy Subaccount model.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifeInsurancePolicySubaccountWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LifeInsurancePolicySubaccountWithIdModel'
          description: Created
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Life Insurance Policy data access.
        "403":
          content: {}
          description: Request is restricted for access to Life Insurance Policy.
        "404":
          content: {}
          description: Life Insurance Policy not found.
      tags:
      - LifeInsurancePolicies
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/LifeInsurancePolicies/{lifeInsurancePolicyId}/Subaccounts/{id}:
    delete:
      deprecated: false
      description: "Description: Deletes an existing Life Insurance Policy Subaccount\
        \ for an existing Life Insurance Policy.<br />\r\n              Purpose: Allows\
        \ for removal of a subaccount from a Life Insurance Policy."
      operationId: LifeInsurancePolicies_DeleteSubaccountByLifeinsurancepolicyidId
      parameters:
      - description: The ID of the Life Insurance Policy used to delete the Life Insurance
          Policy Subaccount.
        in: path
        name: lifeInsurancePolicyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the Life Insurance Policy Subaccount.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Deleted
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Life Insurance Policy data access.
        "403":
          content: {}
          description: Request is restricted for access to Life Insurance Policy.
        "404":
          content: {}
          description: Life Insurance Policy Subaccount not found.
      tags:
      - LifeInsurancePolicies
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: "Description: Get a specific subaccount for an existing Life Insurance\
        \ Policy.<br />\r\n              Purpose: Provides access to the Life Insurance\
        \ Policy subaccount."
      operationId: LifeInsurancePolicies_GetSubaccountByLifeinsurancepolicyidId
      parameters:
      - description: The ID of the Life Insurance Policy used to retrieve the Life
          Insurance Policy Subaccount.
        in: path
        name: lifeInsurancePolicyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the Life Insurance Policy Subaccount.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifeInsurancePolicySubaccountWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LifeInsurancePolicySubaccountWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Life Insurance Policy data access.
        "403":
          content: {}
          description: Request is restricted for access to Life Insurance Policy.
        "404":
          content: {}
          description: Life Insurance Policy Subaccount not found.
      tags:
      - LifeInsurancePolicies
      x-accepts:
      - application/json
      - text/json
    put:
      deprecated: false
      description: "Description: Updates an existing Life Insurance Policy Subaccount\
        \ for an existing Life Insurance Policy.<br />\r\n              Purpose: Allows\
        \ for complete replacement of a subaccount on a Life Insurance Policy."
      operationId: LifeInsurancePolicies_PutSubaccountByLifeinsurancepolicyidIdModel
      parameters:
      - description: The ID of the Life Insurance Policy used to update the Life Insurance
          Policy Subaccount.
        in: path
        name: lifeInsurancePolicyId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the Life Insurance Policy Subaccount.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LifeInsurancePolicySubaccountModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LifeInsurancePolicySubaccountModel'
        description: The Life Insurance Policy Subaccount model.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifeInsurancePolicySubaccountModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LifeInsurancePolicySubaccountModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Life Insurance Policy data access.
        "403":
          content: {}
          description: Request is restricted for access to Life Insurance Policy.
        "404":
          content: {}
          description: Life Insurance Policy Subaccount not found.
      tags:
      - LifeInsurancePolicies
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/LifeInsurancePolicyTypes:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Life Insurance Policy\
        \ Types for the specified country.<br />\r\n              Purpose: Provides\
        \ access to the Life Insurance Policy Types including id and type description."
      operationId: LifeInsurancePolicyTypes_GetByCountry
      parameters:
      - description: The country used to filter Life Insurance Policy Types
        in: query
        name: country
        required: true
        schema:
          enum:
          - UnitedStates
          - Canada
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifeInsurancePolicyTypesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LifeInsurancePolicyTypesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "404":
          content: {}
          description: Life Insurance Policy Type not found.
      tags:
      - LifeInsurancePolicyTypes
      x-accepts:
      - application/json
      - text/json
  /api/LifeInsurancePolicyTypes/{id}:
    get:
      deprecated: false
      description: "Description: This operation retrieves the Life Insurance Policy\
        \ Type for the specified id.<br />\r\n              Purpose: Provides access\
        \ to the Life Insurance Policy Types including id and type description."
      operationId: LifeInsurancePolicyTypes_GetById
      parameters:
      - description: The ID of Life Insurance Policy Type used to retreive the Life
          Insurance Policy Type information
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifeInsurancePolicyTypeModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LifeInsurancePolicyTypeModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "404":
          content: {}
          description: Life Insurance Policy Type not found.
      tags:
      - LifeInsurancePolicyTypes
      x-accepts:
      - application/json
      - text/json
  /api/LifestyleAssetTypes:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Lifestyle Asset Types\
        \ for the specified country.<br />\r\n              Purpose: Provides access\
        \ to the Lifestyle Asset Types including id and type description."
      operationId: LifestyleAssetTypes_GetByCountry
      parameters:
      - description: The country used to filter Lifestyle Asset Types
        in: query
        name: country
        required: true
        schema:
          enum:
          - UnitedStates
          - Canada
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifestyleAssetTypesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LifestyleAssetTypesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "404":
          content: {}
          description: Lifestyle Asset Type not found.
      tags:
      - LifestyleAssetTypes
      x-accepts:
      - application/json
      - text/json
  /api/LifestyleAssetTypes/{id}:
    get:
      deprecated: false
      description: "Description: This operation retrieves the Lifestyle Asset Type\
        \ for the specified id.<br />\r\n              Purpose: Provides access to\
        \ the Lifestyle Asset Types including id and type description."
      operationId: LifestyleAssetTypes_GetById
      parameters:
      - description: The ID of Lifestyle Asset Type used to retreive the Lifestyle
          Asset Type information
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifestyleAssetTypeModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LifestyleAssetTypeModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "404":
          content: {}
          description: Lifestyle Asset Type not found.
      tags:
      - LifestyleAssetTypes
      x-accepts:
      - application/json
      - text/json
  /api/LifestyleAssets:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Lifestyle Assets for\
        \ the specified Fact Finder ID.<br />\r\n              Purpose: Provides access\
        \ to the Lifestyle Assets including description and market value."
      operationId: LifestyleAssets_GetLifestyleAssetsByFactFinderIdByFactfinderid
      parameters:
      - description: The ID of the Fact Finder used to retrieve Lifestyle Assets
        in: query
        name: factFinderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifestyleAssetsModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LifestyleAssetsModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Lifestyle Asset data access.
        "403":
          content: {}
          description: Request is restricted for access to Lifestyle Asset.
        "404":
          content: {}
          description: Lifestyle Asset not found.
      tags:
      - LifestyleAssets
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      description: "Description: The operation creates a Lifestyle Asset.<br />\r\n\
        \              Purpose: Allows for creation of Lifestyle Assets on a Fact\
        \ Finder."
      operationId: LifestyleAssets_PostByModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LifestyleAssetModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LifestyleAssetModel'
        description: The Lifestyle Asset to be added to the Fact Finder
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifestyleAssetWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LifestyleAssetWithIdModel'
          description: Created
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Lifestyle Asset data access.
        "403":
          content: {}
          description: Request is restricted for access to Lifestyle Asset.
        "404":
          content: {}
          description: Lifestyle Asset not found.
      tags:
      - LifestyleAssets
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/LifestyleAssets/{id}:
    delete:
      deprecated: false
      description: "Description: The operation removes a Lifestyle Asset tied to a\
        \ Fact Finder.<br />\r\n              Purpose: Allows for removal of a Lifestyle\
        \ Asset from a Fact Finder."
      operationId: LifestyleAssets_DeleteById
      parameters:
      - description: The Lifestyle Asset ID used to identify which Lifestyle Asset
          to remove
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Deleted
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Lifestyle Asset data access.
        "403":
          content: {}
          description: Request is restricted for access to Lifestyle Asset.
        "404":
          content: {}
          description: Lifestyle Asset not found.
      tags:
      - LifestyleAssets
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: "Description: This operation retrieves a single Lifestyle Asset\
        \ for the specified Lifestyle Asset ID.<br />\r\n              Purpose: Provides\
        \ access to the Lifestyle Asset including description and market value."
      operationId: LifestyleAssets_GetById
      parameters:
      - description: The ID of the Lifestyle Asset used to retreive the Lifestyle
          Asset
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifestyleAssetWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LifestyleAssetWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Lifestyle Asset data access.
        "403":
          content: {}
          description: Request is restricted for access to Lifestyle Asset.
        "404":
          content: {}
          description: Lifestyle Asset not found.
      tags:
      - LifestyleAssets
      x-accepts:
      - application/json
      - text/json
    put:
      deprecated: false
      description: "Description: The operation updates a Lifestyle Asset.<br />\r\n\
        \              Purpose: Allows for complete replacement of a Lifestyle Asset\
        \ on a Fact Finder."
      operationId: LifestyleAssets_PutByIdModel
      parameters:
      - description: The existing Lifestyle Asset ID used to identify which Lifestyle
          Asset to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LifestyleAssetModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LifestyleAssetModel'
        description: The Lifestyle Asset to be updated on a Fact Finder
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifestyleAssetWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LifestyleAssetWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Lifestyle Asset data access.
        "403":
          content: {}
          description: Request is restricted for access to Lifestyle Asset.
        "404":
          content: {}
          description: Lifestyle Asset not found.
      tags:
      - LifestyleAssets
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/LongTermCareInsurancePolicies:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Long Term Care Insurance\
        \ Policies for the specified Fact Finder ID.<br />\r\n              Purpose:\
        \ Provides access to the Long Term Care Insurance Policies including description\
        \ and premium."
      operationId: LongTermCareInsurancePolicies_GetLongTermCareInsurancePoliciesByFactFinderIdByFactfinderid
      parameters:
      - description: The ID of the Fact Finder used to retrieve Long Term Care Insurance
          Policies
        in: query
        name: factFinderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LongTermCareInsurancePoliciesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LongTermCareInsurancePoliciesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Long Term Care Insurance Policy data access.
        "403":
          content: {}
          description: Request is restricted for access to Long Term Care Insurance
            Policy.
        "404":
          content: {}
          description: Long Term Care Insurance Policy not found.
      tags:
      - LongTermCareInsurancePolicies
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      description: "Description: The operation creates a Long Term Care Insurance\
        \ Policy.<br />\r\n              Purpose: Allows for creation of Long Term\
        \ Care Insurance Policies on a Fact Finder."
      operationId: LongTermCareInsurancePolicies_PostByModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LongTermCareInsurancePolicyModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LongTermCareInsurancePolicyModel'
        description: The Long Term Care Insurance Policy to be added to the Fact Finder
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LongTermCareInsurancePolicyWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LongTermCareInsurancePolicyWithIdModel'
          description: Created
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Long Term Care Insurance Policy data access.
        "403":
          content: {}
          description: Request is restricted for access to Long Term Care Insurance
            Policy.
        "404":
          content: {}
          description: Long Term Care Insurance Policy not found.
      tags:
      - LongTermCareInsurancePolicies
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/LongTermCareInsurancePolicies/{id}:
    delete:
      deprecated: false
      description: "Description: The operation removes a Long Term Care Insurance\
        \ Policy tied to a Fact Finder.<br />\r\n              Purpose: Allows for\
        \ removal of a Long Term Care Insurance Policy from a Fact Finder."
      operationId: LongTermCareInsurancePolicies_DeleteById
      parameters:
      - description: The Long Term Care Insurance Policy ID used to identify which
          Long Term Care Insurance Policy to remove
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Deleted
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Long Term Care Insurance Policy data access.
        "403":
          content: {}
          description: Request is restricted for access to Long Term Care Insurance
            Policy.
        "404":
          content: {}
          description: Long Term Care Insurance Policy not found.
      tags:
      - LongTermCareInsurancePolicies
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: "Description: This operation retrieves a single Long Term Care\
        \ Insurance Policy for the specified Long Term Care Insurance Policy ID.<br\
        \ />\r\n              Purpose: Provides access to the Long Term Care Insurance\
        \ Policy including description and premium."
      operationId: LongTermCareInsurancePolicies_GetById
      parameters:
      - description: The ID of the Long Term Care Insurance Policy used to retreive
          the Long Term Care Insurance Policy
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LongTermCareInsurancePolicyWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LongTermCareInsurancePolicyWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Long Term Care Insurance Policy data access.
        "403":
          content: {}
          description: Request is restricted for access to Long Term Care Insurance
            Policy.
        "404":
          content: {}
          description: Long Term Care Insurance Policy not found.
      tags:
      - LongTermCareInsurancePolicies
      x-accepts:
      - application/json
      - text/json
    put:
      deprecated: false
      description: "Description: The operation updates a Long Term Care Insurance\
        \ Policy.<br />\r\n              Purpose: Allows for complete replacement\
        \ of a Long Term Care Insurance Policy on a Fact Finder."
      operationId: LongTermCareInsurancePolicies_PutByIdModel
      parameters:
      - description: The existing Long Term Care Insurance Policy ID used to identify
          which Long Term Care Insurance Policy to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LongTermCareInsurancePolicyModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LongTermCareInsurancePolicyModel'
        description: The Long Term Care Insurance Policy to be updated on a Fact Finder
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LongTermCareInsurancePolicyWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LongTermCareInsurancePolicyWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Long Term Care Insurance Policy data access.
        "403":
          content: {}
          description: Request is restricted for access to Long Term Care Insurance
            Policy.
        "404":
          content: {}
          description: Long Term Care Insurance Policy not found.
      tags:
      - LongTermCareInsurancePolicies
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/MajorPurchaseGoalTypes:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Major Purchase Goal\
        \ Types for the specified country.<br />\r\n              Purpose: Provides\
        \ access to the Major Purchase Goal Types including id and type description."
      operationId: MajorPurchaseGoalTypes_GetByCountry
      parameters:
      - description: The country used to filter Major Purchase Goal Types
        in: query
        name: country
        required: true
        schema:
          enum:
          - UnitedStates
          - Canada
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MajorPurchaseGoalTypesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/MajorPurchaseGoalTypesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "404":
          content: {}
          description: Major Purchase Goal Type not found.
      tags:
      - MajorPurchaseGoalTypes
      x-accepts:
      - application/json
      - text/json
  /api/MajorPurchaseGoalTypes/{id}:
    get:
      deprecated: false
      description: "Description: This operation retrieves the Major Purchase Goal\
        \ Type for the specified id.<br />\r\n              Purpose: Provides access\
        \ to the Major Purchase Goal Types including id and type description."
      operationId: MajorPurchaseGoalTypes_GetById
      parameters:
      - description: The ID of Major Purchase Goal Type used to retreive the Major
          Purchase Goal Type information
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MajorPurchaseGoalTypeModel'
            text/json:
              schema:
                $ref: '#/components/schemas/MajorPurchaseGoalTypeModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "404":
          content: {}
          description: Major Purchase Goal Type not found.
      tags:
      - MajorPurchaseGoalTypes
      x-accepts:
      - application/json
      - text/json
  /api/MajorPurchaseGoals:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Major Purchases for\
        \ the specified Fact Finder ID.<br />\r\n              Purpose: Provides access\
        \ to the Major Purchases including description and amount."
      operationId: MajorPurchaseGoals_GetMajorPurchaseGoalsByFactFinderIdByFactfinderid
      parameters:
      - description: The ID of the Fact Finder used to retrieve Major Purchases
        in: query
        name: factFinderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MajorPurchaseGoalsModel'
            text/json:
              schema:
                $ref: '#/components/schemas/MajorPurchaseGoalsModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Major Purchase data access.
        "403":
          content: {}
          description: Request is restricted for access to Major Purchase.
        "404":
          content: {}
          description: Major Purchase not found.
      tags:
      - MajorPurchaseGoals
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      description: "Description: The operation creates a Major Purchase.<br />\r\n\
        \              Purpose: Allows for creation of Major Purchases on a Fact Finder."
      operationId: MajorPurchaseGoals_PostByModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MajorPurchaseGoalModel'
          text/json:
            schema:
              $ref: '#/components/schemas/MajorPurchaseGoalModel'
        description: The Major Purchase to be added to the Fact Finder
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MajorPurchaseGoalWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/MajorPurchaseGoalWithIdModel'
          description: Created
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Major Purchase data access.
        "403":
          content: {}
          description: Request is restricted for access to Major Purchase.
        "404":
          content: {}
          description: Major Purchase not found.
      tags:
      - MajorPurchaseGoals
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/MajorPurchaseGoals/{id}:
    delete:
      deprecated: false
      description: "Description: The operation removes a Major Purchase tied to a\
        \ Fact Finder.<br />\r\n              Purpose: Allows for removal of a Major\
        \ Purchase from a Fact Finder."
      operationId: MajorPurchaseGoals_DeleteById
      parameters:
      - description: The Major Purchase ID used to identify which Major Purchase to
          remove
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Deleted
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Major Purchase data access.
        "403":
          content: {}
          description: Request is restricted for access to Major Purchase.
        "404":
          content: {}
          description: Major Purchase not found.
      tags:
      - MajorPurchaseGoals
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: "Description: This operation retrieves a single Major Purchase\
        \ for the specified Major Purchase ID.<br />\r\n              Purpose: Provides\
        \ access to the Major Purchase including description and amount."
      operationId: MajorPurchaseGoals_GetById
      parameters:
      - description: The ID of the Major Purchase used to retreive the Major Purchase
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MajorPurchaseGoalWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/MajorPurchaseGoalWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Major Purchase data access.
        "403":
          content: {}
          description: Request is restricted for access to Major Purchase.
        "404":
          content: {}
          description: Major Purchase not found.
      tags:
      - MajorPurchaseGoals
      x-accepts:
      - application/json
      - text/json
    put:
      deprecated: false
      description: "Description: The operation updates a Major Purchase.<br />\r\n\
        \              Purpose: Allows for complete replacement of a Major Purchase\
        \ on a Fact Finder."
      operationId: MajorPurchaseGoals_PutByIdModel
      parameters:
      - description: The existing Major Purchase ID used to identify which Major Purchase
          to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MajorPurchaseGoalModel'
          text/json:
            schema:
              $ref: '#/components/schemas/MajorPurchaseGoalModel'
        description: The Major Purchase to be updated on a Fact Finder
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MajorPurchaseGoalWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/MajorPurchaseGoalWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Major Purchase data access.
        "403":
          content: {}
          description: Request is restricted for access to Major Purchase.
        "404":
          content: {}
          description: Major Purchase not found.
      tags:
      - MajorPurchaseGoals
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/Presentation/Accounts:
    get:
      deprecated: false
      description: "Description: This operation retrieves all current Accounts for\
        \ the specified Fact Finder ID, as well as\r\n                           all\
        \ of the holdings and savings strategies belonging to those accounts.<br />\r\
        \n              Purpose: Provides access to the Accounts in a Fact Finder\
        \ as well as any sub-entities belonging to them."
      operationId: Presentation_GetAccountsByFactfinderidExternalsourceid
      parameters:
      - description: The ID of the Fact Finder used to retrieve Accounts
        in: query
        name: factFinderId
        required: true
        schema:
          format: int32
          type: integer
      - description: The external ID used to filter Accounts
        in: query
        name: externalSourceId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsWithSubEntitiesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AccountsWithSubEntitiesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Account data access.
        "403":
          content: {}
          description: Request is restricted for access to Account.
        "404":
          content: {}
          description: Account not found.
      tags:
      - Presentation
      x-accepts:
      - application/json
      - text/json
  /api/Presentation/Demographics/Owners:
    get:
      deprecated: false
      description: "Description: This operation retrieves owner values for the fact\
        \ finder based on demographics data\r\n              Purpose: Provides the\
        \ list of valid options for owner, student, beneficiary, etc."
      operationId: Presentation_GetDemographicOwnersByFactfinderid
      parameters:
      - description: The ID of the Fact Finder used to retrieve owners.
        in: query
        name: factFinderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OwnersModel'
            text/json:
              schema:
                $ref: '#/components/schemas/OwnersModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Demographic information data access.
        "403":
          content: {}
          description: Request is restricted for access to Demographic information.
        "404":
          content: {}
          description: Fact Finder not found.
      tags:
      - Presentation
      x-accepts:
      - application/json
      - text/json
  /api/Presentation/Demographics/Relationships:
    get:
      deprecated: false
      description: "Description: This operation retrieves all relationship types relevant\
        \ to demographics.<br />\r\n              Purpose: Provides a list of relationship\
        \ types organized by whether or not they can be defined as children."
      operationId: Presentation_GetDemographicRelationships
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipTypesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/RelationshipTypesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "404":
          content: {}
          description: Object not found.
      tags:
      - Presentation
      x-accepts:
      - application/json
      - text/json
  /api/Presentation/Incomes:
    get:
      deprecated: false
      description: "Description: This operation retrieves all current Incomes for\
        \ the specified Fact Finder ID.<br />\r\n              Purpose: Provides access\
        \ to the Incomes in a Fact Finder, filtered by Incomes that are current."
      operationId: Presentation_GetIncomesByFactfinderid
      parameters:
      - description: The ID of the Fact Finder used to retrieve Incomes
        in: query
        name: factFinderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/IncomesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Income data access.
        "403":
          content: {}
          description: Request is restricted for access to Income.
        "404":
          content: {}
          description: Income not found.
      tags:
      - Presentation
      x-accepts:
      - application/json
      - text/json
  /api/Presentation/Liabilities:
    get:
      deprecated: false
      description: "Description: This operation retrieves all current Liabilities\
        \ for the specified Fact Finder ID.<br />\r\n              Purpose: Provides\
        \ access to the Liabilities in a Fact Finder, filtered by Liabilities that\
        \ are current."
      operationId: Presentation_GetLiabilitiesByFactfinderid
      parameters:
      - description: The ID of the Fact Finder used to retrieve Liabilities
        in: query
        name: factFinderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiabilitiesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LiabilitiesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Liability data access.
        "403":
          content: {}
          description: Request is restricted for access to Liability.
        "404":
          content: {}
          description: Liability not found.
      tags:
      - Presentation
      x-accepts:
      - application/json
      - text/json
  /api/Presentation/LifeInsurancePolicies:
    get:
      deprecated: false
      description: "Description: This operation retrieves all life insurance policies,\
        \ including subaccounts if available, for the specified Fact Finder ID.<br\
        \ />\r\n              Purpose: Provides access to the Life Insurance Policies\
        \ in a Fact Finder."
      operationId: Presentation_GetLifeInsurancePoliciesByFactfinderid
      parameters:
      - description: The ID of the Fact Finder used to retrieve Life Insurance Policies.
        in: query
        name: factFinderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifeInsurancePoliciesWithSubEntitiesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LifeInsurancePoliciesWithSubEntitiesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Life Insurance Policy data access.
        "403":
          content: {}
          description: Request is restricted for access to Life Insurance Policy.
        "404":
          content: {}
          description: Life Insurance Policy not found.
      tags:
      - Presentation
      x-accepts:
      - application/json
      - text/json
  /api/Presentation/Pensions:
    get:
      deprecated: false
      description: "Description: This operation retrieves all future Defined Benefit\
        \ Pensions for the specified Fact Finder ID.<br />\r\n              Purpose:\
        \ Provides access to the Pensions in a Fact Finder, filtered by Pensions that\
        \ are in the future."
      operationId: Presentation_GetPensionsByFactfinderid
      parameters:
      - description: The ID of the Fact Finder used to retrieve Pensions.
        in: query
        name: factFinderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefinedBenefitPensionsModel'
            text/json:
              schema:
                $ref: '#/components/schemas/DefinedBenefitPensionsModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Defined Benefit Pension data access.
        "403":
          content: {}
          description: Request is restricted for access to Defined Benefit Pension.
        "404":
          content: {}
          description: Defined Benefit Pension not found.
      tags:
      - Presentation
      x-accepts:
      - application/json
      - text/json
  /api/RealEstateAssets:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Real Estate Assets for\
        \ the specified Fact Finder ID.<br />\r\n              Purpose: Provides access\
        \ to the Real Estate Assets including description and market value."
      operationId: RealEstateAssets_GetRealEstateAssetsByFactFinderIdByFactfinderid
      parameters:
      - description: The ID of the Fact Finder used to retrieve Real Estate Assets
        in: query
        name: factFinderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RealEstateAssetsModel'
            text/json:
              schema:
                $ref: '#/components/schemas/RealEstateAssetsModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Real Estate Asset data access.
        "403":
          content: {}
          description: Request is restricted for access to Real Estate Asset.
        "404":
          content: {}
          description: Real Estate Asset not found.
      tags:
      - RealEstateAssets
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      description: "Description: The operation creates a Real Estate Asset.<br />\r\
        \n              Purpose: Allows for creation of Real Estate Assets on a Fact\
        \ Finder."
      operationId: RealEstateAssets_PostByModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RealEstateAssetModel'
          text/json:
            schema:
              $ref: '#/components/schemas/RealEstateAssetModel'
        description: The Real Estate Asset to be added to the Fact Finder
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RealEstateAssetWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/RealEstateAssetWithIdModel'
          description: Created
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Real Estate Asset data access.
        "403":
          content: {}
          description: Request is restricted for access to Real Estate Asset.
        "404":
          content: {}
          description: Real Estate Asset not found.
      tags:
      - RealEstateAssets
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/RealEstateAssets/{id}:
    delete:
      deprecated: false
      description: "Description: The operation removes a Real Estate Asset tied to\
        \ a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Real\
        \ Estate Asset from a Fact Finder."
      operationId: RealEstateAssets_DeleteById
      parameters:
      - description: The Real Estate Asset ID used to identify which Real Estate Asset
          to remove
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Deleted
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Real Estate Asset data access.
        "403":
          content: {}
          description: Request is restricted for access to Real Estate Asset.
        "404":
          content: {}
          description: Real Estate Asset not found.
      tags:
      - RealEstateAssets
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: "Description: This operation retrieves a single Real Estate Asset\
        \ for the specified Real Estate Asset ID.<br />\r\n              Purpose:\
        \ Provides access to the Real Estate Asset including description and market\
        \ value."
      operationId: RealEstateAssets_GetById
      parameters:
      - description: The ID of the Real Estate Asset used to retreive the Real Estate
          Asset
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RealEstateAssetWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/RealEstateAssetWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Real Estate Asset data access.
        "403":
          content: {}
          description: Request is restricted for access to Real Estate Asset.
        "404":
          content: {}
          description: Real Estate Asset not found.
      tags:
      - RealEstateAssets
      x-accepts:
      - application/json
      - text/json
    put:
      deprecated: false
      description: "Description: The operation updates a Real Estate Asset.<br />\r\
        \n              Purpose: Allows for complete replacement of a Real Estate\
        \ Asset on a Fact Finder."
      operationId: RealEstateAssets_PutByIdModel
      parameters:
      - description: The existing Real Estate Asset ID used to identify which Real
          Estate Asset to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RealEstateAssetModel'
          text/json:
            schema:
              $ref: '#/components/schemas/RealEstateAssetModel'
        description: The Real Estate Asset to be updated on a Fact Finder
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RealEstateAssetWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/RealEstateAssetWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Real Estate Asset data access.
        "403":
          content: {}
          description: Request is restricted for access to Real Estate Asset.
        "404":
          content: {}
          description: Real Estate Asset not found.
      tags:
      - RealEstateAssets
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/RetirementGoals:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Retirement Goals for\
        \ the specified Fact Finder ID.<br />\r\n              Purpose: Provides access\
        \ to the Retirement Goals including retirement date."
      operationId: RetirementGoals_GetRetirementGoalsByFactFinderIdByFactfinderid
      parameters:
      - description: The ID of the Fact Finder used to retrieve Retirement Goals
        in: query
        name: factFinderId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetirementGoalsModel'
            text/json:
              schema:
                $ref: '#/components/schemas/RetirementGoalsModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Retirement Goal data access.
        "403":
          content: {}
          description: Request is restricted for access to Retirement Goal.
        "404":
          content: {}
          description: Retirement Goal not found.
      tags:
      - RetirementGoals
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      description: "Description: The operation creates a Retirement Goal.<br />\r\n\
        \              Purpose: Allows for creation of Retirement Goals on a Fact\
        \ Finder."
      operationId: RetirementGoals_PostByModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetirementGoalModel'
          text/json:
            schema:
              $ref: '#/components/schemas/RetirementGoalModel'
        description: The Retirement Goal to be added to the Fact Finder
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetirementGoalWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/RetirementGoalWithIdModel'
          description: Created
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Retirement Goal data access.
        "403":
          content: {}
          description: Request is restricted for access to Retirement Goal.
        "404":
          content: {}
          description: Retirement Goal not found.
      tags:
      - RetirementGoals
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/RetirementGoals/{id}:
    delete:
      deprecated: false
      description: "Description: The operation removes a Retirement Goal tied to a\
        \ Fact Finder.<br />\r\n              Purpose: Allows for removal of a Retirement\
        \ Goal from a Fact Finder."
      operationId: RetirementGoals_DeleteById
      parameters:
      - description: The Retirement Goal ID used to identify which Retirement Goal
          to remove
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Deleted
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Retirement Goal data access.
        "403":
          content: {}
          description: Request is restricted for access to Retirement Goal.
        "404":
          content: {}
          description: Retirement Goal not found.
      tags:
      - RetirementGoals
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: "Description: This operation retrieves a single Retirement Goal\
        \ for the specified Retirement Goal ID.<br />\r\n              Purpose: Provides\
        \ access to the Retirement Goal including retirement date."
      operationId: RetirementGoals_GetById
      parameters:
      - description: The ID of the Retirement Goal used to retreive the Retirement
          Goal
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetirementGoalWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/RetirementGoalWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Retirement Goal data access.
        "403":
          content: {}
          description: Request is restricted for access to Retirement Goal.
        "404":
          content: {}
          description: Retirement Goal not found.
      tags:
      - RetirementGoals
      x-accepts:
      - application/json
      - text/json
    put:
      deprecated: false
      description: "Description: The operation updates a Retirement Goal.<br />\r\n\
        \              Purpose: Allows for complete replacement of a Retirement Goal\
        \ on a Fact Finder."
      operationId: RetirementGoals_PutByIdModel
      parameters:
      - description: The existing Retirement Goal ID used to identify which Retirement
          Goal to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetirementGoalModel'
          text/json:
            schema:
              $ref: '#/components/schemas/RetirementGoalModel'
        description: The Retirement Goal to be updated on a Fact Finder
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetirementGoalWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/RetirementGoalWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Retirement Goal data access.
        "403":
          content: {}
          description: Request is restricted for access to Retirement Goal.
        "404":
          content: {}
          description: Retirement Goal not found.
      tags:
      - RetirementGoals
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/RetirementGoals/{retirementGoalId}/Expenses:
    get:
      deprecated: false
      description: "Description: This operation retrieves all Retirement Goal Expenses\
        \ for the specified Retirement Goal ID.<br />\r\n              Purpose: Provides\
        \ access to the Retirement Goal Expenses including description and amount."
      operationId: RetirementGoals_GetRetirementExpensesByRetirementGoalIdByRetirementgoalid
      parameters:
      - description: The ID of the Retirement Goal used to retrieve Retirement Goal
          Expenses
        in: path
        name: retirementGoalId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetirementExpensesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/RetirementExpensesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Retirement Goal Expense data access.
        "403":
          content: {}
          description: Request is restricted for access to Retirement Goal Expense.
        "404":
          content: {}
          description: Retirement Goal Expense not found.
      tags:
      - RetirementGoals
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      description: "Description: The operation creates a Retirement Goal Expense.<br\
        \ />\r\n              Purpose: Allows for creation of Retirement Goal Expenses\
        \ on a Fact Finder."
      operationId: RetirementGoals_PostByRetirementgoalidModel
      parameters:
      - description: The ID of the Retirement Goal to add the Retirement Goal Expense
          to
        in: path
        name: retirementGoalId
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetirementExpenseModel'
          text/json:
            schema:
              $ref: '#/components/schemas/RetirementExpenseModel'
        description: The Retirement Goal Expense to be added to the Fact Finder
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetirementExpenseWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/RetirementExpenseWithIdModel'
          description: Created
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Retirement Goal Expense data access.
        "403":
          content: {}
          description: Request is restricted for access to Retirement Goal Expense.
        "404":
          content: {}
          description: Retirement Goal Expense not found.
      tags:
      - RetirementGoals
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/RetirementGoals/{retirementGoalId}/Expenses/{id}:
    delete:
      deprecated: false
      description: "Description: The operation removes a Retirement Goal Expense tied\
        \ to a Fact Finder.<br />\r\n              Purpose: Allows for removal of\
        \ a Retirement Goal Expense from a Fact Finder."
      operationId: RetirementGoals_DeleteByRetirementgoalidId
      parameters:
      - description: The Retirement Goal ID used to locate the Goal to delete the
          Retirement Goal Expense under
        in: path
        name: retirementGoalId
        required: true
        schema:
          format: int32
          type: integer
      - description: The Retirement Goal Expense ID used to identify which Retirement
          Goal Expense to remove
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Deleted
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Retirement Goal Expense data access.
        "403":
          content: {}
          description: Request is restricted for access to Retirement Goal Expense.
        "404":
          content: {}
          description: Retirement Goal Expense not found.
      tags:
      - RetirementGoals
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: "Description: This operation retrieves a single Retirement Goal\
        \ Expense for the specified Retirement Goal Expense ID.<br />\r\n        \
        \      Purpose: Provides access to the Retirement Goal Expense including description\
        \ and amount."
      operationId: RetirementGoals_GetRetirementExpenseByRetirementgoalidId
      parameters:
      - description: The ID of the Retirement Goal used to retrieve the Retirement
          Goal Expense
        in: path
        name: retirementGoalId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the Retirement Goal Expense used to retreive the Retirement
          Goal Expense
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetirementExpenseWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/RetirementExpenseWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Retirement Goal Expense data access.
        "403":
          content: {}
          description: Request is restricted for access to Retirement Goal Expense.
        "404":
          content: {}
          description: Retirement Goal Expense not found.
      tags:
      - RetirementGoals
      x-accepts:
      - application/json
      - text/json
    put:
      deprecated: false
      description: "Description: The operation updates a Retirement Goal Expense.<br\
        \ />\r\n              Purpose: Allows for complete replacement of a Retirement\
        \ Goal Expense on a Fact Finder."
      operationId: RetirementGoals_PutByRetirementgoalidIdModel
      parameters:
      - description: The Retirement Goal ID used to locate the Goal to update the
          Retirement Goal Expense under
        in: path
        name: retirementGoalId
        required: true
        schema:
          format: int32
          type: integer
      - description: The existing Retirement Goal Expense ID used to identify which
          Retirement Goal Expense to update
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetirementExpenseModel'
          text/json:
            schema:
              $ref: '#/components/schemas/RetirementExpenseModel'
        description: The Retirement Goal Expense to be updated on a Fact Finder
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetirementExpenseWithIdModel'
            text/json:
              schema:
                $ref: '#/components/schemas/RetirementExpenseWithIdModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "401":
          content: {}
          description: Unauthorized for Retirement Goal Expense data access.
        "403":
          content: {}
          description: Request is restricted for access to Retirement Goal Expense.
        "404":
          content: {}
          description: Retirement Goal Expense not found.
      tags:
      - RetirementGoals
      x-codegen-request-body-name: model
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /api/ServiceInformation:
    get:
      deprecated: false
      description: "Description: This operation retrieves information statistics for\
        \ the current service.<br />\r\n              Purpose: Provides access to\
        \ Service Information."
      operationId: FactFinderServiceInformation_Get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInformationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceInformationModel'
          description: Success
        "404":
          content: {}
          description: Object not found.
      tags:
      - FactFinderServiceInformation
      x-accepts:
      - application/json
      - text/json
  /api/StatesProvinces:
    get:
      deprecated: false
      description: "Description: This operation retrieves all States and Provinces\
        \ for the specified country.<br />\r\n              Purpose: Provides access\
        \ to the States and Provinces."
      operationId: StatesProvinces_GetByCountry
      parameters:
      - description: The country used to filter States and Provinces
        in: query
        name: country
        required: true
        schema:
          enum:
          - UnitedStates
          - Canada
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatesProvincesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/StatesProvincesModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "404":
          content: {}
          description: State or Province not found.
      tags:
      - StatesProvinces
      x-accepts:
      - application/json
      - text/json
  /api/StatesProvinces/{id}:
    get:
      deprecated: false
      description: "Description: This operation retrieves the States and Provinces\
        \ for the specified id.<br />\r\n              Purpose: Provides access to\
        \ the States and Provinces."
      operationId: StatesProvinces_GetById
      parameters:
      - description: The ID of the State or Province used to retreive the State or
          Province information
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateProvinceModel'
            text/json:
              schema:
                $ref: '#/components/schemas/StateProvinceModel'
          description: Success
        "400":
          content: {}
          description: The request is invalid.
        "404":
          content: {}
          description: State or Province not found.
      tags:
      - StatesProvinces
      x-accepts:
      - application/json
      - text/json
components:
  schemas:
    AccountHoldingModel:
      example:
        symbol: symbol
        cusip: cusip
        valuationDate: 2000-01-23T04:56:07.000+00:00
        costBasis: 0.8008281904610115
        description: description
        marketValue: 6.027456183070403
        externalDestinationId: externalDestinationId
      properties:
        costBasis:
          format: double
          type: number
        cusip:
          maxLength: 31
          minLength: 0
          type: string
        description:
          maxLength: 255
          minLength: 0
          type: string
        externalDestinationId:
          maxLength: 64
          minLength: 0
          type: string
        marketValue:
          format: double
          type: number
        symbol:
          maxLength: 31
          minLength: 0
          type: string
        valuationDate:
          format: date-time
          type: string
      required:
      - description
      type: object
    AccountHoldingWithIdModel:
      example:
        accountId: 6
        symbol: symbol
        accountHoldingId: 0
        cusip: cusip
        valuationDate: 2000-01-23T04:56:07.000+00:00
        costBasis: 1.4658129805029452
        description: description
        marketValue: 5.962133916683182
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        externalDestinationId: externalDestinationId
      properties:
        accountHoldingId:
          format: int32
          type: integer
        accountId:
          format: int32
          type: integer
        costBasis:
          format: double
          type: number
        cusip:
          type: string
        description:
          type: string
        externalDestinationId:
          type: string
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        marketValue:
          format: double
          type: number
        symbol:
          type: string
        valuationDate:
          format: date-time
          type: string
      type: object
    AccountHoldingsModel:
      example:
        holdings:
        - accountId: 6
          symbol: symbol
          accountHoldingId: 0
          cusip: cusip
          valuationDate: 2000-01-23T04:56:07.000+00:00
          costBasis: 1.4658129805029452
          description: description
          marketValue: 5.962133916683182
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          externalDestinationId: externalDestinationId
        - accountId: 6
          symbol: symbol
          accountHoldingId: 0
          cusip: cusip
          valuationDate: 2000-01-23T04:56:07.000+00:00
          costBasis: 1.4658129805029452
          description: description
          marketValue: 5.962133916683182
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          externalDestinationId: externalDestinationId
      properties:
        holdings:
          items:
            $ref: '#/components/schemas/AccountHoldingWithIdModel'
          type: array
      type: object
    AccountHoldingsWithoutIdModel:
      example:
        holdings:
        - symbol: symbol
          cusip: cusip
          valuationDate: 2000-01-23T04:56:07.000+00:00
          costBasis: 0.8008281904610115
          description: description
          marketValue: 6.027456183070403
          externalDestinationId: externalDestinationId
        - symbol: symbol
          cusip: cusip
          valuationDate: 2000-01-23T04:56:07.000+00:00
          costBasis: 0.8008281904610115
          description: description
          marketValue: 6.027456183070403
          externalDestinationId: externalDestinationId
      properties:
        holdings:
          items:
            $ref: '#/components/schemas/AccountHoldingModel'
          type: array
      type: object
    AccountModel:
      example:
        owner: Client
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        externalSourceName: externalSourceName
        factFinderId: 6
        accountType: 0
        description: description
        marketValue: 1.4658129805029452
        externalSourceId: externalSourceId
        ownerDependentId: 5
        externalDestinationId: externalDestinationId
      properties:
        accountType:
          format: int32
          type: integer
        description:
          maxLength: 255
          minLength: 0
          type: string
        externalDestinationId:
          maxLength: 64
          minLength: 0
          type: string
        externalSourceId:
          maxLength: 64
          minLength: 0
          type: string
        externalSourceName:
          maxLength: 64
          minLength: 0
          type: string
        factFinderId:
          format: int32
          type: integer
        lastUpdated:
          format: date-time
          type: string
        marketValue:
          format: double
          type: number
        owner:
          enum:
          - Client
          - CoClient
          - Joint
          - Dependent
          - Other
          type: string
        ownerDependentId:
          format: int32
          type: integer
      required:
      - description
      - factFinderId
      type: object
    AccountTypeModel:
      example:
        name: name
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        id: 0
        allowedSavingsTypes:
        - validAmountTypes:
          - Dollar
          - Dollar
          typeName: PostTaxSavings
        - validAmountTypes:
          - Dollar
          - Dollar
          typeName: PostTaxSavings
      properties:
        allowedSavingsTypes:
          items:
            $ref: '#/components/schemas/SavingsTypeDomainObject'
          type: array
        id:
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        name:
          type: string
      type: object
    AccountTypesModel:
      example:
        accountTypes:
        - name: name
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          id: 0
          allowedSavingsTypes:
          - validAmountTypes:
            - Dollar
            - Dollar
            typeName: PostTaxSavings
          - validAmountTypes:
            - Dollar
            - Dollar
            typeName: PostTaxSavings
        - name: name
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          id: 0
          allowedSavingsTypes:
          - validAmountTypes:
            - Dollar
            - Dollar
            typeName: PostTaxSavings
          - validAmountTypes:
            - Dollar
            - Dollar
            typeName: PostTaxSavings
      properties:
        accountTypes:
          items:
            $ref: '#/components/schemas/AccountTypeModel'
          type: array
      type: object
    AccountWithIdModel:
      example:
        owner: Client
        accountId: 0
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        externalSourceName: externalSourceName
        factFinderId: 1
        accountType: 6
        description: description
        marketValue: 5.962133916683182
        externalSourceId: externalSourceId
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        ownerDependentId: 5
        externalDestinationId: externalDestinationId
      properties:
        accountId:
          format: int32
          type: integer
        accountType:
          format: int32
          type: integer
        description:
          type: string
        externalDestinationId:
          type: string
        externalSourceId:
          type: string
        externalSourceName:
          type: string
        factFinderId:
          format: int32
          type: integer
        lastUpdated:
          format: date-time
          type: string
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        marketValue:
          format: double
          type: number
        owner:
          enum:
          - Client
          - CoClient
          - Joint
          - Dependent
          - Other
          type: string
        ownerDependentId:
          format: int32
          type: integer
      type: object
    AccountWithSubEntitiesModel:
      example:
        owner: Client
        accountType: 6
        description: description
        marketValue: 5.962133916683182
        ownerDependentId: 5
        accountId: 0
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        externalSourceName: externalSourceName
        factFinderId: 1
        externalSourceId: externalSourceId
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        holdings:
        - accountId: 6
          symbol: symbol
          accountHoldingId: 0
          cusip: cusip
          valuationDate: 2000-01-23T04:56:07.000+00:00
          costBasis: 1.4658129805029452
          description: description
          marketValue: 5.962133916683182
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          externalDestinationId: externalDestinationId
        - accountId: 6
          symbol: symbol
          accountHoldingId: 0
          cusip: cusip
          valuationDate: 2000-01-23T04:56:07.000+00:00
          costBasis: 1.4658129805029452
          description: description
          marketValue: 5.962133916683182
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          externalDestinationId: externalDestinationId
        externalDestinationId: externalDestinationId
        savingsStrategies:
        - postTaxSavingsAmount: 5.637376656633329
          endDate: 2000-01-23T04:56:07.000+00:00
          mandatoryAmount: 5.962133916683182
          employerSavingsAmount: 6.027456183070403
          frequencyId: 1
          savingsStrategyId: 7
          accountId: 0
          preTaxSavingsAmount: 2.3021358869347655
          postTaxSavingsAmountType: Dollar
          externalDestinationId: externalDestinationId
          preTaxSavingsAmountType: Dollar
          mandatoryAmountType: Dollar
          startDate: 2000-01-23T04:56:07.000+00:00
          employerSavingsAmountType: Dollar
        - postTaxSavingsAmount: 5.637376656633329
          endDate: 2000-01-23T04:56:07.000+00:00
          mandatoryAmount: 5.962133916683182
          employerSavingsAmount: 6.027456183070403
          frequencyId: 1
          savingsStrategyId: 7
          accountId: 0
          preTaxSavingsAmount: 2.3021358869347655
          postTaxSavingsAmountType: Dollar
          externalDestinationId: externalDestinationId
          preTaxSavingsAmountType: Dollar
          mandatoryAmountType: Dollar
          startDate: 2000-01-23T04:56:07.000+00:00
          employerSavingsAmountType: Dollar
      properties:
        accountId:
          format: int32
          type: integer
        accountType:
          format: int32
          type: integer
        description:
          type: string
        externalDestinationId:
          type: string
        externalSourceId:
          type: string
        externalSourceName:
          type: string
        factFinderId:
          format: int32
          type: integer
        holdings:
          items:
            $ref: '#/components/schemas/AccountHoldingWithIdModel'
          type: array
        lastUpdated:
          format: date-time
          type: string
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        marketValue:
          format: double
          type: number
        owner:
          enum:
          - Client
          - CoClient
          - Joint
          - Dependent
          - Other
          type: string
        ownerDependentId:
          format: int32
          type: integer
        savingsStrategies:
          items:
            $ref: '#/components/schemas/SavingsStrategyWithIdModel'
          type: array
      type: object
    AccountsModel:
      example:
        accounts:
        - owner: Client
          accountId: 0
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          externalSourceName: externalSourceName
          factFinderId: 1
          accountType: 6
          description: description
          marketValue: 5.962133916683182
          externalSourceId: externalSourceId
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          ownerDependentId: 5
          externalDestinationId: externalDestinationId
        - owner: Client
          accountId: 0
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          externalSourceName: externalSourceName
          factFinderId: 1
          accountType: 6
          description: description
          marketValue: 5.962133916683182
          externalSourceId: externalSourceId
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          ownerDependentId: 5
          externalDestinationId: externalDestinationId
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/AccountWithIdModel'
          type: array
      type: object
    AccountsWithSubEntitiesModel:
      example:
        accounts:
        - owner: Client
          accountType: 6
          description: description
          marketValue: 5.962133916683182
          ownerDependentId: 5
          accountId: 0
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          externalSourceName: externalSourceName
          factFinderId: 1
          externalSourceId: externalSourceId
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          holdings:
          - accountId: 6
            symbol: symbol
            accountHoldingId: 0
            cusip: cusip
            valuationDate: 2000-01-23T04:56:07.000+00:00
            costBasis: 1.4658129805029452
            description: description
            marketValue: 5.962133916683182
            links:
            - rel: rel
              href: href
            - rel: rel
              href: href
            externalDestinationId: externalDestinationId
          - accountId: 6
            symbol: symbol
            accountHoldingId: 0
            cusip: cusip
            valuationDate: 2000-01-23T04:56:07.000+00:00
            costBasis: 1.4658129805029452
            description: description
            marketValue: 5.962133916683182
            links:
            - rel: rel
              href: href
            - rel: rel
              href: href
            externalDestinationId: externalDestinationId
          externalDestinationId: externalDestinationId
          savingsStrategies:
          - postTaxSavingsAmount: 5.637376656633329
            endDate: 2000-01-23T04:56:07.000+00:00
            mandatoryAmount: 5.962133916683182
            employerSavingsAmount: 6.027456183070403
            frequencyId: 1
            savingsStrategyId: 7
            accountId: 0
            preTaxSavingsAmount: 2.3021358869347655
            postTaxSavingsAmountType: Dollar
            externalDestinationId: externalDestinationId
            preTaxSavingsAmountType: Dollar
            mandatoryAmountType: Dollar
            startDate: 2000-01-23T04:56:07.000+00:00
            employerSavingsAmountType: Dollar
          - postTaxSavingsAmount: 5.637376656633329
            endDate: 2000-01-23T04:56:07.000+00:00
            mandatoryAmount: 5.962133916683182
            employerSavingsAmount: 6.027456183070403
            frequencyId: 1
            savingsStrategyId: 7
            accountId: 0
            preTaxSavingsAmount: 2.3021358869347655
            postTaxSavingsAmountType: Dollar
            externalDestinationId: externalDestinationId
            preTaxSavingsAmountType: Dollar
            mandatoryAmountType: Dollar
            startDate: 2000-01-23T04:56:07.000+00:00
            employerSavingsAmountType: Dollar
        - owner: Client
          accountType: 6
          description: description
          marketValue: 5.962133916683182
          ownerDependentId: 5
          accountId: 0
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          externalSourceName: externalSourceName
          factFinderId: 1
          externalSourceId: externalSourceId
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          holdings:
          - accountId: 6
            symbol: symbol
            accountHoldingId: 0
            cusip: cusip
            valuationDate: 2000-01-23T04:56:07.000+00:00
            costBasis: 1.4658129805029452
            description: description
            marketValue: 5.962133916683182
            links:
            - rel: rel
              href: href
            - rel: rel
              href: href
            externalDestinationId: externalDestinationId
          - accountId: 6
            symbol: symbol
            accountHoldingId: 0
            cusip: cusip
            valuationDate: 2000-01-23T04:56:07.000+00:00
            costBasis: 1.4658129805029452
            description: description
            marketValue: 5.962133916683182
            links:
            - rel: rel
              href: href
            - rel: rel
              href: href
            externalDestinationId: externalDestinationId
          externalDestinationId: externalDestinationId
          savingsStrategies:
          - postTaxSavingsAmount: 5.637376656633329
            endDate: 2000-01-23T04:56:07.000+00:00
            mandatoryAmount: 5.962133916683182
            employerSavingsAmount: 6.027456183070403
            frequencyId: 1
            savingsStrategyId: 7
            accountId: 0
            preTaxSavingsAmount: 2.3021358869347655
            postTaxSavingsAmountType: Dollar
            externalDestinationId: externalDestinationId
            preTaxSavingsAmountType: Dollar
            mandatoryAmountType: Dollar
            startDate: 2000-01-23T04:56:07.000+00:00
            employerSavingsAmountType: Dollar
          - postTaxSavingsAmount: 5.637376656633329
            endDate: 2000-01-23T04:56:07.000+00:00
            mandatoryAmount: 5.962133916683182
            employerSavingsAmount: 6.027456183070403
            frequencyId: 1
            savingsStrategyId: 7
            accountId: 0
            preTaxSavingsAmount: 2.3021358869347655
            postTaxSavingsAmountType: Dollar
            externalDestinationId: externalDestinationId
            preTaxSavingsAmountType: Dollar
            mandatoryAmountType: Dollar
            startDate: 2000-01-23T04:56:07.000+00:00
            employerSavingsAmountType: Dollar
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/AccountWithSubEntitiesModel'
          type: array
      type: object
    ClientModel:
      example:
        clientId: 0
        ownerUser: ownerUser
        success: true
        planId: 6
        message: message
      properties:
        clientId:
          format: int32
          type: integer
        message:
          type: string
        ownerUser:
          type: string
        planId:
          format: int32
          type: integer
        success:
          type: boolean
      type: object
    ClientsModel:
      example:
        factFinderId: 0
        planAction: New
        externalDestinationName: externalDestinationName
      properties:
        externalDestinationName:
          maxLength: 49
          minLength: 0
          type: string
        factFinderId:
          format: int32
          type: integer
        planAction:
          enum:
          - New
          - Duplicate
          - Project
          - Update
          type: string
      required:
      - factFinderId
      - planAction
      type: object
    CriticalIllnessInsurancePoliciesModel:
      example:
        criticalIllnessInsurancePolicies:
        - factFinderId: 6
          premium: 2.3021358869347655
          insured: Client
          policyType: 5
          description: description
          insurancePolicyId: 5
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          externalDestinationId: externalDestinationId
          benefit: 0.8008281904610115
          frequency: 1
        - factFinderId: 6
          premium: 2.3021358869347655
          insured: Client
          policyType: 5
          description: description
          insurancePolicyId: 5
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          externalDestinationId: externalDestinationId
          benefit: 0.8008281904610115
          frequency: 1
      properties:
        criticalIllnessInsurancePolicies:
          items:
            $ref: '#/components/schemas/CriticalIllnessInsurancePolicyWithIdModel'
          type: array
      type: object
    CriticalIllnessInsurancePolicyModel:
      example:
        factFinderId: 6
        premium: 5.637376656633329
        insured: Client
        policyType: 5
        description: description
        externalDestinationId: externalDestinationId
        benefit: 0.8008281904610115
        frequency: 1
      properties:
        benefit:
          format: double
          type: number
        description:
          maxLength: 255
          minLength: 0
          type: string
        externalDestinationId:
          maxLength: 64
          minLength: 0
          type: string
        factFinderId:
          format: int32
          type: integer
        frequency:
          format: int32
          type: integer
        insured:
          enum:
          - Client
          - CoClient
          type: string
        policyType:
          format: int32
          type: integer
        premium:
          format: double
          type: number
      required:
      - description
      - factFinderId
      type: object
    CriticalIllnessInsurancePolicyTypeModel:
      example:
        name: name
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        id: 0
      properties:
        id:
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        name:
          type: string
      type: object
    CriticalIllnessInsurancePolicyTypesModel:
      example:
        insurancePolicyTypes:
        - name: name
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          id: 0
        - name: name
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          id: 0
      properties:
        insurancePolicyTypes:
          items:
            $ref: '#/components/schemas/CriticalIllnessInsurancePolicyTypeModel'
          type: array
      type: object
    CriticalIllnessInsurancePolicyWithIdModel:
      example:
        factFinderId: 6
        premium: 2.3021358869347655
        insured: Client
        policyType: 5
        description: description
        insurancePolicyId: 5
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        externalDestinationId: externalDestinationId
        benefit: 0.8008281904610115
        frequency: 1
      properties:
        benefit:
          format: double
          type: number
        description:
          type: string
        externalDestinationId:
          type: string
        factFinderId:
          format: int32
          type: integer
        frequency:
          format: int32
          type: integer
        insurancePolicyId:
          format: int32
          type: integer
        insured:
          enum:
          - Client
          - CoClient
          type: string
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        policyType:
          format: int32
          type: integer
        premium:
          format: double
          type: number
      type: object
    DefinedBenefitPensionModel:
      example:
        factFinderId: 6
        member: Client
        description: description
        estimatedAmount: 0.8008281904610115
        externalDestinationId: externalDestinationId
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        description:
          maxLength: 255
          minLength: 0
          type: string
        estimatedAmount:
          format: double
          type: number
        externalDestinationId:
          maxLength: 64
          minLength: 0
          type: string
        factFinderId:
          format: int32
          type: integer
        member:
          enum:
          - Client
          - CoClient
          type: string
        startDate:
          format: date-time
          type: string
      required:
      - description
      - factFinderId
      type: object
    DefinedBenefitPensionWithIdModel:
      example:
        definedBenefitPensionId: 0
        factFinderId: 1
        member: Client
        description: description
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        estimatedAmount: 6.027456183070403
        externalDestinationId: externalDestinationId
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        definedBenefitPensionId:
          format: int32
          type: integer
        description:
          type: string
        estimatedAmount:
          format: double
          type: number
        externalDestinationId:
          type: string
        factFinderId:
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        member:
          enum:
          - Client
          - CoClient
          type: string
        startDate:
          format: date-time
          type: string
      type: object
    DefinedBenefitPensionsModel:
      example:
        definedBenefitPensions:
        - definedBenefitPensionId: 0
          factFinderId: 1
          member: Client
          description: description
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          estimatedAmount: 6.027456183070403
          externalDestinationId: externalDestinationId
          startDate: 2000-01-23T04:56:07.000+00:00
        - definedBenefitPensionId: 0
          factFinderId: 1
          member: Client
          description: description
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          estimatedAmount: 6.027456183070403
          externalDestinationId: externalDestinationId
          startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        definedBenefitPensions:
          items:
            $ref: '#/components/schemas/DefinedBenefitPensionWithIdModel'
          type: array
      type: object
    DemographicsDependentModel:
      example:
        firstName: firstName
        lastName: lastName
        relationship: Son
        birthDate: 2000-01-23T04:56:07.000+00:00
        dependentOf: Client
        externalDestinationId: externalDestinationId
      properties:
        birthDate:
          format: date-time
          type: string
        dependentOf:
          enum:
          - Client
          - CoClient
          - Joint
          - Other
          type: string
        externalDestinationId:
          maxLength: 64
          minLength: 0
          type: string
        firstName:
          maxLength: 255
          minLength: 0
          type: string
        lastName:
          maxLength: 255
          minLength: 0
          type: string
        relationship:
          enum:
          - Son
          - Daughter
          - FosterSon
          - FosterDaughter
          - Grandson
          - Granddaughter
          - Nephew
          - Niece
          - MaleCousin
          - FemaleCousin
          - Father
          - Mother
          - Grandfather
          - Grandmother
          - Uncle
          - Aunt
          - Brother
          - Sister
          - SonInLaw
          - DaughterInLaw
          - MaleOther
          - FemaleOther
          type: string
      required:
      - birthDate
      - dependentOf
      - firstName
      - lastName
      - relationship
      type: object
    DemographicsDependentWithIdModel:
      example:
        dependentId: 6
        firstName: firstName
        lastName: lastName
        demographicsId: 0
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        relationship: Son
        birthDate: 2000-01-23T04:56:07.000+00:00
        dependentOf: Client
        externalDestinationId: externalDestinationId
      properties:
        birthDate:
          format: date-time
          type: string
        demographicsId:
          format: int32
          type: integer
        dependentId:
          format: int32
          type: integer
        dependentOf:
          enum:
          - Client
          - CoClient
          - Joint
          - Other
          type: string
        externalDestinationId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        relationship:
          enum:
          - Son
          - Daughter
          - FosterSon
          - FosterDaughter
          - Grandson
          - Granddaughter
          - Nephew
          - Niece
          - MaleCousin
          - FemaleCousin
          - Father
          - Mother
          - Grandfather
          - Grandmother
          - Uncle
          - Aunt
          - Brother
          - Sister
          - SonInLaw
          - DaughterInLaw
          - MaleOther
          - FemaleOther
          type: string
      type: object
    DemographicsDependentsModel:
      example:
        dependents:
        - dependentId: 6
          firstName: firstName
          lastName: lastName
          demographicsId: 0
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          relationship: Son
          birthDate: 2000-01-23T04:56:07.000+00:00
          dependentOf: Client
          externalDestinationId: externalDestinationId
        - dependentId: 6
          firstName: firstName
          lastName: lastName
          demographicsId: 0
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          relationship: Son
          birthDate: 2000-01-23T04:56:07.000+00:00
          dependentOf: Client
          externalDestinationId: externalDestinationId
      properties:
        dependents:
          items:
            $ref: '#/components/schemas/DemographicsDependentWithIdModel'
          type: array
      type: object
    DemographicsModel:
      example:
        factFinderId: 0
        city: city
        jointAnalysis: true
        head1:
          alreadyRetired: true
          firstName: firstName
          lastName: lastName
          taxFilingStatus: 1
          gender: Male
          birthDate: 2000-01-23T04:56:07.000+00:00
          externalDestinationId: externalDestinationId
        externalSourceId: externalSourceId
        head2:
          alreadyRetired: true
          firstName: firstName
          lastName: lastName
          taxFilingStatus: 1
          gender: Male
          birthDate: 2000-01-23T04:56:07.000+00:00
          externalDestinationId: externalDestinationId
        state: 6
        externalDestinationId: externalDestinationId
      properties:
        city:
          type: string
        externalDestinationId:
          maxLength: 64
          minLength: 0
          type: string
        externalSourceId:
          type: string
        factFinderId:
          format: int32
          type: integer
        head1:
          $ref: '#/components/schemas/FamilyHeadModel'
        head2:
          $ref: '#/components/schemas/FamilyHeadModel'
        jointAnalysis:
          type: boolean
        state:
          format: int32
          type: integer
      required:
      - city
      - factFinderId
      - head1
      - jointAnalysis
      - state
      type: object
    DemographicsWithIdModel:
      example:
        factFinderId: 6
        city: city
        created: 2000-01-23T04:56:07.000+00:00
        jointAnalysis: true
        lockRetirement: true
        demographicsId: 0
        head1:
          alreadyRetired: true
          firstName: firstName
          lastName: lastName
          taxFilingStatus: 1
          gender: Male
          birthDate: 2000-01-23T04:56:07.000+00:00
          externalDestinationId: externalDestinationId
        externalSourceId: externalSourceId
        head2:
          alreadyRetired: true
          firstName: firstName
          lastName: lastName
          taxFilingStatus: 1
          gender: Male
          birthDate: 2000-01-23T04:56:07.000+00:00
          externalDestinationId: externalDestinationId
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        state: 5
        externalDestinationId: externalDestinationId
      properties:
        city:
          type: string
        created:
          format: date-time
          type: string
        demographicsId:
          format: int32
          type: integer
        externalDestinationId:
          type: string
        externalSourceId:
          type: string
        factFinderId:
          format: int32
          type: integer
        head1:
          $ref: '#/components/schemas/FamilyHeadModel'
        head2:
          $ref: '#/components/schemas/FamilyHeadModel'
        jointAnalysis:
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        lockRetirement:
          type: boolean
        state:
          format: int32
          type: integer
      type: object
    DisabilityInsurancePoliciesModel:
      example:
        disabilityInsurancePolicies:
        - factFinderId: 1
          premium: 2.3021358869347655
          insured: Client
          benefitType: Dollar
          policyType: 5
          description: description
          insurancePolicyId: 5
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          premiumFrequency: 7
          benefitFrequency: 6
          externalDestinationId: externalDestinationId
          benefit: 0.8008281904610115
        - factFinderId: 1
          premium: 2.3021358869347655
          insured: Client
          benefitType: Dollar
          policyType: 5
          description: description
          insurancePolicyId: 5
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          premiumFrequency: 7
          benefitFrequency: 6
          externalDestinationId: externalDestinationId
          benefit: 0.8008281904610115
      properties:
        disabilityInsurancePolicies:
          items:
            $ref: '#/components/schemas/DisabilityInsurancePolicyWithIdModel'
          type: array
      type: object
    DisabilityInsurancePolicyModel:
      example:
        factFinderId: 1
        premium: 5.637376656633329
        insured: Client
        benefitType: Dollar
        policyType: 5
        description: description
        premiumFrequency: 2
        benefitFrequency: 6
        externalDestinationId: externalDestinationId
        benefit: 0.8008281904610115
      properties:
        benefit:
          format: double
          type: number
        benefitFrequency:
          format: int32
          type: integer
        benefitType:
          enum:
          - Dollar
          - Percent
          type: string
        description:
          maxLength: 255
          minLength: 0
          type: string
        externalDestinationId:
          maxLength: 64
          minLength: 0
          type: string
        factFinderId:
          format: int32
          type: integer
        insured:
          enum:
          - Client
          - CoClient
          type: string
        policyType:
          format: int32
          type: integer
        premium:
          format: double
          type: number
        premiumFrequency:
          format: int32
          type: integer
      required:
      - description
      - factFinderId
      type: object
    DisabilityInsurancePolicyTypeModel:
      example:
        name: name
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        id: 0
      properties:
        id:
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        name:
          type: string
      type: object
    DisabilityInsurancePolicyTypesModel:
      example:
        insurancePolicyTypes:
        - name: name
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          id: 0
        - name: name
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          id: 0
      properties:
        insurancePolicyTypes:
          items:
            $ref: '#/components/schemas/DisabilityInsurancePolicyTypeModel'
          type: array
      type: object
    DisabilityInsurancePolicyWithIdModel:
      example:
        factFinderId: 1
        premium: 2.3021358869347655
        insured: Client
        benefitType: Dollar
        policyType: 5
        description: description
        insurancePolicyId: 5
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        premiumFrequency: 7
        benefitFrequency: 6
        externalDestinationId: externalDestinationId
        benefit: 0.8008281904610115
      properties:
        benefit:
          format: double
          type: number
        benefitFrequency:
          format: int32
          type: integer
        benefitType:
          enum:
          - Dollar
          - Percent
          type: string
        description:
          type: string
        externalDestinationId:
          type: string
        factFinderId:
          format: int32
          type: integer
        insurancePolicyId:
          format: int32
          type: integer
        insured:
          enum:
          - Client
          - CoClient
          type: string
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        policyType:
          format: int32
          type: integer
        premium:
          format: double
          type: number
        premiumFrequency:
          format: int32
          type: integer
      type: object
    EducationExpenseModel:
      example:
        annualCost: 0.8008281904610115
        memberDependentId: 6
        member: Client
        startYear: 2000-01-23T04:56:07.000+00:00
        externalDestinationId: externalDestinationId
        years: 15
      properties:
        annualCost:
          format: double
          type: number
        externalDestinationId:
          maxLength: 64
          minLength: 0
          type: string
        member:
          enum:
          - Client
          - CoClient
          - Dependent
          type: string
        memberDependentId:
          format: int32
          type: integer
        startYear:
          format: date-time
          type: string
        years:
          format: int32
          maximum: 99
          minimum: 1
          type: integer
      type: object
    EducationExpenseWithIdModel:
      example:
        annualCost: 0.8008281904610115
        memberDependentId: 5
        member: Client
        startYear: 2000-01-23T04:56:07.000+00:00
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        educationExpenseId: 6
        educationGoalId: 1
        externalDestinationId: externalDestinationId
        years: 5
      properties:
        annualCost:
          format: double
          type: number
        educationExpenseId:
          format: int32
          type: integer
        educationGoalId:
          format: int32
          type: integer
        externalDestinationId:
          type: string
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        member:
          enum:
          - Client
          - CoClient
          - Dependent
          type: string
        memberDependentId:
          format: int32
          type: integer
        startYear:
          format: date-time
          type: string
        years:
          format: int32
          type: integer
      type: object
    EducationExpensesModel:
      example:
        educationExpenses:
        - annualCost: 0.8008281904610115
          memberDependentId: 5
          member: Client
          startYear: 2000-01-23T04:56:07.000+00:00
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          educationExpenseId: 6
          educationGoalId: 1
          externalDestinationId: externalDestinationId
          years: 5
        - annualCost: 0.8008281904610115
          memberDependentId: 5
          member: Client
          startYear: 2000-01-23T04:56:07.000+00:00
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          educationExpenseId: 6
          educationGoalId: 1
          externalDestinationId: externalDestinationId
          years: 5
      properties:
        educationExpenses:
          items:
            $ref: '#/components/schemas/EducationExpenseWithIdModel'
          type: array
      type: object
    EducationGoalModel:
      example:
        factFinderId: 0
        projectedCost: 6.027456183070403
        description: description
        externalDestinationId: externalDestinationId
      properties:
        description:
          maxLength: 255
          minLength: 0
          type: string
        externalDestinationId:
          maxLength: 64
          minLength: 0
          type: string
        factFinderId:
          format: int32
          type: integer
        projectedCost:
          format: double
          type: number
      required:
      - description
      - factFinderId
      type: object
    EducationGoalWithIdModel:
      example:
        factFinderId: 6
        projectedCost: 1.4658129805029452
        description: description
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        educationGoalId: 0
        externalDestinationId: externalDestinationId
      properties:
        description:
          type: string
        educationGoalId:
          format: int32
          type: integer
        externalDestinationId:
          type: string
        factFinderId:
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        projectedCost:
          format: double
          type: number
      type: object
    EducationGoalsModel:
      example:
        educationGoals:
        - factFinderId: 6
          projectedCost: 1.4658129805029452
          description: description
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          educationGoalId: 0
          externalDestinationId: externalDestinationId
        - factFinderId: 6
          projectedCost: 1.4658129805029452
          description: description
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          educationGoalId: 0
          externalDestinationId: externalDestinationId
      properties:
        educationGoals:
          items:
            $ref: '#/components/schemas/EducationGoalWithIdModel'
          type: array
      type: object
    ExpenseModel:
      example:
        expenseAmount: 6.027456183070403
        factFinderId: 5
        annualPeriod: 8
        endDate: 2000-01-23T04:56:07.000+00:00
        member: Client
        description: description
        expenseTypeId: 1
        externalDestinationId: externalDestinationId
        startDate: 2000-01-23T04:56:07.000+00:00
        frequency: 5
      properties:
        annualPeriod:
          format: int32
          maximum: 99
          minimum: 1
          type: integer
        description:
          maxLength: 255
          minLength: 0
          type: string
        endDate:
          format: date-time
          type: string
        expenseAmount:
          format: double
          type: number
        expenseTypeId:
          format: int32
          type: integer
        externalDestinationId:
          maxLength: 64
          minLength: 0
          type: string
        factFinderId:
          format: int32
          type: integer
        frequency:
          format: int32
          type: integer
        member:
          enum:
          - Client
          - CoClient
          - Joint
          type: string
        startDate:
          format: date-time
          type: string
      required:
      - description
      - factFinderId
      type: object
    ExpenseTypeModel:
      example:
        name: name
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        id: 0
      properties:
        id:
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        name:
          type: string
      type: object
    ExpenseTypesModel:
      example:
        expenseTypes:
        - name: name
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          id: 0
        - name: name
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          id: 0
      properties:
        expenseTypes:
          items:
            $ref: '#/components/schemas/ExpenseTypeModel'
          type: array
      type: object
    ExpenseWithIdModel:
      example:
        expenseAmount: 6.027456183070403
        factFinderId: 5
        annualPeriod: 0
        endDate: 2000-01-23T04:56:07.000+00:00
        expenseId: 1
        member: Client
        description: description
        expenseTypeId: 5
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        externalDestinationId: externalDestinationId
        startDate: 2000-01-23T04:56:07.000+00:00
        frequency: 2
      properties:
        annualPeriod:
          format: int32
          type: integer
        description:
          type: string
        endDate:
          format: date-time
          type: string
        expenseAmount:
          format: double
          type: number
        expenseId:
          format: int32
          type: integer
        expenseTypeId:
          format: int32
          type: integer
        externalDestinationId:
          type: string
        factFinderId:
          format: int32
          type: integer
        frequency:
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        member:
          enum:
          - Client
          - CoClient
          - Joint
          type: string
        startDate:
          format: date-time
          type: string
      type: object
    ExpensesModel:
      example:
        expenses:
        - expenseAmount: 6.027456183070403
          factFinderId: 5
          annualPeriod: 0
          endDate: 2000-01-23T04:56:07.000+00:00
          expenseId: 1
          member: Client
          description: description
          expenseTypeId: 5
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          externalDestinationId: externalDestinationId
          startDate: 2000-01-23T04:56:07.000+00:00
          frequency: 2
        - expenseAmount: 6.027456183070403
          factFinderId: 5
          annualPeriod: 0
          endDate: 2000-01-23T04:56:07.000+00:00
          expenseId: 1
          member: Client
          description: description
          expenseTypeId: 5
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          externalDestinationId: externalDestinationId
          startDate: 2000-01-23T04:56:07.000+00:00
          frequency: 2
      properties:
        expenses:
          items:
            $ref: '#/components/schemas/ExpenseWithIdModel'
          type: array
      type: object
    FactFinderEntityModel:
      example:
        householdId: 171976544
        planLevel: Level2
        modules:
        - Demographics
        - Demographics
      properties:
        householdId:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        modules:
          items:
            enum:
            - Demographics
            - Assets
            - Liabilities
            - Incomes
            - Expenses
            - Insurance
            - Retirement
            - Education
            - MajorPurchase
            type: string
          type: array
        planLevel:
          enum:
          - Level2
          - Level1
          type: string
      required:
      - householdId
      type: object
    FactFinderModel:
      example:
        status: New
      properties:
        status:
          enum:
          - New
          - InProgress
          - ClientSubmitted
          - AdvisorAccepted
          - Canceled
          - Draft
          - Deleted
          type: string
      type: object
    FactFinderModuleModel:
      example:
        available: true
        moduleName: Demographics
        visited: true
      properties:
        available:
          type: boolean
        moduleName:
          enum:
          - Demographics
          - Assets
          - Liabilities
          - Incomes
          - Expenses
          - Insurance
          - Retirement
          - Education
          - MajorPurchase
          type: string
        visited:
          type: boolean
      required:
      - moduleName
      type: object
    FactFinderModuleWithIdModel:
      example:
        factFinderId: 1
        available: true
        moduleName: Demographics
        visited: true
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        moduleId: 5
      properties:
        available:
          type: boolean
        factFinderId:
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        moduleId:
          format: int32
          type: integer
        moduleName:
          enum:
          - Demographics
          - Assets
          - Liabilities
          - Incomes
          - Expenses
          - Insurance
          - Retirement
          - Education
          - MajorPurchase
          type: string
        visited:
          type: boolean
      type: object
    FactFinderModulesModel:
      example:
        factFinderModules:
        - factFinderId: 1
          available: true
          moduleName: Demographics
          visited: true
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          moduleId: 5
        - factFinderId: 1
          available: true
          moduleName: Demographics
          visited: true
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          moduleId: 5
      properties:
        factFinderModules:
          items:
            $ref: '#/components/schemas/FactFinderModuleWithIdModel'
          type: array
      type: object
    FactFinderPopulatableEntityModel:
      example:
        householdId: 171976544
        planLevel: Level2
        planId: 1294386358
        modules:
        - Demographics
        - Demographics
      properties:
        householdId:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        modules:
          items:
            enum:
            - Demographics
            - Assets
            - Liabilities
            - Incomes
            - Expenses
            - Insurance
            - Retirement
            - Education
            - MajorPurchase
            type: string
          type: array
        planId:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        planLevel:
          enum:
          - Level2
          - Level1
          type: string
      required:
      - householdId
      type: object
    FactFinderPopulationModel:
      example:
        planId: 171976544
      properties:
        planId:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
      type: object
    FactFinderSnapshotWithIdModel:
      example:
        factFinderData:
          incomes:
          - incomeTypeId: 7
            owner: Client
            factFinderId: 1
            incomeId: 4
            endDate: 2000-01-23T04:56:07.000+00:00
            description: description
            annualAmount: 4.258773108174356
            externalDestinationId: externalDestinationId
            startDate: 2000-01-23T04:56:07.000+00:00
          - incomeTypeId: 7
            owner: Client
            factFinderId: 1
            incomeId: 4
            endDate: 2000-01-23T04:56:07.000+00:00
            description: description
            annualAmount: 4.258773108174356
            externalDestinationId: externalDestinationId
            startDate: 2000-01-23T04:56:07.000+00:00
          lifestyleAssets:
          - owner: Client
            factFinderId: 1
            purchaseDate: 2000-01-23T04:56:07.000+00:00
            description: description
            marketValue: 9.183123594773994
            type: 0
            externalDestinationId: externalDestinationId
            lifestyleAssetId: 3
            purchaseAmount: 8.761432466225475
          - owner: Client
            factFinderId: 1
            purchaseDate: 2000-01-23T04:56:07.000+00:00
            description: description
            marketValue: 9.183123594773994
            type: 0
            externalDestinationId: externalDestinationId
            lifestyleAssetId: 3
            purchaseAmount: 8.761432466225475
          lifeInsurancePolicies:
          - insured: Client
            lifeInsurancePolicyId: 1
            description: description
            payer: Client
            benefit: 4.459605034958679
            frequency: 0
            factFinderId: 3
            premium: 6.623518433804886
            beneficiary: Client
            generalAccountMarketValue: 2.9409642974827896
            policyType: 8
            beneficiaryDependentId: 8
            subaccounts:
            - symbol: symbol
              lifeInsurancePolicyId: 4
              description: description
              marketValue: 9.254183946267839
              lifeInsurancePolicySubaccountId: 8
              externalDestinationId: externalDestinationId
            - symbol: symbol
              lifeInsurancePolicyId: 4
              description: description
              marketValue: 9.254183946267839
              lifeInsurancePolicySubaccountId: 8
              externalDestinationId: externalDestinationId
            externalDestinationId: externalDestinationId
          - insured: Client
            lifeInsurancePolicyId: 1
            description: description
            payer: Client
            benefit: 4.459605034958679
            frequency: 0
            factFinderId: 3
            premium: 6.623518433804886
            beneficiary: Client
            generalAccountMarketValue: 2.9409642974827896
            policyType: 8
            beneficiaryDependentId: 8
            subaccounts:
            - symbol: symbol
              lifeInsurancePolicyId: 4
              description: description
              marketValue: 9.254183946267839
              lifeInsurancePolicySubaccountId: 8
              externalDestinationId: externalDestinationId
            - symbol: symbol
              lifeInsurancePolicyId: 4
              description: description
              marketValue: 9.254183946267839
              lifeInsurancePolicySubaccountId: 8
              externalDestinationId: externalDestinationId
            externalDestinationId: externalDestinationId
          planYear: 3
          longTermCareInsurancePolicies:
          - factFinderId: 8
            premium: 3.7814124730767915
            insured: Client
            description: description
            longTermCareInsurancePolicyId: 7
            premiumFrequency: 3
            benefitFrequency: 5
            externalDestinationId: externalDestinationId
            benefit: 5.299143560275359
          - factFinderId: 8
            premium: 3.7814124730767915
            insured: Client
            description: description
            longTermCareInsurancePolicyId: 7
            premiumFrequency: 3
            benefitFrequency: 5
            externalDestinationId: externalDestinationId
            benefit: 5.299143560275359
          retirementGoal:
            retirementExpenses:
            - amount: 4.332304821875894
              retirementGoalId: 2
              annualPeriod: 2
              endDate: 2000-01-23T04:56:07.000+00:00
              member: Client
              retirementExpenseId: 0
              description: description
              externalDestinationId: externalDestinationId
              startDate: 2000-01-23T04:56:07.000+00:00
              frequency: 9
            - amount: 4.332304821875894
              retirementGoalId: 2
              annualPeriod: 2
              endDate: 2000-01-23T04:56:07.000+00:00
              member: Client
              retirementExpenseId: 0
              description: description
              externalDestinationId: externalDestinationId
              startDate: 2000-01-23T04:56:07.000+00:00
              frequency: 9
            factFinderId: 7
            retirementGoalId: 6
            head2RetirementDate: 2000-01-23T04:56:07.000+00:00
            externalDestinationId: externalDestinationId
            head1RetirementDate: 2000-01-23T04:56:07.000+00:00
          criticalIllnessInsurancePolicies:
          - criticalIllnessInsurancePolicyId: 1
            factFinderId: 4
            premium: 9.369310271410669
            insured: Client
            policyType: 9
            description: description
            externalDestinationId: externalDestinationId
            benefit: 7.457744773683766
            frequency: 5
          - criticalIllnessInsurancePolicyId: 1
            factFinderId: 4
            premium: 9.369310271410669
            insured: Client
            policyType: 9
            description: description
            externalDestinationId: externalDestinationId
            benefit: 7.457744773683766
            frequency: 5
          majorPurchaseGoals:
          - amount: 9.897492629215506
            factFinderId: 5
            majorPurchaseGoalId: 7
            targetDate: 2000-01-23T04:56:07.000+00:00
            member: Client
            description: description
            externalDestinationId: externalDestinationId
            majorPurchaseGoalTypeId: 0
          - amount: 9.897492629215506
            factFinderId: 5
            majorPurchaseGoalId: 7
            targetDate: 2000-01-23T04:56:07.000+00:00
            member: Client
            description: description
            externalDestinationId: externalDestinationId
            majorPurchaseGoalTypeId: 0
          realEstateAssets:
          - owner: Client
            factFinderId: 2
            purchaseDate: 2000-01-23T04:56:07.000+00:00
            rentalIncome: 0.35262192099236644
            description: description
            marketValue: 8.675064425986758
            realEstateAssetId: 0
            externalDestinationId: externalDestinationId
            frequency: 3
            purchaseAmount: 4.518309517874243
          - owner: Client
            factFinderId: 2
            purchaseDate: 2000-01-23T04:56:07.000+00:00
            rentalIncome: 0.35262192099236644
            description: description
            marketValue: 8.675064425986758
            realEstateAssetId: 0
            externalDestinationId: externalDestinationId
            frequency: 3
            purchaseAmount: 4.518309517874243
          definedBenefitPensions:
          - definedBenefitPensionId: 6
            factFinderId: 9
            member: Client
            description: description
            estimatedAmount: 8.762042012749001
            externalDestinationId: externalDestinationId
            startDate: 2000-01-23T04:56:07.000+00:00
          - definedBenefitPensionId: 6
            factFinderId: 9
            member: Client
            description: description
            estimatedAmount: 8.762042012749001
            externalDestinationId: externalDestinationId
            startDate: 2000-01-23T04:56:07.000+00:00
          liabilities:
          - interestRate: 0.5199002018724985
            originalPrincipal: 4.86315908102884
            owner: Client
            description: description
            liabilityType: 5
            frequency: 9
            paymentType: InterestOnly
            lastUpdated: 2000-01-23T04:56:07.000+00:00
            factFinderId: 0
            balance: 9.132027271330688
            importSource: importSource
            loanDate: 2000-01-23T04:56:07.000+00:00
            externalSourceId: externalSourceId
            payment: 6.073898085781152
            liabilityId: 7
            balanceAsOfDate: 2000-01-23T04:56:07.000+00:00
            externalDestinationId: externalDestinationId
          - interestRate: 0.5199002018724985
            originalPrincipal: 4.86315908102884
            owner: Client
            description: description
            liabilityType: 5
            frequency: 9
            paymentType: InterestOnly
            lastUpdated: 2000-01-23T04:56:07.000+00:00
            factFinderId: 0
            balance: 9.132027271330688
            importSource: importSource
            loanDate: 2000-01-23T04:56:07.000+00:00
            externalSourceId: externalSourceId
            payment: 6.073898085781152
            liabilityId: 7
            balanceAsOfDate: 2000-01-23T04:56:07.000+00:00
            externalDestinationId: externalDestinationId
          accounts:
          - owner: Client
            accountType: 2
            description: description
            marketValue: 9.301444243932576
            accountHoldings:
            - accountId: 6
              symbol: symbol
              accountHoldingId: 0
              cusip: cusip
              valuationDate: 2000-01-23T04:56:07.000+00:00
              heldAway: true
              costBasis: 1.4658129805029452
              description: description
              marketValue: 5.962133916683182
              externalDestinationId: externalDestinationId
            - accountId: 6
              symbol: symbol
              accountHoldingId: 0
              cusip: cusip
              valuationDate: 2000-01-23T04:56:07.000+00:00
              heldAway: true
              costBasis: 1.4658129805029452
              description: description
              marketValue: 5.962133916683182
              externalDestinationId: externalDestinationId
            ownerDependentId: 3
            accountId: 5
            lastUpdated: 2000-01-23T04:56:07.000+00:00
            externalSourceName: externalSourceName
            factFinderId: 7
            externalSourceId: externalSourceId
            externalDestinationId: externalDestinationId
            savingsStrategies:
            - postTaxSavingsAmount: 1.0246457001441578
              endDate: 2000-01-23T04:56:07.000+00:00
              mandatoryAmount: 1.2315135367772556
              employerSavingsAmount: 4.145608029883936
              frequencyId: 7
              savingsStrategyId: 6
              accountId: 2
              preTaxSavingsAmount: 1.4894159098541704
              postTaxSavingsAmountType: Dollar
              externalDestinationId: externalDestinationId
              preTaxSavingsAmountType: Dollar
              mandatoryAmountType: Dollar
              startDate: 2000-01-23T04:56:07.000+00:00
              employerSavingsAmountType: Dollar
            - postTaxSavingsAmount: 1.0246457001441578
              endDate: 2000-01-23T04:56:07.000+00:00
              mandatoryAmount: 1.2315135367772556
              employerSavingsAmount: 4.145608029883936
              frequencyId: 7
              savingsStrategyId: 6
              accountId: 2
              preTaxSavingsAmount: 1.4894159098541704
              postTaxSavingsAmountType: Dollar
              externalDestinationId: externalDestinationId
              preTaxSavingsAmountType: Dollar
              mandatoryAmountType: Dollar
              startDate: 2000-01-23T04:56:07.000+00:00
              employerSavingsAmountType: Dollar
          - owner: Client
            accountType: 2
            description: description
            marketValue: 9.301444243932576
            accountHoldings:
            - accountId: 6
              symbol: symbol
              accountHoldingId: 0
              cusip: cusip
              valuationDate: 2000-01-23T04:56:07.000+00:00
              heldAway: true
              costBasis: 1.4658129805029452
              description: description
              marketValue: 5.962133916683182
              externalDestinationId: externalDestinationId
            - accountId: 6
              symbol: symbol
              accountHoldingId: 0
              cusip: cusip
              valuationDate: 2000-01-23T04:56:07.000+00:00
              heldAway: true
              costBasis: 1.4658129805029452
              description: description
              marketValue: 5.962133916683182
              externalDestinationId: externalDestinationId
            ownerDependentId: 3
            accountId: 5
            lastUpdated: 2000-01-23T04:56:07.000+00:00
            externalSourceName: externalSourceName
            factFinderId: 7
            externalSourceId: externalSourceId
            externalDestinationId: externalDestinationId
            savingsStrategies:
            - postTaxSavingsAmount: 1.0246457001441578
              endDate: 2000-01-23T04:56:07.000+00:00
              mandatoryAmount: 1.2315135367772556
              employerSavingsAmount: 4.145608029883936
              frequencyId: 7
              savingsStrategyId: 6
              accountId: 2
              preTaxSavingsAmount: 1.4894159098541704
              postTaxSavingsAmountType: Dollar
              externalDestinationId: externalDestinationId
              preTaxSavingsAmountType: Dollar
              mandatoryAmountType: Dollar
              startDate: 2000-01-23T04:56:07.000+00:00
              employerSavingsAmountType: Dollar
            - postTaxSavingsAmount: 1.0246457001441578
              endDate: 2000-01-23T04:56:07.000+00:00
              mandatoryAmount: 1.2315135367772556
              employerSavingsAmount: 4.145608029883936
              frequencyId: 7
              savingsStrategyId: 6
              accountId: 2
              preTaxSavingsAmount: 1.4894159098541704
              postTaxSavingsAmountType: Dollar
              externalDestinationId: externalDestinationId
              preTaxSavingsAmountType: Dollar
              mandatoryAmountType: Dollar
              startDate: 2000-01-23T04:56:07.000+00:00
              employerSavingsAmountType: Dollar
          demographics:
            factFinderId: 1
            city: city
            created: 2000-01-23T04:56:07.000+00:00
            jointAnalysis: true
            lockRetirement: true
            demographicsId: 6
            head1:
              alreadyRetired: true
              firstName: firstName
              lastName: lastName
              taxFilingStatus: 2
              gender: Male
              birthDate: 2000-01-23T04:56:07.000+00:00
              externalDestinationId: externalDestinationId
            dependents:
            - dependentId: 6
              firstName: firstName
              lastName: lastName
              demographicsId: 3
              relationship: Son
              birthDate: 2000-01-23T04:56:07.000+00:00
              dependentOf: Client
              externalDestinationId: externalDestinationId
            - dependentId: 6
              firstName: firstName
              lastName: lastName
              demographicsId: 3
              relationship: Son
              birthDate: 2000-01-23T04:56:07.000+00:00
              dependentOf: Client
              externalDestinationId: externalDestinationId
            externalSourceId: externalSourceId
            head2:
              alreadyRetired: true
              firstName: firstName
              lastName: lastName
              taxFilingStatus: 2
              gender: Male
              birthDate: 2000-01-23T04:56:07.000+00:00
              externalDestinationId: externalDestinationId
            state: 6
            externalDestinationId: externalDestinationId
          disabilityInsurancePolicies:
          - factFinderId: 3
            premium: 7.143538047012306
            insured: Client
            benefitType: Dollar
            policyType: 3
            description: description
            disabilityInsurancePolicyId: 6
            premiumFrequency: 0
            benefitFrequency: 5
            externalDestinationId: externalDestinationId
            benefit: 6.878052220127876
          - factFinderId: 3
            premium: 7.143538047012306
            insured: Client
            benefitType: Dollar
            policyType: 3
            description: description
            disabilityInsurancePolicyId: 6
            premiumFrequency: 0
            benefitFrequency: 5
            externalDestinationId: externalDestinationId
            benefit: 6.878052220127876
          educationGoals:
          - factFinderId: 3
            projectedCost: 3.0576100241049344
            educationExpenses:
            - annualCost: 7.058770351582356
              memberDependentId: 4
              member: Client
              startYear: 2000-01-23T04:56:07.000+00:00
              educationExpenseId: 6
              educationGoalId: 0
              externalDestinationId: externalDestinationId
              years: 8
            - annualCost: 7.058770351582356
              memberDependentId: 4
              member: Client
              startYear: 2000-01-23T04:56:07.000+00:00
              educationExpenseId: 6
              educationGoalId: 0
              externalDestinationId: externalDestinationId
              years: 8
            description: description
            educationGoalId: 7
            externalDestinationId: externalDestinationId
          - factFinderId: 3
            projectedCost: 3.0576100241049344
            educationExpenses:
            - annualCost: 7.058770351582356
              memberDependentId: 4
              member: Client
              startYear: 2000-01-23T04:56:07.000+00:00
              educationExpenseId: 6
              educationGoalId: 0
              externalDestinationId: externalDestinationId
              years: 8
            - annualCost: 7.058770351582356
              memberDependentId: 4
              member: Client
              startYear: 2000-01-23T04:56:07.000+00:00
              educationExpenseId: 6
              educationGoalId: 0
              externalDestinationId: externalDestinationId
              years: 8
            description: description
            educationGoalId: 7
            externalDestinationId: externalDestinationId
          expenses:
          - expenseAmount: 5.533258397034986
            factFinderId: 0
            annualPeriod: 7
            endDate: 2000-01-23T04:56:07.000+00:00
            expenseId: 3
            member: Client
            description: description
            expenseTypeId: 4
            externalDestinationId: externalDestinationId
            startDate: 2000-01-23T04:56:07.000+00:00
            frequency: 6
          - expenseAmount: 5.533258397034986
            factFinderId: 0
            annualPeriod: 7
            endDate: 2000-01-23T04:56:07.000+00:00
            expenseId: 3
            member: Client
            description: description
            expenseTypeId: 4
            externalDestinationId: externalDestinationId
            startDate: 2000-01-23T04:56:07.000+00:00
            frequency: 6
        factFinderId: 4
        snapshotId: 6
        created: 2000-01-23T04:56:07.000+00:00
        factFinderStatus: New
      properties:
        created:
          format: date-time
          type: string
        factFinderData:
          $ref: '#/components/schemas/IFactFinderSnapshotDomainObject'
        factFinderId:
          format: int32
          type: integer
        factFinderStatus:
          enum:
          - New
          - InProgress
          - ClientSubmitted
          - AdvisorAccepted
          - Canceled
          - Draft
          - Deleted
          type: string
        snapshotId:
          format: int32
          type: integer
      type: object
    FactFinderSnapshotsModel:
      example:
        snapshots:
        - factFinderData:
            incomes:
            - incomeTypeId: 7
              owner: Client
              factFinderId: 1
              incomeId: 4
              endDate: 2000-01-23T04:56:07.000+00:00
              description: description
              annualAmount: 4.258773108174356
              externalDestinationId: externalDestinationId
              startDate: 2000-01-23T04:56:07.000+00:00
            - incomeTypeId: 7
              owner: Client
              factFinderId: 1
              incomeId: 4
              endDate: 2000-01-23T04:56:07.000+00:00
              description: description
              annualAmount: 4.258773108174356
              externalDestinationId: externalDestinationId
              startDate: 2000-01-23T04:56:07.000+00:00
            lifestyleAssets:
            - owner: Client
              factFinderId: 1
              purchaseDate: 2000-01-23T04:56:07.000+00:00
              description: description
              marketValue: 9.183123594773994
              type: 0
              externalDestinationId: externalDestinationId
              lifestyleAssetId: 3
              purchaseAmount: 8.761432466225475
            - owner: Client
              factFinderId: 1
              purchaseDate: 2000-01-23T04:56:07.000+00:00
              description: description
              marketValue: 9.183123594773994
              type: 0
              externalDestinationId: externalDestinationId
              lifestyleAssetId: 3
              purchaseAmount: 8.761432466225475
            lifeInsurancePolicies:
            - insured: Client
              lifeInsurancePolicyId: 1
              description: description
              payer: Client
              benefit: 4.459605034958679
              frequency: 0
              factFinderId: 3
              premium: 6.623518433804886
              beneficiary: Client
              generalAccountMarketValue: 2.9409642974827896
              policyType: 8
              beneficiaryDependentId: 8
              subaccounts:
              - symbol: symbol
                lifeInsurancePolicyId: 4
                description: description
                marketValue: 9.254183946267839
                lifeInsurancePolicySubaccountId: 8
                externalDestinationId: externalDestinationId
              - symbol: symbol
                lifeInsurancePolicyId: 4
                description: description
                marketValue: 9.254183946267839
                lifeInsurancePolicySubaccountId: 8
                externalDestinationId: externalDestinationId
              externalDestinationId: externalDestinationId
            - insured: Client
              lifeInsurancePolicyId: 1
              description: description
              payer: Client
              benefit: 4.459605034958679
              frequency: 0
              factFinderId: 3
              premium: 6.623518433804886
              beneficiary: Client
              generalAccountMarketValue: 2.9409642974827896
              policyType: 8
              beneficiaryDependentId: 8
              subaccounts:
              - symbol: symbol
                lifeInsurancePolicyId: 4
                description: description
                marketValue: 9.254183946267839
                lifeInsurancePolicySubaccountId: 8
                externalDestinationId: externalDestinationId
              - symbol: symbol
                lifeInsurancePolicyId: 4
                description: description
                marketValue: 9.254183946267839
                lifeInsurancePolicySubaccountId: 8
                externalDestinationId: externalDestinationId
              externalDestinationId: externalDestinationId
            planYear: 3
            longTermCareInsurancePolicies:
            - factFinderId: 8
              premium: 3.7814124730767915
              insured: Client
              description: description
              longTermCareInsurancePolicyId: 7
              premiumFrequency: 3
              benefitFrequency: 5
              externalDestinationId: externalDestinationId
              benefit: 5.299143560275359
            - factFinderId: 8
              premium: 3.7814124730767915
              insured: Client
              description: description
              longTermCareInsurancePolicyId: 7
              premiumFrequency: 3
              benefitFrequency: 5
              externalDestinationId: externalDestinationId
              benefit: 5.299143560275359
            retirementGoal:
              retirementExpenses:
              - amount: 4.332304821875894
                retirementGoalId: 2
                annualPeriod: 2
                endDate: 2000-01-23T04:56:07.000+00:00
                member: Client
                retirementExpenseId: 0
                description: description
                externalDestinationId: externalDestinationId
                startDate: 2000-01-23T04:56:07.000+00:00
                frequency: 9
              - amount: 4.332304821875894
                retirementGoalId: 2
                annualPeriod: 2
                endDate: 2000-01-23T04:56:07.000+00:00
                member: Client
                retirementExpenseId: 0
                description: description
                externalDestinationId: externalDestinationId
                startDate: 2000-01-23T04:56:07.000+00:00
                frequency: 9
              factFinderId: 7
              retirementGoalId: 6
              head2RetirementDate: 2000-01-23T04:56:07.000+00:00
              externalDestinationId: externalDestinationId
              head1RetirementDate: 2000-01-23T04:56:07.000+00:00
            criticalIllnessInsurancePolicies:
            - criticalIllnessInsurancePolicyId: 1
              factFinderId: 4
              premium: 9.369310271410669
              insured: Client
              policyType: 9
              description: description
              externalDestinationId: externalDestinationId
              benefit: 7.457744773683766
              frequency: 5
            - criticalIllnessInsurancePolicyId: 1
              factFinderId: 4
              premium: 9.369310271410669
              insured: Client
              policyType: 9
              description: description
              externalDestinationId: externalDestinationId
              benefit: 7.457744773683766
              frequency: 5
            majorPurchaseGoals:
            - amount: 9.897492629215506
              factFinderId: 5
              majorPurchaseGoalId: 7
              targetDate: 2000-01-23T04:56:07.000+00:00
              member: Client
              description: description
              externalDestinationId: externalDestinationId
              majorPurchaseGoalTypeId: 0
            - amount: 9.897492629215506
              factFinderId: 5
              majorPurchaseGoalId: 7
              targetDate: 2000-01-23T04:56:07.000+00:00
              member: Client
              description: description
              externalDestinationId: externalDestinationId
              majorPurchaseGoalTypeId: 0
            realEstateAssets:
            - owner: Client
              factFinderId: 2
              purchaseDate: 2000-01-23T04:56:07.000+00:00
              rentalIncome: 0.35262192099236644
              description: description
              marketValue: 8.675064425986758
              realEstateAssetId: 0
              externalDestinationId: externalDestinationId
              frequency: 3
              purchaseAmount: 4.518309517874243
            - owner: Client
              factFinderId: 2
              purchaseDate: 2000-01-23T04:56:07.000+00:00
              rentalIncome: 0.35262192099236644
              description: description
              marketValue: 8.675064425986758
              realEstateAssetId: 0
              externalDestinationId: externalDestinationId
              frequency: 3
              purchaseAmount: 4.518309517874243
            definedBenefitPensions:
            - definedBenefitPensionId: 6
              factFinderId: 9
              member: Client
              description: description
              estimatedAmount: 8.762042012749001
              externalDestinationId: externalDestinationId
              startDate: 2000-01-23T04:56:07.000+00:00
            - definedBenefitPensionId: 6
              factFinderId: 9
              member: Client
              description: description
              estimatedAmount: 8.762042012749001
              externalDestinationId: externalDestinationId
              startDate: 2000-01-23T04:56:07.000+00:00
            liabilities:
            - interestRate: 0.5199002018724985
              originalPrincipal: 4.86315908102884
              owner: Client
              description: description
              liabilityType: 5
              frequency: 9
              paymentType: InterestOnly
              lastUpdated: 2000-01-23T04:56:07.000+00:00
              factFinderId: 0
              balance: 9.132027271330688
              importSource: importSource
              loanDate: 2000-01-23T04:56:07.000+00:00
              externalSourceId: externalSourceId
              payment: 6.073898085781152
              liabilityId: 7
              balanceAsOfDate: 2000-01-23T04:56:07.000+00:00
              externalDestinationId: externalDestinationId
            - interestRate: 0.5199002018724985
              originalPrincipal: 4.86315908102884
              owner: Client
              description: description
              liabilityType: 5
              frequency: 9
              paymentType: InterestOnly
              lastUpdated: 2000-01-23T04:56:07.000+00:00
              factFinderId: 0
              balance: 9.132027271330688
              importSource: importSource
              loanDate: 2000-01-23T04:56:07.000+00:00
              externalSourceId: externalSourceId
              payment: 6.073898085781152
              liabilityId: 7
              balanceAsOfDate: 2000-01-23T04:56:07.000+00:00
              externalDestinationId: externalDestinationId
            accounts:
            - owner: Client
              accountType: 2
              description: description
              marketValue: 9.301444243932576
              accountHoldings:
              - accountId: 6
                symbol: symbol
                accountHoldingId: 0
                cusip: cusip
                valuationDate: 2000-01-23T04:56:07.000+00:00
                heldAway: true
                costBasis: 1.4658129805029452
                description: description
                marketValue: 5.962133916683182
                externalDestinationId: externalDestinationId
              - accountId: 6
                symbol: symbol
                accountHoldingId: 0
                cusip: cusip
                valuationDate: 2000-01-23T04:56:07.000+00:00
                heldAway: true
                costBasis: 1.4658129805029452
                description: description
                marketValue: 5.962133916683182
                externalDestinationId: externalDestinationId
              ownerDependentId: 3
              accountId: 5
              lastUpdated: 2000-01-23T04:56:07.000+00:00
              externalSourceName: externalSourceName
              factFinderId: 7
              externalSourceId: externalSourceId
              externalDestinationId: externalDestinationId
              savingsStrategies:
              - postTaxSavingsAmount: 1.0246457001441578
                endDate: 2000-01-23T04:56:07.000+00:00
                mandatoryAmount: 1.2315135367772556
                employerSavingsAmount: 4.145608029883936
                frequencyId: 7
                savingsStrategyId: 6
                accountId: 2
                preTaxSavingsAmount: 1.4894159098541704
                postTaxSavingsAmountType: Dollar
                externalDestinationId: externalDestinationId
                preTaxSavingsAmountType: Dollar
                mandatoryAmountType: Dollar
                startDate: 2000-01-23T04:56:07.000+00:00
                employerSavingsAmountType: Dollar
              - postTaxSavingsAmount: 1.0246457001441578
                endDate: 2000-01-23T04:56:07.000+00:00
                mandatoryAmount: 1.2315135367772556
                employerSavingsAmount: 4.145608029883936
                frequencyId: 7
                savingsStrategyId: 6
                accountId: 2
                preTaxSavingsAmount: 1.4894159098541704
                postTaxSavingsAmountType: Dollar
                externalDestinationId: externalDestinationId
                preTaxSavingsAmountType: Dollar
                mandatoryAmountType: Dollar
                startDate: 2000-01-23T04:56:07.000+00:00
                employerSavingsAmountType: Dollar
            - owner: Client
              accountType: 2
              description: description
              marketValue: 9.301444243932576
              accountHoldings:
              - accountId: 6
                symbol: symbol
                accountHoldingId: 0
                cusip: cusip
                valuationDate: 2000-01-23T04:56:07.000+00:00
                heldAway: true
                costBasis: 1.4658129805029452
                description: description
                marketValue: 5.962133916683182
                externalDestinationId: externalDestinationId
              - accountId: 6
                symbol: symbol
                accountHoldingId: 0
                cusip: cusip
                valuationDate: 2000-01-23T04:56:07.000+00:00
                heldAway: true
                costBasis: 1.4658129805029452
                description: description
                marketValue: 5.962133916683182
                externalDestinationId: externalDestinationId
              ownerDependentId: 3
              accountId: 5
              lastUpdated: 2000-01-23T04:56:07.000+00:00
              externalSourceName: externalSourceName
              factFinderId: 7
              externalSourceId: externalSourceId
              externalDestinationId: externalDestinationId
              savingsStrategies:
              - postTaxSavingsAmount: 1.0246457001441578
                endDate: 2000-01-23T04:56:07.000+00:00
                mandatoryAmount: 1.2315135367772556
                employerSavingsAmount: 4.145608029883936
                frequencyId: 7
                savingsStrategyId: 6
                accountId: 2
                preTaxSavingsAmount: 1.4894159098541704
                postTaxSavingsAmountType: Dollar
                externalDestinationId: externalDestinationId
                preTaxSavingsAmountType: Dollar
                mandatoryAmountType: Dollar
                startDate: 2000-01-23T04:56:07.000+00:00
                employerSavingsAmountType: Dollar
              - postTaxSavingsAmount: 1.0246457001441578
                endDate: 2000-01-23T04:56:07.000+00:00
                mandatoryAmount: 1.2315135367772556
                employerSavingsAmount: 4.145608029883936
                frequencyId: 7
                savingsStrategyId: 6
                accountId: 2
                preTaxSavingsAmount: 1.4894159098541704
                postTaxSavingsAmountType: Dollar
                externalDestinationId: externalDestinationId
                preTaxSavingsAmountType: Dollar
                mandatoryAmountType: Dollar
                startDate: 2000-01-23T04:56:07.000+00:00
                employerSavingsAmountType: Dollar
            demographics:
              factFinderId: 1
              city: city
              created: 2000-01-23T04:56:07.000+00:00
              jointAnalysis: true
              lockRetirement: true
              demographicsId: 6
              head1:
                alreadyRetired: true
                firstName: firstName
                lastName: lastName
                taxFilingStatus: 2
                gender: Male
                birthDate: 2000-01-23T04:56:07.000+00:00
                externalDestinationId: externalDestinationId
              dependents:
              - dependentId: 6
                firstName: firstName
                lastName: lastName
                demographicsId: 3
                relationship: Son
                birthDate: 2000-01-23T04:56:07.000+00:00
                dependentOf: Client
                externalDestinationId: externalDestinationId
              - dependentId: 6
                firstName: firstName
                lastName: lastName
                demographicsId: 3
                relationship: Son
                birthDate: 2000-01-23T04:56:07.000+00:00
                dependentOf: Client
                externalDestinationId: externalDestinationId
              externalSourceId: externalSourceId
              head2:
                alreadyRetired: true
                firstName: firstName
                lastName: lastName
                taxFilingStatus: 2
                gender: Male
                birthDate: 2000-01-23T04:56:07.000+00:00
                externalDestinationId: externalDestinationId
              state: 6
              externalDestinationId: externalDestinationId
            disabilityInsurancePolicies:
            - factFinderId: 3
              premium: 7.143538047012306
              insured: Client
              benefitType: Dollar
              policyType: 3
              description: description
              disabilityInsurancePolicyId: 6
              premiumFrequency: 0
              benefitFrequency: 5
              externalDestinationId: externalDestinationId
              benefit: 6.878052220127876
            - factFinderId: 3
              premium: 7.143538047012306
              insured: Client
              benefitType: Dollar
              policyType: 3
              description: description
              disabilityInsurancePolicyId: 6
              premiumFrequency: 0
              benefitFrequency: 5
              externalDestinationId: externalDestinationId
              benefit: 6.878052220127876
            educationGoals:
            - factFinderId: 3
              projectedCost: 3.0576100241049344
              educationExpenses:
              - annualCost: 7.058770351582356
                memberDependentId: 4
                member: Client
                startYear: 2000-01-23T04:56:07.000+00:00
                educationExpenseId: 6
                educationGoalId: 0
                externalDestinationId: externalDestinationId
                years: 8
              - annualCost: 7.058770351582356
                memberDependentId: 4
                member: Client
                startYear: 2000-01-23T04:56:07.000+00:00
                educationExpenseId: 6
                educationGoalId: 0
                externalDestinationId: externalDestinationId
                years: 8
              description: description
              educationGoalId: 7
              externalDestinationId: externalDestinationId
            - factFinderId: 3
              projectedCost: 3.0576100241049344
              educationExpenses:
              - annualCost: 7.058770351582356
                memberDependentId: 4
                member: Client
                startYear: 2000-01-23T04:56:07.000+00:00
                educationExpenseId: 6
                educationGoalId: 0
                externalDestinationId: externalDestinationId
                years: 8
              - annualCost: 7.058770351582356
                memberDependentId: 4
                member: Client
                startYear: 2000-01-23T04:56:07.000+00:00
                educationExpenseId: 6
                educationGoalId: 0
                externalDestinationId: externalDestinationId
                years: 8
              description: description
              educationGoalId: 7
              externalDestinationId: externalDestinationId
            expenses:
            - expenseAmount: 5.533258397034986
              factFinderId: 0
              annualPeriod: 7
              endDate: 2000-01-23T04:56:07.000+00:00
              expenseId: 3
              member: Client
              description: description
              expenseTypeId: 4
              externalDestinationId: externalDestinationId
              startDate: 2000-01-23T04:56:07.000+00:00
              frequency: 6
            - expenseAmount: 5.533258397034986
              factFinderId: 0
              annualPeriod: 7
              endDate: 2000-01-23T04:56:07.000+00:00
              expenseId: 3
              member: Client
              description: description
              expenseTypeId: 4
              externalDestinationId: externalDestinationId
              startDate: 2000-01-23T04:56:07.000+00:00
              frequency: 6
          factFinderId: 4
          snapshotId: 6
          created: 2000-01-23T04:56:07.000+00:00
          factFinderStatus: New
        - factFinderData:
            incomes:
            - incomeTypeId: 7
              owner: Client
              factFinderId: 1
              incomeId: 4
              endDate: 2000-01-23T04:56:07.000+00:00
              description: description
              annualAmount: 4.258773108174356
              externalDestinationId: externalDestinationId
              startDate: 2000-01-23T04:56:07.000+00:00
            - incomeTypeId: 7
              owner: Client
              factFinderId: 1
              incomeId: 4
              endDate: 2000-01-23T04:56:07.000+00:00
              description: description
              annualAmount: 4.258773108174356
              externalDestinationId: externalDestinationId
              startDate: 2000-01-23T04:56:07.000+00:00
            lifestyleAssets:
            - owner: Client
              factFinderId: 1
              purchaseDate: 2000-01-23T04:56:07.000+00:00
              description: description
              marketValue: 9.183123594773994
              type: 0
              externalDestinationId: externalDestinationId
              lifestyleAssetId: 3
              purchaseAmount: 8.761432466225475
            - owner: Client
              factFinderId: 1
              purchaseDate: 2000-01-23T04:56:07.000+00:00
              description: description
              marketValue: 9.183123594773994
              type: 0
              externalDestinationId: externalDestinationId
              lifestyleAssetId: 3
              purchaseAmount: 8.761432466225475
            lifeInsurancePolicies:
            - insured: Client
              lifeInsurancePolicyId: 1
              description: description
              payer: Client
              benefit: 4.459605034958679
              frequency: 0
              factFinderId: 3
              premium: 6.623518433804886
              beneficiary: Client
              generalAccountMarketValue: 2.9409642974827896
              policyType: 8
              beneficiaryDependentId: 8
              subaccounts:
              - symbol: symbol
                lifeInsurancePolicyId: 4
                description: description
                marketValue: 9.254183946267839
                lifeInsurancePolicySubaccountId: 8
                externalDestinationId: externalDestinationId
              - symbol: symbol
                lifeInsurancePolicyId: 4
                description: description
                marketValue: 9.254183946267839
                lifeInsurancePolicySubaccountId: 8
                externalDestinationId: externalDestinationId
              externalDestinationId: externalDestinationId
            - insured: Client
              lifeInsurancePolicyId: 1
              description: description
              payer: Client
              benefit: 4.459605034958679
              frequency: 0
              factFinderId: 3
              premium: 6.623518433804886
              beneficiary: Client
              generalAccountMarketValue: 2.9409642974827896
              policyType: 8
              beneficiaryDependentId: 8
              subaccounts:
              - symbol: symbol
                lifeInsurancePolicyId: 4
                description: description
                marketValue: 9.254183946267839
                lifeInsurancePolicySubaccountId: 8
                externalDestinationId: externalDestinationId
              - symbol: symbol
                lifeInsurancePolicyId: 4
                description: description
                marketValue: 9.254183946267839
                lifeInsurancePolicySubaccountId: 8
                externalDestinationId: externalDestinationId
              externalDestinationId: externalDestinationId
            planYear: 3
            longTermCareInsurancePolicies:
            - factFinderId: 8
              premium: 3.7814124730767915
              insured: Client
              description: description
              longTermCareInsurancePolicyId: 7
              premiumFrequency: 3
              benefitFrequency: 5
              externalDestinationId: externalDestinationId
              benefit: 5.299143560275359
            - factFinderId: 8
              premium: 3.7814124730767915
              insured: Client
              description: description
              longTermCareInsurancePolicyId: 7
              premiumFrequency: 3
              benefitFrequency: 5
              externalDestinationId: externalDestinationId
              benefit: 5.299143560275359
            retirementGoal:
              retirementExpenses:
              - amount: 4.332304821875894
                retirementGoalId: 2
                annualPeriod: 2
                endDate: 2000-01-23T04:56:07.000+00:00
                member: Client
                retirementExpenseId: 0
                description: description
                externalDestinationId: externalDestinationId
                startDate: 2000-01-23T04:56:07.000+00:00
                frequency: 9
              - amount: 4.332304821875894
                retirementGoalId: 2
                annualPeriod: 2
                endDate: 2000-01-23T04:56:07.000+00:00
                member: Client
                retirementExpenseId: 0
                description: description
                externalDestinationId: externalDestinationId
                startDate: 2000-01-23T04:56:07.000+00:00
                frequency: 9
              factFinderId: 7
              retirementGoalId: 6
              head2RetirementDate: 2000-01-23T04:56:07.000+00:00
              externalDestinationId: externalDestinationId
              head1RetirementDate: 2000-01-23T04:56:07.000+00:00
            criticalIllnessInsurancePolicies:
            - criticalIllnessInsurancePolicyId: 1
              factFinderId: 4
              premium: 9.369310271410669
              insured: Client
              policyType: 9
              description: description
              externalDestinationId: externalDestinationId
              benefit: 7.457744773683766
              frequency: 5
            - criticalIllnessInsurancePolicyId: 1
              factFinderId: 4
              premium: 9.369310271410669
              insured: Client
              policyType: 9
              description: description
              externalDestinationId: externalDestinationId
              benefit: 7.457744773683766
              frequency: 5
            majorPurchaseGoals:
            - amount: 9.897492629215506
              factFinderId: 5
              majorPurchaseGoalId: 7
              targetDate: 2000-01-23T04:56:07.000+00:00
              member: Client
              description: description
              externalDestinationId: externalDestinationId
              majorPurchaseGoalTypeId: 0
            - amount: 9.897492629215506
              factFinderId: 5
              majorPurchaseGoalId: 7
              targetDate: 2000-01-23T04:56:07.000+00:00
              member: Client
              description: description
              externalDestinationId: externalDestinationId
              majorPurchaseGoalTypeId: 0
            realEstateAssets:
            - owner: Client
              factFinderId: 2
              purchaseDate: 2000-01-23T04:56:07.000+00:00
              rentalIncome: 0.35262192099236644
              description: description
              marketValue: 8.675064425986758
              realEstateAssetId: 0
              externalDestinationId: externalDestinationId
              frequency: 3
              purchaseAmount: 4.518309517874243
            - owner: Client
              factFinderId: 2
              purchaseDate: 2000-01-23T04:56:07.000+00:00
              rentalIncome: 0.35262192099236644
              description: description
              marketValue: 8.675064425986758
              realEstateAssetId: 0
              externalDestinationId: externalDestinationId
              frequency: 3
              purchaseAmount: 4.518309517874243
            definedBenefitPensions:
            - definedBenefitPensionId: 6
              factFinderId: 9
              member: Client
              description: description
              estimatedAmount: 8.762042012749001
              externalDestinationId: externalDestinationId
              startDate: 2000-01-23T04:56:07.000+00:00
            - definedBenefitPensionId: 6
              factFinderId: 9
              member: Client
              description: description
              estimatedAmount: 8.762042012749001
              externalDestinationId: externalDestinationId
              startDate: 2000-01-23T04:56:07.000+00:00
            liabilities:
            - interestRate: 0.5199002018724985
              originalPrincipal: 4.86315908102884
              owner: Client
              description: description
              liabilityType: 5
              frequency: 9
              paymentType: InterestOnly
              lastUpdated: 2000-01-23T04:56:07.000+00:00
              factFinderId: 0
              balance: 9.132027271330688
              importSource: importSource
              loanDate: 2000-01-23T04:56:07.000+00:00
              externalSourceId: externalSourceId
              payment: 6.073898085781152
              liabilityId: 7
              balanceAsOfDate: 2000-01-23T04:56:07.000+00:00
              externalDestinationId: externalDestinationId
            - interestRate: 0.5199002018724985
              originalPrincipal: 4.86315908102884
              owner: Client
              description: description
              liabilityType: 5
              frequency: 9
              paymentType: InterestOnly
              lastUpdated: 2000-01-23T04:56:07.000+00:00
              factFinderId: 0
              balance: 9.132027271330688
              importSource: importSource
              loanDate: 2000-01-23T04:56:07.000+00:00
              externalSourceId: externalSourceId
              payment: 6.073898085781152
              liabilityId: 7
              balanceAsOfDate: 2000-01-23T04:56:07.000+00:00
              externalDestinationId: externalDestinationId
            accounts:
            - owner: Client
              accountType: 2
              description: description
              marketValue: 9.301444243932576
              accountHoldings:
              - accountId: 6
                symbol: symbol
                accountHoldingId: 0
                cusip: cusip
                valuationDate: 2000-01-23T04:56:07.000+00:00
                heldAway: true
                costBasis: 1.4658129805029452
                description: description
                marketValue: 5.962133916683182
                externalDestinationId: externalDestinationId
              - accountId: 6
                symbol: symbol
                accountHoldingId: 0
                cusip: cusip
                valuationDate: 2000-01-23T04:56:07.000+00:00
                heldAway: true
                costBasis: 1.4658129805029452
                description: description
                marketValue: 5.962133916683182
                externalDestinationId: externalDestinationId
              ownerDependentId: 3
              accountId: 5
              lastUpdated: 2000-01-23T04:56:07.000+00:00
              externalSourceName: externalSourceName
              factFinderId: 7
              externalSourceId: externalSourceId
              externalDestinationId: externalDestinationId
              savingsStrategies:
              - postTaxSavingsAmount: 1.0246457001441578
                endDate: 2000-01-23T04:56:07.000+00:00
                mandatoryAmount: 1.2315135367772556
                employerSavingsAmount: 4.145608029883936
                frequencyId: 7
                savingsStrategyId: 6
                accountId: 2
                preTaxSavingsAmount: 1.4894159098541704
                postTaxSavingsAmountType: Dollar
                externalDestinationId: externalDestinationId
                preTaxSavingsAmountType: Dollar
                mandatoryAmountType: Dollar
                startDate: 2000-01-23T04:56:07.000+00:00
                employerSavingsAmountType: Dollar
              - postTaxSavingsAmount: 1.0246457001441578
                endDate: 2000-01-23T04:56:07.000+00:00
                mandatoryAmount: 1.2315135367772556
                employerSavingsAmount: 4.145608029883936
                frequencyId: 7
                savingsStrategyId: 6
                accountId: 2
                preTaxSavingsAmount: 1.4894159098541704
                postTaxSavingsAmountType: Dollar
                externalDestinationId: externalDestinationId
                preTaxSavingsAmountType: Dollar
                mandatoryAmountType: Dollar
                startDate: 2000-01-23T04:56:07.000+00:00
                employerSavingsAmountType: Dollar
            - owner: Client
              accountType: 2
              description: description
              marketValue: 9.301444243932576
              accountHoldings:
              - accountId: 6
                symbol: symbol
                accountHoldingId: 0
                cusip: cusip
                valuationDate: 2000-01-23T04:56:07.000+00:00
                heldAway: true
                costBasis: 1.4658129805029452
                description: description
                marketValue: 5.962133916683182
                externalDestinationId: externalDestinationId
              - accountId: 6
                symbol: symbol
                accountHoldingId: 0
                cusip: cusip
                valuationDate: 2000-01-23T04:56:07.000+00:00
                heldAway: true
                costBasis: 1.4658129805029452
                description: description
                marketValue: 5.962133916683182
                externalDestinationId: externalDestinationId
              ownerDependentId: 3
              accountId: 5
              lastUpdated: 2000-01-23T04:56:07.000+00:00
              externalSourceName: externalSourceName
              factFinderId: 7
              externalSourceId: externalSourceId
              externalDestinationId: externalDestinationId
              savingsStrategies:
              - postTaxSavingsAmount: 1.0246457001441578
                endDate: 2000-01-23T04:56:07.000+00:00
                mandatoryAmount: 1.2315135367772556
                employerSavingsAmount: 4.145608029883936
                frequencyId: 7
                savingsStrategyId: 6
                accountId: 2
                preTaxSavingsAmount: 1.4894159098541704
                postTaxSavingsAmountType: Dollar
                externalDestinationId: externalDestinationId
                preTaxSavingsAmountType: Dollar
                mandatoryAmountType: Dollar
                startDate: 2000-01-23T04:56:07.000+00:00
                employerSavingsAmountType: Dollar
              - postTaxSavingsAmount: 1.0246457001441578
                endDate: 2000-01-23T04:56:07.000+00:00
                mandatoryAmount: 1.2315135367772556
                employerSavingsAmount: 4.145608029883936
                frequencyId: 7
                savingsStrategyId: 6
                accountId: 2
                preTaxSavingsAmount: 1.4894159098541704
                postTaxSavingsAmountType: Dollar
                externalDestinationId: externalDestinationId
                preTaxSavingsAmountType: Dollar
                mandatoryAmountType: Dollar
                startDate: 2000-01-23T04:56:07.000+00:00
                employerSavingsAmountType: Dollar
            demographics:
              factFinderId: 1
              city: city
              created: 2000-01-23T04:56:07.000+00:00
              jointAnalysis: true
              lockRetirement: true
              demographicsId: 6
              head1:
                alreadyRetired: true
                firstName: firstName
                lastName: lastName
                taxFilingStatus: 2
                gender: Male
                birthDate: 2000-01-23T04:56:07.000+00:00
                externalDestinationId: externalDestinationId
              dependents:
              - dependentId: 6
                firstName: firstName
                lastName: lastName
                demographicsId: 3
                relationship: Son
                birthDate: 2000-01-23T04:56:07.000+00:00
                dependentOf: Client
                externalDestinationId: externalDestinationId
              - dependentId: 6
                firstName: firstName
                lastName: lastName
                demographicsId: 3
                relationship: Son
                birthDate: 2000-01-23T04:56:07.000+00:00
                dependentOf: Client
                externalDestinationId: externalDestinationId
              externalSourceId: externalSourceId
              head2:
                alreadyRetired: true
                firstName: firstName
                lastName: lastName
                taxFilingStatus: 2
                gender: Male
                birthDate: 2000-01-23T04:56:07.000+00:00
                externalDestinationId: externalDestinationId
              state: 6
              externalDestinationId: externalDestinationId
            disabilityInsurancePolicies:
            - factFinderId: 3
              premium: 7.143538047012306
              insured: Client
              benefitType: Dollar
              policyType: 3
              description: description
              disabilityInsurancePolicyId: 6
              premiumFrequency: 0
              benefitFrequency: 5
              externalDestinationId: externalDestinationId
              benefit: 6.878052220127876
            - factFinderId: 3
              premium: 7.143538047012306
              insured: Client
              benefitType: Dollar
              policyType: 3
              description: description
              disabilityInsurancePolicyId: 6
              premiumFrequency: 0
              benefitFrequency: 5
              externalDestinationId: externalDestinationId
              benefit: 6.878052220127876
            educationGoals:
            - factFinderId: 3
              projectedCost: 3.0576100241049344
              educationExpenses:
              - annualCost: 7.058770351582356
                memberDependentId: 4
                member: Client
                startYear: 2000-01-23T04:56:07.000+00:00
                educationExpenseId: 6
                educationGoalId: 0
                externalDestinationId: externalDestinationId
                years: 8
              - annualCost: 7.058770351582356
                memberDependentId: 4
                member: Client
                startYear: 2000-01-23T04:56:07.000+00:00
                educationExpenseId: 6
                educationGoalId: 0
                externalDestinationId: externalDestinationId
                years: 8
              description: description
              educationGoalId: 7
              externalDestinationId: externalDestinationId
            - factFinderId: 3
              projectedCost: 3.0576100241049344
              educationExpenses:
              - annualCost: 7.058770351582356
                memberDependentId: 4
                member: Client
                startYear: 2000-01-23T04:56:07.000+00:00
                educationExpenseId: 6
                educationGoalId: 0
                externalDestinationId: externalDestinationId
                years: 8
              - annualCost: 7.058770351582356
                memberDependentId: 4
                member: Client
                startYear: 2000-01-23T04:56:07.000+00:00
                educationExpenseId: 6
                educationGoalId: 0
                externalDestinationId: externalDestinationId
                years: 8
              description: description
              educationGoalId: 7
              externalDestinationId: externalDestinationId
            expenses:
            - expenseAmount: 5.533258397034986
              factFinderId: 0
              annualPeriod: 7
              endDate: 2000-01-23T04:56:07.000+00:00
              expenseId: 3
              member: Client
              description: description
              expenseTypeId: 4
              externalDestinationId: externalDestinationId
              startDate: 2000-01-23T04:56:07.000+00:00
              frequency: 6
            - expenseAmount: 5.533258397034986
              factFinderId: 0
              annualPeriod: 7
              endDate: 2000-01-23T04:56:07.000+00:00
              expenseId: 3
              member: Client
              description: description
              expenseTypeId: 4
              externalDestinationId: externalDestinationId
              startDate: 2000-01-23T04:56:07.000+00:00
              frequency: 6
          factFinderId: 4
          snapshotId: 6
          created: 2000-01-23T04:56:07.000+00:00
          factFinderStatus: New
      properties:
        snapshots:
          items:
            $ref: '#/components/schemas/FactFinderSnapshotWithIdModel'
          type: array
      type: object
    FactFinderWithIdModel:
      example:
        householdId: 6
        factFinderId: 0
        planLevel: Level2
        countryCode: UnitedStates
        created: 2000-01-23T04:56:07.000+00:00
        lastStatusUpdate: 2000-01-23T04:56:07.000+00:00
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        planId: 5
        modules:
          factFinderModules:
          - factFinderId: 1
            available: true
            moduleName: Demographics
            visited: true
            links:
            - rel: rel
              href: href
            - rel: rel
              href: href
            moduleId: 5
          - factFinderId: 1
            available: true
            moduleName: Demographics
            visited: true
            links:
            - rel: rel
              href: href
            - rel: rel
              href: href
            moduleId: 5
        status: New
      properties:
        countryCode:
          enum:
          - UnitedStates
          - Canada
          type: string
        created:
          format: date-time
          type: string
        factFinderId:
          format: int32
          type: integer
        householdId:
          format: int32
          type: integer
        lastStatusUpdate:
          format: date-time
          type: string
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        modules:
          $ref: '#/components/schemas/FactFinderModulesModel'
        planId:
          format: int32
          type: integer
        planLevel:
          enum:
          - Level2
          - Level1
          type: string
        status:
          enum:
          - New
          - InProgress
          - ClientSubmitted
          - AdvisorAccepted
          - Canceled
          - Draft
          - Deleted
          type: string
      type: object
    FamilyHeadModel:
      example:
        alreadyRetired: true
        firstName: firstName
        lastName: lastName
        taxFilingStatus: 1
        gender: Male
        birthDate: 2000-01-23T04:56:07.000+00:00
        externalDestinationId: externalDestinationId
      properties:
        alreadyRetired:
          type: boolean
        birthDate:
          format: date-time
          type: string
        externalDestinationId:
          type: string
        firstName:
          maxLength: 255
          minLength: 0
          type: string
        gender:
          enum:
          - Male
          - Female
          - None
          type: string
        lastName:
          maxLength: 255
          minLength: 0
          type: string
        taxFilingStatus:
          format: int32
          type: integer
      required:
      - alreadyRetired
      - birthDate
      - firstName
      - gender
      - lastName
      - taxFilingStatus
      type: object
    FilingStatusTypeModel:
      example:
        filingStatusTypeId: 0
        partnerStatuses:
        - 6
        - 6
        filingStatusTypeName: filingStatusTypeName
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        validForSingleAnalysis: true
        hasJointDependent: true
      properties:
        filingStatusTypeId:
          format: int32
          type: integer
        filingStatusTypeName:
          type: string
        hasJointDependent:
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        partnerStatuses:
          items:
            format: int32
            type: integer
          type: array
        validForSingleAnalysis:
          type: boolean
      type: object
    FilingStatusTypesModel:
      example:
        filingStatusTypes:
        - filingStatusTypeId: 0
          partnerStatuses:
          - 6
          - 6
          filingStatusTypeName: filingStatusTypeName
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          validForSingleAnalysis: true
          hasJointDependent: true
        - filingStatusTypeId: 0
          partnerStatuses:
          - 6
          - 6
          filingStatusTypeName: filingStatusTypeName
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          validForSingleAnalysis: true
          hasJointDependent: true
      properties:
        filingStatusTypes:
          items:
            $ref: '#/components/schemas/FilingStatusTypeModel'
          type: array
      type: object
    FrequencyTypeModel:
      example:
        name: name
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        id: 0
      properties:
        id:
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        name:
          type: string
      type: object
    FrequencyTypesModel:
      example:
        frequencyTypes:
        - name: name
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          id: 0
        - name: name
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          id: 0
      properties:
        frequencyTypes:
          items:
            $ref: '#/components/schemas/FrequencyTypeModel'
          type: array
      type: object
    IAccountHoldingDomainObject:
      example:
        accountId: 6
        symbol: symbol
        accountHoldingId: 0
        cusip: cusip
        valuationDate: 2000-01-23T04:56:07.000+00:00
        heldAway: true
        costBasis: 1.4658129805029452
        description: description
        marketValue: 5.962133916683182
        externalDestinationId: externalDestinationId
      properties:
        accountHoldingId:
          format: int32
          type: integer
        accountId:
          format: int32
          type: integer
        costBasis:
          format: double
          type: number
        cusip:
          type: string
        description:
          type: string
        externalDestinationId:
          type: string
        heldAway:
          type: boolean
        marketValue:
          format: double
          type: number
        symbol:
          type: string
        valuationDate:
          format: date-time
          type: string
      type: object
    IAccountSavingsStrategyDomainObject:
      example:
        postTaxSavingsAmount: 1.0246457001441578
        endDate: 2000-01-23T04:56:07.000+00:00
        mandatoryAmount: 1.2315135367772556
        employerSavingsAmount: 4.145608029883936
        frequencyId: 7
        savingsStrategyId: 6
        accountId: 2
        preTaxSavingsAmount: 1.4894159098541704
        postTaxSavingsAmountType: Dollar
        externalDestinationId: externalDestinationId
        preTaxSavingsAmountType: Dollar
        mandatoryAmountType: Dollar
        startDate: 2000-01-23T04:56:07.000+00:00
        employerSavingsAmountType: Dollar
      properties:
        accountId:
          format: int32
          type: integer
        employerSavingsAmount:
          format: double
          type: number
        employerSavingsAmountType:
          enum:
          - Dollar
          - Percent
          - Max
          type: string
        endDate:
          format: date-time
          type: string
        externalDestinationId:
          type: string
        frequencyId:
          format: int32
          type: integer
        mandatoryAmount:
          format: double
          type: number
        mandatoryAmountType:
          enum:
          - Dollar
          - Percent
          - Max
          type: string
        postTaxSavingsAmount:
          format: double
          type: number
        postTaxSavingsAmountType:
          enum:
          - Dollar
          - Percent
          - Max
          type: string
        preTaxSavingsAmount:
          format: double
          type: number
        preTaxSavingsAmountType:
          enum:
          - Dollar
          - Percent
          - Max
          type: string
        savingsStrategyId:
          format: int32
          type: integer
        startDate:
          format: date-time
          type: string
      type: object
    IAccountWithSubEntitiesDomainObject:
      example:
        owner: Client
        accountType: 2
        description: description
        marketValue: 9.301444243932576
        accountHoldings:
        - accountId: 6
          symbol: symbol
          accountHoldingId: 0
          cusip: cusip
          valuationDate: 2000-01-23T04:56:07.000+00:00
          heldAway: true
          costBasis: 1.4658129805029452
          description: description
          marketValue: 5.962133916683182
          externalDestinationId: externalDestinationId
        - accountId: 6
          symbol: symbol
          accountHoldingId: 0
          cusip: cusip
          valuationDate: 2000-01-23T04:56:07.000+00:00
          heldAway: true
          costBasis: 1.4658129805029452
          description: description
          marketValue: 5.962133916683182
          externalDestinationId: externalDestinationId
        ownerDependentId: 3
        accountId: 5
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        externalSourceName: externalSourceName
        factFinderId: 7
        externalSourceId: externalSourceId
        externalDestinationId: externalDestinationId
        savingsStrategies:
        - postTaxSavingsAmount: 1.0246457001441578
          endDate: 2000-01-23T04:56:07.000+00:00
          mandatoryAmount: 1.2315135367772556
          employerSavingsAmount: 4.145608029883936
          frequencyId: 7
          savingsStrategyId: 6
          accountId: 2
          preTaxSavingsAmount: 1.4894159098541704
          postTaxSavingsAmountType: Dollar
          externalDestinationId: externalDestinationId
          preTaxSavingsAmountType: Dollar
          mandatoryAmountType: Dollar
          startDate: 2000-01-23T04:56:07.000+00:00
          employerSavingsAmountType: Dollar
        - postTaxSavingsAmount: 1.0246457001441578
          endDate: 2000-01-23T04:56:07.000+00:00
          mandatoryAmount: 1.2315135367772556
          employerSavingsAmount: 4.145608029883936
          frequencyId: 7
          savingsStrategyId: 6
          accountId: 2
          preTaxSavingsAmount: 1.4894159098541704
          postTaxSavingsAmountType: Dollar
          externalDestinationId: externalDestinationId
          preTaxSavingsAmountType: Dollar
          mandatoryAmountType: Dollar
          startDate: 2000-01-23T04:56:07.000+00:00
          employerSavingsAmountType: Dollar
      properties:
        accountHoldings:
          items:
            $ref: '#/components/schemas/IAccountHoldingDomainObject'
          type: array
        accountId:
          format: int32
          type: integer
        accountType:
          format: int32
          type: integer
        description:
          type: string
        externalDestinationId:
          type: string
        externalSourceId:
          type: string
        externalSourceName:
          type: string
        factFinderId:
          format: int32
          type: integer
        lastUpdated:
          format: date-time
          type: string
        marketValue:
          format: double
          type: number
        owner:
          enum:
          - Client
          - CoClient
          - Joint
          - Dependent
          - Other
          type: string
        ownerDependentId:
          format: int32
          type: integer
        savingsStrategies:
          items:
            $ref: '#/components/schemas/IAccountSavingsStrategyDomainObject'
          type: array
      type: object
    ICriticalIllnessInsurancePolicyDomainObject:
      example:
        criticalIllnessInsurancePolicyId: 1
        factFinderId: 4
        premium: 9.369310271410669
        insured: Client
        policyType: 9
        description: description
        externalDestinationId: externalDestinationId
        benefit: 7.457744773683766
        frequency: 5
      properties:
        benefit:
          format: double
          type: number
        criticalIllnessInsurancePolicyId:
          format: int32
          type: integer
        description:
          type: string
        externalDestinationId:
          type: string
        factFinderId:
          format: int32
          type: integer
        frequency:
          format: int32
          type: integer
        insured:
          enum:
          - Client
          - CoClient
          type: string
        policyType:
          format: int32
          type: integer
        premium:
          format: double
          type: number
      type: object
    IDemographicsDependentDomainObject:
      example:
        dependentId: 6
        firstName: firstName
        lastName: lastName
        demographicsId: 3
        relationship: Son
        birthDate: 2000-01-23T04:56:07.000+00:00
        dependentOf: Client
        externalDestinationId: externalDestinationId
      properties:
        birthDate:
          format: date-time
          type: string
        demographicsId:
          format: int32
          type: integer
        dependentId:
          format: int32
          type: integer
        dependentOf:
          enum:
          - Client
          - CoClient
          - Joint
          - Other
          type: string
        externalDestinationId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        relationship:
          enum:
          - Son
          - Daughter
          - FosterSon
          - FosterDaughter
          - Grandson
          - Granddaughter
          - Nephew
          - Niece
          - MaleCousin
          - FemaleCousin
          - Father
          - Mother
          - Grandfather
          - Grandmother
          - Uncle
          - Aunt
          - Brother
          - Sister
          - SonInLaw
          - DaughterInLaw
          - MaleOther
          - FemaleOther
          type: string
      type: object
    IDemographicsWithDependentsDomainObject:
      example:
        factFinderId: 1
        city: city
        created: 2000-01-23T04:56:07.000+00:00
        jointAnalysis: true
        lockRetirement: true
        demographicsId: 6
        head1:
          alreadyRetired: true
          firstName: firstName
          lastName: lastName
          taxFilingStatus: 2
          gender: Male
          birthDate: 2000-01-23T04:56:07.000+00:00
          externalDestinationId: externalDestinationId
        dependents:
        - dependentId: 6
          firstName: firstName
          lastName: lastName
          demographicsId: 3
          relationship: Son
          birthDate: 2000-01-23T04:56:07.000+00:00
          dependentOf: Client
          externalDestinationId: externalDestinationId
        - dependentId: 6
          firstName: firstName
          lastName: lastName
          demographicsId: 3
          relationship: Son
          birthDate: 2000-01-23T04:56:07.000+00:00
          dependentOf: Client
          externalDestinationId: externalDestinationId
        externalSourceId: externalSourceId
        head2:
          alreadyRetired: true
          firstName: firstName
          lastName: lastName
          taxFilingStatus: 2
          gender: Male
          birthDate: 2000-01-23T04:56:07.000+00:00
          externalDestinationId: externalDestinationId
        state: 6
        externalDestinationId: externalDestinationId
      properties:
        city:
          type: string
        created:
          format: date-time
          type: string
        demographicsId:
          format: int32
          type: integer
        dependents:
          items:
            $ref: '#/components/schemas/IDemographicsDependentDomainObject'
          type: array
        externalDestinationId:
          type: string
        externalSourceId:
          type: string
        factFinderId:
          format: int32
          type: integer
        head1:
          $ref: '#/components/schemas/IFamilyHeadDomainObject'
        head2:
          $ref: '#/components/schemas/IFamilyHeadDomainObject'
        jointAnalysis:
          type: boolean
        lockRetirement:
          type: boolean
        state:
          format: int32
          type: integer
      type: object
    IDisabilityInsurancePolicyDomainObject:
      example:
        factFinderId: 3
        premium: 7.143538047012306
        insured: Client
        benefitType: Dollar
        policyType: 3
        description: description
        disabilityInsurancePolicyId: 6
        premiumFrequency: 0
        benefitFrequency: 5
        externalDestinationId: externalDestinationId
        benefit: 6.878052220127876
      properties:
        benefit:
          format: double
          type: number
        benefitFrequency:
          format: int32
          type: integer
        benefitType:
          enum:
          - Dollar
          - Percent
          type: string
        description:
          type: string
        disabilityInsurancePolicyId:
          format: int32
          type: integer
        externalDestinationId:
          type: string
        factFinderId:
          format: int32
          type: integer
        insured:
          enum:
          - Client
          - CoClient
          type: string
        policyType:
          format: int32
          type: integer
        premium:
          format: double
          type: number
        premiumFrequency:
          format: int32
          type: integer
      type: object
    IEducationExpenseDomainObject:
      example:
        annualCost: 7.058770351582356
        memberDependentId: 4
        member: Client
        startYear: 2000-01-23T04:56:07.000+00:00
        educationExpenseId: 6
        educationGoalId: 0
        externalDestinationId: externalDestinationId
        years: 8
      properties:
        annualCost:
          format: double
          type: number
        educationExpenseId:
          format: int32
          type: integer
        educationGoalId:
          format: int32
          type: integer
        externalDestinationId:
          type: string
        member:
          enum:
          - Client
          - CoClient
          - Dependent
          type: string
        memberDependentId:
          format: int32
          type: integer
        startYear:
          format: date-time
          type: string
        years:
          format: int32
          type: integer
      type: object
    IEducationGoalWithExpensesDomainObject:
      example:
        factFinderId: 3
        projectedCost: 3.0576100241049344
        educationExpenses:
        - annualCost: 7.058770351582356
          memberDependentId: 4
          member: Client
          startYear: 2000-01-23T04:56:07.000+00:00
          educationExpenseId: 6
          educationGoalId: 0
          externalDestinationId: externalDestinationId
          years: 8
        - annualCost: 7.058770351582356
          memberDependentId: 4
          member: Client
          startYear: 2000-01-23T04:56:07.000+00:00
          educationExpenseId: 6
          educationGoalId: 0
          externalDestinationId: externalDestinationId
          years: 8
        description: description
        educationGoalId: 7
        externalDestinationId: externalDestinationId
      properties:
        description:
          type: string
        educationExpenses:
          items:
            $ref: '#/components/schemas/IEducationExpenseDomainObject'
          type: array
        educationGoalId:
          format: int32
          type: integer
        externalDestinationId:
          type: string
        factFinderId:
          format: int32
          type: integer
        projectedCost:
          format: double
          type: number
      type: object
    IExpenseDomainObject:
      example:
        expenseAmount: 5.533258397034986
        factFinderId: 0
        annualPeriod: 7
        endDate: 2000-01-23T04:56:07.000+00:00
        expenseId: 3
        member: Client
        description: description
        expenseTypeId: 4
        externalDestinationId: externalDestinationId
        startDate: 2000-01-23T04:56:07.000+00:00
        frequency: 6
      properties:
        annualPeriod:
          format: int32
          type: integer
        description:
          type: string
        endDate:
          format: date-time
          type: string
        expenseAmount:
          format: double
          type: number
        expenseId:
          format: int32
          type: integer
        expenseTypeId:
          format: int32
          type: integer
        externalDestinationId:
          type: string
        factFinderId:
          format: int32
          type: integer
        frequency:
          format: int32
          type: integer
        member:
          enum:
          - Client
          - CoClient
          - Joint
          type: string
        startDate:
          format: date-time
          type: string
      type: object
    IFactFinderDefinedBenefitPensionDomainObject:
      example:
        definedBenefitPensionId: 6
        factFinderId: 9
        member: Client
        description: description
        estimatedAmount: 8.762042012749001
        externalDestinationId: externalDestinationId
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        definedBenefitPensionId:
          format: int32
          readOnly: true
          type: integer
        description:
          readOnly: true
          type: string
        estimatedAmount:
          format: double
          readOnly: true
          type: number
        externalDestinationId:
          type: string
        factFinderId:
          format: int32
          type: integer
        member:
          enum:
          - Client
          - CoClient
          readOnly: true
          type: string
        startDate:
          format: date-time
          readOnly: true
          type: string
      type: object
    IFactFinderLiabilityDomainObject:
      example:
        interestRate: 0.5199002018724985
        originalPrincipal: 4.86315908102884
        owner: Client
        description: description
        liabilityType: 5
        frequency: 9
        paymentType: InterestOnly
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        factFinderId: 0
        balance: 9.132027271330688
        importSource: importSource
        loanDate: 2000-01-23T04:56:07.000+00:00
        externalSourceId: externalSourceId
        payment: 6.073898085781152
        liabilityId: 7
        balanceAsOfDate: 2000-01-23T04:56:07.000+00:00
        externalDestinationId: externalDestinationId
      properties:
        balance:
          format: double
          type: number
        balanceAsOfDate:
          format: date-time
          type: string
        description:
          type: string
        externalDestinationId:
          type: string
        externalSourceId:
          type: string
        factFinderId:
          format: int32
          type: integer
        frequency:
          format: int32
          type: integer
        importSource:
          type: string
        interestRate:
          format: double
          type: number
        lastUpdated:
          format: date-time
          type: string
        liabilityId:
          format: int32
          type: integer
        liabilityType:
          format: int32
          type: integer
        loanDate:
          format: date-time
          type: string
        originalPrincipal:
          format: double
          type: number
        owner:
          enum:
          - Client
          - CoClient
          - Joint
          type: string
        payment:
          format: double
          type: number
        paymentType:
          enum:
          - InterestOnly
          - PrincipalAndInterest
          - SetPrincipal
          - LastPeriod
          type: string
      type: object
    IFactFinderLifestyleAssetDomainObject:
      example:
        owner: Client
        factFinderId: 1
        purchaseDate: 2000-01-23T04:56:07.000+00:00
        description: description
        marketValue: 9.183123594773994
        type: 0
        externalDestinationId: externalDestinationId
        lifestyleAssetId: 3
        purchaseAmount: 8.761432466225475
      properties:
        description:
          readOnly: true
          type: string
        externalDestinationId:
          type: string
        factFinderId:
          format: int32
          type: integer
        lifestyleAssetId:
          format: int32
          readOnly: true
          type: integer
        marketValue:
          format: double
          readOnly: true
          type: number
        owner:
          enum:
          - Client
          - CoClient
          - Joint
          readOnly: true
          type: string
        purchaseAmount:
          format: double
          readOnly: true
          type: number
        purchaseDate:
          format: date-time
          readOnly: true
          type: string
        type:
          format: int32
          readOnly: true
          type: integer
      type: object
    IFactFinderSnapshotDomainObject:
      example:
        incomes:
        - incomeTypeId: 7
          owner: Client
          factFinderId: 1
          incomeId: 4
          endDate: 2000-01-23T04:56:07.000+00:00
          description: description
          annualAmount: 4.258773108174356
          externalDestinationId: externalDestinationId
          startDate: 2000-01-23T04:56:07.000+00:00
        - incomeTypeId: 7
          owner: Client
          factFinderId: 1
          incomeId: 4
          endDate: 2000-01-23T04:56:07.000+00:00
          description: description
          annualAmount: 4.258773108174356
          externalDestinationId: externalDestinationId
          startDate: 2000-01-23T04:56:07.000+00:00
        lifestyleAssets:
        - owner: Client
          factFinderId: 1
          purchaseDate: 2000-01-23T04:56:07.000+00:00
          description: description
          marketValue: 9.183123594773994
          type: 0
          externalDestinationId: externalDestinationId
          lifestyleAssetId: 3
          purchaseAmount: 8.761432466225475
        - owner: Client
          factFinderId: 1
          purchaseDate: 2000-01-23T04:56:07.000+00:00
          description: description
          marketValue: 9.183123594773994
          type: 0
          externalDestinationId: externalDestinationId
          lifestyleAssetId: 3
          purchaseAmount: 8.761432466225475
        lifeInsurancePolicies:
        - insured: Client
          lifeInsurancePolicyId: 1
          description: description
          payer: Client
          benefit: 4.459605034958679
          frequency: 0
          factFinderId: 3
          premium: 6.623518433804886
          beneficiary: Client
          generalAccountMarketValue: 2.9409642974827896
          policyType: 8
          beneficiaryDependentId: 8
          subaccounts:
          - symbol: symbol
            lifeInsurancePolicyId: 4
            description: description
            marketValue: 9.254183946267839
            lifeInsurancePolicySubaccountId: 8
            externalDestinationId: externalDestinationId
          - symbol: symbol
            lifeInsurancePolicyId: 4
            description: description
            marketValue: 9.254183946267839
            lifeInsurancePolicySubaccountId: 8
            externalDestinationId: externalDestinationId
          externalDestinationId: externalDestinationId
        - insured: Client
          lifeInsurancePolicyId: 1
          description: description
          payer: Client
          benefit: 4.459605034958679
          frequency: 0
          factFinderId: 3
          premium: 6.623518433804886
          beneficiary: Client
          generalAccountMarketValue: 2.9409642974827896
          policyType: 8
          beneficiaryDependentId: 8
          subaccounts:
          - symbol: symbol
            lifeInsurancePolicyId: 4
            description: description
            marketValue: 9.254183946267839
            lifeInsurancePolicySubaccountId: 8
            externalDestinationId: externalDestinationId
          - symbol: symbol
            lifeInsurancePolicyId: 4
            description: description
            marketValue: 9.254183946267839
            lifeInsurancePolicySubaccountId: 8
            externalDestinationId: externalDestinationId
          externalDestinationId: externalDestinationId
        planYear: 3
        longTermCareInsurancePolicies:
        - factFinderId: 8
          premium: 3.7814124730767915
          insured: Client
          description: description
          longTermCareInsurancePolicyId: 7
          premiumFrequency: 3
          benefitFrequency: 5
          externalDestinationId: externalDestinationId
          benefit: 5.299143560275359
        - factFinderId: 8
          premium: 3.7814124730767915
          insured: Client
          description: description
          longTermCareInsurancePolicyId: 7
          premiumFrequency: 3
          benefitFrequency: 5
          externalDestinationId: externalDestinationId
          benefit: 5.299143560275359
        retirementGoal:
          retirementExpenses:
          - amount: 4.332304821875894
            retirementGoalId: 2
            annualPeriod: 2
            endDate: 2000-01-23T04:56:07.000+00:00
            member: Client
            retirementExpenseId: 0
            description: description
            externalDestinationId: externalDestinationId
            startDate: 2000-01-23T04:56:07.000+00:00
            frequency: 9
          - amount: 4.332304821875894
            retirementGoalId: 2
            annualPeriod: 2
            endDate: 2000-01-23T04:56:07.000+00:00
            member: Client
            retirementExpenseId: 0
            description: description
            externalDestinationId: externalDestinationId
            startDate: 2000-01-23T04:56:07.000+00:00
            frequency: 9
          factFinderId: 7
          retirementGoalId: 6
          head2RetirementDate: 2000-01-23T04:56:07.000+00:00
          externalDestinationId: externalDestinationId
          head1RetirementDate: 2000-01-23T04:56:07.000+00:00
        criticalIllnessInsurancePolicies:
        - criticalIllnessInsurancePolicyId: 1
          factFinderId: 4
          premium: 9.369310271410669
          insured: Client
          policyType: 9
          description: description
          externalDestinationId: externalDestinationId
          benefit: 7.457744773683766
          frequency: 5
        - criticalIllnessInsurancePolicyId: 1
          factFinderId: 4
          premium: 9.369310271410669
          insured: Client
          policyType: 9
          description: description
          externalDestinationId: externalDestinationId
          benefit: 7.457744773683766
          frequency: 5
        majorPurchaseGoals:
        - amount: 9.897492629215506
          factFinderId: 5
          majorPurchaseGoalId: 7
          targetDate: 2000-01-23T04:56:07.000+00:00
          member: Client
          description: description
          externalDestinationId: externalDestinationId
          majorPurchaseGoalTypeId: 0
        - amount: 9.897492629215506
          factFinderId: 5
          majorPurchaseGoalId: 7
          targetDate: 2000-01-23T04:56:07.000+00:00
          member: Client
          description: description
          externalDestinationId: externalDestinationId
          majorPurchaseGoalTypeId: 0
        realEstateAssets:
        - owner: Client
          factFinderId: 2
          purchaseDate: 2000-01-23T04:56:07.000+00:00
          rentalIncome: 0.35262192099236644
          description: description
          marketValue: 8.675064425986758
          realEstateAssetId: 0
          externalDestinationId: externalDestinationId
          frequency: 3
          purchaseAmount: 4.518309517874243
        - owner: Client
          factFinderId: 2
          purchaseDate: 2000-01-23T04:56:07.000+00:00
          rentalIncome: 0.35262192099236644
          description: description
          marketValue: 8.675064425986758
          realEstateAssetId: 0
          externalDestinationId: externalDestinationId
          frequency: 3
          purchaseAmount: 4.518309517874243
        definedBenefitPensions:
        - definedBenefitPensionId: 6
          factFinderId: 9
          member: Client
          description: description
          estimatedAmount: 8.762042012749001
          externalDestinationId: externalDestinationId
          startDate: 2000-01-23T04:56:07.000+00:00
        - definedBenefitPensionId: 6
          factFinderId: 9
          member: Client
          description: description
          estimatedAmount: 8.762042012749001
          externalDestinationId: externalDestinationId
          startDate: 2000-01-23T04:56:07.000+00:00
        liabilities:
        - interestRate: 0.5199002018724985
          originalPrincipal: 4.86315908102884
          owner: Client
          description: description
          liabilityType: 5
          frequency: 9
          paymentType: InterestOnly
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          factFinderId: 0
          balance: 9.132027271330688
          importSource: importSource
          loanDate: 2000-01-23T04:56:07.000+00:00
          externalSourceId: externalSourceId
          payment: 6.073898085781152
          liabilityId: 7
          balanceAsOfDate: 2000-01-23T04:56:07.000+00:00
          externalDestinationId: externalDestinationId
        - interestRate: 0.5199002018724985
          originalPrincipal: 4.86315908102884
          owner: Client
          description: description
          liabilityType: 5
          frequency: 9
          paymentType: InterestOnly
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          factFinderId: 0
          balance: 9.132027271330688
          importSource: importSource
          loanDate: 2000-01-23T04:56:07.000+00:00
          externalSourceId: externalSourceId
          payment: 6.073898085781152
          liabilityId: 7
          balanceAsOfDate: 2000-01-23T04:56:07.000+00:00
          externalDestinationId: externalDestinationId
        accounts:
        - owner: Client
          accountType: 2
          description: description
          marketValue: 9.301444243932576
          accountHoldings:
          - accountId: 6
            symbol: symbol
            accountHoldingId: 0
            cusip: cusip
            valuationDate: 2000-01-23T04:56:07.000+00:00
            heldAway: true
            costBasis: 1.4658129805029452
            description: description
            marketValue: 5.962133916683182
            externalDestinationId: externalDestinationId
          - accountId: 6
            symbol: symbol
            accountHoldingId: 0
            cusip: cusip
            valuationDate: 2000-01-23T04:56:07.000+00:00
            heldAway: true
            costBasis: 1.4658129805029452
            description: description
            marketValue: 5.962133916683182
            externalDestinationId: externalDestinationId
          ownerDependentId: 3
          accountId: 5
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          externalSourceName: externalSourceName
          factFinderId: 7
          externalSourceId: externalSourceId
          externalDestinationId: externalDestinationId
          savingsStrategies:
          - postTaxSavingsAmount: 1.0246457001441578
            endDate: 2000-01-23T04:56:07.000+00:00
            mandatoryAmount: 1.2315135367772556
            employerSavingsAmount: 4.145608029883936
            frequencyId: 7
            savingsStrategyId: 6
            accountId: 2
            preTaxSavingsAmount: 1.4894159098541704
            postTaxSavingsAmountType: Dollar
            externalDestinationId: externalDestinationId
            preTaxSavingsAmountType: Dollar
            mandatoryAmountType: Dollar
            startDate: 2000-01-23T04:56:07.000+00:00
            employerSavingsAmountType: Dollar
          - postTaxSavingsAmount: 1.0246457001441578
            endDate: 2000-01-23T04:56:07.000+00:00
            mandatoryAmount: 1.2315135367772556
            employerSavingsAmount: 4.145608029883936
            frequencyId: 7
            savingsStrategyId: 6
            accountId: 2
            preTaxSavingsAmount: 1.4894159098541704
            postTaxSavingsAmountType: Dollar
            externalDestinationId: externalDestinationId
            preTaxSavingsAmountType: Dollar
            mandatoryAmountType: Dollar
            startDate: 2000-01-23T04:56:07.000+00:00
            employerSavingsAmountType: Dollar
        - owner: Client
          accountType: 2
          description: description
          marketValue: 9.301444243932576
          accountHoldings:
          - accountId: 6
            symbol: symbol
            accountHoldingId: 0
            cusip: cusip
            valuationDate: 2000-01-23T04:56:07.000+00:00
            heldAway: true
            costBasis: 1.4658129805029452
            description: description
            marketValue: 5.962133916683182
            externalDestinationId: externalDestinationId
          - accountId: 6
            symbol: symbol
            accountHoldingId: 0
            cusip: cusip
            valuationDate: 2000-01-23T04:56:07.000+00:00
            heldAway: true
            costBasis: 1.4658129805029452
            description: description
            marketValue: 5.962133916683182
            externalDestinationId: externalDestinationId
          ownerDependentId: 3
          accountId: 5
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          externalSourceName: externalSourceName
          factFinderId: 7
          externalSourceId: externalSourceId
          externalDestinationId: externalDestinationId
          savingsStrategies:
          - postTaxSavingsAmount: 1.0246457001441578
            endDate: 2000-01-23T04:56:07.000+00:00
            mandatoryAmount: 1.2315135367772556
            employerSavingsAmount: 4.145608029883936
            frequencyId: 7
            savingsStrategyId: 6
            accountId: 2
            preTaxSavingsAmount: 1.4894159098541704
            postTaxSavingsAmountType: Dollar
            externalDestinationId: externalDestinationId
            preTaxSavingsAmountType: Dollar
            mandatoryAmountType: Dollar
            startDate: 2000-01-23T04:56:07.000+00:00
            employerSavingsAmountType: Dollar
          - postTaxSavingsAmount: 1.0246457001441578
            endDate: 2000-01-23T04:56:07.000+00:00
            mandatoryAmount: 1.2315135367772556
            employerSavingsAmount: 4.145608029883936
            frequencyId: 7
            savingsStrategyId: 6
            accountId: 2
            preTaxSavingsAmount: 1.4894159098541704
            postTaxSavingsAmountType: Dollar
            externalDestinationId: externalDestinationId
            preTaxSavingsAmountType: Dollar
            mandatoryAmountType: Dollar
            startDate: 2000-01-23T04:56:07.000+00:00
            employerSavingsAmountType: Dollar
        demographics:
          factFinderId: 1
          city: city
          created: 2000-01-23T04:56:07.000+00:00
          jointAnalysis: true
          lockRetirement: true
          demographicsId: 6
          head1:
            alreadyRetired: true
            firstName: firstName
            lastName: lastName
            taxFilingStatus: 2
            gender: Male
            birthDate: 2000-01-23T04:56:07.000+00:00
            externalDestinationId: externalDestinationId
          dependents:
          - dependentId: 6
            firstName: firstName
            lastName: lastName
            demographicsId: 3
            relationship: Son
            birthDate: 2000-01-23T04:56:07.000+00:00
            dependentOf: Client
            externalDestinationId: externalDestinationId
          - dependentId: 6
            firstName: firstName
            lastName: lastName
            demographicsId: 3
            relationship: Son
            birthDate: 2000-01-23T04:56:07.000+00:00
            dependentOf: Client
            externalDestinationId: externalDestinationId
          externalSourceId: externalSourceId
          head2:
            alreadyRetired: true
            firstName: firstName
            lastName: lastName
            taxFilingStatus: 2
            gender: Male
            birthDate: 2000-01-23T04:56:07.000+00:00
            externalDestinationId: externalDestinationId
          state: 6
          externalDestinationId: externalDestinationId
        disabilityInsurancePolicies:
        - factFinderId: 3
          premium: 7.143538047012306
          insured: Client
          benefitType: Dollar
          policyType: 3
          description: description
          disabilityInsurancePolicyId: 6
          premiumFrequency: 0
          benefitFrequency: 5
          externalDestinationId: externalDestinationId
          benefit: 6.878052220127876
        - factFinderId: 3
          premium: 7.143538047012306
          insured: Client
          benefitType: Dollar
          policyType: 3
          description: description
          disabilityInsurancePolicyId: 6
          premiumFrequency: 0
          benefitFrequency: 5
          externalDestinationId: externalDestinationId
          benefit: 6.878052220127876
        educationGoals:
        - factFinderId: 3
          projectedCost: 3.0576100241049344
          educationExpenses:
          - annualCost: 7.058770351582356
            memberDependentId: 4
            member: Client
            startYear: 2000-01-23T04:56:07.000+00:00
            educationExpenseId: 6
            educationGoalId: 0
            externalDestinationId: externalDestinationId
            years: 8
          - annualCost: 7.058770351582356
            memberDependentId: 4
            member: Client
            startYear: 2000-01-23T04:56:07.000+00:00
            educationExpenseId: 6
            educationGoalId: 0
            externalDestinationId: externalDestinationId
            years: 8
          description: description
          educationGoalId: 7
          externalDestinationId: externalDestinationId
        - factFinderId: 3
          projectedCost: 3.0576100241049344
          educationExpenses:
          - annualCost: 7.058770351582356
            memberDependentId: 4
            member: Client
            startYear: 2000-01-23T04:56:07.000+00:00
            educationExpenseId: 6
            educationGoalId: 0
            externalDestinationId: externalDestinationId
            years: 8
          - annualCost: 7.058770351582356
            memberDependentId: 4
            member: Client
            startYear: 2000-01-23T04:56:07.000+00:00
            educationExpenseId: 6
            educationGoalId: 0
            externalDestinationId: externalDestinationId
            years: 8
          description: description
          educationGoalId: 7
          externalDestinationId: externalDestinationId
        expenses:
        - expenseAmount: 5.533258397034986
          factFinderId: 0
          annualPeriod: 7
          endDate: 2000-01-23T04:56:07.000+00:00
          expenseId: 3
          member: Client
          description: description
          expenseTypeId: 4
          externalDestinationId: externalDestinationId
          startDate: 2000-01-23T04:56:07.000+00:00
          frequency: 6
        - expenseAmount: 5.533258397034986
          factFinderId: 0
          annualPeriod: 7
          endDate: 2000-01-23T04:56:07.000+00:00
          expenseId: 3
          member: Client
          description: description
          expenseTypeId: 4
          externalDestinationId: externalDestinationId
          startDate: 2000-01-23T04:56:07.000+00:00
          frequency: 6
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/IAccountWithSubEntitiesDomainObject'
          type: array
        criticalIllnessInsurancePolicies:
          items:
            $ref: '#/components/schemas/ICriticalIllnessInsurancePolicyDomainObject'
          type: array
        definedBenefitPensions:
          items:
            $ref: '#/components/schemas/IFactFinderDefinedBenefitPensionDomainObject'
          type: array
        demographics:
          $ref: '#/components/schemas/IDemographicsWithDependentsDomainObject'
        disabilityInsurancePolicies:
          items:
            $ref: '#/components/schemas/IDisabilityInsurancePolicyDomainObject'
          type: array
        educationGoals:
          items:
            $ref: '#/components/schemas/IEducationGoalWithExpensesDomainObject'
          type: array
        expenses:
          items:
            $ref: '#/components/schemas/IExpenseDomainObject'
          type: array
        incomes:
          items:
            $ref: '#/components/schemas/IIncomeDomainObject'
          type: array
        liabilities:
          items:
            $ref: '#/components/schemas/IFactFinderLiabilityDomainObject'
          type: array
        lifeInsurancePolicies:
          items:
            $ref: '#/components/schemas/ILifeInsurancePolicyDomainObject'
          type: array
        lifestyleAssets:
          items:
            $ref: '#/components/schemas/IFactFinderLifestyleAssetDomainObject'
          type: array
        longTermCareInsurancePolicies:
          items:
            $ref: '#/components/schemas/ILongTermCareInsurancePolicyDomainObject'
          type: array
        majorPurchaseGoals:
          items:
            $ref: '#/components/schemas/IMajorPurchaseGoalDomainObject'
          type: array
        planYear:
          format: int32
          type: integer
        realEstateAssets:
          items:
            $ref: '#/components/schemas/IRealEstateAssetDomainObject'
          type: array
        retirementGoal:
          $ref: '#/components/schemas/IRetirementGoalWithExpensesDomainObject'
      type: object
    IFamilyHeadDomainObject:
      example:
        alreadyRetired: true
        firstName: firstName
        lastName: lastName
        taxFilingStatus: 2
        gender: Male
        birthDate: 2000-01-23T04:56:07.000+00:00
        externalDestinationId: externalDestinationId
      properties:
        alreadyRetired:
          type: boolean
        birthDate:
          format: date-time
          type: string
        externalDestinationId:
          type: string
        firstName:
          type: string
        gender:
          enum:
          - Male
          - Female
          - None
          type: string
        lastName:
          type: string
        taxFilingStatus:
          format: int32
          type: integer
      type: object
    IIncomeDomainObject:
      example:
        incomeTypeId: 7
        owner: Client
        factFinderId: 1
        incomeId: 4
        endDate: 2000-01-23T04:56:07.000+00:00
        description: description
        annualAmount: 4.258773108174356
        externalDestinationId: externalDestinationId
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        annualAmount:
          format: double
          type: number
        description:
          type: string
        endDate:
          format: date-time
          type: string
        externalDestinationId:
          type: string
        factFinderId:
          format: int32
          type: integer
        incomeId:
          format: int32
          type: integer
        incomeTypeId:
          format: int32
          type: integer
        owner:
          enum:
          - Client
          - CoClient
          type: string
        startDate:
          format: date-time
          type: string
      type: object
    ILifeInsurancePolicyDomainObject:
      example:
        insured: Client
        lifeInsurancePolicyId: 1
        description: description
        payer: Client
        benefit: 4.459605034958679
        frequency: 0
        factFinderId: 3
        premium: 6.623518433804886
        beneficiary: Client
        generalAccountMarketValue: 2.9409642974827896
        policyType: 8
        beneficiaryDependentId: 8
        subaccounts:
        - symbol: symbol
          lifeInsurancePolicyId: 4
          description: description
          marketValue: 9.254183946267839
          lifeInsurancePolicySubaccountId: 8
          externalDestinationId: externalDestinationId
        - symbol: symbol
          lifeInsurancePolicyId: 4
          description: description
          marketValue: 9.254183946267839
          lifeInsurancePolicySubaccountId: 8
          externalDestinationId: externalDestinationId
        externalDestinationId: externalDestinationId
      properties:
        beneficiary:
          enum:
          - Client
          - CoClient
          - Dependent
          - Other
          type: string
        beneficiaryDependentId:
          format: int32
          type: integer
        benefit:
          format: double
          type: number
        description:
          type: string
        externalDestinationId:
          type: string
        factFinderId:
          format: int32
          type: integer
        frequency:
          format: int32
          type: integer
        generalAccountMarketValue:
          format: double
          type: number
        insured:
          enum:
          - Client
          - CoClient
          - FirstToDie
          - SecondToDie
          - Other
          type: string
        lifeInsurancePolicyId:
          format: int32
          type: integer
        payer:
          enum:
          - Client
          - CoClient
          - Joint
          - Other
          type: string
        policyType:
          format: int32
          type: integer
        premium:
          format: double
          type: number
        subaccounts:
          items:
            $ref: '#/components/schemas/LifeInsurancePolicySubaccountDomainObject'
          type: array
      type: object
    ILongTermCareInsurancePolicyDomainObject:
      example:
        factFinderId: 8
        premium: 3.7814124730767915
        insured: Client
        description: description
        longTermCareInsurancePolicyId: 7
        premiumFrequency: 3
        benefitFrequency: 5
        externalDestinationId: externalDestinationId
        benefit: 5.299143560275359
      properties:
        benefit:
          format: double
          type: number
        benefitFrequency:
          format: int32
          type: integer
        description:
          type: string
        externalDestinationId:
          type: string
        factFinderId:
          format: int32
          type: integer
        insured:
          enum:
          - Client
          - CoClient
          type: string
        longTermCareInsurancePolicyId:
          format: int32
          type: integer
        premium:
          format: double
          type: number
        premiumFrequency:
          format: int32
          type: integer
      type: object
    IMajorPurchaseGoalDomainObject:
      example:
        amount: 9.897492629215506
        factFinderId: 5
        majorPurchaseGoalId: 7
        targetDate: 2000-01-23T04:56:07.000+00:00
        member: Client
        description: description
        externalDestinationId: externalDestinationId
        majorPurchaseGoalTypeId: 0
      properties:
        amount:
          format: double
          readOnly: true
          type: number
        description:
          readOnly: true
          type: string
        externalDestinationId:
          type: string
        factFinderId:
          format: int32
          type: integer
        majorPurchaseGoalId:
          format: int32
          readOnly: true
          type: integer
        majorPurchaseGoalTypeId:
          format: int32
          readOnly: true
          type: integer
        member:
          enum:
          - Client
          - CoClient
          - Joint
          readOnly: true
          type: string
        targetDate:
          format: date-time
          readOnly: true
          type: string
      type: object
    IRealEstateAssetDomainObject:
      example:
        owner: Client
        factFinderId: 2
        purchaseDate: 2000-01-23T04:56:07.000+00:00
        rentalIncome: 0.35262192099236644
        description: description
        marketValue: 8.675064425986758
        realEstateAssetId: 0
        externalDestinationId: externalDestinationId
        frequency: 3
        purchaseAmount: 4.518309517874243
      properties:
        description:
          type: string
        externalDestinationId:
          type: string
        factFinderId:
          format: int32
          type: integer
        frequency:
          format: int32
          type: integer
        marketValue:
          format: double
          type: number
        owner:
          enum:
          - Client
          - CoClient
          - Joint
          type: string
        purchaseAmount:
          format: double
          type: number
        purchaseDate:
          format: date-time
          type: string
        realEstateAssetId:
          format: int32
          type: integer
        rentalIncome:
          format: double
          type: number
      type: object
    IRetirementExpenseDomainObject:
      example:
        amount: 4.332304821875894
        retirementGoalId: 2
        annualPeriod: 2
        endDate: 2000-01-23T04:56:07.000+00:00
        member: Client
        retirementExpenseId: 0
        description: description
        externalDestinationId: externalDestinationId
        startDate: 2000-01-23T04:56:07.000+00:00
        frequency: 9
      properties:
        amount:
          format: double
          type: number
        annualPeriod:
          format: int32
          type: integer
        description:
          type: string
        endDate:
          format: date-time
          type: string
        externalDestinationId:
          type: string
        frequency:
          format: int32
          type: integer
        member:
          enum:
          - Client
          - CoClient
          - Joint
          type: string
        retirementExpenseId:
          format: int32
          type: integer
        retirementGoalId:
          format: int32
          type: integer
        startDate:
          format: date-time
          type: string
      type: object
    IRetirementGoalWithExpensesDomainObject:
      example:
        retirementExpenses:
        - amount: 4.332304821875894
          retirementGoalId: 2
          annualPeriod: 2
          endDate: 2000-01-23T04:56:07.000+00:00
          member: Client
          retirementExpenseId: 0
          description: description
          externalDestinationId: externalDestinationId
          startDate: 2000-01-23T04:56:07.000+00:00
          frequency: 9
        - amount: 4.332304821875894
          retirementGoalId: 2
          annualPeriod: 2
          endDate: 2000-01-23T04:56:07.000+00:00
          member: Client
          retirementExpenseId: 0
          description: description
          externalDestinationId: externalDestinationId
          startDate: 2000-01-23T04:56:07.000+00:00
          frequency: 9
        factFinderId: 7
        retirementGoalId: 6
        head2RetirementDate: 2000-01-23T04:56:07.000+00:00
        externalDestinationId: externalDestinationId
        head1RetirementDate: 2000-01-23T04:56:07.000+00:00
      properties:
        externalDestinationId:
          type: string
        factFinderId:
          format: int32
          type: integer
        head1RetirementDate:
          format: date-time
          type: string
        head2RetirementDate:
          format: date-time
          type: string
        retirementExpenses:
          items:
            $ref: '#/components/schemas/IRetirementExpenseDomainObject'
          type: array
        retirementGoalId:
          format: int32
          type: integer
      type: object
    IncomeModel:
      example:
        incomeTypeId: 1
        owner: Client
        factFinderId: 6
        endDate: 2000-01-23T04:56:07.000+00:00
        description: description
        annualAmount: 0.8008281904610115
        externalDestinationId: externalDestinationId
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        annualAmount:
          format: double
          type: number
        description:
          maxLength: 255
          minLength: 0
          type: string
        endDate:
          format: date-time
          type: string
        externalDestinationId:
          maxLength: 64
          minLength: 0
          type: string
        factFinderId:
          format: int32
          type: integer
        incomeTypeId:
          format: int32
          type: integer
        owner:
          enum:
          - Client
          - CoClient
          type: string
        startDate:
          format: date-time
          type: string
      required:
      - description
      - factFinderId
      type: object
    IncomeTypeModel:
      example:
        name: name
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        id: 0
      properties:
        id:
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        name:
          type: string
      type: object
    IncomeTypesModel:
      example:
        incomeTypes:
        - name: name
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          id: 0
        - name: name
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          id: 0
      properties:
        incomeTypes:
          items:
            $ref: '#/components/schemas/IncomeTypeModel'
          type: array
      type: object
    IncomeWithIdModel:
      example:
        incomeTypeId: 5
        owner: Client
        factFinderId: 6
        incomeId: 1
        endDate: 2000-01-23T04:56:07.000+00:00
        description: description
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        annualAmount: 0.8008281904610115
        externalDestinationId: externalDestinationId
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        annualAmount:
          format: double
          type: number
        description:
          type: string
        endDate:
          format: date-time
          type: string
        externalDestinationId:
          type: string
        factFinderId:
          format: int32
          type: integer
        incomeId:
          format: int32
          type: integer
        incomeTypeId:
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        owner:
          enum:
          - Client
          - CoClient
          type: string
        startDate:
          format: date-time
          type: string
      type: object
    IncomesModel:
      example:
        incomes:
        - incomeTypeId: 5
          owner: Client
          factFinderId: 6
          incomeId: 1
          endDate: 2000-01-23T04:56:07.000+00:00
          description: description
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          annualAmount: 0.8008281904610115
          externalDestinationId: externalDestinationId
          startDate: 2000-01-23T04:56:07.000+00:00
        - incomeTypeId: 5
          owner: Client
          factFinderId: 6
          incomeId: 1
          endDate: 2000-01-23T04:56:07.000+00:00
          description: description
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          annualAmount: 0.8008281904610115
          externalDestinationId: externalDestinationId
          startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        incomes:
          items:
            $ref: '#/components/schemas/IncomeWithIdModel'
          type: array
      type: object
    LiabilitiesModel:
      example:
        liabilities:
        - interestRate: 5.962133916683182
          originalPrincipal: 7.061401241503109
          owner: Client
          description: description
          liabilityType: 2
          frequency: 1
          paymentType: InterestOnly
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          externalSourceName: externalSourceName
          factFinderId: 6
          balance: 0.8008281904610115
          loanDate: 2000-01-23T04:56:07.000+00:00
          externalSourceId: externalSourceId
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          payment: 9.301444243932576
          liabilityId: 5
          balanceAsOfDate: 2000-01-23T04:56:07.000+00:00
          externalDestinationId: externalDestinationId
        - interestRate: 5.962133916683182
          originalPrincipal: 7.061401241503109
          owner: Client
          description: description
          liabilityType: 2
          frequency: 1
          paymentType: InterestOnly
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          externalSourceName: externalSourceName
          factFinderId: 6
          balance: 0.8008281904610115
          loanDate: 2000-01-23T04:56:07.000+00:00
          externalSourceId: externalSourceId
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          payment: 9.301444243932576
          liabilityId: 5
          balanceAsOfDate: 2000-01-23T04:56:07.000+00:00
          externalDestinationId: externalDestinationId
      properties:
        liabilities:
          items:
            $ref: '#/components/schemas/LiabilityWithIdModel'
          type: array
      type: object
    LiabilityModel:
      example:
        interestRate: 29.810669583415912
        originalPrincipal: 2.3021358869347655
        owner: Client
        description: description
        liabilityType: 5
        frequency: 1
        paymentType: InterestOnly
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        externalSourceName: externalSourceName
        factFinderId: 6
        balance: 0.8008281904610115
        loanDate: 2000-01-23T04:56:07.000+00:00
        externalSourceId: externalSourceId
        payment: 7.061401241503109
        balanceAsOfDate: 2000-01-23T04:56:07.000+00:00
        externalDestinationId: externalDestinationId
      properties:
        balance:
          format: double
          type: number
        balanceAsOfDate:
          format: date-time
          type: string
        description:
          maxLength: 255
          minLength: 0
          type: string
        externalDestinationId:
          maxLength: 64
          minLength: 0
          type: string
        externalSourceId:
          maxLength: 64
          minLength: 0
          type: string
        externalSourceName:
          maxLength: 64
          minLength: 0
          type: string
        factFinderId:
          format: int32
          type: integer
        frequency:
          format: int32
          type: integer
        interestRate:
          format: double
          maximum: 50
          minimum: 0
          type: number
        lastUpdated:
          format: date-time
          type: string
        liabilityType:
          format: int32
          type: integer
        loanDate:
          format: date-time
          type: string
        originalPrincipal:
          format: double
          type: number
        owner:
          enum:
          - Client
          - CoClient
          - Joint
          type: string
        payment:
          format: double
          type: number
        paymentType:
          enum:
          - InterestOnly
          - PrincipalAndInterest
          - SetPrincipal
          - LastPeriod
          type: string
      required:
      - description
      - factFinderId
      type: object
    LiabilityTypeModel:
      example:
        name: name
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        id: 0
      properties:
        id:
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        name:
          type: string
      type: object
    LiabilityTypesModel:
      example:
        liabilityTypes:
        - name: name
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          id: 0
        - name: name
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          id: 0
      properties:
        liabilityTypes:
          items:
            $ref: '#/components/schemas/LiabilityTypeModel'
          type: array
      type: object
    LiabilityWithIdModel:
      example:
        interestRate: 5.962133916683182
        originalPrincipal: 7.061401241503109
        owner: Client
        description: description
        liabilityType: 2
        frequency: 1
        paymentType: InterestOnly
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        externalSourceName: externalSourceName
        factFinderId: 6
        balance: 0.8008281904610115
        loanDate: 2000-01-23T04:56:07.000+00:00
        externalSourceId: externalSourceId
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        payment: 9.301444243932576
        liabilityId: 5
        balanceAsOfDate: 2000-01-23T04:56:07.000+00:00
        externalDestinationId: externalDestinationId
      properties:
        balance:
          format: double
          type: number
        balanceAsOfDate:
          format: date-time
          type: string
        description:
          type: string
        externalDestinationId:
          type: string
        externalSourceId:
          type: string
        externalSourceName:
          type: string
        factFinderId:
          format: int32
          type: integer
        frequency:
          format: int32
          type: integer
        interestRate:
          format: double
          type: number
        lastUpdated:
          format: date-time
          type: string
        liabilityId:
          format: int32
          type: integer
        liabilityType:
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        loanDate:
          format: date-time
          type: string
        originalPrincipal:
          format: double
          type: number
        owner:
          enum:
          - Client
          - CoClient
          - Joint
          type: string
        payment:
          format: double
          type: number
        paymentType:
          enum:
          - InterestOnly
          - PrincipalAndInterest
          - SetPrincipal
          - LastPeriod
          type: string
      type: object
    LifeInsurancePoliciesModel:
      example:
        lifeInsurancePolicies:
        - insured: Client
          description: description
          insurancePolicyId: 2
          payer: Client
          benefit: 6.027456183070403
          frequency: 5
          factFinderId: 1
          premium: 9.301444243932576
          beneficiary: Client
          generalAccountMarketValue: 5.637376656633329
          policyType: 7
          beneficiaryDependentId: 0
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          externalDestinationId: externalDestinationId
        - insured: Client
          description: description
          insurancePolicyId: 2
          payer: Client
          benefit: 6.027456183070403
          frequency: 5
          factFinderId: 1
          premium: 9.301444243932576
          beneficiary: Client
          generalAccountMarketValue: 5.637376656633329
          policyType: 7
          beneficiaryDependentId: 0
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          externalDestinationId: externalDestinationId
      properties:
        lifeInsurancePolicies:
          items:
            $ref: '#/components/schemas/LifeInsurancePolicyWithIdModel'
          type: array
      type: object
    LifeInsurancePoliciesWithSubEntitiesModel:
      example:
        lifeInsurancePolicies:
        - insured: Client
          description: description
          insurancePolicyId: 2
          payer: Client
          benefit: 6.027456183070403
          frequency: 5
          factFinderId: 1
          premium: 9.301444243932576
          beneficiary: Client
          generalAccountMarketValue: 5.637376656633329
          policyType: 7
          beneficiaryDependentId: 0
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          subaccounts:
          - symbol: symbol
            lifeInsurancePolicyId: 0
            description: description
            marketValue: 1.4658129805029452
            lifeInsurancePolicySubaccountId: 6
            externalDestinationId: externalDestinationId
          - symbol: symbol
            lifeInsurancePolicyId: 0
            description: description
            marketValue: 1.4658129805029452
            lifeInsurancePolicySubaccountId: 6
            externalDestinationId: externalDestinationId
          externalDestinationId: externalDestinationId
        - insured: Client
          description: description
          insurancePolicyId: 2
          payer: Client
          benefit: 6.027456183070403
          frequency: 5
          factFinderId: 1
          premium: 9.301444243932576
          beneficiary: Client
          generalAccountMarketValue: 5.637376656633329
          policyType: 7
          beneficiaryDependentId: 0
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          subaccounts:
          - symbol: symbol
            lifeInsurancePolicyId: 0
            description: description
            marketValue: 1.4658129805029452
            lifeInsurancePolicySubaccountId: 6
            externalDestinationId: externalDestinationId
          - symbol: symbol
            lifeInsurancePolicyId: 0
            description: description
            marketValue: 1.4658129805029452
            lifeInsurancePolicySubaccountId: 6
            externalDestinationId: externalDestinationId
          externalDestinationId: externalDestinationId
      properties:
        lifeInsurancePolicies:
          items:
            $ref: '#/components/schemas/LifeInsurancePolicyWithSubEntitiesModel'
          type: array
      type: object
    LifeInsurancePolicyModel:
      example:
        factFinderId: 1
        premium: 7.061401241503109
        beneficiary: Client
        insured: Client
        generalAccountMarketValue: 5.637376656633329
        policyType: 2
        description: description
        beneficiaryDependentId: 0
        externalDestinationId: externalDestinationId
        payer: Client
        benefit: 6.027456183070403
        frequency: 5
      properties:
        beneficiary:
          enum:
          - Client
          - CoClient
          - Dependent
          - Other
          type: string
        beneficiaryDependentId:
          format: int32
          type: integer
        benefit:
          format: double
          type: number
        description:
          maxLength: 255
          minLength: 0
          type: string
        externalDestinationId:
          maxLength: 64
          minLength: 0
          type: string
        factFinderId:
          format: int32
          type: integer
        frequency:
          format: int32
          type: integer
        generalAccountMarketValue:
          format: double
          type: number
        insured:
          enum:
          - Client
          - CoClient
          - FirstToDie
          - SecondToDie
          - Other
          type: string
        payer:
          enum:
          - Client
          - CoClient
          - Joint
          - Other
          type: string
        policyType:
          format: int32
          type: integer
        premium:
          format: double
          type: number
      required:
      - description
      - factFinderId
      type: object
    LifeInsurancePolicySubaccountDomainObject:
      example:
        symbol: symbol
        lifeInsurancePolicyId: 4
        description: description
        marketValue: 9.254183946267839
        lifeInsurancePolicySubaccountId: 8
        externalDestinationId: externalDestinationId
      properties:
        description:
          type: string
        externalDestinationId:
          type: string
        lifeInsurancePolicyId:
          format: int32
          type: integer
        lifeInsurancePolicySubaccountId:
          format: int32
          type: integer
        marketValue:
          format: double
          type: number
        symbol:
          type: string
      type: object
    LifeInsurancePolicySubaccountModel:
      example:
        symbol: symbol
        description: description
        marketValue: 0.8008281904610115
        externalDestinationId: externalDestinationId
      properties:
        description:
          maxLength: 255
          minLength: 0
          type: string
        externalDestinationId:
          maxLength: 64
          minLength: 0
          type: string
        marketValue:
          format: double
          type: number
        symbol:
          maxLength: 31
          minLength: 0
          type: string
      required:
      - description
      type: object
    LifeInsurancePolicySubaccountWithIdModel:
      example:
        symbol: symbol
        lifeInsurancePolicyId: 0
        description: description
        marketValue: 1.4658129805029452
        lifeInsurancePolicySubaccountId: 6
        externalDestinationId: externalDestinationId
      properties:
        description:
          maxLength: 255
          minLength: 0
          type: string
        externalDestinationId:
          maxLength: 64
          minLength: 0
          type: string
        lifeInsurancePolicyId:
          format: int32
          type: integer
        lifeInsurancePolicySubaccountId:
          format: int32
          type: integer
        marketValue:
          format: double
          type: number
        symbol:
          maxLength: 31
          minLength: 0
          type: string
      required:
      - description
      type: object
    LifeInsurancePolicySubaccountsModel:
      example:
        lifeInsurancePolicySubaccounts:
        - symbol: symbol
          lifeInsurancePolicyId: 0
          description: description
          marketValue: 1.4658129805029452
          lifeInsurancePolicySubaccountId: 6
          externalDestinationId: externalDestinationId
        - symbol: symbol
          lifeInsurancePolicyId: 0
          description: description
          marketValue: 1.4658129805029452
          lifeInsurancePolicySubaccountId: 6
          externalDestinationId: externalDestinationId
      properties:
        lifeInsurancePolicySubaccounts:
          items:
            $ref: '#/components/schemas/LifeInsurancePolicySubaccountWithIdModel'
          type: array
      type: object
    LifeInsurancePolicyTypeModel:
      example:
        name: name
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        id: 0
      properties:
        id:
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        name:
          type: string
      type: object
    LifeInsurancePolicyTypesModel:
      example:
        insurancePolicyTypes:
        - name: name
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          id: 0
        - name: name
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          id: 0
      properties:
        insurancePolicyTypes:
          items:
            $ref: '#/components/schemas/LifeInsurancePolicyTypeModel'
          type: array
      type: object
    LifeInsurancePolicyWithIdModel:
      example:
        insured: Client
        description: description
        insurancePolicyId: 2
        payer: Client
        benefit: 6.027456183070403
        frequency: 5
        factFinderId: 1
        premium: 9.301444243932576
        beneficiary: Client
        generalAccountMarketValue: 5.637376656633329
        policyType: 7
        beneficiaryDependentId: 0
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        externalDestinationId: externalDestinationId
      properties:
        beneficiary:
          enum:
          - Client
          - CoClient
          - Dependent
          - Other
          type: string
        beneficiaryDependentId:
          format: int32
          type: integer
        benefit:
          format: double
          type: number
        description:
          type: string
        externalDestinationId:
          type: string
        factFinderId:
          format: int32
          type: integer
        frequency:
          format: int32
          type: integer
        generalAccountMarketValue:
          format: double
          type: number
        insurancePolicyId:
          format: int32
          type: integer
        insured:
          enum:
          - Client
          - CoClient
          - FirstToDie
          - SecondToDie
          - Other
          type: string
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        payer:
          enum:
          - Client
          - CoClient
          - Joint
          - Other
          type: string
        policyType:
          format: int32
          type: integer
        premium:
          format: double
          type: number
      type: object
    LifeInsurancePolicyWithSubEntitiesModel:
      example:
        insured: Client
        description: description
        insurancePolicyId: 2
        payer: Client
        benefit: 6.027456183070403
        frequency: 5
        factFinderId: 1
        premium: 9.301444243932576
        beneficiary: Client
        generalAccountMarketValue: 5.637376656633329
        policyType: 7
        beneficiaryDependentId: 0
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        subaccounts:
        - symbol: symbol
          lifeInsurancePolicyId: 0
          description: description
          marketValue: 1.4658129805029452
          lifeInsurancePolicySubaccountId: 6
          externalDestinationId: externalDestinationId
        - symbol: symbol
          lifeInsurancePolicyId: 0
          description: description
          marketValue: 1.4658129805029452
          lifeInsurancePolicySubaccountId: 6
          externalDestinationId: externalDestinationId
        externalDestinationId: externalDestinationId
      properties:
        beneficiary:
          enum:
          - Client
          - CoClient
          - Dependent
          - Other
          type: string
        beneficiaryDependentId:
          format: int32
          type: integer
        benefit:
          format: double
          type: number
        description:
          type: string
        externalDestinationId:
          type: string
        factFinderId:
          format: int32
          type: integer
        frequency:
          format: int32
          type: integer
        generalAccountMarketValue:
          format: double
          type: number
        insurancePolicyId:
          format: int32
          type: integer
        insured:
          enum:
          - Client
          - CoClient
          - FirstToDie
          - SecondToDie
          - Other
          type: string
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        payer:
          enum:
          - Client
          - CoClient
          - Joint
          - Other
          type: string
        policyType:
          format: int32
          type: integer
        premium:
          format: double
          type: number
        subaccounts:
          items:
            $ref: '#/components/schemas/LifeInsurancePolicySubaccountWithIdModel'
          type: array
      type: object
    LifestyleAssetModel:
      example:
        owner: Client
        factFinderId: 0
        purchaseDate: 2000-01-23T04:56:07.000+00:00
        description: description
        marketValue: 6.027456183070403
        type: 5
        externalDestinationId: externalDestinationId
        purchaseAmount: 1.4658129805029452
      properties:
        description:
          maxLength: 255
          minLength: 0
          type: string
        externalDestinationId:
          maxLength: 64
          minLength: 0
          type: string
        factFinderId:
          format: int32
          type: integer
        marketValue:
          format: double
          type: number
        owner:
          enum:
          - Client
          - CoClient
          - Joint
          type: string
        purchaseAmount:
          format: double
          type: number
        purchaseDate:
          format: date-time
          type: string
        type:
          format: int32
          type: integer
      required:
      - description
      - factFinderId
      type: object
    LifestyleAssetTypeModel:
      example:
        name: name
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        id: 0
      properties:
        id:
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        name:
          type: string
      type: object
    LifestyleAssetTypesModel:
      example:
        lifestyleAssetTypes:
        - name: name
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          id: 0
        - name: name
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          id: 0
      properties:
        lifestyleAssetTypes:
          items:
            $ref: '#/components/schemas/LifestyleAssetTypeModel'
          type: array
      type: object
    LifestyleAssetWithIdModel:
      example:
        owner: Client
        factFinderId: 0
        purchaseDate: 2000-01-23T04:56:07.000+00:00
        description: description
        marketValue: 1.4658129805029452
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        type: 5
        externalDestinationId: externalDestinationId
        lifestyleAssetId: 6
        purchaseAmount: 5.962133916683182
      properties:
        description:
          type: string
        externalDestinationId:
          type: string
        factFinderId:
          format: int32
          type: integer
        lifestyleAssetId:
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        marketValue:
          format: double
          type: number
        owner:
          enum:
          - Client
          - CoClient
          - Joint
          type: string
        purchaseAmount:
          format: double
          type: number
        purchaseDate:
          format: date-time
          type: string
        type:
          format: int32
          type: integer
      type: object
    LifestyleAssetsModel:
      example:
        lifestyleAssets:
        - owner: Client
          factFinderId: 0
          purchaseDate: 2000-01-23T04:56:07.000+00:00
          description: description
          marketValue: 1.4658129805029452
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          type: 5
          externalDestinationId: externalDestinationId
          lifestyleAssetId: 6
          purchaseAmount: 5.962133916683182
        - owner: Client
          factFinderId: 0
          purchaseDate: 2000-01-23T04:56:07.000+00:00
          description: description
          marketValue: 1.4658129805029452
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          type: 5
          externalDestinationId: externalDestinationId
          lifestyleAssetId: 6
          purchaseAmount: 5.962133916683182
      properties:
        lifestyleAssets:
          items:
            $ref: '#/components/schemas/LifestyleAssetWithIdModel'
          type: array
      type: object
    LongTermCareInsurancePoliciesModel:
      example:
        longTermCareInsurancePolicies:
        - factFinderId: 1
          premium: 5.637376656633329
          insured: Client
          description: description
          insurancePolicyId: 5
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          premiumFrequency: 2
          benefitFrequency: 6
          externalDestinationId: externalDestinationId
          benefit: 0.8008281904610115
        - factFinderId: 1
          premium: 5.637376656633329
          insured: Client
          description: description
          insurancePolicyId: 5
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          premiumFrequency: 2
          benefitFrequency: 6
          externalDestinationId: externalDestinationId
          benefit: 0.8008281904610115
      properties:
        longTermCareInsurancePolicies:
          items:
            $ref: '#/components/schemas/LongTermCareInsurancePolicyWithIdModel'
          type: array
      type: object
    LongTermCareInsurancePolicyModel:
      example:
        factFinderId: 1
        premium: 5.962133916683182
        insured: Client
        description: description
        premiumFrequency: 5
        benefitFrequency: 6
        externalDestinationId: externalDestinationId
        benefit: 0.8008281904610115
      properties:
        benefit:
          format: double
          type: number
        benefitFrequency:
          format: int32
          type: integer
        description:
          maxLength: 255
          minLength: 0
          type: string
        externalDestinationId:
          maxLength: 64
          minLength: 0
          type: string
        factFinderId:
          format: int32
          type: integer
        insured:
          enum:
          - Client
          - CoClient
          type: string
        premium:
          format: double
          type: number
        premiumFrequency:
          format: int32
          type: integer
      required:
      - description
      - factFinderId
      type: object
    LongTermCareInsurancePolicyWithIdModel:
      example:
        factFinderId: 1
        premium: 5.637376656633329
        insured: Client
        description: description
        insurancePolicyId: 5
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        premiumFrequency: 2
        benefitFrequency: 6
        externalDestinationId: externalDestinationId
        benefit: 0.8008281904610115
      properties:
        benefit:
          format: double
          type: number
        benefitFrequency:
          format: int32
          type: integer
        description:
          type: string
        externalDestinationId:
          type: string
        factFinderId:
          format: int32
          type: integer
        insurancePolicyId:
          format: int32
          type: integer
        insured:
          enum:
          - Client
          - CoClient
          type: string
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        premium:
          format: double
          type: number
        premiumFrequency:
          format: int32
          type: integer
      type: object
    MajorPurchaseGoalModel:
      example:
        amount: 0.8008281904610115
        factFinderId: 6
        targetDate: 2000-01-23T04:56:07.000+00:00
        member: Client
        description: description
        externalDestinationId: externalDestinationId
        majorPurchaseGoalTypeId: 1
      properties:
        amount:
          format: double
          type: number
        description:
          maxLength: 255
          minLength: 0
          type: string
        externalDestinationId:
          maxLength: 64
          minLength: 0
          type: string
        factFinderId:
          format: int32
          type: integer
        majorPurchaseGoalTypeId:
          format: int32
          type: integer
        member:
          enum:
          - Client
          - CoClient
          - Joint
          type: string
        targetDate:
          format: date-time
          type: string
      required:
      - description
      - factFinderId
      type: object
    MajorPurchaseGoalTypeModel:
      example:
        description: description
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        majorPurchaseGoalTypeId: 0
      properties:
        description:
          type: string
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        majorPurchaseGoalTypeId:
          format: int32
          type: integer
      type: object
    MajorPurchaseGoalTypesModel:
      example:
        majorPurchaseGoalTypes:
        - description: description
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          majorPurchaseGoalTypeId: 0
        - description: description
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          majorPurchaseGoalTypeId: 0
      properties:
        majorPurchaseGoalTypes:
          items:
            $ref: '#/components/schemas/MajorPurchaseGoalTypeModel'
          type: array
      type: object
    MajorPurchaseGoalWithIdModel:
      example:
        amount: 0.8008281904610115
        factFinderId: 6
        majorPurchaseGoalId: 1
        targetDate: 2000-01-23T04:56:07.000+00:00
        member: Client
        description: description
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        externalDestinationId: externalDestinationId
        majorPurchaseGoalTypeId: 5
      properties:
        amount:
          format: double
          type: number
        description:
          type: string
        externalDestinationId:
          type: string
        factFinderId:
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        majorPurchaseGoalId:
          format: int32
          type: integer
        majorPurchaseGoalTypeId:
          format: int32
          type: integer
        member:
          enum:
          - Client
          - CoClient
          - Joint
          type: string
        targetDate:
          format: date-time
          type: string
      type: object
    MajorPurchaseGoalsModel:
      example:
        majorPurchaseGoals:
        - amount: 0.8008281904610115
          factFinderId: 6
          majorPurchaseGoalId: 1
          targetDate: 2000-01-23T04:56:07.000+00:00
          member: Client
          description: description
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          externalDestinationId: externalDestinationId
          majorPurchaseGoalTypeId: 5
        - amount: 0.8008281904610115
          factFinderId: 6
          majorPurchaseGoalId: 1
          targetDate: 2000-01-23T04:56:07.000+00:00
          member: Client
          description: description
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          externalDestinationId: externalDestinationId
          majorPurchaseGoalTypeId: 5
      properties:
        majorPurchaseGoals:
          items:
            $ref: '#/components/schemas/MajorPurchaseGoalWithIdModel'
          type: array
      type: object
    Object:
      type: object
    ObjectLink:
      example:
        rel: rel
        href: href
      properties:
        href:
          type: string
        rel:
          type: string
      type: object
    OwnerModel:
      example:
        owner: owner
        displayName: displayName
        ownerDependentId: 0
      properties:
        displayName:
          type: string
        owner:
          type: string
        ownerDependentId:
          format: int32
          type: integer
      type: object
    OwnersModel:
      example:
        owners:
        - owner: owner
          displayName: displayName
          ownerDependentId: 0
        - owner: owner
          displayName: displayName
          ownerDependentId: 0
      properties:
        owners:
          items:
            $ref: '#/components/schemas/OwnerModel'
          type: array
      type: object
    RealEstateAssetModel:
      example:
        owner: Client
        factFinderId: 0
        purchaseDate: 2000-01-23T04:56:07.000+00:00
        rentalIncome: 5.637376656633329
        description: description
        marketValue: 1.4658129805029452
        externalDestinationId: externalDestinationId
        frequency: 6
        purchaseAmount: 5.962133916683182
      properties:
        description:
          maxLength: 255
          minLength: 0
          type: string
        externalDestinationId:
          maxLength: 64
          minLength: 0
          type: string
        factFinderId:
          format: int32
          type: integer
        frequency:
          format: int32
          type: integer
        marketValue:
          format: double
          type: number
        owner:
          enum:
          - Client
          - CoClient
          - Joint
          type: string
        purchaseAmount:
          format: double
          type: number
        purchaseDate:
          format: date-time
          type: string
        rentalIncome:
          format: double
          type: number
      required:
      - description
      - factFinderId
      type: object
    RealEstateAssetWithIdModel:
      example:
        owner: Client
        factFinderId: 0
        purchaseDate: 2000-01-23T04:56:07.000+00:00
        rentalIncome: 2.3021358869347655
        description: description
        marketValue: 1.4658129805029452
        realEstateAssetId: 5
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        externalDestinationId: externalDestinationId
        frequency: 6
        purchaseAmount: 5.962133916683182
      properties:
        description:
          type: string
        externalDestinationId:
          type: string
        factFinderId:
          format: int32
          type: integer
        frequency:
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        marketValue:
          format: double
          type: number
        owner:
          enum:
          - Client
          - CoClient
          - Joint
          type: string
        purchaseAmount:
          format: double
          type: number
        purchaseDate:
          format: date-time
          type: string
        realEstateAssetId:
          format: int32
          type: integer
        rentalIncome:
          format: double
          type: number
      type: object
    RealEstateAssetsModel:
      example:
        realEstateAssets:
        - owner: Client
          factFinderId: 0
          purchaseDate: 2000-01-23T04:56:07.000+00:00
          rentalIncome: 2.3021358869347655
          description: description
          marketValue: 1.4658129805029452
          realEstateAssetId: 5
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          externalDestinationId: externalDestinationId
          frequency: 6
          purchaseAmount: 5.962133916683182
        - owner: Client
          factFinderId: 0
          purchaseDate: 2000-01-23T04:56:07.000+00:00
          rentalIncome: 2.3021358869347655
          description: description
          marketValue: 1.4658129805029452
          realEstateAssetId: 5
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          externalDestinationId: externalDestinationId
          frequency: 6
          purchaseAmount: 5.962133916683182
      properties:
        realEstateAssets:
          items:
            $ref: '#/components/schemas/RealEstateAssetWithIdModel'
          type: array
      type: object
    RelationshipTypeModel:
      example:
        relationshipType: Son
        id: 0
        isChildType: true
      properties:
        id:
          format: int32
          type: integer
        isChildType:
          type: boolean
        relationshipType:
          enum:
          - Son
          - Daughter
          - FosterSon
          - FosterDaughter
          - Grandson
          - Granddaughter
          - Nephew
          - Niece
          - MaleCousin
          - FemaleCousin
          - Father
          - Mother
          - Grandfather
          - Grandmother
          - Uncle
          - Aunt
          - Brother
          - Sister
          - SonInLaw
          - DaughterInLaw
          - MaleOther
          - FemaleOther
          type: string
      type: object
    RelationshipTypesModel:
      example:
        relationshipTypes:
        - relationshipType: Son
          id: 0
          isChildType: true
        - relationshipType: Son
          id: 0
          isChildType: true
      properties:
        relationshipTypes:
          items:
            $ref: '#/components/schemas/RelationshipTypeModel'
          type: array
      type: object
    RetirementExpenseModel:
      example:
        amount: 0.8008281904610115
        annualPeriod: 60
        endDate: 2000-01-23T04:56:07.000+00:00
        member: Client
        description: description
        externalDestinationId: externalDestinationId
        startDate: 2000-01-23T04:56:07.000+00:00
        frequency: 1
      properties:
        amount:
          format: double
          type: number
        annualPeriod:
          format: int32
          maximum: 99
          minimum: 1
          type: integer
        description:
          maxLength: 255
          minLength: 0
          type: string
        endDate:
          format: date-time
          type: string
        externalDestinationId:
          maxLength: 64
          minLength: 0
          type: string
        frequency:
          format: int32
          type: integer
        member:
          enum:
          - Client
          - CoClient
          - Joint
          type: string
        startDate:
          format: date-time
          type: string
      required:
      - description
      type: object
    RetirementExpenseWithIdModel:
      example:
        amount: 0.8008281904610115
        retirementGoalId: 5
        annualPeriod: 6
        endDate: 2000-01-23T04:56:07.000+00:00
        member: Client
        retirementExpenseId: 5
        description: description
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        externalDestinationId: externalDestinationId
        startDate: 2000-01-23T04:56:07.000+00:00
        frequency: 1
      properties:
        amount:
          format: double
          type: number
        annualPeriod:
          format: int32
          type: integer
        description:
          type: string
        endDate:
          format: date-time
          type: string
        externalDestinationId:
          type: string
        frequency:
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        member:
          enum:
          - Client
          - CoClient
          - Joint
          type: string
        retirementExpenseId:
          format: int32
          type: integer
        retirementGoalId:
          format: int32
          type: integer
        startDate:
          format: date-time
          type: string
      type: object
    RetirementExpensesModel:
      example:
        retirementExpenses:
        - amount: 0.8008281904610115
          retirementGoalId: 5
          annualPeriod: 6
          endDate: 2000-01-23T04:56:07.000+00:00
          member: Client
          retirementExpenseId: 5
          description: description
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          externalDestinationId: externalDestinationId
          startDate: 2000-01-23T04:56:07.000+00:00
          frequency: 1
        - amount: 0.8008281904610115
          retirementGoalId: 5
          annualPeriod: 6
          endDate: 2000-01-23T04:56:07.000+00:00
          member: Client
          retirementExpenseId: 5
          description: description
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          externalDestinationId: externalDestinationId
          startDate: 2000-01-23T04:56:07.000+00:00
          frequency: 1
      properties:
        retirementExpenses:
          items:
            $ref: '#/components/schemas/RetirementExpenseWithIdModel'
          type: array
      type: object
    RetirementGoalModel:
      example:
        factFinderId: 0
        head2RetirementDate: 2000-01-23T04:56:07.000+00:00
        externalDestinationId: externalDestinationId
        head1RetirementDate: 2000-01-23T04:56:07.000+00:00
      properties:
        externalDestinationId:
          maxLength: 64
          minLength: 0
          type: string
        factFinderId:
          format: int32
          type: integer
        head1RetirementDate:
          format: date-time
          type: string
        head2RetirementDate:
          format: date-time
          type: string
      required:
      - factFinderId
      type: object
    RetirementGoalWithIdModel:
      example:
        factFinderId: 0
        retirementGoalId: 6
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        head2RetirementDate: 2000-01-23T04:56:07.000+00:00
        externalDestinationId: externalDestinationId
        head1RetirementDate: 2000-01-23T04:56:07.000+00:00
      properties:
        externalDestinationId:
          type: string
        factFinderId:
          format: int32
          type: integer
        head1RetirementDate:
          format: date-time
          type: string
        head2RetirementDate:
          format: date-time
          type: string
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        retirementGoalId:
          format: int32
          type: integer
      type: object
    RetirementGoalsModel:
      example:
        retirementGoals:
        - factFinderId: 0
          retirementGoalId: 6
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          head2RetirementDate: 2000-01-23T04:56:07.000+00:00
          externalDestinationId: externalDestinationId
          head1RetirementDate: 2000-01-23T04:56:07.000+00:00
        - factFinderId: 0
          retirementGoalId: 6
          links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          head2RetirementDate: 2000-01-23T04:56:07.000+00:00
          externalDestinationId: externalDestinationId
          head1RetirementDate: 2000-01-23T04:56:07.000+00:00
      properties:
        retirementGoals:
          items:
            $ref: '#/components/schemas/RetirementGoalWithIdModel'
          type: array
      type: object
    SavingsStrategiesModel:
      example:
        savingsStrategies:
        - postTaxSavingsAmount: 5.637376656633329
          endDate: 2000-01-23T04:56:07.000+00:00
          mandatoryAmount: 5.962133916683182
          employerSavingsAmount: 6.027456183070403
          frequencyId: 1
          savingsStrategyId: 7
          accountId: 0
          preTaxSavingsAmount: 2.3021358869347655
          postTaxSavingsAmountType: Dollar
          externalDestinationId: externalDestinationId
          preTaxSavingsAmountType: Dollar
          mandatoryAmountType: Dollar
          startDate: 2000-01-23T04:56:07.000+00:00
          employerSavingsAmountType: Dollar
        - postTaxSavingsAmount: 5.637376656633329
          endDate: 2000-01-23T04:56:07.000+00:00
          mandatoryAmount: 5.962133916683182
          employerSavingsAmount: 6.027456183070403
          frequencyId: 1
          savingsStrategyId: 7
          accountId: 0
          preTaxSavingsAmount: 2.3021358869347655
          postTaxSavingsAmountType: Dollar
          externalDestinationId: externalDestinationId
          preTaxSavingsAmountType: Dollar
          mandatoryAmountType: Dollar
          startDate: 2000-01-23T04:56:07.000+00:00
          employerSavingsAmountType: Dollar
      properties:
        savingsStrategies:
          items:
            $ref: '#/components/schemas/SavingsStrategyWithIdModel'
          type: array
      type: object
    SavingsStrategyModel:
      example:
        employerSavingsAmount: 0.8008281904610115
        frequencyId: 6
        postTaxSavingsAmount: 5.962133916683182
        preTaxSavingsAmount: 5.637376656633329
        endDate: 2000-01-23T04:56:07.000+00:00
        postTaxSavingsAmountType: Dollar
        mandatoryAmount: 1.4658129805029452
        externalDestinationId: externalDestinationId
        preTaxSavingsAmountType: Dollar
        mandatoryAmountType: Dollar
        startDate: 2000-01-23T04:56:07.000+00:00
        employerSavingsAmountType: Dollar
      properties:
        employerSavingsAmount:
          format: double
          type: number
        employerSavingsAmountType:
          enum:
          - Dollar
          - Percent
          - Max
          type: string
        endDate:
          format: date-time
          type: string
        externalDestinationId:
          type: string
        frequencyId:
          format: int32
          type: integer
        mandatoryAmount:
          format: double
          type: number
        mandatoryAmountType:
          enum:
          - Dollar
          - Percent
          - Max
          type: string
        postTaxSavingsAmount:
          format: double
          type: number
        postTaxSavingsAmountType:
          enum:
          - Dollar
          - Percent
          - Max
          type: string
        preTaxSavingsAmount:
          format: double
          type: number
        preTaxSavingsAmountType:
          enum:
          - Dollar
          - Percent
          - Max
          type: string
        startDate:
          format: date-time
          type: string
      type: object
    SavingsStrategyWithIdModel:
      example:
        postTaxSavingsAmount: 5.637376656633329
        endDate: 2000-01-23T04:56:07.000+00:00
        mandatoryAmount: 5.962133916683182
        employerSavingsAmount: 6.027456183070403
        frequencyId: 1
        savingsStrategyId: 7
        accountId: 0
        preTaxSavingsAmount: 2.3021358869347655
        postTaxSavingsAmountType: Dollar
        externalDestinationId: externalDestinationId
        preTaxSavingsAmountType: Dollar
        mandatoryAmountType: Dollar
        startDate: 2000-01-23T04:56:07.000+00:00
        employerSavingsAmountType: Dollar
      properties:
        accountId:
          format: int32
          type: integer
        employerSavingsAmount:
          format: double
          type: number
        employerSavingsAmountType:
          enum:
          - Dollar
          - Percent
          - Max
          type: string
        endDate:
          format: date-time
          type: string
        externalDestinationId:
          type: string
        frequencyId:
          format: int32
          type: integer
        mandatoryAmount:
          format: double
          type: number
        mandatoryAmountType:
          enum:
          - Dollar
          - Percent
          - Max
          type: string
        postTaxSavingsAmount:
          format: double
          type: number
        postTaxSavingsAmountType:
          enum:
          - Dollar
          - Percent
          - Max
          type: string
        preTaxSavingsAmount:
          format: double
          type: number
        preTaxSavingsAmountType:
          enum:
          - Dollar
          - Percent
          - Max
          type: string
        savingsStrategyId:
          format: int32
          type: integer
        startDate:
          format: date-time
          type: string
      type: object
    SavingsTypeDomainObject:
      example:
        validAmountTypes:
        - Dollar
        - Dollar
        typeName: PostTaxSavings
      properties:
        typeName:
          enum:
          - PostTaxSavings
          - PreTaxSavings
          - EmployerSavings
          - MandatorySavings
          type: string
        validAmountTypes:
          items:
            enum:
            - Dollar
            - Percent
            - Max
            type: string
          type: array
      type: object
    ServiceInformationModel:
      example:
        serviceVersion: serviceVersion
        schemaVersion: 0
        name: name
        status: status
      properties:
        name:
          type: string
        schemaVersion:
          format: int32
          type: integer
        serviceVersion:
          type: string
        status:
          type: string
      type: object
    StateProvinceModel:
      example:
        links:
        - rel: rel
          href: href
        - rel: rel
          href: href
        stateProvinceName: stateProvinceName
        stateProvinceId: 0
      properties:
        links:
          items:
            $ref: '#/components/schemas/ObjectLink'
          type: array
        stateProvinceId:
          format: int32
          type: integer
        stateProvinceName:
          type: string
      type: object
    StatesProvincesModel:
      example:
        statesProvinces:
        - links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          stateProvinceName: stateProvinceName
          stateProvinceId: 0
        - links:
          - rel: rel
            href: href
          - rel: rel
            href: href
          stateProvinceName: stateProvinceName
          stateProvinceId: 0
      properties:
        statesProvinces:
          items:
            $ref: '#/components/schemas/StateProvinceModel'
          type: array
      type: object
x-original-swagger-version: "2.0"

