/**
 * SelectPdf HTML To PDF API
 * SelectPdf HTML To PDF Online REST API is a professional solution that lets you create PDF from web pages and raw HTML code in your applications. The API is easy to use and the integration takes only a few lines of code.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@selectpdf.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConversionParameters.h
 *
 * 
 */

#ifndef OAIConversionParameters_H
#define OAIConversionParameters_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConversionParameters : public OAIObject {
public:
    OAIConversionParameters();
    OAIConversionParameters(QString json);
    ~OAIConversionParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBaseUrl() const;
    void setBaseUrl(const QString &base_url);
    bool is_base_url_Set() const;
    bool is_base_url_Valid() const;

    QString getHtml() const;
    void setHtml(const QString &html);
    bool is_html_Set() const;
    bool is_html_Valid() const;

    QString getKey() const;
    void setKey(const QString &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    qint32 getMarginBottom() const;
    void setMarginBottom(const qint32 &margin_bottom);
    bool is_margin_bottom_Set() const;
    bool is_margin_bottom_Valid() const;

    qint32 getMarginLeft() const;
    void setMarginLeft(const qint32 &margin_left);
    bool is_margin_left_Set() const;
    bool is_margin_left_Valid() const;

    qint32 getMarginRight() const;
    void setMarginRight(const qint32 &margin_right);
    bool is_margin_right_Set() const;
    bool is_margin_right_Valid() const;

    qint32 getMarginTop() const;
    void setMarginTop(const qint32 &margin_top);
    bool is_margin_top_Set() const;
    bool is_margin_top_Valid() const;

    QString getPageOrientation() const;
    void setPageOrientation(const QString &page_orientation);
    bool is_page_orientation_Set() const;
    bool is_page_orientation_Valid() const;

    QString getPageSize() const;
    void setPageSize(const QString &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_base_url;
    bool m_base_url_isSet;
    bool m_base_url_isValid;

    QString m_html;
    bool m_html_isSet;
    bool m_html_isValid;

    QString m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    qint32 m_margin_bottom;
    bool m_margin_bottom_isSet;
    bool m_margin_bottom_isValid;

    qint32 m_margin_left;
    bool m_margin_left_isSet;
    bool m_margin_left_isValid;

    qint32 m_margin_right;
    bool m_margin_right_isSet;
    bool m_margin_right_isValid;

    qint32 m_margin_top;
    bool m_margin_top_isSet;
    bool m_margin_top_isValid;

    QString m_page_orientation;
    bool m_page_orientation_isSet;
    bool m_page_orientation_isValid;

    QString m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConversionParameters)

#endif // OAIConversionParameters_H
