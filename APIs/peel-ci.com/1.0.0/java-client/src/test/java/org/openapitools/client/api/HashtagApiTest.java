/*
 * Peel Tune-in API
 * The machine learning service APIs utilize hashtags from Twitter to find related, trending shows, related Twitter hashtags in real time and to generate direct tune-in URLs.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for HashtagApi
 */
@Disabled
public class HashtagApiTest {

    private final HashtagApi api = new HashtagApi();

    /**
     * Gets related hashtags for a show.
     *
     * Returns any official hashtag and any hashtags which were learned within the most recent time window for the show.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRelatedHashtagsTest() throws ApiException {
        String showID = null;
        String timeWindow = null;
        api.getRelatedHashtags(showID, timeWindow);
        // TODO: test validations
    }

    /**
     * Gets trending shows.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTrendingShowsTest() throws ApiException {
        String limit = null;
        String timeWindow = null;
        api.getTrendingShows(limit, timeWindow);
        // TODO: test validations
    }

    /**
     * Gets tunein URLs (links) from either a tweet, hashtags, @mentions, or show ID.
     *
     * Either use &lt;b&gt;tweet&lt;/b&gt;, &lt;b&gt;hashtags&lt;/b&gt;, or &lt;b&gt;showID&lt;/b&gt; as the parameter. The tunein URLs that match best are returned in order of best match.&lt;br/&gt;&lt;br/&gt;A &lt;b&gt;tweet&lt;/b&gt; in this context is shorthand for text from a social networking conversation, e.g., it could be from Facebook, Twitter, LinkedIn, etc., and be greater than 140 characters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTuneinLinksTest() throws ApiException {
        String tweet = null;
        String hashtags = null;
        String showID = null;
        api.getTuneinLinks(tweet, hashtags, showID);
        // TODO: test validations
    }

}
