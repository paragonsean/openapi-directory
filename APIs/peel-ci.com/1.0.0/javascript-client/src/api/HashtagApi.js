/**
 * Peel Tune-in API
 * The machine learning service APIs utilize hashtags from Twitter to find related, trending shows, related Twitter hashtags in real time and to generate direct tune-in URLs.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Hashtag service.
* @module api/HashtagApi
* @version 1.0.0
*/
export default class HashtagApi {

    /**
    * Constructs a new HashtagApi. 
    * @alias module:api/HashtagApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getRelatedHashtags operation.
     * @callback module:api/HashtagApi~getRelatedHashtagsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets related hashtags for a show.
     * Returns any official hashtag and any hashtags which were learned within the most recent time window for the show.
     * @param {String} showID Unique ID for a show
     * @param {Object} opts Optional parameters
     * @param {String} [timeWindow] Time window in seconds (default is 2 hours)
     * @param {module:api/HashtagApi~getRelatedHashtagsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getRelatedHashtags(showID, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'showID' is set
      if (showID === undefined || showID === null) {
        throw new Error("Missing the required parameter 'showID' when calling getRelatedHashtags");
      }

      let pathParams = {
      };
      let queryParams = {
        'showID': showID,
        'timeWindow': opts['timeWindow']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/hashtag/related', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getTrendingShows operation.
     * @callback module:api/HashtagApi~getTrendingShowsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets trending shows.
     * @param {Object} opts Optional parameters
     * @param {String} [limit] Number of trending shows (default is 20)
     * @param {String} [timeWindow] Time window in seconds (default is 2 hours)
     * @param {module:api/HashtagApi~getTrendingShowsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getTrendingShows(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit'],
        'timeWindow': opts['timeWindow']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/hashtag/trendingShows', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getTuneinLinks operation.
     * @callback module:api/HashtagApi~getTuneinLinksCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets tunein URLs (links) from either a tweet, hashtags, @mentions, or show ID.
     * Either use <b>tweet</b>, <b>hashtags</b>, or <b>showID</b> as the parameter. The tunein URLs that match best are returned in order of best match.<br/><br/>A <b>tweet</b> in this context is shorthand for text from a social networking conversation, e.g., it could be from Facebook, Twitter, LinkedIn, etc., and be greater than 140 characters.
     * @param {Object} opts Optional parameters
     * @param {String} [tweet] Text from a social networking conversation
     * @param {String} [hashtags] Comma separated list of hashtags and @mentions
     * @param {String} [showID] Unique ID for a show
     * @param {module:api/HashtagApi~getTuneinLinksCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getTuneinLinks(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'tweet': opts['tweet'],
        'hashtags': opts['hashtags'],
        'showID': opts['showID']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/hashtag/tuneinlinks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
