/**
 * TokenJay API services
 * Please see usage policies on tokenjay.app
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Action from './model/Action';
import AddRequestResponse from './model/AddRequestResponse';
import AgeUsdExchangeInfo from './model/AgeUsdExchangeInfo';
import AgeUsdInfo from './model/AgeUsdInfo';
import CheckResponse from './model/CheckResponse';
import CreatePaymentRequest from './model/CreatePaymentRequest';
import ErgoPayResponse from './model/ErgoPayResponse';
import FetchActionResponse from './model/FetchActionResponse';
import GenuineToken from './model/GenuineToken';
import MosaikApp from './model/MosaikApp';
import MosaikManifest from './model/MosaikManifest';
import NodePeer from './model/NodePeer';
import NotificationCheckResponse from './model/NotificationCheckResponse';
import PaymentRequestStateResponse from './model/PaymentRequestStateResponse';
import TokenPrice from './model/TokenPrice';
import ViewElement from './model/ViewElement';
import AgeUsdApi from './api/AgeUsdApi';
import BabelFeeControllerApi from './api/BabelFeeControllerApi';
import BabelFeeNewOfferControllerApi from './api/BabelFeeNewOfferControllerApi';
import BoxConsolidationControllerApi from './api/BoxConsolidationControllerApi';
import PaymentPortalApi from './api/PaymentPortalApi';
import PeerDetectionApi from './api/PeerDetectionApi';
import TokenBurnControllerApi from './api/TokenBurnControllerApi';
import TokenPricesApi from './api/TokenPricesApi';
import TokenVerificationApi from './api/TokenVerificationApi';


/**
* Please see usage policies on tokenjay.app.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var TokenJayApiServices = require('index'); // See note below*.
* var xxxSvc = new TokenJayApiServices.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new TokenJayApiServices.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new TokenJayApiServices.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new TokenJayApiServices.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Action model constructor.
     * @property {module:model/Action}
     */
    Action,

    /**
     * The AddRequestResponse model constructor.
     * @property {module:model/AddRequestResponse}
     */
    AddRequestResponse,

    /**
     * The AgeUsdExchangeInfo model constructor.
     * @property {module:model/AgeUsdExchangeInfo}
     */
    AgeUsdExchangeInfo,

    /**
     * The AgeUsdInfo model constructor.
     * @property {module:model/AgeUsdInfo}
     */
    AgeUsdInfo,

    /**
     * The CheckResponse model constructor.
     * @property {module:model/CheckResponse}
     */
    CheckResponse,

    /**
     * The CreatePaymentRequest model constructor.
     * @property {module:model/CreatePaymentRequest}
     */
    CreatePaymentRequest,

    /**
     * The ErgoPayResponse model constructor.
     * @property {module:model/ErgoPayResponse}
     */
    ErgoPayResponse,

    /**
     * The FetchActionResponse model constructor.
     * @property {module:model/FetchActionResponse}
     */
    FetchActionResponse,

    /**
     * The GenuineToken model constructor.
     * @property {module:model/GenuineToken}
     */
    GenuineToken,

    /**
     * The MosaikApp model constructor.
     * @property {module:model/MosaikApp}
     */
    MosaikApp,

    /**
     * The MosaikManifest model constructor.
     * @property {module:model/MosaikManifest}
     */
    MosaikManifest,

    /**
     * The NodePeer model constructor.
     * @property {module:model/NodePeer}
     */
    NodePeer,

    /**
     * The NotificationCheckResponse model constructor.
     * @property {module:model/NotificationCheckResponse}
     */
    NotificationCheckResponse,

    /**
     * The PaymentRequestStateResponse model constructor.
     * @property {module:model/PaymentRequestStateResponse}
     */
    PaymentRequestStateResponse,

    /**
     * The TokenPrice model constructor.
     * @property {module:model/TokenPrice}
     */
    TokenPrice,

    /**
     * The ViewElement model constructor.
     * @property {module:model/ViewElement}
     */
    ViewElement,

    /**
    * The AgeUsdApi service constructor.
    * @property {module:api/AgeUsdApi}
    */
    AgeUsdApi,

    /**
    * The BabelFeeControllerApi service constructor.
    * @property {module:api/BabelFeeControllerApi}
    */
    BabelFeeControllerApi,

    /**
    * The BabelFeeNewOfferControllerApi service constructor.
    * @property {module:api/BabelFeeNewOfferControllerApi}
    */
    BabelFeeNewOfferControllerApi,

    /**
    * The BoxConsolidationControllerApi service constructor.
    * @property {module:api/BoxConsolidationControllerApi}
    */
    BoxConsolidationControllerApi,

    /**
    * The PaymentPortalApi service constructor.
    * @property {module:api/PaymentPortalApi}
    */
    PaymentPortalApi,

    /**
    * The PeerDetectionApi service constructor.
    * @property {module:api/PeerDetectionApi}
    */
    PeerDetectionApi,

    /**
    * The TokenBurnControllerApi service constructor.
    * @property {module:api/TokenBurnControllerApi}
    */
    TokenBurnControllerApi,

    /**
    * The TokenPricesApi service constructor.
    * @property {module:api/TokenPricesApi}
    */
    TokenPricesApi,

    /**
    * The TokenVerificationApi service constructor.
    * @property {module:api/TokenVerificationApi}
    */
    TokenVerificationApi
};
