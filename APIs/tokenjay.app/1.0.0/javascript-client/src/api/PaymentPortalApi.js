/**
 * TokenJay API services
 * Please see usage policies on tokenjay.app
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AddRequestResponse from '../model/AddRequestResponse';
import CreatePaymentRequest from '../model/CreatePaymentRequest';
import PaymentRequestStateResponse from '../model/PaymentRequestStateResponse';

/**
* PaymentPortal service.
* @module api/PaymentPortalApi
* @version 1.0.0
*/
export default class PaymentPortalApi {

    /**
    * Constructs a new PaymentPortalApi. 
    * @alias module:api/PaymentPortalApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the addPaymentRequest operation.
     * @callback module:api/PaymentPortalApi~addPaymentRequestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AddRequestResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new payment request. Will return request id to check for transaction state and ergopay url to show the user as QR code
     * @param {module:model/CreatePaymentRequest} createPaymentRequest 
     * @param {module:api/PaymentPortalApi~addPaymentRequestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AddRequestResponse}
     */
    addPaymentRequest(createPaymentRequest, callback) {
      let postBody = createPaymentRequest;
      // verify the required parameter 'createPaymentRequest' is set
      if (createPaymentRequest === undefined || createPaymentRequest === null) {
        throw new Error("Missing the required parameter 'createPaymentRequest' when calling addPaymentRequest");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = AddRequestResponse;
      return this.apiClient.callApi(
        '/payment/addrequest', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPaymentState operation.
     * @callback module:api/PaymentPortalApi~getPaymentStateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaymentRequestStateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the state of a payment request. Please note that payment requests are purged after some time, so persist the state at your side when needed
     * @param {String} requestId 
     * @param {module:api/PaymentPortalApi~getPaymentStateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaymentRequestStateResponse}
     */
    getPaymentState(requestId, callback) {
      let postBody = null;
      // verify the required parameter 'requestId' is set
      if (requestId === undefined || requestId === null) {
        throw new Error("Missing the required parameter 'requestId' when calling getPaymentState");
      }

      let pathParams = {
        'requestId': requestId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = PaymentRequestStateResponse;
      return this.apiClient.callApi(
        '/payment/state/{requestId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
