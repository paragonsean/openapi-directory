/**
 * TokenJay API services
 * Please see usage policies on tokenjay.app
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErgoPayResponse from '../model/ErgoPayResponse';
import MosaikApp from '../model/MosaikApp';

/**
* BoxConsolidationController service.
* @module api/BoxConsolidationControllerApi
* @version 1.0.0
*/
export default class BoxConsolidationControllerApi {

    /**
    * Constructs a new BoxConsolidationControllerApi. 
    * @alias module:api/BoxConsolidationControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the epConsolidate operation.
     * @callback module:api/BoxConsolidationControllerApi~epConsolidateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ErgoPayResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} p2pkaddress 
     * @param {module:api/BoxConsolidationControllerApi~epConsolidateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ErgoPayResponse}
     */
    epConsolidate(p2pkaddress, callback) {
      let postBody = null;
      // verify the required parameter 'p2pkaddress' is set
      if (p2pkaddress === undefined || p2pkaddress === null) {
        throw new Error("Missing the required parameter 'p2pkaddress' when calling epConsolidate");
      }

      let pathParams = {
        'p2pkaddress': p2pkaddress
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = ErgoPayResponse;
      return this.apiClient.callApi(
        '/mosaik/boxconsolidation/consolidate/{p2pkaddress}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mainApp1 operation.
     * @callback module:api/BoxConsolidationControllerApi~mainApp1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/MosaikApp} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/BoxConsolidationControllerApi~mainApp1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MosaikApp}
     */
    mainApp1(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = MosaikApp;
      return this.apiClient.callApi(
        '/mosaik/boxconsolidation/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
