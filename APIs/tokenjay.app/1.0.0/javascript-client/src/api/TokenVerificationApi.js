/**
 * TokenJay API services
 * Please see usage policies on tokenjay.app
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CheckResponse from '../model/CheckResponse';
import GenuineToken from '../model/GenuineToken';

/**
* TokenVerification service.
* @module api/TokenVerificationApi
* @version 1.0.0
*/
export default class TokenVerificationApi {

    /**
    * Constructs a new TokenVerificationApi. 
    * @alias module:api/TokenVerificationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the checkToken operation.
     * @callback module:api/TokenVerificationApi~checkTokenCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CheckResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Check a token verification
     * @param {String} tokenId 
     * @param {String} tokenName 
     * @param {module:api/TokenVerificationApi~checkTokenCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CheckResponse}
     */
    checkToken(tokenId, tokenName, callback) {
      let postBody = null;
      // verify the required parameter 'tokenId' is set
      if (tokenId === undefined || tokenId === null) {
        throw new Error("Missing the required parameter 'tokenId' when calling checkToken");
      }
      // verify the required parameter 'tokenName' is set
      if (tokenName === undefined || tokenName === null) {
        throw new Error("Missing the required parameter 'tokenName' when calling checkToken");
      }

      let pathParams = {
        'tokenId': tokenId,
        'tokenName': tokenName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = CheckResponse;
      return this.apiClient.callApi(
        '/tokens/check/{tokenId}/{tokenName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listBlocked operation.
     * @callback module:api/TokenVerificationApi~listBlockedCallback
     * @param {String} error Error message, if any.
     * @param {Array.<String>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all blocked tokens
     * @param {module:api/TokenVerificationApi~listBlockedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<String>}
     */
    listBlocked(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = ['String'];
      return this.apiClient.callApi(
        '/tokens/listBlocked', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listGenuine operation.
     * @callback module:api/TokenVerificationApi~listGenuineCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GenuineToken>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all genuine tokens known
     * @param {module:api/TokenVerificationApi~listGenuineCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GenuineToken>}
     */
    listGenuine(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [GenuineToken];
      return this.apiClient.callApi(
        '/tokens/listGenuine', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
