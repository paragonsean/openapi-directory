/**
 * TokenJay API services
 * Please see usage policies on tokenjay.app
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import NodePeer from '../model/NodePeer';

/**
* PeerDetection service.
* @module api/PeerDetectionApi
* @version 1.0.0
*/
export default class PeerDetectionApi {

    /**
    * Constructs a new PeerDetectionApi. 
    * @alias module:api/PeerDetectionApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getPeersList operation.
     * @callback module:api/PeerDetectionApi~getPeersListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/NodePeer>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists known peers sorted by block height
     * @param {Object} opts Optional parameters
     * @param {Boolean} [unreachable = false)] Set to true to show unreachable peers in the list
     * @param {Boolean} [closedApi = false)] Set to true to show peers not open to be connected
     * @param {Number} [limit = 50)] 
     * @param {module:api/PeerDetectionApi~getPeersListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/NodePeer>}
     */
    getPeersList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'unreachable': opts['unreachable'],
        'closedApi': opts['closedApi'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [NodePeer];
      return this.apiClient.callApi(
        '/peers/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
