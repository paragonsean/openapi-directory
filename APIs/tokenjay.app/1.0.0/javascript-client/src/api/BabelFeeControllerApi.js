/**
 * TokenJay API services
 * Please see usage policies on tokenjay.app
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErgoPayResponse from '../model/ErgoPayResponse';
import MosaikApp from '../model/MosaikApp';
import NotificationCheckResponse from '../model/NotificationCheckResponse';

/**
* BabelFeeController service.
* @module api/BabelFeeControllerApi
* @version 1.0.0
*/
export default class BabelFeeControllerApi {

    /**
    * Constructs a new BabelFeeControllerApi. 
    * @alias module:api/BabelFeeControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the checkForNotifications operation.
     * @callback module:api/BabelFeeControllerApi~checkForNotificationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NotificationCheckResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/BabelFeeControllerApi~checkForNotificationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NotificationCheckResponse}
     */
    checkForNotifications(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = NotificationCheckResponse;
      return this.apiClient.callApi(
        '/mosaik/babelfee/notificationcheck', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ergoPayCreateBabelBox1 operation.
     * @callback module:api/BabelFeeControllerApi~ergoPayCreateBabelBox1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/ErgoPayResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} boxId 
     * @param {module:api/BabelFeeControllerApi~ergoPayCreateBabelBox1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ErgoPayResponse}
     */
    ergoPayCreateBabelBox1(boxId, callback) {
      let postBody = null;
      // verify the required parameter 'boxId' is set
      if (boxId === undefined || boxId === null) {
        throw new Error("Missing the required parameter 'boxId' when calling ergoPayCreateBabelBox1");
      }

      let pathParams = {
        'boxId': boxId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = ErgoPayResponse;
      return this.apiClient.callApi(
        '/cancelbabel/{boxId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getBabelFeeOverview operation.
     * @callback module:api/BabelFeeControllerApi~getBabelFeeOverviewCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MosaikApp} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/BabelFeeControllerApi~getBabelFeeOverviewCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MosaikApp}
     */
    getBabelFeeOverview(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = MosaikApp;
      return this.apiClient.callApi(
        '/mosaik/babelfee/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
