/**
 * TokenJay API services
 * Please see usage policies on tokenjay.app
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Action from './Action';
import MosaikManifest from './MosaikManifest';
import ViewElement from './ViewElement';

/**
 * The MosaikApp model module.
 * @module model/MosaikApp
 * @version 1.0.0
 */
class MosaikApp {
    /**
     * Constructs a new <code>MosaikApp</code>.
     * @alias module:model/MosaikApp
     */
    constructor() { 
        
        MosaikApp.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MosaikApp</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MosaikApp} obj Optional instance to populate.
     * @return {module:model/MosaikApp} The populated <code>MosaikApp</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MosaikApp();

            if (data.hasOwnProperty('actions')) {
                obj['actions'] = ApiClient.convertToType(data['actions'], [Action]);
            }
            if (data.hasOwnProperty('manifest')) {
                obj['manifest'] = MosaikManifest.constructFromObject(data['manifest']);
            }
            if (data.hasOwnProperty('view')) {
                obj['view'] = ViewElement.constructFromObject(data['view']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MosaikApp</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MosaikApp</code>.
     */
    static validateJSON(data) {
        if (data['actions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['actions'])) {
                throw new Error("Expected the field `actions` to be an array in the JSON data but got " + data['actions']);
            }
            // validate the optional field `actions` (array)
            for (const item of data['actions']) {
                Action.validateJSON(item);
            };
        }
        // validate the optional field `manifest`
        if (data['manifest']) { // data not null
          MosaikManifest.validateJSON(data['manifest']);
        }
        // validate the optional field `view`
        if (data['view']) { // data not null
          ViewElement.validateJSON(data['view']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/Action>} actions
 */
MosaikApp.prototype['actions'] = undefined;

/**
 * @member {module:model/MosaikManifest} manifest
 */
MosaikApp.prototype['manifest'] = undefined;

/**
 * @member {module:model/ViewElement} view
 */
MosaikApp.prototype['view'] = undefined;






export default MosaikApp;

