/**
 * TokenJay API services
 * Please see usage policies on tokenjay.app
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GenuineToken from './GenuineToken';

/**
 * The CheckResponse model module.
 * @module model/CheckResponse
 * @version 1.0.0
 */
class CheckResponse {
    /**
     * Constructs a new <code>CheckResponse</code>.
     * @alias module:model/CheckResponse
     * @param genuine {Number} Flag with 0 unknown, 1 verified, 2 suspicious, 3 blocked (see EIP-21)
     */
    constructor(genuine) { 
        
        CheckResponse.initialize(this, genuine);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, genuine) { 
        obj['genuine'] = genuine;
    }

    /**
     * Constructs a <code>CheckResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CheckResponse} obj Optional instance to populate.
     * @return {module:model/CheckResponse} The populated <code>CheckResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CheckResponse();

            if (data.hasOwnProperty('genuine')) {
                obj['genuine'] = ApiClient.convertToType(data['genuine'], 'Number');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = GenuineToken.constructFromObject(data['token']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CheckResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CheckResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CheckResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `token`
        if (data['token']) { // data not null
          GenuineToken.validateJSON(data['token']);
        }

        return true;
    }


}

CheckResponse.RequiredProperties = ["genuine"];

/**
 * Flag with 0 unknown, 1 verified, 2 suspicious, 3 blocked (see EIP-21)
 * @member {Number} genuine
 */
CheckResponse.prototype['genuine'] = undefined;

/**
 * @member {module:model/GenuineToken} token
 */
CheckResponse.prototype['token'] = undefined;






export default CheckResponse;

