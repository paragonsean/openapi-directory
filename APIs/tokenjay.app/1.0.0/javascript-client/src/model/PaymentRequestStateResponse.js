/**
 * TokenJay API services
 * Please see usage policies on tokenjay.app
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PaymentRequestStateResponse model module.
 * @module model/PaymentRequestStateResponse
 * @version 1.0.0
 */
class PaymentRequestStateResponse {
    /**
     * Constructs a new <code>PaymentRequestStateResponse</code>.
     * @alias module:model/PaymentRequestStateResponse
     * @param paymentRequestState {module:model/PaymentRequestStateResponse.PaymentRequestStateEnum} 
     * @param requestId {String} 
     */
    constructor(paymentRequestState, requestId) { 
        
        PaymentRequestStateResponse.initialize(this, paymentRequestState, requestId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, paymentRequestState, requestId) { 
        obj['paymentRequestState'] = paymentRequestState;
        obj['requestId'] = requestId;
    }

    /**
     * Constructs a <code>PaymentRequestStateResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentRequestStateResponse} obj Optional instance to populate.
     * @return {module:model/PaymentRequestStateResponse} The populated <code>PaymentRequestStateResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentRequestStateResponse();

            if (data.hasOwnProperty('paymentRequestState')) {
                obj['paymentRequestState'] = ApiClient.convertToType(data['paymentRequestState'], 'String');
            }
            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
            if (data.hasOwnProperty('txId')) {
                obj['txId'] = ApiClient.convertToType(data['txId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PaymentRequestStateResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PaymentRequestStateResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PaymentRequestStateResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['paymentRequestState'] && !(typeof data['paymentRequestState'] === 'string' || data['paymentRequestState'] instanceof String)) {
            throw new Error("Expected the field `paymentRequestState` to be a primitive type in the JSON string but got " + data['paymentRequestState']);
        }
        // ensure the json data is a string
        if (data['requestId'] && !(typeof data['requestId'] === 'string' || data['requestId'] instanceof String)) {
            throw new Error("Expected the field `requestId` to be a primitive type in the JSON string but got " + data['requestId']);
        }
        // ensure the json data is a string
        if (data['txId'] && !(typeof data['txId'] === 'string' || data['txId'] instanceof String)) {
            throw new Error("Expected the field `txId` to be a primitive type in the JSON string but got " + data['txId']);
        }

        return true;
    }


}

PaymentRequestStateResponse.RequiredProperties = ["paymentRequestState", "requestId"];

/**
 * @member {module:model/PaymentRequestStateResponse.PaymentRequestStateEnum} paymentRequestState
 */
PaymentRequestStateResponse.prototype['paymentRequestState'] = undefined;

/**
 * @member {String} requestId
 */
PaymentRequestStateResponse.prototype['requestId'] = undefined;

/**
 * @member {String} txId
 */
PaymentRequestStateResponse.prototype['txId'] = undefined;





/**
 * Allowed values for the <code>paymentRequestState</code> property.
 * @enum {String}
 * @readonly
 */
PaymentRequestStateResponse['PaymentRequestStateEnum'] = {

    /**
     * value: "CREATED"
     * @const
     */
    "CREATED": "CREATED",

    /**
     * value: "WAITING"
     * @const
     */
    "WAITING": "WAITING",

    /**
     * value: "EXECUTED"
     * @const
     */
    "EXECUTED": "EXECUTED",

    /**
     * value: "INVALID"
     * @const
     */
    "INVALID": "INVALID"
};



export default PaymentRequestStateResponse;

