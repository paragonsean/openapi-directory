/**
 * TokenJay API services
 * Please see usage policies on tokenjay.app
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AgeUsdExchangeInfo model module.
 * @module model/AgeUsdExchangeInfo
 * @version 1.0.0
 */
class AgeUsdExchangeInfo {
    /**
     * Constructs a new <code>AgeUsdExchangeInfo</code>.
     * @alias module:model/AgeUsdExchangeInfo
     * @param bankFeeAmount {Number} 
     * @param bankFeeDescription {String} 
     * @param ergAmount {Number} 
     * @param ergAmountDescription {String} 
     * @param exchangeRate {Number} 
     * @param jayFeeAmount {Number} 
     * @param jayFeeDescription {String} 
     * @param totalAmount {Number} 
     */
    constructor(bankFeeAmount, bankFeeDescription, ergAmount, ergAmountDescription, exchangeRate, jayFeeAmount, jayFeeDescription, totalAmount) { 
        
        AgeUsdExchangeInfo.initialize(this, bankFeeAmount, bankFeeDescription, ergAmount, ergAmountDescription, exchangeRate, jayFeeAmount, jayFeeDescription, totalAmount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, bankFeeAmount, bankFeeDescription, ergAmount, ergAmountDescription, exchangeRate, jayFeeAmount, jayFeeDescription, totalAmount) { 
        obj['bankFeeAmount'] = bankFeeAmount;
        obj['bankFeeDescription'] = bankFeeDescription;
        obj['ergAmount'] = ergAmount;
        obj['ergAmountDescription'] = ergAmountDescription;
        obj['exchangeRate'] = exchangeRate;
        obj['jayFeeAmount'] = jayFeeAmount;
        obj['jayFeeDescription'] = jayFeeDescription;
        obj['totalAmount'] = totalAmount;
    }

    /**
     * Constructs a <code>AgeUsdExchangeInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AgeUsdExchangeInfo} obj Optional instance to populate.
     * @return {module:model/AgeUsdExchangeInfo} The populated <code>AgeUsdExchangeInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AgeUsdExchangeInfo();

            if (data.hasOwnProperty('bankFeeAmount')) {
                obj['bankFeeAmount'] = ApiClient.convertToType(data['bankFeeAmount'], 'Number');
            }
            if (data.hasOwnProperty('bankFeeDescription')) {
                obj['bankFeeDescription'] = ApiClient.convertToType(data['bankFeeDescription'], 'String');
            }
            if (data.hasOwnProperty('ergAmount')) {
                obj['ergAmount'] = ApiClient.convertToType(data['ergAmount'], 'Number');
            }
            if (data.hasOwnProperty('ergAmountDescription')) {
                obj['ergAmountDescription'] = ApiClient.convertToType(data['ergAmountDescription'], 'String');
            }
            if (data.hasOwnProperty('exchangeRate')) {
                obj['exchangeRate'] = ApiClient.convertToType(data['exchangeRate'], 'Number');
            }
            if (data.hasOwnProperty('jayFeeAmount')) {
                obj['jayFeeAmount'] = ApiClient.convertToType(data['jayFeeAmount'], 'Number');
            }
            if (data.hasOwnProperty('jayFeeDescription')) {
                obj['jayFeeDescription'] = ApiClient.convertToType(data['jayFeeDescription'], 'String');
            }
            if (data.hasOwnProperty('totalAmount')) {
                obj['totalAmount'] = ApiClient.convertToType(data['totalAmount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AgeUsdExchangeInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AgeUsdExchangeInfo</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AgeUsdExchangeInfo.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['bankFeeDescription'] && !(typeof data['bankFeeDescription'] === 'string' || data['bankFeeDescription'] instanceof String)) {
            throw new Error("Expected the field `bankFeeDescription` to be a primitive type in the JSON string but got " + data['bankFeeDescription']);
        }
        // ensure the json data is a string
        if (data['ergAmountDescription'] && !(typeof data['ergAmountDescription'] === 'string' || data['ergAmountDescription'] instanceof String)) {
            throw new Error("Expected the field `ergAmountDescription` to be a primitive type in the JSON string but got " + data['ergAmountDescription']);
        }
        // ensure the json data is a string
        if (data['jayFeeDescription'] && !(typeof data['jayFeeDescription'] === 'string' || data['jayFeeDescription'] instanceof String)) {
            throw new Error("Expected the field `jayFeeDescription` to be a primitive type in the JSON string but got " + data['jayFeeDescription']);
        }

        return true;
    }


}

AgeUsdExchangeInfo.RequiredProperties = ["bankFeeAmount", "bankFeeDescription", "ergAmount", "ergAmountDescription", "exchangeRate", "jayFeeAmount", "jayFeeDescription", "totalAmount"];

/**
 * @member {Number} bankFeeAmount
 */
AgeUsdExchangeInfo.prototype['bankFeeAmount'] = undefined;

/**
 * @member {String} bankFeeDescription
 */
AgeUsdExchangeInfo.prototype['bankFeeDescription'] = undefined;

/**
 * @member {Number} ergAmount
 */
AgeUsdExchangeInfo.prototype['ergAmount'] = undefined;

/**
 * @member {String} ergAmountDescription
 */
AgeUsdExchangeInfo.prototype['ergAmountDescription'] = undefined;

/**
 * @member {Number} exchangeRate
 */
AgeUsdExchangeInfo.prototype['exchangeRate'] = undefined;

/**
 * @member {Number} jayFeeAmount
 */
AgeUsdExchangeInfo.prototype['jayFeeAmount'] = undefined;

/**
 * @member {String} jayFeeDescription
 */
AgeUsdExchangeInfo.prototype['jayFeeDescription'] = undefined;

/**
 * @member {Number} totalAmount
 */
AgeUsdExchangeInfo.prototype['totalAmount'] = undefined;






export default AgeUsdExchangeInfo;

