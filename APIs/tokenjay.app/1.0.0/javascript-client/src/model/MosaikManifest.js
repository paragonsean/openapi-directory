/**
 * TokenJay API services
 * Please see usage policies on tokenjay.app
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MosaikManifest model module.
 * @module model/MosaikManifest
 * @version 1.0.0
 */
class MosaikManifest {
    /**
     * Constructs a new <code>MosaikManifest</code>.
     * @alias module:model/MosaikManifest
     */
    constructor() { 
        
        MosaikManifest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MosaikManifest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MosaikManifest} obj Optional instance to populate.
     * @return {module:model/MosaikManifest} The populated <code>MosaikManifest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MosaikManifest();

            if (data.hasOwnProperty('appDescription')) {
                obj['appDescription'] = ApiClient.convertToType(data['appDescription'], 'String');
            }
            if (data.hasOwnProperty('appName')) {
                obj['appName'] = ApiClient.convertToType(data['appName'], 'String');
            }
            if (data.hasOwnProperty('appVersion')) {
                obj['appVersion'] = ApiClient.convertToType(data['appVersion'], 'Number');
            }
            if (data.hasOwnProperty('cacheLifetime')) {
                obj['cacheLifetime'] = ApiClient.convertToType(data['cacheLifetime'], 'Number');
            }
            if (data.hasOwnProperty('errorReportUrl')) {
                obj['errorReportUrl'] = ApiClient.convertToType(data['errorReportUrl'], 'String');
            }
            if (data.hasOwnProperty('iconUrl')) {
                obj['iconUrl'] = ApiClient.convertToType(data['iconUrl'], 'String');
            }
            if (data.hasOwnProperty('notificationCheckUrl')) {
                obj['notificationCheckUrl'] = ApiClient.convertToType(data['notificationCheckUrl'], 'String');
            }
            if (data.hasOwnProperty('onAppLoadedAction')) {
                obj['onAppLoadedAction'] = ApiClient.convertToType(data['onAppLoadedAction'], 'String');
            }
            if (data.hasOwnProperty('onResizeAction')) {
                obj['onResizeAction'] = ApiClient.convertToType(data['onResizeAction'], 'String');
            }
            if (data.hasOwnProperty('targetCanvasDimension')) {
                obj['targetCanvasDimension'] = ApiClient.convertToType(data['targetCanvasDimension'], 'String');
            }
            if (data.hasOwnProperty('targetMosaikVersion')) {
                obj['targetMosaikVersion'] = ApiClient.convertToType(data['targetMosaikVersion'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MosaikManifest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MosaikManifest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['appDescription'] && !(typeof data['appDescription'] === 'string' || data['appDescription'] instanceof String)) {
            throw new Error("Expected the field `appDescription` to be a primitive type in the JSON string but got " + data['appDescription']);
        }
        // ensure the json data is a string
        if (data['appName'] && !(typeof data['appName'] === 'string' || data['appName'] instanceof String)) {
            throw new Error("Expected the field `appName` to be a primitive type in the JSON string but got " + data['appName']);
        }
        // ensure the json data is a string
        if (data['errorReportUrl'] && !(typeof data['errorReportUrl'] === 'string' || data['errorReportUrl'] instanceof String)) {
            throw new Error("Expected the field `errorReportUrl` to be a primitive type in the JSON string but got " + data['errorReportUrl']);
        }
        // ensure the json data is a string
        if (data['iconUrl'] && !(typeof data['iconUrl'] === 'string' || data['iconUrl'] instanceof String)) {
            throw new Error("Expected the field `iconUrl` to be a primitive type in the JSON string but got " + data['iconUrl']);
        }
        // ensure the json data is a string
        if (data['notificationCheckUrl'] && !(typeof data['notificationCheckUrl'] === 'string' || data['notificationCheckUrl'] instanceof String)) {
            throw new Error("Expected the field `notificationCheckUrl` to be a primitive type in the JSON string but got " + data['notificationCheckUrl']);
        }
        // ensure the json data is a string
        if (data['onAppLoadedAction'] && !(typeof data['onAppLoadedAction'] === 'string' || data['onAppLoadedAction'] instanceof String)) {
            throw new Error("Expected the field `onAppLoadedAction` to be a primitive type in the JSON string but got " + data['onAppLoadedAction']);
        }
        // ensure the json data is a string
        if (data['onResizeAction'] && !(typeof data['onResizeAction'] === 'string' || data['onResizeAction'] instanceof String)) {
            throw new Error("Expected the field `onResizeAction` to be a primitive type in the JSON string but got " + data['onResizeAction']);
        }
        // ensure the json data is a string
        if (data['targetCanvasDimension'] && !(typeof data['targetCanvasDimension'] === 'string' || data['targetCanvasDimension'] instanceof String)) {
            throw new Error("Expected the field `targetCanvasDimension` to be a primitive type in the JSON string but got " + data['targetCanvasDimension']);
        }

        return true;
    }


}



/**
 * @member {String} appDescription
 */
MosaikManifest.prototype['appDescription'] = undefined;

/**
 * @member {String} appName
 */
MosaikManifest.prototype['appName'] = undefined;

/**
 * @member {Number} appVersion
 */
MosaikManifest.prototype['appVersion'] = undefined;

/**
 * @member {Number} cacheLifetime
 */
MosaikManifest.prototype['cacheLifetime'] = undefined;

/**
 * @member {String} errorReportUrl
 */
MosaikManifest.prototype['errorReportUrl'] = undefined;

/**
 * @member {String} iconUrl
 */
MosaikManifest.prototype['iconUrl'] = undefined;

/**
 * @member {String} notificationCheckUrl
 */
MosaikManifest.prototype['notificationCheckUrl'] = undefined;

/**
 * @member {String} onAppLoadedAction
 */
MosaikManifest.prototype['onAppLoadedAction'] = undefined;

/**
 * @member {String} onResizeAction
 */
MosaikManifest.prototype['onResizeAction'] = undefined;

/**
 * @member {module:model/MosaikManifest.TargetCanvasDimensionEnum} targetCanvasDimension
 */
MosaikManifest.prototype['targetCanvasDimension'] = undefined;

/**
 * @member {Number} targetMosaikVersion
 */
MosaikManifest.prototype['targetMosaikVersion'] = undefined;





/**
 * Allowed values for the <code>targetCanvasDimension</code> property.
 * @enum {String}
 * @readonly
 */
MosaikManifest['TargetCanvasDimensionEnum'] = {

    /**
     * value: "COMPACT_WIDTH"
     * @const
     */
    "COMPACT_WIDTH": "COMPACT_WIDTH",

    /**
     * value: "MEDIUM_WIDTH"
     * @const
     */
    "MEDIUM_WIDTH": "MEDIUM_WIDTH",

    /**
     * value: "FULL_WIDTH"
     * @const
     */
    "FULL_WIDTH": "FULL_WIDTH"
};



export default MosaikManifest;

