/**
 * TokenJay API services
 * Please see usage policies on tokenjay.app
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreatePaymentRequest model module.
 * @module model/CreatePaymentRequest
 * @version 1.0.0
 */
class CreatePaymentRequest {
    /**
     * Constructs a new <code>CreatePaymentRequest</code>.
     * @alias module:model/CreatePaymentRequest
     * @param nanoErg {Number} 
     * @param receiverAddress {String} 
     */
    constructor(nanoErg, receiverAddress) { 
        
        CreatePaymentRequest.initialize(this, nanoErg, receiverAddress);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, nanoErg, receiverAddress) { 
        obj['nanoErg'] = nanoErg;
        obj['receiverAddress'] = receiverAddress;
    }

    /**
     * Constructs a <code>CreatePaymentRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreatePaymentRequest} obj Optional instance to populate.
     * @return {module:model/CreatePaymentRequest} The populated <code>CreatePaymentRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreatePaymentRequest();

            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('nanoErg')) {
                obj['nanoErg'] = ApiClient.convertToType(data['nanoErg'], 'Number');
            }
            if (data.hasOwnProperty('receiverAddress')) {
                obj['receiverAddress'] = ApiClient.convertToType(data['receiverAddress'], 'String');
            }
            if (data.hasOwnProperty('senderAddress')) {
                obj['senderAddress'] = ApiClient.convertToType(data['senderAddress'], 'String');
            }
            if (data.hasOwnProperty('tokenId')) {
                obj['tokenId'] = ApiClient.convertToType(data['tokenId'], 'String');
            }
            if (data.hasOwnProperty('tokenRawAmount')) {
                obj['tokenRawAmount'] = ApiClient.convertToType(data['tokenRawAmount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreatePaymentRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreatePaymentRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreatePaymentRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['receiverAddress'] && !(typeof data['receiverAddress'] === 'string' || data['receiverAddress'] instanceof String)) {
            throw new Error("Expected the field `receiverAddress` to be a primitive type in the JSON string but got " + data['receiverAddress']);
        }
        // ensure the json data is a string
        if (data['senderAddress'] && !(typeof data['senderAddress'] === 'string' || data['senderAddress'] instanceof String)) {
            throw new Error("Expected the field `senderAddress` to be a primitive type in the JSON string but got " + data['senderAddress']);
        }
        // ensure the json data is a string
        if (data['tokenId'] && !(typeof data['tokenId'] === 'string' || data['tokenId'] instanceof String)) {
            throw new Error("Expected the field `tokenId` to be a primitive type in the JSON string but got " + data['tokenId']);
        }

        return true;
    }


}

CreatePaymentRequest.RequiredProperties = ["nanoErg", "receiverAddress"];

/**
 * @member {String} message
 */
CreatePaymentRequest.prototype['message'] = undefined;

/**
 * @member {Number} nanoErg
 */
CreatePaymentRequest.prototype['nanoErg'] = undefined;

/**
 * @member {String} receiverAddress
 */
CreatePaymentRequest.prototype['receiverAddress'] = undefined;

/**
 * @member {String} senderAddress
 */
CreatePaymentRequest.prototype['senderAddress'] = undefined;

/**
 * @member {String} tokenId
 */
CreatePaymentRequest.prototype['tokenId'] = undefined;

/**
 * @member {Number} tokenRawAmount
 */
CreatePaymentRequest.prototype['tokenRawAmount'] = undefined;






export default CreatePaymentRequest;

