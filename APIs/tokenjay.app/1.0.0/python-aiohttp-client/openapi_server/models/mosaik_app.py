# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.action import Action
from openapi_server.models.mosaik_manifest import MosaikManifest
from openapi_server.models.view_element import ViewElement
from openapi_server import util


class MosaikApp(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actions: List[Action]=None, manifest: MosaikManifest=None, view: ViewElement=None):
        """MosaikApp - a model defined in OpenAPI

        :param actions: The actions of this MosaikApp.
        :param manifest: The manifest of this MosaikApp.
        :param view: The view of this MosaikApp.
        """
        self.openapi_types = {
            'actions': List[Action],
            'manifest': MosaikManifest,
            'view': ViewElement
        }

        self.attribute_map = {
            'actions': 'actions',
            'manifest': 'manifest',
            'view': 'view'
        }

        self._actions = actions
        self._manifest = manifest
        self._view = view

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MosaikApp':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MosaikApp of this MosaikApp.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actions(self):
        """Gets the actions of this MosaikApp.


        :return: The actions of this MosaikApp.
        :rtype: List[Action]
        """
        return self._actions

    @actions.setter
    def actions(self, actions):
        """Sets the actions of this MosaikApp.


        :param actions: The actions of this MosaikApp.
        :type actions: List[Action]
        """

        self._actions = actions

    @property
    def manifest(self):
        """Gets the manifest of this MosaikApp.


        :return: The manifest of this MosaikApp.
        :rtype: MosaikManifest
        """
        return self._manifest

    @manifest.setter
    def manifest(self, manifest):
        """Sets the manifest of this MosaikApp.


        :param manifest: The manifest of this MosaikApp.
        :type manifest: MosaikManifest
        """

        self._manifest = manifest

    @property
    def view(self):
        """Gets the view of this MosaikApp.


        :return: The view of this MosaikApp.
        :rtype: ViewElement
        """
        return self._view

    @view.setter
    def view(self, view):
        """Sets the view of this MosaikApp.


        :param view: The view of this MosaikApp.
        :type view: ViewElement
        """

        self._view = view
