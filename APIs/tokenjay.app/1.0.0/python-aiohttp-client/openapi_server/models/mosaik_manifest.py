# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MosaikManifest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_description: str=None, app_name: str=None, app_version: int=None, cache_lifetime: int=None, error_report_url: str=None, icon_url: str=None, notification_check_url: str=None, on_app_loaded_action: str=None, on_resize_action: str=None, target_canvas_dimension: str=None, target_mosaik_version: int=None):
        """MosaikManifest - a model defined in OpenAPI

        :param app_description: The app_description of this MosaikManifest.
        :param app_name: The app_name of this MosaikManifest.
        :param app_version: The app_version of this MosaikManifest.
        :param cache_lifetime: The cache_lifetime of this MosaikManifest.
        :param error_report_url: The error_report_url of this MosaikManifest.
        :param icon_url: The icon_url of this MosaikManifest.
        :param notification_check_url: The notification_check_url of this MosaikManifest.
        :param on_app_loaded_action: The on_app_loaded_action of this MosaikManifest.
        :param on_resize_action: The on_resize_action of this MosaikManifest.
        :param target_canvas_dimension: The target_canvas_dimension of this MosaikManifest.
        :param target_mosaik_version: The target_mosaik_version of this MosaikManifest.
        """
        self.openapi_types = {
            'app_description': str,
            'app_name': str,
            'app_version': int,
            'cache_lifetime': int,
            'error_report_url': str,
            'icon_url': str,
            'notification_check_url': str,
            'on_app_loaded_action': str,
            'on_resize_action': str,
            'target_canvas_dimension': str,
            'target_mosaik_version': int
        }

        self.attribute_map = {
            'app_description': 'appDescription',
            'app_name': 'appName',
            'app_version': 'appVersion',
            'cache_lifetime': 'cacheLifetime',
            'error_report_url': 'errorReportUrl',
            'icon_url': 'iconUrl',
            'notification_check_url': 'notificationCheckUrl',
            'on_app_loaded_action': 'onAppLoadedAction',
            'on_resize_action': 'onResizeAction',
            'target_canvas_dimension': 'targetCanvasDimension',
            'target_mosaik_version': 'targetMosaikVersion'
        }

        self._app_description = app_description
        self._app_name = app_name
        self._app_version = app_version
        self._cache_lifetime = cache_lifetime
        self._error_report_url = error_report_url
        self._icon_url = icon_url
        self._notification_check_url = notification_check_url
        self._on_app_loaded_action = on_app_loaded_action
        self._on_resize_action = on_resize_action
        self._target_canvas_dimension = target_canvas_dimension
        self._target_mosaik_version = target_mosaik_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MosaikManifest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MosaikManifest of this MosaikManifest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_description(self):
        """Gets the app_description of this MosaikManifest.


        :return: The app_description of this MosaikManifest.
        :rtype: str
        """
        return self._app_description

    @app_description.setter
    def app_description(self, app_description):
        """Sets the app_description of this MosaikManifest.


        :param app_description: The app_description of this MosaikManifest.
        :type app_description: str
        """

        self._app_description = app_description

    @property
    def app_name(self):
        """Gets the app_name of this MosaikManifest.


        :return: The app_name of this MosaikManifest.
        :rtype: str
        """
        return self._app_name

    @app_name.setter
    def app_name(self, app_name):
        """Sets the app_name of this MosaikManifest.


        :param app_name: The app_name of this MosaikManifest.
        :type app_name: str
        """

        self._app_name = app_name

    @property
    def app_version(self):
        """Gets the app_version of this MosaikManifest.


        :return: The app_version of this MosaikManifest.
        :rtype: int
        """
        return self._app_version

    @app_version.setter
    def app_version(self, app_version):
        """Sets the app_version of this MosaikManifest.


        :param app_version: The app_version of this MosaikManifest.
        :type app_version: int
        """

        self._app_version = app_version

    @property
    def cache_lifetime(self):
        """Gets the cache_lifetime of this MosaikManifest.


        :return: The cache_lifetime of this MosaikManifest.
        :rtype: int
        """
        return self._cache_lifetime

    @cache_lifetime.setter
    def cache_lifetime(self, cache_lifetime):
        """Sets the cache_lifetime of this MosaikManifest.


        :param cache_lifetime: The cache_lifetime of this MosaikManifest.
        :type cache_lifetime: int
        """

        self._cache_lifetime = cache_lifetime

    @property
    def error_report_url(self):
        """Gets the error_report_url of this MosaikManifest.


        :return: The error_report_url of this MosaikManifest.
        :rtype: str
        """
        return self._error_report_url

    @error_report_url.setter
    def error_report_url(self, error_report_url):
        """Sets the error_report_url of this MosaikManifest.


        :param error_report_url: The error_report_url of this MosaikManifest.
        :type error_report_url: str
        """

        self._error_report_url = error_report_url

    @property
    def icon_url(self):
        """Gets the icon_url of this MosaikManifest.


        :return: The icon_url of this MosaikManifest.
        :rtype: str
        """
        return self._icon_url

    @icon_url.setter
    def icon_url(self, icon_url):
        """Sets the icon_url of this MosaikManifest.


        :param icon_url: The icon_url of this MosaikManifest.
        :type icon_url: str
        """

        self._icon_url = icon_url

    @property
    def notification_check_url(self):
        """Gets the notification_check_url of this MosaikManifest.


        :return: The notification_check_url of this MosaikManifest.
        :rtype: str
        """
        return self._notification_check_url

    @notification_check_url.setter
    def notification_check_url(self, notification_check_url):
        """Sets the notification_check_url of this MosaikManifest.


        :param notification_check_url: The notification_check_url of this MosaikManifest.
        :type notification_check_url: str
        """

        self._notification_check_url = notification_check_url

    @property
    def on_app_loaded_action(self):
        """Gets the on_app_loaded_action of this MosaikManifest.


        :return: The on_app_loaded_action of this MosaikManifest.
        :rtype: str
        """
        return self._on_app_loaded_action

    @on_app_loaded_action.setter
    def on_app_loaded_action(self, on_app_loaded_action):
        """Sets the on_app_loaded_action of this MosaikManifest.


        :param on_app_loaded_action: The on_app_loaded_action of this MosaikManifest.
        :type on_app_loaded_action: str
        """

        self._on_app_loaded_action = on_app_loaded_action

    @property
    def on_resize_action(self):
        """Gets the on_resize_action of this MosaikManifest.


        :return: The on_resize_action of this MosaikManifest.
        :rtype: str
        """
        return self._on_resize_action

    @on_resize_action.setter
    def on_resize_action(self, on_resize_action):
        """Sets the on_resize_action of this MosaikManifest.


        :param on_resize_action: The on_resize_action of this MosaikManifest.
        :type on_resize_action: str
        """

        self._on_resize_action = on_resize_action

    @property
    def target_canvas_dimension(self):
        """Gets the target_canvas_dimension of this MosaikManifest.


        :return: The target_canvas_dimension of this MosaikManifest.
        :rtype: str
        """
        return self._target_canvas_dimension

    @target_canvas_dimension.setter
    def target_canvas_dimension(self, target_canvas_dimension):
        """Sets the target_canvas_dimension of this MosaikManifest.


        :param target_canvas_dimension: The target_canvas_dimension of this MosaikManifest.
        :type target_canvas_dimension: str
        """
        allowed_values = ["COMPACT_WIDTH", "MEDIUM_WIDTH", "FULL_WIDTH"]  # noqa: E501
        if target_canvas_dimension not in allowed_values:
            raise ValueError(
                "Invalid value for `target_canvas_dimension` ({0}), must be one of {1}"
                .format(target_canvas_dimension, allowed_values)
            )

        self._target_canvas_dimension = target_canvas_dimension

    @property
    def target_mosaik_version(self):
        """Gets the target_mosaik_version of this MosaikManifest.


        :return: The target_mosaik_version of this MosaikManifest.
        :rtype: int
        """
        return self._target_mosaik_version

    @target_mosaik_version.setter
    def target_mosaik_version(self, target_mosaik_version):
        """Sets the target_mosaik_version of this MosaikManifest.


        :param target_mosaik_version: The target_mosaik_version of this MosaikManifest.
        :type target_mosaik_version: int
        """

        self._target_mosaik_version = target_mosaik_version
