# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NotificationCheckResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message: str=None, message_ts: int=None, next_check: int=None):
        """NotificationCheckResponse - a model defined in OpenAPI

        :param message: The message of this NotificationCheckResponse.
        :param message_ts: The message_ts of this NotificationCheckResponse.
        :param next_check: The next_check of this NotificationCheckResponse.
        """
        self.openapi_types = {
            'message': str,
            'message_ts': int,
            'next_check': int
        }

        self.attribute_map = {
            'message': 'message',
            'message_ts': 'messageTs',
            'next_check': 'nextCheck'
        }

        self._message = message
        self._message_ts = message_ts
        self._next_check = next_check

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NotificationCheckResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NotificationCheckResponse of this NotificationCheckResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message(self):
        """Gets the message of this NotificationCheckResponse.


        :return: The message of this NotificationCheckResponse.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this NotificationCheckResponse.


        :param message: The message of this NotificationCheckResponse.
        :type message: str
        """

        self._message = message

    @property
    def message_ts(self):
        """Gets the message_ts of this NotificationCheckResponse.


        :return: The message_ts of this NotificationCheckResponse.
        :rtype: int
        """
        return self._message_ts

    @message_ts.setter
    def message_ts(self, message_ts):
        """Sets the message_ts of this NotificationCheckResponse.


        :param message_ts: The message_ts of this NotificationCheckResponse.
        :type message_ts: int
        """

        self._message_ts = message_ts

    @property
    def next_check(self):
        """Gets the next_check of this NotificationCheckResponse.


        :return: The next_check of this NotificationCheckResponse.
        :rtype: int
        """
        return self._next_check

    @next_check.setter
    def next_check(self, next_check):
        """Sets the next_check of this NotificationCheckResponse.


        :param next_check: The next_check of this NotificationCheckResponse.
        :type next_check: int
        """

        self._next_check = next_check
