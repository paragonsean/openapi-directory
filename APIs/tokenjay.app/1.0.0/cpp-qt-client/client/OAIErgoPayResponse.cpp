/**
 * TokenJay API services
 * Please see usage policies on tokenjay.app
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIErgoPayResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIErgoPayResponse::OAIErgoPayResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIErgoPayResponse::OAIErgoPayResponse() {
    this->initializeModel();
}

OAIErgoPayResponse::~OAIErgoPayResponse() {}

void OAIErgoPayResponse::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_addresses_isSet = false;
    m_addresses_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_message_severity_isSet = false;
    m_message_severity_isValid = false;

    m_reduced_tx_isSet = false;
    m_reduced_tx_isValid = false;

    m_reduced_tx_list_isSet = false;
    m_reduced_tx_list_isValid = false;

    m_reply_to_isSet = false;
    m_reply_to_isValid = false;
}

void OAIErgoPayResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIErgoPayResponse::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_addresses_isValid = ::OpenAPI::fromJsonValue(m_addresses, json[QString("addresses")]);
    m_addresses_isSet = !json[QString("addresses")].isNull() && m_addresses_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_message_severity_isValid = ::OpenAPI::fromJsonValue(m_message_severity, json[QString("messageSeverity")]);
    m_message_severity_isSet = !json[QString("messageSeverity")].isNull() && m_message_severity_isValid;

    m_reduced_tx_isValid = ::OpenAPI::fromJsonValue(m_reduced_tx, json[QString("reducedTx")]);
    m_reduced_tx_isSet = !json[QString("reducedTx")].isNull() && m_reduced_tx_isValid;

    m_reduced_tx_list_isValid = ::OpenAPI::fromJsonValue(m_reduced_tx_list, json[QString("reducedTxList")]);
    m_reduced_tx_list_isSet = !json[QString("reducedTxList")].isNull() && m_reduced_tx_list_isValid;

    m_reply_to_isValid = ::OpenAPI::fromJsonValue(m_reply_to, json[QString("replyTo")]);
    m_reply_to_isSet = !json[QString("replyTo")].isNull() && m_reply_to_isValid;
}

QString OAIErgoPayResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIErgoPayResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_address_isSet) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_addresses.size() > 0) {
        obj.insert(QString("addresses"), ::OpenAPI::toJsonValue(m_addresses));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_message_severity_isSet) {
        obj.insert(QString("messageSeverity"), ::OpenAPI::toJsonValue(m_message_severity));
    }
    if (m_reduced_tx_isSet) {
        obj.insert(QString("reducedTx"), ::OpenAPI::toJsonValue(m_reduced_tx));
    }
    if (m_reduced_tx_list.size() > 0) {
        obj.insert(QString("reducedTxList"), ::OpenAPI::toJsonValue(m_reduced_tx_list));
    }
    if (m_reply_to_isSet) {
        obj.insert(QString("replyTo"), ::OpenAPI::toJsonValue(m_reply_to));
    }
    return obj;
}

QString OAIErgoPayResponse::getAddress() const {
    return m_address;
}
void OAIErgoPayResponse::setAddress(const QString &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIErgoPayResponse::is_address_Set() const{
    return m_address_isSet;
}

bool OAIErgoPayResponse::is_address_Valid() const{
    return m_address_isValid;
}

QList<QString> OAIErgoPayResponse::getAddresses() const {
    return m_addresses;
}
void OAIErgoPayResponse::setAddresses(const QList<QString> &addresses) {
    m_addresses = addresses;
    m_addresses_isSet = true;
}

bool OAIErgoPayResponse::is_addresses_Set() const{
    return m_addresses_isSet;
}

bool OAIErgoPayResponse::is_addresses_Valid() const{
    return m_addresses_isValid;
}

QString OAIErgoPayResponse::getMessage() const {
    return m_message;
}
void OAIErgoPayResponse::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIErgoPayResponse::is_message_Set() const{
    return m_message_isSet;
}

bool OAIErgoPayResponse::is_message_Valid() const{
    return m_message_isValid;
}

QString OAIErgoPayResponse::getMessageSeverity() const {
    return m_message_severity;
}
void OAIErgoPayResponse::setMessageSeverity(const QString &message_severity) {
    m_message_severity = message_severity;
    m_message_severity_isSet = true;
}

bool OAIErgoPayResponse::is_message_severity_Set() const{
    return m_message_severity_isSet;
}

bool OAIErgoPayResponse::is_message_severity_Valid() const{
    return m_message_severity_isValid;
}

QString OAIErgoPayResponse::getReducedTx() const {
    return m_reduced_tx;
}
void OAIErgoPayResponse::setReducedTx(const QString &reduced_tx) {
    m_reduced_tx = reduced_tx;
    m_reduced_tx_isSet = true;
}

bool OAIErgoPayResponse::is_reduced_tx_Set() const{
    return m_reduced_tx_isSet;
}

bool OAIErgoPayResponse::is_reduced_tx_Valid() const{
    return m_reduced_tx_isValid;
}

QList<QString> OAIErgoPayResponse::getReducedTxList() const {
    return m_reduced_tx_list;
}
void OAIErgoPayResponse::setReducedTxList(const QList<QString> &reduced_tx_list) {
    m_reduced_tx_list = reduced_tx_list;
    m_reduced_tx_list_isSet = true;
}

bool OAIErgoPayResponse::is_reduced_tx_list_Set() const{
    return m_reduced_tx_list_isSet;
}

bool OAIErgoPayResponse::is_reduced_tx_list_Valid() const{
    return m_reduced_tx_list_isValid;
}

QString OAIErgoPayResponse::getReplyTo() const {
    return m_reply_to;
}
void OAIErgoPayResponse::setReplyTo(const QString &reply_to) {
    m_reply_to = reply_to;
    m_reply_to_isSet = true;
}

bool OAIErgoPayResponse::is_reply_to_Set() const{
    return m_reply_to_isSet;
}

bool OAIErgoPayResponse::is_reply_to_Valid() const{
    return m_reply_to_isValid;
}

bool OAIErgoPayResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_addresses.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_severity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reduced_tx_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reduced_tx_list.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_reply_to_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIErgoPayResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
