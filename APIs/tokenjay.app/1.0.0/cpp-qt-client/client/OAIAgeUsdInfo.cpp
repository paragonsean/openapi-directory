/**
 * TokenJay API services
 * Please see usage policies on tokenjay.app
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAgeUsdInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAgeUsdInfo::OAIAgeUsdInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAgeUsdInfo::OAIAgeUsdInfo() {
    this->initializeModel();
}

OAIAgeUsdInfo::~OAIAgeUsdInfo() {}

void OAIAgeUsdInfo::initializeModel() {

    m_reserve_ratio_isSet = false;
    m_reserve_ratio_isValid = false;

    m_sig_rsv_price_isSet = false;
    m_sig_rsv_price_isValid = false;

    m_sig_usd_price_isSet = false;
    m_sig_usd_price_isValid = false;
}

void OAIAgeUsdInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAgeUsdInfo::fromJsonObject(QJsonObject json) {

    m_reserve_ratio_isValid = ::OpenAPI::fromJsonValue(m_reserve_ratio, json[QString("reserveRatio")]);
    m_reserve_ratio_isSet = !json[QString("reserveRatio")].isNull() && m_reserve_ratio_isValid;

    m_sig_rsv_price_isValid = ::OpenAPI::fromJsonValue(m_sig_rsv_price, json[QString("sigRsvPrice")]);
    m_sig_rsv_price_isSet = !json[QString("sigRsvPrice")].isNull() && m_sig_rsv_price_isValid;

    m_sig_usd_price_isValid = ::OpenAPI::fromJsonValue(m_sig_usd_price, json[QString("sigUsdPrice")]);
    m_sig_usd_price_isSet = !json[QString("sigUsdPrice")].isNull() && m_sig_usd_price_isValid;
}

QString OAIAgeUsdInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAgeUsdInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_reserve_ratio_isSet) {
        obj.insert(QString("reserveRatio"), ::OpenAPI::toJsonValue(m_reserve_ratio));
    }
    if (m_sig_rsv_price_isSet) {
        obj.insert(QString("sigRsvPrice"), ::OpenAPI::toJsonValue(m_sig_rsv_price));
    }
    if (m_sig_usd_price_isSet) {
        obj.insert(QString("sigUsdPrice"), ::OpenAPI::toJsonValue(m_sig_usd_price));
    }
    return obj;
}

qint64 OAIAgeUsdInfo::getReserveRatio() const {
    return m_reserve_ratio;
}
void OAIAgeUsdInfo::setReserveRatio(const qint64 &reserve_ratio) {
    m_reserve_ratio = reserve_ratio;
    m_reserve_ratio_isSet = true;
}

bool OAIAgeUsdInfo::is_reserve_ratio_Set() const{
    return m_reserve_ratio_isSet;
}

bool OAIAgeUsdInfo::is_reserve_ratio_Valid() const{
    return m_reserve_ratio_isValid;
}

qint64 OAIAgeUsdInfo::getSigRsvPrice() const {
    return m_sig_rsv_price;
}
void OAIAgeUsdInfo::setSigRsvPrice(const qint64 &sig_rsv_price) {
    m_sig_rsv_price = sig_rsv_price;
    m_sig_rsv_price_isSet = true;
}

bool OAIAgeUsdInfo::is_sig_rsv_price_Set() const{
    return m_sig_rsv_price_isSet;
}

bool OAIAgeUsdInfo::is_sig_rsv_price_Valid() const{
    return m_sig_rsv_price_isValid;
}

qint64 OAIAgeUsdInfo::getSigUsdPrice() const {
    return m_sig_usd_price;
}
void OAIAgeUsdInfo::setSigUsdPrice(const qint64 &sig_usd_price) {
    m_sig_usd_price = sig_usd_price;
    m_sig_usd_price_isSet = true;
}

bool OAIAgeUsdInfo::is_sig_usd_price_Set() const{
    return m_sig_usd_price_isSet;
}

bool OAIAgeUsdInfo::is_sig_usd_price_Valid() const{
    return m_sig_usd_price_isValid;
}

bool OAIAgeUsdInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_reserve_ratio_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sig_rsv_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sig_usd_price_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAgeUsdInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_reserve_ratio_isValid && m_sig_rsv_price_isValid && m_sig_usd_price_isValid && true;
}

} // namespace OpenAPI
