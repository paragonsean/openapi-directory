/**
 * TokenJay API services
 * Please see usage policies on tokenjay.app
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreatePaymentRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreatePaymentRequest::OAICreatePaymentRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreatePaymentRequest::OAICreatePaymentRequest() {
    this->initializeModel();
}

OAICreatePaymentRequest::~OAICreatePaymentRequest() {}

void OAICreatePaymentRequest::initializeModel() {

    m_message_isSet = false;
    m_message_isValid = false;

    m_nano_erg_isSet = false;
    m_nano_erg_isValid = false;

    m_receiver_address_isSet = false;
    m_receiver_address_isValid = false;

    m_sender_address_isSet = false;
    m_sender_address_isValid = false;

    m_token_id_isSet = false;
    m_token_id_isValid = false;

    m_token_raw_amount_isSet = false;
    m_token_raw_amount_isValid = false;
}

void OAICreatePaymentRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreatePaymentRequest::fromJsonObject(QJsonObject json) {

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_nano_erg_isValid = ::OpenAPI::fromJsonValue(m_nano_erg, json[QString("nanoErg")]);
    m_nano_erg_isSet = !json[QString("nanoErg")].isNull() && m_nano_erg_isValid;

    m_receiver_address_isValid = ::OpenAPI::fromJsonValue(m_receiver_address, json[QString("receiverAddress")]);
    m_receiver_address_isSet = !json[QString("receiverAddress")].isNull() && m_receiver_address_isValid;

    m_sender_address_isValid = ::OpenAPI::fromJsonValue(m_sender_address, json[QString("senderAddress")]);
    m_sender_address_isSet = !json[QString("senderAddress")].isNull() && m_sender_address_isValid;

    m_token_id_isValid = ::OpenAPI::fromJsonValue(m_token_id, json[QString("tokenId")]);
    m_token_id_isSet = !json[QString("tokenId")].isNull() && m_token_id_isValid;

    m_token_raw_amount_isValid = ::OpenAPI::fromJsonValue(m_token_raw_amount, json[QString("tokenRawAmount")]);
    m_token_raw_amount_isSet = !json[QString("tokenRawAmount")].isNull() && m_token_raw_amount_isValid;
}

QString OAICreatePaymentRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreatePaymentRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_nano_erg_isSet) {
        obj.insert(QString("nanoErg"), ::OpenAPI::toJsonValue(m_nano_erg));
    }
    if (m_receiver_address_isSet) {
        obj.insert(QString("receiverAddress"), ::OpenAPI::toJsonValue(m_receiver_address));
    }
    if (m_sender_address_isSet) {
        obj.insert(QString("senderAddress"), ::OpenAPI::toJsonValue(m_sender_address));
    }
    if (m_token_id_isSet) {
        obj.insert(QString("tokenId"), ::OpenAPI::toJsonValue(m_token_id));
    }
    if (m_token_raw_amount_isSet) {
        obj.insert(QString("tokenRawAmount"), ::OpenAPI::toJsonValue(m_token_raw_amount));
    }
    return obj;
}

QString OAICreatePaymentRequest::getMessage() const {
    return m_message;
}
void OAICreatePaymentRequest::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAICreatePaymentRequest::is_message_Set() const{
    return m_message_isSet;
}

bool OAICreatePaymentRequest::is_message_Valid() const{
    return m_message_isValid;
}

qint64 OAICreatePaymentRequest::getNanoErg() const {
    return m_nano_erg;
}
void OAICreatePaymentRequest::setNanoErg(const qint64 &nano_erg) {
    m_nano_erg = nano_erg;
    m_nano_erg_isSet = true;
}

bool OAICreatePaymentRequest::is_nano_erg_Set() const{
    return m_nano_erg_isSet;
}

bool OAICreatePaymentRequest::is_nano_erg_Valid() const{
    return m_nano_erg_isValid;
}

QString OAICreatePaymentRequest::getReceiverAddress() const {
    return m_receiver_address;
}
void OAICreatePaymentRequest::setReceiverAddress(const QString &receiver_address) {
    m_receiver_address = receiver_address;
    m_receiver_address_isSet = true;
}

bool OAICreatePaymentRequest::is_receiver_address_Set() const{
    return m_receiver_address_isSet;
}

bool OAICreatePaymentRequest::is_receiver_address_Valid() const{
    return m_receiver_address_isValid;
}

QString OAICreatePaymentRequest::getSenderAddress() const {
    return m_sender_address;
}
void OAICreatePaymentRequest::setSenderAddress(const QString &sender_address) {
    m_sender_address = sender_address;
    m_sender_address_isSet = true;
}

bool OAICreatePaymentRequest::is_sender_address_Set() const{
    return m_sender_address_isSet;
}

bool OAICreatePaymentRequest::is_sender_address_Valid() const{
    return m_sender_address_isValid;
}

QString OAICreatePaymentRequest::getTokenId() const {
    return m_token_id;
}
void OAICreatePaymentRequest::setTokenId(const QString &token_id) {
    m_token_id = token_id;
    m_token_id_isSet = true;
}

bool OAICreatePaymentRequest::is_token_id_Set() const{
    return m_token_id_isSet;
}

bool OAICreatePaymentRequest::is_token_id_Valid() const{
    return m_token_id_isValid;
}

qint64 OAICreatePaymentRequest::getTokenRawAmount() const {
    return m_token_raw_amount;
}
void OAICreatePaymentRequest::setTokenRawAmount(const qint64 &token_raw_amount) {
    m_token_raw_amount = token_raw_amount;
    m_token_raw_amount_isSet = true;
}

bool OAICreatePaymentRequest::is_token_raw_amount_Set() const{
    return m_token_raw_amount_isSet;
}

bool OAICreatePaymentRequest::is_token_raw_amount_Valid() const{
    return m_token_raw_amount_isValid;
}

bool OAICreatePaymentRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nano_erg_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiver_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sender_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_token_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_token_raw_amount_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreatePaymentRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_nano_erg_isValid && m_receiver_address_isValid && true;
}

} // namespace OpenAPI
