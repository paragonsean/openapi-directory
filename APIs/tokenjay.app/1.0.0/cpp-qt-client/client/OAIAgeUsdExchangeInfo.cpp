/**
 * TokenJay API services
 * Please see usage policies on tokenjay.app
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAgeUsdExchangeInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAgeUsdExchangeInfo::OAIAgeUsdExchangeInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAgeUsdExchangeInfo::OAIAgeUsdExchangeInfo() {
    this->initializeModel();
}

OAIAgeUsdExchangeInfo::~OAIAgeUsdExchangeInfo() {}

void OAIAgeUsdExchangeInfo::initializeModel() {

    m_bank_fee_amount_isSet = false;
    m_bank_fee_amount_isValid = false;

    m_bank_fee_description_isSet = false;
    m_bank_fee_description_isValid = false;

    m_erg_amount_isSet = false;
    m_erg_amount_isValid = false;

    m_erg_amount_description_isSet = false;
    m_erg_amount_description_isValid = false;

    m_exchange_rate_isSet = false;
    m_exchange_rate_isValid = false;

    m_jay_fee_amount_isSet = false;
    m_jay_fee_amount_isValid = false;

    m_jay_fee_description_isSet = false;
    m_jay_fee_description_isValid = false;

    m_total_amount_isSet = false;
    m_total_amount_isValid = false;
}

void OAIAgeUsdExchangeInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAgeUsdExchangeInfo::fromJsonObject(QJsonObject json) {

    m_bank_fee_amount_isValid = ::OpenAPI::fromJsonValue(m_bank_fee_amount, json[QString("bankFeeAmount")]);
    m_bank_fee_amount_isSet = !json[QString("bankFeeAmount")].isNull() && m_bank_fee_amount_isValid;

    m_bank_fee_description_isValid = ::OpenAPI::fromJsonValue(m_bank_fee_description, json[QString("bankFeeDescription")]);
    m_bank_fee_description_isSet = !json[QString("bankFeeDescription")].isNull() && m_bank_fee_description_isValid;

    m_erg_amount_isValid = ::OpenAPI::fromJsonValue(m_erg_amount, json[QString("ergAmount")]);
    m_erg_amount_isSet = !json[QString("ergAmount")].isNull() && m_erg_amount_isValid;

    m_erg_amount_description_isValid = ::OpenAPI::fromJsonValue(m_erg_amount_description, json[QString("ergAmountDescription")]);
    m_erg_amount_description_isSet = !json[QString("ergAmountDescription")].isNull() && m_erg_amount_description_isValid;

    m_exchange_rate_isValid = ::OpenAPI::fromJsonValue(m_exchange_rate, json[QString("exchangeRate")]);
    m_exchange_rate_isSet = !json[QString("exchangeRate")].isNull() && m_exchange_rate_isValid;

    m_jay_fee_amount_isValid = ::OpenAPI::fromJsonValue(m_jay_fee_amount, json[QString("jayFeeAmount")]);
    m_jay_fee_amount_isSet = !json[QString("jayFeeAmount")].isNull() && m_jay_fee_amount_isValid;

    m_jay_fee_description_isValid = ::OpenAPI::fromJsonValue(m_jay_fee_description, json[QString("jayFeeDescription")]);
    m_jay_fee_description_isSet = !json[QString("jayFeeDescription")].isNull() && m_jay_fee_description_isValid;

    m_total_amount_isValid = ::OpenAPI::fromJsonValue(m_total_amount, json[QString("totalAmount")]);
    m_total_amount_isSet = !json[QString("totalAmount")].isNull() && m_total_amount_isValid;
}

QString OAIAgeUsdExchangeInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAgeUsdExchangeInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_bank_fee_amount_isSet) {
        obj.insert(QString("bankFeeAmount"), ::OpenAPI::toJsonValue(m_bank_fee_amount));
    }
    if (m_bank_fee_description_isSet) {
        obj.insert(QString("bankFeeDescription"), ::OpenAPI::toJsonValue(m_bank_fee_description));
    }
    if (m_erg_amount_isSet) {
        obj.insert(QString("ergAmount"), ::OpenAPI::toJsonValue(m_erg_amount));
    }
    if (m_erg_amount_description_isSet) {
        obj.insert(QString("ergAmountDescription"), ::OpenAPI::toJsonValue(m_erg_amount_description));
    }
    if (m_exchange_rate_isSet) {
        obj.insert(QString("exchangeRate"), ::OpenAPI::toJsonValue(m_exchange_rate));
    }
    if (m_jay_fee_amount_isSet) {
        obj.insert(QString("jayFeeAmount"), ::OpenAPI::toJsonValue(m_jay_fee_amount));
    }
    if (m_jay_fee_description_isSet) {
        obj.insert(QString("jayFeeDescription"), ::OpenAPI::toJsonValue(m_jay_fee_description));
    }
    if (m_total_amount_isSet) {
        obj.insert(QString("totalAmount"), ::OpenAPI::toJsonValue(m_total_amount));
    }
    return obj;
}

qint64 OAIAgeUsdExchangeInfo::getBankFeeAmount() const {
    return m_bank_fee_amount;
}
void OAIAgeUsdExchangeInfo::setBankFeeAmount(const qint64 &bank_fee_amount) {
    m_bank_fee_amount = bank_fee_amount;
    m_bank_fee_amount_isSet = true;
}

bool OAIAgeUsdExchangeInfo::is_bank_fee_amount_Set() const{
    return m_bank_fee_amount_isSet;
}

bool OAIAgeUsdExchangeInfo::is_bank_fee_amount_Valid() const{
    return m_bank_fee_amount_isValid;
}

QString OAIAgeUsdExchangeInfo::getBankFeeDescription() const {
    return m_bank_fee_description;
}
void OAIAgeUsdExchangeInfo::setBankFeeDescription(const QString &bank_fee_description) {
    m_bank_fee_description = bank_fee_description;
    m_bank_fee_description_isSet = true;
}

bool OAIAgeUsdExchangeInfo::is_bank_fee_description_Set() const{
    return m_bank_fee_description_isSet;
}

bool OAIAgeUsdExchangeInfo::is_bank_fee_description_Valid() const{
    return m_bank_fee_description_isValid;
}

qint64 OAIAgeUsdExchangeInfo::getErgAmount() const {
    return m_erg_amount;
}
void OAIAgeUsdExchangeInfo::setErgAmount(const qint64 &erg_amount) {
    m_erg_amount = erg_amount;
    m_erg_amount_isSet = true;
}

bool OAIAgeUsdExchangeInfo::is_erg_amount_Set() const{
    return m_erg_amount_isSet;
}

bool OAIAgeUsdExchangeInfo::is_erg_amount_Valid() const{
    return m_erg_amount_isValid;
}

QString OAIAgeUsdExchangeInfo::getErgAmountDescription() const {
    return m_erg_amount_description;
}
void OAIAgeUsdExchangeInfo::setErgAmountDescription(const QString &erg_amount_description) {
    m_erg_amount_description = erg_amount_description;
    m_erg_amount_description_isSet = true;
}

bool OAIAgeUsdExchangeInfo::is_erg_amount_description_Set() const{
    return m_erg_amount_description_isSet;
}

bool OAIAgeUsdExchangeInfo::is_erg_amount_description_Valid() const{
    return m_erg_amount_description_isValid;
}

qint64 OAIAgeUsdExchangeInfo::getExchangeRate() const {
    return m_exchange_rate;
}
void OAIAgeUsdExchangeInfo::setExchangeRate(const qint64 &exchange_rate) {
    m_exchange_rate = exchange_rate;
    m_exchange_rate_isSet = true;
}

bool OAIAgeUsdExchangeInfo::is_exchange_rate_Set() const{
    return m_exchange_rate_isSet;
}

bool OAIAgeUsdExchangeInfo::is_exchange_rate_Valid() const{
    return m_exchange_rate_isValid;
}

qint64 OAIAgeUsdExchangeInfo::getJayFeeAmount() const {
    return m_jay_fee_amount;
}
void OAIAgeUsdExchangeInfo::setJayFeeAmount(const qint64 &jay_fee_amount) {
    m_jay_fee_amount = jay_fee_amount;
    m_jay_fee_amount_isSet = true;
}

bool OAIAgeUsdExchangeInfo::is_jay_fee_amount_Set() const{
    return m_jay_fee_amount_isSet;
}

bool OAIAgeUsdExchangeInfo::is_jay_fee_amount_Valid() const{
    return m_jay_fee_amount_isValid;
}

QString OAIAgeUsdExchangeInfo::getJayFeeDescription() const {
    return m_jay_fee_description;
}
void OAIAgeUsdExchangeInfo::setJayFeeDescription(const QString &jay_fee_description) {
    m_jay_fee_description = jay_fee_description;
    m_jay_fee_description_isSet = true;
}

bool OAIAgeUsdExchangeInfo::is_jay_fee_description_Set() const{
    return m_jay_fee_description_isSet;
}

bool OAIAgeUsdExchangeInfo::is_jay_fee_description_Valid() const{
    return m_jay_fee_description_isValid;
}

qint64 OAIAgeUsdExchangeInfo::getTotalAmount() const {
    return m_total_amount;
}
void OAIAgeUsdExchangeInfo::setTotalAmount(const qint64 &total_amount) {
    m_total_amount = total_amount;
    m_total_amount_isSet = true;
}

bool OAIAgeUsdExchangeInfo::is_total_amount_Set() const{
    return m_total_amount_isSet;
}

bool OAIAgeUsdExchangeInfo::is_total_amount_Valid() const{
    return m_total_amount_isValid;
}

bool OAIAgeUsdExchangeInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bank_fee_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bank_fee_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_erg_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_erg_amount_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exchange_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_jay_fee_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_jay_fee_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_amount_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAgeUsdExchangeInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_bank_fee_amount_isValid && m_bank_fee_description_isValid && m_erg_amount_isValid && m_erg_amount_description_isValid && m_exchange_rate_isValid && m_jay_fee_amount_isValid && m_jay_fee_description_isValid && m_total_amount_isValid && true;
}

} // namespace OpenAPI
