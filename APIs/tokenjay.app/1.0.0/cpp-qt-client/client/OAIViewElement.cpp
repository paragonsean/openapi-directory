/**
 * TokenJay API services
 * Please see usage policies on tokenjay.app
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIViewElement.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIViewElement::OAIViewElement(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIViewElement::OAIViewElement() {
    this->initializeModel();
}

OAIViewElement::~OAIViewElement() {}

void OAIViewElement::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_on_click_action_isSet = false;
    m_on_click_action_isValid = false;

    m_on_long_press_action_isSet = false;
    m_on_long_press_action_isValid = false;

    m_visible_isSet = false;
    m_visible_isValid = false;
}

void OAIViewElement::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIViewElement::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_on_click_action_isValid = ::OpenAPI::fromJsonValue(m_on_click_action, json[QString("onClickAction")]);
    m_on_click_action_isSet = !json[QString("onClickAction")].isNull() && m_on_click_action_isValid;

    m_on_long_press_action_isValid = ::OpenAPI::fromJsonValue(m_on_long_press_action, json[QString("onLongPressAction")]);
    m_on_long_press_action_isSet = !json[QString("onLongPressAction")].isNull() && m_on_long_press_action_isValid;

    m_visible_isValid = ::OpenAPI::fromJsonValue(m_visible, json[QString("visible")]);
    m_visible_isSet = !json[QString("visible")].isNull() && m_visible_isValid;
}

QString OAIViewElement::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIViewElement::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_on_click_action_isSet) {
        obj.insert(QString("onClickAction"), ::OpenAPI::toJsonValue(m_on_click_action));
    }
    if (m_on_long_press_action_isSet) {
        obj.insert(QString("onLongPressAction"), ::OpenAPI::toJsonValue(m_on_long_press_action));
    }
    if (m_visible_isSet) {
        obj.insert(QString("visible"), ::OpenAPI::toJsonValue(m_visible));
    }
    return obj;
}

QString OAIViewElement::getId() const {
    return m_id;
}
void OAIViewElement::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIViewElement::is_id_Set() const{
    return m_id_isSet;
}

bool OAIViewElement::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIViewElement::getOnClickAction() const {
    return m_on_click_action;
}
void OAIViewElement::setOnClickAction(const QString &on_click_action) {
    m_on_click_action = on_click_action;
    m_on_click_action_isSet = true;
}

bool OAIViewElement::is_on_click_action_Set() const{
    return m_on_click_action_isSet;
}

bool OAIViewElement::is_on_click_action_Valid() const{
    return m_on_click_action_isValid;
}

QString OAIViewElement::getOnLongPressAction() const {
    return m_on_long_press_action;
}
void OAIViewElement::setOnLongPressAction(const QString &on_long_press_action) {
    m_on_long_press_action = on_long_press_action;
    m_on_long_press_action_isSet = true;
}

bool OAIViewElement::is_on_long_press_action_Set() const{
    return m_on_long_press_action_isSet;
}

bool OAIViewElement::is_on_long_press_action_Valid() const{
    return m_on_long_press_action_isValid;
}

bool OAIViewElement::isVisible() const {
    return m_visible;
}
void OAIViewElement::setVisible(const bool &visible) {
    m_visible = visible;
    m_visible_isSet = true;
}

bool OAIViewElement::is_visible_Set() const{
    return m_visible_isSet;
}

bool OAIViewElement::is_visible_Valid() const{
    return m_visible_isValid;
}

bool OAIViewElement::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_on_click_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_on_long_press_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_visible_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIViewElement::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
