# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.delete_installation200_response_usage_charge import DeleteInstallation200ResponseUsageCharge
from openapi_server import util


class DeleteInstallation200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, application_charge_source_id: str=None, recurring_application_charge_id: str=None, uninstalled_at: int=None, usage_charge: DeleteInstallation200ResponseUsageCharge=None):
        """DeleteInstallation200Response - a model defined in OpenAPI

        :param account_id: The account_id of this DeleteInstallation200Response.
        :param application_charge_source_id: The application_charge_source_id of this DeleteInstallation200Response.
        :param recurring_application_charge_id: The recurring_application_charge_id of this DeleteInstallation200Response.
        :param uninstalled_at: The uninstalled_at of this DeleteInstallation200Response.
        :param usage_charge: The usage_charge of this DeleteInstallation200Response.
        """
        self.openapi_types = {
            'account_id': str,
            'application_charge_source_id': str,
            'recurring_application_charge_id': str,
            'uninstalled_at': int,
            'usage_charge': DeleteInstallation200ResponseUsageCharge
        }

        self.attribute_map = {
            'account_id': 'account_id',
            'application_charge_source_id': 'application_charge_source_id',
            'recurring_application_charge_id': 'recurring_application_charge_id',
            'uninstalled_at': 'uninstalled_at',
            'usage_charge': 'usage_charge'
        }

        self._account_id = account_id
        self._application_charge_source_id = application_charge_source_id
        self._recurring_application_charge_id = recurring_application_charge_id
        self._uninstalled_at = uninstalled_at
        self._usage_charge = usage_charge

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteInstallation200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The deleteInstallation_200_response of this DeleteInstallation200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this DeleteInstallation200Response.

        アンインストールしたショップオーナーのアカウントID

        :return: The account_id of this DeleteInstallation200Response.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this DeleteInstallation200Response.

        アンインストールしたショップオーナーのアカウントID

        :param account_id: The account_id of this DeleteInstallation200Response.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def application_charge_source_id(self):
        """Gets the application_charge_source_id of this DeleteInstallation200Response.

        プラン課金ID

        :return: The application_charge_source_id of this DeleteInstallation200Response.
        :rtype: str
        """
        return self._application_charge_source_id

    @application_charge_source_id.setter
    def application_charge_source_id(self, application_charge_source_id):
        """Sets the application_charge_source_id of this DeleteInstallation200Response.

        プラン課金ID

        :param application_charge_source_id: The application_charge_source_id of this DeleteInstallation200Response.
        :type application_charge_source_id: str
        """

        self._application_charge_source_id = application_charge_source_id

    @property
    def recurring_application_charge_id(self):
        """Gets the recurring_application_charge_id of this DeleteInstallation200Response.

        （買い切り以外の課金の場合）課金契約ID

        :return: The recurring_application_charge_id of this DeleteInstallation200Response.
        :rtype: str
        """
        return self._recurring_application_charge_id

    @recurring_application_charge_id.setter
    def recurring_application_charge_id(self, recurring_application_charge_id):
        """Sets the recurring_application_charge_id of this DeleteInstallation200Response.

        （買い切り以外の課金の場合）課金契約ID

        :param recurring_application_charge_id: The recurring_application_charge_id of this DeleteInstallation200Response.
        :type recurring_application_charge_id: str
        """

        self._recurring_application_charge_id = recurring_application_charge_id

    @property
    def uninstalled_at(self):
        """Gets the uninstalled_at of this DeleteInstallation200Response.

        アンインストール日時

        :return: The uninstalled_at of this DeleteInstallation200Response.
        :rtype: int
        """
        return self._uninstalled_at

    @uninstalled_at.setter
    def uninstalled_at(self, uninstalled_at):
        """Sets the uninstalled_at of this DeleteInstallation200Response.

        アンインストール日時

        :param uninstalled_at: The uninstalled_at of this DeleteInstallation200Response.
        :type uninstalled_at: int
        """

        self._uninstalled_at = uninstalled_at

    @property
    def usage_charge(self):
        """Gets the usage_charge of this DeleteInstallation200Response.


        :return: The usage_charge of this DeleteInstallation200Response.
        :rtype: DeleteInstallation200ResponseUsageCharge
        """
        return self._usage_charge

    @usage_charge.setter
    def usage_charge(self, usage_charge):
        """Sets the usage_charge of this DeleteInstallation200Response.


        :param usage_charge: The usage_charge of this DeleteInstallation200Response.
        :type usage_charge: DeleteInstallation200ResponseUsageCharge
        """

        self._usage_charge = usage_charge
