# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UsageCharge(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, id: str=None, make_date: int=None, point: int=None, update_date: int=None):
        """UsageCharge - a model defined in OpenAPI

        :param description: The description of this UsageCharge.
        :param id: The id of this UsageCharge.
        :param make_date: The make_date of this UsageCharge.
        :param point: The point of this UsageCharge.
        :param update_date: The update_date of this UsageCharge.
        """
        self.openapi_types = {
            'description': str,
            'id': str,
            'make_date': int,
            'point': int,
            'update_date': int
        }

        self.attribute_map = {
            'description': 'description',
            'id': 'id',
            'make_date': 'make_date',
            'point': 'point',
            'update_date': 'update_date'
        }

        self._description = description
        self._id = id
        self._make_date = make_date
        self._point = point
        self._update_date = update_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UsageCharge':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UsageCharge of this UsageCharge.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this UsageCharge.

        従量課金発生理由

        :return: The description of this UsageCharge.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UsageCharge.

        従量課金発生理由

        :param description: The description of this UsageCharge.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this UsageCharge.

        従量課金ID

        :return: The id of this UsageCharge.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UsageCharge.

        従量課金ID

        :param id: The id of this UsageCharge.
        :type id: str
        """

        self._id = id

    @property
    def make_date(self):
        """Gets the make_date of this UsageCharge.

        作成日時

        :return: The make_date of this UsageCharge.
        :rtype: int
        """
        return self._make_date

    @make_date.setter
    def make_date(self, make_date):
        """Sets the make_date of this UsageCharge.

        作成日時

        :param make_date: The make_date of this UsageCharge.
        :type make_date: int
        """

        self._make_date = make_date

    @property
    def point(self):
        """Gets the point of this UsageCharge.

        ポイント請求額(税抜)

        :return: The point of this UsageCharge.
        :rtype: int
        """
        return self._point

    @point.setter
    def point(self, point):
        """Sets the point of this UsageCharge.

        ポイント請求額(税抜)

        :param point: The point of this UsageCharge.
        :type point: int
        """

        self._point = point

    @property
    def update_date(self):
        """Gets the update_date of this UsageCharge.

        更新日時

        :return: The update_date of this UsageCharge.
        :rtype: int
        """
        return self._update_date

    @update_date.setter
    def update_date(self, update_date):
        """Sets the update_date of this UsageCharge.

        更新日時

        :param update_date: The update_date of this UsageCharge.
        :type update_date: int
        """

        self._update_date = update_date
