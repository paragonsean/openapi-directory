# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateUsageChargeRequestUsageCharge(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, point: int=None):
        """CreateUsageChargeRequestUsageCharge - a model defined in OpenAPI

        :param description: The description of this CreateUsageChargeRequestUsageCharge.
        :param point: The point of this CreateUsageChargeRequestUsageCharge.
        """
        self.openapi_types = {
            'description': str,
            'point': int
        }

        self.attribute_map = {
            'description': 'description',
            'point': 'point'
        }

        self._description = description
        self._point = point

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateUsageChargeRequestUsageCharge':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The createUsageCharge_request_usage_charge of this CreateUsageChargeRequestUsageCharge.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this CreateUsageChargeRequestUsageCharge.

        従量課金の発生理由。使用可能文字は ASCII, JIS X 0208, JIS X 0201, JIS X 0212に限ります。（[デベロッパー](https://developer.shop-pro.jp) ページに掲載される各アプリの「従量課金」一覧で登録内容を確認できます。カラーミーショップ側がこのパラメータを参照して課金の内容を確認することがあります。）

        :return: The description of this CreateUsageChargeRequestUsageCharge.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateUsageChargeRequestUsageCharge.

        従量課金の発生理由。使用可能文字は ASCII, JIS X 0208, JIS X 0201, JIS X 0212に限ります。（[デベロッパー](https://developer.shop-pro.jp) ページに掲載される各アプリの「従量課金」一覧で登録内容を確認できます。カラーミーショップ側がこのパラメータを参照して課金の内容を確認することがあります。）

        :param description: The description of this CreateUsageChargeRequestUsageCharge.
        :type description: str
        """
        if description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")
        if description is not None and len(description) > 50:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `50`")

        self._description = description

    @property
    def point(self):
        """Gets the point of this CreateUsageChargeRequestUsageCharge.

        ポイント数（税抜）。100 円以上 100 万円以下が指定可能。このポイントに消費税を加算してショップオーナーに請求します。

        :return: The point of this CreateUsageChargeRequestUsageCharge.
        :rtype: int
        """
        return self._point

    @point.setter
    def point(self, point):
        """Sets the point of this CreateUsageChargeRequestUsageCharge.

        ポイント数（税抜）。100 円以上 100 万円以下が指定可能。このポイントに消費税を加算してショップオーナーに請求します。

        :param point: The point of this CreateUsageChargeRequestUsageCharge.
        :type point: int
        """
        if point is None:
            raise ValueError("Invalid value for `point`, must not be `None`")

        self._point = point
