# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_shop_script_tags200_response_script_tags_inner import GetShopScriptTags200ResponseScriptTagsInner
from openapi_server import util


class GetShopScriptTags200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, script_tags: List[GetShopScriptTags200ResponseScriptTagsInner]=None):
        """GetShopScriptTags200Response - a model defined in OpenAPI

        :param script_tags: The script_tags of this GetShopScriptTags200Response.
        """
        self.openapi_types = {
            'script_tags': List[GetShopScriptTags200ResponseScriptTagsInner]
        }

        self.attribute_map = {
            'script_tags': 'script_tags'
        }

        self._script_tags = script_tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetShopScriptTags200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getShopScriptTags_200_response of this GetShopScriptTags200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def script_tags(self):
        """Gets the script_tags of this GetShopScriptTags200Response.


        :return: The script_tags of this GetShopScriptTags200Response.
        :rtype: List[GetShopScriptTags200ResponseScriptTagsInner]
        """
        return self._script_tags

    @script_tags.setter
    def script_tags(self, script_tags):
        """Sets the script_tags of this GetShopScriptTags200Response.


        :param script_tags: The script_tags of this GetShopScriptTags200Response.
        :type script_tags: List[GetShopScriptTags200ResponseScriptTagsInner]
        """

        self._script_tags = script_tags
