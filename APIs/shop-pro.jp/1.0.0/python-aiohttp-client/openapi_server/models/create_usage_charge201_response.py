# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_usage_charge201_response_usage_charge import CreateUsageCharge201ResponseUsageCharge
from openapi_server import util


class CreateUsageCharge201Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, usage_charge: CreateUsageCharge201ResponseUsageCharge=None):
        """CreateUsageCharge201Response - a model defined in OpenAPI

        :param usage_charge: The usage_charge of this CreateUsageCharge201Response.
        """
        self.openapi_types = {
            'usage_charge': CreateUsageCharge201ResponseUsageCharge
        }

        self.attribute_map = {
            'usage_charge': 'usage_charge'
        }

        self._usage_charge = usage_charge

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateUsageCharge201Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The createUsageCharge_201_response of this CreateUsageCharge201Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def usage_charge(self):
        """Gets the usage_charge of this CreateUsageCharge201Response.


        :return: The usage_charge of this CreateUsageCharge201Response.
        :rtype: CreateUsageCharge201ResponseUsageCharge
        """
        return self._usage_charge

    @usage_charge.setter
    def usage_charge(self, usage_charge):
        """Sets the usage_charge of this CreateUsageCharge201Response.


        :param usage_charge: The usage_charge of this CreateUsageCharge201Response.
        :type usage_charge: CreateUsageCharge201ResponseUsageCharge
        """

        self._usage_charge = usage_charge
