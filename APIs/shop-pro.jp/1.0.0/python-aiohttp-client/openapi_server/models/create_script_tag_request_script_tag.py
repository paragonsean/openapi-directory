# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateScriptTagRequestScriptTag(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_scope: str=None, src: str=None):
        """CreateScriptTagRequestScriptTag - a model defined in OpenAPI

        :param display_scope: The display_scope of this CreateScriptTagRequestScriptTag.
        :param src: The src of this CreateScriptTagRequestScriptTag.
        """
        self.openapi_types = {
            'display_scope': str,
            'src': str
        }

        self.attribute_map = {
            'display_scope': 'display_scope',
            'src': 'src'
        }

        self._display_scope = display_scope
        self._src = src

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateScriptTagRequestScriptTag':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The createScriptTag_request_script_tag of this CreateScriptTagRequestScriptTag.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_scope(self):
        """Gets the display_scope of this CreateScriptTagRequestScriptTag.

        スクリプトを出力するページ。  - `all`: ショップページと注文完了ページの両方 - `shop`: ショップページ - `thanks_page`: 注文完了ページ - `cart`: カートの途中のページ 

        :return: The display_scope of this CreateScriptTagRequestScriptTag.
        :rtype: str
        """
        return self._display_scope

    @display_scope.setter
    def display_scope(self, display_scope):
        """Sets the display_scope of this CreateScriptTagRequestScriptTag.

        スクリプトを出力するページ。  - `all`: ショップページと注文完了ページの両方 - `shop`: ショップページ - `thanks_page`: 注文完了ページ - `cart`: カートの途中のページ 

        :param display_scope: The display_scope of this CreateScriptTagRequestScriptTag.
        :type display_scope: str
        """
        allowed_values = ["all", "shop", "thanks_page", "cart"]  # noqa: E501
        if display_scope not in allowed_values:
            raise ValueError(
                "Invalid value for `display_scope` ({0}), must be one of {1}"
                .format(display_scope, allowed_values)
            )

        self._display_scope = display_scope

    @property
    def src(self):
        """Gets the src of this CreateScriptTagRequestScriptTag.

        スクリプトURL

        :return: The src of this CreateScriptTagRequestScriptTag.
        :rtype: str
        """
        return self._src

    @src.setter
    def src(self, src):
        """Sets the src of this CreateScriptTagRequestScriptTag.

        スクリプトURL

        :param src: The src of this CreateScriptTagRequestScriptTag.
        :type src: str
        """

        self._src = src
