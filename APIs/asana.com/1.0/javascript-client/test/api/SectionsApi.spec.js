/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Asana);
  }
}(this, function(expect, Asana) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Asana.SectionsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SectionsApi', function() {
    describe('addTaskForSection', function() {
      it('should call addTaskForSection successfully', function(done) {
        //uncomment below and update the code to test addTaskForSection
        //instance.addTaskForSection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSectionForProject', function() {
      it('should call createSectionForProject successfully', function(done) {
        //uncomment below and update the code to test createSectionForProject
        //instance.createSectionForProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSection', function() {
      it('should call deleteSection successfully', function(done) {
        //uncomment below and update the code to test deleteSection
        //instance.deleteSection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSection', function() {
      it('should call getSection successfully', function(done) {
        //uncomment below and update the code to test getSection
        //instance.getSection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSectionsForProject', function() {
      it('should call getSectionsForProject successfully', function(done) {
        //uncomment below and update the code to test getSectionsForProject
        //instance.getSectionsForProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('insertSectionForProject', function() {
      it('should call insertSectionForProject successfully', function(done) {
        //uncomment below and update the code to test insertSectionForProject
        //instance.insertSectionForProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSection', function() {
      it('should call updateSection successfully', function(done) {
        //uncomment below and update the code to test updateSection
        //instance.updateSection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
