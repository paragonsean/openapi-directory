/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import GetJob200Response from '../model/GetJob200Response';
import GetProjectTemplate200Response from '../model/GetProjectTemplate200Response';
import GetProjectTemplates200Response from '../model/GetProjectTemplates200Response';
import InstantiateProjectRequest from '../model/InstantiateProjectRequest';

/**
* ProjectTemplates service.
* @module api/ProjectTemplatesApi
* @version 1.0
*/
export default class ProjectTemplatesApi {

    /**
    * Constructs a new ProjectTemplatesApi. 
    * @alias module:api/ProjectTemplatesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getProjectTemplate operation.
     * @callback module:api/ProjectTemplatesApi~getProjectTemplateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetProjectTemplate200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a project template
     * Returns the complete project template record for a single project template.
     * @param {String} projectTemplateGid Globally unique identifier for the project template.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
     * @param {Array.<String>} [optFields] Defines fields to return. Some requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below. The id of included objects will always be returned, regardless of the field options.
     * @param {module:api/ProjectTemplatesApi~getProjectTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetProjectTemplate200Response}
     */
    getProjectTemplate(projectTemplateGid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'projectTemplateGid' is set
      if (projectTemplateGid === undefined || projectTemplateGid === null) {
        throw new Error("Missing the required parameter 'projectTemplateGid' when calling getProjectTemplate");
      }

      let pathParams = {
        'project_template_gid': projectTemplateGid
      };
      let queryParams = {
        'opt_pretty': opts['optPretty'],
        'opt_fields': this.apiClient.buildCollectionParam(opts['optFields'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['personalAccessToken', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetProjectTemplate200Response;
      return this.apiClient.callApi(
        '/project_templates/{project_template_gid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getProjectTemplates operation.
     * @callback module:api/ProjectTemplatesApi~getProjectTemplatesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetProjectTemplates200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get multiple project templates
     * Returns the compact project template records for all project templates in the given team or workspace.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
     * @param {Array.<String>} [optFields] Defines fields to return. Some requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below. The id of included objects will always be returned, regardless of the field options.
     * @param {String} [workspace] The workspace to filter results on.
     * @param {String} [team] The team to filter projects on.
     * @param {Number} [limit] Results per page. The number of objects to return per page. The value must be between 1 and 100.
     * @param {String} [offset] Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
     * @param {module:api/ProjectTemplatesApi~getProjectTemplatesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetProjectTemplates200Response}
     */
    getProjectTemplates(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'opt_pretty': opts['optPretty'],
        'opt_fields': this.apiClient.buildCollectionParam(opts['optFields'], 'csv'),
        'workspace': opts['workspace'],
        'team': opts['team'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['personalAccessToken', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetProjectTemplates200Response;
      return this.apiClient.callApi(
        '/project_templates', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getProjectTemplatesForTeam operation.
     * @callback module:api/ProjectTemplatesApi~getProjectTemplatesForTeamCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetProjectTemplates200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a team's project templates
     * Returns the compact project template records for all project templates in the team.
     * @param {String} teamGid Globally unique identifier for the team.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
     * @param {Array.<String>} [optFields] Defines fields to return. Some requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below. The id of included objects will always be returned, regardless of the field options.
     * @param {Number} [limit] Results per page. The number of objects to return per page. The value must be between 1 and 100.
     * @param {String} [offset] Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
     * @param {module:api/ProjectTemplatesApi~getProjectTemplatesForTeamCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetProjectTemplates200Response}
     */
    getProjectTemplatesForTeam(teamGid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'teamGid' is set
      if (teamGid === undefined || teamGid === null) {
        throw new Error("Missing the required parameter 'teamGid' when calling getProjectTemplatesForTeam");
      }

      let pathParams = {
        'team_gid': teamGid
      };
      let queryParams = {
        'opt_pretty': opts['optPretty'],
        'opt_fields': this.apiClient.buildCollectionParam(opts['optFields'], 'csv'),
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['personalAccessToken', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetProjectTemplates200Response;
      return this.apiClient.callApi(
        '/teams/{team_gid}/project_templates', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the instantiateProject operation.
     * @callback module:api/ProjectTemplatesApi~instantiateProjectCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetJob200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Instantiate a project from a project template
     * Creates and returns a job that will asynchronously handle the project instantiation.  To form this request, it is recommended to first make a request to [get a project template](/docs/get-a-project-template). Then, from the response, copy the `gid` from the object in the `requested_dates` array. This `gid` should be used in `requested_dates` to instantiate a project.  _Note: The body of this request will differ if your workspace is an organization. To determine if your workspace is an organization, use the [is_organization](/docs/workspace) parameter._
     * @param {String} projectTemplateGid Globally unique identifier for the project template.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
     * @param {Array.<String>} [optFields] Defines fields to return. Some requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below. The id of included objects will always be returned, regardless of the field options.
     * @param {module:model/InstantiateProjectRequest} [instantiateProjectRequest] Describes the inputs used for instantiating a project, such as the resulting project's name, which team it should be created in, and values for date variables.
     * @param {module:api/ProjectTemplatesApi~instantiateProjectCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetJob200Response}
     */
    instantiateProject(projectTemplateGid, opts, callback) {
      opts = opts || {};
      let postBody = opts['instantiateProjectRequest'];
      // verify the required parameter 'projectTemplateGid' is set
      if (projectTemplateGid === undefined || projectTemplateGid === null) {
        throw new Error("Missing the required parameter 'projectTemplateGid' when calling instantiateProject");
      }

      let pathParams = {
        'project_template_gid': projectTemplateGid
      };
      let queryParams = {
        'opt_pretty': opts['optPretty'],
        'opt_fields': this.apiClient.buildCollectionParam(opts['optFields'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['personalAccessToken', 'oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetJob200Response;
      return this.apiClient.callApi(
        '/project_templates/{project_template_gid}/instantiateProject', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
