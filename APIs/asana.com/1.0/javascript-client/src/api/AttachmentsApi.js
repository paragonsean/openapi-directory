/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateAttachmentForObject200Response from '../model/CreateAttachmentForObject200Response';
import DeleteAttachment200Response from '../model/DeleteAttachment200Response';
import ErrorResponse from '../model/ErrorResponse';
import GetAttachmentsForObject200Response from '../model/GetAttachmentsForObject200Response';

/**
* Attachments service.
* @module api/AttachmentsApi
* @version 1.0
*/
export default class AttachmentsApi {

    /**
    * Constructs a new AttachmentsApi. 
    * @alias module:api/AttachmentsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createAttachmentForObject operation.
     * @callback module:api/AttachmentsApi~createAttachmentForObjectCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateAttachmentForObject200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Upload an attachment
     * Upload an attachment.  This method uploads an attachment on an object and returns the compact record for the created attachment object. This is possible by either:  - Providing the URL of the external resource being attached, or - Downloading the file content first and then uploading it as any other attachment. Note that it is not possible to attach files from third party services such as Dropbox, Box, Vimeo & Google Drive via the API  The 100MB size limit on attachments in Asana is enforced on this endpoint.  This endpoint expects a multipart/form-data encoded request containing the full contents of the file to be uploaded.  Requests made should follow the HTTP/1.1 specification that line terminators are of the form `CRLF` or `\\r\\n` outlined [here](http://www.w3.org/Protocols/HTTP/1.1/draft-ietf-http-v11-spec-01#Basic-Rules) in order for the server to reliably and properly handle the request.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
     * @param {Array.<String>} [optFields] Defines fields to return. Some requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below. The id of included objects will always be returned, regardless of the field options.
     * @param {Boolean} [connectToApp] *Optional*. Only relevant for external attachments with a parent task. A boolean indicating whether the current app should be connected with the attachment for the purposes of showing an app components widget. Requires the app to have been added to a project the parent task is in. 
     * @param {File} [file] Required for `asana` attachments. 
     * @param {String} [name] The name of the external resource being attached. Required for attachments of type `external`. 
     * @param {String} [parent] Required identifier of the parent task, project, or project_brief, as a string. 
     * @param {module:model/String} [resourceSubtype] The type of the attachment. Must be one of the given values. If not specified, a file attachment of type `asana` will be assumed. Note that if the value of `resource_subtype` is `external`, a `parent`, `name`, and `url` must also be provided. 
     * @param {String} [url] The URL of the external resource being attached. Required for attachments of type `external`. 
     * @param {module:api/AttachmentsApi~createAttachmentForObjectCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateAttachmentForObject200Response}
     */
    createAttachmentForObject(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'opt_pretty': opts['optPretty'],
        'opt_fields': this.apiClient.buildCollectionParam(opts['optFields'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
        'connect_to_app': opts['connectToApp'],
        'file': opts['file'],
        'name': opts['name'],
        'parent': opts['parent'],
        'resource_subtype': opts['resourceSubtype'],
        'url': opts['url']
      };

      let authNames = ['personalAccessToken', 'oauth2'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = CreateAttachmentForObject200Response;
      return this.apiClient.callApi(
        '/attachments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteAttachment operation.
     * @callback module:api/AttachmentsApi~deleteAttachmentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteAttachment200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an attachment
     * Deletes a specific, existing attachment.  Returns an empty data record.
     * @param {String} attachmentGid Globally unique identifier for the attachment.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
     * @param {Array.<String>} [optFields] Defines fields to return. Some requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below. The id of included objects will always be returned, regardless of the field options.
     * @param {module:api/AttachmentsApi~deleteAttachmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteAttachment200Response}
     */
    deleteAttachment(attachmentGid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'attachmentGid' is set
      if (attachmentGid === undefined || attachmentGid === null) {
        throw new Error("Missing the required parameter 'attachmentGid' when calling deleteAttachment");
      }

      let pathParams = {
        'attachment_gid': attachmentGid
      };
      let queryParams = {
        'opt_pretty': opts['optPretty'],
        'opt_fields': this.apiClient.buildCollectionParam(opts['optFields'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['personalAccessToken', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DeleteAttachment200Response;
      return this.apiClient.callApi(
        '/attachments/{attachment_gid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAttachment operation.
     * @callback module:api/AttachmentsApi~getAttachmentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateAttachmentForObject200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get an attachment
     * Get the full record for a single attachment.
     * @param {String} attachmentGid Globally unique identifier for the attachment.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
     * @param {Array.<String>} [optFields] Defines fields to return. Some requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below. The id of included objects will always be returned, regardless of the field options.
     * @param {module:api/AttachmentsApi~getAttachmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateAttachmentForObject200Response}
     */
    getAttachment(attachmentGid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'attachmentGid' is set
      if (attachmentGid === undefined || attachmentGid === null) {
        throw new Error("Missing the required parameter 'attachmentGid' when calling getAttachment");
      }

      let pathParams = {
        'attachment_gid': attachmentGid
      };
      let queryParams = {
        'opt_pretty': opts['optPretty'],
        'opt_fields': this.apiClient.buildCollectionParam(opts['optFields'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['personalAccessToken', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CreateAttachmentForObject200Response;
      return this.apiClient.callApi(
        '/attachments/{attachment_gid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAttachmentsForObject operation.
     * @callback module:api/AttachmentsApi~getAttachmentsForObjectCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAttachmentsForObject200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get attachments from an object
     * Returns the compact records for all attachments on the object.  There are three possible `parent` values for this request: `project`, `project_brief`, and `task`. For a project, an attachment refers to a file uploaded to the \"Key resources\" section in the project Overview. For a project brief, an attachment refers to inline files in the project brief itself. For a task, an attachment refers to a file directly associated to that task.
     * @param {String} parent Globally unique identifier for object to fetch statuses from. Must be a GID for a `project`, `project_brief`, or `task`.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
     * @param {Array.<String>} [optFields] Defines fields to return. Some requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below. The id of included objects will always be returned, regardless of the field options.
     * @param {Number} [limit] Results per page. The number of objects to return per page. The value must be between 1 and 100.
     * @param {String} [offset] Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
     * @param {module:api/AttachmentsApi~getAttachmentsForObjectCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAttachmentsForObject200Response}
     */
    getAttachmentsForObject(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling getAttachmentsForObject");
      }

      let pathParams = {
      };
      let queryParams = {
        'opt_pretty': opts['optPretty'],
        'opt_fields': this.apiClient.buildCollectionParam(opts['optFields'], 'csv'),
        'limit': opts['limit'],
        'offset': opts['offset'],
        'parent': parent
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['personalAccessToken', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetAttachmentsForObject200Response;
      return this.apiClient.callApi(
        '/attachments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
