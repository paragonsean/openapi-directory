/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import GetPortfolioMembership200Response from '../model/GetPortfolioMembership200Response';
import GetPortfolioMemberships200Response from '../model/GetPortfolioMemberships200Response';

/**
* PortfolioMemberships service.
* @module api/PortfolioMembershipsApi
* @version 1.0
*/
export default class PortfolioMembershipsApi {

    /**
    * Constructs a new PortfolioMembershipsApi. 
    * @alias module:api/PortfolioMembershipsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getPortfolioMembership operation.
     * @callback module:api/PortfolioMembershipsApi~getPortfolioMembershipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetPortfolioMembership200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a portfolio membership
     * Returns the complete portfolio record for a single portfolio membership.
     * @param {String} portfolioMembershipGid 
     * @param {Object} opts Optional parameters
     * @param {Boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
     * @param {Array.<String>} [optFields] Defines fields to return. Some requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below. The id of included objects will always be returned, regardless of the field options.
     * @param {module:api/PortfolioMembershipsApi~getPortfolioMembershipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetPortfolioMembership200Response}
     */
    getPortfolioMembership(portfolioMembershipGid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'portfolioMembershipGid' is set
      if (portfolioMembershipGid === undefined || portfolioMembershipGid === null) {
        throw new Error("Missing the required parameter 'portfolioMembershipGid' when calling getPortfolioMembership");
      }

      let pathParams = {
        'portfolio_membership_gid': portfolioMembershipGid
      };
      let queryParams = {
        'opt_pretty': opts['optPretty'],
        'opt_fields': this.apiClient.buildCollectionParam(opts['optFields'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['personalAccessToken', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetPortfolioMembership200Response;
      return this.apiClient.callApi(
        '/portfolio_memberships/{portfolio_membership_gid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPortfolioMemberships operation.
     * @callback module:api/PortfolioMembershipsApi~getPortfolioMembershipsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetPortfolioMemberships200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get multiple portfolio memberships
     * Returns a list of portfolio memberships in compact representation. You must specify `portfolio`, `portfolio` and `user`, or `workspace` and `user`.
     * @param {Object} opts Optional parameters
     * @param {String} [portfolio] The portfolio to filter results on.
     * @param {String} [workspace] The workspace to filter results on.
     * @param {String} [user] A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.
     * @param {Boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
     * @param {Array.<String>} [optFields] Defines fields to return. Some requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below. The id of included objects will always be returned, regardless of the field options.
     * @param {Number} [limit] Results per page. The number of objects to return per page. The value must be between 1 and 100.
     * @param {String} [offset] Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
     * @param {module:api/PortfolioMembershipsApi~getPortfolioMembershipsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetPortfolioMemberships200Response}
     */
    getPortfolioMemberships(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'portfolio': opts['portfolio'],
        'workspace': opts['workspace'],
        'user': opts['user'],
        'opt_pretty': opts['optPretty'],
        'opt_fields': this.apiClient.buildCollectionParam(opts['optFields'], 'csv'),
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['personalAccessToken', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetPortfolioMemberships200Response;
      return this.apiClient.callApi(
        '/portfolio_memberships', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPortfolioMembershipsForPortfolio operation.
     * @callback module:api/PortfolioMembershipsApi~getPortfolioMembershipsForPortfolioCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetPortfolioMemberships200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get memberships from a portfolio
     * Returns the compact portfolio membership records for the portfolio.
     * @param {String} portfolioGid Globally unique identifier for the portfolio.
     * @param {Object} opts Optional parameters
     * @param {String} [user] A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.
     * @param {Boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
     * @param {Array.<String>} [optFields] Defines fields to return. Some requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below. The id of included objects will always be returned, regardless of the field options.
     * @param {Number} [limit] Results per page. The number of objects to return per page. The value must be between 1 and 100.
     * @param {String} [offset] Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
     * @param {module:api/PortfolioMembershipsApi~getPortfolioMembershipsForPortfolioCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetPortfolioMemberships200Response}
     */
    getPortfolioMembershipsForPortfolio(portfolioGid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'portfolioGid' is set
      if (portfolioGid === undefined || portfolioGid === null) {
        throw new Error("Missing the required parameter 'portfolioGid' when calling getPortfolioMembershipsForPortfolio");
      }

      let pathParams = {
        'portfolio_gid': portfolioGid
      };
      let queryParams = {
        'user': opts['user'],
        'opt_pretty': opts['optPretty'],
        'opt_fields': this.apiClient.buildCollectionParam(opts['optFields'], 'csv'),
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['personalAccessToken', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetPortfolioMemberships200Response;
      return this.apiClient.callApi(
        '/portfolios/{portfolio_gid}/portfolio_memberships', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
