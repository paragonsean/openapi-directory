/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EnumOptionInsertRequest model module.
 * @module model/EnumOptionInsertRequest
 * @version 1.0
 */
class EnumOptionInsertRequest {
    /**
     * Constructs a new <code>EnumOptionInsertRequest</code>.
     * @alias module:model/EnumOptionInsertRequest
     * @param enumOption {String} The gid of the enum option to relocate.
     */
    constructor(enumOption) { 
        
        EnumOptionInsertRequest.initialize(this, enumOption);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, enumOption) { 
        obj['enum_option'] = enumOption;
    }

    /**
     * Constructs a <code>EnumOptionInsertRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnumOptionInsertRequest} obj Optional instance to populate.
     * @return {module:model/EnumOptionInsertRequest} The populated <code>EnumOptionInsertRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnumOptionInsertRequest();

            if (data.hasOwnProperty('after_enum_option')) {
                obj['after_enum_option'] = ApiClient.convertToType(data['after_enum_option'], 'String');
            }
            if (data.hasOwnProperty('before_enum_option')) {
                obj['before_enum_option'] = ApiClient.convertToType(data['before_enum_option'], 'String');
            }
            if (data.hasOwnProperty('enum_option')) {
                obj['enum_option'] = ApiClient.convertToType(data['enum_option'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnumOptionInsertRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnumOptionInsertRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EnumOptionInsertRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['after_enum_option'] && !(typeof data['after_enum_option'] === 'string' || data['after_enum_option'] instanceof String)) {
            throw new Error("Expected the field `after_enum_option` to be a primitive type in the JSON string but got " + data['after_enum_option']);
        }
        // ensure the json data is a string
        if (data['before_enum_option'] && !(typeof data['before_enum_option'] === 'string' || data['before_enum_option'] instanceof String)) {
            throw new Error("Expected the field `before_enum_option` to be a primitive type in the JSON string but got " + data['before_enum_option']);
        }
        // ensure the json data is a string
        if (data['enum_option'] && !(typeof data['enum_option'] === 'string' || data['enum_option'] instanceof String)) {
            throw new Error("Expected the field `enum_option` to be a primitive type in the JSON string but got " + data['enum_option']);
        }

        return true;
    }


}

EnumOptionInsertRequest.RequiredProperties = ["enum_option"];

/**
 * An existing enum option within this custom field after which the new enum option should be inserted. Cannot be provided together with before_enum_option.
 * @member {String} after_enum_option
 */
EnumOptionInsertRequest.prototype['after_enum_option'] = undefined;

/**
 * An existing enum option within this custom field before which the new enum option should be inserted. Cannot be provided together with after_enum_option.
 * @member {String} before_enum_option
 */
EnumOptionInsertRequest.prototype['before_enum_option'] = undefined;

/**
 * The gid of the enum option to relocate.
 * @member {String} enum_option
 */
EnumOptionInsertRequest.prototype['enum_option'] = undefined;






export default EnumOptionInsertRequest;

