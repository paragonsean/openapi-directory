/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Like from './Like';
import StatusUpdateBase from './StatusUpdateBase';
import StatusUpdateResponseAllOfParent from './StatusUpdateResponseAllOfParent';
import UserCompact from './UserCompact';

/**
 * The StatusUpdateResponse model module.
 * @module model/StatusUpdateResponse
 * @version 1.0
 */
class StatusUpdateResponse {
    /**
     * Constructs a new <code>StatusUpdateResponse</code>.
     * @alias module:model/StatusUpdateResponse
     * @implements module:model/StatusUpdateBase
     * @param statusType {module:model/StatusUpdateResponse.StatusTypeEnum} The type associated with the status update. This represents the current state of the object this object is on.
     * @param text {String} The text content of the status update.
     */
    constructor(statusType, text) { 
        StatusUpdateBase.initialize(this, statusType, text);
        StatusUpdateResponse.initialize(this, statusType, text);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, statusType, text) { 
        obj['status_type'] = statusType;
        obj['text'] = text;
    }

    /**
     * Constructs a <code>StatusUpdateResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StatusUpdateResponse} obj Optional instance to populate.
     * @return {module:model/StatusUpdateResponse} The populated <code>StatusUpdateResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StatusUpdateResponse();
            StatusUpdateBase.constructFromObject(data, obj);

            if (data.hasOwnProperty('gid')) {
                obj['gid'] = ApiClient.convertToType(data['gid'], 'String');
            }
            if (data.hasOwnProperty('resource_type')) {
                obj['resource_type'] = ApiClient.convertToType(data['resource_type'], 'String');
            }
            if (data.hasOwnProperty('resource_subtype')) {
                obj['resource_subtype'] = ApiClient.convertToType(data['resource_subtype'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('html_text')) {
                obj['html_text'] = ApiClient.convertToType(data['html_text'], 'String');
            }
            if (data.hasOwnProperty('status_type')) {
                obj['status_type'] = ApiClient.convertToType(data['status_type'], 'String');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('author')) {
                obj['author'] = UserCompact.constructFromObject(data['author']);
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('created_by')) {
                obj['created_by'] = UserCompact.constructFromObject(data['created_by']);
            }
            if (data.hasOwnProperty('hearted')) {
                obj['hearted'] = ApiClient.convertToType(data['hearted'], 'Boolean');
            }
            if (data.hasOwnProperty('hearts')) {
                obj['hearts'] = ApiClient.convertToType(data['hearts'], [Like]);
            }
            if (data.hasOwnProperty('liked')) {
                obj['liked'] = ApiClient.convertToType(data['liked'], 'Boolean');
            }
            if (data.hasOwnProperty('likes')) {
                obj['likes'] = ApiClient.convertToType(data['likes'], [Like]);
            }
            if (data.hasOwnProperty('modified_at')) {
                obj['modified_at'] = ApiClient.convertToType(data['modified_at'], 'Date');
            }
            if (data.hasOwnProperty('num_hearts')) {
                obj['num_hearts'] = ApiClient.convertToType(data['num_hearts'], 'Number');
            }
            if (data.hasOwnProperty('num_likes')) {
                obj['num_likes'] = ApiClient.convertToType(data['num_likes'], 'Number');
            }
            if (data.hasOwnProperty('parent')) {
                obj['parent'] = StatusUpdateResponseAllOfParent.constructFromObject(data['parent']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StatusUpdateResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StatusUpdateResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StatusUpdateResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['gid'] && !(typeof data['gid'] === 'string' || data['gid'] instanceof String)) {
            throw new Error("Expected the field `gid` to be a primitive type in the JSON string but got " + data['gid']);
        }
        // ensure the json data is a string
        if (data['resource_type'] && !(typeof data['resource_type'] === 'string' || data['resource_type'] instanceof String)) {
            throw new Error("Expected the field `resource_type` to be a primitive type in the JSON string but got " + data['resource_type']);
        }
        // ensure the json data is a string
        if (data['resource_subtype'] && !(typeof data['resource_subtype'] === 'string' || data['resource_subtype'] instanceof String)) {
            throw new Error("Expected the field `resource_subtype` to be a primitive type in the JSON string but got " + data['resource_subtype']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['html_text'] && !(typeof data['html_text'] === 'string' || data['html_text'] instanceof String)) {
            throw new Error("Expected the field `html_text` to be a primitive type in the JSON string but got " + data['html_text']);
        }
        // ensure the json data is a string
        if (data['status_type'] && !(typeof data['status_type'] === 'string' || data['status_type'] instanceof String)) {
            throw new Error("Expected the field `status_type` to be a primitive type in the JSON string but got " + data['status_type']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }
        // validate the optional field `author`
        if (data['author']) { // data not null
          UserCompact.validateJSON(data['author']);
        }
        // validate the optional field `created_by`
        if (data['created_by']) { // data not null
          UserCompact.validateJSON(data['created_by']);
        }
        if (data['hearts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['hearts'])) {
                throw new Error("Expected the field `hearts` to be an array in the JSON data but got " + data['hearts']);
            }
            // validate the optional field `hearts` (array)
            for (const item of data['hearts']) {
                Like.validateJSON(item);
            };
        }
        if (data['likes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['likes'])) {
                throw new Error("Expected the field `likes` to be an array in the JSON data but got " + data['likes']);
            }
            // validate the optional field `likes` (array)
            for (const item of data['likes']) {
                Like.validateJSON(item);
            };
        }
        // validate the optional field `parent`
        if (data['parent']) { // data not null
          StatusUpdateResponseAllOfParent.validateJSON(data['parent']);
        }

        return true;
    }


}

StatusUpdateResponse.RequiredProperties = ["status_type", "text"];

/**
 * Globally unique identifier of the resource, as a string.
 * @member {String} gid
 */
StatusUpdateResponse.prototype['gid'] = undefined;

/**
 * The base type of this resource.
 * @member {String} resource_type
 */
StatusUpdateResponse.prototype['resource_type'] = undefined;

/**
 * The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning. The `resource_subtype`s for `status` objects represent the type of their parent.
 * @member {module:model/StatusUpdateResponse.ResourceSubtypeEnum} resource_subtype
 */
StatusUpdateResponse.prototype['resource_subtype'] = undefined;

/**
 * The title of the status update.
 * @member {String} title
 */
StatusUpdateResponse.prototype['title'] = undefined;

/**
 * [Opt In](/docs/input-output-options). The text content of the status update with formatting as HTML.
 * @member {String} html_text
 */
StatusUpdateResponse.prototype['html_text'] = undefined;

/**
 * The type associated with the status update. This represents the current state of the object this object is on.
 * @member {module:model/StatusUpdateResponse.StatusTypeEnum} status_type
 */
StatusUpdateResponse.prototype['status_type'] = undefined;

/**
 * The text content of the status update.
 * @member {String} text
 */
StatusUpdateResponse.prototype['text'] = undefined;

/**
 * @member {module:model/UserCompact} author
 */
StatusUpdateResponse.prototype['author'] = undefined;

/**
 * The time at which this resource was created.
 * @member {Date} created_at
 */
StatusUpdateResponse.prototype['created_at'] = undefined;

/**
 * @member {module:model/UserCompact} created_by
 */
StatusUpdateResponse.prototype['created_by'] = undefined;

/**
 * *Deprecated - please use liked instead* True if the status is hearted by the authorized user, false if not.
 * @member {Boolean} hearted
 */
StatusUpdateResponse.prototype['hearted'] = undefined;

/**
 * *Deprecated - please use likes instead* Array of likes for users who have hearted this status.
 * @member {Array.<module:model/Like>} hearts
 */
StatusUpdateResponse.prototype['hearts'] = undefined;

/**
 * True if the status is liked by the authorized user, false if not.
 * @member {Boolean} liked
 */
StatusUpdateResponse.prototype['liked'] = undefined;

/**
 * Array of likes for users who have liked this status.
 * @member {Array.<module:model/Like>} likes
 */
StatusUpdateResponse.prototype['likes'] = undefined;

/**
 * The time at which this project status was last modified. *Note: This does not currently reflect any changes in associations such as comments that may have been added or removed from the status.*
 * @member {Date} modified_at
 */
StatusUpdateResponse.prototype['modified_at'] = undefined;

/**
 * *Deprecated - please use likes instead* The number of users who have hearted this status.
 * @member {Number} num_hearts
 */
StatusUpdateResponse.prototype['num_hearts'] = undefined;

/**
 * The number of users who have liked this status.
 * @member {Number} num_likes
 */
StatusUpdateResponse.prototype['num_likes'] = undefined;

/**
 * @member {module:model/StatusUpdateResponseAllOfParent} parent
 */
StatusUpdateResponse.prototype['parent'] = undefined;


// Implement StatusUpdateBase interface:
/**
 * Globally unique identifier of the resource, as a string.
 * @member {String} gid
 */
StatusUpdateBase.prototype['gid'] = undefined;
/**
 * The base type of this resource.
 * @member {String} resource_type
 */
StatusUpdateBase.prototype['resource_type'] = undefined;
/**
 * The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning. The `resource_subtype`s for `status` objects represent the type of their parent.
 * @member {module:model/StatusUpdateBase.ResourceSubtypeEnum} resource_subtype
 */
StatusUpdateBase.prototype['resource_subtype'] = undefined;
/**
 * The title of the status update.
 * @member {String} title
 */
StatusUpdateBase.prototype['title'] = undefined;
/**
 * [Opt In](/docs/input-output-options). The text content of the status update with formatting as HTML.
 * @member {String} html_text
 */
StatusUpdateBase.prototype['html_text'] = undefined;
/**
 * The type associated with the status update. This represents the current state of the object this object is on.
 * @member {module:model/StatusUpdateBase.StatusTypeEnum} status_type
 */
StatusUpdateBase.prototype['status_type'] = undefined;
/**
 * The text content of the status update.
 * @member {String} text
 */
StatusUpdateBase.prototype['text'] = undefined;



/**
 * Allowed values for the <code>resource_subtype</code> property.
 * @enum {String}
 * @readonly
 */
StatusUpdateResponse['ResourceSubtypeEnum'] = {

    /**
     * value: "project_status_update"
     * @const
     */
    "project_status_update": "project_status_update",

    /**
     * value: "portfolio_status_update"
     * @const
     */
    "portfolio_status_update": "portfolio_status_update",

    /**
     * value: "goal_status_update"
     * @const
     */
    "goal_status_update": "goal_status_update"
};


/**
 * Allowed values for the <code>status_type</code> property.
 * @enum {String}
 * @readonly
 */
StatusUpdateResponse['StatusTypeEnum'] = {

    /**
     * value: "on_track"
     * @const
     */
    "on_track": "on_track",

    /**
     * value: "at_risk"
     * @const
     */
    "at_risk": "at_risk",

    /**
     * value: "off_track"
     * @const
     */
    "off_track": "off_track",

    /**
     * value: "on_hold"
     * @const
     */
    "on_hold": "on_hold",

    /**
     * value: "complete"
     * @const
     */
    "complete": "complete",

    /**
     * value: "achieved"
     * @const
     */
    "achieved": "achieved",

    /**
     * value: "partial"
     * @const
     */
    "partial": "partial",

    /**
     * value: "missed"
     * @const
     */
    "missed": "missed",

    /**
     * value: "dropped"
     * @const
     */
    "dropped": "dropped"
};



export default StatusUpdateResponse;

