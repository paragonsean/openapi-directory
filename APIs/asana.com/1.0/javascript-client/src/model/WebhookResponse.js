/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AsanaNamedResource from './AsanaNamedResource';
import WebhookCompact from './WebhookCompact';
import WebhookResponseAllOfFilters from './WebhookResponseAllOfFilters';

/**
 * The WebhookResponse model module.
 * @module model/WebhookResponse
 * @version 1.0
 */
class WebhookResponse {
    /**
     * Constructs a new <code>WebhookResponse</code>.
     * @alias module:model/WebhookResponse
     * @implements module:model/WebhookCompact
     */
    constructor() { 
        WebhookCompact.initialize(this);
        WebhookResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WebhookResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebhookResponse} obj Optional instance to populate.
     * @return {module:model/WebhookResponse} The populated <code>WebhookResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebhookResponse();
            WebhookCompact.constructFromObject(data, obj);

            if (data.hasOwnProperty('gid')) {
                obj['gid'] = ApiClient.convertToType(data['gid'], 'String');
            }
            if (data.hasOwnProperty('resource_type')) {
                obj['resource_type'] = ApiClient.convertToType(data['resource_type'], 'String');
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('resource')) {
                obj['resource'] = AsanaNamedResource.constructFromObject(data['resource']);
            }
            if (data.hasOwnProperty('target')) {
                obj['target'] = ApiClient.convertToType(data['target'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('filters')) {
                obj['filters'] = ApiClient.convertToType(data['filters'], [WebhookResponseAllOfFilters]);
            }
            if (data.hasOwnProperty('last_failure_at')) {
                obj['last_failure_at'] = ApiClient.convertToType(data['last_failure_at'], 'Date');
            }
            if (data.hasOwnProperty('last_failure_content')) {
                obj['last_failure_content'] = ApiClient.convertToType(data['last_failure_content'], 'String');
            }
            if (data.hasOwnProperty('last_success_at')) {
                obj['last_success_at'] = ApiClient.convertToType(data['last_success_at'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebhookResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebhookResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['gid'] && !(typeof data['gid'] === 'string' || data['gid'] instanceof String)) {
            throw new Error("Expected the field `gid` to be a primitive type in the JSON string but got " + data['gid']);
        }
        // ensure the json data is a string
        if (data['resource_type'] && !(typeof data['resource_type'] === 'string' || data['resource_type'] instanceof String)) {
            throw new Error("Expected the field `resource_type` to be a primitive type in the JSON string but got " + data['resource_type']);
        }
        // validate the optional field `resource`
        if (data['resource']) { // data not null
          AsanaNamedResource.validateJSON(data['resource']);
        }
        // ensure the json data is a string
        if (data['target'] && !(typeof data['target'] === 'string' || data['target'] instanceof String)) {
            throw new Error("Expected the field `target` to be a primitive type in the JSON string but got " + data['target']);
        }
        if (data['filters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['filters'])) {
                throw new Error("Expected the field `filters` to be an array in the JSON data but got " + data['filters']);
            }
            // validate the optional field `filters` (array)
            for (const item of data['filters']) {
                WebhookResponseAllOfFilters.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['last_failure_content'] && !(typeof data['last_failure_content'] === 'string' || data['last_failure_content'] instanceof String)) {
            throw new Error("Expected the field `last_failure_content` to be a primitive type in the JSON string but got " + data['last_failure_content']);
        }

        return true;
    }


}



/**
 * Globally unique identifier of the resource, as a string.
 * @member {String} gid
 */
WebhookResponse.prototype['gid'] = undefined;

/**
 * The base type of this resource.
 * @member {String} resource_type
 */
WebhookResponse.prototype['resource_type'] = undefined;

/**
 * If true, the webhook will send events - if false it is considered inactive and will not generate events.
 * @member {Boolean} active
 */
WebhookResponse.prototype['active'] = undefined;

/**
 * @member {module:model/AsanaNamedResource} resource
 */
WebhookResponse.prototype['resource'] = undefined;

/**
 * The URL to receive the HTTP POST.
 * @member {String} target
 */
WebhookResponse.prototype['target'] = undefined;

/**
 * The time at which this resource was created.
 * @member {Date} created_at
 */
WebhookResponse.prototype['created_at'] = undefined;

/**
 * Whitelist of filters to apply to events from this webhook. If a webhook event passes any of the filters the event will be delivered; otherwise no event will be sent to the receiving server.
 * @member {Array.<module:model/WebhookResponseAllOfFilters>} filters
 */
WebhookResponse.prototype['filters'] = undefined;

/**
 * The timestamp when the webhook last received an error when sending an event to the target.
 * @member {Date} last_failure_at
 */
WebhookResponse.prototype['last_failure_at'] = undefined;

/**
 * The contents of the last error response sent to the webhook when attempting to deliver events to the target.
 * @member {String} last_failure_content
 */
WebhookResponse.prototype['last_failure_content'] = undefined;

/**
 * The timestamp when the webhook last successfully sent an event to the target.
 * @member {Date} last_success_at
 */
WebhookResponse.prototype['last_success_at'] = undefined;


// Implement WebhookCompact interface:
/**
 * Globally unique identifier of the resource, as a string.
 * @member {String} gid
 */
WebhookCompact.prototype['gid'] = undefined;
/**
 * The base type of this resource.
 * @member {String} resource_type
 */
WebhookCompact.prototype['resource_type'] = undefined;
/**
 * If true, the webhook will send events - if false it is considered inactive and will not generate events.
 * @member {Boolean} active
 */
WebhookCompact.prototype['active'] = undefined;
/**
 * @member {module:model/AsanaNamedResource} resource
 */
WebhookCompact.prototype['resource'] = undefined;
/**
 * The URL to receive the HTTP POST.
 * @member {String} target
 */
WebhookCompact.prototype['target'] = undefined;




export default WebhookResponse;

