/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AddCustomFieldSettingRequest model module.
 * @module model/AddCustomFieldSettingRequest
 * @version 1.0
 */
class AddCustomFieldSettingRequest {
    /**
     * Constructs a new <code>AddCustomFieldSettingRequest</code>.
     * @alias module:model/AddCustomFieldSettingRequest
     * @param customField {String} The custom field to associate with this container.
     */
    constructor(customField) { 
        
        AddCustomFieldSettingRequest.initialize(this, customField);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, customField) { 
        obj['custom_field'] = customField;
    }

    /**
     * Constructs a <code>AddCustomFieldSettingRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddCustomFieldSettingRequest} obj Optional instance to populate.
     * @return {module:model/AddCustomFieldSettingRequest} The populated <code>AddCustomFieldSettingRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddCustomFieldSettingRequest();

            if (data.hasOwnProperty('custom_field')) {
                obj['custom_field'] = ApiClient.convertToType(data['custom_field'], 'String');
            }
            if (data.hasOwnProperty('insert_after')) {
                obj['insert_after'] = ApiClient.convertToType(data['insert_after'], 'String');
            }
            if (data.hasOwnProperty('insert_before')) {
                obj['insert_before'] = ApiClient.convertToType(data['insert_before'], 'String');
            }
            if (data.hasOwnProperty('is_important')) {
                obj['is_important'] = ApiClient.convertToType(data['is_important'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddCustomFieldSettingRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddCustomFieldSettingRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AddCustomFieldSettingRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['custom_field'] && !(typeof data['custom_field'] === 'string' || data['custom_field'] instanceof String)) {
            throw new Error("Expected the field `custom_field` to be a primitive type in the JSON string but got " + data['custom_field']);
        }
        // ensure the json data is a string
        if (data['insert_after'] && !(typeof data['insert_after'] === 'string' || data['insert_after'] instanceof String)) {
            throw new Error("Expected the field `insert_after` to be a primitive type in the JSON string but got " + data['insert_after']);
        }
        // ensure the json data is a string
        if (data['insert_before'] && !(typeof data['insert_before'] === 'string' || data['insert_before'] instanceof String)) {
            throw new Error("Expected the field `insert_before` to be a primitive type in the JSON string but got " + data['insert_before']);
        }

        return true;
    }


}

AddCustomFieldSettingRequest.RequiredProperties = ["custom_field"];

/**
 * The custom field to associate with this container.
 * @member {String} custom_field
 */
AddCustomFieldSettingRequest.prototype['custom_field'] = undefined;

/**
 * A gid of a Custom Field Setting on this container, after which the new Custom Field Setting will be added.  `insert_before` and `insert_after` parameters cannot both be specified.
 * @member {String} insert_after
 */
AddCustomFieldSettingRequest.prototype['insert_after'] = undefined;

/**
 * A gid of a Custom Field Setting on this container, before which the new Custom Field Setting will be added.  `insert_before` and `insert_after` parameters cannot both be specified.
 * @member {String} insert_before
 */
AddCustomFieldSettingRequest.prototype['insert_before'] = undefined;

/**
 * Whether this field should be considered important to this container (for instance, to display in the list view of items in the container).
 * @member {Boolean} is_important
 */
AddCustomFieldSettingRequest.prototype['is_important'] = undefined;






export default AddCustomFieldSettingRequest;

