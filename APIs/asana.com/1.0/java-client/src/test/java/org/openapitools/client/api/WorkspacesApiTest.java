/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddUserForWorkspace200Response;
import org.openapitools.client.model.AddUserForWorkspaceRequest;
import org.openapitools.client.model.DeleteAttachment200Response;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.GetWorkspace200Response;
import org.openapitools.client.model.GetWorkspaces200Response;
import org.openapitools.client.model.RemoveUserForWorkspaceRequest;
import org.openapitools.client.model.UpdateWorkspaceRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WorkspacesApi
 */
@Disabled
public class WorkspacesApiTest {

    private final WorkspacesApi api = new WorkspacesApi();

    /**
     * Add a user to a workspace or organization
     *
     * Add a user to a workspace or organization. The user can be referenced by their globally unique user ID or their email address. Returns the full user record for the invited user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addUserForWorkspaceTest() throws ApiException {
        String workspaceGid = null;
        AddUserForWorkspaceRequest addUserForWorkspaceRequest = null;
        Boolean optPretty = null;
        List<String> optFields = null;
        AddUserForWorkspace200Response response = api.addUserForWorkspace(workspaceGid, addUserForWorkspaceRequest, optPretty, optFields);
        // TODO: test validations
    }

    /**
     * Get a workspace
     *
     * Returns the full workspace record for a single workspace.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWorkspaceTest() throws ApiException {
        String workspaceGid = null;
        Boolean optPretty = null;
        List<String> optFields = null;
        GetWorkspace200Response response = api.getWorkspace(workspaceGid, optPretty, optFields);
        // TODO: test validations
    }

    /**
     * Get multiple workspaces
     *
     * Returns the compact records for all workspaces visible to the authorized user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWorkspacesTest() throws ApiException {
        Boolean optPretty = null;
        List<String> optFields = null;
        Integer limit = null;
        String offset = null;
        GetWorkspaces200Response response = api.getWorkspaces(optPretty, optFields, limit, offset);
        // TODO: test validations
    }

    /**
     * Remove a user from a workspace or organization
     *
     * Remove a user from a workspace or organization. The user making this call must be an admin in the workspace. The user can be referenced by their globally unique user ID or their email address. Returns an empty data record.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeUserForWorkspaceTest() throws ApiException {
        String workspaceGid = null;
        RemoveUserForWorkspaceRequest removeUserForWorkspaceRequest = null;
        Boolean optPretty = null;
        List<String> optFields = null;
        DeleteAttachment200Response response = api.removeUserForWorkspace(workspaceGid, removeUserForWorkspaceRequest, optPretty, optFields);
        // TODO: test validations
    }

    /**
     * Update a workspace
     *
     * A specific, existing workspace can be updated by making a PUT request on the URL for that workspace. Only the fields provided in the data block will be updated; any unspecified fields will remain unchanged. Currently the only field that can be modified for a workspace is its name. Returns the complete, updated workspace record.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateWorkspaceTest() throws ApiException {
        String workspaceGid = null;
        UpdateWorkspaceRequest updateWorkspaceRequest = null;
        Boolean optPretty = null;
        List<String> optFields = null;
        GetWorkspace200Response response = api.updateWorkspace(workspaceGid, updateWorkspaceRequest, optPretty, optFields);
        // TODO: test validations
    }

}
