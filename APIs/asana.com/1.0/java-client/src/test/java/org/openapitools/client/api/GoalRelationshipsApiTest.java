/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddSupportingRelationshipRequest;
import org.openapitools.client.model.DeleteAttachment200Response;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.GetGoalRelationship200Response;
import org.openapitools.client.model.GetGoalRelationships200Response;
import org.openapitools.client.model.RemoveSupportingRelationshipRequest;
import org.openapitools.client.model.UpdateGoalRelationshipRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GoalRelationshipsApi
 */
@Disabled
public class GoalRelationshipsApiTest {

    private final GoalRelationshipsApi api = new GoalRelationshipsApi();

    /**
     * Add a supporting goal relationship
     *
     * Creates a goal relationship by adding a supporting resource to a given goal.  Returns the newly created goal relationship record.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addSupportingRelationshipTest() throws ApiException {
        String goalGid = null;
        AddSupportingRelationshipRequest addSupportingRelationshipRequest = null;
        Boolean optPretty = null;
        List<String> optFields = null;
        GetGoalRelationship200Response response = api.addSupportingRelationship(goalGid, addSupportingRelationshipRequest, optPretty, optFields);
        // TODO: test validations
    }

    /**
     * Get a goal relationship
     *
     * Returns the complete updated goal relationship record for a single goal relationship.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGoalRelationshipTest() throws ApiException {
        String goalRelationshipGid = null;
        Boolean optPretty = null;
        List<String> optFields = null;
        GetGoalRelationship200Response response = api.getGoalRelationship(goalRelationshipGid, optPretty, optFields);
        // TODO: test validations
    }

    /**
     * Get goal relationships
     *
     * Returns compact goal relationship records.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGoalRelationshipsTest() throws ApiException {
        String supportedGoal = null;
        Boolean optPretty = null;
        List<String> optFields = null;
        String resourceSubtype = null;
        GetGoalRelationships200Response response = api.getGoalRelationships(supportedGoal, optPretty, optFields, resourceSubtype);
        // TODO: test validations
    }

    /**
     * Removes a supporting goal relationship
     *
     * Removes a goal relationship for a given parent goal.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeSupportingRelationshipTest() throws ApiException {
        String goalGid = null;
        RemoveSupportingRelationshipRequest removeSupportingRelationshipRequest = null;
        Boolean optPretty = null;
        List<String> optFields = null;
        DeleteAttachment200Response response = api.removeSupportingRelationship(goalGid, removeSupportingRelationshipRequest, optPretty, optFields);
        // TODO: test validations
    }

    /**
     * Update a goal relationship
     *
     * An existing goal relationship can be updated by making a PUT request on the URL for that goal relationship. Only the fields provided in the &#x60;data&#x60; block will be updated; any unspecified fields will remain unchanged.  Returns the complete updated goal relationship record.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateGoalRelationshipTest() throws ApiException {
        String goalRelationshipGid = null;
        UpdateGoalRelationshipRequest updateGoalRelationshipRequest = null;
        Boolean optPretty = null;
        List<String> optFields = null;
        GetGoalRelationship200Response response = api.updateGoalRelationship(goalRelationshipGid, updateGoalRelationshipRequest, optPretty, optFields);
        // TODO: test validations
    }

}
