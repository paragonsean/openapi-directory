/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateProjectStatusForProjectRequest;
import org.openapitools.client.model.DeleteAttachment200Response;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.GetProjectStatus200Response;
import org.openapitools.client.model.GetProjectStatusesForProject200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectStatusesApi
 */
@Disabled
public class ProjectStatusesApiTest {

    private final ProjectStatusesApi api = new ProjectStatusesApi();

    /**
     * Create a project status
     *
     * *Deprecated: new integrations should prefer the &#x60;/status_updates&#x60; route.*  Creates a new status update on the project.  Returns the full record of the newly created project status update.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createProjectStatusForProjectTest() throws ApiException {
        String projectGid = null;
        CreateProjectStatusForProjectRequest createProjectStatusForProjectRequest = null;
        Boolean optPretty = null;
        List<String> optFields = null;
        GetProjectStatus200Response response = api.createProjectStatusForProject(projectGid, createProjectStatusForProjectRequest, optPretty, optFields);
        // TODO: test validations
    }

    /**
     * Delete a project status
     *
     * *Deprecated: new integrations should prefer the &#x60;/status_updates/{status_gid}&#x60; route.*  Deletes a specific, existing project status update.  Returns an empty data record.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteProjectStatusTest() throws ApiException {
        String projectStatusGid = null;
        Boolean optPretty = null;
        List<String> optFields = null;
        DeleteAttachment200Response response = api.deleteProjectStatus(projectStatusGid, optPretty, optFields);
        // TODO: test validations
    }

    /**
     * Get a project status
     *
     * *Deprecated: new integrations should prefer the &#x60;/status_updates/{status_gid}&#x60; route.*  Returns the complete record for a single status update.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProjectStatusTest() throws ApiException {
        String projectStatusGid = null;
        Boolean optPretty = null;
        List<String> optFields = null;
        GetProjectStatus200Response response = api.getProjectStatus(projectStatusGid, optPretty, optFields);
        // TODO: test validations
    }

    /**
     * Get statuses from a project
     *
     * *Deprecated: new integrations should prefer the &#x60;/status_updates&#x60; route.*  Returns the compact project status update records for all updates on the project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProjectStatusesForProjectTest() throws ApiException {
        String projectGid = null;
        Boolean optPretty = null;
        List<String> optFields = null;
        Integer limit = null;
        String offset = null;
        GetProjectStatusesForProject200Response response = api.getProjectStatusesForProject(projectGid, optPretty, optFields, limit, offset);
        // TODO: test validations
    }

}
