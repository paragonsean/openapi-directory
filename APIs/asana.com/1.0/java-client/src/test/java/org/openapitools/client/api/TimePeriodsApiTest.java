/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.GetTimePeriod200Response;
import org.openapitools.client.model.GetTimePeriods200Response;
import java.time.LocalDate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TimePeriodsApi
 */
@Disabled
public class TimePeriodsApiTest {

    private final TimePeriodsApi api = new TimePeriodsApi();

    /**
     * Get a time period
     *
     * Returns the full record for a single time period.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTimePeriodTest() throws ApiException {
        String timePeriodGid = null;
        Boolean optPretty = null;
        List<String> optFields = null;
        GetTimePeriod200Response response = api.getTimePeriod(timePeriodGid, optPretty, optFields);
        // TODO: test validations
    }

    /**
     * Get time periods
     *
     * Returns compact time period records.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTimePeriodsTest() throws ApiException {
        String workspace = null;
        Boolean optPretty = null;
        List<String> optFields = null;
        Integer limit = null;
        String offset = null;
        LocalDate startOn = null;
        LocalDate endOn = null;
        GetTimePeriods200Response response = api.getTimePeriods(workspace, optPretty, optFields, limit, offset, startOn, endOn);
        // TODO: test validations
    }

}
