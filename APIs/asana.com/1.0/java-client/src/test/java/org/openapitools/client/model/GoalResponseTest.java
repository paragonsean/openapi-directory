/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoalResponseAllOfMetric;
import org.openapitools.client.model.GoalResponseAllOfOwner;
import org.openapitools.client.model.GoalResponseAllOfTeam;
import org.openapitools.client.model.GoalResponseAllOfTimePeriod;
import org.openapitools.client.model.GoalResponseAllOfWorkspace;
import org.openapitools.client.model.Like;
import org.openapitools.client.model.StatusUpdateCompact;
import org.openapitools.client.model.UserCompact;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoalResponse
 */
public class GoalResponseTest {
    private final GoalResponse model = new GoalResponse();

    /**
     * Model tests for GoalResponse
     */
    @Test
    public void testGoalResponse() {
        // TODO: test GoalResponse
    }

    /**
     * Test the property 'gid'
     */
    @Test
    public void gidTest() {
        // TODO: test gid
    }

    /**
     * Test the property 'resourceType'
     */
    @Test
    public void resourceTypeTest() {
        // TODO: test resourceType
    }

    /**
     * Test the property 'dueOn'
     */
    @Test
    public void dueOnTest() {
        // TODO: test dueOn
    }

    /**
     * Test the property 'htmlNotes'
     */
    @Test
    public void htmlNotesTest() {
        // TODO: test htmlNotes
    }

    /**
     * Test the property 'isWorkspaceLevel'
     */
    @Test
    public void isWorkspaceLevelTest() {
        // TODO: test isWorkspaceLevel
    }

    /**
     * Test the property 'liked'
     */
    @Test
    public void likedTest() {
        // TODO: test liked
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'notes'
     */
    @Test
    public void notesTest() {
        // TODO: test notes
    }

    /**
     * Test the property 'startOn'
     */
    @Test
    public void startOnTest() {
        // TODO: test startOn
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'currentStatusUpdate'
     */
    @Test
    public void currentStatusUpdateTest() {
        // TODO: test currentStatusUpdate
    }

    /**
     * Test the property 'followers'
     */
    @Test
    public void followersTest() {
        // TODO: test followers
    }

    /**
     * Test the property 'likes'
     */
    @Test
    public void likesTest() {
        // TODO: test likes
    }

    /**
     * Test the property 'metric'
     */
    @Test
    public void metricTest() {
        // TODO: test metric
    }

    /**
     * Test the property 'numLikes'
     */
    @Test
    public void numLikesTest() {
        // TODO: test numLikes
    }

    /**
     * Test the property 'owner'
     */
    @Test
    public void ownerTest() {
        // TODO: test owner
    }

    /**
     * Test the property 'team'
     */
    @Test
    public void teamTest() {
        // TODO: test team
    }

    /**
     * Test the property 'timePeriod'
     */
    @Test
    public void timePeriodTest() {
        // TODO: test timePeriod
    }

    /**
     * Test the property 'workspace'
     */
    @Test
    public void workspaceTest() {
        // TODO: test workspace
    }

}
