# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.custom_field_setting_response_all_of_custom_field import CustomFieldSettingResponseAllOfCustomField
from openapi_server.models.custom_field_setting_response_all_of_parent import CustomFieldSettingResponseAllOfParent
from openapi_server.models.custom_field_setting_response_all_of_project import CustomFieldSettingResponseAllOfProject
from openapi_server import util


class CustomFieldSettingResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gid: str=None, resource_type: str=None, custom_field: CustomFieldSettingResponseAllOfCustomField=None, is_important: bool=None, parent: CustomFieldSettingResponseAllOfParent=None, project: CustomFieldSettingResponseAllOfProject=None):
        """CustomFieldSettingResponse - a model defined in OpenAPI

        :param gid: The gid of this CustomFieldSettingResponse.
        :param resource_type: The resource_type of this CustomFieldSettingResponse.
        :param custom_field: The custom_field of this CustomFieldSettingResponse.
        :param is_important: The is_important of this CustomFieldSettingResponse.
        :param parent: The parent of this CustomFieldSettingResponse.
        :param project: The project of this CustomFieldSettingResponse.
        """
        self.openapi_types = {
            'gid': str,
            'resource_type': str,
            'custom_field': CustomFieldSettingResponseAllOfCustomField,
            'is_important': bool,
            'parent': CustomFieldSettingResponseAllOfParent,
            'project': CustomFieldSettingResponseAllOfProject
        }

        self.attribute_map = {
            'gid': 'gid',
            'resource_type': 'resource_type',
            'custom_field': 'custom_field',
            'is_important': 'is_important',
            'parent': 'parent',
            'project': 'project'
        }

        self._gid = gid
        self._resource_type = resource_type
        self._custom_field = custom_field
        self._is_important = is_important
        self._parent = parent
        self._project = project

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomFieldSettingResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomFieldSettingResponse of this CustomFieldSettingResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gid(self):
        """Gets the gid of this CustomFieldSettingResponse.

        Globally unique identifier of the resource, as a string.

        :return: The gid of this CustomFieldSettingResponse.
        :rtype: str
        """
        return self._gid

    @gid.setter
    def gid(self, gid):
        """Sets the gid of this CustomFieldSettingResponse.

        Globally unique identifier of the resource, as a string.

        :param gid: The gid of this CustomFieldSettingResponse.
        :type gid: str
        """

        self._gid = gid

    @property
    def resource_type(self):
        """Gets the resource_type of this CustomFieldSettingResponse.

        The base type of this resource.

        :return: The resource_type of this CustomFieldSettingResponse.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this CustomFieldSettingResponse.

        The base type of this resource.

        :param resource_type: The resource_type of this CustomFieldSettingResponse.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def custom_field(self):
        """Gets the custom_field of this CustomFieldSettingResponse.


        :return: The custom_field of this CustomFieldSettingResponse.
        :rtype: CustomFieldSettingResponseAllOfCustomField
        """
        return self._custom_field

    @custom_field.setter
    def custom_field(self, custom_field):
        """Sets the custom_field of this CustomFieldSettingResponse.


        :param custom_field: The custom_field of this CustomFieldSettingResponse.
        :type custom_field: CustomFieldSettingResponseAllOfCustomField
        """

        self._custom_field = custom_field

    @property
    def is_important(self):
        """Gets the is_important of this CustomFieldSettingResponse.

        `is_important` is used in the Asana web application to determine if this custom field is displayed in the list/grid view of a project or portfolio.

        :return: The is_important of this CustomFieldSettingResponse.
        :rtype: bool
        """
        return self._is_important

    @is_important.setter
    def is_important(self, is_important):
        """Sets the is_important of this CustomFieldSettingResponse.

        `is_important` is used in the Asana web application to determine if this custom field is displayed in the list/grid view of a project or portfolio.

        :param is_important: The is_important of this CustomFieldSettingResponse.
        :type is_important: bool
        """

        self._is_important = is_important

    @property
    def parent(self):
        """Gets the parent of this CustomFieldSettingResponse.


        :return: The parent of this CustomFieldSettingResponse.
        :rtype: CustomFieldSettingResponseAllOfParent
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this CustomFieldSettingResponse.


        :param parent: The parent of this CustomFieldSettingResponse.
        :type parent: CustomFieldSettingResponseAllOfParent
        """

        self._parent = parent

    @property
    def project(self):
        """Gets the project of this CustomFieldSettingResponse.


        :return: The project of this CustomFieldSettingResponse.
        :rtype: CustomFieldSettingResponseAllOfProject
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this CustomFieldSettingResponse.


        :param project: The project of this CustomFieldSettingResponse.
        :type project: CustomFieldSettingResponseAllOfProject
        """

        self._project = project
