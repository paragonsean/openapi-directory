# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_compact import UserCompact
from openapi_server import util


class StoryCompact(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gid: str=None, resource_type: str=None, created_at: datetime=None, created_by: UserCompact=None, resource_subtype: str=None, text: str=None):
        """StoryCompact - a model defined in OpenAPI

        :param gid: The gid of this StoryCompact.
        :param resource_type: The resource_type of this StoryCompact.
        :param created_at: The created_at of this StoryCompact.
        :param created_by: The created_by of this StoryCompact.
        :param resource_subtype: The resource_subtype of this StoryCompact.
        :param text: The text of this StoryCompact.
        """
        self.openapi_types = {
            'gid': str,
            'resource_type': str,
            'created_at': datetime,
            'created_by': UserCompact,
            'resource_subtype': str,
            'text': str
        }

        self.attribute_map = {
            'gid': 'gid',
            'resource_type': 'resource_type',
            'created_at': 'created_at',
            'created_by': 'created_by',
            'resource_subtype': 'resource_subtype',
            'text': 'text'
        }

        self._gid = gid
        self._resource_type = resource_type
        self._created_at = created_at
        self._created_by = created_by
        self._resource_subtype = resource_subtype
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StoryCompact':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StoryCompact of this StoryCompact.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gid(self):
        """Gets the gid of this StoryCompact.

        Globally unique identifier of the resource, as a string.

        :return: The gid of this StoryCompact.
        :rtype: str
        """
        return self._gid

    @gid.setter
    def gid(self, gid):
        """Sets the gid of this StoryCompact.

        Globally unique identifier of the resource, as a string.

        :param gid: The gid of this StoryCompact.
        :type gid: str
        """

        self._gid = gid

    @property
    def resource_type(self):
        """Gets the resource_type of this StoryCompact.

        The base type of this resource.

        :return: The resource_type of this StoryCompact.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this StoryCompact.

        The base type of this resource.

        :param resource_type: The resource_type of this StoryCompact.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def created_at(self):
        """Gets the created_at of this StoryCompact.

        The time at which this resource was created.

        :return: The created_at of this StoryCompact.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this StoryCompact.

        The time at which this resource was created.

        :param created_at: The created_at of this StoryCompact.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this StoryCompact.


        :return: The created_by of this StoryCompact.
        :rtype: UserCompact
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this StoryCompact.


        :param created_by: The created_by of this StoryCompact.
        :type created_by: UserCompact
        """

        self._created_by = created_by

    @property
    def resource_subtype(self):
        """Gets the resource_subtype of this StoryCompact.

        The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.

        :return: The resource_subtype of this StoryCompact.
        :rtype: str
        """
        return self._resource_subtype

    @resource_subtype.setter
    def resource_subtype(self, resource_subtype):
        """Sets the resource_subtype of this StoryCompact.

        The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.

        :param resource_subtype: The resource_subtype of this StoryCompact.
        :type resource_subtype: str
        """

        self._resource_subtype = resource_subtype

    @property
    def text(self):
        """Gets the text of this StoryCompact.

        *Create-only*. Human-readable text for the story or comment. This will not include the name of the creator. *Note: This is not guaranteed to be stable for a given type of story. For example, text for a reassignment may not always say “assigned to …” as the text for a story can both be edited and change based on the language settings of the user making the request.* Use the `resource_subtype` property to discover the action that created the story.

        :return: The text of this StoryCompact.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this StoryCompact.

        *Create-only*. Human-readable text for the story or comment. This will not include the name of the creator. *Note: This is not guaranteed to be stable for a given type of story. For example, text for a reassignment may not always say “assigned to …” as the text for a story can both be edited and change based on the language settings of the user making the request.* Use the `resource_subtype` property to discover the action that created the story.

        :param text: The text of this StoryCompact.
        :type text: str
        """

        self._text = text
