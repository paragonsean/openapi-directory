# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.custom_field_compact_all_of_date_value import CustomFieldCompactAllOfDateValue
from openapi_server.models.custom_field_compact_all_of_enum_value import CustomFieldCompactAllOfEnumValue
from openapi_server.models.enum_option import EnumOption
from openapi_server.models.user_compact import UserCompact
from openapi_server import util


class CustomFieldResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gid: str=None, resource_type: str=None, date_value: CustomFieldCompactAllOfDateValue=None, display_value: str=None, enabled: bool=None, enum_options: List[EnumOption]=None, enum_value: CustomFieldCompactAllOfEnumValue=None, multi_enum_values: List[EnumOption]=None, name: str=None, number_value: float=None, resource_subtype: str=None, text_value: str=None, type: str=None, asana_created_field: str=None, currency_code: str=None, custom_label: str=None, custom_label_position: str=None, description: str=None, format: str=None, has_notifications_enabled: bool=None, is_global_to_workspace: bool=None, precision: int=None, created_by: UserCompact=None, people_value: List[UserCompact]=None):
        """CustomFieldResponse - a model defined in OpenAPI

        :param gid: The gid of this CustomFieldResponse.
        :param resource_type: The resource_type of this CustomFieldResponse.
        :param date_value: The date_value of this CustomFieldResponse.
        :param display_value: The display_value of this CustomFieldResponse.
        :param enabled: The enabled of this CustomFieldResponse.
        :param enum_options: The enum_options of this CustomFieldResponse.
        :param enum_value: The enum_value of this CustomFieldResponse.
        :param multi_enum_values: The multi_enum_values of this CustomFieldResponse.
        :param name: The name of this CustomFieldResponse.
        :param number_value: The number_value of this CustomFieldResponse.
        :param resource_subtype: The resource_subtype of this CustomFieldResponse.
        :param text_value: The text_value of this CustomFieldResponse.
        :param type: The type of this CustomFieldResponse.
        :param asana_created_field: The asana_created_field of this CustomFieldResponse.
        :param currency_code: The currency_code of this CustomFieldResponse.
        :param custom_label: The custom_label of this CustomFieldResponse.
        :param custom_label_position: The custom_label_position of this CustomFieldResponse.
        :param description: The description of this CustomFieldResponse.
        :param format: The format of this CustomFieldResponse.
        :param has_notifications_enabled: The has_notifications_enabled of this CustomFieldResponse.
        :param is_global_to_workspace: The is_global_to_workspace of this CustomFieldResponse.
        :param precision: The precision of this CustomFieldResponse.
        :param created_by: The created_by of this CustomFieldResponse.
        :param people_value: The people_value of this CustomFieldResponse.
        """
        self.openapi_types = {
            'gid': str,
            'resource_type': str,
            'date_value': CustomFieldCompactAllOfDateValue,
            'display_value': str,
            'enabled': bool,
            'enum_options': List[EnumOption],
            'enum_value': CustomFieldCompactAllOfEnumValue,
            'multi_enum_values': List[EnumOption],
            'name': str,
            'number_value': float,
            'resource_subtype': str,
            'text_value': str,
            'type': str,
            'asana_created_field': str,
            'currency_code': str,
            'custom_label': str,
            'custom_label_position': str,
            'description': str,
            'format': str,
            'has_notifications_enabled': bool,
            'is_global_to_workspace': bool,
            'precision': int,
            'created_by': UserCompact,
            'people_value': List[UserCompact]
        }

        self.attribute_map = {
            'gid': 'gid',
            'resource_type': 'resource_type',
            'date_value': 'date_value',
            'display_value': 'display_value',
            'enabled': 'enabled',
            'enum_options': 'enum_options',
            'enum_value': 'enum_value',
            'multi_enum_values': 'multi_enum_values',
            'name': 'name',
            'number_value': 'number_value',
            'resource_subtype': 'resource_subtype',
            'text_value': 'text_value',
            'type': 'type',
            'asana_created_field': 'asana_created_field',
            'currency_code': 'currency_code',
            'custom_label': 'custom_label',
            'custom_label_position': 'custom_label_position',
            'description': 'description',
            'format': 'format',
            'has_notifications_enabled': 'has_notifications_enabled',
            'is_global_to_workspace': 'is_global_to_workspace',
            'precision': 'precision',
            'created_by': 'created_by',
            'people_value': 'people_value'
        }

        self._gid = gid
        self._resource_type = resource_type
        self._date_value = date_value
        self._display_value = display_value
        self._enabled = enabled
        self._enum_options = enum_options
        self._enum_value = enum_value
        self._multi_enum_values = multi_enum_values
        self._name = name
        self._number_value = number_value
        self._resource_subtype = resource_subtype
        self._text_value = text_value
        self._type = type
        self._asana_created_field = asana_created_field
        self._currency_code = currency_code
        self._custom_label = custom_label
        self._custom_label_position = custom_label_position
        self._description = description
        self._format = format
        self._has_notifications_enabled = has_notifications_enabled
        self._is_global_to_workspace = is_global_to_workspace
        self._precision = precision
        self._created_by = created_by
        self._people_value = people_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomFieldResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomFieldResponse of this CustomFieldResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gid(self):
        """Gets the gid of this CustomFieldResponse.

        Globally unique identifier of the resource, as a string.

        :return: The gid of this CustomFieldResponse.
        :rtype: str
        """
        return self._gid

    @gid.setter
    def gid(self, gid):
        """Sets the gid of this CustomFieldResponse.

        Globally unique identifier of the resource, as a string.

        :param gid: The gid of this CustomFieldResponse.
        :type gid: str
        """

        self._gid = gid

    @property
    def resource_type(self):
        """Gets the resource_type of this CustomFieldResponse.

        The base type of this resource.

        :return: The resource_type of this CustomFieldResponse.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this CustomFieldResponse.

        The base type of this resource.

        :param resource_type: The resource_type of this CustomFieldResponse.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def date_value(self):
        """Gets the date_value of this CustomFieldResponse.


        :return: The date_value of this CustomFieldResponse.
        :rtype: CustomFieldCompactAllOfDateValue
        """
        return self._date_value

    @date_value.setter
    def date_value(self, date_value):
        """Sets the date_value of this CustomFieldResponse.


        :param date_value: The date_value of this CustomFieldResponse.
        :type date_value: CustomFieldCompactAllOfDateValue
        """

        self._date_value = date_value

    @property
    def display_value(self):
        """Gets the display_value of this CustomFieldResponse.

        A string representation for the value of the custom field. Integrations that don't require the underlying type should use this field to read values. Using this field will future-proof an app against new custom field types.

        :return: The display_value of this CustomFieldResponse.
        :rtype: str
        """
        return self._display_value

    @display_value.setter
    def display_value(self, display_value):
        """Sets the display_value of this CustomFieldResponse.

        A string representation for the value of the custom field. Integrations that don't require the underlying type should use this field to read values. Using this field will future-proof an app against new custom field types.

        :param display_value: The display_value of this CustomFieldResponse.
        :type display_value: str
        """

        self._display_value = display_value

    @property
    def enabled(self):
        """Gets the enabled of this CustomFieldResponse.

        *Conditional*. Determines if the custom field is enabled or not.

        :return: The enabled of this CustomFieldResponse.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this CustomFieldResponse.

        *Conditional*. Determines if the custom field is enabled or not.

        :param enabled: The enabled of this CustomFieldResponse.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def enum_options(self):
        """Gets the enum_options of this CustomFieldResponse.

        *Conditional*. Only relevant for custom fields of type `enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/docs/create-an-enum-option).

        :return: The enum_options of this CustomFieldResponse.
        :rtype: List[EnumOption]
        """
        return self._enum_options

    @enum_options.setter
    def enum_options(self, enum_options):
        """Sets the enum_options of this CustomFieldResponse.

        *Conditional*. Only relevant for custom fields of type `enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/docs/create-an-enum-option).

        :param enum_options: The enum_options of this CustomFieldResponse.
        :type enum_options: List[EnumOption]
        """

        self._enum_options = enum_options

    @property
    def enum_value(self):
        """Gets the enum_value of this CustomFieldResponse.


        :return: The enum_value of this CustomFieldResponse.
        :rtype: CustomFieldCompactAllOfEnumValue
        """
        return self._enum_value

    @enum_value.setter
    def enum_value(self, enum_value):
        """Sets the enum_value of this CustomFieldResponse.


        :param enum_value: The enum_value of this CustomFieldResponse.
        :type enum_value: CustomFieldCompactAllOfEnumValue
        """

        self._enum_value = enum_value

    @property
    def multi_enum_values(self):
        """Gets the multi_enum_values of this CustomFieldResponse.

        *Conditional*. Only relevant for custom fields of type `multi_enum`. This object is the chosen values of a `multi_enum` custom field.

        :return: The multi_enum_values of this CustomFieldResponse.
        :rtype: List[EnumOption]
        """
        return self._multi_enum_values

    @multi_enum_values.setter
    def multi_enum_values(self, multi_enum_values):
        """Sets the multi_enum_values of this CustomFieldResponse.

        *Conditional*. Only relevant for custom fields of type `multi_enum`. This object is the chosen values of a `multi_enum` custom field.

        :param multi_enum_values: The multi_enum_values of this CustomFieldResponse.
        :type multi_enum_values: List[EnumOption]
        """

        self._multi_enum_values = multi_enum_values

    @property
    def name(self):
        """Gets the name of this CustomFieldResponse.

        The name of the custom field.

        :return: The name of this CustomFieldResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CustomFieldResponse.

        The name of the custom field.

        :param name: The name of this CustomFieldResponse.
        :type name: str
        """

        self._name = name

    @property
    def number_value(self):
        """Gets the number_value of this CustomFieldResponse.

        *Conditional*. This number is the value of a `number` custom field.

        :return: The number_value of this CustomFieldResponse.
        :rtype: float
        """
        return self._number_value

    @number_value.setter
    def number_value(self, number_value):
        """Sets the number_value of this CustomFieldResponse.

        *Conditional*. This number is the value of a `number` custom field.

        :param number_value: The number_value of this CustomFieldResponse.
        :type number_value: float
        """

        self._number_value = number_value

    @property
    def resource_subtype(self):
        """Gets the resource_subtype of this CustomFieldResponse.

        The type of the custom field. Must be one of the given values. 

        :return: The resource_subtype of this CustomFieldResponse.
        :rtype: str
        """
        return self._resource_subtype

    @resource_subtype.setter
    def resource_subtype(self, resource_subtype):
        """Sets the resource_subtype of this CustomFieldResponse.

        The type of the custom field. Must be one of the given values. 

        :param resource_subtype: The resource_subtype of this CustomFieldResponse.
        :type resource_subtype: str
        """
        allowed_values = ["text", "enum", "multi_enum", "number", "date", "people"]  # noqa: E501
        if resource_subtype not in allowed_values:
            raise ValueError(
                "Invalid value for `resource_subtype` ({0}), must be one of {1}"
                .format(resource_subtype, allowed_values)
            )

        self._resource_subtype = resource_subtype

    @property
    def text_value(self):
        """Gets the text_value of this CustomFieldResponse.

        *Conditional*. This string is the value of a `text` custom field.

        :return: The text_value of this CustomFieldResponse.
        :rtype: str
        """
        return self._text_value

    @text_value.setter
    def text_value(self, text_value):
        """Sets the text_value of this CustomFieldResponse.

        *Conditional*. This string is the value of a `text` custom field.

        :param text_value: The text_value of this CustomFieldResponse.
        :type text_value: str
        """

        self._text_value = text_value

    @property
    def type(self):
        """Gets the type of this CustomFieldResponse.

        *Deprecated: new integrations should prefer the resource_subtype field.* The type of the custom field. Must be one of the given values. 

        :return: The type of this CustomFieldResponse.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CustomFieldResponse.

        *Deprecated: new integrations should prefer the resource_subtype field.* The type of the custom field. Must be one of the given values. 

        :param type: The type of this CustomFieldResponse.
        :type type: str
        """
        allowed_values = ["text", "enum", "multi_enum", "number"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def asana_created_field(self):
        """Gets the asana_created_field of this CustomFieldResponse.

        *Conditional*. A unique identifier to associate this field with the template source of truth.

        :return: The asana_created_field of this CustomFieldResponse.
        :rtype: str
        """
        return self._asana_created_field

    @asana_created_field.setter
    def asana_created_field(self, asana_created_field):
        """Sets the asana_created_field of this CustomFieldResponse.

        *Conditional*. A unique identifier to associate this field with the template source of truth.

        :param asana_created_field: The asana_created_field of this CustomFieldResponse.
        :type asana_created_field: str
        """
        allowed_values = [None,"a_v_requirements", "account_name", "actionable", "align_shipping_link", "align_status", "allotted_time", "appointment", "approval_stage", "approved", "article_series", "board_committee", "browser", "campaign_audience", "campaign_project_status", "campaign_regions", "channel_primary", "client_topic_type", "complete_by", "contact", "contact_email_address", "content_channels", "content_channels_needed", "content_stage", "content_type", "contract", "contract_status", "cost", "creation_stage", "creative_channel", "creative_needed", "creative_needs", "data_sensitivity", "deal_size", "delivery_appt", "delivery_appt_date", "department", "department_responsible", "design_request_needed", "design_request_type", "discussion_category", "do_this_task", "editorial_content_status", "editorial_content_tag", "editorial_content_type", "effort", "effort_level", "est_completion_date", "estimated_time", "estimated_value", "expected_cost", "external_steps_needed", "favorite_idea", "feedback_type", "financial", "funding_amount", "grant_application_process", "hiring_candidate_status", "idea_status", "ids_link", "ids_patient_link", "implementation_stage", "insurance", "interview_area", "interview_question_score", "itero_scan_link", "job_s_applied_to", "lab", "launch_status", "lead_status", "localization_language", "localization_market_team", "localization_status", "meeting_minutes", "meeting_needed", "minutes", "mrr", "must_localize", "name_of_foundation", "need_to_follow_up", "next_appointment", "next_steps_sales", "num_people", "number_of_user_reports", "office_location", "onboarding_activity", "owner", "participants_needed", "patient_date_of_birth", "patient_email", "patient_phone", "patient_status", "phone_number", "planning_category", "point_of_contact", "position", "post_format", "prescription", "priority", "priority_level", "product", "product_stage", "progress", "project_size", "project_status", "proposed_budget", "publish_status", "reason_for_scan", "referral", "request_type", "research_status", "responsible_department", "responsible_team", "risk_assessment_status", "room_name", "sales_counterpart", "sentiment", "shipping_link", "social_channels", "stage", "status", "status_design", "status_of_initiative", "system_setup", "task_progress", "team", "team_marketing", "team_responsible", "time_it_takes_to_complete_tasks", "timeframe", "treatment_type", "type_work_requests_it", "use_agency", "user_name", "vendor_category", "vendor_type", "word_count"]  # noqa: E501
        if asana_created_field not in allowed_values:
            raise ValueError(
                "Invalid value for `asana_created_field` ({0}), must be one of {1}"
                .format(asana_created_field, allowed_values)
            )

        self._asana_created_field = asana_created_field

    @property
    def currency_code(self):
        """Gets the currency_code of this CustomFieldResponse.

        ISO 4217 currency code to format this custom field. This will be null if the `format` is not `currency`.

        :return: The currency_code of this CustomFieldResponse.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this CustomFieldResponse.

        ISO 4217 currency code to format this custom field. This will be null if the `format` is not `currency`.

        :param currency_code: The currency_code of this CustomFieldResponse.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def custom_label(self):
        """Gets the custom_label of this CustomFieldResponse.

        This is the string that appears next to the custom field value. This will be null if the `format` is not `custom`.

        :return: The custom_label of this CustomFieldResponse.
        :rtype: str
        """
        return self._custom_label

    @custom_label.setter
    def custom_label(self, custom_label):
        """Sets the custom_label of this CustomFieldResponse.

        This is the string that appears next to the custom field value. This will be null if the `format` is not `custom`.

        :param custom_label: The custom_label of this CustomFieldResponse.
        :type custom_label: str
        """

        self._custom_label = custom_label

    @property
    def custom_label_position(self):
        """Gets the custom_label_position of this CustomFieldResponse.

        Only relevant for custom fields with `custom` format. This depicts where to place the custom label. This will be null if the `format` is not `custom`.

        :return: The custom_label_position of this CustomFieldResponse.
        :rtype: str
        """
        return self._custom_label_position

    @custom_label_position.setter
    def custom_label_position(self, custom_label_position):
        """Sets the custom_label_position of this CustomFieldResponse.

        Only relevant for custom fields with `custom` format. This depicts where to place the custom label. This will be null if the `format` is not `custom`.

        :param custom_label_position: The custom_label_position of this CustomFieldResponse.
        :type custom_label_position: str
        """
        allowed_values = ["prefix", "suffix"]  # noqa: E501
        if custom_label_position not in allowed_values:
            raise ValueError(
                "Invalid value for `custom_label_position` ({0}), must be one of {1}"
                .format(custom_label_position, allowed_values)
            )

        self._custom_label_position = custom_label_position

    @property
    def description(self):
        """Gets the description of this CustomFieldResponse.

        [Opt In](/docs/input-output-options). The description of the custom field.

        :return: The description of this CustomFieldResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CustomFieldResponse.

        [Opt In](/docs/input-output-options). The description of the custom field.

        :param description: The description of this CustomFieldResponse.
        :type description: str
        """

        self._description = description

    @property
    def format(self):
        """Gets the format of this CustomFieldResponse.

        The format of this custom field.

        :return: The format of this CustomFieldResponse.
        :rtype: str
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this CustomFieldResponse.

        The format of this custom field.

        :param format: The format of this CustomFieldResponse.
        :type format: str
        """
        allowed_values = ["currency", "identifier", "percentage", "custom", "none"]  # noqa: E501
        if format not in allowed_values:
            raise ValueError(
                "Invalid value for `format` ({0}), must be one of {1}"
                .format(format, allowed_values)
            )

        self._format = format

    @property
    def has_notifications_enabled(self):
        """Gets the has_notifications_enabled of this CustomFieldResponse.

        *Conditional*. This flag describes whether a follower of a task with this field should receive inbox notifications from changes to this field.

        :return: The has_notifications_enabled of this CustomFieldResponse.
        :rtype: bool
        """
        return self._has_notifications_enabled

    @has_notifications_enabled.setter
    def has_notifications_enabled(self, has_notifications_enabled):
        """Sets the has_notifications_enabled of this CustomFieldResponse.

        *Conditional*. This flag describes whether a follower of a task with this field should receive inbox notifications from changes to this field.

        :param has_notifications_enabled: The has_notifications_enabled of this CustomFieldResponse.
        :type has_notifications_enabled: bool
        """

        self._has_notifications_enabled = has_notifications_enabled

    @property
    def is_global_to_workspace(self):
        """Gets the is_global_to_workspace of this CustomFieldResponse.

        This flag describes whether this custom field is available to every container in the workspace. Before project-specific custom fields, this field was always true.

        :return: The is_global_to_workspace of this CustomFieldResponse.
        :rtype: bool
        """
        return self._is_global_to_workspace

    @is_global_to_workspace.setter
    def is_global_to_workspace(self, is_global_to_workspace):
        """Sets the is_global_to_workspace of this CustomFieldResponse.

        This flag describes whether this custom field is available to every container in the workspace. Before project-specific custom fields, this field was always true.

        :param is_global_to_workspace: The is_global_to_workspace of this CustomFieldResponse.
        :type is_global_to_workspace: bool
        """

        self._is_global_to_workspace = is_global_to_workspace

    @property
    def precision(self):
        """Gets the precision of this CustomFieldResponse.

        Only relevant for custom fields of type ‘Number’. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive. For percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%. The identifier format will always have a precision of 0.

        :return: The precision of this CustomFieldResponse.
        :rtype: int
        """
        return self._precision

    @precision.setter
    def precision(self, precision):
        """Sets the precision of this CustomFieldResponse.

        Only relevant for custom fields of type ‘Number’. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive. For percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%. The identifier format will always have a precision of 0.

        :param precision: The precision of this CustomFieldResponse.
        :type precision: int
        """

        self._precision = precision

    @property
    def created_by(self):
        """Gets the created_by of this CustomFieldResponse.


        :return: The created_by of this CustomFieldResponse.
        :rtype: UserCompact
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this CustomFieldResponse.


        :param created_by: The created_by of this CustomFieldResponse.
        :type created_by: UserCompact
        """

        self._created_by = created_by

    @property
    def people_value(self):
        """Gets the people_value of this CustomFieldResponse.

        *Conditional*. Only relevant for custom fields of type `people`. This array of [compact user](/docs/user-compact) objects reflects the values of a `people` custom field.

        :return: The people_value of this CustomFieldResponse.
        :rtype: List[UserCompact]
        """
        return self._people_value

    @people_value.setter
    def people_value(self, people_value):
        """Sets the people_value of this CustomFieldResponse.

        *Conditional*. Only relevant for custom fields of type `people`. This array of [compact user](/docs/user-compact) objects reflects the values of a `people` custom field.

        :param people_value: The people_value of this CustomFieldResponse.
        :type people_value: List[UserCompact]
        """

        self._people_value = people_value
