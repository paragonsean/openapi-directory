# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RemoveFollowersRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, followers: str=None):
        """RemoveFollowersRequest - a model defined in OpenAPI

        :param followers: The followers of this RemoveFollowersRequest.
        """
        self.openapi_types = {
            'followers': str
        }

        self.attribute_map = {
            'followers': 'followers'
        }

        self._followers = followers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RemoveFollowersRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RemoveFollowersRequest of this RemoveFollowersRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def followers(self):
        """Gets the followers of this RemoveFollowersRequest.

        An array of strings identifying users. These can either be the string \"me\", an email, or the gid of a user.

        :return: The followers of this RemoveFollowersRequest.
        :rtype: str
        """
        return self._followers

    @followers.setter
    def followers(self, followers):
        """Sets the followers of this RemoveFollowersRequest.

        An array of strings identifying users. These can either be the string \"me\", an email, or the gid of a user.

        :param followers: The followers of this RemoveFollowersRequest.
        :type followers: str
        """
        if followers is None:
            raise ValueError("Invalid value for `followers`, must not be `None`")

        self._followers = followers
