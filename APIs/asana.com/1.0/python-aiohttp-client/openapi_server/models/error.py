# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Error(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, help: str=None, message: str=None, phrase: str=None):
        """Error - a model defined in OpenAPI

        :param help: The help of this Error.
        :param message: The message of this Error.
        :param phrase: The phrase of this Error.
        """
        self.openapi_types = {
            'help': str,
            'message': str,
            'phrase': str
        }

        self.attribute_map = {
            'help': 'help',
            'message': 'message',
            'phrase': 'phrase'
        }

        self._help = help
        self._message = message
        self._phrase = phrase

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Error':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Error of this Error.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def help(self):
        """Gets the help of this Error.

        Additional information directing developers to resources on how to address and fix the problem, if available.

        :return: The help of this Error.
        :rtype: str
        """
        return self._help

    @help.setter
    def help(self, help):
        """Sets the help of this Error.

        Additional information directing developers to resources on how to address and fix the problem, if available.

        :param help: The help of this Error.
        :type help: str
        """

        self._help = help

    @property
    def message(self):
        """Gets the message of this Error.

        Message providing more detail about the error that occurred, if available.

        :return: The message of this Error.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this Error.

        Message providing more detail about the error that occurred, if available.

        :param message: The message of this Error.
        :type message: str
        """

        self._message = message

    @property
    def phrase(self):
        """Gets the phrase of this Error.

        *500 errors only*. A unique error phrase which can be used when contacting developer support to help identify the exact occurrence of the problem in Asana’s logs.

        :return: The phrase of this Error.
        :rtype: str
        """
        return self._phrase

    @phrase.setter
    def phrase(self, phrase):
        """Sets the phrase of this Error.

        *500 errors only*. A unique error phrase which can be used when contacting developer support to help identify the exact occurrence of the problem in Asana’s logs.

        :param phrase: The phrase of this Error.
        :type phrase: str
        """

        self._phrase = phrase
