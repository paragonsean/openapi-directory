# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.batch_request_action import BatchRequestAction
from openapi_server import util


class BatchRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actions: List[BatchRequestAction]=None):
        """BatchRequest - a model defined in OpenAPI

        :param actions: The actions of this BatchRequest.
        """
        self.openapi_types = {
            'actions': List[BatchRequestAction]
        }

        self.attribute_map = {
            'actions': 'actions'
        }

        self._actions = actions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchRequest of this BatchRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actions(self):
        """Gets the actions of this BatchRequest.


        :return: The actions of this BatchRequest.
        :rtype: List[BatchRequestAction]
        """
        return self._actions

    @actions.setter
    def actions(self, actions):
        """Sets the actions of this BatchRequest.


        :param actions: The actions of this BatchRequest.
        :type actions: List[BatchRequestAction]
        """

        self._actions = actions
