# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.like import Like
from openapi_server.models.status_update_response_all_of_parent import StatusUpdateResponseAllOfParent
from openapi_server.models.user_compact import UserCompact
from openapi_server import util


class StatusUpdateResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gid: str=None, resource_type: str=None, resource_subtype: str=None, title: str=None, html_text: str=None, status_type: str=None, text: str=None, author: UserCompact=None, created_at: datetime=None, created_by: UserCompact=None, hearted: bool=None, hearts: List[Like]=None, liked: bool=None, likes: List[Like]=None, modified_at: datetime=None, num_hearts: int=None, num_likes: int=None, parent: StatusUpdateResponseAllOfParent=None):
        """StatusUpdateResponse - a model defined in OpenAPI

        :param gid: The gid of this StatusUpdateResponse.
        :param resource_type: The resource_type of this StatusUpdateResponse.
        :param resource_subtype: The resource_subtype of this StatusUpdateResponse.
        :param title: The title of this StatusUpdateResponse.
        :param html_text: The html_text of this StatusUpdateResponse.
        :param status_type: The status_type of this StatusUpdateResponse.
        :param text: The text of this StatusUpdateResponse.
        :param author: The author of this StatusUpdateResponse.
        :param created_at: The created_at of this StatusUpdateResponse.
        :param created_by: The created_by of this StatusUpdateResponse.
        :param hearted: The hearted of this StatusUpdateResponse.
        :param hearts: The hearts of this StatusUpdateResponse.
        :param liked: The liked of this StatusUpdateResponse.
        :param likes: The likes of this StatusUpdateResponse.
        :param modified_at: The modified_at of this StatusUpdateResponse.
        :param num_hearts: The num_hearts of this StatusUpdateResponse.
        :param num_likes: The num_likes of this StatusUpdateResponse.
        :param parent: The parent of this StatusUpdateResponse.
        """
        self.openapi_types = {
            'gid': str,
            'resource_type': str,
            'resource_subtype': str,
            'title': str,
            'html_text': str,
            'status_type': str,
            'text': str,
            'author': UserCompact,
            'created_at': datetime,
            'created_by': UserCompact,
            'hearted': bool,
            'hearts': List[Like],
            'liked': bool,
            'likes': List[Like],
            'modified_at': datetime,
            'num_hearts': int,
            'num_likes': int,
            'parent': StatusUpdateResponseAllOfParent
        }

        self.attribute_map = {
            'gid': 'gid',
            'resource_type': 'resource_type',
            'resource_subtype': 'resource_subtype',
            'title': 'title',
            'html_text': 'html_text',
            'status_type': 'status_type',
            'text': 'text',
            'author': 'author',
            'created_at': 'created_at',
            'created_by': 'created_by',
            'hearted': 'hearted',
            'hearts': 'hearts',
            'liked': 'liked',
            'likes': 'likes',
            'modified_at': 'modified_at',
            'num_hearts': 'num_hearts',
            'num_likes': 'num_likes',
            'parent': 'parent'
        }

        self._gid = gid
        self._resource_type = resource_type
        self._resource_subtype = resource_subtype
        self._title = title
        self._html_text = html_text
        self._status_type = status_type
        self._text = text
        self._author = author
        self._created_at = created_at
        self._created_by = created_by
        self._hearted = hearted
        self._hearts = hearts
        self._liked = liked
        self._likes = likes
        self._modified_at = modified_at
        self._num_hearts = num_hearts
        self._num_likes = num_likes
        self._parent = parent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StatusUpdateResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StatusUpdateResponse of this StatusUpdateResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gid(self):
        """Gets the gid of this StatusUpdateResponse.

        Globally unique identifier of the resource, as a string.

        :return: The gid of this StatusUpdateResponse.
        :rtype: str
        """
        return self._gid

    @gid.setter
    def gid(self, gid):
        """Sets the gid of this StatusUpdateResponse.

        Globally unique identifier of the resource, as a string.

        :param gid: The gid of this StatusUpdateResponse.
        :type gid: str
        """

        self._gid = gid

    @property
    def resource_type(self):
        """Gets the resource_type of this StatusUpdateResponse.

        The base type of this resource.

        :return: The resource_type of this StatusUpdateResponse.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this StatusUpdateResponse.

        The base type of this resource.

        :param resource_type: The resource_type of this StatusUpdateResponse.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def resource_subtype(self):
        """Gets the resource_subtype of this StatusUpdateResponse.

        The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning. The `resource_subtype`s for `status` objects represent the type of their parent.

        :return: The resource_subtype of this StatusUpdateResponse.
        :rtype: str
        """
        return self._resource_subtype

    @resource_subtype.setter
    def resource_subtype(self, resource_subtype):
        """Sets the resource_subtype of this StatusUpdateResponse.

        The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning. The `resource_subtype`s for `status` objects represent the type of their parent.

        :param resource_subtype: The resource_subtype of this StatusUpdateResponse.
        :type resource_subtype: str
        """
        allowed_values = ["project_status_update", "portfolio_status_update", "goal_status_update"]  # noqa: E501
        if resource_subtype not in allowed_values:
            raise ValueError(
                "Invalid value for `resource_subtype` ({0}), must be one of {1}"
                .format(resource_subtype, allowed_values)
            )

        self._resource_subtype = resource_subtype

    @property
    def title(self):
        """Gets the title of this StatusUpdateResponse.

        The title of the status update.

        :return: The title of this StatusUpdateResponse.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this StatusUpdateResponse.

        The title of the status update.

        :param title: The title of this StatusUpdateResponse.
        :type title: str
        """

        self._title = title

    @property
    def html_text(self):
        """Gets the html_text of this StatusUpdateResponse.

        [Opt In](/docs/input-output-options). The text content of the status update with formatting as HTML.

        :return: The html_text of this StatusUpdateResponse.
        :rtype: str
        """
        return self._html_text

    @html_text.setter
    def html_text(self, html_text):
        """Sets the html_text of this StatusUpdateResponse.

        [Opt In](/docs/input-output-options). The text content of the status update with formatting as HTML.

        :param html_text: The html_text of this StatusUpdateResponse.
        :type html_text: str
        """

        self._html_text = html_text

    @property
    def status_type(self):
        """Gets the status_type of this StatusUpdateResponse.

        The type associated with the status update. This represents the current state of the object this object is on.

        :return: The status_type of this StatusUpdateResponse.
        :rtype: str
        """
        return self._status_type

    @status_type.setter
    def status_type(self, status_type):
        """Sets the status_type of this StatusUpdateResponse.

        The type associated with the status update. This represents the current state of the object this object is on.

        :param status_type: The status_type of this StatusUpdateResponse.
        :type status_type: str
        """
        allowed_values = ["on_track", "at_risk", "off_track", "on_hold", "complete", "achieved", "partial", "missed", "dropped"]  # noqa: E501
        if status_type not in allowed_values:
            raise ValueError(
                "Invalid value for `status_type` ({0}), must be one of {1}"
                .format(status_type, allowed_values)
            )

        self._status_type = status_type

    @property
    def text(self):
        """Gets the text of this StatusUpdateResponse.

        The text content of the status update.

        :return: The text of this StatusUpdateResponse.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this StatusUpdateResponse.

        The text content of the status update.

        :param text: The text of this StatusUpdateResponse.
        :type text: str
        """
        if text is None:
            raise ValueError("Invalid value for `text`, must not be `None`")

        self._text = text

    @property
    def author(self):
        """Gets the author of this StatusUpdateResponse.


        :return: The author of this StatusUpdateResponse.
        :rtype: UserCompact
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this StatusUpdateResponse.


        :param author: The author of this StatusUpdateResponse.
        :type author: UserCompact
        """

        self._author = author

    @property
    def created_at(self):
        """Gets the created_at of this StatusUpdateResponse.

        The time at which this resource was created.

        :return: The created_at of this StatusUpdateResponse.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this StatusUpdateResponse.

        The time at which this resource was created.

        :param created_at: The created_at of this StatusUpdateResponse.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this StatusUpdateResponse.


        :return: The created_by of this StatusUpdateResponse.
        :rtype: UserCompact
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this StatusUpdateResponse.


        :param created_by: The created_by of this StatusUpdateResponse.
        :type created_by: UserCompact
        """

        self._created_by = created_by

    @property
    def hearted(self):
        """Gets the hearted of this StatusUpdateResponse.

        *Deprecated - please use liked instead* True if the status is hearted by the authorized user, false if not.

        :return: The hearted of this StatusUpdateResponse.
        :rtype: bool
        """
        return self._hearted

    @hearted.setter
    def hearted(self, hearted):
        """Sets the hearted of this StatusUpdateResponse.

        *Deprecated - please use liked instead* True if the status is hearted by the authorized user, false if not.

        :param hearted: The hearted of this StatusUpdateResponse.
        :type hearted: bool
        """

        self._hearted = hearted

    @property
    def hearts(self):
        """Gets the hearts of this StatusUpdateResponse.

        *Deprecated - please use likes instead* Array of likes for users who have hearted this status.

        :return: The hearts of this StatusUpdateResponse.
        :rtype: List[Like]
        """
        return self._hearts

    @hearts.setter
    def hearts(self, hearts):
        """Sets the hearts of this StatusUpdateResponse.

        *Deprecated - please use likes instead* Array of likes for users who have hearted this status.

        :param hearts: The hearts of this StatusUpdateResponse.
        :type hearts: List[Like]
        """

        self._hearts = hearts

    @property
    def liked(self):
        """Gets the liked of this StatusUpdateResponse.

        True if the status is liked by the authorized user, false if not.

        :return: The liked of this StatusUpdateResponse.
        :rtype: bool
        """
        return self._liked

    @liked.setter
    def liked(self, liked):
        """Sets the liked of this StatusUpdateResponse.

        True if the status is liked by the authorized user, false if not.

        :param liked: The liked of this StatusUpdateResponse.
        :type liked: bool
        """

        self._liked = liked

    @property
    def likes(self):
        """Gets the likes of this StatusUpdateResponse.

        Array of likes for users who have liked this status.

        :return: The likes of this StatusUpdateResponse.
        :rtype: List[Like]
        """
        return self._likes

    @likes.setter
    def likes(self, likes):
        """Sets the likes of this StatusUpdateResponse.

        Array of likes for users who have liked this status.

        :param likes: The likes of this StatusUpdateResponse.
        :type likes: List[Like]
        """

        self._likes = likes

    @property
    def modified_at(self):
        """Gets the modified_at of this StatusUpdateResponse.

        The time at which this project status was last modified. *Note: This does not currently reflect any changes in associations such as comments that may have been added or removed from the status.*

        :return: The modified_at of this StatusUpdateResponse.
        :rtype: datetime
        """
        return self._modified_at

    @modified_at.setter
    def modified_at(self, modified_at):
        """Sets the modified_at of this StatusUpdateResponse.

        The time at which this project status was last modified. *Note: This does not currently reflect any changes in associations such as comments that may have been added or removed from the status.*

        :param modified_at: The modified_at of this StatusUpdateResponse.
        :type modified_at: datetime
        """

        self._modified_at = modified_at

    @property
    def num_hearts(self):
        """Gets the num_hearts of this StatusUpdateResponse.

        *Deprecated - please use likes instead* The number of users who have hearted this status.

        :return: The num_hearts of this StatusUpdateResponse.
        :rtype: int
        """
        return self._num_hearts

    @num_hearts.setter
    def num_hearts(self, num_hearts):
        """Sets the num_hearts of this StatusUpdateResponse.

        *Deprecated - please use likes instead* The number of users who have hearted this status.

        :param num_hearts: The num_hearts of this StatusUpdateResponse.
        :type num_hearts: int
        """

        self._num_hearts = num_hearts

    @property
    def num_likes(self):
        """Gets the num_likes of this StatusUpdateResponse.

        The number of users who have liked this status.

        :return: The num_likes of this StatusUpdateResponse.
        :rtype: int
        """
        return self._num_likes

    @num_likes.setter
    def num_likes(self, num_likes):
        """Sets the num_likes of this StatusUpdateResponse.

        The number of users who have liked this status.

        :param num_likes: The num_likes of this StatusUpdateResponse.
        :type num_likes: int
        """

        self._num_likes = num_likes

    @property
    def parent(self):
        """Gets the parent of this StatusUpdateResponse.


        :return: The parent of this StatusUpdateResponse.
        :rtype: StatusUpdateResponseAllOfParent
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this StatusUpdateResponse.


        :param parent: The parent of this StatusUpdateResponse.
        :type parent: StatusUpdateResponseAllOfParent
        """

        self._parent = parent
