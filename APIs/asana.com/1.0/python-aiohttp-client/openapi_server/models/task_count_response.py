# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TaskCountResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, num_completed_milestones: int=None, num_completed_tasks: int=None, num_incomplete_milestones: int=None, num_incomplete_tasks: int=None, num_milestones: int=None, num_tasks: int=None):
        """TaskCountResponse - a model defined in OpenAPI

        :param num_completed_milestones: The num_completed_milestones of this TaskCountResponse.
        :param num_completed_tasks: The num_completed_tasks of this TaskCountResponse.
        :param num_incomplete_milestones: The num_incomplete_milestones of this TaskCountResponse.
        :param num_incomplete_tasks: The num_incomplete_tasks of this TaskCountResponse.
        :param num_milestones: The num_milestones of this TaskCountResponse.
        :param num_tasks: The num_tasks of this TaskCountResponse.
        """
        self.openapi_types = {
            'num_completed_milestones': int,
            'num_completed_tasks': int,
            'num_incomplete_milestones': int,
            'num_incomplete_tasks': int,
            'num_milestones': int,
            'num_tasks': int
        }

        self.attribute_map = {
            'num_completed_milestones': 'num_completed_milestones',
            'num_completed_tasks': 'num_completed_tasks',
            'num_incomplete_milestones': 'num_incomplete_milestones',
            'num_incomplete_tasks': 'num_incomplete_tasks',
            'num_milestones': 'num_milestones',
            'num_tasks': 'num_tasks'
        }

        self._num_completed_milestones = num_completed_milestones
        self._num_completed_tasks = num_completed_tasks
        self._num_incomplete_milestones = num_incomplete_milestones
        self._num_incomplete_tasks = num_incomplete_tasks
        self._num_milestones = num_milestones
        self._num_tasks = num_tasks

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskCountResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TaskCountResponse of this TaskCountResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def num_completed_milestones(self):
        """Gets the num_completed_milestones of this TaskCountResponse.

        The number of completed milestones in a project.

        :return: The num_completed_milestones of this TaskCountResponse.
        :rtype: int
        """
        return self._num_completed_milestones

    @num_completed_milestones.setter
    def num_completed_milestones(self, num_completed_milestones):
        """Sets the num_completed_milestones of this TaskCountResponse.

        The number of completed milestones in a project.

        :param num_completed_milestones: The num_completed_milestones of this TaskCountResponse.
        :type num_completed_milestones: int
        """

        self._num_completed_milestones = num_completed_milestones

    @property
    def num_completed_tasks(self):
        """Gets the num_completed_tasks of this TaskCountResponse.

        The number of completed tasks in a project.

        :return: The num_completed_tasks of this TaskCountResponse.
        :rtype: int
        """
        return self._num_completed_tasks

    @num_completed_tasks.setter
    def num_completed_tasks(self, num_completed_tasks):
        """Sets the num_completed_tasks of this TaskCountResponse.

        The number of completed tasks in a project.

        :param num_completed_tasks: The num_completed_tasks of this TaskCountResponse.
        :type num_completed_tasks: int
        """

        self._num_completed_tasks = num_completed_tasks

    @property
    def num_incomplete_milestones(self):
        """Gets the num_incomplete_milestones of this TaskCountResponse.

        The number of incomplete milestones in a project.

        :return: The num_incomplete_milestones of this TaskCountResponse.
        :rtype: int
        """
        return self._num_incomplete_milestones

    @num_incomplete_milestones.setter
    def num_incomplete_milestones(self, num_incomplete_milestones):
        """Sets the num_incomplete_milestones of this TaskCountResponse.

        The number of incomplete milestones in a project.

        :param num_incomplete_milestones: The num_incomplete_milestones of this TaskCountResponse.
        :type num_incomplete_milestones: int
        """

        self._num_incomplete_milestones = num_incomplete_milestones

    @property
    def num_incomplete_tasks(self):
        """Gets the num_incomplete_tasks of this TaskCountResponse.

        The number of incomplete tasks in a project.

        :return: The num_incomplete_tasks of this TaskCountResponse.
        :rtype: int
        """
        return self._num_incomplete_tasks

    @num_incomplete_tasks.setter
    def num_incomplete_tasks(self, num_incomplete_tasks):
        """Sets the num_incomplete_tasks of this TaskCountResponse.

        The number of incomplete tasks in a project.

        :param num_incomplete_tasks: The num_incomplete_tasks of this TaskCountResponse.
        :type num_incomplete_tasks: int
        """

        self._num_incomplete_tasks = num_incomplete_tasks

    @property
    def num_milestones(self):
        """Gets the num_milestones of this TaskCountResponse.

        The number of milestones in a project.

        :return: The num_milestones of this TaskCountResponse.
        :rtype: int
        """
        return self._num_milestones

    @num_milestones.setter
    def num_milestones(self, num_milestones):
        """Sets the num_milestones of this TaskCountResponse.

        The number of milestones in a project.

        :param num_milestones: The num_milestones of this TaskCountResponse.
        :type num_milestones: int
        """

        self._num_milestones = num_milestones

    @property
    def num_tasks(self):
        """Gets the num_tasks of this TaskCountResponse.

        The number of tasks in a project.

        :return: The num_tasks of this TaskCountResponse.
        :rtype: int
        """
        return self._num_tasks

    @num_tasks.setter
    def num_tasks(self, num_tasks):
        """Sets the num_tasks of this TaskCountResponse.

        The number of tasks in a project.

        :param num_tasks: The num_tasks of this TaskCountResponse.
        :type num_tasks: int
        """

        self._num_tasks = num_tasks
