# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_compact import UserCompact
from openapi_server import util


class Like(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gid: str=None, user: UserCompact=None):
        """Like - a model defined in OpenAPI

        :param gid: The gid of this Like.
        :param user: The user of this Like.
        """
        self.openapi_types = {
            'gid': str,
            'user': UserCompact
        }

        self.attribute_map = {
            'gid': 'gid',
            'user': 'user'
        }

        self._gid = gid
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Like':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Like of this Like.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gid(self):
        """Gets the gid of this Like.

        Globally unique identifier of the object, as a string.

        :return: The gid of this Like.
        :rtype: str
        """
        return self._gid

    @gid.setter
    def gid(self, gid):
        """Sets the gid of this Like.

        Globally unique identifier of the object, as a string.

        :param gid: The gid of this Like.
        :type gid: str
        """

        self._gid = gid

    @property
    def user(self):
        """Gets the user of this Like.


        :return: The user of this Like.
        :rtype: UserCompact
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this Like.


        :param user: The user of this Like.
        :type user: UserCompact
        """

        self._user = user
