# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CustomFieldCompactAllOfDateValue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _date: str=None, date_time: str=None):
        """CustomFieldCompactAllOfDateValue - a model defined in OpenAPI

        :param _date: The _date of this CustomFieldCompactAllOfDateValue.
        :param date_time: The date_time of this CustomFieldCompactAllOfDateValue.
        """
        self.openapi_types = {
            '_date': str,
            'date_time': str
        }

        self.attribute_map = {
            '_date': 'date',
            'date_time': 'date_time'
        }

        self.__date = _date
        self._date_time = date_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomFieldCompactAllOfDateValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomFieldCompact_allOf_date_value of this CustomFieldCompactAllOfDateValue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self):
        """Gets the _date of this CustomFieldCompactAllOfDateValue.

        A string representing the date in YYYY-MM-DD format.

        :return: The _date of this CustomFieldCompactAllOfDateValue.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this CustomFieldCompactAllOfDateValue.

        A string representing the date in YYYY-MM-DD format.

        :param _date: The _date of this CustomFieldCompactAllOfDateValue.
        :type _date: str
        """

        self.__date = _date

    @property
    def date_time(self):
        """Gets the date_time of this CustomFieldCompactAllOfDateValue.

        A string representing the date in ISO 8601 format. If no time value is selected, the value of `date-time` will be `null`.

        :return: The date_time of this CustomFieldCompactAllOfDateValue.
        :rtype: str
        """
        return self._date_time

    @date_time.setter
    def date_time(self, date_time):
        """Sets the date_time of this CustomFieldCompactAllOfDateValue.

        A string representing the date in ISO 8601 format. If no time value is selected, the value of `date-time` will be `null`.

        :param date_time: The date_time of this CustomFieldCompactAllOfDateValue.
        :type date_time: str
        """

        self._date_time = date_time
