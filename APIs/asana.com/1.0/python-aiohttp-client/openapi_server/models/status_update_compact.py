# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StatusUpdateCompact(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gid: str=None, resource_type: str=None, resource_subtype: str=None, title: str=None):
        """StatusUpdateCompact - a model defined in OpenAPI

        :param gid: The gid of this StatusUpdateCompact.
        :param resource_type: The resource_type of this StatusUpdateCompact.
        :param resource_subtype: The resource_subtype of this StatusUpdateCompact.
        :param title: The title of this StatusUpdateCompact.
        """
        self.openapi_types = {
            'gid': str,
            'resource_type': str,
            'resource_subtype': str,
            'title': str
        }

        self.attribute_map = {
            'gid': 'gid',
            'resource_type': 'resource_type',
            'resource_subtype': 'resource_subtype',
            'title': 'title'
        }

        self._gid = gid
        self._resource_type = resource_type
        self._resource_subtype = resource_subtype
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StatusUpdateCompact':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StatusUpdateCompact of this StatusUpdateCompact.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gid(self):
        """Gets the gid of this StatusUpdateCompact.

        Globally unique identifier of the resource, as a string.

        :return: The gid of this StatusUpdateCompact.
        :rtype: str
        """
        return self._gid

    @gid.setter
    def gid(self, gid):
        """Sets the gid of this StatusUpdateCompact.

        Globally unique identifier of the resource, as a string.

        :param gid: The gid of this StatusUpdateCompact.
        :type gid: str
        """

        self._gid = gid

    @property
    def resource_type(self):
        """Gets the resource_type of this StatusUpdateCompact.

        The base type of this resource.

        :return: The resource_type of this StatusUpdateCompact.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this StatusUpdateCompact.

        The base type of this resource.

        :param resource_type: The resource_type of this StatusUpdateCompact.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def resource_subtype(self):
        """Gets the resource_subtype of this StatusUpdateCompact.

        The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning. The `resource_subtype`s for `status` objects represent the type of their parent.

        :return: The resource_subtype of this StatusUpdateCompact.
        :rtype: str
        """
        return self._resource_subtype

    @resource_subtype.setter
    def resource_subtype(self, resource_subtype):
        """Sets the resource_subtype of this StatusUpdateCompact.

        The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning. The `resource_subtype`s for `status` objects represent the type of their parent.

        :param resource_subtype: The resource_subtype of this StatusUpdateCompact.
        :type resource_subtype: str
        """
        allowed_values = ["project_status_update", "portfolio_status_update", "goal_status_update"]  # noqa: E501
        if resource_subtype not in allowed_values:
            raise ValueError(
                "Invalid value for `resource_subtype` ({0}), must be one of {1}"
                .format(resource_subtype, allowed_values)
            )

        self._resource_subtype = resource_subtype

    @property
    def title(self):
        """Gets the title of this StatusUpdateCompact.

        The title of the status update.

        :return: The title of this StatusUpdateCompact.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this StatusUpdateCompact.

        The title of the status update.

        :param title: The title of this StatusUpdateCompact.
        :type title: str
        """

        self._title = title
