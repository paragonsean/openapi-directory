/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJobCompact.h
 *
 * 
 */

#ifndef OAIJobCompact_H
#define OAIJobCompact_H

#include <QJsonObject>

#include "OAIProjectCompact.h"
#include "OAIProjectTemplateCompact.h"
#include "OAITaskCompact.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProjectCompact;
class OAIProjectTemplateCompact;
class OAITaskCompact;

class OAIJobCompact : public OAIObject {
public:
    OAIJobCompact();
    OAIJobCompact(QString json);
    ~OAIJobCompact() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGid() const;
    void setGid(const QString &gid);
    bool is_gid_Set() const;
    bool is_gid_Valid() const;

    QString getResourceType() const;
    void setResourceType(const QString &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    OAIProjectCompact getNewProject() const;
    void setNewProject(const OAIProjectCompact &new_project);
    bool is_new_project_Set() const;
    bool is_new_project_Valid() const;

    OAIProjectTemplateCompact getNewProjectTemplate() const;
    void setNewProjectTemplate(const OAIProjectTemplateCompact &new_project_template);
    bool is_new_project_template_Set() const;
    bool is_new_project_template_Valid() const;

    OAITaskCompact getNewTask() const;
    void setNewTask(const OAITaskCompact &new_task);
    bool is_new_task_Set() const;
    bool is_new_task_Valid() const;

    QString getResourceSubtype() const;
    void setResourceSubtype(const QString &resource_subtype);
    bool is_resource_subtype_Set() const;
    bool is_resource_subtype_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_gid;
    bool m_gid_isSet;
    bool m_gid_isValid;

    QString m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;

    OAIProjectCompact m_new_project;
    bool m_new_project_isSet;
    bool m_new_project_isValid;

    OAIProjectTemplateCompact m_new_project_template;
    bool m_new_project_template_isSet;
    bool m_new_project_template_isValid;

    OAITaskCompact m_new_task;
    bool m_new_task_isSet;
    bool m_new_task_isValid;

    QString m_resource_subtype;
    bool m_resource_subtype_isSet;
    bool m_resource_subtype_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJobCompact)

#endif // OAIJobCompact_H
