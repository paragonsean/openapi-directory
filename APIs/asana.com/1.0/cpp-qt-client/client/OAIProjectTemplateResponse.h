/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProjectTemplateResponse.h
 *
 * 
 */

#ifndef OAIProjectTemplateResponse_H
#define OAIProjectTemplateResponse_H

#include <QJsonObject>

#include "OAIDateVariableCompact.h"
#include "OAITeamCompact.h"
#include "OAIUserCompact.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserCompact;
class OAIDateVariableCompact;
class OAITeamCompact;

class OAIProjectTemplateResponse : public OAIObject {
public:
    OAIProjectTemplateResponse();
    OAIProjectTemplateResponse(QString json);
    ~OAIProjectTemplateResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGid() const;
    void setGid(const QString &gid);
    bool is_gid_Set() const;
    bool is_gid_Valid() const;

    QString getResourceType() const;
    void setResourceType(const QString &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getColor() const;
    void setColor(const QString &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getHtmlDescription() const;
    void setHtmlDescription(const QString &html_description);
    bool is_html_description_Set() const;
    bool is_html_description_Valid() const;

    OAIUserCompact getOwner() const;
    void setOwner(const OAIUserCompact &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    bool isRPublic() const;
    void setRPublic(const bool &r_public);
    bool is_r_public_Set() const;
    bool is_r_public_Valid() const;

    QList<OAIDateVariableCompact> getRequestedDates() const;
    void setRequestedDates(const QList<OAIDateVariableCompact> &requested_dates);
    bool is_requested_dates_Set() const;
    bool is_requested_dates_Valid() const;

    OAITeamCompact getTeam() const;
    void setTeam(const OAITeamCompact &team);
    bool is_team_Set() const;
    bool is_team_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_gid;
    bool m_gid_isSet;
    bool m_gid_isValid;

    QString m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_html_description;
    bool m_html_description_isSet;
    bool m_html_description_isValid;

    OAIUserCompact m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    bool m_r_public;
    bool m_r_public_isSet;
    bool m_r_public_isValid;

    QList<OAIDateVariableCompact> m_requested_dates;
    bool m_requested_dates_isSet;
    bool m_requested_dates_isValid;

    OAITeamCompact m_team;
    bool m_team_isSet;
    bool m_team_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProjectTemplateResponse)

#endif // OAIProjectTemplateResponse_H
