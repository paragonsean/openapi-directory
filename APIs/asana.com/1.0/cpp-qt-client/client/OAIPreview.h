/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPreview.h
 *
 * A collection of rich text that will be displayed as a preview to another app.  This is read-only except for a small group of whitelisted apps.
 */

#ifndef OAIPreview_H
#define OAIPreview_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPreview : public OAIObject {
public:
    OAIPreview();
    OAIPreview(QString json);
    ~OAIPreview() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFallback() const;
    void setFallback(const QString &fallback);
    bool is_fallback_Set() const;
    bool is_fallback_Valid() const;

    QString getFooter() const;
    void setFooter(const QString &footer);
    bool is_footer_Set() const;
    bool is_footer_Valid() const;

    QString getHeader() const;
    void setHeader(const QString &header);
    bool is_header_Set() const;
    bool is_header_Valid() const;

    QString getHeaderLink() const;
    void setHeaderLink(const QString &header_link);
    bool is_header_link_Set() const;
    bool is_header_link_Valid() const;

    QString getHtmlText() const;
    void setHtmlText(const QString &html_text);
    bool is_html_text_Set() const;
    bool is_html_text_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getTitleLink() const;
    void setTitleLink(const QString &title_link);
    bool is_title_link_Set() const;
    bool is_title_link_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_fallback;
    bool m_fallback_isSet;
    bool m_fallback_isValid;

    QString m_footer;
    bool m_footer_isSet;
    bool m_footer_isValid;

    QString m_header;
    bool m_header_isSet;
    bool m_header_isValid;

    QString m_header_link;
    bool m_header_link_isSet;
    bool m_header_link_isValid;

    QString m_html_text;
    bool m_html_text_isSet;
    bool m_html_text_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_title_link;
    bool m_title_link_isSet;
    bool m_title_link_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPreview)

#endif // OAIPreview_H
