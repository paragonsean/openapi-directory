/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoalRelationshipCompact.h
 *
 * 
 */

#ifndef OAIGoalRelationshipCompact_H
#define OAIGoalRelationshipCompact_H

#include <QJsonObject>

#include "OAIGoalRelationshipCompact_allOf_supporting_resource.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoalRelationshipCompact_allOf_supporting_resource;

class OAIGoalRelationshipCompact : public OAIObject {
public:
    OAIGoalRelationshipCompact();
    OAIGoalRelationshipCompact(QString json);
    ~OAIGoalRelationshipCompact() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGid() const;
    void setGid(const QString &gid);
    bool is_gid_Set() const;
    bool is_gid_Valid() const;

    QString getResourceType() const;
    void setResourceType(const QString &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    double getContributionWeight() const;
    void setContributionWeight(const double &contribution_weight);
    bool is_contribution_weight_Set() const;
    bool is_contribution_weight_Valid() const;

    QString getResourceSubtype() const;
    void setResourceSubtype(const QString &resource_subtype);
    bool is_resource_subtype_Set() const;
    bool is_resource_subtype_Valid() const;

    OAIGoalRelationshipCompact_allOf_supporting_resource getSupportingResource() const;
    void setSupportingResource(const OAIGoalRelationshipCompact_allOf_supporting_resource &supporting_resource);
    bool is_supporting_resource_Set() const;
    bool is_supporting_resource_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_gid;
    bool m_gid_isSet;
    bool m_gid_isValid;

    QString m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;

    double m_contribution_weight;
    bool m_contribution_weight_isSet;
    bool m_contribution_weight_isValid;

    QString m_resource_subtype;
    bool m_resource_subtype_isSet;
    bool m_resource_subtype_isValid;

    OAIGoalRelationshipCompact_allOf_supporting_resource m_supporting_resource;
    bool m_supporting_resource_isSet;
    bool m_supporting_resource_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoalRelationshipCompact)

#endif // OAIGoalRelationshipCompact_H
