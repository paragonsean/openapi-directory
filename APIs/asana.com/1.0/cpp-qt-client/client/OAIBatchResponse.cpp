/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchResponse::OAIBatchResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchResponse::OAIBatchResponse() {
    this->initializeModel();
}

OAIBatchResponse::~OAIBatchResponse() {}

void OAIBatchResponse::initializeModel() {

    m_body_isSet = false;
    m_body_isValid = false;

    m_headers_isSet = false;
    m_headers_isValid = false;

    m_status_code_isSet = false;
    m_status_code_isValid = false;
}

void OAIBatchResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchResponse::fromJsonObject(QJsonObject json) {

    m_body_isValid = ::OpenAPI::fromJsonValue(m_body, json[QString("body")]);
    m_body_isSet = !json[QString("body")].isNull() && m_body_isValid;

    m_headers_isValid = ::OpenAPI::fromJsonValue(m_headers, json[QString("headers")]);
    m_headers_isSet = !json[QString("headers")].isNull() && m_headers_isValid;

    m_status_code_isValid = ::OpenAPI::fromJsonValue(m_status_code, json[QString("status_code")]);
    m_status_code_isSet = !json[QString("status_code")].isNull() && m_status_code_isValid;
}

QString OAIBatchResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_body_isSet) {
        obj.insert(QString("body"), ::OpenAPI::toJsonValue(m_body));
    }
    if (m_headers_isSet) {
        obj.insert(QString("headers"), ::OpenAPI::toJsonValue(m_headers));
    }
    if (m_status_code_isSet) {
        obj.insert(QString("status_code"), ::OpenAPI::toJsonValue(m_status_code));
    }
    return obj;
}

OAIObject OAIBatchResponse::getBody() const {
    return m_body;
}
void OAIBatchResponse::setBody(const OAIObject &body) {
    m_body = body;
    m_body_isSet = true;
}

bool OAIBatchResponse::is_body_Set() const{
    return m_body_isSet;
}

bool OAIBatchResponse::is_body_Valid() const{
    return m_body_isValid;
}

OAIObject OAIBatchResponse::getHeaders() const {
    return m_headers;
}
void OAIBatchResponse::setHeaders(const OAIObject &headers) {
    m_headers = headers;
    m_headers_isSet = true;
}

bool OAIBatchResponse::is_headers_Set() const{
    return m_headers_isSet;
}

bool OAIBatchResponse::is_headers_Valid() const{
    return m_headers_isValid;
}

qint32 OAIBatchResponse::getStatusCode() const {
    return m_status_code;
}
void OAIBatchResponse::setStatusCode(const qint32 &status_code) {
    m_status_code = status_code;
    m_status_code_isSet = true;
}

bool OAIBatchResponse::is_status_code_Set() const{
    return m_status_code_isSet;
}

bool OAIBatchResponse::is_status_code_Valid() const{
    return m_status_code_isValid;
}

bool OAIBatchResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_body_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_headers_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
