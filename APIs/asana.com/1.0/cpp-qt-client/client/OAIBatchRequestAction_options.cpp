/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchRequestAction_options.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchRequestAction_options::OAIBatchRequestAction_options(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchRequestAction_options::OAIBatchRequestAction_options() {
    this->initializeModel();
}

OAIBatchRequestAction_options::~OAIBatchRequestAction_options() {}

void OAIBatchRequestAction_options::initializeModel() {

    m_fields_isSet = false;
    m_fields_isValid = false;

    m_limit_isSet = false;
    m_limit_isValid = false;

    m_offset_isSet = false;
    m_offset_isValid = false;
}

void OAIBatchRequestAction_options::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchRequestAction_options::fromJsonObject(QJsonObject json) {

    m_fields_isValid = ::OpenAPI::fromJsonValue(m_fields, json[QString("fields")]);
    m_fields_isSet = !json[QString("fields")].isNull() && m_fields_isValid;

    m_limit_isValid = ::OpenAPI::fromJsonValue(m_limit, json[QString("limit")]);
    m_limit_isSet = !json[QString("limit")].isNull() && m_limit_isValid;

    m_offset_isValid = ::OpenAPI::fromJsonValue(m_offset, json[QString("offset")]);
    m_offset_isSet = !json[QString("offset")].isNull() && m_offset_isValid;
}

QString OAIBatchRequestAction_options::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchRequestAction_options::asJsonObject() const {
    QJsonObject obj;
    if (m_fields.size() > 0) {
        obj.insert(QString("fields"), ::OpenAPI::toJsonValue(m_fields));
    }
    if (m_limit_isSet) {
        obj.insert(QString("limit"), ::OpenAPI::toJsonValue(m_limit));
    }
    if (m_offset_isSet) {
        obj.insert(QString("offset"), ::OpenAPI::toJsonValue(m_offset));
    }
    return obj;
}

QList<QString> OAIBatchRequestAction_options::getFields() const {
    return m_fields;
}
void OAIBatchRequestAction_options::setFields(const QList<QString> &fields) {
    m_fields = fields;
    m_fields_isSet = true;
}

bool OAIBatchRequestAction_options::is_fields_Set() const{
    return m_fields_isSet;
}

bool OAIBatchRequestAction_options::is_fields_Valid() const{
    return m_fields_isValid;
}

qint32 OAIBatchRequestAction_options::getLimit() const {
    return m_limit;
}
void OAIBatchRequestAction_options::setLimit(const qint32 &limit) {
    m_limit = limit;
    m_limit_isSet = true;
}

bool OAIBatchRequestAction_options::is_limit_Set() const{
    return m_limit_isSet;
}

bool OAIBatchRequestAction_options::is_limit_Valid() const{
    return m_limit_isValid;
}

qint32 OAIBatchRequestAction_options::getOffset() const {
    return m_offset;
}
void OAIBatchRequestAction_options::setOffset(const qint32 &offset) {
    m_offset = offset;
    m_offset_isSet = true;
}

bool OAIBatchRequestAction_options::is_offset_Set() const{
    return m_offset_isSet;
}

bool OAIBatchRequestAction_options::is_offset_Valid() const{
    return m_offset_isValid;
}

bool OAIBatchRequestAction_options::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_limit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offset_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchRequestAction_options::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
