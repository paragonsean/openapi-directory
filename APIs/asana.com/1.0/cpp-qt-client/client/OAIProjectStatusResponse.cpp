/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectStatusResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectStatusResponse::OAIProjectStatusResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectStatusResponse::OAIProjectStatusResponse() {
    this->initializeModel();
}

OAIProjectStatusResponse::~OAIProjectStatusResponse() {}

void OAIProjectStatusResponse::initializeModel() {

    m_gid_isSet = false;
    m_gid_isValid = false;

    m_resource_type_isSet = false;
    m_resource_type_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_color_isSet = false;
    m_color_isValid = false;

    m_html_text_isSet = false;
    m_html_text_isValid = false;

    m_text_isSet = false;
    m_text_isValid = false;

    m_author_isSet = false;
    m_author_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_modified_at_isSet = false;
    m_modified_at_isValid = false;
}

void OAIProjectStatusResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectStatusResponse::fromJsonObject(QJsonObject json) {

    m_gid_isValid = ::OpenAPI::fromJsonValue(m_gid, json[QString("gid")]);
    m_gid_isSet = !json[QString("gid")].isNull() && m_gid_isValid;

    m_resource_type_isValid = ::OpenAPI::fromJsonValue(m_resource_type, json[QString("resource_type")]);
    m_resource_type_isSet = !json[QString("resource_type")].isNull() && m_resource_type_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_color_isValid = ::OpenAPI::fromJsonValue(m_color, json[QString("color")]);
    m_color_isSet = !json[QString("color")].isNull() && m_color_isValid;

    m_html_text_isValid = ::OpenAPI::fromJsonValue(m_html_text, json[QString("html_text")]);
    m_html_text_isSet = !json[QString("html_text")].isNull() && m_html_text_isValid;

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;

    m_author_isValid = ::OpenAPI::fromJsonValue(m_author, json[QString("author")]);
    m_author_isSet = !json[QString("author")].isNull() && m_author_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("created_by")]);
    m_created_by_isSet = !json[QString("created_by")].isNull() && m_created_by_isValid;

    m_modified_at_isValid = ::OpenAPI::fromJsonValue(m_modified_at, json[QString("modified_at")]);
    m_modified_at_isSet = !json[QString("modified_at")].isNull() && m_modified_at_isValid;
}

QString OAIProjectStatusResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectStatusResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_gid_isSet) {
        obj.insert(QString("gid"), ::OpenAPI::toJsonValue(m_gid));
    }
    if (m_resource_type_isSet) {
        obj.insert(QString("resource_type"), ::OpenAPI::toJsonValue(m_resource_type));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_color_isSet) {
        obj.insert(QString("color"), ::OpenAPI::toJsonValue(m_color));
    }
    if (m_html_text_isSet) {
        obj.insert(QString("html_text"), ::OpenAPI::toJsonValue(m_html_text));
    }
    if (m_text_isSet) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    if (m_author.isSet()) {
        obj.insert(QString("author"), ::OpenAPI::toJsonValue(m_author));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_created_by.isSet()) {
        obj.insert(QString("created_by"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_modified_at_isSet) {
        obj.insert(QString("modified_at"), ::OpenAPI::toJsonValue(m_modified_at));
    }
    return obj;
}

QString OAIProjectStatusResponse::getGid() const {
    return m_gid;
}
void OAIProjectStatusResponse::setGid(const QString &gid) {
    m_gid = gid;
    m_gid_isSet = true;
}

bool OAIProjectStatusResponse::is_gid_Set() const{
    return m_gid_isSet;
}

bool OAIProjectStatusResponse::is_gid_Valid() const{
    return m_gid_isValid;
}

QString OAIProjectStatusResponse::getResourceType() const {
    return m_resource_type;
}
void OAIProjectStatusResponse::setResourceType(const QString &resource_type) {
    m_resource_type = resource_type;
    m_resource_type_isSet = true;
}

bool OAIProjectStatusResponse::is_resource_type_Set() const{
    return m_resource_type_isSet;
}

bool OAIProjectStatusResponse::is_resource_type_Valid() const{
    return m_resource_type_isValid;
}

QString OAIProjectStatusResponse::getTitle() const {
    return m_title;
}
void OAIProjectStatusResponse::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIProjectStatusResponse::is_title_Set() const{
    return m_title_isSet;
}

bool OAIProjectStatusResponse::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIProjectStatusResponse::getColor() const {
    return m_color;
}
void OAIProjectStatusResponse::setColor(const QString &color) {
    m_color = color;
    m_color_isSet = true;
}

bool OAIProjectStatusResponse::is_color_Set() const{
    return m_color_isSet;
}

bool OAIProjectStatusResponse::is_color_Valid() const{
    return m_color_isValid;
}

QString OAIProjectStatusResponse::getHtmlText() const {
    return m_html_text;
}
void OAIProjectStatusResponse::setHtmlText(const QString &html_text) {
    m_html_text = html_text;
    m_html_text_isSet = true;
}

bool OAIProjectStatusResponse::is_html_text_Set() const{
    return m_html_text_isSet;
}

bool OAIProjectStatusResponse::is_html_text_Valid() const{
    return m_html_text_isValid;
}

QString OAIProjectStatusResponse::getText() const {
    return m_text;
}
void OAIProjectStatusResponse::setText(const QString &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAIProjectStatusResponse::is_text_Set() const{
    return m_text_isSet;
}

bool OAIProjectStatusResponse::is_text_Valid() const{
    return m_text_isValid;
}

OAIUserCompact OAIProjectStatusResponse::getAuthor() const {
    return m_author;
}
void OAIProjectStatusResponse::setAuthor(const OAIUserCompact &author) {
    m_author = author;
    m_author_isSet = true;
}

bool OAIProjectStatusResponse::is_author_Set() const{
    return m_author_isSet;
}

bool OAIProjectStatusResponse::is_author_Valid() const{
    return m_author_isValid;
}

QDateTime OAIProjectStatusResponse::getCreatedAt() const {
    return m_created_at;
}
void OAIProjectStatusResponse::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIProjectStatusResponse::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIProjectStatusResponse::is_created_at_Valid() const{
    return m_created_at_isValid;
}

OAIUserCompact OAIProjectStatusResponse::getCreatedBy() const {
    return m_created_by;
}
void OAIProjectStatusResponse::setCreatedBy(const OAIUserCompact &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIProjectStatusResponse::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIProjectStatusResponse::is_created_by_Valid() const{
    return m_created_by_isValid;
}

QDateTime OAIProjectStatusResponse::getModifiedAt() const {
    return m_modified_at;
}
void OAIProjectStatusResponse::setModifiedAt(const QDateTime &modified_at) {
    m_modified_at = modified_at;
    m_modified_at_isSet = true;
}

bool OAIProjectStatusResponse::is_modified_at_Set() const{
    return m_modified_at_isSet;
}

bool OAIProjectStatusResponse::is_modified_at_Valid() const{
    return m_modified_at_isValid;
}

bool OAIProjectStatusResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_gid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_color_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_html_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_author.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectStatusResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_color_isValid && m_text_isValid && true;
}

} // namespace OpenAPI
