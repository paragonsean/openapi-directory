/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserBaseResponse_allOf_photo.h
 *
 * A map of the userâ€™s profile photo in various sizes, or null if no photo is set. Sizes provided are 21, 27, 36, 60, 128, and 1024. All images are in PNG format, except for 1024 (which is in JPEG format).
 */

#ifndef OAIUserBaseResponse_allOf_photo_H
#define OAIUserBaseResponse_allOf_photo_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUserBaseResponse_allOf_photo : public OAIObject {
public:
    OAIUserBaseResponse_allOf_photo();
    OAIUserBaseResponse_allOf_photo(QString json);
    ~OAIUserBaseResponse_allOf_photo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getImage1024x1024() const;
    void setImage1024x1024(const QString &image_1024x1024);
    bool is_image_1024x1024_Set() const;
    bool is_image_1024x1024_Valid() const;

    QString getImage128x128() const;
    void setImage128x128(const QString &image_128x128);
    bool is_image_128x128_Set() const;
    bool is_image_128x128_Valid() const;

    QString getImage21x21() const;
    void setImage21x21(const QString &image_21x21);
    bool is_image_21x21_Set() const;
    bool is_image_21x21_Valid() const;

    QString getImage27x27() const;
    void setImage27x27(const QString &image_27x27);
    bool is_image_27x27_Set() const;
    bool is_image_27x27_Valid() const;

    QString getImage36x36() const;
    void setImage36x36(const QString &image_36x36);
    bool is_image_36x36_Set() const;
    bool is_image_36x36_Valid() const;

    QString getImage60x60() const;
    void setImage60x60(const QString &image_60x60);
    bool is_image_60x60_Set() const;
    bool is_image_60x60_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_image_1024x1024;
    bool m_image_1024x1024_isSet;
    bool m_image_1024x1024_isValid;

    QString m_image_128x128;
    bool m_image_128x128_isSet;
    bool m_image_128x128_isValid;

    QString m_image_21x21;
    bool m_image_21x21_isSet;
    bool m_image_21x21_isValid;

    QString m_image_27x27;
    bool m_image_27x27_isSet;
    bool m_image_27x27_isValid;

    QString m_image_36x36;
    bool m_image_36x36_isSet;
    bool m_image_36x36_isValid;

    QString m_image_60x60;
    bool m_image_60x60_isSet;
    bool m_image_60x60_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserBaseResponse_allOf_photo)

#endif // OAIUserBaseResponse_allOf_photo_H
