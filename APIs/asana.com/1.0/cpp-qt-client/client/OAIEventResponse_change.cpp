/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEventResponse_change.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEventResponse_change::OAIEventResponse_change(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEventResponse_change::OAIEventResponse_change() {
    this->initializeModel();
}

OAIEventResponse_change::~OAIEventResponse_change() {}

void OAIEventResponse_change::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;

    m_added_value_isSet = false;
    m_added_value_isValid = false;

    m_field_isSet = false;
    m_field_isValid = false;

    m_new_value_isSet = false;
    m_new_value_isValid = false;

    m_removed_value_isSet = false;
    m_removed_value_isValid = false;
}

void OAIEventResponse_change::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEventResponse_change::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("action")]);
    m_action_isSet = !json[QString("action")].isNull() && m_action_isValid;

    m_added_value_isValid = ::OpenAPI::fromJsonValue(m_added_value, json[QString("added_value")]);
    m_added_value_isSet = !json[QString("added_value")].isNull() && m_added_value_isValid;

    m_field_isValid = ::OpenAPI::fromJsonValue(m_field, json[QString("field")]);
    m_field_isSet = !json[QString("field")].isNull() && m_field_isValid;

    m_new_value_isValid = ::OpenAPI::fromJsonValue(m_new_value, json[QString("new_value")]);
    m_new_value_isSet = !json[QString("new_value")].isNull() && m_new_value_isValid;

    m_removed_value_isValid = ::OpenAPI::fromJsonValue(m_removed_value, json[QString("removed_value")]);
    m_removed_value_isSet = !json[QString("removed_value")].isNull() && m_removed_value_isValid;
}

QString OAIEventResponse_change::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEventResponse_change::asJsonObject() const {
    QJsonObject obj;
    if (m_action_isSet) {
        obj.insert(QString("action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_added_value_isSet) {
        obj.insert(QString("added_value"), ::OpenAPI::toJsonValue(m_added_value));
    }
    if (m_field_isSet) {
        obj.insert(QString("field"), ::OpenAPI::toJsonValue(m_field));
    }
    if (m_new_value_isSet) {
        obj.insert(QString("new_value"), ::OpenAPI::toJsonValue(m_new_value));
    }
    if (m_removed_value_isSet) {
        obj.insert(QString("removed_value"), ::OpenAPI::toJsonValue(m_removed_value));
    }
    return obj;
}

QString OAIEventResponse_change::getAction() const {
    return m_action;
}
void OAIEventResponse_change::setAction(const QString &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAIEventResponse_change::is_action_Set() const{
    return m_action_isSet;
}

bool OAIEventResponse_change::is_action_Valid() const{
    return m_action_isValid;
}

QJsonValue OAIEventResponse_change::getAddedValue() const {
    return m_added_value;
}
void OAIEventResponse_change::setAddedValue(const QJsonValue &added_value) {
    m_added_value = added_value;
    m_added_value_isSet = true;
}

bool OAIEventResponse_change::is_added_value_Set() const{
    return m_added_value_isSet;
}

bool OAIEventResponse_change::is_added_value_Valid() const{
    return m_added_value_isValid;
}

QString OAIEventResponse_change::getField() const {
    return m_field;
}
void OAIEventResponse_change::setField(const QString &field) {
    m_field = field;
    m_field_isSet = true;
}

bool OAIEventResponse_change::is_field_Set() const{
    return m_field_isSet;
}

bool OAIEventResponse_change::is_field_Valid() const{
    return m_field_isValid;
}

QJsonValue OAIEventResponse_change::getNewValue() const {
    return m_new_value;
}
void OAIEventResponse_change::setNewValue(const QJsonValue &new_value) {
    m_new_value = new_value;
    m_new_value_isSet = true;
}

bool OAIEventResponse_change::is_new_value_Set() const{
    return m_new_value_isSet;
}

bool OAIEventResponse_change::is_new_value_Valid() const{
    return m_new_value_isValid;
}

QJsonValue OAIEventResponse_change::getRemovedValue() const {
    return m_removed_value;
}
void OAIEventResponse_change::setRemovedValue(const QJsonValue &removed_value) {
    m_removed_value = removed_value;
    m_removed_value_isSet = true;
}

bool OAIEventResponse_change::is_removed_value_Set() const{
    return m_removed_value_isSet;
}

bool OAIEventResponse_change::is_removed_value_Valid() const{
    return m_removed_value_isValid;
}

bool OAIEventResponse_change::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_added_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_new_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_removed_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEventResponse_change::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
