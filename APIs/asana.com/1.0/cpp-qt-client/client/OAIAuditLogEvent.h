/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAuditLogEvent.h
 *
 * An object representing a single event within an Asana domain.  Every audit log event is comprised of an &#x60;event_type&#x60;, &#x60;actor&#x60;, &#x60;resource&#x60;, and &#x60;context&#x60;. Some events will include additional metadata about the event under &#x60;details&#x60;. See our [currently supported list of events](/docs/supported-auditlogevents) for more details.
 */

#ifndef OAIAuditLogEvent_H
#define OAIAuditLogEvent_H

#include <QJsonObject>

#include "OAIAuditLogEventActor.h"
#include "OAIAuditLogEventContext.h"
#include "OAIAuditLogEventResource.h"
#include "OAIObject.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAuditLogEventActor;
class OAIAuditLogEventContext;
class OAIAuditLogEventResource;

class OAIAuditLogEvent : public OAIObject {
public:
    OAIAuditLogEvent();
    OAIAuditLogEvent(QString json);
    ~OAIAuditLogEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAuditLogEventActor getActor() const;
    void setActor(const OAIAuditLogEventActor &actor);
    bool is_actor_Set() const;
    bool is_actor_Valid() const;

    OAIAuditLogEventContext getContext() const;
    void setContext(const OAIAuditLogEventContext &context);
    bool is_context_Set() const;
    bool is_context_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    OAIObject getDetails() const;
    void setDetails(const OAIObject &details);
    bool is_details_Set() const;
    bool is_details_Valid() const;

    QString getEventCategory() const;
    void setEventCategory(const QString &event_category);
    bool is_event_category_Set() const;
    bool is_event_category_Valid() const;

    QString getEventType() const;
    void setEventType(const QString &event_type);
    bool is_event_type_Set() const;
    bool is_event_type_Valid() const;

    QString getGid() const;
    void setGid(const QString &gid);
    bool is_gid_Set() const;
    bool is_gid_Valid() const;

    OAIAuditLogEventResource getResource() const;
    void setResource(const OAIAuditLogEventResource &resource);
    bool is_resource_Set() const;
    bool is_resource_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAuditLogEventActor m_actor;
    bool m_actor_isSet;
    bool m_actor_isValid;

    OAIAuditLogEventContext m_context;
    bool m_context_isSet;
    bool m_context_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    OAIObject m_details;
    bool m_details_isSet;
    bool m_details_isValid;

    QString m_event_category;
    bool m_event_category_isSet;
    bool m_event_category_isValid;

    QString m_event_type;
    bool m_event_type_isSet;
    bool m_event_type_isValid;

    QString m_gid;
    bool m_gid_isSet;
    bool m_gid_isValid;

    OAIAuditLogEventResource m_resource;
    bool m_resource_isSet;
    bool m_resource_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAuditLogEvent)

#endif // OAIAuditLogEvent_H
