/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStoryResponse.h
 *
 * 
 */

#ifndef OAIStoryResponse_H
#define OAIStoryResponse_H

#include <QJsonObject>

#include "OAICustomFieldCompact.h"
#include "OAIEnumOption.h"
#include "OAILike.h"
#include "OAIPreview.h"
#include "OAIProjectCompact.h"
#include "OAISectionCompact.h"
#include "OAIStoryCompact.h"
#include "OAIStoryResponseDates.h"
#include "OAIStoryResponse_allOf_new_date_value.h"
#include "OAIStoryResponse_allOf_old_date_value.h"
#include "OAIStoryResponse_allOf_target.h"
#include "OAITagCompact.h"
#include "OAITaskCompact.h"
#include "OAIUserCompact.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserCompact;
class OAICustomFieldCompact;
class OAITaskCompact;
class OAILike;
class OAIStoryResponse_allOf_new_date_value;
class OAIStoryResponseDates;
class OAIEnumOption;
class OAISectionCompact;
class OAIStoryResponse_allOf_old_date_value;
class OAIPreview;
class OAIProjectCompact;
class OAIStoryCompact;
class OAITagCompact;
class OAIStoryResponse_allOf_target;

class OAIStoryResponse : public OAIObject {
public:
    OAIStoryResponse();
    OAIStoryResponse(QString json);
    ~OAIStoryResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGid() const;
    void setGid(const QString &gid);
    bool is_gid_Set() const;
    bool is_gid_Valid() const;

    QString getResourceType() const;
    void setResourceType(const QString &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getHtmlText() const;
    void setHtmlText(const QString &html_text);
    bool is_html_text_Set() const;
    bool is_html_text_Valid() const;

    bool isIsPinned() const;
    void setIsPinned(const bool &is_pinned);
    bool is_is_pinned_Set() const;
    bool is_is_pinned_Valid() const;

    QString getResourceSubtype() const;
    void setResourceSubtype(const QString &resource_subtype);
    bool is_resource_subtype_Set() const;
    bool is_resource_subtype_Valid() const;

    QString getStickerName() const;
    void setStickerName(const QString &sticker_name);
    bool is_sticker_name_Set() const;
    bool is_sticker_name_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    OAIUserCompact getAssignee() const;
    void setAssignee(const OAIUserCompact &assignee);
    bool is_assignee_Set() const;
    bool is_assignee_Valid() const;

    OAIUserCompact getCreatedBy() const;
    void setCreatedBy(const OAIUserCompact &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    OAICustomFieldCompact getCustomField() const;
    void setCustomField(const OAICustomFieldCompact &custom_field);
    bool is_custom_field_Set() const;
    bool is_custom_field_Valid() const;

    OAITaskCompact getDependency() const;
    void setDependency(const OAITaskCompact &dependency);
    bool is_dependency_Set() const;
    bool is_dependency_Valid() const;

    OAITaskCompact getDuplicateOf() const;
    void setDuplicateOf(const OAITaskCompact &duplicate_of);
    bool is_duplicate_of_Set() const;
    bool is_duplicate_of_Valid() const;

    OAITaskCompact getDuplicatedFrom() const;
    void setDuplicatedFrom(const OAITaskCompact &duplicated_from);
    bool is_duplicated_from_Set() const;
    bool is_duplicated_from_Valid() const;

    OAIUserCompact getFollower() const;
    void setFollower(const OAIUserCompact &follower);
    bool is_follower_Set() const;
    bool is_follower_Valid() const;

    bool isHearted() const;
    void setHearted(const bool &hearted);
    bool is_hearted_Set() const;
    bool is_hearted_Valid() const;

    QList<OAILike> getHearts() const;
    void setHearts(const QList<OAILike> &hearts);
    bool is_hearts_Set() const;
    bool is_hearts_Valid() const;

    bool isIsEditable() const;
    void setIsEditable(const bool &is_editable);
    bool is_is_editable_Set() const;
    bool is_is_editable_Valid() const;

    bool isIsEdited() const;
    void setIsEdited(const bool &is_edited);
    bool is_is_edited_Set() const;
    bool is_is_edited_Valid() const;

    bool isLiked() const;
    void setLiked(const bool &liked);
    bool is_liked_Set() const;
    bool is_liked_Valid() const;

    QList<OAILike> getLikes() const;
    void setLikes(const QList<OAILike> &likes);
    bool is_likes_Set() const;
    bool is_likes_Valid() const;

    QString getNewApprovalStatus() const;
    void setNewApprovalStatus(const QString &new_approval_status);
    bool is_new_approval_status_Set() const;
    bool is_new_approval_status_Valid() const;

    OAIStoryResponse_allOf_new_date_value getNewDateValue() const;
    void setNewDateValue(const OAIStoryResponse_allOf_new_date_value &new_date_value);
    bool is_new_date_value_Set() const;
    bool is_new_date_value_Valid() const;

    OAIStoryResponseDates getNewDates() const;
    void setNewDates(const OAIStoryResponseDates &new_dates);
    bool is_new_dates_Set() const;
    bool is_new_dates_Valid() const;

    OAIEnumOption getNewEnumValue() const;
    void setNewEnumValue(const OAIEnumOption &new_enum_value);
    bool is_new_enum_value_Set() const;
    bool is_new_enum_value_Valid() const;

    QList<OAIEnumOption> getNewMultiEnumValues() const;
    void setNewMultiEnumValues(const QList<OAIEnumOption> &new_multi_enum_values);
    bool is_new_multi_enum_values_Set() const;
    bool is_new_multi_enum_values_Valid() const;

    QString getNewName() const;
    void setNewName(const QString &new_name);
    bool is_new_name_Set() const;
    bool is_new_name_Valid() const;

    qint32 getNewNumberValue() const;
    void setNewNumberValue(const qint32 &new_number_value);
    bool is_new_number_value_Set() const;
    bool is_new_number_value_Valid() const;

    QList<OAIUserCompact> getNewPeopleValue() const;
    void setNewPeopleValue(const QList<OAIUserCompact> &new_people_value);
    bool is_new_people_value_Set() const;
    bool is_new_people_value_Valid() const;

    QString getNewResourceSubtype() const;
    void setNewResourceSubtype(const QString &new_resource_subtype);
    bool is_new_resource_subtype_Set() const;
    bool is_new_resource_subtype_Valid() const;

    OAISectionCompact getNewSection() const;
    void setNewSection(const OAISectionCompact &new_section);
    bool is_new_section_Set() const;
    bool is_new_section_Valid() const;

    QString getNewTextValue() const;
    void setNewTextValue(const QString &new_text_value);
    bool is_new_text_value_Set() const;
    bool is_new_text_value_Valid() const;

    qint32 getNumHearts() const;
    void setNumHearts(const qint32 &num_hearts);
    bool is_num_hearts_Set() const;
    bool is_num_hearts_Valid() const;

    qint32 getNumLikes() const;
    void setNumLikes(const qint32 &num_likes);
    bool is_num_likes_Set() const;
    bool is_num_likes_Valid() const;

    QString getOldApprovalStatus() const;
    void setOldApprovalStatus(const QString &old_approval_status);
    bool is_old_approval_status_Set() const;
    bool is_old_approval_status_Valid() const;

    OAIStoryResponse_allOf_old_date_value getOldDateValue() const;
    void setOldDateValue(const OAIStoryResponse_allOf_old_date_value &old_date_value);
    bool is_old_date_value_Set() const;
    bool is_old_date_value_Valid() const;

    OAIStoryResponseDates getOldDates() const;
    void setOldDates(const OAIStoryResponseDates &old_dates);
    bool is_old_dates_Set() const;
    bool is_old_dates_Valid() const;

    OAIEnumOption getOldEnumValue() const;
    void setOldEnumValue(const OAIEnumOption &old_enum_value);
    bool is_old_enum_value_Set() const;
    bool is_old_enum_value_Valid() const;

    QList<OAIEnumOption> getOldMultiEnumValues() const;
    void setOldMultiEnumValues(const QList<OAIEnumOption> &old_multi_enum_values);
    bool is_old_multi_enum_values_Set() const;
    bool is_old_multi_enum_values_Valid() const;

    QString getOldName() const;
    void setOldName(const QString &old_name);
    bool is_old_name_Set() const;
    bool is_old_name_Valid() const;

    qint32 getOldNumberValue() const;
    void setOldNumberValue(const qint32 &old_number_value);
    bool is_old_number_value_Set() const;
    bool is_old_number_value_Valid() const;

    QList<OAIUserCompact> getOldPeopleValue() const;
    void setOldPeopleValue(const QList<OAIUserCompact> &old_people_value);
    bool is_old_people_value_Set() const;
    bool is_old_people_value_Valid() const;

    QString getOldResourceSubtype() const;
    void setOldResourceSubtype(const QString &old_resource_subtype);
    bool is_old_resource_subtype_Set() const;
    bool is_old_resource_subtype_Valid() const;

    OAISectionCompact getOldSection() const;
    void setOldSection(const OAISectionCompact &old_section);
    bool is_old_section_Set() const;
    bool is_old_section_Valid() const;

    QString getOldTextValue() const;
    void setOldTextValue(const QString &old_text_value);
    bool is_old_text_value_Set() const;
    bool is_old_text_value_Valid() const;

    QList<OAIPreview> getPreviews() const;
    void setPreviews(const QList<OAIPreview> &previews);
    bool is_previews_Set() const;
    bool is_previews_Valid() const;

    OAIProjectCompact getProject() const;
    void setProject(const OAIProjectCompact &project);
    bool is_project_Set() const;
    bool is_project_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    OAIStoryCompact getStory() const;
    void setStory(const OAIStoryCompact &story);
    bool is_story_Set() const;
    bool is_story_Valid() const;

    OAITagCompact getTag() const;
    void setTag(const OAITagCompact &tag);
    bool is_tag_Set() const;
    bool is_tag_Valid() const;

    OAIStoryResponse_allOf_target getTarget() const;
    void setTarget(const OAIStoryResponse_allOf_target &target);
    bool is_target_Set() const;
    bool is_target_Valid() const;

    OAITaskCompact getTask() const;
    void setTask(const OAITaskCompact &task);
    bool is_task_Set() const;
    bool is_task_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_gid;
    bool m_gid_isSet;
    bool m_gid_isValid;

    QString m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_html_text;
    bool m_html_text_isSet;
    bool m_html_text_isValid;

    bool m_is_pinned;
    bool m_is_pinned_isSet;
    bool m_is_pinned_isValid;

    QString m_resource_subtype;
    bool m_resource_subtype_isSet;
    bool m_resource_subtype_isValid;

    QString m_sticker_name;
    bool m_sticker_name_isSet;
    bool m_sticker_name_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    OAIUserCompact m_assignee;
    bool m_assignee_isSet;
    bool m_assignee_isValid;

    OAIUserCompact m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    OAICustomFieldCompact m_custom_field;
    bool m_custom_field_isSet;
    bool m_custom_field_isValid;

    OAITaskCompact m_dependency;
    bool m_dependency_isSet;
    bool m_dependency_isValid;

    OAITaskCompact m_duplicate_of;
    bool m_duplicate_of_isSet;
    bool m_duplicate_of_isValid;

    OAITaskCompact m_duplicated_from;
    bool m_duplicated_from_isSet;
    bool m_duplicated_from_isValid;

    OAIUserCompact m_follower;
    bool m_follower_isSet;
    bool m_follower_isValid;

    bool m_hearted;
    bool m_hearted_isSet;
    bool m_hearted_isValid;

    QList<OAILike> m_hearts;
    bool m_hearts_isSet;
    bool m_hearts_isValid;

    bool m_is_editable;
    bool m_is_editable_isSet;
    bool m_is_editable_isValid;

    bool m_is_edited;
    bool m_is_edited_isSet;
    bool m_is_edited_isValid;

    bool m_liked;
    bool m_liked_isSet;
    bool m_liked_isValid;

    QList<OAILike> m_likes;
    bool m_likes_isSet;
    bool m_likes_isValid;

    QString m_new_approval_status;
    bool m_new_approval_status_isSet;
    bool m_new_approval_status_isValid;

    OAIStoryResponse_allOf_new_date_value m_new_date_value;
    bool m_new_date_value_isSet;
    bool m_new_date_value_isValid;

    OAIStoryResponseDates m_new_dates;
    bool m_new_dates_isSet;
    bool m_new_dates_isValid;

    OAIEnumOption m_new_enum_value;
    bool m_new_enum_value_isSet;
    bool m_new_enum_value_isValid;

    QList<OAIEnumOption> m_new_multi_enum_values;
    bool m_new_multi_enum_values_isSet;
    bool m_new_multi_enum_values_isValid;

    QString m_new_name;
    bool m_new_name_isSet;
    bool m_new_name_isValid;

    qint32 m_new_number_value;
    bool m_new_number_value_isSet;
    bool m_new_number_value_isValid;

    QList<OAIUserCompact> m_new_people_value;
    bool m_new_people_value_isSet;
    bool m_new_people_value_isValid;

    QString m_new_resource_subtype;
    bool m_new_resource_subtype_isSet;
    bool m_new_resource_subtype_isValid;

    OAISectionCompact m_new_section;
    bool m_new_section_isSet;
    bool m_new_section_isValid;

    QString m_new_text_value;
    bool m_new_text_value_isSet;
    bool m_new_text_value_isValid;

    qint32 m_num_hearts;
    bool m_num_hearts_isSet;
    bool m_num_hearts_isValid;

    qint32 m_num_likes;
    bool m_num_likes_isSet;
    bool m_num_likes_isValid;

    QString m_old_approval_status;
    bool m_old_approval_status_isSet;
    bool m_old_approval_status_isValid;

    OAIStoryResponse_allOf_old_date_value m_old_date_value;
    bool m_old_date_value_isSet;
    bool m_old_date_value_isValid;

    OAIStoryResponseDates m_old_dates;
    bool m_old_dates_isSet;
    bool m_old_dates_isValid;

    OAIEnumOption m_old_enum_value;
    bool m_old_enum_value_isSet;
    bool m_old_enum_value_isValid;

    QList<OAIEnumOption> m_old_multi_enum_values;
    bool m_old_multi_enum_values_isSet;
    bool m_old_multi_enum_values_isValid;

    QString m_old_name;
    bool m_old_name_isSet;
    bool m_old_name_isValid;

    qint32 m_old_number_value;
    bool m_old_number_value_isSet;
    bool m_old_number_value_isValid;

    QList<OAIUserCompact> m_old_people_value;
    bool m_old_people_value_isSet;
    bool m_old_people_value_isValid;

    QString m_old_resource_subtype;
    bool m_old_resource_subtype_isSet;
    bool m_old_resource_subtype_isValid;

    OAISectionCompact m_old_section;
    bool m_old_section_isSet;
    bool m_old_section_isValid;

    QString m_old_text_value;
    bool m_old_text_value_isSet;
    bool m_old_text_value_isValid;

    QList<OAIPreview> m_previews;
    bool m_previews_isSet;
    bool m_previews_isValid;

    OAIProjectCompact m_project;
    bool m_project_isSet;
    bool m_project_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    OAIStoryCompact m_story;
    bool m_story_isSet;
    bool m_story_isValid;

    OAITagCompact m_tag;
    bool m_tag_isSet;
    bool m_tag_isValid;

    OAIStoryResponse_allOf_target m_target;
    bool m_target_isSet;
    bool m_target_isValid;

    OAITaskCompact m_task;
    bool m_task_isSet;
    bool m_task_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStoryResponse)

#endif // OAIStoryResponse_H
