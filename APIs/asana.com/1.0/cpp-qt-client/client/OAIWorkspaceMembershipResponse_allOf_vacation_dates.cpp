/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWorkspaceMembershipResponse_allOf_vacation_dates.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWorkspaceMembershipResponse_allOf_vacation_dates::OAIWorkspaceMembershipResponse_allOf_vacation_dates(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWorkspaceMembershipResponse_allOf_vacation_dates::OAIWorkspaceMembershipResponse_allOf_vacation_dates() {
    this->initializeModel();
}

OAIWorkspaceMembershipResponse_allOf_vacation_dates::~OAIWorkspaceMembershipResponse_allOf_vacation_dates() {}

void OAIWorkspaceMembershipResponse_allOf_vacation_dates::initializeModel() {

    m_end_on_isSet = false;
    m_end_on_isValid = false;

    m_start_on_isSet = false;
    m_start_on_isValid = false;
}

void OAIWorkspaceMembershipResponse_allOf_vacation_dates::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWorkspaceMembershipResponse_allOf_vacation_dates::fromJsonObject(QJsonObject json) {

    m_end_on_isValid = ::OpenAPI::fromJsonValue(m_end_on, json[QString("end_on")]);
    m_end_on_isSet = !json[QString("end_on")].isNull() && m_end_on_isValid;

    m_start_on_isValid = ::OpenAPI::fromJsonValue(m_start_on, json[QString("start_on")]);
    m_start_on_isSet = !json[QString("start_on")].isNull() && m_start_on_isValid;
}

QString OAIWorkspaceMembershipResponse_allOf_vacation_dates::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWorkspaceMembershipResponse_allOf_vacation_dates::asJsonObject() const {
    QJsonObject obj;
    if (m_end_on_isSet) {
        obj.insert(QString("end_on"), ::OpenAPI::toJsonValue(m_end_on));
    }
    if (m_start_on_isSet) {
        obj.insert(QString("start_on"), ::OpenAPI::toJsonValue(m_start_on));
    }
    return obj;
}

QString OAIWorkspaceMembershipResponse_allOf_vacation_dates::getEndOn() const {
    return m_end_on;
}
void OAIWorkspaceMembershipResponse_allOf_vacation_dates::setEndOn(const QString &end_on) {
    m_end_on = end_on;
    m_end_on_isSet = true;
}

bool OAIWorkspaceMembershipResponse_allOf_vacation_dates::is_end_on_Set() const{
    return m_end_on_isSet;
}

bool OAIWorkspaceMembershipResponse_allOf_vacation_dates::is_end_on_Valid() const{
    return m_end_on_isValid;
}

QString OAIWorkspaceMembershipResponse_allOf_vacation_dates::getStartOn() const {
    return m_start_on;
}
void OAIWorkspaceMembershipResponse_allOf_vacation_dates::setStartOn(const QString &start_on) {
    m_start_on = start_on;
    m_start_on_isSet = true;
}

bool OAIWorkspaceMembershipResponse_allOf_vacation_dates::is_start_on_Set() const{
    return m_start_on_isSet;
}

bool OAIWorkspaceMembershipResponse_allOf_vacation_dates::is_start_on_Valid() const{
    return m_start_on_isValid;
}

bool OAIWorkspaceMembershipResponse_allOf_vacation_dates::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_on_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_on_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWorkspaceMembershipResponse_allOf_vacation_dates::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
