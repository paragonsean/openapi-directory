/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomFieldSettingResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomFieldSettingResponse::OAICustomFieldSettingResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomFieldSettingResponse::OAICustomFieldSettingResponse() {
    this->initializeModel();
}

OAICustomFieldSettingResponse::~OAICustomFieldSettingResponse() {}

void OAICustomFieldSettingResponse::initializeModel() {

    m_gid_isSet = false;
    m_gid_isValid = false;

    m_resource_type_isSet = false;
    m_resource_type_isValid = false;

    m_custom_field_isSet = false;
    m_custom_field_isValid = false;

    m_is_important_isSet = false;
    m_is_important_isValid = false;

    m_parent_isSet = false;
    m_parent_isValid = false;

    m_project_isSet = false;
    m_project_isValid = false;
}

void OAICustomFieldSettingResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomFieldSettingResponse::fromJsonObject(QJsonObject json) {

    m_gid_isValid = ::OpenAPI::fromJsonValue(m_gid, json[QString("gid")]);
    m_gid_isSet = !json[QString("gid")].isNull() && m_gid_isValid;

    m_resource_type_isValid = ::OpenAPI::fromJsonValue(m_resource_type, json[QString("resource_type")]);
    m_resource_type_isSet = !json[QString("resource_type")].isNull() && m_resource_type_isValid;

    m_custom_field_isValid = ::OpenAPI::fromJsonValue(m_custom_field, json[QString("custom_field")]);
    m_custom_field_isSet = !json[QString("custom_field")].isNull() && m_custom_field_isValid;

    m_is_important_isValid = ::OpenAPI::fromJsonValue(m_is_important, json[QString("is_important")]);
    m_is_important_isSet = !json[QString("is_important")].isNull() && m_is_important_isValid;

    m_parent_isValid = ::OpenAPI::fromJsonValue(m_parent, json[QString("parent")]);
    m_parent_isSet = !json[QString("parent")].isNull() && m_parent_isValid;

    m_project_isValid = ::OpenAPI::fromJsonValue(m_project, json[QString("project")]);
    m_project_isSet = !json[QString("project")].isNull() && m_project_isValid;
}

QString OAICustomFieldSettingResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomFieldSettingResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_gid_isSet) {
        obj.insert(QString("gid"), ::OpenAPI::toJsonValue(m_gid));
    }
    if (m_resource_type_isSet) {
        obj.insert(QString("resource_type"), ::OpenAPI::toJsonValue(m_resource_type));
    }
    if (m_custom_field.isSet()) {
        obj.insert(QString("custom_field"), ::OpenAPI::toJsonValue(m_custom_field));
    }
    if (m_is_important_isSet) {
        obj.insert(QString("is_important"), ::OpenAPI::toJsonValue(m_is_important));
    }
    if (m_parent.isSet()) {
        obj.insert(QString("parent"), ::OpenAPI::toJsonValue(m_parent));
    }
    if (m_project.isSet()) {
        obj.insert(QString("project"), ::OpenAPI::toJsonValue(m_project));
    }
    return obj;
}

QString OAICustomFieldSettingResponse::getGid() const {
    return m_gid;
}
void OAICustomFieldSettingResponse::setGid(const QString &gid) {
    m_gid = gid;
    m_gid_isSet = true;
}

bool OAICustomFieldSettingResponse::is_gid_Set() const{
    return m_gid_isSet;
}

bool OAICustomFieldSettingResponse::is_gid_Valid() const{
    return m_gid_isValid;
}

QString OAICustomFieldSettingResponse::getResourceType() const {
    return m_resource_type;
}
void OAICustomFieldSettingResponse::setResourceType(const QString &resource_type) {
    m_resource_type = resource_type;
    m_resource_type_isSet = true;
}

bool OAICustomFieldSettingResponse::is_resource_type_Set() const{
    return m_resource_type_isSet;
}

bool OAICustomFieldSettingResponse::is_resource_type_Valid() const{
    return m_resource_type_isValid;
}

OAICustomFieldSettingResponse_allOf_custom_field OAICustomFieldSettingResponse::getCustomField() const {
    return m_custom_field;
}
void OAICustomFieldSettingResponse::setCustomField(const OAICustomFieldSettingResponse_allOf_custom_field &custom_field) {
    m_custom_field = custom_field;
    m_custom_field_isSet = true;
}

bool OAICustomFieldSettingResponse::is_custom_field_Set() const{
    return m_custom_field_isSet;
}

bool OAICustomFieldSettingResponse::is_custom_field_Valid() const{
    return m_custom_field_isValid;
}

bool OAICustomFieldSettingResponse::isIsImportant() const {
    return m_is_important;
}
void OAICustomFieldSettingResponse::setIsImportant(const bool &is_important) {
    m_is_important = is_important;
    m_is_important_isSet = true;
}

bool OAICustomFieldSettingResponse::is_is_important_Set() const{
    return m_is_important_isSet;
}

bool OAICustomFieldSettingResponse::is_is_important_Valid() const{
    return m_is_important_isValid;
}

OAICustomFieldSettingResponse_allOf_parent OAICustomFieldSettingResponse::getParent() const {
    return m_parent;
}
void OAICustomFieldSettingResponse::setParent(const OAICustomFieldSettingResponse_allOf_parent &parent) {
    m_parent = parent;
    m_parent_isSet = true;
}

bool OAICustomFieldSettingResponse::is_parent_Set() const{
    return m_parent_isSet;
}

bool OAICustomFieldSettingResponse::is_parent_Valid() const{
    return m_parent_isValid;
}

OAICustomFieldSettingResponse_allOf_project OAICustomFieldSettingResponse::getProject() const {
    return m_project;
}
void OAICustomFieldSettingResponse::setProject(const OAICustomFieldSettingResponse_allOf_project &project) {
    m_project = project;
    m_project_isSet = true;
}

bool OAICustomFieldSettingResponse::is_project_Set() const{
    return m_project_isSet;
}

bool OAICustomFieldSettingResponse::is_project_Valid() const{
    return m_project_isValid;
}

bool OAICustomFieldSettingResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_gid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_field.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_important_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_project.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomFieldSettingResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
