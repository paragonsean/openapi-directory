/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRemoveUserForWorkspace_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRemoveUserForWorkspace_request::OAIRemoveUserForWorkspace_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRemoveUserForWorkspace_request::OAIRemoveUserForWorkspace_request() {
    this->initializeModel();
}

OAIRemoveUserForWorkspace_request::~OAIRemoveUserForWorkspace_request() {}

void OAIRemoveUserForWorkspace_request::initializeModel() {

    m_data_isSet = false;
    m_data_isValid = false;
}

void OAIRemoveUserForWorkspace_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRemoveUserForWorkspace_request::fromJsonObject(QJsonObject json) {

    m_data_isValid = ::OpenAPI::fromJsonValue(m_data, json[QString("data")]);
    m_data_isSet = !json[QString("data")].isNull() && m_data_isValid;
}

QString OAIRemoveUserForWorkspace_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRemoveUserForWorkspace_request::asJsonObject() const {
    QJsonObject obj;
    if (m_data.isSet()) {
        obj.insert(QString("data"), ::OpenAPI::toJsonValue(m_data));
    }
    return obj;
}

OAIWorkspaceRemoveUserRequest OAIRemoveUserForWorkspace_request::getData() const {
    return m_data;
}
void OAIRemoveUserForWorkspace_request::setData(const OAIWorkspaceRemoveUserRequest &data) {
    m_data = data;
    m_data_isSet = true;
}

bool OAIRemoveUserForWorkspace_request::is_data_Set() const{
    return m_data_isSet;
}

bool OAIRemoveUserForWorkspace_request::is_data_Valid() const{
    return m_data_isValid;
}

bool OAIRemoveUserForWorkspace_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRemoveUserForWorkspace_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
