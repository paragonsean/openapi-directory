/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAuditLogEventContext.h
 *
 * The context from which this event originated.
 */

#ifndef OAIAuditLogEventContext_H
#define OAIAuditLogEventContext_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAuditLogEventContext : public OAIObject {
public:
    OAIAuditLogEventContext();
    OAIAuditLogEventContext(QString json);
    ~OAIAuditLogEventContext() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApiAuthenticationMethod() const;
    void setApiAuthenticationMethod(const QString &api_authentication_method);
    bool is_api_authentication_method_Set() const;
    bool is_api_authentication_method_Valid() const;

    QString getClientIpAddress() const;
    void setClientIpAddress(const QString &client_ip_address);
    bool is_client_ip_address_Set() const;
    bool is_client_ip_address_Valid() const;

    QString getContextType() const;
    void setContextType(const QString &context_type);
    bool is_context_type_Set() const;
    bool is_context_type_Valid() const;

    QString getOauthAppName() const;
    void setOauthAppName(const QString &oauth_app_name);
    bool is_oauth_app_name_Set() const;
    bool is_oauth_app_name_Valid() const;

    QString getUserAgent() const;
    void setUserAgent(const QString &user_agent);
    bool is_user_agent_Set() const;
    bool is_user_agent_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_api_authentication_method;
    bool m_api_authentication_method_isSet;
    bool m_api_authentication_method_isValid;

    QString m_client_ip_address;
    bool m_client_ip_address_isSet;
    bool m_client_ip_address_isValid;

    QString m_context_type;
    bool m_context_type_isSet;
    bool m_context_type_isValid;

    QString m_oauth_app_name;
    bool m_oauth_app_name_isSet;
    bool m_oauth_app_name_isValid;

    QString m_user_agent;
    bool m_user_agent_isSet;
    bool m_user_agent_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAuditLogEventContext)

#endif // OAIAuditLogEventContext_H
