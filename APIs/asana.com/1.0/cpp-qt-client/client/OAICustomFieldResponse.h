/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICustomFieldResponse.h
 *
 * 
 */

#ifndef OAICustomFieldResponse_H
#define OAICustomFieldResponse_H

#include <QJsonObject>

#include "OAICustomFieldCompact_allOf_date_value.h"
#include "OAICustomFieldCompact_allOf_enum_value.h"
#include "OAIEnumOption.h"
#include "OAIUserCompact.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICustomFieldCompact_allOf_date_value;
class OAIEnumOption;
class OAICustomFieldCompact_allOf_enum_value;
class OAIUserCompact;

class OAICustomFieldResponse : public OAIObject {
public:
    OAICustomFieldResponse();
    OAICustomFieldResponse(QString json);
    ~OAICustomFieldResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGid() const;
    void setGid(const QString &gid);
    bool is_gid_Set() const;
    bool is_gid_Valid() const;

    QString getResourceType() const;
    void setResourceType(const QString &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    OAICustomFieldCompact_allOf_date_value getDateValue() const;
    void setDateValue(const OAICustomFieldCompact_allOf_date_value &date_value);
    bool is_date_value_Set() const;
    bool is_date_value_Valid() const;

    QString getDisplayValue() const;
    void setDisplayValue(const QString &display_value);
    bool is_display_value_Set() const;
    bool is_display_value_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QList<OAIEnumOption> getEnumOptions() const;
    void setEnumOptions(const QList<OAIEnumOption> &enum_options);
    bool is_enum_options_Set() const;
    bool is_enum_options_Valid() const;

    OAICustomFieldCompact_allOf_enum_value getEnumValue() const;
    void setEnumValue(const OAICustomFieldCompact_allOf_enum_value &enum_value);
    bool is_enum_value_Set() const;
    bool is_enum_value_Valid() const;

    QList<OAIEnumOption> getMultiEnumValues() const;
    void setMultiEnumValues(const QList<OAIEnumOption> &multi_enum_values);
    bool is_multi_enum_values_Set() const;
    bool is_multi_enum_values_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    double getNumberValue() const;
    void setNumberValue(const double &number_value);
    bool is_number_value_Set() const;
    bool is_number_value_Valid() const;

    QString getResourceSubtype() const;
    void setResourceSubtype(const QString &resource_subtype);
    bool is_resource_subtype_Set() const;
    bool is_resource_subtype_Valid() const;

    QString getTextValue() const;
    void setTextValue(const QString &text_value);
    bool is_text_value_Set() const;
    bool is_text_value_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getAsanaCreatedField() const;
    void setAsanaCreatedField(const QString &asana_created_field);
    bool is_asana_created_field_Set() const;
    bool is_asana_created_field_Valid() const;

    QString getCurrencyCode() const;
    void setCurrencyCode(const QString &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    QString getCustomLabel() const;
    void setCustomLabel(const QString &custom_label);
    bool is_custom_label_Set() const;
    bool is_custom_label_Valid() const;

    QString getCustomLabelPosition() const;
    void setCustomLabelPosition(const QString &custom_label_position);
    bool is_custom_label_position_Set() const;
    bool is_custom_label_position_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getFormat() const;
    void setFormat(const QString &format);
    bool is_format_Set() const;
    bool is_format_Valid() const;

    bool isHasNotificationsEnabled() const;
    void setHasNotificationsEnabled(const bool &has_notifications_enabled);
    bool is_has_notifications_enabled_Set() const;
    bool is_has_notifications_enabled_Valid() const;

    bool isIsGlobalToWorkspace() const;
    void setIsGlobalToWorkspace(const bool &is_global_to_workspace);
    bool is_is_global_to_workspace_Set() const;
    bool is_is_global_to_workspace_Valid() const;

    qint32 getPrecision() const;
    void setPrecision(const qint32 &precision);
    bool is_precision_Set() const;
    bool is_precision_Valid() const;

    OAIUserCompact getCreatedBy() const;
    void setCreatedBy(const OAIUserCompact &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    QList<OAIUserCompact> getPeopleValue() const;
    void setPeopleValue(const QList<OAIUserCompact> &people_value);
    bool is_people_value_Set() const;
    bool is_people_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_gid;
    bool m_gid_isSet;
    bool m_gid_isValid;

    QString m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;

    OAICustomFieldCompact_allOf_date_value m_date_value;
    bool m_date_value_isSet;
    bool m_date_value_isValid;

    QString m_display_value;
    bool m_display_value_isSet;
    bool m_display_value_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QList<OAIEnumOption> m_enum_options;
    bool m_enum_options_isSet;
    bool m_enum_options_isValid;

    OAICustomFieldCompact_allOf_enum_value m_enum_value;
    bool m_enum_value_isSet;
    bool m_enum_value_isValid;

    QList<OAIEnumOption> m_multi_enum_values;
    bool m_multi_enum_values_isSet;
    bool m_multi_enum_values_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    double m_number_value;
    bool m_number_value_isSet;
    bool m_number_value_isValid;

    QString m_resource_subtype;
    bool m_resource_subtype_isSet;
    bool m_resource_subtype_isValid;

    QString m_text_value;
    bool m_text_value_isSet;
    bool m_text_value_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_asana_created_field;
    bool m_asana_created_field_isSet;
    bool m_asana_created_field_isValid;

    QString m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;

    QString m_custom_label;
    bool m_custom_label_isSet;
    bool m_custom_label_isValid;

    QString m_custom_label_position;
    bool m_custom_label_position_isSet;
    bool m_custom_label_position_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_format;
    bool m_format_isSet;
    bool m_format_isValid;

    bool m_has_notifications_enabled;
    bool m_has_notifications_enabled_isSet;
    bool m_has_notifications_enabled_isValid;

    bool m_is_global_to_workspace;
    bool m_is_global_to_workspace_isSet;
    bool m_is_global_to_workspace_isValid;

    qint32 m_precision;
    bool m_precision_isSet;
    bool m_precision_isValid;

    OAIUserCompact m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    QList<OAIUserCompact> m_people_value;
    bool m_people_value_isSet;
    bool m_people_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICustomFieldResponse)

#endif // OAICustomFieldResponse_H
