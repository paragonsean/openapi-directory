/**
 * reverb
 * reverb
 *
 * The version of the OpenAPI document: 3.0
 * Contact: integrations@reverb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MyOrdersSellingIdShipPostRequest model module.
 * @module model/MyOrdersSellingIdShipPostRequest
 * @version 3.0
 */
class MyOrdersSellingIdShipPostRequest {
    /**
     * Constructs a new <code>MyOrdersSellingIdShipPostRequest</code>.
     * @alias module:model/MyOrdersSellingIdShipPostRequest
     * @param provider {String} Shipping provider: One of UPS, USPS, FedEx, DHL Deutschland, DHLExpress, DHLGlobalMail, DHL, Canada Post, CanPar, Royal Mail, PostNL, Australia Post, EMS, La Poste - Colissimo, China Post, GLS, Parcelforce, Purolator, Interlogistica, Correos España, Ukraine Post, DPD Germany, DPD UK, DPD France, Hermes, TNT, Other
     * @param sendNotification {Boolean} Should we send an email notification to the buyer
     * @param trackingNumber {String} Tracking number provided by the shipping provider
     */
    constructor(provider, sendNotification, trackingNumber) { 
        
        MyOrdersSellingIdShipPostRequest.initialize(this, provider, sendNotification, trackingNumber);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, provider, sendNotification, trackingNumber) { 
        obj['provider'] = provider;
        obj['send_notification'] = sendNotification;
        obj['tracking_number'] = trackingNumber;
    }

    /**
     * Constructs a <code>MyOrdersSellingIdShipPostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MyOrdersSellingIdShipPostRequest} obj Optional instance to populate.
     * @return {module:model/MyOrdersSellingIdShipPostRequest} The populated <code>MyOrdersSellingIdShipPostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MyOrdersSellingIdShipPostRequest();

            if (data.hasOwnProperty('provider')) {
                obj['provider'] = ApiClient.convertToType(data['provider'], 'String');
            }
            if (data.hasOwnProperty('send_notification')) {
                obj['send_notification'] = ApiClient.convertToType(data['send_notification'], 'Boolean');
            }
            if (data.hasOwnProperty('tracking_number')) {
                obj['tracking_number'] = ApiClient.convertToType(data['tracking_number'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MyOrdersSellingIdShipPostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MyOrdersSellingIdShipPostRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MyOrdersSellingIdShipPostRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['provider'] && !(typeof data['provider'] === 'string' || data['provider'] instanceof String)) {
            throw new Error("Expected the field `provider` to be a primitive type in the JSON string but got " + data['provider']);
        }
        // ensure the json data is a string
        if (data['tracking_number'] && !(typeof data['tracking_number'] === 'string' || data['tracking_number'] instanceof String)) {
            throw new Error("Expected the field `tracking_number` to be a primitive type in the JSON string but got " + data['tracking_number']);
        }

        return true;
    }


}

MyOrdersSellingIdShipPostRequest.RequiredProperties = ["provider", "send_notification", "tracking_number"];

/**
 * Shipping provider: One of UPS, USPS, FedEx, DHL Deutschland, DHLExpress, DHLGlobalMail, DHL, Canada Post, CanPar, Royal Mail, PostNL, Australia Post, EMS, La Poste - Colissimo, China Post, GLS, Parcelforce, Purolator, Interlogistica, Correos España, Ukraine Post, DPD Germany, DPD UK, DPD France, Hermes, TNT, Other
 * @member {String} provider
 */
MyOrdersSellingIdShipPostRequest.prototype['provider'] = undefined;

/**
 * Should we send an email notification to the buyer
 * @member {Boolean} send_notification
 */
MyOrdersSellingIdShipPostRequest.prototype['send_notification'] = undefined;

/**
 * Tracking number provided by the shipping provider
 * @member {String} tracking_number
 */
MyOrdersSellingIdShipPostRequest.prototype['tracking_number'] = undefined;






export default MyOrdersSellingIdShipPostRequest;

