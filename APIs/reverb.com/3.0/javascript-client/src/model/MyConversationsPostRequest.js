/**
 * reverb
 * reverb
 *
 * The version of the OpenAPI document: 3.0
 * Contact: integrations@reverb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MyConversationsPostRequest model module.
 * @module model/MyConversationsPostRequest
 * @version 3.0
 */
class MyConversationsPostRequest {
    /**
     * Constructs a new <code>MyConversationsPostRequest</code>.
     * @alias module:model/MyConversationsPostRequest
     * @param body {String} The body of the message
     */
    constructor(body) { 
        
        MyConversationsPostRequest.initialize(this, body);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, body) { 
        obj['body'] = body;
    }

    /**
     * Constructs a <code>MyConversationsPostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MyConversationsPostRequest} obj Optional instance to populate.
     * @return {module:model/MyConversationsPostRequest} The populated <code>MyConversationsPostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MyConversationsPostRequest();

            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('cloudinary_photos')) {
                obj['cloudinary_photos'] = ApiClient.convertToType(data['cloudinary_photos'], ['String']);
            }
            if (data.hasOwnProperty('listing_id')) {
                obj['listing_id'] = ApiClient.convertToType(data['listing_id'], 'Number');
            }
            if (data.hasOwnProperty('recipient_id')) {
                obj['recipient_id'] = ApiClient.convertToType(data['recipient_id'], 'Number');
            }
            if (data.hasOwnProperty('recipient_uuid')) {
                obj['recipient_uuid'] = ApiClient.convertToType(data['recipient_uuid'], 'String');
            }
            if (data.hasOwnProperty('shop_id')) {
                obj['shop_id'] = ApiClient.convertToType(data['shop_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MyConversationsPostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MyConversationsPostRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MyConversationsPostRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['body'] && !(typeof data['body'] === 'string' || data['body'] instanceof String)) {
            throw new Error("Expected the field `body` to be a primitive type in the JSON string but got " + data['body']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['cloudinary_photos'])) {
            throw new Error("Expected the field `cloudinary_photos` to be an array in the JSON data but got " + data['cloudinary_photos']);
        }
        // ensure the json data is a string
        if (data['recipient_uuid'] && !(typeof data['recipient_uuid'] === 'string' || data['recipient_uuid'] instanceof String)) {
            throw new Error("Expected the field `recipient_uuid` to be a primitive type in the JSON string but got " + data['recipient_uuid']);
        }
        // ensure the json data is a string
        if (data['shop_id'] && !(typeof data['shop_id'] === 'string' || data['shop_id'] instanceof String)) {
            throw new Error("Expected the field `shop_id` to be a primitive type in the JSON string but got " + data['shop_id']);
        }

        return true;
    }


}

MyConversationsPostRequest.RequiredProperties = ["body"];

/**
 * The body of the message
 * @member {String} body
 */
MyConversationsPostRequest.prototype['body'] = undefined;

/**
 * An array of cloudinary data hashes (Reverb internal use only).
 * @member {Array.<String>} cloudinary_photos
 */
MyConversationsPostRequest.prototype['cloudinary_photos'] = undefined;

/**
 * The id of the listing being discussed
 * @member {Number} listing_id
 */
MyConversationsPostRequest.prototype['listing_id'] = undefined;

/**
 * The id of the user you are trying to contact
 * @member {Number} recipient_id
 */
MyConversationsPostRequest.prototype['recipient_id'] = undefined;

/**
 * The uuid of the user you are trying to contact
 * @member {String} recipient_uuid
 */
MyConversationsPostRequest.prototype['recipient_uuid'] = undefined;

/**
 * The id of the shop you are trying to contact
 * @member {String} shop_id
 */
MyConversationsPostRequest.prototype['shop_id'] = undefined;






export default MyConversationsPostRequest;

