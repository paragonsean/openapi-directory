/**
 * reverb
 * reverb
 *
 * The version of the OpenAPI document: 3.0
 * Contact: integrations@reverb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_shop_put_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_shop_put_request::OAI_shop_put_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_shop_put_request::OAI_shop_put_request() {
    this->initializeModel();
}

OAI_shop_put_request::~OAI_shop_put_request() {}

void OAI_shop_put_request::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_legal_country_code_isSet = false;
    m_legal_country_code_isValid = false;

    m_legal_country_code_confirmed_isSet = false;
    m_legal_country_code_confirmed_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_payment_policy_isSet = false;
    m_payment_policy_isValid = false;

    m_return_policy_isSet = false;
    m_return_policy_isValid = false;

    m_shipping_policy_isSet = false;
    m_shipping_policy_isValid = false;

    m_shop_type_isSet = false;
    m_shop_type_isValid = false;

    m_website_isSet = false;
    m_website_isValid = false;
}

void OAI_shop_put_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_shop_put_request::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_legal_country_code_isValid = ::OpenAPI::fromJsonValue(m_legal_country_code, json[QString("legal_country_code")]);
    m_legal_country_code_isSet = !json[QString("legal_country_code")].isNull() && m_legal_country_code_isValid;

    m_legal_country_code_confirmed_isValid = ::OpenAPI::fromJsonValue(m_legal_country_code_confirmed, json[QString("legal_country_code_confirmed")]);
    m_legal_country_code_confirmed_isSet = !json[QString("legal_country_code_confirmed")].isNull() && m_legal_country_code_confirmed_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_payment_policy_isValid = ::OpenAPI::fromJsonValue(m_payment_policy, json[QString("payment_policy")]);
    m_payment_policy_isSet = !json[QString("payment_policy")].isNull() && m_payment_policy_isValid;

    m_return_policy_isValid = ::OpenAPI::fromJsonValue(m_return_policy, json[QString("return_policy")]);
    m_return_policy_isSet = !json[QString("return_policy")].isNull() && m_return_policy_isValid;

    m_shipping_policy_isValid = ::OpenAPI::fromJsonValue(m_shipping_policy, json[QString("shipping_policy")]);
    m_shipping_policy_isSet = !json[QString("shipping_policy")].isNull() && m_shipping_policy_isValid;

    m_shop_type_isValid = ::OpenAPI::fromJsonValue(m_shop_type, json[QString("shop_type")]);
    m_shop_type_isSet = !json[QString("shop_type")].isNull() && m_shop_type_isValid;

    m_website_isValid = ::OpenAPI::fromJsonValue(m_website, json[QString("website")]);
    m_website_isSet = !json[QString("website")].isNull() && m_website_isValid;
}

QString OAI_shop_put_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_shop_put_request::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_legal_country_code_isSet) {
        obj.insert(QString("legal_country_code"), ::OpenAPI::toJsonValue(m_legal_country_code));
    }
    if (m_legal_country_code_confirmed_isSet) {
        obj.insert(QString("legal_country_code_confirmed"), ::OpenAPI::toJsonValue(m_legal_country_code_confirmed));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_payment_policy_isSet) {
        obj.insert(QString("payment_policy"), ::OpenAPI::toJsonValue(m_payment_policy));
    }
    if (m_return_policy_isSet) {
        obj.insert(QString("return_policy"), ::OpenAPI::toJsonValue(m_return_policy));
    }
    if (m_shipping_policy_isSet) {
        obj.insert(QString("shipping_policy"), ::OpenAPI::toJsonValue(m_shipping_policy));
    }
    if (m_shop_type_isSet) {
        obj.insert(QString("shop_type"), ::OpenAPI::toJsonValue(m_shop_type));
    }
    if (m_website_isSet) {
        obj.insert(QString("website"), ::OpenAPI::toJsonValue(m_website));
    }
    return obj;
}

OAI_shop_put_request_address OAI_shop_put_request::getAddress() const {
    return m_address;
}
void OAI_shop_put_request::setAddress(const OAI_shop_put_request_address &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAI_shop_put_request::is_address_Set() const{
    return m_address_isSet;
}

bool OAI_shop_put_request::is_address_Valid() const{
    return m_address_isValid;
}

QString OAI_shop_put_request::getCurrency() const {
    return m_currency;
}
void OAI_shop_put_request::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAI_shop_put_request::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAI_shop_put_request::is_currency_Valid() const{
    return m_currency_isValid;
}

QString OAI_shop_put_request::getDescription() const {
    return m_description;
}
void OAI_shop_put_request::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAI_shop_put_request::is_description_Set() const{
    return m_description_isSet;
}

bool OAI_shop_put_request::is_description_Valid() const{
    return m_description_isValid;
}

QString OAI_shop_put_request::getLegalCountryCode() const {
    return m_legal_country_code;
}
void OAI_shop_put_request::setLegalCountryCode(const QString &legal_country_code) {
    m_legal_country_code = legal_country_code;
    m_legal_country_code_isSet = true;
}

bool OAI_shop_put_request::is_legal_country_code_Set() const{
    return m_legal_country_code_isSet;
}

bool OAI_shop_put_request::is_legal_country_code_Valid() const{
    return m_legal_country_code_isValid;
}

bool OAI_shop_put_request::isLegalCountryCodeConfirmed() const {
    return m_legal_country_code_confirmed;
}
void OAI_shop_put_request::setLegalCountryCodeConfirmed(const bool &legal_country_code_confirmed) {
    m_legal_country_code_confirmed = legal_country_code_confirmed;
    m_legal_country_code_confirmed_isSet = true;
}

bool OAI_shop_put_request::is_legal_country_code_confirmed_Set() const{
    return m_legal_country_code_confirmed_isSet;
}

bool OAI_shop_put_request::is_legal_country_code_confirmed_Valid() const{
    return m_legal_country_code_confirmed_isValid;
}

QString OAI_shop_put_request::getName() const {
    return m_name;
}
void OAI_shop_put_request::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAI_shop_put_request::is_name_Set() const{
    return m_name_isSet;
}

bool OAI_shop_put_request::is_name_Valid() const{
    return m_name_isValid;
}

QString OAI_shop_put_request::getPaymentPolicy() const {
    return m_payment_policy;
}
void OAI_shop_put_request::setPaymentPolicy(const QString &payment_policy) {
    m_payment_policy = payment_policy;
    m_payment_policy_isSet = true;
}

bool OAI_shop_put_request::is_payment_policy_Set() const{
    return m_payment_policy_isSet;
}

bool OAI_shop_put_request::is_payment_policy_Valid() const{
    return m_payment_policy_isValid;
}

QString OAI_shop_put_request::getReturnPolicy() const {
    return m_return_policy;
}
void OAI_shop_put_request::setReturnPolicy(const QString &return_policy) {
    m_return_policy = return_policy;
    m_return_policy_isSet = true;
}

bool OAI_shop_put_request::is_return_policy_Set() const{
    return m_return_policy_isSet;
}

bool OAI_shop_put_request::is_return_policy_Valid() const{
    return m_return_policy_isValid;
}

QString OAI_shop_put_request::getShippingPolicy() const {
    return m_shipping_policy;
}
void OAI_shop_put_request::setShippingPolicy(const QString &shipping_policy) {
    m_shipping_policy = shipping_policy;
    m_shipping_policy_isSet = true;
}

bool OAI_shop_put_request::is_shipping_policy_Set() const{
    return m_shipping_policy_isSet;
}

bool OAI_shop_put_request::is_shipping_policy_Valid() const{
    return m_shipping_policy_isValid;
}

QString OAI_shop_put_request::getShopType() const {
    return m_shop_type;
}
void OAI_shop_put_request::setShopType(const QString &shop_type) {
    m_shop_type = shop_type;
    m_shop_type_isSet = true;
}

bool OAI_shop_put_request::is_shop_type_Set() const{
    return m_shop_type_isSet;
}

bool OAI_shop_put_request::is_shop_type_Valid() const{
    return m_shop_type_isValid;
}

QString OAI_shop_put_request::getWebsite() const {
    return m_website;
}
void OAI_shop_put_request::setWebsite(const QString &website) {
    m_website = website;
    m_website_isSet = true;
}

bool OAI_shop_put_request::is_website_Set() const{
    return m_website_isSet;
}

bool OAI_shop_put_request::is_website_Valid() const{
    return m_website_isValid;
}

bool OAI_shop_put_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_legal_country_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_legal_country_code_confirmed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_policy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_policy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_policy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shop_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_website_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_shop_put_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
