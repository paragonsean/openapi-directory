/**
 * reverb
 * reverb
 *
 * The version of the OpenAPI document: 3.0
 * Contact: integrations@reverb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAI_listings_post_request.h
 *
 * 
 */

#ifndef OAI_listings_post_request_H
#define OAI_listings_post_request_H

#include <QJsonObject>

#include "OAI_conversations__conversation_id__offer_post_request_price.h"
#include "OAI_listings_post_request_categories_inner.h"
#include "OAI_listings_post_request_condition.h"
#include "OAI_listings_post_request_location.h"
#include "OAI_listings_post_request_preorder_info.h"
#include "OAI_listings_post_request_seller.h"
#include "OAI_listings_post_request_shipping.h"
#include "OAI_listings_post_request_videos_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAI_listings_post_request_categories_inner;
class OAI_listings_post_request_condition;
class OAI_listings_post_request_location;
class OAI_listings_post_request_preorder_info;
class OAI_conversations__conversation_id__offer_post_request_price;
class OAI_listings_post_request_seller;
class OAI_listings_post_request_shipping;
class OAI_listings_post_request_videos_inner;

class OAI_listings_post_request : public OAIObject {
public:
    OAI_listings_post_request();
    OAI_listings_post_request(QString json);
    ~OAI_listings_post_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAI_listings_post_request_categories_inner> getCategories() const;
    void setCategories(const QList<OAI_listings_post_request_categories_inner> &categories);
    bool is_categories_Set() const;
    bool is_categories_Valid() const;

    OAI_listings_post_request_condition getCondition() const;
    void setCondition(const OAI_listings_post_request_condition &condition);
    bool is_condition_Set() const;
    bool is_condition_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getExclusiveChannel() const;
    void setExclusiveChannel(const QString &exclusive_channel);
    bool is_exclusive_channel_Set() const;
    bool is_exclusive_channel_Valid() const;

    QString getFinish() const;
    void setFinish(const QString &finish);
    bool is_finish_Set() const;
    bool is_finish_Valid() const;

    bool isHasInventory() const;
    void setHasInventory(const bool &has_inventory);
    bool is_has_inventory_Set() const;
    bool is_has_inventory_Valid() const;

    qint32 getInventory() const;
    void setInventory(const qint32 &inventory);
    bool is_inventory_Set() const;
    bool is_inventory_Valid() const;

    OAI_listings_post_request_location getLocation() const;
    void setLocation(const OAI_listings_post_request_location &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getMake() const;
    void setMake(const QString &make);
    bool is_make_Set() const;
    bool is_make_Valid() const;

    QString getModel() const;
    void setModel(const QString &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    bool isMultiItem() const;
    void setMultiItem(const bool &multi_item);
    bool is_multi_item_Set() const;
    bool is_multi_item_Valid() const;

    bool isOffersEnabled() const;
    void setOffersEnabled(const bool &offers_enabled);
    bool is_offers_enabled_Set() const;
    bool is_offers_enabled_Valid() const;

    QString getOriginCountryCode() const;
    void setOriginCountryCode(const QString &origin_country_code);
    bool is_origin_country_code_Set() const;
    bool is_origin_country_code_Valid() const;

    QList<QString> getPhotos() const;
    void setPhotos(const QList<QString> &photos);
    bool is_photos_Set() const;
    bool is_photos_Valid() const;

    OAI_listings_post_request_preorder_info getPreorderInfo() const;
    void setPreorderInfo(const OAI_listings_post_request_preorder_info &preorder_info);
    bool is_preorder_info_Set() const;
    bool is_preorder_info_Valid() const;

    OAI_conversations__conversation_id__offer_post_request_price getPrice() const;
    void setPrice(const OAI_conversations__conversation_id__offer_post_request_price &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    QString getProp65Warning() const;
    void setProp65Warning(const QString &prop_65_warning);
    bool is_prop_65_warning_Set() const;
    bool is_prop_65_warning_Valid() const;

    bool isPublish() const;
    void setPublish(const bool &publish);
    bool is_publish_Set() const;
    bool is_publish_Valid() const;

    OAI_listings_post_request_seller getSeller() const;
    void setSeller(const OAI_listings_post_request_seller &seller);
    bool is_seller_Set() const;
    bool is_seller_Valid() const;

    QString getSellerCost() const;
    void setSellerCost(const QString &seller_cost);
    bool is_seller_cost_Set() const;
    bool is_seller_cost_Valid() const;

    OAI_listings_post_request_shipping getShipping() const;
    void setShipping(const OAI_listings_post_request_shipping &shipping);
    bool is_shipping_Set() const;
    bool is_shipping_Valid() const;

    QString getShippingProfileId() const;
    void setShippingProfileId(const QString &shipping_profile_id);
    bool is_shipping_profile_id_Set() const;
    bool is_shipping_profile_id_Valid() const;

    QString getShippingProfileName() const;
    void setShippingProfileName(const QString &shipping_profile_name);
    bool is_shipping_profile_name_Set() const;
    bool is_shipping_profile_name_Valid() const;

    QString getSku() const;
    void setSku(const QString &sku);
    bool is_sku_Set() const;
    bool is_sku_Valid() const;

    bool isSoldAsIs() const;
    void setSoldAsIs(const bool &sold_as_is);
    bool is_sold_as_is_Set() const;
    bool is_sold_as_is_Valid() const;

    QString getStorageLocation() const;
    void setStorageLocation(const QString &storage_location);
    bool is_storage_location_Set() const;
    bool is_storage_location_Valid() const;

    bool isTaxExempt() const;
    void setTaxExempt(const bool &tax_exempt);
    bool is_tax_exempt_Set() const;
    bool is_tax_exempt_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getUpc() const;
    void setUpc(const QString &upc);
    bool is_upc_Set() const;
    bool is_upc_Valid() const;

    bool isUpcDoesNotApply() const;
    void setUpcDoesNotApply(const bool &upc_does_not_apply);
    bool is_upc_does_not_apply_Set() const;
    bool is_upc_does_not_apply_Valid() const;

    QList<OAI_listings_post_request_videos_inner> getVideos() const;
    void setVideos(const QList<OAI_listings_post_request_videos_inner> &videos);
    bool is_videos_Set() const;
    bool is_videos_Valid() const;

    QString getYear() const;
    void setYear(const QString &year);
    bool is_year_Set() const;
    bool is_year_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAI_listings_post_request_categories_inner> m_categories;
    bool m_categories_isSet;
    bool m_categories_isValid;

    OAI_listings_post_request_condition m_condition;
    bool m_condition_isSet;
    bool m_condition_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_exclusive_channel;
    bool m_exclusive_channel_isSet;
    bool m_exclusive_channel_isValid;

    QString m_finish;
    bool m_finish_isSet;
    bool m_finish_isValid;

    bool m_has_inventory;
    bool m_has_inventory_isSet;
    bool m_has_inventory_isValid;

    qint32 m_inventory;
    bool m_inventory_isSet;
    bool m_inventory_isValid;

    OAI_listings_post_request_location m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_make;
    bool m_make_isSet;
    bool m_make_isValid;

    QString m_model;
    bool m_model_isSet;
    bool m_model_isValid;

    bool m_multi_item;
    bool m_multi_item_isSet;
    bool m_multi_item_isValid;

    bool m_offers_enabled;
    bool m_offers_enabled_isSet;
    bool m_offers_enabled_isValid;

    QString m_origin_country_code;
    bool m_origin_country_code_isSet;
    bool m_origin_country_code_isValid;

    QList<QString> m_photos;
    bool m_photos_isSet;
    bool m_photos_isValid;

    OAI_listings_post_request_preorder_info m_preorder_info;
    bool m_preorder_info_isSet;
    bool m_preorder_info_isValid;

    OAI_conversations__conversation_id__offer_post_request_price m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    QString m_prop_65_warning;
    bool m_prop_65_warning_isSet;
    bool m_prop_65_warning_isValid;

    bool m_publish;
    bool m_publish_isSet;
    bool m_publish_isValid;

    OAI_listings_post_request_seller m_seller;
    bool m_seller_isSet;
    bool m_seller_isValid;

    QString m_seller_cost;
    bool m_seller_cost_isSet;
    bool m_seller_cost_isValid;

    OAI_listings_post_request_shipping m_shipping;
    bool m_shipping_isSet;
    bool m_shipping_isValid;

    QString m_shipping_profile_id;
    bool m_shipping_profile_id_isSet;
    bool m_shipping_profile_id_isValid;

    QString m_shipping_profile_name;
    bool m_shipping_profile_name_isSet;
    bool m_shipping_profile_name_isValid;

    QString m_sku;
    bool m_sku_isSet;
    bool m_sku_isValid;

    bool m_sold_as_is;
    bool m_sold_as_is_isSet;
    bool m_sold_as_is_isValid;

    QString m_storage_location;
    bool m_storage_location_isSet;
    bool m_storage_location_isValid;

    bool m_tax_exempt;
    bool m_tax_exempt_isSet;
    bool m_tax_exempt_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_upc;
    bool m_upc_isSet;
    bool m_upc_isValid;

    bool m_upc_does_not_apply;
    bool m_upc_does_not_apply_isSet;
    bool m_upc_does_not_apply_isValid;

    QList<OAI_listings_post_request_videos_inner> m_videos;
    bool m_videos_isSet;
    bool m_videos_isValid;

    QString m_year;
    bool m_year_isSet;
    bool m_year_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAI_listings_post_request)

#endif // OAI_listings_post_request_H
