/*
 * reverb
 * reverb
 *
 * The version of the OpenAPI document: 3.0
 * Contact: integrations@reverb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for HandpickedApi
 */
@Disabled
public class HandpickedApiTest {

    private final HandpickedApi api = new HandpickedApi();

    /**
     * Get results from a handpicked collection
     *
     * Get results from a handpicked collection
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void handpickedSlugGetTest() throws ApiException {
        String slug = null;
        String query = null;
        Float auctionPriceMax = null;
        String category = null;
        String productType = null;
        List<String> conditions = null;
        String decade = null;
        String finish = null;
        Boolean handmade = null;
        String itemCity = null;
        String itemCountry = null;
        String itemRegion = null;
        String itemState = null;
        List<String> make = null;
        String model = null;
        String mustNot = null;
        Float priceMax = null;
        Float priceMin = null;
        String currency = null;
        Integer yearMax = null;
        Integer yearMin = null;
        Boolean acceptsGiftCards = null;
        Boolean preferredSeller = null;
        String shop = null;
        String shopId = null;
        String listingType = null;
        String shipsTo = null;
        Boolean excludeAuctions = null;
        Boolean acceptsPaymentPlans = null;
        Integer watchersCountMin = null;
        List<String> notIds = null;
        Boolean localPickup = null;
        Integer page = null;
        Integer perPage = null;
        Integer offset = null;
        api.handpickedSlugGet(slug, query, auctionPriceMax, category, productType, conditions, decade, finish, handmade, itemCity, itemCountry, itemRegion, itemState, make, model, mustNot, priceMax, priceMin, currency, yearMax, yearMin, acceptsGiftCards, preferredSeller, shop, shopId, listingType, shipsTo, excludeAuctions, acceptsPaymentPlans, watchersCountMin, notIds, localPickup, page, perPage, offset);
        // TODO: test validations
    }

}
