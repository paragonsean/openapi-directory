openapi: 3.0.0
info:
  contact:
    email: integrations@reverb.com
    name: Reverb API
    url: https://www.reverb-api.com
  description: reverb
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://reverb.com/page/terms
  title: reverb
  version: "3.0"
  x-apisguru-categories:
  - ecommerce
  x-logo:
    url: https://d1g5417jjjo7sf.cloudfront.net/assets/top-level/reverb-logo-d2c75af0b020521f0bc5e90c883a13b5.svg
  x-origin:
  - format: openapi
    url: https://s3.amazonaws.com/swagger.reverb.com/swagger.json
    version: "3.0"
  x-providerName: reverb.com
externalDocs:
  url: https://dev.reverb.com/
servers:
- url: https://api.reverb.com/api
paths:
  /articles:
    get:
      operationId: articles_get
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 24
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: What's being searched for
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Number of featured articles to exclude
        explode: true
        in: query
        name: exclude_featured
        required: false
        schema:
          type: integer
        style: form
      responses:
        default:
          description: Unexpected error
      tags:
      - articles
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /articles/categories:
    get:
      description: List of all article categories
      operationId: articles_categories_get
      responses:
        default:
          description: Unexpected error
      summary: List of all article categories
      tags:
      - articles
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /categories:
    get:
      description: List of supported product categories
      operationId: categories_get
      responses:
        default:
          description: Unexpected error
      summary: List of supported product categories
      tags:
      - categories
      x-openapi-router-controller: openapi_server.controllers.categories_controller
  /categories/flat:
    get:
      operationId: categories_flat_get
      responses:
        default:
          description: Unexpected error
      tags:
      - categories
      x-openapi-router-controller: openapi_server.controllers.categories_controller
  /categories/taxonomy:
    get:
      description: Full taxonomy tree of categories including middle categories
      operationId: categories_taxonomy_get
      responses:
        default:
          description: Unexpected error
      summary: Full taxonomy tree of categories including middle categories
      tags:
      - categories
      x-openapi-router-controller: openapi_server.controllers.categories_controller
  /categories/{product_type}/{category}:
    get:
      description: Get subcategory details
      operationId: categories_product_type_category_get
      parameters:
      - explode: false
        in: path
        name: product_type
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: category
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      summary: Get subcategory details
      tags:
      - categories
      x-openapi-router-controller: openapi_server.controllers.categories_controller
  /categories/{uuid}:
    get:
      description: Get category details
      operationId: categories_uuid_get
      parameters:
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      summary: Get category details
      tags:
      - categories
      x-openapi-router-controller: openapi_server.controllers.categories_controller
  /comparison_shopping_pages:
    get:
      description: Returns a set of comparison shopping pages based on the current
        params
      operationId: comparison_shopping_pages_get
      responses:
        default:
          description: Unexpected error
      summary: Returns a set of comparison shopping pages based on the current params
      tags:
      - comparison_shopping_pages
      x-openapi-router-controller: openapi_server.controllers.comparison_shopping_pages_controller
  /comparison_shopping_pages/find:
    get:
      description: Show comparison shopping page
      operationId: comparison_shopping_pages_find_get
      parameters:
      - description: ID of the comparison shopping page
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: string
        style: form
      - description: Slug of the comparison shopping page
        explode: true
        in: query
        name: slug
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          description: Unexpected error
      summary: Show comparison shopping page
      tags:
      - comparison_shopping_pages
      x-openapi-router-controller: openapi_server.controllers.comparison_shopping_pages_controller
  /comparison_shopping_pages/{id}:
    get:
      operationId: comparison_shopping_pages_id_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      tags:
      - comparison_shopping_pages
      x-openapi-router-controller: openapi_server.controllers.comparison_shopping_pages_controller
  /comparison_shopping_pages/{id}/listings:
    get:
      description: Return new or used listings for a comparison shopping page
      operationId: comparison_shopping_pages_id_listings_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Condition of the listing
        explode: true
        in: query
        name: condition
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 24
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        default:
          description: Unexpected error
      summary: Return new or used listings for a comparison shopping page
      tags:
      - comparison_shopping_pages
      x-openapi-router-controller: openapi_server.controllers.comparison_shopping_pages_controller
  /comparison_shopping_pages/{id}/reviews:
    get:
      description: View reviews of a comparison shopping page
      operationId: comparison_shopping_pages_id_reviews_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      summary: View reviews of a comparison shopping page
      tags:
      - comparison_shopping_pages
      x-openapi-router-controller: openapi_server.controllers.comparison_shopping_pages_controller
  /conversations/{conversation_id}/offer:
    post:
      description: Make an offer to the other participant in the conversation
      operationId: conversations_conversation_id_offer_post
      parameters:
      - explode: false
        in: path
        name: conversation_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Body'
        x-body-name: body
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_offers
      summary: Make an offer to the other participant in the conversation
      tags:
      - conversations
      x-openapi-router-controller: openapi_server.controllers.conversations_controller
      x-codegen-request-body-name: body
  /conversations/{id}/offer:
    post:
      description: Make an offer to the other participant in the conversation
      operationId: conversations_id_offer_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Body3'
        x-body-name: body
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_offers
      summary: Make an offer to the other participant in the conversation
      tags:
      - conversations
      x-openapi-router-controller: openapi_server.controllers.conversations_controller
      x-codegen-request-body-name: body
  /countries:
    get:
      description: Retrieve a list of country codes with corresponding subregions
      operationId: countries_get
      responses:
        default:
          description: Unexpected error
      summary: Retrieve a list of country codes with corresponding subregions
      tags:
      - countries
      x-openapi-router-controller: openapi_server.controllers.countries_controller
  /csps:
    get:
      description: Returns a set of comparison shopping pages based on the current
        params
      operationId: csps_get
      responses:
        default:
          description: Unexpected error
      summary: Returns a set of comparison shopping pages based on the current params
      tags:
      - csps
      x-openapi-router-controller: openapi_server.controllers.csps_controller
  /csps/categories:
    get:
      operationId: csps_categories_get
      responses:
        default:
          description: Unexpected error
      tags:
      - csps
      x-openapi-router-controller: openapi_server.controllers.csps_controller
  /csps/find:
    get:
      description: Show comparison shopping page
      operationId: csps_find_get
      parameters:
      - description: ID of the comparison shopping page
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: string
        style: form
      - description: Slug of the comparison shopping page
        explode: true
        in: query
        name: slug
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          description: Unexpected error
      summary: Show comparison shopping page
      tags:
      - csps
      x-openapi-router-controller: openapi_server.controllers.csps_controller
  /csps/{id}:
    get:
      operationId: csps_id_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      tags:
      - csps
      x-openapi-router-controller: openapi_server.controllers.csps_controller
  /curated_sets/{slug}:
    get:
      operationId: curated_sets_slug_get
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      tags:
      - curated_sets
      x-openapi-router-controller: openapi_server.controllers.curated_sets_controller
  /currencies/display:
    get:
      description: List of supported display currencies for browsing listings
      operationId: currencies_display_get
      responses:
        default:
          description: Unexpected error
      summary: List of supported display currencies for browsing listings
      tags:
      - currencies
      x-openapi-router-controller: openapi_server.controllers.currencies_controller
  /currencies/listing:
    get:
      description: List of supported listing currencies for shops
      operationId: currencies_listing_get
      responses:
        default:
          description: Unexpected error
      summary: List of supported listing currencies for shops
      tags:
      - currencies
      x-openapi-router-controller: openapi_server.controllers.currencies_controller
  /feedback/{feedback_id}:
    get:
      description: Feedback details
      operationId: feedback_feedback_id_get
      parameters:
      - explode: false
        in: path
        name: feedback_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      summary: Feedback details
      tags:
      - feedback
      x-openapi-router-controller: openapi_server.controllers.feedback_controller
  /handpicked/{slug}:
    get:
      description: Get results from a handpicked collection
      operationId: handpicked_slug_get
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      - description: Search query.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Maximum current auction price
        explode: true
        in: query
        name: auction_price_max
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Category slug from /api/categories
        explode: true
        in: query
        name: category
        required: false
        schema:
          type: string
        style: form
      - description: Product type slug from /api/categories
        explode: true
        in: query
        name: product_type
        required: false
        schema:
          type: string
        style: form
      - description: "Condition: all,new,b-stock,used,non-functioning,all-but-new,poor,fair,good,very-good,excellent,mint"
        explode: false
        in: query
        name: conditions
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Decade: e.g. 1970s, early 70s"
        explode: true
        in: query
        name: decade
        required: false
        schema:
          type: string
        style: form
      - description: "Visual finish of the item, common for guitars"
        explode: true
        in: query
        name: finish
        required: false
        schema:
          type: string
        style: form
      - description: Handmade items only
        explode: true
        in: query
        name: handmade
        required: false
        schema:
          type: boolean
        style: form
      - description: City where item is located
        explode: true
        in: query
        name: item_city
        required: false
        schema:
          type: string
        style: form
      - description: DEPRECATED - Country code where item is located
        explode: true
        in: query
        name: item_country
        required: false
        schema:
          type: string
        style: form
      - description: Country code where item is located
        explode: true
        in: query
        name: item_region
        required: false
        schema:
          type: string
        style: form
      - description: State or region code where item is located
        explode: true
        in: query
        name: item_state
        required: false
        schema:
          type: string
        style: form
      - description: Make(s)/brand of item (e.g. Fender). Can take a single value
          or an array.
        explode: false
        in: query
        name: make
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Model of item (e.g. Stratocaster)
        explode: true
        in: query
        name: model
        required: false
        schema:
          type: string
        style: form
      - description: "Search term negation. If you want to exclude a term, add it\
          \ here"
        explode: true
        in: query
        name: must_not
        required: false
        schema:
          type: string
        style: form
      - description: Maximum price of search results (USD)
        explode: true
        in: query
        name: price_max
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Minimum price of search results (USD)
        explode: true
        in: query
        name: price_min
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: The currency to be used for the price filters
        explode: true
        in: query
        name: currency
        required: false
        schema:
          type: string
        style: form
      - description: Maximum year of manufacture
        explode: true
        in: query
        name: year_max
        required: false
        schema:
          type: integer
        style: form
      - description: Minumum year of manufacture
        explode: true
        in: query
        name: year_min
        required: false
        schema:
          type: integer
        style: form
      - description: "If true, include only items that accept gift cards"
        explode: true
        in: query
        name: accepts_gift_cards
        required: false
        schema:
          type: boolean
        style: form
      - description: "If true, include only items by Reverb Preferred Sellers"
        explode: true
        in: query
        name: preferred_seller
        required: false
        schema:
          type: boolean
        style: form
      - description: Slug of shop to search
        explode: true
        in: query
        name: shop
        required: false
        schema:
          type: string
        style: form
      - description: ID of shop to search
        explode: true
        in: query
        name: shop_id
        required: false
        schema:
          type: string
        style: form
      - description: "Type of listing: auctions,offers"
        explode: true
        in: query
        name: listing_type
        required: false
        schema:
          type: string
        style: form
      - description: Limit search to items that ship to this country code
        explode: true
        in: query
        name: ships_to
        required: false
        schema:
          type: string
        style: form
      - description: "If true, exclude auctions"
        explode: true
        in: query
        name: exclude_auctions
        required: false
        schema:
          type: boolean
        style: form
      - description: "If true, only show items that can be purchased with a payment\
          \ plan"
        explode: true
        in: query
        name: accepts_payment_plans
        required: false
        schema:
          type: boolean
        style: form
      - description: Minimum number of watchers (used to find popular items)
        explode: true
        in: query
        name: watchers_count_min
        required: false
        schema:
          type: integer
        style: form
      - description: "Listing ID negation. If you want to exclude a listing, add it\
          \ here."
        explode: false
        in: query
        name: not_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Only items that offer local pickup
        explode: true
        in: query
        name: local_pickup
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 24
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        default:
          description: Unexpected error
      summary: Get results from a handpicked collection
      tags:
      - handpicked
      x-openapi-router-controller: openapi_server.controllers.handpicked_controller
  /listing_conditions:
    get:
      description: List of supported product conditions
      operationId: listing_conditions_get
      responses:
        default:
          description: Unexpected error
      summary: List of supported product conditions
      tags:
      - listing_conditions
      x-openapi-router-controller: openapi_server.controllers.listing_conditions_controller
  /listings:
    get:
      description: Default search of listings includes only used & handmade. Add a
        filter to view all listings or use the /listings/all endpoint.
      operationId: listings_get
      parameters:
      - description: Search query.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Maximum current auction price
        explode: true
        in: query
        name: auction_price_max
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Category slug from /api/categories
        explode: true
        in: query
        name: category
        required: false
        schema:
          type: string
        style: form
      - description: Product type slug from /api/categories
        explode: true
        in: query
        name: product_type
        required: false
        schema:
          type: string
        style: form
      - description: "Condition: all,new,b-stock,used,non-functioning,all-but-new,poor,fair,good,very-good,excellent,mint"
        explode: false
        in: query
        name: conditions
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Decade: e.g. 1970s, early 70s"
        explode: true
        in: query
        name: decade
        required: false
        schema:
          type: string
        style: form
      - description: "Visual finish of the item, common for guitars"
        explode: true
        in: query
        name: finish
        required: false
        schema:
          type: string
        style: form
      - description: Handmade items only
        explode: true
        in: query
        name: handmade
        required: false
        schema:
          type: boolean
        style: form
      - description: City where item is located
        explode: true
        in: query
        name: item_city
        required: false
        schema:
          type: string
        style: form
      - description: DEPRECATED - Country code where item is located
        explode: true
        in: query
        name: item_country
        required: false
        schema:
          type: string
        style: form
      - description: Country code where item is located
        explode: true
        in: query
        name: item_region
        required: false
        schema:
          type: string
        style: form
      - description: State or region code where item is located
        explode: true
        in: query
        name: item_state
        required: false
        schema:
          type: string
        style: form
      - description: Make(s)/brand of item (e.g. Fender). Can take a single value
          or an array.
        explode: false
        in: query
        name: make
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Model of item (e.g. Stratocaster)
        explode: true
        in: query
        name: model
        required: false
        schema:
          type: string
        style: form
      - description: "Search term negation. If you want to exclude a term, add it\
          \ here"
        explode: true
        in: query
        name: must_not
        required: false
        schema:
          type: string
        style: form
      - description: Maximum price of search results (USD)
        explode: true
        in: query
        name: price_max
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Minimum price of search results (USD)
        explode: true
        in: query
        name: price_min
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: The currency to be used for the price filters
        explode: true
        in: query
        name: currency
        required: false
        schema:
          type: string
        style: form
      - description: Maximum year of manufacture
        explode: true
        in: query
        name: year_max
        required: false
        schema:
          type: integer
        style: form
      - description: Minumum year of manufacture
        explode: true
        in: query
        name: year_min
        required: false
        schema:
          type: integer
        style: form
      - description: "If true, include only items that accept gift cards"
        explode: true
        in: query
        name: accepts_gift_cards
        required: false
        schema:
          type: boolean
        style: form
      - description: "If true, include only items by Reverb Preferred Sellers"
        explode: true
        in: query
        name: preferred_seller
        required: false
        schema:
          type: boolean
        style: form
      - description: Slug of shop to search
        explode: true
        in: query
        name: shop
        required: false
        schema:
          type: string
        style: form
      - description: ID of shop to search
        explode: true
        in: query
        name: shop_id
        required: false
        schema:
          type: string
        style: form
      - description: "Type of listing: auctions,offers"
        explode: true
        in: query
        name: listing_type
        required: false
        schema:
          type: string
        style: form
      - description: Limit search to items that ship to this country code
        explode: true
        in: query
        name: ships_to
        required: false
        schema:
          type: string
        style: form
      - description: "If true, exclude auctions"
        explode: true
        in: query
        name: exclude_auctions
        required: false
        schema:
          type: boolean
        style: form
      - description: "If true, only show items that can be purchased with a payment\
          \ plan"
        explode: true
        in: query
        name: accepts_payment_plans
        required: false
        schema:
          type: boolean
        style: form
      - description: Minimum number of watchers (used to find popular items)
        explode: true
        in: query
        name: watchers_count_min
        required: false
        schema:
          type: integer
        style: form
      - description: "Listing ID negation. If you want to exclude a listing, add it\
          \ here."
        explode: false
        in: query
        name: not_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Only items that offer local pickup
        explode: true
        in: query
        name: local_pickup
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 24
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        default:
          description: Unexpected error
      summary: Default search of listings includes only used & handmade. Add a filter
        to view all listings or use the /listings/all endpoint.
      tags:
      - listings
      x-openapi-router-controller: openapi_server.controllers.listings_controller
    post:
      description: Create a listing
      operationId: listings_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_listings_post_request'
        description: the content of the request
        x-body-name: body
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_listings
        - write_listings_for_others
      summary: Create a listing
      tags:
      - listings
      x-openapi-router-controller: openapi_server.controllers.listings_controller
      x-codegen-request-body-name: body
  /listings/all:
    get:
      description: "All listings including used, handmade, and brand new"
      operationId: listings_all_get
      parameters:
      - description: Search query.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Maximum current auction price
        explode: true
        in: query
        name: auction_price_max
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Category slug from /api/categories
        explode: true
        in: query
        name: category
        required: false
        schema:
          type: string
        style: form
      - description: Product type slug from /api/categories
        explode: true
        in: query
        name: product_type
        required: false
        schema:
          type: string
        style: form
      - description: "Condition: all,new,b-stock,used,non-functioning,all-but-new,poor,fair,good,very-good,excellent,mint"
        explode: false
        in: query
        name: conditions
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Decade: e.g. 1970s, early 70s"
        explode: true
        in: query
        name: decade
        required: false
        schema:
          type: string
        style: form
      - description: "Visual finish of the item, common for guitars"
        explode: true
        in: query
        name: finish
        required: false
        schema:
          type: string
        style: form
      - description: Handmade items only
        explode: true
        in: query
        name: handmade
        required: false
        schema:
          type: boolean
        style: form
      - description: City where item is located
        explode: true
        in: query
        name: item_city
        required: false
        schema:
          type: string
        style: form
      - description: DEPRECATED - Country code where item is located
        explode: true
        in: query
        name: item_country
        required: false
        schema:
          type: string
        style: form
      - description: Country code where item is located
        explode: true
        in: query
        name: item_region
        required: false
        schema:
          type: string
        style: form
      - description: State or region code where item is located
        explode: true
        in: query
        name: item_state
        required: false
        schema:
          type: string
        style: form
      - description: Make(s)/brand of item (e.g. Fender). Can take a single value
          or an array.
        explode: false
        in: query
        name: make
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Model of item (e.g. Stratocaster)
        explode: true
        in: query
        name: model
        required: false
        schema:
          type: string
        style: form
      - description: "Search term negation. If you want to exclude a term, add it\
          \ here"
        explode: true
        in: query
        name: must_not
        required: false
        schema:
          type: string
        style: form
      - description: Maximum price of search results (USD)
        explode: true
        in: query
        name: price_max
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Minimum price of search results (USD)
        explode: true
        in: query
        name: price_min
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: The currency to be used for the price filters
        explode: true
        in: query
        name: currency
        required: false
        schema:
          type: string
        style: form
      - description: Maximum year of manufacture
        explode: true
        in: query
        name: year_max
        required: false
        schema:
          type: integer
        style: form
      - description: Minumum year of manufacture
        explode: true
        in: query
        name: year_min
        required: false
        schema:
          type: integer
        style: form
      - description: "If true, include only items that accept gift cards"
        explode: true
        in: query
        name: accepts_gift_cards
        required: false
        schema:
          type: boolean
        style: form
      - description: "If true, include only items by Reverb Preferred Sellers"
        explode: true
        in: query
        name: preferred_seller
        required: false
        schema:
          type: boolean
        style: form
      - description: Slug of shop to search
        explode: true
        in: query
        name: shop
        required: false
        schema:
          type: string
        style: form
      - description: ID of shop to search
        explode: true
        in: query
        name: shop_id
        required: false
        schema:
          type: string
        style: form
      - description: "Type of listing: auctions,offers"
        explode: true
        in: query
        name: listing_type
        required: false
        schema:
          type: string
        style: form
      - description: Limit search to items that ship to this country code
        explode: true
        in: query
        name: ships_to
        required: false
        schema:
          type: string
        style: form
      - description: "If true, exclude auctions"
        explode: true
        in: query
        name: exclude_auctions
        required: false
        schema:
          type: boolean
        style: form
      - description: "If true, only show items that can be purchased with a payment\
          \ plan"
        explode: true
        in: query
        name: accepts_payment_plans
        required: false
        schema:
          type: boolean
        style: form
      - description: Minimum number of watchers (used to find popular items)
        explode: true
        in: query
        name: watchers_count_min
        required: false
        schema:
          type: integer
        style: form
      - description: "Listing ID negation. If you want to exclude a listing, add it\
          \ here."
        explode: false
        in: query
        name: not_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Only items that offer local pickup
        explode: true
        in: query
        name: local_pickup
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 24
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        default:
          description: Unexpected error
      summary: "All listings including used, handmade, and brand new"
      tags:
      - listings
      x-openapi-router-controller: openapi_server.controllers.listings_controller
  /listings/facets/seller_location:
    get:
      description: Individual facets
      operationId: listings_facets_seller_location_get
      responses:
        default:
          description: Unexpected error
      summary: Individual facets
      tags:
      - listings
      x-openapi-router-controller: openapi_server.controllers.listings_controller
  /listings/{id}/negotiation:
    get:
      description: Returns the latest negotiation for the requesting user given a
        listing id
      operationId: listings_id_negotiation_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_offers
      summary: Returns the latest negotiation for the requesting user given a listing
        id
      tags:
      - listings
      x-openapi-router-controller: openapi_server.controllers.listings_controller
  /listings/{id}/offer:
    post:
      description: Make an offer to the seller of a listing
      operationId: listings_id_offer_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Body3'
        x-body-name: body
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_offers
      summary: Make an offer to the seller of a listing
      tags:
      - listings
      x-openapi-router-controller: openapi_server.controllers.listings_controller
      x-codegen-request-body-name: body
  /listings/{listing_id}/bump:
    get:
      description: View available bump tiers and stats for a listing
      operationId: listings_listing_id_bump_get
      parameters:
      - explode: false
        in: path
        name: listing_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_listings
      summary: View available bump tiers and stats for a listing
      tags:
      - listings
      x-openapi-router-controller: openapi_server.controllers.listings_controller
  /listings/{listing_id}/bump/{budget_type}:
    post:
      description: Bump a listing
      operationId: listings_listing_id_bump_budget_type_post
      parameters:
      - explode: false
        in: path
        name: listing_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: budget_type
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_listings
      summary: Bump a listing
      tags:
      - listings
      x-openapi-router-controller: openapi_server.controllers.listings_controller
  /listings/{listing_id}/conversations:
    post:
      description: Start a conversation with a seller
      operationId: listings_listing_id_conversations_post
      parameters:
      - explode: false
        in: path
        name: listing_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Body2'
        x-body-name: body
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_messages
      summary: Start a conversation with a seller
      tags:
      - listings
      x-openapi-router-controller: openapi_server.controllers.listings_controller
      x-codegen-request-body-name: body
  /listings/{listing_id}/images:
    get:
      description: View the images associated with a particular listing
      operationId: listings_listing_id_images_get
      parameters:
      - explode: false
        in: path
        name: listing_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_listings
      summary: View the images associated with a particular listing
      tags:
      - listings
      x-openapi-router-controller: openapi_server.controllers.listings_controller
  /listings/{listing_id}/images/{image_id}:
    delete:
      description: Delete an image from a listing
      operationId: listings_listing_id_images_image_id_delete
      parameters:
      - explode: false
        in: path
        name: listing_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: image_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_listings
      summary: Delete an image from a listing
      tags:
      - listings
      x-openapi-router-controller: openapi_server.controllers.listings_controller
  /listings/{listing_id}/sales:
    get:
      description: See all sales that include a listing.
      operationId: listings_listing_id_sales_get
      parameters:
      - explode: false
        in: path
        name: listing_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      summary: See all sales that include a listing.
      tags:
      - listings
      x-openapi-router-controller: openapi_server.controllers.listings_controller
  /listings/{slug}:
    delete:
      description: Delete a draft listing. Cannot be used on non-drafts.
      operationId: listings_slug_delete
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_listings
      summary: Delete a draft listing. Cannot be used on non-drafts.
      tags:
      - listings
      x-openapi-router-controller: openapi_server.controllers.listings_controller
    get:
      description: Listing details
      operationId: listings_slug_get
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      summary: Listing details
      tags:
      - listings
      x-openapi-router-controller: openapi_server.controllers.listings_controller
    put:
      description: Update a listing
      operationId: listings_slug_put
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_listings_post_request'
        description: the content of the request
        x-body-name: body
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_listings
      summary: Update a listing
      tags:
      - listings
      x-openapi-router-controller: openapi_server.controllers.listings_controller
      x-codegen-request-body-name: body
  /listings/{slug}/edit:
    get:
      description: Edit listing.
      operationId: listings_slug_edit_get
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_listings
      summary: Edit listing.
      tags:
      - listings
      x-openapi-router-controller: openapi_server.controllers.listings_controller
  /listings/{slug}/flag:
    post:
      description: Flag a listing for inappropriate content or fraud
      operationId: listings_slug_flag_post
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_listings__slug__flag_post_request'
        description: the content of the request
        x-body-name: body
      responses:
        default:
          description: Unexpected error
      summary: Flag a listing for inappropriate content or fraud
      tags:
      - listings
      x-openapi-router-controller: openapi_server.controllers.listings_controller
      x-codegen-request-body-name: body
  /listings/{slug}/reviews:
    get:
      description: View reviews of a listing
      operationId: listings_slug_reviews_get
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      summary: View reviews of a listing
      tags:
      - listings
      x-openapi-router-controller: openapi_server.controllers.listings_controller
    post:
      description: Create a review for a listing
      operationId: listings_slug_reviews_post
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_reviews
      summary: Create a review for a listing
      tags:
      - listings
      x-openapi-router-controller: openapi_server.controllers.listings_controller
  /listings/{slug}/similar_listings:
    get:
      description: Listing details
      operationId: listings_slug_similar_listings_get
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      summary: Listing details
      tags:
      - listings
      x-openapi-router-controller: openapi_server.controllers.listings_controller
  /my/account:
    get:
      description: Get account details
      operationId: my_account_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_profile
      summary: Get account details
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
    put:
      description: Update account details
      operationId: my_account_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_my_account_put_request'
        description: the content of the request
        x-body-name: body
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_profile
      summary: Update account details
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
      x-codegen-request-body-name: body
  /my/addresses:
    get:
      description: See all addresses in your address book
      operationId: my_addresses_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_profile
      summary: See all addresses in your address book
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
    post:
      description: Create a new address in your address book
      operationId: my_addresses_post
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_profile
      summary: Create a new address in your address book
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/addresses/{address_id}:
    delete:
      description: Delete an existing address in your address book
      operationId: my_addresses_address_id_delete
      parameters:
      - explode: false
        in: path
        name: address_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_profile
      summary: Delete an existing address in your address book
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
    put:
      description: Update an existing address in your address book
      operationId: my_addresses_address_id_put
      parameters:
      - explode: false
        in: path
        name: address_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_profile
      summary: Update an existing address in your address book
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/conversations:
    get:
      description: Get a list of your conversations
      operationId: my_conversations_get
      parameters:
      - description: Query string to search conversations by
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Show unread conversations only
        explode: true
        in: query
        name: unread_only
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 24
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_messages
      summary: Get a list of your conversations
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
    post:
      description: Start a conversation
      operationId: my_conversations_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_my_conversations_post_request'
        description: the content of the request
        x-body-name: body
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_messages
      summary: Start a conversation
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
      x-codegen-request-body-name: body
  /my/conversations/{conversation_id}/messages:
    post:
      description: Send a message
      operationId: my_conversations_conversation_id_messages_post
      parameters:
      - explode: false
        in: path
        name: conversation_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Body2'
        x-body-name: body
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_messages
      summary: Send a message
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
      x-codegen-request-body-name: body
  /my/conversations/{id}:
    get:
      description: Display conversation details with messages in natural time order
        (oldest to newest)
      operationId: my_conversations_id_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_messages
      summary: Display conversation details with messages in natural time order (oldest
        to newest)
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
    put:
      description: Mark a conversation read/unread
      operationId: my_conversations_id_put
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_my_conversations__id__put_request'
        description: the content of the request
        x-body-name: body
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_messages
      summary: Mark a conversation read/unread
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
      x-codegen-request-body-name: body
  /my/counts:
    get:
      description: Get your actionable status counts
      operationId: my_counts_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_profile
      summary: Get your actionable status counts
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/curated_set/product/{product_id}:
    delete:
      operationId: my_curated_set_product_product_id_delete
      parameters:
      - explode: false
        in: path
        name: product_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
    post:
      operationId: my_curated_set_product_product_id_post
      parameters:
      - explode: false
        in: path
        name: product_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/feed:
    get:
      description: Get listings from your feed
      operationId: my_feed_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_lists
      summary: Get listings from your feed
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/feed/customize:
    get:
      description: get your feed customization options
      operationId: my_feed_customize_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_lists
      summary: get your feed customization options
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/feed/grid:
    get:
      description: get your feed
      operationId: my_feed_grid_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_lists
      summary: get your feed
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/feedback/received:
    get:
      description: List of received feedback
      operationId: my_feedback_received_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_feedback
      summary: List of received feedback
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/feedback/sent:
    get:
      description: List of sent feedback
      operationId: my_feedback_sent_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_feedback
      summary: List of sent feedback
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/follows:
    get:
      description: See what the user is following
      operationId: my_follows_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_lists
      summary: See what the user is following
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/follows/articles:
    get:
      description: Returns a user's ArticleCategoryFollows
      operationId: my_follows_articles_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_lists
      summary: Returns a user's ArticleCategoryFollows
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
    post:
      description: Set a user's ArticleCategoryFollows
      operationId: my_follows_articles_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_my_follows_articles_post_request'
        description: the content of the request
        x-body-name: body
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_lists
      summary: Set a user's ArticleCategoryFollows
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
      x-codegen-request-body-name: body
  /my/follows/brands/{slug}:
    delete:
      description: Unfollow a brand
      operationId: my_follows_brands_slug_delete
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_lists
      summary: Unfollow a brand
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
    get:
      description: Follow status for a brand
      operationId: my_follows_brands_slug_get
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_lists
      summary: Follow status for a brand
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
    post:
      description: Follow a brand
      operationId: my_follows_brands_slug_post
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_lists
      summary: Follow a brand
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/follows/categories/{category}/{subcategory}:
    delete:
      description: Unfollow a subcategory
      operationId: my_follows_categories_category_subcategory_delete
      parameters:
      - explode: false
        in: path
        name: category
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: subcategory
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_lists
      summary: Unfollow a subcategory
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
    get:
      description: Follow status for a subcategory
      operationId: my_follows_categories_category_subcategory_get
      parameters:
      - explode: false
        in: path
        name: category
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: subcategory
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_lists
      summary: Follow status for a subcategory
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
    post:
      description: Follow a subcategory
      operationId: my_follows_categories_category_subcategory_post
      parameters:
      - explode: false
        in: path
        name: category
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: subcategory
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_lists
      summary: Follow a subcategory
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/follows/categories/{identifier}:
    delete:
      description: Unfollow a category
      operationId: my_follows_categories_identifier_delete
      parameters:
      - explode: false
        in: path
        name: identifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_lists
      summary: Unfollow a category
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
    get:
      description: Follow status for a category
      operationId: my_follows_categories_identifier_get
      parameters:
      - explode: false
        in: path
        name: identifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_lists
      summary: Follow status for a category
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
    post:
      description: Follow a category
      operationId: my_follows_categories_identifier_post
      parameters:
      - explode: false
        in: path
        name: identifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_lists
      summary: Follow a category
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/follows/categories/{uuid}:
    post:
      description: Follow a category
      operationId: my_follows_categories_uuid_post
      parameters:
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_lists
      summary: Follow a category
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/follows/collections/{slug}:
    delete:
      description: Unfollow a collection
      operationId: my_follows_collections_slug_delete
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_lists
      summary: Unfollow a collection
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
    get:
      description: Follow status for a collection
      operationId: my_follows_collections_slug_get
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_lists
      summary: Follow status for a collection
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
    post:
      description: Follow a collection
      operationId: my_follows_collections_slug_post
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_lists
      summary: Follow a collection
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/follows/handpicked/{slug}:
    delete:
      description: Unfollow a handpicked collection
      operationId: my_follows_handpicked_slug_delete
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_lists
      summary: Unfollow a handpicked collection
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
    get:
      description: Follow status for a handpicked collection
      operationId: my_follows_handpicked_slug_get
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_lists
      summary: Follow status for a handpicked collection
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
    post:
      description: Follow a handpicked collection
      operationId: my_follows_handpicked_slug_post
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_lists
      summary: Follow a handpicked collection
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/follows/search:
    get:
      description: Follow status for a search
      operationId: my_follows_search_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_lists
      summary: Follow status for a search
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
    post:
      description: Follow a search
      operationId: my_follows_search_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_my_follows_search_post_request'
        description: the content of the request
        x-body-name: body
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_lists
      summary: Follow a search
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
      x-codegen-request-body-name: body
  /my/follows/shops/{slug}:
    delete:
      description: Unfollow a shop
      operationId: my_follows_shops_slug_delete
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_lists
      summary: Unfollow a shop
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
    get:
      description: Follow status for a shop
      operationId: my_follows_shops_slug_get
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_lists
      summary: Follow status for a shop
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
    post:
      description: Follow a shop
      operationId: my_follows_shops_slug_post
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_lists
      summary: Follow a shop
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/follows/{follow_id}:
    delete:
      description: Delete a follow
      operationId: my_follows_follow_id_delete
      parameters:
      - explode: false
        in: path
        name: follow_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_lists
      summary: Delete a follow
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/follows/{follow_id}/alert:
    delete:
      operationId: my_follows_follow_id_alert_delete
      parameters:
      - explode: false
        in: path
        name: follow_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
    post:
      operationId: my_follows_follow_id_alert_post
      parameters:
      - explode: false
        in: path
        name: follow_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/listings:
    get:
      description: Retrieve a list of live listings for the seller. To search all
        listings specify state=all
      operationId: my_listings_get
      parameters:
      - description: Search query.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Maximum current auction price
        explode: true
        in: query
        name: auction_price_max
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Category slug from /api/categories
        explode: true
        in: query
        name: category
        required: false
        schema:
          type: string
        style: form
      - description: Product type slug from /api/categories
        explode: true
        in: query
        name: product_type
        required: false
        schema:
          type: string
        style: form
      - description: "Condition: all,new,b-stock,used,non-functioning,all-but-new,poor,fair,good,very-good,excellent,mint"
        explode: false
        in: query
        name: conditions
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Decade: e.g. 1970s, early 70s"
        explode: true
        in: query
        name: decade
        required: false
        schema:
          type: string
        style: form
      - description: "Visual finish of the item, common for guitars"
        explode: true
        in: query
        name: finish
        required: false
        schema:
          type: string
        style: form
      - description: Handmade items only
        explode: true
        in: query
        name: handmade
        required: false
        schema:
          type: boolean
        style: form
      - description: City where item is located
        explode: true
        in: query
        name: item_city
        required: false
        schema:
          type: string
        style: form
      - description: DEPRECATED - Country code where item is located
        explode: true
        in: query
        name: item_country
        required: false
        schema:
          type: string
        style: form
      - description: Country code where item is located
        explode: true
        in: query
        name: item_region
        required: false
        schema:
          type: string
        style: form
      - description: State or region code where item is located
        explode: true
        in: query
        name: item_state
        required: false
        schema:
          type: string
        style: form
      - description: Make(s)/brand of item (e.g. Fender). Can take a single value
          or an array.
        explode: false
        in: query
        name: make
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Model of item (e.g. Stratocaster)
        explode: true
        in: query
        name: model
        required: false
        schema:
          type: string
        style: form
      - description: "Search term negation. If you want to exclude a term, add it\
          \ here"
        explode: true
        in: query
        name: must_not
        required: false
        schema:
          type: string
        style: form
      - description: Maximum price of search results (USD)
        explode: true
        in: query
        name: price_max
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Minimum price of search results (USD)
        explode: true
        in: query
        name: price_min
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: The currency to be used for the price filters
        explode: true
        in: query
        name: currency
        required: false
        schema:
          type: string
        style: form
      - description: Maximum year of manufacture
        explode: true
        in: query
        name: year_max
        required: false
        schema:
          type: integer
        style: form
      - description: Minumum year of manufacture
        explode: true
        in: query
        name: year_min
        required: false
        schema:
          type: integer
        style: form
      - description: "If true, include only items that accept gift cards"
        explode: true
        in: query
        name: accepts_gift_cards
        required: false
        schema:
          type: boolean
        style: form
      - description: "If true, include only items by Reverb Preferred Sellers"
        explode: true
        in: query
        name: preferred_seller
        required: false
        schema:
          type: boolean
        style: form
      - description: Slug of shop to search
        explode: true
        in: query
        name: shop
        required: false
        schema:
          type: string
        style: form
      - description: ID of shop to search
        explode: true
        in: query
        name: shop_id
        required: false
        schema:
          type: string
        style: form
      - description: "Type of listing: auctions,offers"
        explode: true
        in: query
        name: listing_type
        required: false
        schema:
          type: string
        style: form
      - description: Limit search to items that ship to this country code
        explode: true
        in: query
        name: ships_to
        required: false
        schema:
          type: string
        style: form
      - description: "If true, exclude auctions"
        explode: true
        in: query
        name: exclude_auctions
        required: false
        schema:
          type: boolean
        style: form
      - description: "If true, only show items that can be purchased with a payment\
          \ plan"
        explode: true
        in: query
        name: accepts_payment_plans
        required: false
        schema:
          type: boolean
        style: form
      - description: Minimum number of watchers (used to find popular items)
        explode: true
        in: query
        name: watchers_count_min
        required: false
        schema:
          type: integer
        style: form
      - description: "Listing ID negation. If you want to exclude a listing, add it\
          \ here."
        explode: false
        in: query
        name: not_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Only items that offer local pickup
        explode: true
        in: query
        name: local_pickup
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available: [\"all\", \"draft\", \"ended\", \"live\", \"ordered\"\
          , \"sold_out\", \"suspended\", \"seller_unavailable\"]. Defaults to 'live'"
        explode: true
        in: query
        name: state
        required: false
        schema:
          default: live
          type: string
        style: form
      - description: Find a listing by sku
        explode: true
        in: query
        name: sku
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_listings
      summary: Retrieve a list of live listings for the seller. To search all listings
        specify state=all
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/listings/drafts:
    get:
      description: Retrieve a list your draft listings
      operationId: my_listings_drafts_get
      parameters:
      - description: Search query.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Maximum current auction price
        explode: true
        in: query
        name: auction_price_max
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Category slug from /api/categories
        explode: true
        in: query
        name: category
        required: false
        schema:
          type: string
        style: form
      - description: Product type slug from /api/categories
        explode: true
        in: query
        name: product_type
        required: false
        schema:
          type: string
        style: form
      - description: "Condition: all,new,b-stock,used,non-functioning,all-but-new,poor,fair,good,very-good,excellent,mint"
        explode: false
        in: query
        name: conditions
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Decade: e.g. 1970s, early 70s"
        explode: true
        in: query
        name: decade
        required: false
        schema:
          type: string
        style: form
      - description: "Visual finish of the item, common for guitars"
        explode: true
        in: query
        name: finish
        required: false
        schema:
          type: string
        style: form
      - description: Handmade items only
        explode: true
        in: query
        name: handmade
        required: false
        schema:
          type: boolean
        style: form
      - description: City where item is located
        explode: true
        in: query
        name: item_city
        required: false
        schema:
          type: string
        style: form
      - description: DEPRECATED - Country code where item is located
        explode: true
        in: query
        name: item_country
        required: false
        schema:
          type: string
        style: form
      - description: Country code where item is located
        explode: true
        in: query
        name: item_region
        required: false
        schema:
          type: string
        style: form
      - description: State or region code where item is located
        explode: true
        in: query
        name: item_state
        required: false
        schema:
          type: string
        style: form
      - description: Make(s)/brand of item (e.g. Fender). Can take a single value
          or an array.
        explode: false
        in: query
        name: make
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Model of item (e.g. Stratocaster)
        explode: true
        in: query
        name: model
        required: false
        schema:
          type: string
        style: form
      - description: "Search term negation. If you want to exclude a term, add it\
          \ here"
        explode: true
        in: query
        name: must_not
        required: false
        schema:
          type: string
        style: form
      - description: Maximum price of search results (USD)
        explode: true
        in: query
        name: price_max
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Minimum price of search results (USD)
        explode: true
        in: query
        name: price_min
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: The currency to be used for the price filters
        explode: true
        in: query
        name: currency
        required: false
        schema:
          type: string
        style: form
      - description: Maximum year of manufacture
        explode: true
        in: query
        name: year_max
        required: false
        schema:
          type: integer
        style: form
      - description: Minumum year of manufacture
        explode: true
        in: query
        name: year_min
        required: false
        schema:
          type: integer
        style: form
      - description: "If true, include only items that accept gift cards"
        explode: true
        in: query
        name: accepts_gift_cards
        required: false
        schema:
          type: boolean
        style: form
      - description: "If true, include only items by Reverb Preferred Sellers"
        explode: true
        in: query
        name: preferred_seller
        required: false
        schema:
          type: boolean
        style: form
      - description: Slug of shop to search
        explode: true
        in: query
        name: shop
        required: false
        schema:
          type: string
        style: form
      - description: ID of shop to search
        explode: true
        in: query
        name: shop_id
        required: false
        schema:
          type: string
        style: form
      - description: "Type of listing: auctions,offers"
        explode: true
        in: query
        name: listing_type
        required: false
        schema:
          type: string
        style: form
      - description: Limit search to items that ship to this country code
        explode: true
        in: query
        name: ships_to
        required: false
        schema:
          type: string
        style: form
      - description: "If true, exclude auctions"
        explode: true
        in: query
        name: exclude_auctions
        required: false
        schema:
          type: boolean
        style: form
      - description: "If true, only show items that can be purchased with a payment\
          \ plan"
        explode: true
        in: query
        name: accepts_payment_plans
        required: false
        schema:
          type: boolean
        style: form
      - description: Minimum number of watchers (used to find popular items)
        explode: true
        in: query
        name: watchers_count_min
        required: false
        schema:
          type: integer
        style: form
      - description: "Listing ID negation. If you want to exclude a listing, add it\
          \ here."
        explode: false
        in: query
        name: not_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Only items that offer local pickup
        explode: true
        in: query
        name: local_pickup
        required: false
        schema:
          type: boolean
        style: form
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_listings
      summary: Retrieve a list your draft listings
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/listings/negotiations:
    get:
      description: Get a list of active negotiations as a seller
      operationId: my_listings_negotiations_get
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 24
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_offers
      summary: Get a list of active negotiations as a seller
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/listings/{slug}/state/end:
    put:
      description: End a listing
      operationId: my_listings_slug_state_end_put
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_my_listings__slug__state_end_put_request'
        description: the content of the request
        x-body-name: body
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_listings
      summary: End a listing
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
      x-codegen-request-body-name: body
  /my/lists:
    get:
      description: "Get a list of your lists (wishlist, watch list, etc)"
      operationId: my_lists_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_lists
      summary: "Get a list of your lists (wishlist, watch list, etc)"
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/negotiations/buying:
    get:
      description: Get a list of active negotiations as a buyer
      operationId: my_negotiations_buying_get
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 24
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_offers
      summary: Get a list of active negotiations as a buyer
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/negotiations/{id}:
    get:
      description: Get offer details
      operationId: my_negotiations_id_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_offers
      summary: Get offer details
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/negotiations/{id}/accept:
    post:
      description: Accept an offer
      operationId: my_negotiations_id_accept_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_my_negotiations__id__accept_post_request'
        description: the content of the request
        x-body-name: body
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_offers
      summary: Accept an offer
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
      x-codegen-request-body-name: body
  /my/negotiations/{id}/counter:
    post:
      description: Counter an offer
      operationId: my_negotiations_id_counter_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Body'
        x-body-name: body
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_offers
      summary: Counter an offer
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
      x-codegen-request-body-name: body
  /my/negotiations/{id}/decline:
    post:
      description: Decline an offer
      operationId: my_negotiations_id_decline_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_offers
      summary: Decline an offer
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/orders/awaiting_feedback:
    get:
      description: List of orders that need feedback
      operationId: my_orders_awaiting_feedback_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_feedback
      summary: List of orders that need feedback
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/orders/buying/all:
    get:
      description: "Returns all orders, newest first."
      operationId: my_orders_buying_all_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_orders
      summary: "Returns all orders, newest first."
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/orders/buying/by_uuid/{uuid}:
    get:
      operationId: my_orders_buying_by_uuid_uuid_get
      parameters:
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/orders/buying/unpaid:
    get:
      description: "Returns unpaid orders, newest first."
      operationId: my_orders_buying_unpaid_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_orders
      summary: "Returns unpaid orders, newest first."
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/orders/buying/{id}:
    get:
      description: Returns order details for a buyer
      operationId: my_orders_buying_id_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_orders
      summary: Returns order details for a buyer
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/orders/buying/{id}/mark_received:
    post:
      description: Marks an order as received by the buyer
      operationId: my_orders_buying_id_mark_received_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_orders
      summary: Marks an order as received by the buyer
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/orders/selling/all:
    get:
      description: "Get all seller orders, newest first."
      operationId: my_orders_selling_all_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_orders
      summary: "Get all seller orders, newest first."
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/orders/selling/awaiting_shipment:
    get:
      description: "Get unpaid seller orders, newest first."
      operationId: my_orders_selling_awaiting_shipment_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_orders
      summary: "Get unpaid seller orders, newest first."
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/orders/selling/buyer_history/{buyer_id}:
    get:
      description: See previous orders from buyer
      operationId: my_orders_selling_buyer_history_buyer_id_get
      parameters:
      - explode: false
        in: path
        name: buyer_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_orders
      summary: See previous orders from buyer
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/orders/selling/by_uuid/{uuid}:
    get:
      operationId: my_orders_selling_by_uuid_uuid_get
      parameters:
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/orders/selling/unpaid:
    get:
      description: "Get unpaid seller orders, newest first."
      operationId: my_orders_selling_unpaid_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_orders
      summary: "Get unpaid seller orders, newest first."
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/orders/selling/{id}:
    get:
      description: Returns order details for a seller
      operationId: my_orders_selling_id_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_orders
      summary: Returns order details for a seller
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/orders/selling/{id}/mark_picked_up:
    post:
      description: Marks an order as picked up
      operationId: my_orders_selling_id_mark_picked_up_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_my_orders_selling__id__mark_picked_up_post_request'
        description: the content of the request
        x-body-name: body
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_orders
      summary: Marks an order as picked up
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
      x-codegen-request-body-name: body
  /my/orders/selling/{id}/ship:
    post:
      description: Marks an order as shipped
      operationId: my_orders_selling_id_ship_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_my_orders_selling__id__ship_post_request'
        description: the content of the request
        x-body-name: body
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_orders
      summary: Marks an order as shipped
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
      x-codegen-request-body-name: body
  /my/orders/selling/{order_id}/refund_requests:
    post:
      description: Initiate a refund for a sold order
      operationId: my_orders_selling_order_id_refund_requests_post
      parameters:
      - explode: false
        in: path
        name: order_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_orders
      summary: Initiate a refund for a sold order
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/payments/selling:
    get:
      description: Get payments
      operationId: my_payments_selling_get
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 24
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Filter by date created in ISO8601 format - e.g: 2015-04-09T10:52:23-00:00"
        explode: true
        in: query
        name: created_start_date
        required: false
        schema:
          type: string
        style: form
      - description: "Filter by date created in ISO8601 format - e.g: 2015-04-09T10:52:23-00:00"
        explode: true
        in: query
        name: created_end_date
        required: false
        schema:
          type: string
        style: form
      - description: "Filter by date modified in ISO8601 format - e.g: 2015-04-09T10:52:23-00:00"
        explode: true
        in: query
        name: updated_start_date
        required: false
        schema:
          type: string
        style: form
      - description: "Filter by date modified in ISO8601 format - e.g: 2015-04-09T10:52:23-00:00"
        explode: true
        in: query
        name: updated_end_date
        required: false
        schema:
          type: string
        style: form
      - description: Look up payments by order id
        explode: true
        in: query
        name: order_id
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_orders
      summary: Get payments
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/payments/selling/{id}:
    get:
      description: Get payment
      operationId: my_payments_selling_id_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_orders
      summary: Get payment
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/payouts:
    get:
      description: Get a list of payouts
      operationId: my_payouts_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_payouts
      summary: Get a list of payouts
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/payouts/{id}/line_items:
    get:
      description: Read the line items of a payout
      operationId: my_payouts_id_line_items_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_payouts
      summary: Read the line items of a payout
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/refund_requests/selling:
    get:
      description: Get a list of refund requests as a seller
      operationId: my_refund_requests_selling_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_orders
      summary: Get a list of refund requests as a seller
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/refund_requests/selling/{id}:
    put:
      description: Update a refund request for a sold order
      operationId: my_refund_requests_selling_id_put
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_orders
      summary: Update a refund request for a sold order
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/viewed_listings:
    get:
      description: Get a list of your recently viewed listings.
      operationId: my_viewed_listings_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_lists
      summary: Get a list of your recently viewed listings.
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/wishlist:
    get:
      description: Get a list of wishlisted items
      operationId: my_wishlist_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_lists
      summary: Get a list of wishlisted items
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /my/wishlist/{id}:
    delete:
      description: Remove a listing from your wishlist
      operationId: my_wishlist_id_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_lists
      summary: Remove a listing from your wishlist
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
    put:
      description: Add a listing to your wishlist
      operationId: my_wishlist_id_put
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_lists
      summary: Add a listing to your wishlist
      tags:
      - my
      x-openapi-router-controller: openapi_server.controllers.my_controller
  /orders/{order_id}/feedback/buyer:
    get:
      description: Feedback details for an order's buyer
      operationId: orders_order_id_feedback_buyer_get
      parameters:
      - explode: false
        in: path
        name: order_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      summary: Feedback details for an order's buyer
      tags:
      - orders
      x-openapi-router-controller: openapi_server.controllers.orders_controller
    post:
      description: Add feedback about an order's buyer
      operationId: orders_order_id_feedback_buyer_post
      parameters:
      - explode: false
        in: path
        name: order_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_feedback
      summary: Add feedback about an order's buyer
      tags:
      - orders
      x-openapi-router-controller: openapi_server.controllers.orders_controller
  /orders/{order_id}/feedback/seller:
    get:
      description: Feedback details for an order's seller
      operationId: orders_order_id_feedback_seller_get
      parameters:
      - explode: false
        in: path
        name: order_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      summary: Feedback details for an order's seller
      tags:
      - orders
      x-openapi-router-controller: openapi_server.controllers.orders_controller
    post:
      description: Add feedback about an order's seller
      operationId: orders_order_id_feedback_seller_post
      parameters:
      - explode: false
        in: path
        name: order_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_feedback
      summary: Add feedback about an order's seller
      tags:
      - orders
      x-openapi-router-controller: openapi_server.controllers.orders_controller
  /payment_methods:
    get:
      description: Get list of payment methods
      operationId: payment_methods_get
      responses:
        default:
          description: Unexpected error
      summary: Get list of payment methods
      tags:
      - payment_methods
      x-openapi-router-controller: openapi_server.controllers.payment_methods_controller
  /priceguide/{id}/transactions/summary:
    get:
      description: Get a summary of transactions for a given price guide
      operationId: priceguide_id_transactions_summary_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: number_of_months
        required: false
        schema:
          default: 3
          type: integer
        style: form
      - explode: true
        in: query
        name: condition
        required: false
        schema:
          default: used
          type: string
        style: form
      responses:
        default:
          description: Unexpected error
      summary: Get a summary of transactions for a given price guide
      tags:
      - priceguide
      x-openapi-router-controller: openapi_server.controllers.priceguide_controller
  /products/reviews/{id}:
    get:
      description: View a review
      operationId: products_reviews_id_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      summary: View a review
      tags:
      - products
      x-openapi-router-controller: openapi_server.controllers.products_controller
    put:
      description: Update a review
      operationId: products_reviews_id_put
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_products_reviews__id__put_request'
        description: the content of the request
        x-body-name: body
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_reviews
      summary: Update a review
      tags:
      - products
      x-openapi-router-controller: openapi_server.controllers.products_controller
      x-codegen-request-body-name: body
  /products/{slug}/reviews:
    get:
      description: View reviews of a comparison shopping page
      operationId: products_slug_reviews_get
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      summary: View reviews of a comparison shopping page
      tags:
      - products
      x-openapi-router-controller: openapi_server.controllers.products_controller
    post:
      description: Create a review for a product
      operationId: products_slug_reviews_post
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_reviews
      summary: Create a review for a product
      tags:
      - products
      x-openapi-router-controller: openapi_server.controllers.products_controller
  /sales/reverb:
    get:
      description: View upcoming and live Reverb official sales.
      operationId: sales_reverb_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_listings
      summary: View upcoming and live Reverb official sales.
      tags:
      - sales
      x-openapi-router-controller: openapi_server.controllers.sales_controller
  /sales/seller:
    get:
      description: View your created sales.
      operationId: sales_seller_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_listings
      summary: View your created sales.
      tags:
      - sales
      x-openapi-router-controller: openapi_server.controllers.sales_controller
  /sales/{sale_id}/listings:
    delete:
      description: Remove a listing from a sale
      operationId: sales_sale_id_listings_delete
      parameters:
      - explode: false
        in: path
        name: sale_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_listings
      summary: Remove a listing from a sale
      tags:
      - sales
      x-openapi-router-controller: openapi_server.controllers.sales_controller
    post:
      description: Add listings to a sale
      operationId: sales_sale_id_listings_post
      parameters:
      - explode: false
        in: path
        name: sale_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_listings
      summary: Add listings to a sale
      tags:
      - sales
      x-openapi-router-controller: openapi_server.controllers.sales_controller
  /sales/{slug}:
    get:
      operationId: sales_slug_get
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      tags:
      - sales
      x-openapi-router-controller: openapi_server.controllers.sales_controller
  /shipping/providers:
    get:
      description: List of supported shipping providers
      operationId: shipping_providers_get
      responses:
        default:
          description: Unexpected error
      summary: List of supported shipping providers
      tags:
      - shipping
      x-openapi-router-controller: openapi_server.controllers.shipping_controller
  /shipping/regions:
    get:
      operationId: shipping_regions_get
      responses:
        default:
          description: Unexpected error
      tags:
      - shipping
      x-openapi-router-controller: openapi_server.controllers.shipping_controller
  /shop:
    get:
      description: Get your own shop details
      operationId: shop_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_profile
      summary: Get your own shop details
      tags:
      - shop
      x-openapi-router-controller: openapi_server.controllers.shop_controller
    put:
      description: Update your shop profile
      operationId: shop_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_shop_put_request'
        description: the content of the request
        x-body-name: body
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_profile
      summary: Update your shop profile
      tags:
      - shop
      x-openapi-router-controller: openapi_server.controllers.shop_controller
      x-codegen-request-body-name: body
  /shop/listing_conditions:
    get:
      description: List of supported product conditions
      operationId: shop_listing_conditions_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_profile
      summary: List of supported product conditions
      tags:
      - shop
      x-openapi-router-controller: openapi_server.controllers.shop_controller
  /shop/payment_methods:
    get:
      description: Get accepted payment methods
      operationId: shop_payment_methods_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_profile
      summary: Get accepted payment methods
      tags:
      - shop
      x-openapi-router-controller: openapi_server.controllers.shop_controller
  /shop/vacation:
    delete:
      description: Disable vacation mode. All listings will be re-enabled.
      operationId: shop_vacation_delete
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_profile
      summary: Disable vacation mode. All listings will be re-enabled.
      tags:
      - shop
      x-openapi-router-controller: openapi_server.controllers.shop_controller
    get:
      description: Returns shop vacation status
      operationId: shop_vacation_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_profile
      summary: Returns shop vacation status
      tags:
      - shop
      x-openapi-router-controller: openapi_server.controllers.shop_controller
    post:
      description: Enable vacation mode. All listings will be unavailable until vacation
        mode is turned off.
      operationId: shop_vacation_post
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_profile
      summary: Enable vacation mode. All listings will be unavailable until vacation
        mode is turned off.
      tags:
      - shop
      x-openapi-router-controller: openapi_server.controllers.shop_controller
  /shops/{id}/storefronts:
    get:
      description: Get storefront details on a shop.
      operationId: shops_id_storefronts_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      summary: Get storefront details on a shop.
      tags:
      - shops
      x-openapi-router-controller: openapi_server.controllers.shops_controller
  /shops/{shop_id}/shipping_profiles:
    get:
      description: List of shipping profiles for your shop
      operationId: shops_shop_id_shipping_profiles_get
      parameters:
      - explode: false
        in: path
        name: shop_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_profile
      summary: List of shipping profiles for your shop
      tags:
      - shops
      x-openapi-router-controller: openapi_server.controllers.shops_controller
  /shops/{slug}:
    get:
      description: Get details on a shop.
      operationId: shops_slug_get
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      - description: Include the live listing count in the response.
        explode: true
        in: query
        name: include_listing_count
        required: false
        schema:
          type: boolean
        style: form
      responses:
        default:
          description: Unexpected error
      summary: Get details on a shop.
      tags:
      - shops
      x-openapi-router-controller: openapi_server.controllers.shops_controller
  /shops/{slug}/feedback:
    get:
      description: Get seller's feedback
      operationId: shops_slug_feedback_get
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      summary: Get seller's feedback
      tags:
      - shops
      x-openapi-router-controller: openapi_server.controllers.shops_controller
  /shops/{slug}/feedback/buyer:
    get:
      description: Get seller's feedback as a buyer
      operationId: shops_slug_feedback_buyer_get
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      summary: Get seller's feedback as a buyer
      tags:
      - shops
      x-openapi-router-controller: openapi_server.controllers.shops_controller
  /shops/{slug}/feedback/seller:
    get:
      description: Get seller's feedback as a seller
      operationId: shops_slug_feedback_seller_get
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      summary: Get seller's feedback as a seller
      tags:
      - shops
      x-openapi-router-controller: openapi_server.controllers.shops_controller
  /wants:
    get:
      description: A list of wanted items by the user
      operationId: wants_get
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - read_lists
      summary: A list of wanted items by the user
      tags:
      - wants
      x-openapi-router-controller: openapi_server.controllers.wants_controller
  /wants/{id}:
    delete:
      description: Unmark an item wanted.
      operationId: wants_id_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_lists
      summary: Unmark an item wanted.
      tags:
      - wants
      x-openapi-router-controller: openapi_server.controllers.wants_controller
    put:
      description: Mark an item wanted. Returns 200 on success or 422 on failure.
      operationId: wants_id_put
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      security:
      - oauth2:
        - write_lists
      summary: Mark an item wanted. Returns 200 on success or 422 on failure.
      tags:
      - wants
      x-openapi-router-controller: openapi_server.controllers.wants_controller
  /webhooks/registrations:
    get:
      description: Get webhook registrations
      operationId: webhooks_registrations_get
      responses:
        default:
          description: Unexpected error
      summary: Get webhook registrations
      tags:
      - webhooks
      x-openapi-router-controller: openapi_server.controllers.webhooks_controller
    post:
      description: Register a webhook
      operationId: webhooks_registrations_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_webhooks_registrations_post_request'
        description: the content of the request
        x-body-name: body
      responses:
        default:
          description: Unexpected error
      summary: Register a webhook
      tags:
      - webhooks
      x-openapi-router-controller: openapi_server.controllers.webhooks_controller
      x-codegen-request-body-name: body
  /webhooks/registrations/{id}:
    delete:
      description: Remove a webhook
      operationId: webhooks_registrations_id_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      summary: Remove a webhook
      tags:
      - webhooks
      x-openapi-router-controller: openapi_server.controllers.webhooks_controller
    get:
      description: Get details of a webhook registration
      operationId: webhooks_registrations_id_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Unexpected error
      summary: Get details of a webhook registration
      tags:
      - webhooks
      x-openapi-router-controller: openapi_server.controllers.webhooks_controller
components:
  requestBodies:
    Body:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_conversations__conversation_id__offer_post_request'
      description: the content of the request
    Body2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_listings__listing_id__conversations_post_request'
      description: the content of the request
    Body3:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_conversations__id__offer_post_request'
      description: the content of the request
  schemas:
    _listings_post_request_shipping_rates_inner:
      properties:
        rate:
          $ref: '#/components/schemas/_conversations__conversation_id__offer_post_request_price'
        region_code:
          description: Country code or subregion/superregion code. Full list of codes
            at /api/shipping/regions
          title: region_code
          type: string
      title: _listings_post_request_shipping_rates_inner
      type: object
    _shop_put_request_address:
      properties:
        country_code:
          title: country_code
          type: string
        extended_address:
          title: extended_address
          type: string
        locality:
          title: locality
          type: string
        name:
          title: name
          type: string
        phone:
          title: phone
          type: string
        postal_code:
          title: postal_code
          type: string
        region:
          title: region
          type: string
        street_address:
          title: street_address
          type: string
      title: _shop_put_request_address
      type: object
    _listings__slug__flag_post_request:
      properties:
        description:
          description: User input description specifying what is flag-worthy about
            this listing
          title: description
          type: string
        reason:
          description: "Valid reasons: 'Sexuality/nudity', 'Hateful or inappropriate\
            \ speech', 'Item not as described or potential fraud', 'Trademark infringement',\
            \ 'Other'"
          title: reason
          type: string
      required:
      - reason
      title: _listings__slug__flag_post_request
      type: object
    _webhooks_registrations_post_request:
      properties:
        topic:
          description: "Valid values: listings/update, listings/publish, listings/bumps-ran-out,\
            \ orders/create, orders/update, payments/create, payments/update, app/uninstalled"
          enum:
          - listings/update
          - listings/publish
          - listings/bumps-ran-out
          - orders/create
          - orders/update
          - payments/create
          - payments/update
          - app/uninstalled
          title: topic
          type: string
        url:
          title: url
          type: string
      required:
      - topic
      - url
      title: _webhooks_registrations_post_request
      type: object
    _my_conversations__id__put_request:
      properties:
        read:
          description: Should the conversation be marked as read
          title: read
          type: boolean
      title: _my_conversations__id__put_request
      type: object
    _my_negotiations__id__accept_post_request:
      properties:
        message:
          description: Message to include with accepted offer
          title: message
          type: string
      title: _my_negotiations__id__accept_post_request
      type: object
    _listings_post_request:
      properties:
        categories:
          items:
            $ref: '#/components/schemas/_listings_post_request_categories_inner'
          title: categories
          type: array
        condition:
          $ref: '#/components/schemas/_listings_post_request_condition'
        description:
          description: Product description. Please keep formatting to a minimum.
          title: description
          type: string
        exclusive_channel:
          description: "Currently for users of seller sites only, this allows you\
            \ to have a listing available only to your seller site by setting this\
            \ to 'seller_site'"
          enum:
          - seller_site
          - reverb
          - none
          title: exclusive_channel
          type: string
        finish:
          description: "Finish, e.g. 'Sunburst'"
          title: finish
          type: string
        has_inventory:
          description: Set true if selling more than one
          title: has_inventory
          type: boolean
        inventory:
          description: Number of items available for sale. Reverb will increment and
            decrement automatically.
          title: inventory
          type: integer
        location:
          $ref: '#/components/schemas/_listings_post_request_location'
        make:
          description: "ex: Fender, Gibson"
          title: make
          type: string
        model:
          description: "ex: Stratocaster, SG"
          title: model
          type: string
        multi_item:
          description: Specifies if the listing is a bundle of multiple individual
            items
          title: multi_item
          type: boolean
        offers_enabled:
          description: "Whether the listing accepts negotiated offers (default: true)"
          title: offers_enabled
          type: boolean
        origin_country_code:
          description: "Country of origin/manufacture, ISO code (e.g: US)"
          title: origin_country_code
          type: string
        photos:
          description: "An array of image URLs. Ex: ['http://my.site.com/image.jpg']"
          items:
            type: string
          title: photos
          type: array
        preorder_info:
          $ref: '#/components/schemas/_listings_post_request_preorder_info'
        price:
          $ref: '#/components/schemas/_conversations__conversation_id__offer_post_request_price'
        prop_65_warning:
          description: "If your listing contains chemicals that are required to be\
            \ reported under California Prop 65, please provide your warning statement.\
            \ We will add the required 'Warning' label and link to California's information\
            \ page, so you only need to provide the body of the warning. For more\
            \ information, see https://www.p65warnings.ca.gov/new-proposition-65-warnings"
          title: prop_65_warning
          type: string
        publish:
          description: Publish your listing if draft
          title: publish
          type: boolean
        seller:
          $ref: '#/components/schemas/_listings_post_request_seller'
        seller_cost:
          description: "Cost of goods in your currency as a POSIX-compliant decimal\
            \ number (internal use only, not shown to buyers)"
          title: seller_cost
          type: string
        shipping:
          $ref: '#/components/schemas/_listings_post_request_shipping'
        shipping_profile_id:
          description: id of a shop's shipping profile
          title: shipping_profile_id
          type: string
        shipping_profile_name:
          description: "DEPRECATED, please use shipping_profile_id. Name of a shipping\
            \ profile"
          title: shipping_profile_name
          type: string
        sku:
          description: Unique identifier for product
          title: sku
          type: string
        sold_as_is:
          description: This item is sold As-Is and cannot be returned
          title: sold_as_is
          type: boolean
        storage_location:
          description: Internal note used by sellers to back reference their catalog
            system when entering a listing
          title: storage_location
          type: string
        tax_exempt:
          description: Listing is exempt from taxes / VAT
          title: tax_exempt
          type: boolean
        title:
          description: Title of your listing
          title: title
          type: string
        upc:
          description: Valid UPC code
          title: upc
          type: string
        upc_does_not_apply:
          description: "True if a brand new product has no UPC code, ie for a handmade\
            \ or custom item"
          title: upc_does_not_apply
          type: boolean
        videos:
          description: "List of YouTube video urls. Note: ONLY ONE ALLOWED"
          items:
            $ref: '#/components/schemas/_listings_post_request_videos_inner'
          title: videos
          type: array
        year:
          description: "Supports many formats. Ex: 1979, mid-70s, late 90s"
          title: year
          type: string
      title: _listings_post_request
      type: object
    _listings_post_request_preorder_info:
      description: Create or update a preorder listing. Requires opt-in. Please contact
        sales@reverb.com if you would like to activate this feature.
      properties:
        lead_time:
          description: The amount of time before the item will be ready to ship. When
            lead_time is submitted it is converted into days and added to the current
            date to produce `estimated_ship_date` in the response body of the request.
          title: lead_time
          type: integer
        lead_time_unit:
          description: The unit of time which lead_time is measured in
          enum:
          - days
          - weeks
          title: lead_time_unit
          type: string
        ship_date:
          description: "The date the item will be available to ship. In the response\
            \ body of the request, `estimated_ship_date`, will be the same as ship_date.\
            \ Date must be ISO8601 format - e.g: 2015-04-09T10:52:23-00:00."
          title: ship_date
          type: string
      required:
      - lead_time_unit
      title: _listings_post_request_preorder_info
      type: object
    _conversations__conversation_id__offer_post_request_offer_items_inner:
      properties:
        listing_id:
          title: listing_id
          type: string
        price:
          title: price
          type: string
        shipping_price:
          title: shipping_price
          type: string
      required:
      - listing_id
      - price
      - shipping_price
      title: _conversations__conversation_id__offer_post_request_offer_items_inner
      type: object
    _conversations__conversation_id__offer_post_request_price:
      properties:
        amount:
          description: "The amount of money being expressed, as a POSIX-compliant\
            \ decimal number"
          title: amount
          type: string
        currency:
          description: The currency the money will be expressed in
          enum:
          - USD
          - CAD
          - EUR
          - GBP
          - AUD
          - JPY
          - NZD
          - MXN
          title: currency
          type: string
      required:
      - amount
      - currency
      title: _conversations__conversation_id__offer_post_request_price
      type: object
    _products_reviews__id__put_request:
      properties:
        body:
          description: Content of the review
          title: body
          type: string
        rating:
          description: Rating from 1 to 5
          title: rating
          type: integer
        title:
          description: Title for the review
          title: title
          type: string
      title: _products_reviews__id__put_request
      type: object
    _listings_post_request_condition:
      description: Condition
      properties:
        uuid:
          description: Condition UUID
          enum:
          - fbf35668-96a0-4baa-bcde-ab18d6b1b329
          - 6a9dfcad-600b-46c8-9e08-ce6e5057921e
          - 98777886-76d0-44c8-865e-bb40e669e934
          - f7a3f48c-972a-44c6-b01a-0cd27488d3f6
          - ae4d9114-1bd7-4ec5-a4ba-6653af5ac84d
          - df268ad1-c462-4ba6-b6db-e007e23922ea
          - ac5b9c1e-dc78-466d-b0b3-7cf712967a48
          - 6db7df88-293b-4017-a1c1-cdb5e599fa1a
          - 9225283f-60c2-4413-ad18-1f5eba7a856f
          - 7c3f45de-2ae0-4c81-8400-fdb6b1d74890
          title: uuid
          type: string
      required:
      - uuid
      title: _listings_post_request_condition
      type: object
    _listings_post_request_location:
      properties:
        country_code:
          description: "Ex: US"
          title: country_code
          type: string
        locality:
          description: "Ex: Chicago"
          title: locality
          type: string
        region:
          description: "Ex: IL"
          title: region
          type: string
      title: _listings_post_request_location
      type: object
    _my_conversations_post_request:
      properties:
        body:
          description: The body of the message
          title: body
          type: string
        cloudinary_photos:
          description: An array of cloudinary data hashes (Reverb internal use only).
          items:
            type: string
          title: cloudinary_photos
          type: array
        listing_id:
          description: The id of the listing being discussed
          title: listing_id
          type: integer
        recipient_id:
          description: The id of the user you are trying to contact
          title: recipient_id
          type: integer
        recipient_uuid:
          description: The uuid of the user you are trying to contact
          title: recipient_uuid
          type: string
        shop_id:
          description: The id of the shop you are trying to contact
          title: shop_id
          type: string
      required:
      - body
      title: _my_conversations_post_request
      type: object
    _my_follows_articles_post_request:
      properties:
        category_uuids:
          title: category_uuids
          type: string
      required:
      - category_uuids
      title: _my_follows_articles_post_request
      type: object
    _listings__listing_id__conversations_post_request:
      properties:
        body:
          title: body
          type: string
      required:
      - body
      title: _listings__listing_id__conversations_post_request
      type: object
    _my_account_put_request:
      properties:
        currency:
          description: The currency preference for the account
          title: currency
          type: string
        first_name:
          description: The first name of the account holder
          title: first_name
          type: string
        last_name:
          description: The last name of the account holder
          title: last_name
          type: string
        locale_code:
          description: The locale code for the account
          title: locale_code
          type: string
        shipping_region_code:
          description: The shipping region preference for the account
          title: shipping_region_code
          type: string
        third_party_ad_data_consent:
          description: The privacy setting preference for the account
          title: third_party_ad_data_consent
          type: boolean
      title: _my_account_put_request
      type: object
    _my_listings__slug__state_end_put_request:
      properties:
        reason:
          description: "The reason this listing is being ended. Valid reasons: [\"\
            not_sold\", \"reverb_sale\"]."
          enum:
          - not_sold
          - reverb_sale
          title: reason
          type: string
      required:
      - reason
      title: _my_listings__slug__state_end_put_request
      type: object
    _listings_post_request_categories_inner:
      properties:
        uuid:
          description: UUID of the category for this listing.
          title: uuid
          type: string
      title: _listings_post_request_categories_inner
      type: object
    _shop_put_request:
      properties:
        address:
          $ref: '#/components/schemas/_shop_put_request_address'
        currency:
          enum:
          - USD
          - CAD
          - EUR
          - GBP
          - AUD
          - JPY
          - NZD
          - MXN
          title: currency
          type: string
        description:
          title: description
          type: string
        legal_country_code:
          enum:
          - AD
          - AE
          - AF
          - AG
          - AI
          - AL
          - AM
          - AO
          - AR
          - AS
          - AT
          - AU
          - AW
          - AX
          - AZ
          - BA
          - BB
          - BD
          - BE
          - BF
          - BG
          - BH
          - BI
          - BJ
          - BL
          - BM
          - BN
          - BO
          - BQ
          - BR
          - BS
          - BT
          - BV
          - BW
          - BY
          - BZ
          - CA
          - CC
          - CD
          - CF
          - CG
          - CH
          - CI
          - CK
          - CL
          - CM
          - CN
          - CO
          - CR
          - CV
          - CW
          - CX
          - CY
          - CZ
          - DE
          - DJ
          - DK
          - DM
          - DO
          - DZ
          - EC
          - EE
          - EG
          - EH
          - ER
          - ES
          - ET
          - FI
          - FJ
          - FK
          - FM
          - FO
          - FR
          - GA
          - GB
          - GD
          - GE
          - GF
          - GG
          - GH
          - GI
          - GL
          - GM
          - GN
          - GP
          - GQ
          - GR
          - GS
          - GT
          - GU
          - GW
          - GY
          - HK
          - HM
          - HN
          - HR
          - HT
          - HU
          - ID
          - IE
          - IL
          - IM
          - IN
          - IO
          - IQ
          - IS
          - IT
          - JE
          - JM
          - JO
          - JP
          - KE
          - KG
          - KH
          - KI
          - KM
          - KN
          - KR
          - KW
          - KY
          - KZ
          - LA
          - LB
          - LC
          - LI
          - LK
          - LR
          - LS
          - LT
          - LU
          - LV
          - LY
          - MA
          - MC
          - MD
          - ME
          - MF
          - MG
          - MH
          - MK
          - ML
          - MM
          - MN
          - MO
          - MP
          - MQ
          - MR
          - MS
          - MT
          - MU
          - MV
          - MW
          - MX
          - MY
          - MZ
          - NA
          - NC
          - NE
          - NF
          - NG
          - NI
          - NL
          - "false"
          - NP
          - NR
          - NU
          - NZ
          - OM
          - PA
          - PE
          - PF
          - PG
          - PH
          - PK
          - PL
          - PM
          - PN
          - PS
          - PT
          - PW
          - PY
          - QA
          - RE
          - RO
          - RS
          - RU
          - RW
          - SA
          - SB
          - SC
          - SE
          - SG
          - SH
          - SI
          - SJ
          - SK
          - SL
          - SM
          - SN
          - SO
          - SR
          - SS
          - ST
          - SV
          - SX
          - SZ
          - TC
          - TD
          - TF
          - TG
          - TH
          - TJ
          - TK
          - TL
          - TM
          - TN
          - TO
          - TR
          - TT
          - TV
          - TW
          - TZ
          - UA
          - UG
          - UM
          - US
          - UY
          - UZ
          - VA
          - VC
          - VE
          - VG
          - VI
          - VN
          - VU
          - WF
          - WS
          - YE
          - YT
          - ZA
          - ZM
          - ZW
          title: legal_country_code
          type: string
        legal_country_code_confirmed:
          title: legal_country_code_confirmed
          type: boolean
        name:
          title: name
          type: string
        payment_policy:
          title: payment_policy
          type: string
        return_policy:
          title: return_policy
          type: string
        shipping_policy:
          title: shipping_policy
          type: string
        shop_type:
          enum:
          - individual
          - business
          title: shop_type
          type: string
        website:
          title: website
          type: string
      title: _shop_put_request
      type: object
    _my_orders_selling__id__mark_picked_up_post_request:
      properties:
        date:
          description: Date the item was picked up.
          title: date
          type: string
      title: _my_orders_selling__id__mark_picked_up_post_request
      type: object
    _my_follows_search_post_request:
      properties:
        accepts_gift_cards:
          description: "If true, include only items that accept gift cards"
          title: accepts_gift_cards
          type: boolean
        accepts_payment_plans:
          description: "If true, only show items that can be purchased with a payment\
            \ plan"
          title: accepts_payment_plans
          type: boolean
        auction_price_max:
          description: Maximum current auction price
          format: float
          title: auction_price_max
          type: number
        category:
          description: Category slug from /api/categories
          title: category
          type: string
        conditions:
          description: "Condition: all,new,b-stock,used,non-functioning,all-but-new,poor,fair,good,very-good,excellent,mint"
          enum:
          - all
          - new
          - b-stock
          - used
          - non-functioning
          - all-but-new
          - poor
          - fair
          - good
          - very-good
          - excellent
          - mint
          items:
            type: string
          title: conditions
          type: array
        currency:
          description: The currency to be used for the price filters
          enum:
          - USD
          - CAD
          - EUR
          - GBP
          - AUD
          - JPY
          - NZD
          - MXN
          - DKK
          - SEK
          - CHF
          - ARS
          - BRL
          - HKD
          - NOK
          - PHP
          - PLN
          - RUB
          title: currency
          type: string
        decade:
          description: "Decade: e.g. 1970s, early 70s"
          title: decade
          type: string
        exclude_auctions:
          description: "If true, exclude auctions"
          title: exclude_auctions
          type: boolean
        finish:
          description: "Visual finish of the item, common for guitars"
          title: finish
          type: string
        handmade:
          description: Handmade items only
          title: handmade
          type: boolean
        item_city:
          description: City where item is located
          title: item_city
          type: string
        item_country:
          description: DEPRECATED - Country code where item is located
          title: item_country
          type: string
        item_region:
          description: Country code where item is located
          title: item_region
          type: string
        item_state:
          description: State or region code where item is located
          title: item_state
          type: string
        listing_type:
          description: "Type of listing: auctions,offers"
          enum:
          - auctions
          - offers
          title: listing_type
          type: string
        local_pickup:
          description: Only items that offer local pickup
          title: local_pickup
          type: boolean
        make:
          description: Make(s)/brand of item (e.g. Fender). Can take a single value
            or an array.
          items:
            type: string
          title: make
          type: array
        model:
          description: Model of item (e.g. Stratocaster)
          title: model
          type: string
        must_not:
          description: "Search term negation. If you want to exclude a term, add it\
            \ here"
          title: must_not
          type: string
        not_ids:
          description: "Listing ID negation. If you want to exclude a listing, add\
            \ it here."
          items:
            type: integer
          title: not_ids
          type: array
        preferred_seller:
          description: "If true, include only items by Reverb Preferred Sellers"
          title: preferred_seller
          type: boolean
        price_max:
          description: Maximum price of search results (USD)
          format: float
          title: price_max
          type: number
        price_min:
          description: Minimum price of search results (USD)
          format: float
          title: price_min
          type: number
        product_type:
          description: Product type slug from /api/categories
          title: product_type
          type: string
        query:
          description: Search query.
          title: query
          type: string
        ships_to:
          description: Limit search to items that ship to this country code
          title: ships_to
          type: string
        shop:
          description: Slug of shop to search
          title: shop
          type: string
        shop_id:
          description: ID of shop to search
          title: shop_id
          type: string
        watchers_count_min:
          description: Minimum number of watchers (used to find popular items)
          title: watchers_count_min
          type: integer
        year_max:
          description: Maximum year of manufacture
          title: year_max
          type: integer
        year_min:
          description: Minumum year of manufacture
          title: year_min
          type: integer
      title: _my_follows_search_post_request
      type: object
    _conversations__conversation_id__offer_post_request:
      properties:
        country_code:
          title: country_code
          type: string
        layaway_terms_slug:
          title: layaway_terms_slug
          type: string
        message:
          description: Message to include with counter offer
          title: message
          type: string
        offer_items:
          items:
            $ref: '#/components/schemas/_conversations__conversation_id__offer_post_request_offer_items_inner'
          title: offer_items
          type: array
        price:
          $ref: '#/components/schemas/_conversations__conversation_id__offer_post_request_price'
        quantity:
          title: quantity
          type: string
        recipient_id:
          description: ID of the recipient of the offer. Required if you are the seller
            pushing an offer to a buyer.
          title: recipient_id
          type: string
        region_code:
          title: region_code
          type: string
        shipping_price:
          $ref: '#/components/schemas/_conversations__conversation_id__offer_post_request_shipping_price'
      title: _conversations__conversation_id__offer_post_request
      type: object
    _listings_post_request_seller:
      properties:
        paypal_email:
          title: paypal_email
          type: string
      title: _listings_post_request_seller
      type: object
    _my_orders_selling__id__ship_post_request:
      properties:
        provider:
          description: "Shipping provider: One of UPS, USPS, FedEx, DHL Deutschland,\
            \ DHLExpress, DHLGlobalMail, DHL, Canada Post, CanPar, Royal Mail, PostNL,\
            \ Australia Post, EMS, La Poste - Colissimo, China Post, GLS, Parcelforce,\
            \ Purolator, Interlogistica, Correos España, Ukraine Post, DPD Germany,\
            \ DPD UK, DPD France, Hermes, TNT, Other"
          title: provider
          type: string
        send_notification:
          description: Should we send an email notification to the buyer
          title: send_notification
          type: boolean
        tracking_number:
          description: Tracking number provided by the shipping provider
          title: tracking_number
          type: string
      required:
      - provider
      - send_notification
      - tracking_number
      title: _my_orders_selling__id__ship_post_request
      type: object
    _listings_post_request_shipping:
      properties:
        local:
          description: True if you offer local pickup
          title: local
          type: boolean
        rates:
          description: List of shipping rates. Set to null to clear rates.
          items:
            $ref: '#/components/schemas/_listings_post_request_shipping_rates_inner'
          title: rates
          type: array
      title: _listings_post_request_shipping
      type: object
    _conversations__conversation_id__offer_post_request_shipping_price:
      description: Shipping price (sellers only)
      properties:
        amount:
          description: "The amount of money being expressed, as a POSIX-compliant\
            \ decimal number"
          title: amount
          type: string
        currency:
          description: The currency the money will be expressed in
          enum:
          - USD
          - CAD
          - EUR
          - GBP
          - AUD
          - JPY
          - NZD
          - MXN
          title: currency
          type: string
      required:
      - amount
      - currency
      title: _conversations__conversation_id__offer_post_request_shipping_price
      type: object
    _conversations__id__offer_post_request:
      properties:
        message:
          description: Message to include with counter offer
          title: message
          type: string
        price:
          description: Offer price
          title: price
          type: string
        shipping_price:
          description: Shipping price (sellers only)
          title: shipping_price
          type: string
      required:
      - price
      title: _conversations__id__offer_post_request
      type: object
    _listings_post_request_videos_inner:
      properties:
        link:
          description: Valid YouTube url
          title: link
          type: string
      required:
      - link
      title: _listings_post_request_videos_inner
      type: object
  securitySchemes:
    oauth2:
      flows:
        clientCredentials:
          scopes:
            public: ""
            read_feedback: '*Originally missing*'
            read_listings: '*Originally missing*'
            read_lists: '*Originally missing*'
            read_messages: '*Originally missing*'
            read_offers: '*Originally missing*'
            read_orders: '*Originally missing*'
            read_payouts: '*Originally missing*'
            read_profile: '*Originally missing*'
            write_feedback: '*Originally missing*'
            write_listings: '*Originally missing*'
            write_listings_for_others: '*Originally missing*'
            write_lists: '*Originally missing*'
            write_messages: '*Originally missing*'
            write_offers: '*Originally missing*'
            write_orders: '*Originally missing*'
            write_profile: '*Originally missing*'
            write_reviews: '*Originally missing*'
          tokenUrl: https://reverb.com/oauth/token
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_oauth2
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_oauth2
x-hasEquivalentPaths: true
