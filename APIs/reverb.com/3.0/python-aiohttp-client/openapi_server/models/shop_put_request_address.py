# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ShopPutRequestAddress(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country_code: str=None, extended_address: str=None, locality: str=None, name: str=None, phone: str=None, postal_code: str=None, region: str=None, street_address: str=None):
        """ShopPutRequestAddress - a model defined in OpenAPI

        :param country_code: The country_code of this ShopPutRequestAddress.
        :param extended_address: The extended_address of this ShopPutRequestAddress.
        :param locality: The locality of this ShopPutRequestAddress.
        :param name: The name of this ShopPutRequestAddress.
        :param phone: The phone of this ShopPutRequestAddress.
        :param postal_code: The postal_code of this ShopPutRequestAddress.
        :param region: The region of this ShopPutRequestAddress.
        :param street_address: The street_address of this ShopPutRequestAddress.
        """
        self.openapi_types = {
            'country_code': str,
            'extended_address': str,
            'locality': str,
            'name': str,
            'phone': str,
            'postal_code': str,
            'region': str,
            'street_address': str
        }

        self.attribute_map = {
            'country_code': 'country_code',
            'extended_address': 'extended_address',
            'locality': 'locality',
            'name': 'name',
            'phone': 'phone',
            'postal_code': 'postal_code',
            'region': 'region',
            'street_address': 'street_address'
        }

        self._country_code = country_code
        self._extended_address = extended_address
        self._locality = locality
        self._name = name
        self._phone = phone
        self._postal_code = postal_code
        self._region = region
        self._street_address = street_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShopPutRequestAddress':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _shop_put_request_address of this ShopPutRequestAddress.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country_code(self):
        """Gets the country_code of this ShopPutRequestAddress.


        :return: The country_code of this ShopPutRequestAddress.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this ShopPutRequestAddress.


        :param country_code: The country_code of this ShopPutRequestAddress.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def extended_address(self):
        """Gets the extended_address of this ShopPutRequestAddress.


        :return: The extended_address of this ShopPutRequestAddress.
        :rtype: str
        """
        return self._extended_address

    @extended_address.setter
    def extended_address(self, extended_address):
        """Sets the extended_address of this ShopPutRequestAddress.


        :param extended_address: The extended_address of this ShopPutRequestAddress.
        :type extended_address: str
        """

        self._extended_address = extended_address

    @property
    def locality(self):
        """Gets the locality of this ShopPutRequestAddress.


        :return: The locality of this ShopPutRequestAddress.
        :rtype: str
        """
        return self._locality

    @locality.setter
    def locality(self, locality):
        """Sets the locality of this ShopPutRequestAddress.


        :param locality: The locality of this ShopPutRequestAddress.
        :type locality: str
        """

        self._locality = locality

    @property
    def name(self):
        """Gets the name of this ShopPutRequestAddress.


        :return: The name of this ShopPutRequestAddress.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ShopPutRequestAddress.


        :param name: The name of this ShopPutRequestAddress.
        :type name: str
        """

        self._name = name

    @property
    def phone(self):
        """Gets the phone of this ShopPutRequestAddress.


        :return: The phone of this ShopPutRequestAddress.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this ShopPutRequestAddress.


        :param phone: The phone of this ShopPutRequestAddress.
        :type phone: str
        """

        self._phone = phone

    @property
    def postal_code(self):
        """Gets the postal_code of this ShopPutRequestAddress.


        :return: The postal_code of this ShopPutRequestAddress.
        :rtype: str
        """
        return self._postal_code

    @postal_code.setter
    def postal_code(self, postal_code):
        """Sets the postal_code of this ShopPutRequestAddress.


        :param postal_code: The postal_code of this ShopPutRequestAddress.
        :type postal_code: str
        """

        self._postal_code = postal_code

    @property
    def region(self):
        """Gets the region of this ShopPutRequestAddress.


        :return: The region of this ShopPutRequestAddress.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this ShopPutRequestAddress.


        :param region: The region of this ShopPutRequestAddress.
        :type region: str
        """

        self._region = region

    @property
    def street_address(self):
        """Gets the street_address of this ShopPutRequestAddress.


        :return: The street_address of this ShopPutRequestAddress.
        :rtype: str
        """
        return self._street_address

    @street_address.setter
    def street_address(self, street_address):
        """Sets the street_address of this ShopPutRequestAddress.


        :param street_address: The street_address of this ShopPutRequestAddress.
        :type street_address: str
        """

        self._street_address = street_address
