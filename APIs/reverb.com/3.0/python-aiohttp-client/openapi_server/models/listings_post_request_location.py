# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListingsPostRequestLocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country_code: str=None, locality: str=None, region: str=None):
        """ListingsPostRequestLocation - a model defined in OpenAPI

        :param country_code: The country_code of this ListingsPostRequestLocation.
        :param locality: The locality of this ListingsPostRequestLocation.
        :param region: The region of this ListingsPostRequestLocation.
        """
        self.openapi_types = {
            'country_code': str,
            'locality': str,
            'region': str
        }

        self.attribute_map = {
            'country_code': 'country_code',
            'locality': 'locality',
            'region': 'region'
        }

        self._country_code = country_code
        self._locality = locality
        self._region = region

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListingsPostRequestLocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _listings_post_request_location of this ListingsPostRequestLocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country_code(self):
        """Gets the country_code of this ListingsPostRequestLocation.

        Ex: US

        :return: The country_code of this ListingsPostRequestLocation.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this ListingsPostRequestLocation.

        Ex: US

        :param country_code: The country_code of this ListingsPostRequestLocation.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def locality(self):
        """Gets the locality of this ListingsPostRequestLocation.

        Ex: Chicago

        :return: The locality of this ListingsPostRequestLocation.
        :rtype: str
        """
        return self._locality

    @locality.setter
    def locality(self, locality):
        """Sets the locality of this ListingsPostRequestLocation.

        Ex: Chicago

        :param locality: The locality of this ListingsPostRequestLocation.
        :type locality: str
        """

        self._locality = locality

    @property
    def region(self):
        """Gets the region of this ListingsPostRequestLocation.

        Ex: IL

        :return: The region of this ListingsPostRequestLocation.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this ListingsPostRequestLocation.

        Ex: IL

        :param region: The region of this ListingsPostRequestLocation.
        :type region: str
        """

        self._region = region
