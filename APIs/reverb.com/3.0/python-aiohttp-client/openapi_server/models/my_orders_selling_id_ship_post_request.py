# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MyOrdersSellingIdShipPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, provider: str=None, send_notification: bool=None, tracking_number: str=None):
        """MyOrdersSellingIdShipPostRequest - a model defined in OpenAPI

        :param provider: The provider of this MyOrdersSellingIdShipPostRequest.
        :param send_notification: The send_notification of this MyOrdersSellingIdShipPostRequest.
        :param tracking_number: The tracking_number of this MyOrdersSellingIdShipPostRequest.
        """
        self.openapi_types = {
            'provider': str,
            'send_notification': bool,
            'tracking_number': str
        }

        self.attribute_map = {
            'provider': 'provider',
            'send_notification': 'send_notification',
            'tracking_number': 'tracking_number'
        }

        self._provider = provider
        self._send_notification = send_notification
        self._tracking_number = tracking_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MyOrdersSellingIdShipPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _my_orders_selling__id__ship_post_request of this MyOrdersSellingIdShipPostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def provider(self):
        """Gets the provider of this MyOrdersSellingIdShipPostRequest.

        Shipping provider: One of UPS, USPS, FedEx, DHL Deutschland, DHLExpress, DHLGlobalMail, DHL, Canada Post, CanPar, Royal Mail, PostNL, Australia Post, EMS, La Poste - Colissimo, China Post, GLS, Parcelforce, Purolator, Interlogistica, Correos España, Ukraine Post, DPD Germany, DPD UK, DPD France, Hermes, TNT, Other

        :return: The provider of this MyOrdersSellingIdShipPostRequest.
        :rtype: str
        """
        return self._provider

    @provider.setter
    def provider(self, provider):
        """Sets the provider of this MyOrdersSellingIdShipPostRequest.

        Shipping provider: One of UPS, USPS, FedEx, DHL Deutschland, DHLExpress, DHLGlobalMail, DHL, Canada Post, CanPar, Royal Mail, PostNL, Australia Post, EMS, La Poste - Colissimo, China Post, GLS, Parcelforce, Purolator, Interlogistica, Correos España, Ukraine Post, DPD Germany, DPD UK, DPD France, Hermes, TNT, Other

        :param provider: The provider of this MyOrdersSellingIdShipPostRequest.
        :type provider: str
        """
        if provider is None:
            raise ValueError("Invalid value for `provider`, must not be `None`")

        self._provider = provider

    @property
    def send_notification(self):
        """Gets the send_notification of this MyOrdersSellingIdShipPostRequest.

        Should we send an email notification to the buyer

        :return: The send_notification of this MyOrdersSellingIdShipPostRequest.
        :rtype: bool
        """
        return self._send_notification

    @send_notification.setter
    def send_notification(self, send_notification):
        """Sets the send_notification of this MyOrdersSellingIdShipPostRequest.

        Should we send an email notification to the buyer

        :param send_notification: The send_notification of this MyOrdersSellingIdShipPostRequest.
        :type send_notification: bool
        """
        if send_notification is None:
            raise ValueError("Invalid value for `send_notification`, must not be `None`")

        self._send_notification = send_notification

    @property
    def tracking_number(self):
        """Gets the tracking_number of this MyOrdersSellingIdShipPostRequest.

        Tracking number provided by the shipping provider

        :return: The tracking_number of this MyOrdersSellingIdShipPostRequest.
        :rtype: str
        """
        return self._tracking_number

    @tracking_number.setter
    def tracking_number(self, tracking_number):
        """Sets the tracking_number of this MyOrdersSellingIdShipPostRequest.

        Tracking number provided by the shipping provider

        :param tracking_number: The tracking_number of this MyOrdersSellingIdShipPostRequest.
        :type tracking_number: str
        """
        if tracking_number is None:
            raise ValueError("Invalid value for `tracking_number`, must not be `None`")

        self._tracking_number = tracking_number
