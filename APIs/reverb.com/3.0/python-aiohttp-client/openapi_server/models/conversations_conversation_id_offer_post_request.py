# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.conversations_conversation_id_offer_post_request_offer_items_inner import ConversationsConversationIdOfferPostRequestOfferItemsInner
from openapi_server.models.conversations_conversation_id_offer_post_request_price import ConversationsConversationIdOfferPostRequestPrice
from openapi_server.models.conversations_conversation_id_offer_post_request_shipping_price import ConversationsConversationIdOfferPostRequestShippingPrice
from openapi_server import util


class ConversationsConversationIdOfferPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country_code: str=None, layaway_terms_slug: str=None, message: str=None, offer_items: List[ConversationsConversationIdOfferPostRequestOfferItemsInner]=None, price: ConversationsConversationIdOfferPostRequestPrice=None, quantity: str=None, recipient_id: str=None, region_code: str=None, shipping_price: ConversationsConversationIdOfferPostRequestShippingPrice=None):
        """ConversationsConversationIdOfferPostRequest - a model defined in OpenAPI

        :param country_code: The country_code of this ConversationsConversationIdOfferPostRequest.
        :param layaway_terms_slug: The layaway_terms_slug of this ConversationsConversationIdOfferPostRequest.
        :param message: The message of this ConversationsConversationIdOfferPostRequest.
        :param offer_items: The offer_items of this ConversationsConversationIdOfferPostRequest.
        :param price: The price of this ConversationsConversationIdOfferPostRequest.
        :param quantity: The quantity of this ConversationsConversationIdOfferPostRequest.
        :param recipient_id: The recipient_id of this ConversationsConversationIdOfferPostRequest.
        :param region_code: The region_code of this ConversationsConversationIdOfferPostRequest.
        :param shipping_price: The shipping_price of this ConversationsConversationIdOfferPostRequest.
        """
        self.openapi_types = {
            'country_code': str,
            'layaway_terms_slug': str,
            'message': str,
            'offer_items': List[ConversationsConversationIdOfferPostRequestOfferItemsInner],
            'price': ConversationsConversationIdOfferPostRequestPrice,
            'quantity': str,
            'recipient_id': str,
            'region_code': str,
            'shipping_price': ConversationsConversationIdOfferPostRequestShippingPrice
        }

        self.attribute_map = {
            'country_code': 'country_code',
            'layaway_terms_slug': 'layaway_terms_slug',
            'message': 'message',
            'offer_items': 'offer_items',
            'price': 'price',
            'quantity': 'quantity',
            'recipient_id': 'recipient_id',
            'region_code': 'region_code',
            'shipping_price': 'shipping_price'
        }

        self._country_code = country_code
        self._layaway_terms_slug = layaway_terms_slug
        self._message = message
        self._offer_items = offer_items
        self._price = price
        self._quantity = quantity
        self._recipient_id = recipient_id
        self._region_code = region_code
        self._shipping_price = shipping_price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConversationsConversationIdOfferPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _conversations__conversation_id__offer_post_request of this ConversationsConversationIdOfferPostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country_code(self):
        """Gets the country_code of this ConversationsConversationIdOfferPostRequest.


        :return: The country_code of this ConversationsConversationIdOfferPostRequest.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this ConversationsConversationIdOfferPostRequest.


        :param country_code: The country_code of this ConversationsConversationIdOfferPostRequest.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def layaway_terms_slug(self):
        """Gets the layaway_terms_slug of this ConversationsConversationIdOfferPostRequest.


        :return: The layaway_terms_slug of this ConversationsConversationIdOfferPostRequest.
        :rtype: str
        """
        return self._layaway_terms_slug

    @layaway_terms_slug.setter
    def layaway_terms_slug(self, layaway_terms_slug):
        """Sets the layaway_terms_slug of this ConversationsConversationIdOfferPostRequest.


        :param layaway_terms_slug: The layaway_terms_slug of this ConversationsConversationIdOfferPostRequest.
        :type layaway_terms_slug: str
        """

        self._layaway_terms_slug = layaway_terms_slug

    @property
    def message(self):
        """Gets the message of this ConversationsConversationIdOfferPostRequest.

        Message to include with counter offer

        :return: The message of this ConversationsConversationIdOfferPostRequest.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this ConversationsConversationIdOfferPostRequest.

        Message to include with counter offer

        :param message: The message of this ConversationsConversationIdOfferPostRequest.
        :type message: str
        """

        self._message = message

    @property
    def offer_items(self):
        """Gets the offer_items of this ConversationsConversationIdOfferPostRequest.


        :return: The offer_items of this ConversationsConversationIdOfferPostRequest.
        :rtype: List[ConversationsConversationIdOfferPostRequestOfferItemsInner]
        """
        return self._offer_items

    @offer_items.setter
    def offer_items(self, offer_items):
        """Sets the offer_items of this ConversationsConversationIdOfferPostRequest.


        :param offer_items: The offer_items of this ConversationsConversationIdOfferPostRequest.
        :type offer_items: List[ConversationsConversationIdOfferPostRequestOfferItemsInner]
        """

        self._offer_items = offer_items

    @property
    def price(self):
        """Gets the price of this ConversationsConversationIdOfferPostRequest.


        :return: The price of this ConversationsConversationIdOfferPostRequest.
        :rtype: ConversationsConversationIdOfferPostRequestPrice
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this ConversationsConversationIdOfferPostRequest.


        :param price: The price of this ConversationsConversationIdOfferPostRequest.
        :type price: ConversationsConversationIdOfferPostRequestPrice
        """

        self._price = price

    @property
    def quantity(self):
        """Gets the quantity of this ConversationsConversationIdOfferPostRequest.


        :return: The quantity of this ConversationsConversationIdOfferPostRequest.
        :rtype: str
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this ConversationsConversationIdOfferPostRequest.


        :param quantity: The quantity of this ConversationsConversationIdOfferPostRequest.
        :type quantity: str
        """

        self._quantity = quantity

    @property
    def recipient_id(self):
        """Gets the recipient_id of this ConversationsConversationIdOfferPostRequest.

        ID of the recipient of the offer. Required if you are the seller pushing an offer to a buyer.

        :return: The recipient_id of this ConversationsConversationIdOfferPostRequest.
        :rtype: str
        """
        return self._recipient_id

    @recipient_id.setter
    def recipient_id(self, recipient_id):
        """Sets the recipient_id of this ConversationsConversationIdOfferPostRequest.

        ID of the recipient of the offer. Required if you are the seller pushing an offer to a buyer.

        :param recipient_id: The recipient_id of this ConversationsConversationIdOfferPostRequest.
        :type recipient_id: str
        """

        self._recipient_id = recipient_id

    @property
    def region_code(self):
        """Gets the region_code of this ConversationsConversationIdOfferPostRequest.


        :return: The region_code of this ConversationsConversationIdOfferPostRequest.
        :rtype: str
        """
        return self._region_code

    @region_code.setter
    def region_code(self, region_code):
        """Sets the region_code of this ConversationsConversationIdOfferPostRequest.


        :param region_code: The region_code of this ConversationsConversationIdOfferPostRequest.
        :type region_code: str
        """

        self._region_code = region_code

    @property
    def shipping_price(self):
        """Gets the shipping_price of this ConversationsConversationIdOfferPostRequest.


        :return: The shipping_price of this ConversationsConversationIdOfferPostRequest.
        :rtype: ConversationsConversationIdOfferPostRequestShippingPrice
        """
        return self._shipping_price

    @shipping_price.setter
    def shipping_price(self, shipping_price):
        """Sets the shipping_price of this ConversationsConversationIdOfferPostRequest.


        :param shipping_price: The shipping_price of this ConversationsConversationIdOfferPostRequest.
        :type shipping_price: ConversationsConversationIdOfferPostRequestShippingPrice
        """

        self._shipping_price = shipping_price
