# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data: object=None, error: str=None, errors: object=None, message: str=None, path: str=None, status: int=None, timestamp: int=None):
        """ApiResponse - a model defined in OpenAPI

        :param data: The data of this ApiResponse.
        :param error: The error of this ApiResponse.
        :param errors: The errors of this ApiResponse.
        :param message: The message of this ApiResponse.
        :param path: The path of this ApiResponse.
        :param status: The status of this ApiResponse.
        :param timestamp: The timestamp of this ApiResponse.
        """
        self.openapi_types = {
            'data': object,
            'error': str,
            'errors': object,
            'message': str,
            'path': str,
            'status': int,
            'timestamp': int
        }

        self.attribute_map = {
            'data': 'data',
            'error': 'error',
            'errors': 'errors',
            'message': 'message',
            'path': 'path',
            'status': 'status',
            'timestamp': 'timestamp'
        }

        self._data = data
        self._error = error
        self._errors = errors
        self._message = message
        self._path = path
        self._status = status
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApiResponse of this ApiResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self):
        """Gets the data of this ApiResponse.


        :return: The data of this ApiResponse.
        :rtype: object
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this ApiResponse.


        :param data: The data of this ApiResponse.
        :type data: object
        """

        self._data = data

    @property
    def error(self):
        """Gets the error of this ApiResponse.


        :return: The error of this ApiResponse.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this ApiResponse.


        :param error: The error of this ApiResponse.
        :type error: str
        """

        self._error = error

    @property
    def errors(self):
        """Gets the errors of this ApiResponse.


        :return: The errors of this ApiResponse.
        :rtype: object
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this ApiResponse.


        :param errors: The errors of this ApiResponse.
        :type errors: object
        """

        self._errors = errors

    @property
    def message(self):
        """Gets the message of this ApiResponse.


        :return: The message of this ApiResponse.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this ApiResponse.


        :param message: The message of this ApiResponse.
        :type message: str
        """

        self._message = message

    @property
    def path(self):
        """Gets the path of this ApiResponse.


        :return: The path of this ApiResponse.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this ApiResponse.


        :param path: The path of this ApiResponse.
        :type path: str
        """

        self._path = path

    @property
    def status(self):
        """Gets the status of this ApiResponse.


        :return: The status of this ApiResponse.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ApiResponse.


        :param status: The status of this ApiResponse.
        :type status: int
        """

        self._status = status

    @property
    def timestamp(self):
        """Gets the timestamp of this ApiResponse.


        :return: The timestamp of this ApiResponse.
        :rtype: int
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this ApiResponse.


        :param timestamp: The timestamp of this ApiResponse.
        :type timestamp: int
        """

        self._timestamp = timestamp
