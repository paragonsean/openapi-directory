# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.provider import Provider
from openapi_server import util


class GetProviders200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, providers: List[Provider]=None, total_entries: int=None):
        """GetProviders200Response - a model defined in OpenAPI

        :param providers: The providers of this GetProviders200Response.
        :param total_entries: The total_entries of this GetProviders200Response.
        """
        self.openapi_types = {
            'providers': List[Provider],
            'total_entries': int
        }

        self.attribute_map = {
            'providers': 'providers',
            'total_entries': 'total_entries'
        }

        self._providers = providers
        self._total_entries = total_entries

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetProviders200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The get_providers_200_response of this GetProviders200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def providers(self):
        """Gets the providers of this GetProviders200Response.


        :return: The providers of this GetProviders200Response.
        :rtype: List[Provider]
        """
        return self._providers

    @providers.setter
    def providers(self, providers):
        """Sets the providers of this GetProviders200Response.


        :param providers: The providers of this GetProviders200Response.
        :type providers: List[Provider]
        """

        self._providers = providers

    @property
    def total_entries(self):
        """Gets the total_entries of this GetProviders200Response.

        Count of total objects in the current result set before pagination parameters (limit, offset) are applied. 

        :return: The total_entries of this GetProviders200Response.
        :rtype: int
        """
        return self._total_entries

    @total_entries.setter
    def total_entries(self, total_entries):
        """Sets the total_entries of this GetProviders200Response.

        Count of total objects in the current result set before pagination parameters (limit, offset) are applied. 

        :param total_entries: The total_entries of this GetProviders200Response.
        :type total_entries: int
        """

        self._total_entries = total_entries
