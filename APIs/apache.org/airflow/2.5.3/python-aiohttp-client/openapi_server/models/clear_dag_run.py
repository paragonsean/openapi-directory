# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClearDagRun(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dry_run: bool=True):
        """ClearDagRun - a model defined in OpenAPI

        :param dry_run: The dry_run of this ClearDagRun.
        """
        self.openapi_types = {
            'dry_run': bool
        }

        self.attribute_map = {
            'dry_run': 'dry_run'
        }

        self._dry_run = dry_run

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClearDagRun':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClearDagRun of this ClearDagRun.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dry_run(self):
        """Gets the dry_run of this ClearDagRun.

        If set, don't actually run this operation. The response will contain a list of task instances planned to be cleaned, but not modified in any way. 

        :return: The dry_run of this ClearDagRun.
        :rtype: bool
        """
        return self._dry_run

    @dry_run.setter
    def dry_run(self, dry_run):
        """Sets the dry_run of this ClearDagRun.

        If set, don't actually run this operation. The response will contain a list of task instances planned to be cleaned, but not modified in any way. 

        :param dry_run: The dry_run of this ClearDagRun.
        :type dry_run: bool
        """

        self._dry_run = dry_run
