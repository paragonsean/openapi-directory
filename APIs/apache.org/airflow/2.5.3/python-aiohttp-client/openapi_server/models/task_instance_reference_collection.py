# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.task_instance_reference import TaskInstanceReference
from openapi_server import util


class TaskInstanceReferenceCollection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, task_instances: List[TaskInstanceReference]=None):
        """TaskInstanceReferenceCollection - a model defined in OpenAPI

        :param task_instances: The task_instances of this TaskInstanceReferenceCollection.
        """
        self.openapi_types = {
            'task_instances': List[TaskInstanceReference]
        }

        self.attribute_map = {
            'task_instances': 'task_instances'
        }

        self._task_instances = task_instances

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskInstanceReferenceCollection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TaskInstanceReferenceCollection of this TaskInstanceReferenceCollection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def task_instances(self):
        """Gets the task_instances of this TaskInstanceReferenceCollection.


        :return: The task_instances of this TaskInstanceReferenceCollection.
        :rtype: List[TaskInstanceReference]
        """
        return self._task_instances

    @task_instances.setter
    def task_instances(self, task_instances):
        """Sets the task_instances of this TaskInstanceReferenceCollection.


        :param task_instances: The task_instances of this TaskInstanceReferenceCollection.
        :type task_instances: List[TaskInstanceReference]
        """

        self._task_instances = task_instances
