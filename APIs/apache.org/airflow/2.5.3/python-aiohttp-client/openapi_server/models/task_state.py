# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TaskState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    SUCCESS = 'success'
    RUNNING = 'running'
    FAILED = 'failed'
    UPSTREAM_FAILED = 'upstream_failed'
    SKIPPED = 'skipped'
    UP_FOR_RETRY = 'up_for_retry'
    UP_FOR_RESCHEDULE = 'up_for_reschedule'
    QUEUED = 'queued'
    NONE = 'none'
    SCHEDULED = 'scheduled'
    DEFERRED = 'deferred'
    REMOVED = 'removed'
    RESTARTING = 'restarting'

    def __init__(self):
        """TaskState - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TaskState of this TaskState.
        """
        return util.deserialize_model(dikt, cls)
