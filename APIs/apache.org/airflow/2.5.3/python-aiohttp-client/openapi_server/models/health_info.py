# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.metadatabase_status import MetadatabaseStatus
from openapi_server.models.scheduler_status import SchedulerStatus
from openapi_server import util


class HealthInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metadatabase: MetadatabaseStatus=None, scheduler: SchedulerStatus=None):
        """HealthInfo - a model defined in OpenAPI

        :param metadatabase: The metadatabase of this HealthInfo.
        :param scheduler: The scheduler of this HealthInfo.
        """
        self.openapi_types = {
            'metadatabase': MetadatabaseStatus,
            'scheduler': SchedulerStatus
        }

        self.attribute_map = {
            'metadatabase': 'metadatabase',
            'scheduler': 'scheduler'
        }

        self._metadatabase = metadatabase
        self._scheduler = scheduler

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HealthInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HealthInfo of this HealthInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metadatabase(self):
        """Gets the metadatabase of this HealthInfo.


        :return: The metadatabase of this HealthInfo.
        :rtype: MetadatabaseStatus
        """
        return self._metadatabase

    @metadatabase.setter
    def metadatabase(self, metadatabase):
        """Sets the metadatabase of this HealthInfo.


        :param metadatabase: The metadatabase of this HealthInfo.
        :type metadatabase: MetadatabaseStatus
        """

        self._metadatabase = metadatabase

    @property
    def scheduler(self):
        """Gets the scheduler of this HealthInfo.


        :return: The scheduler of this HealthInfo.
        :rtype: SchedulerStatus
        """
        return self._scheduler

    @scheduler.setter
    def scheduler(self, scheduler):
        """Sets the scheduler of this HealthInfo.


        :param scheduler: The scheduler of this HealthInfo.
        :type scheduler: SchedulerStatus
        """

        self._scheduler = scheduler
