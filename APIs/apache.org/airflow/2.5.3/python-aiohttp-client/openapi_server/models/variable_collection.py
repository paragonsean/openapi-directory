# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.variable_collection_item import VariableCollectionItem
from openapi_server import util


class VariableCollection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, total_entries: int=None, variables: List[VariableCollectionItem]=None):
        """VariableCollection - a model defined in OpenAPI

        :param total_entries: The total_entries of this VariableCollection.
        :param variables: The variables of this VariableCollection.
        """
        self.openapi_types = {
            'total_entries': int,
            'variables': List[VariableCollectionItem]
        }

        self.attribute_map = {
            'total_entries': 'total_entries',
            'variables': 'variables'
        }

        self._total_entries = total_entries
        self._variables = variables

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VariableCollection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VariableCollection of this VariableCollection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total_entries(self):
        """Gets the total_entries of this VariableCollection.

        Count of total objects in the current result set before pagination parameters (limit, offset) are applied. 

        :return: The total_entries of this VariableCollection.
        :rtype: int
        """
        return self._total_entries

    @total_entries.setter
    def total_entries(self, total_entries):
        """Sets the total_entries of this VariableCollection.

        Count of total objects in the current result set before pagination parameters (limit, offset) are applied. 

        :param total_entries: The total_entries of this VariableCollection.
        :type total_entries: int
        """

        self._total_entries = total_entries

    @property
    def variables(self):
        """Gets the variables of this VariableCollection.


        :return: The variables of this VariableCollection.
        :rtype: List[VariableCollectionItem]
        """
        return self._variables

    @variables.setter
    def variables(self, variables):
        """Sets the variables of this VariableCollection.


        :param variables: The variables of this VariableCollection.
        :type variables: List[VariableCollectionItem]
        """

        self._variables = variables
