# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.config_section import ConfigSection
from openapi_server import util


class Config(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sections: List[ConfigSection]=None):
        """Config - a model defined in OpenAPI

        :param sections: The sections of this Config.
        """
        self.openapi_types = {
            'sections': List[ConfigSection]
        }

        self.attribute_map = {
            'sections': 'sections'
        }

        self._sections = sections

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Config':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Config of this Config.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sections(self):
        """Gets the sections of this Config.


        :return: The sections of this Config.
        :rtype: List[ConfigSection]
        """
        return self._sections

    @sections.setter
    def sections(self, sections):
        """Sets the sections of this Config.


        :param sections: The sections of this Config.
        :type sections: List[ConfigSection]
        """

        self._sections = sections
