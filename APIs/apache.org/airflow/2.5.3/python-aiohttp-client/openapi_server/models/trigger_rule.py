# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TriggerRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ALL_SUCCESS = 'all_success'
    ALL_FAILED = 'all_failed'
    ALL_DONE = 'all_done'
    ONE_SUCCESS = 'one_success'
    ONE_FAILED = 'one_failed'
    NONE_FAILED = 'none_failed'
    NONE_SKIPPED = 'none_skipped'
    NONE_FAILED_OR_SKIPPED = 'none_failed_or_skipped'
    NONE_FAILED_MIN_ONE_SUCCESS = 'none_failed_min_one_success'
    DUMMY = 'dummy'

    def __init__(self):
        """TriggerRule - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TriggerRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TriggerRule of this TriggerRule.
        """
        return util.deserialize_model(dikt, cls)
