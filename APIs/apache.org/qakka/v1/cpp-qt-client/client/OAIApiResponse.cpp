/**
 * Qakka
 * API for Qakka Queue System
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApiResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApiResponse::OAIApiResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApiResponse::OAIApiResponse() {
    this->initializeModel();
}

OAIApiResponse::~OAIApiResponse() {}

void OAIApiResponse::initializeModel() {

    m_count_isSet = false;
    m_count_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_queue_messages_isSet = false;
    m_queue_messages_isValid = false;

    m_queues_isSet = false;
    m_queues_isValid = false;
}

void OAIApiResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApiResponse::fromJsonObject(QJsonObject json) {

    m_count_isValid = ::OpenAPI::fromJsonValue(m_count, json[QString("count")]);
    m_count_isSet = !json[QString("count")].isNull() && m_count_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_queue_messages_isValid = ::OpenAPI::fromJsonValue(m_queue_messages, json[QString("queueMessages")]);
    m_queue_messages_isSet = !json[QString("queueMessages")].isNull() && m_queue_messages_isValid;

    m_queues_isValid = ::OpenAPI::fromJsonValue(m_queues, json[QString("queues")]);
    m_queues_isSet = !json[QString("queues")].isNull() && m_queues_isValid;
}

QString OAIApiResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApiResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_count_isSet) {
        obj.insert(QString("count"), ::OpenAPI::toJsonValue(m_count));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_queue_messages.size() > 0) {
        obj.insert(QString("queueMessages"), ::OpenAPI::toJsonValue(m_queue_messages));
    }
    if (m_queues.size() > 0) {
        obj.insert(QString("queues"), ::OpenAPI::toJsonValue(m_queues));
    }
    return obj;
}

qint32 OAIApiResponse::getCount() const {
    return m_count;
}
void OAIApiResponse::setCount(const qint32 &count) {
    m_count = count;
    m_count_isSet = true;
}

bool OAIApiResponse::is_count_Set() const{
    return m_count_isSet;
}

bool OAIApiResponse::is_count_Valid() const{
    return m_count_isValid;
}

QString OAIApiResponse::getMessage() const {
    return m_message;
}
void OAIApiResponse::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIApiResponse::is_message_Set() const{
    return m_message_isSet;
}

bool OAIApiResponse::is_message_Valid() const{
    return m_message_isValid;
}

QList<OAIQueueMessage> OAIApiResponse::getQueueMessages() const {
    return m_queue_messages;
}
void OAIApiResponse::setQueueMessages(const QList<OAIQueueMessage> &queue_messages) {
    m_queue_messages = queue_messages;
    m_queue_messages_isSet = true;
}

bool OAIApiResponse::is_queue_messages_Set() const{
    return m_queue_messages_isSet;
}

bool OAIApiResponse::is_queue_messages_Valid() const{
    return m_queue_messages_isValid;
}

QList<OAIQueue> OAIApiResponse::getQueues() const {
    return m_queues;
}
void OAIApiResponse::setQueues(const QList<OAIQueue> &queues) {
    m_queues = queues;
    m_queues_isSet = true;
}

bool OAIApiResponse::is_queues_Set() const{
    return m_queues_isSet;
}

bool OAIApiResponse::is_queues_Valid() const{
    return m_queues_isValid;
}

bool OAIApiResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_queue_messages.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_queues.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApiResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
