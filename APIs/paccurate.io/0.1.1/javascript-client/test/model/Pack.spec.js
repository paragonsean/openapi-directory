/**
 * paccurate.io
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PaccurateIo);
  }
}(this, function(expect, PaccurateIo) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PaccurateIo.Pack();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Pack', function() {
    it('should create an instance of Pack', function() {
      // uncomment below and update the code to test Pack
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be.a(PaccurateIo.Pack);
    });

    it('should have the property allowableOverhang (base name: "allowableOverhang")', function() {
      // uncomment below and update the code to test the property allowableOverhang
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property boxTypeSets (base name: "boxTypeSets")', function() {
      // uncomment below and update the code to test the property boxTypeSets
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property boxTypes (base name: "boxTypes")', function() {
      // uncomment below and update the code to test the property boxTypes
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property cohortMax (base name: "cohortMax")', function() {
      // uncomment below and update the code to test the property cohortMax
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property cohortPacking (base name: "cohortPacking")', function() {
      // uncomment below and update the code to test the property cohortPacking
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property coordOrder (base name: "coordOrder")', function() {
      // uncomment below and update the code to test the property coordOrder
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property corners (base name: "corners")', function() {
      // uncomment below and update the code to test the property corners
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property eye (base name: "eye")', function() {
      // uncomment below and update the code to test the property eye
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property imgSize (base name: "imgSize")', function() {
      // uncomment below and update the code to test the property imgSize
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property includeImages (base name: "includeImages")', function() {
      // uncomment below and update the code to test the property includeImages
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property includeScripts (base name: "includeScripts")', function() {
      // uncomment below and update the code to test the property includeScripts
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property interlock (base name: "interlock")', function() {
      // uncomment below and update the code to test the property interlock
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property itemSets (base name: "itemSets")', function() {
      // uncomment below and update the code to test the property itemSets
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property key (base name: "key")', function() {
      // uncomment below and update the code to test the property key
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property layFlat (base name: "layFlat")', function() {
      // uncomment below and update the code to test the property layFlat
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property maxSequenceDistance (base name: "maxSequenceDistance")', function() {
      // uncomment below and update the code to test the property maxSequenceDistance
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property n (base name: "n")', function() {
      // uncomment below and update the code to test the property n
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property packOrigin (base name: "packOrigin")', function() {
      // uncomment below and update the code to test the property packOrigin
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property placementStyle (base name: "placementStyle")', function() {
      // uncomment below and update the code to test the property placementStyle
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property random (base name: "random")', function() {
      // uncomment below and update the code to test the property random
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property randomMaxDimension (base name: "randomMaxDimension")', function() {
      // uncomment below and update the code to test the property randomMaxDimension
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property randomMaxWeight (base name: "randomMaxWeight")', function() {
      // uncomment below and update the code to test the property randomMaxWeight
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property rules (base name: "rules")', function() {
      // uncomment below and update the code to test the property rules
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property seed (base name: "seed")', function() {
      // uncomment below and update the code to test the property seed
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property sequenceHeatMap (base name: "sequenceHeatMap")', function() {
      // uncomment below and update the code to test the property sequenceHeatMap
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property sequenceSort (base name: "sequenceSort")', function() {
      // uncomment below and update the code to test the property sequenceSort
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property template (base name: "template")', function() {
      // uncomment below and update the code to test the property template
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property usableSpace (base name: "usableSpace")', function() {
      // uncomment below and update the code to test the property usableSpace
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

    it('should have the property zone (base name: "zone")', function() {
      // uncomment below and update the code to test the property zone
      //var instance = new PaccurateIo.Pack();
      //expect(instance).to.be();
    });

  });

}));
