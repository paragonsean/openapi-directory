/*
 * paccurate.io
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Item;
import org.openapitools.client.model.Point;
import org.openapitools.client.model.RateTable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Box
 */
public class BoxTest {
    private final Box model = new Box();

    /**
     * Model tests for Box
     */
    @Test
    public void testBox() {
        // TODO: test Box
    }

    /**
     * Test the property 'dimensions'
     */
    @Test
    public void dimensionsTest() {
        // TODO: test dimensions
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'price'
     */
    @Test
    public void priceTest() {
        // TODO: test price
    }

    /**
     * Test the property 'rateTable'
     */
    @Test
    public void rateTableTest() {
        // TODO: test rateTable
    }

    /**
     * Test the property 'weightMax'
     */
    @Test
    public void weightMaxTest() {
        // TODO: test weightMax
    }

    /**
     * Test the property 'weightTare'
     */
    @Test
    public void weightTareTest() {
        // TODO: test weightTare
    }

    /**
     * Test the property 'dimensionalWeight'
     */
    @Test
    public void dimensionalWeightTest() {
        // TODO: test dimensionalWeight
    }

    /**
     * Test the property 'dimensionalWeightUsed'
     */
    @Test
    public void dimensionalWeightUsedTest() {
        // TODO: test dimensionalWeightUsed
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'items'
     */
    @Test
    public void itemsTest() {
        // TODO: test items
    }

    /**
     * Test the property 'svg'
     */
    @Test
    public void svgTest() {
        // TODO: test svg
    }

    /**
     * Test the property 'volumeMax'
     */
    @Test
    public void volumeMaxTest() {
        // TODO: test volumeMax
    }

    /**
     * Test the property 'volumeRemaining'
     */
    @Test
    public void volumeRemainingTest() {
        // TODO: test volumeRemaining
    }

    /**
     * Test the property 'volumeUsed'
     */
    @Test
    public void volumeUsedTest() {
        // TODO: test volumeUsed
    }

    /**
     * Test the property 'volumeUtilization'
     */
    @Test
    public void volumeUtilizationTest() {
        // TODO: test volumeUtilization
    }

    /**
     * Test the property 'weightNet'
     */
    @Test
    public void weightNetTest() {
        // TODO: test weightNet
    }

    /**
     * Test the property 'weightRemaining'
     */
    @Test
    public void weightRemainingTest() {
        // TODO: test weightRemaining
    }

    /**
     * Test the property 'weightUsed'
     */
    @Test
    public void weightUsedTest() {
        // TODO: test weightUsed
    }

    /**
     * Test the property 'weightUtilization'
     */
    @Test
    public void weightUtilizationTest() {
        // TODO: test weightUtilization
    }

}
