/**
 * paccurate.io
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBoxTypeSet.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBoxTypeSet::OAIBoxTypeSet(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBoxTypeSet::OAIBoxTypeSet() {
    this->initializeModel();
}

OAIBoxTypeSet::~OAIBoxTypeSet() {}

void OAIBoxTypeSet::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIBoxTypeSet::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIBoxTypeSet::fromJson(QString jsonString) {
    
    if ( jsonString.compare("usps", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBoxTypeSet::USPS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("fedex", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBoxTypeSet::FEDEX;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pallet", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBoxTypeSet::PALLET;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("customer", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBoxTypeSet::CUSTOMER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIBoxTypeSet::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIBoxTypeSet::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIBoxTypeSet::USPS:
            val = "usps";
            break;
        case eOAIBoxTypeSet::FEDEX:
            val = "fedex";
            break;
        case eOAIBoxTypeSet::PALLET:
            val = "pallet";
            break;
        case eOAIBoxTypeSet::CUSTOMER:
            val = "customer";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIBoxTypeSet::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIBoxTypeSet::eOAIBoxTypeSet OAIBoxTypeSet::getValue() const {
    return m_value;
}

void OAIBoxTypeSet::setValue(const OAIBoxTypeSet::eOAIBoxTypeSet& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIBoxTypeSet::isSet() const {
    
    return m_value_isSet;
}

bool OAIBoxTypeSet::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
