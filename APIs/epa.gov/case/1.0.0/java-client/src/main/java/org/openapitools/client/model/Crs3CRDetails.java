/*
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Enforcement Case Search
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  CASE Rest Services provide multiple service endpoints, each with specific capabilities, to search and retrieve data on civil cases entered into the  Integrated Compliance Information System (ICIS) and criminal cases entered into the Summary of Criminal Prosecutions database.   See Enforcement Case Search Help (https://echo.epa.gov/help/enforcement-case-search-help) for additional information on searching civil and criminal cases.  \\ The get_cases, get_map, get_qid, and get_download end points are meant to be used together, while the enhanced get_case_info end point is self contained..    The recommended use scenario for get_cases, get_qid, get_map, and get_downoad is: \\  <b>1)</b>  Use get_cases to validate passed query parameters, obtain summary statistics and to obtain a query_id (QID).  QIDs are time sensitive and will be valid for approximately 30 minutes.  <b>2)</b>  Use get_qid, with the returned QID, to paginate through arrays of case results.  <b>3)</b>  Use get_map, with the returned QID, to zoom in/out and pan on the clustered and individual facility coordinates, related to the returned cases, that meet the QID query criteria.  <b>4)</b>  Use get_download, with the returned QID, to generate a Comma Separated Value (CSV) file of facility information that meets the QID query criteria. \\ In addition to the service endpoints listed above there are two detailed case report services, one for civil cases (get_case_report) and one for criminal cases (get_crcase_report).  See the Civil Enforcement Case Report Help (https://echo.epa.gov/help/reports/enforcement-case-report-help) and the Criminal Case Report Help (https://echo.epa.gov/help/reports/criminal-case-report-help) for additional information  on then data returned from these two services.    \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A list of the violation(s), environmental problem(s), and a description of the cause of action organized by date of occurrence. The case details walk through each step of the case activities and displayed the date on which each occurred.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:30:29.206417-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Crs3CRDetails {
  public static final String SERIALIZED_NAME_DETAIL_CITATIONS = "DetailCitations";
  @SerializedName(SERIALIZED_NAME_DETAIL_CITATIONS)
  private String detailCitations;

  public static final String SERIALIZED_NAME_DETAIL_DATE = "DetailDate";
  @SerializedName(SERIALIZED_NAME_DETAIL_DATE)
  private String detailDate;

  public static final String SERIALIZED_NAME_DETAIL_DESC = "DetailDesc";
  @SerializedName(SERIALIZED_NAME_DETAIL_DESC)
  private String detailDesc;

  public Crs3CRDetails() {
  }

  public Crs3CRDetails detailCitations(String detailCitations) {
    this.detailCitations = detailCitations;
    return this;
  }

  /**
   * The corresponding regulation in the Code of Federal Regulations (CFR) or U.S. Code (U.S.C.) associated with the enforcement action case detail.
   * @return detailCitations
   */
  @javax.annotation.Nonnull
  public String getDetailCitations() {
    return detailCitations;
  }

  public void setDetailCitations(String detailCitations) {
    this.detailCitations = detailCitations;
  }


  public Crs3CRDetails detailDate(String detailDate) {
    this.detailDate = detailDate;
    return this;
  }

  /**
   * The date associated with an enforcement action case detail.
   * @return detailDate
   */
  @javax.annotation.Nonnull
  public String getDetailDate() {
    return detailDate;
  }

  public void setDetailDate(String detailDate) {
    this.detailDate = detailDate;
  }


  public Crs3CRDetails detailDesc(String detailDesc) {
    this.detailDesc = detailDesc;
    return this;
  }

  /**
   * The description of an enforcement action case detail.
   * @return detailDesc
   */
  @javax.annotation.Nonnull
  public String getDetailDesc() {
    return detailDesc;
  }

  public void setDetailDesc(String detailDesc) {
    this.detailDesc = detailDesc;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Crs3CRDetails crs3CRDetails = (Crs3CRDetails) o;
    return Objects.equals(this.detailCitations, crs3CRDetails.detailCitations) &&
        Objects.equals(this.detailDate, crs3CRDetails.detailDate) &&
        Objects.equals(this.detailDesc, crs3CRDetails.detailDesc);
  }

  @Override
  public int hashCode() {
    return Objects.hash(detailCitations, detailDate, detailDesc);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Crs3CRDetails {\n");
    sb.append("    detailCitations: ").append(toIndentedString(detailCitations)).append("\n");
    sb.append("    detailDate: ").append(toIndentedString(detailDate)).append("\n");
    sb.append("    detailDesc: ").append(toIndentedString(detailDesc)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DetailCitations");
    openapiFields.add("DetailDate");
    openapiFields.add("DetailDesc");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("DetailCitations");
    openapiRequiredFields.add("DetailDate");
    openapiRequiredFields.add("DetailDesc");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Crs3CRDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Crs3CRDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Crs3CRDetails is not found in the empty JSON string", Crs3CRDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Crs3CRDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Crs3CRDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Crs3CRDetails.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("DetailCitations").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DetailCitations` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DetailCitations").toString()));
      }
      if (!jsonObj.get("DetailDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DetailDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DetailDate").toString()));
      }
      if (!jsonObj.get("DetailDesc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DetailDesc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DetailDesc").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Crs3CRDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Crs3CRDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Crs3CRDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Crs3CRDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<Crs3CRDetails>() {
           @Override
           public void write(JsonWriter out, Crs3CRDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Crs3CRDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Crs3CRDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Crs3CRDetails
   * @throws IOException if the JSON string is invalid with respect to Crs3CRDetails
   */
  public static Crs3CRDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Crs3CRDetails.class);
  }

  /**
   * Convert an instance of Crs3CRDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

