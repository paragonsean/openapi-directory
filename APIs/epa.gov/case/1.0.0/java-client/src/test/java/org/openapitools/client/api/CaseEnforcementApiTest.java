/*
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Enforcement Case Search
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  CASE Rest Services provide multiple service endpoints, each with specific capabilities, to search and retrieve data on civil cases entered into the  Integrated Compliance Information System (ICIS) and criminal cases entered into the Summary of Criminal Prosecutions database.   See Enforcement Case Search Help (https://echo.epa.gov/help/enforcement-case-search-help) for additional information on searching civil and criminal cases.  \\ The get_cases, get_map, get_qid, and get_download end points are meant to be used together, while the enhanced get_case_info end point is self contained..    The recommended use scenario for get_cases, get_qid, get_map, and get_downoad is: \\  <b>1)</b>  Use get_cases to validate passed query parameters, obtain summary statistics and to obtain a query_id (QID).  QIDs are time sensitive and will be valid for approximately 30 minutes.  <b>2)</b>  Use get_qid, with the returned QID, to paginate through arrays of case results.  <b>3)</b>  Use get_map, with the returned QID, to zoom in/out and pan on the clustered and individual facility coordinates, related to the returned cases, that meet the QID query criteria.  <b>4)</b>  Use get_download, with the returned QID, to generate a Comma Separated Value (CSV) file of facility information that meets the QID query criteria. \\ In addition to the service endpoints listed above there are two detailed case report services, one for civil cases (get_case_report) and one for criminal cases (get_crcase_report).  See the Civil Enforcement Case Report Help (https://echo.epa.gov/help/reports/enforcement-case-report-help) and the Criminal Case Report Help (https://echo.epa.gov/help/reports/criminal-case-report-help) for additional information  on then data returned from these two services.    \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.math.BigDecimal;
import org.openapitools.client.model.CaseRestServicesGetCaseInfoGet200Response;
import org.openapitools.client.model.CaseRestServicesGetCaseReportGet200Response;
import org.openapitools.client.model.CaseRestServicesGetCasesFromFacilityGet200Response;
import org.openapitools.client.model.CaseRestServicesGetCasesGet200Response;
import org.openapitools.client.model.CaseRestServicesGetCrcaseReportGet200Response;
import org.openapitools.client.model.CaseRestServicesGetFacilitiesFromCaseGet200Response;
import org.openapitools.client.model.CaseRestServicesGetMapGet200Response;
import org.openapitools.client.model.CaseRestServicesGetQidGet200Response;
import java.io.File;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CaseEnforcementApi
 */
@Disabled
public class CaseEnforcementApiTest {

    private final CaseEnforcementApi api = new CaseEnforcementApi();

    /**
     * Enforcement Case Search (new version)
     *
     * The get_case_info service end point searches for civil enforcement and criminal cases based on the provided selection criteria and returns either individual cases or clusters of case facility locations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void caseRestServicesGetCaseInfoGetTest() throws ApiException {
        String output = null;
        String pCaseCategory = null;
        String pCaseStatus = null;
        String pMilestone = null;
        String pFromDate = null;
        String pToDate = null;
        String pMilestoneFy = null;
        String pName = null;
        String pNameType = null;
        String pCaseNumber = null;
        String pDocketNumber = null;
        String pCourtDocketNumber = null;
        String pActivityNumber = null;
        String pCaseLead = null;
        String pCaseSensFlg = null;
        String pRegion = null;
        String pState = null;
        String pDistrict = null;
        String pSic = null;
        String pSicAoNaics = null;
        String pSicPrimaryFlg = null;
        String pSicFrsFlg = null;
        String pNaics = null;
        String pNaicsPrimaryFlg = null;
        String pNaicsFrsFlg = null;
        String pEnfType = null;
        String pLaw = null;
        String pSection = null;
        String pCpCitation = null;
        String pRankOrder = null;
        String pEnfProgram = null;
        String pViolation = null;
        String pPriorityArea = null;
        String pPriorityAreaDesc = null;
        String pTribal = null;
        String pOecaCore = null;
        String pMultimedia = null;
        String pFedCase = null;
        String pActivityContact = null;
        String pRole = null;
        String pFedPenalty = null;
        String pTotalFedPenalty = null;
        String pCostRecovery = null;
        String pTotalCostRecovery = null;
        String pComplyingActions = null;
        String pCompActVal = null;
        String pTotalCompActVal = null;
        String pSepCats = null;
        String pSepVal = null;
        String pTotalSepVal = null;
        String pLodgedDate = null;
        String pEnteredDate = null;
        String pFacilityId = null;
        String pFacCity = null;
        String pFacZip = null;
        String pFacCounty = null;
        String pCaseSummary = null;
        String pCaseSummaryType = null;
        String pUsmex = null;
        BigDecimal pC1lat = null;
        BigDecimal pC1lon = null;
        BigDecimal pC2lat = null;
        BigDecimal pC2lon = null;
        String pVoluntary = null;
        String pFedIndicator = null;
        String pFntype = null;
        String pCivilCriminalIndicator = null;
        BigDecimal queryset = null;
        BigDecimal responseset = null;
        String mapset = null;
        String paramCallback = null;
        String qcolumns = null;
        BigDecimal pPrettyPrint = null;
        String pOcmapFy = null;
        String pQs = null;
        String pHasMap = null;
        CaseRestServicesGetCaseInfoGet200Response response = api.caseRestServicesGetCaseInfoGet(output, pCaseCategory, pCaseStatus, pMilestone, pFromDate, pToDate, pMilestoneFy, pName, pNameType, pCaseNumber, pDocketNumber, pCourtDocketNumber, pActivityNumber, pCaseLead, pCaseSensFlg, pRegion, pState, pDistrict, pSic, pSicAoNaics, pSicPrimaryFlg, pSicFrsFlg, pNaics, pNaicsPrimaryFlg, pNaicsFrsFlg, pEnfType, pLaw, pSection, pCpCitation, pRankOrder, pEnfProgram, pViolation, pPriorityArea, pPriorityAreaDesc, pTribal, pOecaCore, pMultimedia, pFedCase, pActivityContact, pRole, pFedPenalty, pTotalFedPenalty, pCostRecovery, pTotalCostRecovery, pComplyingActions, pCompActVal, pTotalCompActVal, pSepCats, pSepVal, pTotalSepVal, pLodgedDate, pEnteredDate, pFacilityId, pFacCity, pFacZip, pFacCounty, pCaseSummary, pCaseSummaryType, pUsmex, pC1lat, pC1lon, pC2lat, pC2lon, pVoluntary, pFedIndicator, pFntype, pCivilCriminalIndicator, queryset, responseset, mapset, paramCallback, qcolumns, pPrettyPrint, pOcmapFy, pQs, pHasMap);
        // TODO: test validations
    }

    /**
     * Enforcement Case Search (new version)
     *
     * The get_case_info service end point searches for civil enforcement and criminal cases based on the provided selection criteria and returns either individual cases or clusters of case facility locations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void caseRestServicesGetCaseInfoPostTest() throws ApiException {
        String output = null;
        String pCaseCategory = null;
        String pCaseStatus = null;
        String pMilestone = null;
        String pFromDate = null;
        String pToDate = null;
        String pMilestoneFy = null;
        String pName = null;
        String pNameType = null;
        String pCaseNumber = null;
        String pDocketNumber = null;
        String pCourtDocketNumber = null;
        String pActivityNumber = null;
        String pCaseLead = null;
        String pCaseSensFlg = null;
        String pRegion = null;
        String pState = null;
        String pDistrict = null;
        String pSic = null;
        String pSicAoNaics = null;
        String pSicPrimaryFlg = null;
        String pSicFrsFlg = null;
        String pNaics = null;
        String pNaicsPrimaryFlg = null;
        String pNaicsFrsFlg = null;
        String pEnfType = null;
        String pLaw = null;
        String pSection = null;
        String pCpCitation = null;
        String pRankOrder = null;
        String pEnfProgram = null;
        String pViolation = null;
        String pPriorityArea = null;
        String pPriorityAreaDesc = null;
        String pTribal = null;
        String pOecaCore = null;
        String pMultimedia = null;
        String pFedCase = null;
        String pActivityContact = null;
        String pRole = null;
        String pFedPenalty = null;
        String pTotalFedPenalty = null;
        String pCostRecovery = null;
        String pTotalCostRecovery = null;
        String pComplyingActions = null;
        String pCompActVal = null;
        String pTotalCompActVal = null;
        String pSepCats = null;
        String pSepVal = null;
        String pTotalSepVal = null;
        String pLodgedDate = null;
        String pEnteredDate = null;
        String pFacilityId = null;
        String pFacCity = null;
        String pFacZip = null;
        String pFacCounty = null;
        String pCaseSummary = null;
        String pCaseSummaryType = null;
        String pUsmex = null;
        BigDecimal pC1lat = null;
        BigDecimal pC1lon = null;
        BigDecimal pC2lat = null;
        BigDecimal pC2lon = null;
        String pVoluntary = null;
        String pFedIndicator = null;
        String pFntype = null;
        String pCivilCriminalIndicator = null;
        BigDecimal queryset = null;
        BigDecimal responseset = null;
        String mapset = null;
        String paramCallback = null;
        String qcolumns = null;
        BigDecimal pPrettyPrint = null;
        String pOcmapFy = null;
        String pQs = null;
        String pHasMap = null;
        CaseRestServicesGetCaseInfoGet200Response response = api.caseRestServicesGetCaseInfoPost(output, pCaseCategory, pCaseStatus, pMilestone, pFromDate, pToDate, pMilestoneFy, pName, pNameType, pCaseNumber, pDocketNumber, pCourtDocketNumber, pActivityNumber, pCaseLead, pCaseSensFlg, pRegion, pState, pDistrict, pSic, pSicAoNaics, pSicPrimaryFlg, pSicFrsFlg, pNaics, pNaicsPrimaryFlg, pNaicsFrsFlg, pEnfType, pLaw, pSection, pCpCitation, pRankOrder, pEnfProgram, pViolation, pPriorityArea, pPriorityAreaDesc, pTribal, pOecaCore, pMultimedia, pFedCase, pActivityContact, pRole, pFedPenalty, pTotalFedPenalty, pCostRecovery, pTotalCostRecovery, pComplyingActions, pCompActVal, pTotalCompActVal, pSepCats, pSepVal, pTotalSepVal, pLodgedDate, pEnteredDate, pFacilityId, pFacCity, pFacZip, pFacCounty, pCaseSummary, pCaseSummaryType, pUsmex, pC1lat, pC1lon, pC2lat, pC2lon, pVoluntary, pFedIndicator, pFntype, pCivilCriminalIndicator, queryset, responseset, mapset, paramCallback, qcolumns, pPrettyPrint, pOcmapFy, pQs, pHasMap);
        // TODO: test validations
    }

    /**
     * Enforcement Case Summary Report Search
     *
     * The get_case_report service endpoint returns a complex object of civil enforcement case details based on the provided case id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void caseRestServicesGetCaseReportGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        CaseRestServicesGetCaseReportGet200Response response = api.caseRestServicesGetCaseReportGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Enforcement Case Summary Report Search
     *
     * The get_case_report service endpoint returns a complex object of civil enforcement case details based on the provided case id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void caseRestServicesGetCaseReportPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        CaseRestServicesGetCaseReportGet200Response response = api.caseRestServicesGetCaseReportPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Placeholder
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void caseRestServicesGetCasesFromFacilityGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        CaseRestServicesGetCasesFromFacilityGet200Response response = api.caseRestServicesGetCasesFromFacilityGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Placeholder
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void caseRestServicesGetCasesFromFacilityPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        CaseRestServicesGetCasesFromFacilityGet200Response response = api.caseRestServicesGetCasesFromFacilityPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Enforcement Case Search
     *
     * The get_cases service end point searches for civil enforcement and criminal cases based on the provided selection criteria.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void caseRestServicesGetCasesGetTest() throws ApiException {
        String output = null;
        String pCaseCategory = null;
        String pCaseStatus = null;
        String pViolation = null;
        String pMilestone = null;
        String pFromDate = null;
        String pToDate = null;
        String pMilestoneFy = null;
        String pName = null;
        String pNameType = null;
        String pCaseNumber = null;
        String pDocketNumber = null;
        String pCourtDocketNumber = null;
        String pActivityNumber = null;
        String pCaseLead = null;
        String pCaseSensFlg = null;
        String pRegion = null;
        String pState = null;
        String pDistrict = null;
        String pSic = null;
        String pSicAoNaics = null;
        String pSicPrimaryFlg = null;
        String pSicFrsFlg = null;
        String pNaics = null;
        String pNaicsPrimaryFlg = null;
        String pNaicsFrsFlg = null;
        String pEnfType = null;
        String pLaw = null;
        String pSection = null;
        String pCpCitation = null;
        String pRankOrder = null;
        String pEnfProgram = null;
        String pPriorityArea = null;
        String pPriorityAreaDesc = null;
        String pTribal = null;
        String pOecaCore = null;
        String pMultimedia = null;
        String pFedCase = null;
        String pActivityContact = null;
        String pRole = null;
        String pFedPenalty = null;
        String pTotalFedPenalty = null;
        String pCostRecovery = null;
        String pTotalCostRecovery = null;
        String pComplyingActions = null;
        String pCompActVal = null;
        String pTotalCompActVal = null;
        String pSepCats = null;
        String pSepVal = null;
        String pTotalSepVal = null;
        String pLodgedDate = null;
        String pEnteredDate = null;
        String pFacilityId = null;
        String pFacCity = null;
        String pFacZip = null;
        String pFacCounty = null;
        String pCaseSummary = null;
        String pCaseSummaryType = null;
        String pUsmex = null;
        BigDecimal pC1lat = null;
        BigDecimal pC1lon = null;
        BigDecimal pC2lat = null;
        BigDecimal pC2lon = null;
        String pVoluntary = null;
        String pFedIndicator = null;
        String pFntype = null;
        String pCivilCriminalIndicator = null;
        BigDecimal queryset = null;
        BigDecimal responseset = null;
        String maplist = null;
        String tablelist = null;
        String paramCallback = null;
        String qcolumns = null;
        String pOcmapFy = null;
        String pQs = null;
        String pHasMap = null;
        CaseRestServicesGetCasesGet200Response response = api.caseRestServicesGetCasesGet(output, pCaseCategory, pCaseStatus, pViolation, pMilestone, pFromDate, pToDate, pMilestoneFy, pName, pNameType, pCaseNumber, pDocketNumber, pCourtDocketNumber, pActivityNumber, pCaseLead, pCaseSensFlg, pRegion, pState, pDistrict, pSic, pSicAoNaics, pSicPrimaryFlg, pSicFrsFlg, pNaics, pNaicsPrimaryFlg, pNaicsFrsFlg, pEnfType, pLaw, pSection, pCpCitation, pRankOrder, pEnfProgram, pPriorityArea, pPriorityAreaDesc, pTribal, pOecaCore, pMultimedia, pFedCase, pActivityContact, pRole, pFedPenalty, pTotalFedPenalty, pCostRecovery, pTotalCostRecovery, pComplyingActions, pCompActVal, pTotalCompActVal, pSepCats, pSepVal, pTotalSepVal, pLodgedDate, pEnteredDate, pFacilityId, pFacCity, pFacZip, pFacCounty, pCaseSummary, pCaseSummaryType, pUsmex, pC1lat, pC1lon, pC2lat, pC2lon, pVoluntary, pFedIndicator, pFntype, pCivilCriminalIndicator, queryset, responseset, maplist, tablelist, paramCallback, qcolumns, pOcmapFy, pQs, pHasMap);
        // TODO: test validations
    }

    /**
     * Enforcement Case Search
     *
     * The get_cases service end point searches for civil enforcement and criminal cases based on the provided selection criteria.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void caseRestServicesGetCasesPostTest() throws ApiException {
        String output = null;
        String pCaseCategory = null;
        String pCaseStatus = null;
        String pMilestone = null;
        String pFromDate = null;
        String pToDate = null;
        String pMilestoneFy = null;
        String pName = null;
        String pNameType = null;
        String pCaseNumber = null;
        String pDocketNumber = null;
        String pCourtDocketNumber = null;
        String pActivityNumber = null;
        String pCaseLead = null;
        String pCaseSensFlg = null;
        String pRegion = null;
        String pState = null;
        String pDistrict = null;
        String pSic = null;
        String pSicAoNaics = null;
        String pSicPrimaryFlg = null;
        String pSicFrsFlg = null;
        String pNaics = null;
        String pNaicsPrimaryFlg = null;
        String pNaicsFrsFlg = null;
        String pEnfType = null;
        String pLaw = null;
        String pSection = null;
        String pCpCitation = null;
        String pRankOrder = null;
        String pEnfProgram = null;
        String pViolation = null;
        String pPriorityArea = null;
        String pPriorityAreaDesc = null;
        String pTribal = null;
        String pOecaCore = null;
        String pMultimedia = null;
        String pFedCase = null;
        String pActivityContact = null;
        String pRole = null;
        String pFedPenalty = null;
        String pTotalFedPenalty = null;
        String pCostRecovery = null;
        String pTotalCostRecovery = null;
        String pComplyingActions = null;
        String pCompActVal = null;
        String pTotalCompActVal = null;
        String pSepCats = null;
        String pSepVal = null;
        String pTotalSepVal = null;
        String pLodgedDate = null;
        String pEnteredDate = null;
        String pFacilityId = null;
        String pFacCity = null;
        String pFacZip = null;
        String pFacCounty = null;
        String pCaseSummary = null;
        String pCaseSummaryType = null;
        String pUsmex = null;
        BigDecimal pC1lat = null;
        BigDecimal pC1lon = null;
        BigDecimal pC2lat = null;
        BigDecimal pC2lon = null;
        String pVoluntary = null;
        String pFedIndicator = null;
        String pFntype = null;
        String pCivilCriminalIndicator = null;
        BigDecimal queryset = null;
        BigDecimal responseset = null;
        String maplist = null;
        String tablelist = null;
        String paramCallback = null;
        String qcolumns = null;
        String pOcmapFy = null;
        String pQs = null;
        String pHasMap = null;
        CaseRestServicesGetCasesGet200Response response = api.caseRestServicesGetCasesPost(output, pCaseCategory, pCaseStatus, pMilestone, pFromDate, pToDate, pMilestoneFy, pName, pNameType, pCaseNumber, pDocketNumber, pCourtDocketNumber, pActivityNumber, pCaseLead, pCaseSensFlg, pRegion, pState, pDistrict, pSic, pSicAoNaics, pSicPrimaryFlg, pSicFrsFlg, pNaics, pNaicsPrimaryFlg, pNaicsFrsFlg, pEnfType, pLaw, pSection, pCpCitation, pRankOrder, pEnfProgram, pViolation, pPriorityArea, pPriorityAreaDesc, pTribal, pOecaCore, pMultimedia, pFedCase, pActivityContact, pRole, pFedPenalty, pTotalFedPenalty, pCostRecovery, pTotalCostRecovery, pComplyingActions, pCompActVal, pTotalCompActVal, pSepCats, pSepVal, pTotalSepVal, pLodgedDate, pEnteredDate, pFacilityId, pFacCity, pFacZip, pFacCounty, pCaseSummary, pCaseSummaryType, pUsmex, pC1lat, pC1lon, pC2lat, pC2lon, pVoluntary, pFedIndicator, pFntype, pCivilCriminalIndicator, queryset, responseset, maplist, tablelist, paramCallback, qcolumns, pOcmapFy, pQs, pHasMap);
        // TODO: test validations
    }

    /**
     * Enforcement Criminal Case Summary Report Search
     *
     * The get_crcase_report service end point returns a complex object of criminal case detials based on the provided criminal case id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void caseRestServicesGetCrcaseReportGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        String mapset = null;
        CaseRestServicesGetCrcaseReportGet200Response response = api.caseRestServicesGetCrcaseReportGet(pId, output, paramCallback, mapset);
        // TODO: test validations
    }

    /**
     * Enforcement Criminal Case Summary Report Search
     *
     * The get_crcase_report service end point returns a complex object of criminal case detials based on the provided criminal case id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void caseRestServicesGetCrcaseReportPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        CaseRestServicesGetCrcaseReportGet200Response response = api.caseRestServicesGetCrcaseReportPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Enforcement Case Download Data Service
     *
     * Based on the QID obtained from a get_cases query, return a comma separated value (CSV) file of the cases found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void caseRestServicesGetDownloadGetTest() throws ApiException {
        String qid = null;
        String output = null;
        String qcolumns = null;
        File response = api.caseRestServicesGetDownloadGet(qid, output, qcolumns);
        // TODO: test validations
    }

    /**
     * Enforcement Case Download Data Service
     *
     * Based on the QID obtained from a get_cases query, return a comma separated value (CSV) file of the cases found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void caseRestServicesGetDownloadPostTest() throws ApiException {
        String qid = null;
        String output = null;
        String qcolumns = null;
        File response = api.caseRestServicesGetDownloadPost(qid, output, qcolumns);
        // TODO: test validations
    }

    /**
     * Placeholder
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void caseRestServicesGetFacilitiesFromCaseGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        CaseRestServicesGetFacilitiesFromCaseGet200Response response = api.caseRestServicesGetFacilitiesFromCaseGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Placeholder
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void caseRestServicesGetFacilitiesFromCasePostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        CaseRestServicesGetFacilitiesFromCaseGet200Response response = api.caseRestServicesGetFacilitiesFromCasePost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Enforcement Case Map Service
     *
     * The purpose of the GET_MAP service is to display facility coordinates and facility clusters related to a get_cases query. Currently, the maximum number of coordinates returned is 500. GET_MAP performs automatic clustering at the state, county, and zip code levels to maximize the number of coordinates returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void caseRestServicesGetMapGetTest() throws ApiException {
        String qid = null;
        String output = null;
        String paramCallback = null;
        String tablelist = null;
        BigDecimal c1Lat = null;
        BigDecimal c1Long = null;
        BigDecimal c2Lat = null;
        BigDecimal c2Long = null;
        CaseRestServicesGetMapGet200Response response = api.caseRestServicesGetMapGet(qid, output, paramCallback, tablelist, c1Lat, c1Long, c2Lat, c2Long);
        // TODO: test validations
    }

    /**
     * Enforcement Case Map Service
     *
     * The purpose of the GET_MAP service is to display facility coordinates and facility clusters related to a get_cases query. Currently, the maximum number of coordinates returned is 500. GET_MAP performs automatic clustering at the state, county, and zip code levels to maximize the number of coordinates returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void caseRestServicesGetMapPostTest() throws ApiException {
        String qid = null;
        String output = null;
        String paramCallback = null;
        String tablelist = null;
        BigDecimal c1Lat = null;
        BigDecimal c1Long = null;
        BigDecimal c2Lat = null;
        BigDecimal c2Long = null;
        String mapset = null;
        CaseRestServicesGetMapGet200Response response = api.caseRestServicesGetMapPost(qid, output, paramCallback, tablelist, c1Lat, c1Long, c2Lat, c2Long, mapset);
        // TODO: test validations
    }

    /**
     * Enforcement Case Paginated Results Service
     *
     * GET_QID is passed with a query ID corresponding to a previously run get_cases query. It then returns a CASES object containing all matching cases. The main purpose of GET_QID is for large querysets that contain multiple pages (responsesets) of output. GET_QID allows for pagination and for the selection and sorting of columns. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void caseRestServicesGetQidGetTest() throws ApiException {
        String qid = null;
        String output = null;
        BigDecimal pageno = null;
        String paramCallback = null;
        BigDecimal newsort = null;
        String descending = null;
        String qcolumns = null;
        CaseRestServicesGetQidGet200Response response = api.caseRestServicesGetQidGet(qid, output, pageno, paramCallback, newsort, descending, qcolumns);
        // TODO: test validations
    }

    /**
     * Enforcement Case Paginated Results Service
     *
     * GET_QID is passed with a query ID corresponding to a previously run get_cases query. It then returns a CASES object containing all matching cases. The main purpose of GET_QID is for large querysets that contain multiple pages (responsesets) of output. GET_QID allows for pagination and for the selection and sorting of columns. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void caseRestServicesGetQidPostTest() throws ApiException {
        String qid = null;
        String output = null;
        BigDecimal pageno = null;
        String paramCallback = null;
        BigDecimal newsort = null;
        String descending = null;
        String qcolumns = null;
        CaseRestServicesGetQidGet200Response response = api.caseRestServicesGetQidPost(qid, output, pageno, paramCallback, newsort, descending, qcolumns);
        // TODO: test validations
    }

}
