/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Enforcement Case Search
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  CASE Rest Services provide multiple service endpoints, each with specific capabilities, to search and retrieve data on civil cases entered into the  Integrated Compliance Information System (ICIS) and criminal cases entered into the Summary of Criminal Prosecutions database.   See Enforcement Case Search Help (https://echo.epa.gov/help/enforcement-case-search-help) for additional information on searching civil and criminal cases.  \\ The get_cases, get_map, get_qid, and get_download end points are meant to be used together, while the enhanced get_case_info end point is self contained..    The recommended use scenario for get_cases, get_qid, get_map, and get_downoad is: \\  <b>1)</b>  Use get_cases to validate passed query parameters, obtain summary statistics and to obtain a query_id (QID).  QIDs are time sensitive and will be valid for approximately 30 minutes.  <b>2)</b>  Use get_qid, with the returned QID, to paginate through arrays of case results.  <b>3)</b>  Use get_map, with the returned QID, to zoom in/out and pan on the clustered and individual facility coordinates, related to the returned cases, that meet the QID query criteria.  <b>4)</b>  Use get_download, with the returned QID, to generate a Comma Separated Value (CSV) file of facility information that meets the QID query criteria. \\ In addition to the service endpoints listed above there are two detailed case report services, one for civil cases (get_case_report) and one for criminal cases (get_crcase_report).  See the Civil Enforcement Case Report Help (https://echo.epa.gov/help/reports/enforcement-case-report-help) and the Criminal Case Report Help (https://echo.epa.gov/help/reports/criminal-case-report-help) for additional information  on then data returned from these two services.    \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch);
  }
}(this, function(expect, USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs0ClusterData();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Crs0ClusterData', function() {
    it('should create an instance of Crs0ClusterData', function() {
      // uncomment below and update the code to test Crs0ClusterData
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs0ClusterData();
      //expect(instance).to.be.a(USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs0ClusterData);
    });

    it('should have the property aFRRows (base name: "AFRRows")', function() {
      // uncomment below and update the code to test the property aFRRows
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs0ClusterData();
      //expect(instance).to.be();
    });

    it('should have the property cAARows (base name: "CAARows")', function() {
      // uncomment below and update the code to test the property cAARows
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs0ClusterData();
      //expect(instance).to.be();
    });

    it('should have the property cERCLARows (base name: "CERCLARows")', function() {
      // uncomment below and update the code to test the property cERCLARows
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs0ClusterData();
      //expect(instance).to.be();
    });

    it('should have the property cWARows (base name: "CWARows")', function() {
      // uncomment below and update the code to test the property cWARows
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs0ClusterData();
      //expect(instance).to.be();
    });

    it('should have the property clusterCount (base name: "ClusterCount")', function() {
      // uncomment below and update the code to test the property clusterCount
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs0ClusterData();
      //expect(instance).to.be();
    });

    it('should have the property clusterIcon (base name: "ClusterIcon")', function() {
      // uncomment below and update the code to test the property clusterIcon
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs0ClusterData();
      //expect(instance).to.be();
    });

    it('should have the property clusterLatitude (base name: "ClusterLatitude")', function() {
      // uncomment below and update the code to test the property clusterLatitude
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs0ClusterData();
      //expect(instance).to.be();
    });

    it('should have the property clusterLongitude (base name: "ClusterLongitude")', function() {
      // uncomment below and update the code to test the property clusterLongitude
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs0ClusterData();
      //expect(instance).to.be();
    });

    it('should have the property clusterName (base name: "ClusterName")', function() {
      // uncomment below and update the code to test the property clusterName
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs0ClusterData();
      //expect(instance).to.be();
    });

    it('should have the property clusterType (base name: "ClusterType")', function() {
      // uncomment below and update the code to test the property clusterType
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs0ClusterData();
      //expect(instance).to.be();
    });

    it('should have the property clusterValue (base name: "ClusterValue")', function() {
      // uncomment below and update the code to test the property clusterValue
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs0ClusterData();
      //expect(instance).to.be();
    });

    it('should have the property criminalRows (base name: "CriminalRows")', function() {
      // uncomment below and update the code to test the property criminalRows
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs0ClusterData();
      //expect(instance).to.be();
    });

    it('should have the property ePCRARows (base name: "EPCRARows")', function() {
      // uncomment below and update the code to test the property ePCRARows
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs0ClusterData();
      //expect(instance).to.be();
    });

    it('should have the property fIFRARows (base name: "FIFRARows")', function() {
      // uncomment below and update the code to test the property fIFRARows
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs0ClusterData();
      //expect(instance).to.be();
    });

    it('should have the property fedPenRows (base name: "FedPenRows")', function() {
      // uncomment below and update the code to test the property fedPenRows
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs0ClusterData();
      //expect(instance).to.be();
    });

    it('should have the property federalRows (base name: "FederalRows")', function() {
      // uncomment below and update the code to test the property federalRows
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs0ClusterData();
      //expect(instance).to.be();
    });

    it('should have the property jDCRows (base name: "JDCRows")', function() {
      // uncomment below and update the code to test the property jDCRows
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs0ClusterData();
      //expect(instance).to.be();
    });

    it('should have the property objectId (base name: "ObjectId")', function() {
      // uncomment below and update the code to test the property objectId
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs0ClusterData();
      //expect(instance).to.be();
    });

    it('should have the property rCRARows (base name: "RCRARows")', function() {
      // uncomment below and update the code to test the property rCRARows
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs0ClusterData();
      //expect(instance).to.be();
    });

    it('should have the property sDWARows (base name: "SDWARows")', function() {
      // uncomment below and update the code to test the property sDWARows
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs0ClusterData();
      //expect(instance).to.be();
    });

    it('should have the property sEPRows (base name: "SEPRows")', function() {
      // uncomment below and update the code to test the property sEPRows
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs0ClusterData();
      //expect(instance).to.be();
    });

    it('should have the property tSCARows (base name: "TSCARows")', function() {
      // uncomment below and update the code to test the property tSCARows
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs0ClusterData();
      //expect(instance).to.be();
    });

  });

}));
