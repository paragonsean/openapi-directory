/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Enforcement Case Search
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  CASE Rest Services provide multiple service endpoints, each with specific capabilities, to search and retrieve data on civil cases entered into the  Integrated Compliance Information System (ICIS) and criminal cases entered into the Summary of Criminal Prosecutions database.   See Enforcement Case Search Help (https://echo.epa.gov/help/enforcement-case-search-help) for additional information on searching civil and criminal cases.  \\ The get_cases, get_map, get_qid, and get_download end points are meant to be used together, while the enhanced get_case_info end point is self contained..    The recommended use scenario for get_cases, get_qid, get_map, and get_downoad is: \\  <b>1)</b>  Use get_cases to validate passed query parameters, obtain summary statistics and to obtain a query_id (QID).  QIDs are time sensitive and will be valid for approximately 30 minutes.  <b>2)</b>  Use get_qid, with the returned QID, to paginate through arrays of case results.  <b>3)</b>  Use get_map, with the returned QID, to zoom in/out and pan on the clustered and individual facility coordinates, related to the returned cases, that meet the QID query criteria.  <b>4)</b>  Use get_download, with the returned QID, to generate a Comma Separated Value (CSV) file of facility information that meets the QID query criteria. \\ In addition to the service endpoints listed above there are two detailed case report services, one for civil cases (get_case_report) and one for criminal cases (get_crcase_report).  See the Civil Enforcement Case Report Help (https://echo.epa.gov/help/reports/enforcement-case-report-help) and the Criminal Case Report Help (https://echo.epa.gov/help/reports/criminal-case-report-help) for additional information  on then data returned from these two services.    \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch);
  }
}(this, function(expect, USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs1CaseInformation();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Crs1CaseInformation', function() {
    it('should create an instance of Crs1CaseInformation', function() {
      // uncomment below and update the code to test Crs1CaseInformation
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs1CaseInformation();
      //expect(instance).to.be.a(USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs1CaseInformation);
    });

    it('should have the property branch (base name: "Branch")', function() {
      // uncomment below and update the code to test the property branch
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs1CaseInformation();
      //expect(instance).to.be();
    });

    it('should have the property caseName (base name: "CaseName")', function() {
      // uncomment below and update the code to test the property caseName
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs1CaseInformation();
      //expect(instance).to.be();
    });

    it('should have the property caseNumber (base name: "CaseNumber")', function() {
      // uncomment below and update the code to test the property caseNumber
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs1CaseInformation();
      //expect(instance).to.be();
    });

    it('should have the property caseStatus (base name: "CaseStatus")', function() {
      // uncomment below and update the code to test the property caseStatus
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs1CaseInformation();
      //expect(instance).to.be();
    });

    it('should have the property caseStatusDate (base name: "CaseStatusDate")', function() {
      // uncomment below and update the code to test the property caseStatusDate
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs1CaseInformation();
      //expect(instance).to.be();
    });

    it('should have the property caseSummary (base name: "CaseSummary")', function() {
      // uncomment below and update the code to test the property caseSummary
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs1CaseInformation();
      //expect(instance).to.be();
    });

    it('should have the property caseType (base name: "CaseType")', function() {
      // uncomment below and update the code to test the property caseType
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs1CaseInformation();
      //expect(instance).to.be();
    });

    it('should have the property dOJDocketNumber (base name: "DOJDocketNumber")', function() {
      // uncomment below and update the code to test the property dOJDocketNumber
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs1CaseInformation();
      //expect(instance).to.be();
    });

    it('should have the property enforcementOutcome (base name: "EnforcementOutcome")', function() {
      // uncomment below and update the code to test the property enforcementOutcome
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs1CaseInformation();
      //expect(instance).to.be();
    });

    it('should have the property enforcementType (base name: "EnforcementType")', function() {
      // uncomment below and update the code to test the property enforcementType
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs1CaseInformation();
      //expect(instance).to.be();
    });

    it('should have the property headquartersDivision (base name: "HeadquartersDivision")', function() {
      // uncomment below and update the code to test the property headquartersDivision
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs1CaseInformation();
      //expect(instance).to.be();
    });

    it('should have the property lead (base name: "Lead")', function() {
      // uncomment below and update the code to test the property lead
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs1CaseInformation();
      //expect(instance).to.be();
    });

    it('should have the property multiMediaCase (base name: "MultiMediaCase")', function() {
      // uncomment below and update the code to test the property multiMediaCase
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs1CaseInformation();
      //expect(instance).to.be();
    });

    it('should have the property regionalDocketNumber (base name: "RegionalDocketNumber")', function() {
      // uncomment below and update the code to test the property regionalDocketNumber
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs1CaseInformation();
      //expect(instance).to.be();
    });

    it('should have the property reliefSought (base name: "ReliefSought")', function() {
      // uncomment below and update the code to test the property reliefSought
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs1CaseInformation();
      //expect(instance).to.be();
    });

    it('should have the property resultVolDisclosure (base name: "ResultVolDisclosure")', function() {
      // uncomment below and update the code to test the property resultVolDisclosure
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs1CaseInformation();
      //expect(instance).to.be();
    });

    it('should have the property totalComplianceActionCost (base name: "TotalComplianceActionCost")', function() {
      // uncomment below and update the code to test the property totalComplianceActionCost
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs1CaseInformation();
      //expect(instance).to.be();
    });

    it('should have the property totalCostRecovery (base name: "TotalCostRecovery")', function() {
      // uncomment below and update the code to test the property totalCostRecovery
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs1CaseInformation();
      //expect(instance).to.be();
    });

    it('should have the property totalFederalPenalty (base name: "TotalFederalPenalty")', function() {
      // uncomment below and update the code to test the property totalFederalPenalty
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs1CaseInformation();
      //expect(instance).to.be();
    });

    it('should have the property totalSEPCost (base name: "TotalSEPCost")', function() {
      // uncomment below and update the code to test the property totalSEPCost
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs1CaseInformation();
      //expect(instance).to.be();
    });

    it('should have the property totalStatePenalty (base name: "TotalStatePenalty")', function() {
      // uncomment below and update the code to test the property totalStatePenalty
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs1CaseInformation();
      //expect(instance).to.be();
    });

    it('should have the property violations (base name: "Violations")', function() {
      // uncomment below and update the code to test the property violations
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEnforcementCaseSearch.Crs1CaseInformation();
      //expect(instance).to.be();
    });

  });

}));
