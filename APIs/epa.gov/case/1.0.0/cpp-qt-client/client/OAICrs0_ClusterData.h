/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Enforcement Case Search
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  CASE Rest Services provide multiple service endpoints, each with specific capabilities, to search and retrieve data on civil cases entered into the  Integrated Compliance Information System (ICIS) and criminal cases entered into the Summary of Criminal Prosecutions database.   See Enforcement Case Search Help (https://echo.epa.gov/help/enforcement-case-search-help) for additional information on searching civil and criminal cases.  \\ The get_cases, get_map, get_qid, and get_download end points are meant to be used together, while the enhanced get_case_info end point is self contained..    The recommended use scenario for get_cases, get_qid, get_map, and get_downoad is: \\  <b>1)</b>  Use get_cases to validate passed query parameters, obtain summary statistics and to obtain a query_id (QID).  QIDs are time sensitive and will be valid for approximately 30 minutes.  <b>2)</b>  Use get_qid, with the returned QID, to paginate through arrays of case results.  <b>3)</b>  Use get_map, with the returned QID, to zoom in/out and pan on the clustered and individual facility coordinates, related to the returned cases, that meet the QID query criteria.  <b>4)</b>  Use get_download, with the returned QID, to generate a Comma Separated Value (CSV) file of facility information that meets the QID query criteria. \\ In addition to the service endpoints listed above there are two detailed case report services, one for civil cases (get_case_report) and one for criminal cases (get_crcase_report).  See the Civil Enforcement Case Report Help (https://echo.epa.gov/help/reports/enforcement-case-report-help) and the Criminal Case Report Help (https://echo.epa.gov/help/reports/criminal-case-report-help) for additional information  on then data returned from these two services.    \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICrs0_ClusterData.h
 *
 * Cluster Data Complex Object
 */

#ifndef OAICrs0_ClusterData_H
#define OAICrs0_ClusterData_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICrs0_ClusterData : public OAIObject {
public:
    OAICrs0_ClusterData();
    OAICrs0_ClusterData(QString json);
    ~OAICrs0_ClusterData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAfrRows() const;
    void setAfrRows(const QString &afr_rows);
    bool is_afr_rows_Set() const;
    bool is_afr_rows_Valid() const;

    QString getCaaRows() const;
    void setCaaRows(const QString &caa_rows);
    bool is_caa_rows_Set() const;
    bool is_caa_rows_Valid() const;

    QString getCerclaRows() const;
    void setCerclaRows(const QString &cercla_rows);
    bool is_cercla_rows_Set() const;
    bool is_cercla_rows_Valid() const;

    QString getCwaRows() const;
    void setCwaRows(const QString &cwa_rows);
    bool is_cwa_rows_Set() const;
    bool is_cwa_rows_Valid() const;

    QString getClusterCount() const;
    void setClusterCount(const QString &cluster_count);
    bool is_cluster_count_Set() const;
    bool is_cluster_count_Valid() const;

    QString getClusterIcon() const;
    void setClusterIcon(const QString &cluster_icon);
    bool is_cluster_icon_Set() const;
    bool is_cluster_icon_Valid() const;

    QString getClusterLatitude() const;
    void setClusterLatitude(const QString &cluster_latitude);
    bool is_cluster_latitude_Set() const;
    bool is_cluster_latitude_Valid() const;

    QString getClusterLongitude() const;
    void setClusterLongitude(const QString &cluster_longitude);
    bool is_cluster_longitude_Set() const;
    bool is_cluster_longitude_Valid() const;

    QString getClusterName() const;
    void setClusterName(const QString &cluster_name);
    bool is_cluster_name_Set() const;
    bool is_cluster_name_Valid() const;

    QString getClusterType() const;
    void setClusterType(const QString &cluster_type);
    bool is_cluster_type_Set() const;
    bool is_cluster_type_Valid() const;

    QString getClusterValue() const;
    void setClusterValue(const QString &cluster_value);
    bool is_cluster_value_Set() const;
    bool is_cluster_value_Valid() const;

    QString getCriminalRows() const;
    void setCriminalRows(const QString &criminal_rows);
    bool is_criminal_rows_Set() const;
    bool is_criminal_rows_Valid() const;

    QString getEpcraRows() const;
    void setEpcraRows(const QString &epcra_rows);
    bool is_epcra_rows_Set() const;
    bool is_epcra_rows_Valid() const;

    QString getFifraRows() const;
    void setFifraRows(const QString &fifra_rows);
    bool is_fifra_rows_Set() const;
    bool is_fifra_rows_Valid() const;

    QString getFedPenRows() const;
    void setFedPenRows(const QString &fed_pen_rows);
    bool is_fed_pen_rows_Set() const;
    bool is_fed_pen_rows_Valid() const;

    QString getFederalRows() const;
    void setFederalRows(const QString &federal_rows);
    bool is_federal_rows_Set() const;
    bool is_federal_rows_Valid() const;

    QString getJdcRows() const;
    void setJdcRows(const QString &jdc_rows);
    bool is_jdc_rows_Set() const;
    bool is_jdc_rows_Valid() const;

    QString getObjectId() const;
    void setObjectId(const QString &object_id);
    bool is_object_id_Set() const;
    bool is_object_id_Valid() const;

    QString getRcraRows() const;
    void setRcraRows(const QString &rcra_rows);
    bool is_rcra_rows_Set() const;
    bool is_rcra_rows_Valid() const;

    QString getSdwaRows() const;
    void setSdwaRows(const QString &sdwa_rows);
    bool is_sdwa_rows_Set() const;
    bool is_sdwa_rows_Valid() const;

    QString getSepRows() const;
    void setSepRows(const QString &sep_rows);
    bool is_sep_rows_Set() const;
    bool is_sep_rows_Valid() const;

    QString getTscaRows() const;
    void setTscaRows(const QString &tsca_rows);
    bool is_tsca_rows_Set() const;
    bool is_tsca_rows_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_afr_rows;
    bool m_afr_rows_isSet;
    bool m_afr_rows_isValid;

    QString m_caa_rows;
    bool m_caa_rows_isSet;
    bool m_caa_rows_isValid;

    QString m_cercla_rows;
    bool m_cercla_rows_isSet;
    bool m_cercla_rows_isValid;

    QString m_cwa_rows;
    bool m_cwa_rows_isSet;
    bool m_cwa_rows_isValid;

    QString m_cluster_count;
    bool m_cluster_count_isSet;
    bool m_cluster_count_isValid;

    QString m_cluster_icon;
    bool m_cluster_icon_isSet;
    bool m_cluster_icon_isValid;

    QString m_cluster_latitude;
    bool m_cluster_latitude_isSet;
    bool m_cluster_latitude_isValid;

    QString m_cluster_longitude;
    bool m_cluster_longitude_isSet;
    bool m_cluster_longitude_isValid;

    QString m_cluster_name;
    bool m_cluster_name_isSet;
    bool m_cluster_name_isValid;

    QString m_cluster_type;
    bool m_cluster_type_isSet;
    bool m_cluster_type_isValid;

    QString m_cluster_value;
    bool m_cluster_value_isSet;
    bool m_cluster_value_isValid;

    QString m_criminal_rows;
    bool m_criminal_rows_isSet;
    bool m_criminal_rows_isValid;

    QString m_epcra_rows;
    bool m_epcra_rows_isSet;
    bool m_epcra_rows_isValid;

    QString m_fifra_rows;
    bool m_fifra_rows_isSet;
    bool m_fifra_rows_isValid;

    QString m_fed_pen_rows;
    bool m_fed_pen_rows_isSet;
    bool m_fed_pen_rows_isValid;

    QString m_federal_rows;
    bool m_federal_rows_isSet;
    bool m_federal_rows_isValid;

    QString m_jdc_rows;
    bool m_jdc_rows_isSet;
    bool m_jdc_rows_isValid;

    QString m_object_id;
    bool m_object_id_isSet;
    bool m_object_id_isValid;

    QString m_rcra_rows;
    bool m_rcra_rows_isSet;
    bool m_rcra_rows_isValid;

    QString m_sdwa_rows;
    bool m_sdwa_rows_isSet;
    bool m_sdwa_rows_isValid;

    QString m_sep_rows;
    bool m_sep_rows_isSet;
    bool m_sep_rows_isValid;

    QString m_tsca_rows;
    bool m_tsca_rows_isSet;
    bool m_tsca_rows_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICrs0_ClusterData)

#endif // OAICrs0_ClusterData_H
