/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Enforcement Case Search
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  CASE Rest Services provide multiple service endpoints, each with specific capabilities, to search and retrieve data on civil cases entered into the  Integrated Compliance Information System (ICIS) and criminal cases entered into the Summary of Criminal Prosecutions database.   See Enforcement Case Search Help (https://echo.epa.gov/help/enforcement-case-search-help) for additional information on searching civil and criminal cases.  \\ The get_cases, get_map, get_qid, and get_download end points are meant to be used together, while the enhanced get_case_info end point is self contained..    The recommended use scenario for get_cases, get_qid, get_map, and get_downoad is: \\  <b>1)</b>  Use get_cases to validate passed query parameters, obtain summary statistics and to obtain a query_id (QID).  QIDs are time sensitive and will be valid for approximately 30 minutes.  <b>2)</b>  Use get_qid, with the returned QID, to paginate through arrays of case results.  <b>3)</b>  Use get_map, with the returned QID, to zoom in/out and pan on the clustered and individual facility coordinates, related to the returned cases, that meet the QID query criteria.  <b>4)</b>  Use get_download, with the returned QID, to generate a Comma Separated Value (CSV) file of facility information that meets the QID query criteria. \\ In addition to the service endpoints listed above there are two detailed case report services, one for civil cases (get_case_report) and one for criminal cases (get_crcase_report).  See the Civil Enforcement Case Report Help (https://echo.epa.gov/help/reports/enforcement-case-report-help) and the Criminal Case Report Help (https://echo.epa.gov/help/reports/criminal-case-report-help) for additional information  on then data returned from these two services.    \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICrs0_Cases.h
 *
 * A summary of the violation(s), environmental problem(s), and a description of the cause of action.
 */

#ifndef OAICrs0_Cases_H
#define OAICrs0_Cases_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICrs0_Cases : public OAIObject {
public:
    OAICrs0_Cases();
    OAICrs0_Cases(QString json);
    ~OAICrs0_Cases() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActivityId() const;
    void setActivityId(const QString &activity_id);
    bool is_activity_id_Set() const;
    bool is_activity_id_Valid() const;

    QString getCaaFlag() const;
    void setCaaFlag(const QString &caa_flag);
    bool is_caa_flag_Set() const;
    bool is_caa_flag_Valid() const;

    QString getCaseCategoryCode() const;
    void setCaseCategoryCode(const QString &case_category_code);
    bool is_case_category_code_Set() const;
    bool is_case_category_code_Valid() const;

    QString getCaseCategoryDesc() const;
    void setCaseCategoryDesc(const QString &case_category_desc);
    bool is_case_category_desc_Set() const;
    bool is_case_category_desc_Valid() const;

    QString getCaseName() const;
    void setCaseName(const QString &case_name);
    bool is_case_name_Set() const;
    bool is_case_name_Valid() const;

    QString getCaseNumber() const;
    void setCaseNumber(const QString &case_number);
    bool is_case_number_Set() const;
    bool is_case_number_Valid() const;

    QString getCaseStatusCode() const;
    void setCaseStatusCode(const QString &case_status_code);
    bool is_case_status_code_Set() const;
    bool is_case_status_code_Valid() const;

    QString getCaseStatusDesc() const;
    void setCaseStatusDesc(const QString &case_status_desc);
    bool is_case_status_desc_Set() const;
    bool is_case_status_desc_Valid() const;

    QString getCerclaFlag() const;
    void setCerclaFlag(const QString &cercla_flag);
    bool is_cercla_flag_Set() const;
    bool is_cercla_flag_Valid() const;

    QString getCivilCriminalIndicator() const;
    void setCivilCriminalIndicator(const QString &civil_criminal_indicator);
    bool is_civil_criminal_indicator_Set() const;
    bool is_civil_criminal_indicator_Valid() const;

    QString getCostRecovery() const;
    void setCostRecovery(const QString &cost_recovery);
    bool is_cost_recovery_Set() const;
    bool is_cost_recovery_Valid() const;

    QString getCourtDocketNumber() const;
    void setCourtDocketNumber(const QString &court_docket_number);
    bool is_court_docket_number_Set() const;
    bool is_court_docket_number_Valid() const;

    QString getCwaFlag() const;
    void setCwaFlag(const QString &cwa_flag);
    bool is_cwa_flag_Set() const;
    bool is_cwa_flag_Valid() const;

    QString getDojDocketNmbr() const;
    void setDojDocketNmbr(const QString &doj_docket_nmbr);
    bool is_doj_docket_nmbr_Set() const;
    bool is_doj_docket_nmbr_Valid() const;

    QString getDateClosed() const;
    void setDateClosed(const QString &date_closed);
    bool is_date_closed_Set() const;
    bool is_date_closed_Valid() const;

    QString getDateFiled() const;
    void setDateFiled(const QString &date_filed);
    bool is_date_filed_Set() const;
    bool is_date_filed_Valid() const;

    QString getDateLodged() const;
    void setDateLodged(const QString &date_lodged);
    bool is_date_lodged_Set() const;
    bool is_date_lodged_Valid() const;

    QString getEnfOutcome() const;
    void setEnfOutcome(const QString &enf_outcome);
    bool is_enf_outcome_Set() const;
    bool is_enf_outcome_Valid() const;

    QString getEpcraFlag() const;
    void setEpcraFlag(const QString &epcra_flag);
    bool is_epcra_flag_Set() const;
    bool is_epcra_flag_Valid() const;

    QString getFedPenalty() const;
    void setFedPenalty(const QString &fed_penalty);
    bool is_fed_penalty_Set() const;
    bool is_fed_penalty_Valid() const;

    QString getFederalFlag() const;
    void setFederalFlag(const QString &federal_flag);
    bool is_federal_flag_Set() const;
    bool is_federal_flag_Valid() const;

    QString getFifraFlag() const;
    void setFifraFlag(const QString &fifra_flag);
    bool is_fifra_flag_Set() const;
    bool is_fifra_flag_Valid() const;

    QString getLead() const;
    void setLead(const QString &lead);
    bool is_lead_Set() const;
    bool is_lead_Valid() const;

    QString getMaxScore() const;
    void setMaxScore(const QString &max_score);
    bool is_max_score_Set() const;
    bool is_max_score_Valid() const;

    QString getPrimaryLaw() const;
    void setPrimaryLaw(const QString &primary_law);
    bool is_primary_law_Set() const;
    bool is_primary_law_Valid() const;

    QString getPrimaryNaicsCode() const;
    void setPrimaryNaicsCode(const QString &primary_naics_code);
    bool is_primary_naics_code_Set() const;
    bool is_primary_naics_code_Valid() const;

    QString getPrimarySicCode() const;
    void setPrimarySicCode(const QString &primary_sic_code);
    bool is_primary_sic_code_Set() const;
    bool is_primary_sic_code_Valid() const;

    QString getPrimarySection() const;
    void setPrimarySection(const QString &primary_section);
    bool is_primary_section_Set() const;
    bool is_primary_section_Valid() const;

    QString getProsecutionSummaryId() const;
    void setProsecutionSummaryId(const QString &prosecution_summary_id);
    bool is_prosecution_summary_id_Set() const;
    bool is_prosecution_summary_id_Valid() const;

    QString getRcraFlag() const;
    void setRcraFlag(const QString &rcra_flag);
    bool is_rcra_flag_Set() const;
    bool is_rcra_flag_Valid() const;

    QString getSepCategories() const;
    void setSepCategories(const QString &sep_categories);
    bool is_sep_categories_Set() const;
    bool is_sep_categories_Valid() const;

    QString getSepCost() const;
    void setSepCost(const QString &sep_cost);
    bool is_sep_cost_Set() const;
    bool is_sep_cost_Valid() const;

    QString getSepTexts() const;
    void setSepTexts(const QString &sep_texts);
    bool is_sep_texts_Set() const;
    bool is_sep_texts_Valid() const;

    QString getSdwaFlag() const;
    void setSdwaFlag(const QString &sdwa_flag);
    bool is_sdwa_flag_Set() const;
    bool is_sdwa_flag_Valid() const;

    QString getSettlementCnt() const;
    void setSettlementCnt(const QString &settlement_cnt);
    bool is_settlement_cnt_Set() const;
    bool is_settlement_cnt_Valid() const;

    QString getSettlementDate() const;
    void setSettlementDate(const QString &settlement_date);
    bool is_settlement_date_Set() const;
    bool is_settlement_date_Valid() const;

    QString getStateLocPenaltyAmt() const;
    void setStateLocPenaltyAmt(const QString &state_loc_penalty_amt);
    bool is_state_loc_penalty_amt_Set() const;
    bool is_state_loc_penalty_amt_Valid() const;

    QString getTotalCompActionAmt() const;
    void setTotalCompActionAmt(const QString &total_comp_action_amt);
    bool is_total_comp_action_amt_Set() const;
    bool is_total_comp_action_amt_Valid() const;

    QString getTribalLandFlag() const;
    void setTribalLandFlag(const QString &tribal_land_flag);
    bool is_tribal_land_flag_Set() const;
    bool is_tribal_land_flag_Valid() const;

    QString getTscaFlag() const;
    void setTscaFlag(const QString &tsca_flag);
    bool is_tsca_flag_Set() const;
    bool is_tsca_flag_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_activity_id;
    bool m_activity_id_isSet;
    bool m_activity_id_isValid;

    QString m_caa_flag;
    bool m_caa_flag_isSet;
    bool m_caa_flag_isValid;

    QString m_case_category_code;
    bool m_case_category_code_isSet;
    bool m_case_category_code_isValid;

    QString m_case_category_desc;
    bool m_case_category_desc_isSet;
    bool m_case_category_desc_isValid;

    QString m_case_name;
    bool m_case_name_isSet;
    bool m_case_name_isValid;

    QString m_case_number;
    bool m_case_number_isSet;
    bool m_case_number_isValid;

    QString m_case_status_code;
    bool m_case_status_code_isSet;
    bool m_case_status_code_isValid;

    QString m_case_status_desc;
    bool m_case_status_desc_isSet;
    bool m_case_status_desc_isValid;

    QString m_cercla_flag;
    bool m_cercla_flag_isSet;
    bool m_cercla_flag_isValid;

    QString m_civil_criminal_indicator;
    bool m_civil_criminal_indicator_isSet;
    bool m_civil_criminal_indicator_isValid;

    QString m_cost_recovery;
    bool m_cost_recovery_isSet;
    bool m_cost_recovery_isValid;

    QString m_court_docket_number;
    bool m_court_docket_number_isSet;
    bool m_court_docket_number_isValid;

    QString m_cwa_flag;
    bool m_cwa_flag_isSet;
    bool m_cwa_flag_isValid;

    QString m_doj_docket_nmbr;
    bool m_doj_docket_nmbr_isSet;
    bool m_doj_docket_nmbr_isValid;

    QString m_date_closed;
    bool m_date_closed_isSet;
    bool m_date_closed_isValid;

    QString m_date_filed;
    bool m_date_filed_isSet;
    bool m_date_filed_isValid;

    QString m_date_lodged;
    bool m_date_lodged_isSet;
    bool m_date_lodged_isValid;

    QString m_enf_outcome;
    bool m_enf_outcome_isSet;
    bool m_enf_outcome_isValid;

    QString m_epcra_flag;
    bool m_epcra_flag_isSet;
    bool m_epcra_flag_isValid;

    QString m_fed_penalty;
    bool m_fed_penalty_isSet;
    bool m_fed_penalty_isValid;

    QString m_federal_flag;
    bool m_federal_flag_isSet;
    bool m_federal_flag_isValid;

    QString m_fifra_flag;
    bool m_fifra_flag_isSet;
    bool m_fifra_flag_isValid;

    QString m_lead;
    bool m_lead_isSet;
    bool m_lead_isValid;

    QString m_max_score;
    bool m_max_score_isSet;
    bool m_max_score_isValid;

    QString m_primary_law;
    bool m_primary_law_isSet;
    bool m_primary_law_isValid;

    QString m_primary_naics_code;
    bool m_primary_naics_code_isSet;
    bool m_primary_naics_code_isValid;

    QString m_primary_sic_code;
    bool m_primary_sic_code_isSet;
    bool m_primary_sic_code_isValid;

    QString m_primary_section;
    bool m_primary_section_isSet;
    bool m_primary_section_isValid;

    QString m_prosecution_summary_id;
    bool m_prosecution_summary_id_isSet;
    bool m_prosecution_summary_id_isValid;

    QString m_rcra_flag;
    bool m_rcra_flag_isSet;
    bool m_rcra_flag_isValid;

    QString m_sep_categories;
    bool m_sep_categories_isSet;
    bool m_sep_categories_isValid;

    QString m_sep_cost;
    bool m_sep_cost_isSet;
    bool m_sep_cost_isValid;

    QString m_sep_texts;
    bool m_sep_texts_isSet;
    bool m_sep_texts_isValid;

    QString m_sdwa_flag;
    bool m_sdwa_flag_isSet;
    bool m_sdwa_flag_isValid;

    QString m_settlement_cnt;
    bool m_settlement_cnt_isSet;
    bool m_settlement_cnt_isValid;

    QString m_settlement_date;
    bool m_settlement_date_isSet;
    bool m_settlement_date_isValid;

    QString m_state_loc_penalty_amt;
    bool m_state_loc_penalty_amt_isSet;
    bool m_state_loc_penalty_amt_isValid;

    QString m_total_comp_action_amt;
    bool m_total_comp_action_amt_isSet;
    bool m_total_comp_action_amt_isValid;

    QString m_tribal_land_flag;
    bool m_tribal_land_flag_isSet;
    bool m_tribal_land_flag_isValid;

    QString m_tsca_flag;
    bool m_tsca_flag_isSet;
    bool m_tsca_flag_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICrs0_Cases)

#endif // OAICrs0_Cases_H
