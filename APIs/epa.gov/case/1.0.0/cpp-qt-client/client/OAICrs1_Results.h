/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Enforcement Case Search
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  CASE Rest Services provide multiple service endpoints, each with specific capabilities, to search and retrieve data on civil cases entered into the  Integrated Compliance Information System (ICIS) and criminal cases entered into the Summary of Criminal Prosecutions database.   See Enforcement Case Search Help (https://echo.epa.gov/help/enforcement-case-search-help) for additional information on searching civil and criminal cases.  \\ The get_cases, get_map, get_qid, and get_download end points are meant to be used together, while the enhanced get_case_info end point is self contained..    The recommended use scenario for get_cases, get_qid, get_map, and get_downoad is: \\  <b>1)</b>  Use get_cases to validate passed query parameters, obtain summary statistics and to obtain a query_id (QID).  QIDs are time sensitive and will be valid for approximately 30 minutes.  <b>2)</b>  Use get_qid, with the returned QID, to paginate through arrays of case results.  <b>3)</b>  Use get_map, with the returned QID, to zoom in/out and pan on the clustered and individual facility coordinates, related to the returned cases, that meet the QID query criteria.  <b>4)</b>  Use get_download, with the returned QID, to generate a Comma Separated Value (CSV) file of facility information that meets the QID query criteria. \\ In addition to the service endpoints listed above there are two detailed case report services, one for civil cases (get_case_report) and one for criminal cases (get_crcase_report).  See the Civil Enforcement Case Report Help (https://echo.epa.gov/help/reports/enforcement-case-report-help) and the Criminal Case Report Help (https://echo.epa.gov/help/reports/criminal-case-report-help) for additional information  on then data returned from these two services.    \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICrs1_Results.h
 *
 * The data returned by the service call.
 */

#ifndef OAICrs1_Results_H
#define OAICrs1_Results_H

#include <QJsonObject>

#include "OAICrs1_CAEDDocuments.h"
#include "OAICrs1_CaseInformation.h"
#include "OAICrs1_CaseMilestones.h"
#include "OAICrs1_Citations.h"
#include "OAICrs1_Defendants.h"
#include "OAICrs1_EnforcementConclusions.h"
#include "OAICrs1_Facilities.h"
#include "OAICrs1_LawsAndSections.h"
#include "OAICrs1_Pollutants.h"
#include "OAICrs1_ProgramLinks.h"
#include "OAICrs1_RelatedActivities.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICrs1_CAEDDocuments;
class OAICrs1_CaseInformation;
class OAICrs1_CaseMilestones;
class OAICrs1_Citations;
class OAICrs1_Defendants;
class OAICrs1_EnforcementConclusions;
class OAICrs1_Facilities;
class OAICrs1_LawsAndSections;
class OAICrs1_Pollutants;
class OAICrs1_ProgramLinks;
class OAICrs1_RelatedActivities;

class OAICrs1_Results : public OAIObject {
public:
    OAICrs1_Results();
    OAICrs1_Results(QString json);
    ~OAICrs1_Results() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICrs1_CAEDDocuments> getCaedDocuments() const;
    void setCaedDocuments(const QList<OAICrs1_CAEDDocuments> &caed_documents);
    bool is_caed_documents_Set() const;
    bool is_caed_documents_Valid() const;

    OAICrs1_CaseInformation getCaseInformation() const;
    void setCaseInformation(const OAICrs1_CaseInformation &case_information);
    bool is_case_information_Set() const;
    bool is_case_information_Valid() const;

    QList<OAICrs1_CaseMilestones> getCaseMilestones() const;
    void setCaseMilestones(const QList<OAICrs1_CaseMilestones> &case_milestones);
    bool is_case_milestones_Set() const;
    bool is_case_milestones_Valid() const;

    QList<OAICrs1_Citations> getCitations() const;
    void setCitations(const QList<OAICrs1_Citations> &citations);
    bool is_citations_Set() const;
    bool is_citations_Valid() const;

    QList<OAICrs1_Defendants> getDefendants() const;
    void setDefendants(const QList<OAICrs1_Defendants> &defendants);
    bool is_defendants_Set() const;
    bool is_defendants_Valid() const;

    QList<OAICrs1_EnforcementConclusions> getEnforcementConclusions() const;
    void setEnforcementConclusions(const QList<OAICrs1_EnforcementConclusions> &enforcement_conclusions);
    bool is_enforcement_conclusions_Set() const;
    bool is_enforcement_conclusions_Valid() const;

    QList<OAICrs1_Facilities> getFacilities() const;
    void setFacilities(const QList<OAICrs1_Facilities> &facilities);
    bool is_facilities_Set() const;
    bool is_facilities_Valid() const;

    QList<OAICrs1_LawsAndSections> getLawsAndSections() const;
    void setLawsAndSections(const QList<OAICrs1_LawsAndSections> &laws_and_sections);
    bool is_laws_and_sections_Set() const;
    bool is_laws_and_sections_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QList<OAICrs1_Pollutants> getPollutants() const;
    void setPollutants(const QList<OAICrs1_Pollutants> &pollutants);
    bool is_pollutants_Set() const;
    bool is_pollutants_Valid() const;

    QList<OAICrs1_ProgramLinks> getProgramLinks() const;
    void setProgramLinks(const QList<OAICrs1_ProgramLinks> &program_links);
    bool is_program_links_Set() const;
    bool is_program_links_Valid() const;

    QList<OAICrs1_RelatedActivities> getRelatedActivities() const;
    void setRelatedActivities(const QList<OAICrs1_RelatedActivities> &related_activities);
    bool is_related_activities_Set() const;
    bool is_related_activities_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICrs1_CAEDDocuments> m_caed_documents;
    bool m_caed_documents_isSet;
    bool m_caed_documents_isValid;

    OAICrs1_CaseInformation m_case_information;
    bool m_case_information_isSet;
    bool m_case_information_isValid;

    QList<OAICrs1_CaseMilestones> m_case_milestones;
    bool m_case_milestones_isSet;
    bool m_case_milestones_isValid;

    QList<OAICrs1_Citations> m_citations;
    bool m_citations_isSet;
    bool m_citations_isValid;

    QList<OAICrs1_Defendants> m_defendants;
    bool m_defendants_isSet;
    bool m_defendants_isValid;

    QList<OAICrs1_EnforcementConclusions> m_enforcement_conclusions;
    bool m_enforcement_conclusions_isSet;
    bool m_enforcement_conclusions_isValid;

    QList<OAICrs1_Facilities> m_facilities;
    bool m_facilities_isSet;
    bool m_facilities_isValid;

    QList<OAICrs1_LawsAndSections> m_laws_and_sections;
    bool m_laws_and_sections_isSet;
    bool m_laws_and_sections_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QList<OAICrs1_Pollutants> m_pollutants;
    bool m_pollutants_isSet;
    bool m_pollutants_isValid;

    QList<OAICrs1_ProgramLinks> m_program_links;
    bool m_program_links_isSet;
    bool m_program_links_isValid;

    QList<OAICrs1_RelatedActivities> m_related_activities;
    bool m_related_activities_isSet;
    bool m_related_activities_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICrs1_Results)

#endif // OAICrs1_Results_H
