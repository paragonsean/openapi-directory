# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.crs0_map_output import Crs0MapOutput
from openapi_server import util


class CaseRestServicesGetMapGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, map_output: Crs0MapOutput=None):
        """CaseRestServicesGetMapGet200Response - a model defined in OpenAPI

        :param map_output: The map_output of this CaseRestServicesGetMapGet200Response.
        """
        self.openapi_types = {
            'map_output': Crs0MapOutput
        }

        self.attribute_map = {
            'map_output': 'MapOutput'
        }

        self._map_output = map_output

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CaseRestServicesGetMapGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _case_rest_services_get_map_get_200_response of this CaseRestServicesGetMapGet200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def map_output(self):
        """Gets the map_output of this CaseRestServicesGetMapGet200Response.


        :return: The map_output of this CaseRestServicesGetMapGet200Response.
        :rtype: Crs0MapOutput
        """
        return self._map_output

    @map_output.setter
    def map_output(self, map_output):
        """Sets the map_output of this CaseRestServicesGetMapGet200Response.


        :param map_output: The map_output of this CaseRestServicesGetMapGet200Response.
        :type map_output: Crs0MapOutput
        """
        if map_output is None:
            raise ValueError("Invalid value for `map_output`, must not be `None`")

        self._map_output = map_output
