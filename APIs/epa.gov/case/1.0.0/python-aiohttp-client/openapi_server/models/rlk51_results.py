# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rlk00_lu_values import Rlk00LuValues
from openapi_server import util


class Rlk51Results(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lu_values: List[Rlk00LuValues]=None, message: str=None):
        """Rlk51Results - a model defined in OpenAPI

        :param lu_values: The lu_values of this Rlk51Results.
        :param message: The message of this Rlk51Results.
        """
        self.openapi_types = {
            'lu_values': List[Rlk00LuValues],
            'message': str
        }

        self.attribute_map = {
            'lu_values': 'LuValues',
            'message': 'Message'
        }

        self._lu_values = lu_values
        self._message = message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Rlk51Results':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The rlk51_Results of this Rlk51Results.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lu_values(self):
        """Gets the lu_values of this Rlk51Results.


        :return: The lu_values of this Rlk51Results.
        :rtype: List[Rlk00LuValues]
        """
        return self._lu_values

    @lu_values.setter
    def lu_values(self, lu_values):
        """Sets the lu_values of this Rlk51Results.


        :param lu_values: The lu_values of this Rlk51Results.
        :type lu_values: List[Rlk00LuValues]
        """

        self._lu_values = lu_values

    @property
    def message(self):
        """Gets the message of this Rlk51Results.

        Field to record messages (typically performance-related) about packet processing

        :return: The message of this Rlk51Results.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this Rlk51Results.

        Field to record messages (typically performance-related) about packet processing

        :param message: The message of this Rlk51Results.
        :type message: str
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")

        self._message = message
