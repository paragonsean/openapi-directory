# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Crs0GetFacilitiesFromCaseRegistryID(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, registry_id: str=None):
        """Crs0GetFacilitiesFromCaseRegistryID - a model defined in OpenAPI

        :param registry_id: The registry_id of this Crs0GetFacilitiesFromCaseRegistryID.
        """
        self.openapi_types = {
            'registry_id': str
        }

        self.attribute_map = {
            'registry_id': 'RegistryID'
        }

        self._registry_id = registry_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Crs0GetFacilitiesFromCaseRegistryID':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The crs0_get_facilities_from_case.RegistryID of this Crs0GetFacilitiesFromCaseRegistryID.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def registry_id(self):
        """Gets the registry_id of this Crs0GetFacilitiesFromCaseRegistryID.

        An internal 12-digit Facility Registry Service (FRS) tracking number used to tie all facility data together in EPA regulatory program databases.

        :return: The registry_id of this Crs0GetFacilitiesFromCaseRegistryID.
        :rtype: str
        """
        return self._registry_id

    @registry_id.setter
    def registry_id(self, registry_id):
        """Sets the registry_id of this Crs0GetFacilitiesFromCaseRegistryID.

        An internal 12-digit Facility Registry Service (FRS) tracking number used to tie all facility data together in EPA regulatory program databases.

        :param registry_id: The registry_id of this Crs0GetFacilitiesFromCaseRegistryID.
        :type registry_id: str
        """
        if registry_id is None:
            raise ValueError("Invalid value for `registry_id`, must not be `None`")

        self._registry_id = registry_id
