/*
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - All Data
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use.  ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.    ECHO Rest Services provide multiple service endpoints, each with specific capabilities, to search and retrieve data on facilities regulated as Clean Air Act (CAA) stationary sources, Clean Water Act (CWA) dischargers, Resource Conservation and Recovery Act (RCRA) hazardous waste generators/handlers, and Safe Drinking Water Act (SDWA) public water systems.  Data of interest from other EPA sources, such as the Toxics Release Inventory, is also supplied for context.   \\ The get_facilities, get_map, get_qid, and get_download end points are meant to be used together, while the enhanced get_facility_info end point is self contained.     The get_facility_info end point returns either an array of state, county or zip clusters with summary statistics per cluster or an array of facilities. \\ The recommended use scenario for get_facilities, get_qid, get_map, and get_downoad is: \\  <b>1)</b>  Use get_facilities to validate passed query parameters, obtain summary statistics and to obtain a query_id (QID).  QIDs are time sensitive and will be valid for approximately 30 minutes.  <b>2)</b>  Use get_qid, with the returned QID, to paginate through arrays of facility results.  <b>3)</b>  Use get_map, with the returned QID, to zoom in/out and pan on the clustered and individual facility coordinates that meet the QID query criteria.  <b>4)</b>  Use get_download, with the returned QID, to generate a Comma Separated Value (CSV) file of facility information that meets the QID query criteria. \\ \\ Use the qcolumns parameter to customize your search results.  Use the Metadata service endpoint for a list of available output objects, their Column Ids, and their definitions to help you build your customized output.  \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 2019.10.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Echo06;
import org.openapitools.client.model.Echo07;
import org.openapitools.client.model.Qp0;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Echo08
 */
public class Echo08Test {
    private final Echo08 model = new Echo08();

    /**
     * Model tests for Echo08
     */
    @Test
    public void testEcho08() {
        // TODO: test Echo08
    }

    /**
     * Test the property 'badSystemIDs'
     */
    @Test
    public void badSystemIDsTest() {
        // TODO: test badSystemIDs
    }

    /**
     * Test the property 'caARows'
     */
    @Test
    public void caARowsTest() {
        // TODO: test caARows
    }

    /**
     * Test the property 'cvRows'
     */
    @Test
    public void cvRowsTest() {
        // TODO: test cvRows
    }

    /**
     * Test the property 'cwARows'
     */
    @Test
    public void cwARowsTest() {
        // TODO: test cwARows
    }

    /**
     * Test the property 'clusterOutput'
     */
    @Test
    public void clusterOutputTest() {
        // TODO: test clusterOutput
    }

    /**
     * Test the property 'clusterRecords'
     */
    @Test
    public void clusterRecordsTest() {
        // TODO: test clusterRecords
    }

    /**
     * Test the property 'feARows'
     */
    @Test
    public void feARowsTest() {
        // TODO: test feARows
    }

    /**
     * Test the property 'facilities'
     */
    @Test
    public void facilitiesTest() {
        // TODO: test facilities
    }

    /**
     * Test the property 'inSPRows'
     */
    @Test
    public void inSPRowsTest() {
        // TODO: test inSPRows
    }

    /**
     * Test the property 'iconBaseURL'
     */
    @Test
    public void iconBaseURLTest() {
        // TODO: test iconBaseURL
    }

    /**
     * Test the property 'indianCountryRows'
     */
    @Test
    public void indianCountryRowsTest() {
        // TODO: test indianCountryRows
    }

    /**
     * Test the property 'infFEARows'
     */
    @Test
    public void infFEARowsTest() {
        // TODO: test infFEARows
    }

    /**
     * Test the property 'message'
     */
    @Test
    public void messageTest() {
        // TODO: test message
    }

    /**
     * Test the property 'popUpBaseURL'
     */
    @Test
    public void popUpBaseURLTest() {
        // TODO: test popUpBaseURL
    }

    /**
     * Test the property 'queryID'
     */
    @Test
    public void queryIDTest() {
        // TODO: test queryID
    }

    /**
     * Test the property 'queryParameters'
     */
    @Test
    public void queryParametersTest() {
        // TODO: test queryParameters
    }

    /**
     * Test the property 'queryRows'
     */
    @Test
    public void queryRowsTest() {
        // TODO: test queryRows
    }

    /**
     * Test the property 'rcRRows'
     */
    @Test
    public void rcRRowsTest() {
        // TODO: test rcRRows
    }

    /**
     * Test the property 'svRows'
     */
    @Test
    public void svRowsTest() {
        // TODO: test svRows
    }

    /**
     * Test the property 'serviceBaseURL'
     */
    @Test
    public void serviceBaseURLTest() {
        // TODO: test serviceBaseURL
    }

    /**
     * Test the property 'trIRows'
     */
    @Test
    public void trIRowsTest() {
        // TODO: test trIRows
    }

    /**
     * Test the property 'totalPenalties'
     */
    @Test
    public void totalPenaltiesTest() {
        // TODO: test totalPenalties
    }

    /**
     * Test the property 'v3Rows'
     */
    @Test
    public void v3RowsTest() {
        // TODO: test v3Rows
    }

}
