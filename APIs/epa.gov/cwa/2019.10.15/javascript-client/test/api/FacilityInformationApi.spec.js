/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Clean Water Act (CWA) Rest Services
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  CWA Rest Services provides multiple service endpoints, each with specific capabilities, to search and retrieve data on facilities regulated under the Clean Water Act (CWA) and managed under the National Pollutant Discharge Elimination System (NPDES) program. The returned results reflect data drawn from EPA's ICIS-NPDES database. \\ The get_facilities, get_map, get_qid, and get_download end points are meant to be used together, while the enhanced get_facility_info end point is self contained.   The get_facility_info end point returns either an array of state, county or zip clusters with summary statistics per cluster or an array of facilities. \\ The recommended use scenario for get_facilities, get_qid, get_map, and get_downoad is: \\  <b>1)</b>  Use get_facilities to validate passed query parameters, obtain summary statistics and to obtain a query_id (QID).  QIDs are time sensitive and will be valid for approximately 30 minutes.  <b>2)</b>  Use get_qid, with the returned QID, to paginate through arrays of facility results.  <b>3)</b>  Use get_map, with the returned QID, to zoom in/out and pan on the clustered and individual facility coordinates that meet the QID query criteria.  <b>4)</b>  Use get_download, with the returned QID, to generate a Comma Separated Value (CSV) file of facility information that meets the QID query criteria. \\ \\ Use the qcolumns parameter to customize your search results.  Use the Metadata service endpoint for a list of available output objects, their Column Ids, and their definitions to help you build your customized output.  \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 2019.10.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.USEpaEnforcementAndComplianceHistoryOnlineEchoCleanWaterActCwaRestServices);
  }
}(this, function(expect, USEpaEnforcementAndComplianceHistoryOnlineEchoCleanWaterActCwaRestServices) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoCleanWaterActCwaRestServices.FacilityInformationApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FacilityInformationApi', function() {
    describe('cwaRestServicesGetDownloadGet', function() {
      it('should call cwaRestServicesGetDownloadGet successfully', function(done) {
        //uncomment below and update the code to test cwaRestServicesGetDownloadGet
        //instance.cwaRestServicesGetDownloadGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cwaRestServicesGetDownloadPost', function() {
      it('should call cwaRestServicesGetDownloadPost successfully', function(done) {
        //uncomment below and update the code to test cwaRestServicesGetDownloadPost
        //instance.cwaRestServicesGetDownloadPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cwaRestServicesGetFacilitiesGet', function() {
      it('should call cwaRestServicesGetFacilitiesGet successfully', function(done) {
        //uncomment below and update the code to test cwaRestServicesGetFacilitiesGet
        //instance.cwaRestServicesGetFacilitiesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cwaRestServicesGetFacilitiesPost', function() {
      it('should call cwaRestServicesGetFacilitiesPost successfully', function(done) {
        //uncomment below and update the code to test cwaRestServicesGetFacilitiesPost
        //instance.cwaRestServicesGetFacilitiesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cwaRestServicesGetFacilityInfoGet', function() {
      it('should call cwaRestServicesGetFacilityInfoGet successfully', function(done) {
        //uncomment below and update the code to test cwaRestServicesGetFacilityInfoGet
        //instance.cwaRestServicesGetFacilityInfoGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cwaRestServicesGetFacilityInfoPost', function() {
      it('should call cwaRestServicesGetFacilityInfoPost successfully', function(done) {
        //uncomment below and update the code to test cwaRestServicesGetFacilityInfoPost
        //instance.cwaRestServicesGetFacilityInfoPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cwaRestServicesGetGeojsonGet', function() {
      it('should call cwaRestServicesGetGeojsonGet successfully', function(done) {
        //uncomment below and update the code to test cwaRestServicesGetGeojsonGet
        //instance.cwaRestServicesGetGeojsonGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cwaRestServicesGetGeojsonPost', function() {
      it('should call cwaRestServicesGetGeojsonPost successfully', function(done) {
        //uncomment below and update the code to test cwaRestServicesGetGeojsonPost
        //instance.cwaRestServicesGetGeojsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cwaRestServicesGetInfoClustersGet', function() {
      it('should call cwaRestServicesGetInfoClustersGet successfully', function(done) {
        //uncomment below and update the code to test cwaRestServicesGetInfoClustersGet
        //instance.cwaRestServicesGetInfoClustersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cwaRestServicesGetInfoClustersPost', function() {
      it('should call cwaRestServicesGetInfoClustersPost successfully', function(done) {
        //uncomment below and update the code to test cwaRestServicesGetInfoClustersPost
        //instance.cwaRestServicesGetInfoClustersPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cwaRestServicesGetMapGet', function() {
      it('should call cwaRestServicesGetMapGet successfully', function(done) {
        //uncomment below and update the code to test cwaRestServicesGetMapGet
        //instance.cwaRestServicesGetMapGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cwaRestServicesGetMapPost', function() {
      it('should call cwaRestServicesGetMapPost successfully', function(done) {
        //uncomment below and update the code to test cwaRestServicesGetMapPost
        //instance.cwaRestServicesGetMapPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cwaRestServicesGetQidGet', function() {
      it('should call cwaRestServicesGetQidGet successfully', function(done) {
        //uncomment below and update the code to test cwaRestServicesGetQidGet
        //instance.cwaRestServicesGetQidGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cwaRestServicesGetQidPost', function() {
      it('should call cwaRestServicesGetQidPost successfully', function(done) {
        //uncomment below and update the code to test cwaRestServicesGetQidPost
        //instance.cwaRestServicesGetQidPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
