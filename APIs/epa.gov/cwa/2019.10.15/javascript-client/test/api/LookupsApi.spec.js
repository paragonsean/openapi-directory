/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Clean Water Act (CWA) Rest Services
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  CWA Rest Services provides multiple service endpoints, each with specific capabilities, to search and retrieve data on facilities regulated under the Clean Water Act (CWA) and managed under the National Pollutant Discharge Elimination System (NPDES) program. The returned results reflect data drawn from EPA's ICIS-NPDES database. \\ The get_facilities, get_map, get_qid, and get_download end points are meant to be used together, while the enhanced get_facility_info end point is self contained.   The get_facility_info end point returns either an array of state, county or zip clusters with summary statistics per cluster or an array of facilities. \\ The recommended use scenario for get_facilities, get_qid, get_map, and get_downoad is: \\  <b>1)</b>  Use get_facilities to validate passed query parameters, obtain summary statistics and to obtain a query_id (QID).  QIDs are time sensitive and will be valid for approximately 30 minutes.  <b>2)</b>  Use get_qid, with the returned QID, to paginate through arrays of facility results.  <b>3)</b>  Use get_map, with the returned QID, to zoom in/out and pan on the clustered and individual facility coordinates that meet the QID query criteria.  <b>4)</b>  Use get_download, with the returned QID, to generate a Comma Separated Value (CSV) file of facility information that meets the QID query criteria. \\ \\ Use the qcolumns parameter to customize your search results.  Use the Metadata service endpoint for a list of available output objects, their Column Ids, and their definitions to help you build your customized output.  \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 2019.10.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.USEpaEnforcementAndComplianceHistoryOnlineEchoCleanWaterActCwaRestServices);
  }
}(this, function(expect, USEpaEnforcementAndComplianceHistoryOnlineEchoCleanWaterActCwaRestServices) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoCleanWaterActCwaRestServices.LookupsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LookupsApi', function() {
    describe('restLookupsBpTribesGet', function() {
      it('should call restLookupsBpTribesGet successfully', function(done) {
        //uncomment below and update the code to test restLookupsBpTribesGet
        //instance.restLookupsBpTribesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restLookupsBpTribesPost', function() {
      it('should call restLookupsBpTribesPost successfully', function(done) {
        //uncomment below and update the code to test restLookupsBpTribesPost
        //instance.restLookupsBpTribesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restLookupsCwaParametersGet', function() {
      it('should call restLookupsCwaParametersGet successfully', function(done) {
        //uncomment below and update the code to test restLookupsCwaParametersGet
        //instance.restLookupsCwaParametersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restLookupsCwaParametersPost', function() {
      it('should call restLookupsCwaParametersPost successfully', function(done) {
        //uncomment below and update the code to test restLookupsCwaParametersPost
        //instance.restLookupsCwaParametersPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restLookupsCwaPollutantsGet', function() {
      it('should call restLookupsCwaPollutantsGet successfully', function(done) {
        //uncomment below and update the code to test restLookupsCwaPollutantsGet
        //instance.restLookupsCwaPollutantsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restLookupsCwaPollutantsPost', function() {
      it('should call restLookupsCwaPollutantsPost successfully', function(done) {
        //uncomment below and update the code to test restLookupsCwaPollutantsPost
        //instance.restLookupsCwaPollutantsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restLookupsFederalAgenciesGet', function() {
      it('should call restLookupsFederalAgenciesGet successfully', function(done) {
        //uncomment below and update the code to test restLookupsFederalAgenciesGet
        //instance.restLookupsFederalAgenciesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restLookupsFederalAgenciesPost', function() {
      it('should call restLookupsFederalAgenciesPost successfully', function(done) {
        //uncomment below and update the code to test restLookupsFederalAgenciesPost
        //instance.restLookupsFederalAgenciesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restLookupsIcisInspectionTypesGet', function() {
      it('should call restLookupsIcisInspectionTypesGet successfully', function(done) {
        //uncomment below and update the code to test restLookupsIcisInspectionTypesGet
        //instance.restLookupsIcisInspectionTypesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restLookupsIcisInspectionTypesPost', function() {
      it('should call restLookupsIcisInspectionTypesPost successfully', function(done) {
        //uncomment below and update the code to test restLookupsIcisInspectionTypesPost
        //instance.restLookupsIcisInspectionTypesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restLookupsIcisLawSectionsGet', function() {
      it('should call restLookupsIcisLawSectionsGet successfully', function(done) {
        //uncomment below and update the code to test restLookupsIcisLawSectionsGet
        //instance.restLookupsIcisLawSectionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restLookupsIcisLawSectionsPost', function() {
      it('should call restLookupsIcisLawSectionsPost successfully', function(done) {
        //uncomment below and update the code to test restLookupsIcisLawSectionsPost
        //instance.restLookupsIcisLawSectionsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restLookupsNaicsCodesGet', function() {
      it('should call restLookupsNaicsCodesGet successfully', function(done) {
        //uncomment below and update the code to test restLookupsNaicsCodesGet
        //instance.restLookupsNaicsCodesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restLookupsNaicsCodesPost', function() {
      it('should call restLookupsNaicsCodesPost successfully', function(done) {
        //uncomment below and update the code to test restLookupsNaicsCodesPost
        //instance.restLookupsNaicsCodesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restLookupsNpdesParametersGet', function() {
      it('should call restLookupsNpdesParametersGet successfully', function(done) {
        //uncomment below and update the code to test restLookupsNpdesParametersGet
        //instance.restLookupsNpdesParametersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restLookupsNpdesParametersPost', function() {
      it('should call restLookupsNpdesParametersPost successfully', function(done) {
        //uncomment below and update the code to test restLookupsNpdesParametersPost
        //instance.restLookupsNpdesParametersPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restLookupsWbdCodeLuGet', function() {
      it('should call restLookupsWbdCodeLuGet successfully', function(done) {
        //uncomment below and update the code to test restLookupsWbdCodeLuGet
        //instance.restLookupsWbdCodeLuGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restLookupsWbdCodeLuPost', function() {
      it('should call restLookupsWbdCodeLuPost successfully', function(done) {
        //uncomment below and update the code to test restLookupsWbdCodeLuPost
        //instance.restLookupsWbdCodeLuPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restLookupsWbdNameLuGet', function() {
      it('should call restLookupsWbdNameLuGet successfully', function(done) {
        //uncomment below and update the code to test restLookupsWbdNameLuGet
        //instance.restLookupsWbdNameLuGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restLookupsWbdNameLuPost', function() {
      it('should call restLookupsWbdNameLuPost successfully', function(done) {
        //uncomment below and update the code to test restLookupsWbdNameLuPost
        //instance.restLookupsWbdNameLuPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
