/*
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Clean Water Act (CWA) Rest Services
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  CWA Rest Services provides multiple service endpoints, each with specific capabilities, to search and retrieve data on facilities regulated under the Clean Water Act (CWA) and managed under the National Pollutant Discharge Elimination System (NPDES) program. The returned results reflect data drawn from EPA's ICIS-NPDES database. \\ The get_facilities, get_map, get_qid, and get_download end points are meant to be used together, while the enhanced get_facility_info end point is self contained.   The get_facility_info end point returns either an array of state, county or zip clusters with summary statistics per cluster or an array of facilities. \\ The recommended use scenario for get_facilities, get_qid, get_map, and get_downoad is: \\  <b>1)</b>  Use get_facilities to validate passed query parameters, obtain summary statistics and to obtain a query_id (QID).  QIDs are time sensitive and will be valid for approximately 30 minutes.  <b>2)</b>  Use get_qid, with the returned QID, to paginate through arrays of facility results.  <b>3)</b>  Use get_map, with the returned QID, to zoom in/out and pan on the clustered and individual facility coordinates that meet the QID query criteria.  <b>4)</b>  Use get_download, with the returned QID, to generate a Comma Separated Value (CSV) file of facility information that meets the QID query criteria. \\ \\ Use the qcolumns parameter to customize your search results.  Use the Metadata service endpoint for a list of available output objects, their Column Ids, and their definitions to help you build your customized output.  \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 2019.10.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Cwa06;
import org.openapitools.client.model.Cwa07;
import org.openapitools.client.model.Qp0;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Results Object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:30:43.792236-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Cwa08 {
  public static final String SERIALIZED_NAME_BAD_SYSTEM_I_DS = "BadSystemIDs";
  @SerializedName(SERIALIZED_NAME_BAD_SYSTEM_I_DS)
  private String badSystemIDs;

  public static final String SERIALIZED_NAME_BIO_C_V_ROWS = "BioCVRows";
  @SerializedName(SERIALIZED_NAME_BIO_C_V_ROWS)
  private String bioCVRows;

  public static final String SERIALIZED_NAME_BIO_V3_ROWS = "BioV3Rows";
  @SerializedName(SERIALIZED_NAME_BIO_V3_ROWS)
  private String bioV3Rows;

  public static final String SERIALIZED_NAME_CV_ROWS = "CVRows";
  @SerializedName(SERIALIZED_NAME_CV_ROWS)
  private String cvRows;

  public static final String SERIALIZED_NAME_CLUSTER_OUTPUT = "ClusterOutput";
  @SerializedName(SERIALIZED_NAME_CLUSTER_OUTPUT)
  private Cwa06 clusterOutput;

  public static final String SERIALIZED_NAME_CLUSTER_RECORDS = "ClusterRecords";
  @SerializedName(SERIALIZED_NAME_CLUSTER_RECORDS)
  private String clusterRecords;

  public static final String SERIALIZED_NAME_FE_A_ROWS = "FEARows";
  @SerializedName(SERIALIZED_NAME_FE_A_ROWS)
  private String feARows;

  public static final String SERIALIZED_NAME_FACILITIES = "Facilities";
  @SerializedName(SERIALIZED_NAME_FACILITIES)
  private List<Cwa07> facilities = new ArrayList<>();

  public static final String SERIALIZED_NAME_IN_S_P_ROWS = "INSPRows";
  @SerializedName(SERIALIZED_NAME_IN_S_P_ROWS)
  private String inSPRows;

  public static final String SERIALIZED_NAME_ICON_BASE_U_R_L = "IconBaseURL";
  @SerializedName(SERIALIZED_NAME_ICON_BASE_U_R_L)
  private String iconBaseURL;

  public static final String SERIALIZED_NAME_INDIAN_COUNTRY_ROWS = "IndianCountryRows";
  @SerializedName(SERIALIZED_NAME_INDIAN_COUNTRY_ROWS)
  private String indianCountryRows;

  public static final String SERIALIZED_NAME_INF_F_E_A_ROWS = "InfFEARows";
  @SerializedName(SERIALIZED_NAME_INF_F_E_A_ROWS)
  private String infFEARows;

  public static final String SERIALIZED_NAME_MESSAGE = "Message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_POP_UP_BASE_U_R_L = "PopUpBaseURL";
  @SerializedName(SERIALIZED_NAME_POP_UP_BASE_U_R_L)
  private String popUpBaseURL;

  public static final String SERIALIZED_NAME_QUERY_I_D = "QueryID";
  @SerializedName(SERIALIZED_NAME_QUERY_I_D)
  private String queryID;

  public static final String SERIALIZED_NAME_QUERY_PARAMETERS = "QueryParameters";
  @SerializedName(SERIALIZED_NAME_QUERY_PARAMETERS)
  private List<Qp0> queryParameters = new ArrayList<>();

  public static final String SERIALIZED_NAME_QUERY_ROWS = "QueryRows";
  @SerializedName(SERIALIZED_NAME_QUERY_ROWS)
  private String queryRows;

  public static final String SERIALIZED_NAME_SV_ROWS = "SVRows";
  @SerializedName(SERIALIZED_NAME_SV_ROWS)
  private String svRows;

  public static final String SERIALIZED_NAME_SERVICE_BASE_U_R_L = "ServiceBaseURL";
  @SerializedName(SERIALIZED_NAME_SERVICE_BASE_U_R_L)
  private String serviceBaseURL;

  public static final String SERIALIZED_NAME_TOTAL_PENALTIES = "TotalPenalties";
  @SerializedName(SERIALIZED_NAME_TOTAL_PENALTIES)
  private String totalPenalties;

  public static final String SERIALIZED_NAME_V3_ROWS = "V3Rows";
  @SerializedName(SERIALIZED_NAME_V3_ROWS)
  private String v3Rows;

  public static final String SERIALIZED_NAME_VIO_LAST4_Q_ROWS = "VioLast4QRows";
  @SerializedName(SERIALIZED_NAME_VIO_LAST4_Q_ROWS)
  private String vioLast4QRows;

  public Cwa08() {
  }

  public Cwa08 badSystemIDs(String badSystemIDs) {
    this.badSystemIDs = badSystemIDs;
    return this;
  }

  /**
   * Identifies which passed query system identifiers are invalid.
   * @return badSystemIDs
   */
  @javax.annotation.Nonnull
  public String getBadSystemIDs() {
    return badSystemIDs;
  }

  public void setBadSystemIDs(String badSystemIDs) {
    this.badSystemIDs = badSystemIDs;
  }


  public Cwa08 bioCVRows(String bioCVRows) {
    this.bioCVRows = bioCVRows;
    return this;
  }

  /**
   * Number of facilities with current biosolid-related violations.
   * @return bioCVRows
   */
  @javax.annotation.Nonnull
  public String getBioCVRows() {
    return bioCVRows;
  }

  public void setBioCVRows(String bioCVRows) {
    this.bioCVRows = bioCVRows;
  }


  public Cwa08 bioV3Rows(String bioV3Rows) {
    this.bioV3Rows = bioV3Rows;
    return this;
  }

  /**
   * Number of facilities having one or more quarters of biosolid-related non-compliance in the last three years.
   * @return bioV3Rows
   */
  @javax.annotation.Nonnull
  public String getBioV3Rows() {
    return bioV3Rows;
  }

  public void setBioV3Rows(String bioV3Rows) {
    this.bioV3Rows = bioV3Rows;
  }


  public Cwa08 cvRows(String cvRows) {
    this.cvRows = cvRows;
    return this;
  }

  /**
   * Summary count of the number of CWA facilities or SDWA public drinking water systems with current violations.
   * @return cvRows
   */
  @javax.annotation.Nonnull
  public String getCvRows() {
    return cvRows;
  }

  public void setCvRows(String cvRows) {
    this.cvRows = cvRows;
  }


  public Cwa08 clusterOutput(Cwa06 clusterOutput) {
    this.clusterOutput = clusterOutput;
    return this;
  }

  /**
   * Get clusterOutput
   * @return clusterOutput
   */
  @javax.annotation.Nullable
  public Cwa06 getClusterOutput() {
    return clusterOutput;
  }

  public void setClusterOutput(Cwa06 clusterOutput) {
    this.clusterOutput = clusterOutput;
  }


  public Cwa08 clusterRecords(String clusterRecords) {
    this.clusterRecords = clusterRecords;
    return this;
  }

  /**
   * Number of clusters returned.
   * @return clusterRecords
   */
  @javax.annotation.Nullable
  public String getClusterRecords() {
    return clusterRecords;
  }

  public void setClusterRecords(String clusterRecords) {
    this.clusterRecords = clusterRecords;
  }


  public Cwa08 feARows(String feARows) {
    this.feARows = feARows;
    return this;
  }

  /**
   * Summary count of the number of facilities with a formal enforcement action in the past five years
   * @return feARows
   */
  @javax.annotation.Nonnull
  public String getFeARows() {
    return feARows;
  }

  public void setFeARows(String feARows) {
    this.feARows = feARows;
  }


  public Cwa08 facilities(List<Cwa07> facilities) {
    this.facilities = facilities;
    return this;
  }

  public Cwa08 addFacilitiesItem(Cwa07 facilitiesItem) {
    if (this.facilities == null) {
      this.facilities = new ArrayList<>();
    }
    this.facilities.add(facilitiesItem);
    return this;
  }

  /**
   * A complex array of facility information.
   * @return facilities
   */
  @javax.annotation.Nullable
  public List<Cwa07> getFacilities() {
    return facilities;
  }

  public void setFacilities(List<Cwa07> facilities) {
    this.facilities = facilities;
  }


  public Cwa08 inSPRows(String inSPRows) {
    this.inSPRows = inSPRows;
    return this;
  }

  /**
   * Number of facilities with insp_5yr_flag populated (CWP_DATE_LAST_INSPECTION)
   * @return inSPRows
   */
  @javax.annotation.Nonnull
  public String getInSPRows() {
    return inSPRows;
  }

  public void setInSPRows(String inSPRows) {
    this.inSPRows = inSPRows;
  }


  public Cwa08 iconBaseURL(String iconBaseURL) {
    this.iconBaseURL = iconBaseURL;
    return this;
  }

  /**
   * URL where all the icons are located
   * @return iconBaseURL
   */
  @javax.annotation.Nonnull
  public String getIconBaseURL() {
    return iconBaseURL;
  }

  public void setIconBaseURL(String iconBaseURL) {
    this.iconBaseURL = iconBaseURL;
  }


  public Cwa08 indianCountryRows(String indianCountryRows) {
    this.indianCountryRows = indianCountryRows;
    return this;
  }

  /**
   * Number of facilities with tribal_flag populated
   * @return indianCountryRows
   */
  @javax.annotation.Nonnull
  public String getIndianCountryRows() {
    return indianCountryRows;
  }

  public void setIndianCountryRows(String indianCountryRows) {
    this.indianCountryRows = indianCountryRows;
  }


  public Cwa08 infFEARows(String infFEARows) {
    this.infFEARows = infFEARows;
    return this;
  }

  /**
   * Number of facilities with infea_5yr_flag populated (INFORMAL_ENF_ACT_COUNT &gt; 0)
   * @return infFEARows
   */
  @javax.annotation.Nonnull
  public String getInfFEARows() {
    return infFEARows;
  }

  public void setInfFEARows(String infFEARows) {
    this.infFEARows = infFEARows;
  }


  public Cwa08 message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Field to record messages (typically performance-related) about packet processing
   * @return message
   */
  @javax.annotation.Nonnull
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  public Cwa08 popUpBaseURL(String popUpBaseURL) {
    this.popUpBaseURL = popUpBaseURL;
    return this;
  }

  /**
   * Combine this URL with the PUC to get popup info
   * @return popUpBaseURL
   */
  @javax.annotation.Nonnull
  public String getPopUpBaseURL() {
    return popUpBaseURL;
  }

  public void setPopUpBaseURL(String popUpBaseURL) {
    this.popUpBaseURL = popUpBaseURL;
  }


  public Cwa08 queryID(String queryID) {
    this.queryID = queryID;
    return this;
  }

  /**
   * Sequential number assigned to entire search result
   * @return queryID
   */
  @javax.annotation.Nonnull
  public String getQueryID() {
    return queryID;
  }

  public void setQueryID(String queryID) {
    this.queryID = queryID;
  }


  public Cwa08 queryParameters(List<Qp0> queryParameters) {
    this.queryParameters = queryParameters;
    return this;
  }

  public Cwa08 addQueryParametersItem(Qp0 queryParametersItem) {
    if (this.queryParameters == null) {
      this.queryParameters = new ArrayList<>();
    }
    this.queryParameters.add(queryParametersItem);
    return this;
  }

  /**
   * A list of submitted query parameters and their values.
   * @return queryParameters
   */
  @javax.annotation.Nonnull
  public List<Qp0> getQueryParameters() {
    return queryParameters;
  }

  public void setQueryParameters(List<Qp0> queryParameters) {
    this.queryParameters = queryParameters;
  }


  public Cwa08 queryRows(String queryRows) {
    this.queryRows = queryRows;
    return this;
  }

  /**
   * Number of query results returned
   * @return queryRows
   */
  @javax.annotation.Nonnull
  public String getQueryRows() {
    return queryRows;
  }

  public void setQueryRows(String queryRows) {
    this.queryRows = queryRows;
  }


  public Cwa08 svRows(String svRows) {
    this.svRows = svRows;
    return this;
  }

  /**
   * Number of facilities with curr_sv_flag populated (CWP_STATUS &#x3D; \&quot;Significant Violation\&quot;)
   * @return svRows
   */
  @javax.annotation.Nonnull
  public String getSvRows() {
    return svRows;
  }

  public void setSvRows(String svRows) {
    this.svRows = svRows;
  }


  public Cwa08 serviceBaseURL(String serviceBaseURL) {
    this.serviceBaseURL = serviceBaseURL;
    return this;
  }

  /**
   * The base service URL.
   * @return serviceBaseURL
   */
  @javax.annotation.Nonnull
  public String getServiceBaseURL() {
    return serviceBaseURL;
  }

  public void setServiceBaseURL(String serviceBaseURL) {
    this.serviceBaseURL = serviceBaseURL;
  }


  public Cwa08 totalPenalties(String totalPenalties) {
    this.totalPenalties = totalPenalties;
    return this;
  }

  /**
   * The total dollar amount of either assessed or final penalties within the five year time period
   * @return totalPenalties
   */
  @javax.annotation.Nonnull
  public String getTotalPenalties() {
    return totalPenalties;
  }

  public void setTotalPenalties(String totalPenalties) {
    this.totalPenalties = totalPenalties;
  }


  public Cwa08 v3Rows(String v3Rows) {
    this.v3Rows = v3Rows;
    return this;
  }

  /**
   * Number of facilities having one or more quarters in non-compliance (QNC) in the last three years
   * @return v3Rows
   */
  @javax.annotation.Nonnull
  public String getV3Rows() {
    return v3Rows;
  }

  public void setV3Rows(String v3Rows) {
    this.v3Rows = v3Rows;
  }


  public Cwa08 vioLast4QRows(String vioLast4QRows) {
    this.vioLast4QRows = vioLast4QRows;
    return this;
  }

  /**
   * The number of facilities with a violation in the last year.
   * @return vioLast4QRows
   */
  @javax.annotation.Nonnull
  public String getVioLast4QRows() {
    return vioLast4QRows;
  }

  public void setVioLast4QRows(String vioLast4QRows) {
    this.vioLast4QRows = vioLast4QRows;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Cwa08 cwa08 = (Cwa08) o;
    return Objects.equals(this.badSystemIDs, cwa08.badSystemIDs) &&
        Objects.equals(this.bioCVRows, cwa08.bioCVRows) &&
        Objects.equals(this.bioV3Rows, cwa08.bioV3Rows) &&
        Objects.equals(this.cvRows, cwa08.cvRows) &&
        Objects.equals(this.clusterOutput, cwa08.clusterOutput) &&
        Objects.equals(this.clusterRecords, cwa08.clusterRecords) &&
        Objects.equals(this.feARows, cwa08.feARows) &&
        Objects.equals(this.facilities, cwa08.facilities) &&
        Objects.equals(this.inSPRows, cwa08.inSPRows) &&
        Objects.equals(this.iconBaseURL, cwa08.iconBaseURL) &&
        Objects.equals(this.indianCountryRows, cwa08.indianCountryRows) &&
        Objects.equals(this.infFEARows, cwa08.infFEARows) &&
        Objects.equals(this.message, cwa08.message) &&
        Objects.equals(this.popUpBaseURL, cwa08.popUpBaseURL) &&
        Objects.equals(this.queryID, cwa08.queryID) &&
        Objects.equals(this.queryParameters, cwa08.queryParameters) &&
        Objects.equals(this.queryRows, cwa08.queryRows) &&
        Objects.equals(this.svRows, cwa08.svRows) &&
        Objects.equals(this.serviceBaseURL, cwa08.serviceBaseURL) &&
        Objects.equals(this.totalPenalties, cwa08.totalPenalties) &&
        Objects.equals(this.v3Rows, cwa08.v3Rows) &&
        Objects.equals(this.vioLast4QRows, cwa08.vioLast4QRows);
  }

  @Override
  public int hashCode() {
    return Objects.hash(badSystemIDs, bioCVRows, bioV3Rows, cvRows, clusterOutput, clusterRecords, feARows, facilities, inSPRows, iconBaseURL, indianCountryRows, infFEARows, message, popUpBaseURL, queryID, queryParameters, queryRows, svRows, serviceBaseURL, totalPenalties, v3Rows, vioLast4QRows);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Cwa08 {\n");
    sb.append("    badSystemIDs: ").append(toIndentedString(badSystemIDs)).append("\n");
    sb.append("    bioCVRows: ").append(toIndentedString(bioCVRows)).append("\n");
    sb.append("    bioV3Rows: ").append(toIndentedString(bioV3Rows)).append("\n");
    sb.append("    cvRows: ").append(toIndentedString(cvRows)).append("\n");
    sb.append("    clusterOutput: ").append(toIndentedString(clusterOutput)).append("\n");
    sb.append("    clusterRecords: ").append(toIndentedString(clusterRecords)).append("\n");
    sb.append("    feARows: ").append(toIndentedString(feARows)).append("\n");
    sb.append("    facilities: ").append(toIndentedString(facilities)).append("\n");
    sb.append("    inSPRows: ").append(toIndentedString(inSPRows)).append("\n");
    sb.append("    iconBaseURL: ").append(toIndentedString(iconBaseURL)).append("\n");
    sb.append("    indianCountryRows: ").append(toIndentedString(indianCountryRows)).append("\n");
    sb.append("    infFEARows: ").append(toIndentedString(infFEARows)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    popUpBaseURL: ").append(toIndentedString(popUpBaseURL)).append("\n");
    sb.append("    queryID: ").append(toIndentedString(queryID)).append("\n");
    sb.append("    queryParameters: ").append(toIndentedString(queryParameters)).append("\n");
    sb.append("    queryRows: ").append(toIndentedString(queryRows)).append("\n");
    sb.append("    svRows: ").append(toIndentedString(svRows)).append("\n");
    sb.append("    serviceBaseURL: ").append(toIndentedString(serviceBaseURL)).append("\n");
    sb.append("    totalPenalties: ").append(toIndentedString(totalPenalties)).append("\n");
    sb.append("    v3Rows: ").append(toIndentedString(v3Rows)).append("\n");
    sb.append("    vioLast4QRows: ").append(toIndentedString(vioLast4QRows)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("BadSystemIDs");
    openapiFields.add("BioCVRows");
    openapiFields.add("BioV3Rows");
    openapiFields.add("CVRows");
    openapiFields.add("ClusterOutput");
    openapiFields.add("ClusterRecords");
    openapiFields.add("FEARows");
    openapiFields.add("Facilities");
    openapiFields.add("INSPRows");
    openapiFields.add("IconBaseURL");
    openapiFields.add("IndianCountryRows");
    openapiFields.add("InfFEARows");
    openapiFields.add("Message");
    openapiFields.add("PopUpBaseURL");
    openapiFields.add("QueryID");
    openapiFields.add("QueryParameters");
    openapiFields.add("QueryRows");
    openapiFields.add("SVRows");
    openapiFields.add("ServiceBaseURL");
    openapiFields.add("TotalPenalties");
    openapiFields.add("V3Rows");
    openapiFields.add("VioLast4QRows");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("BadSystemIDs");
    openapiRequiredFields.add("BioCVRows");
    openapiRequiredFields.add("BioV3Rows");
    openapiRequiredFields.add("CVRows");
    openapiRequiredFields.add("FEARows");
    openapiRequiredFields.add("INSPRows");
    openapiRequiredFields.add("IconBaseURL");
    openapiRequiredFields.add("IndianCountryRows");
    openapiRequiredFields.add("InfFEARows");
    openapiRequiredFields.add("Message");
    openapiRequiredFields.add("PopUpBaseURL");
    openapiRequiredFields.add("QueryID");
    openapiRequiredFields.add("QueryParameters");
    openapiRequiredFields.add("QueryRows");
    openapiRequiredFields.add("SVRows");
    openapiRequiredFields.add("ServiceBaseURL");
    openapiRequiredFields.add("TotalPenalties");
    openapiRequiredFields.add("V3Rows");
    openapiRequiredFields.add("VioLast4QRows");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Cwa08
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Cwa08.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Cwa08 is not found in the empty JSON string", Cwa08.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Cwa08.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Cwa08` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Cwa08.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("BadSystemIDs").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BadSystemIDs` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BadSystemIDs").toString()));
      }
      if (!jsonObj.get("BioCVRows").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BioCVRows` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BioCVRows").toString()));
      }
      if (!jsonObj.get("BioV3Rows").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BioV3Rows` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BioV3Rows").toString()));
      }
      if (!jsonObj.get("CVRows").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CVRows` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CVRows").toString()));
      }
      // validate the optional field `ClusterOutput`
      if (jsonObj.get("ClusterOutput") != null && !jsonObj.get("ClusterOutput").isJsonNull()) {
        Cwa06.validateJsonElement(jsonObj.get("ClusterOutput"));
      }
      if ((jsonObj.get("ClusterRecords") != null && !jsonObj.get("ClusterRecords").isJsonNull()) && !jsonObj.get("ClusterRecords").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ClusterRecords` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ClusterRecords").toString()));
      }
      if (!jsonObj.get("FEARows").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `FEARows` to be a primitive type in the JSON string but got `%s`", jsonObj.get("FEARows").toString()));
      }
      if (jsonObj.get("Facilities") != null && !jsonObj.get("Facilities").isJsonNull()) {
        JsonArray jsonArrayfacilities = jsonObj.getAsJsonArray("Facilities");
        if (jsonArrayfacilities != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Facilities").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Facilities` to be an array in the JSON string but got `%s`", jsonObj.get("Facilities").toString()));
          }

          // validate the optional field `Facilities` (array)
          for (int i = 0; i < jsonArrayfacilities.size(); i++) {
            Cwa07.validateJsonElement(jsonArrayfacilities.get(i));
          };
        }
      }
      if (!jsonObj.get("INSPRows").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `INSPRows` to be a primitive type in the JSON string but got `%s`", jsonObj.get("INSPRows").toString()));
      }
      if (!jsonObj.get("IconBaseURL").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IconBaseURL` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IconBaseURL").toString()));
      }
      if (!jsonObj.get("IndianCountryRows").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IndianCountryRows` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IndianCountryRows").toString()));
      }
      if (!jsonObj.get("InfFEARows").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `InfFEARows` to be a primitive type in the JSON string but got `%s`", jsonObj.get("InfFEARows").toString()));
      }
      if (!jsonObj.get("Message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Message").toString()));
      }
      if (!jsonObj.get("PopUpBaseURL").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PopUpBaseURL` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PopUpBaseURL").toString()));
      }
      if (!jsonObj.get("QueryID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `QueryID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("QueryID").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("QueryParameters").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `QueryParameters` to be an array in the JSON string but got `%s`", jsonObj.get("QueryParameters").toString()));
      }

      JsonArray jsonArrayqueryParameters = jsonObj.getAsJsonArray("QueryParameters");
      // validate the required field `QueryParameters` (array)
      for (int i = 0; i < jsonArrayqueryParameters.size(); i++) {
        Qp0.validateJsonElement(jsonArrayqueryParameters.get(i));
      };
      if (!jsonObj.get("QueryRows").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `QueryRows` to be a primitive type in the JSON string but got `%s`", jsonObj.get("QueryRows").toString()));
      }
      if (!jsonObj.get("SVRows").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SVRows` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SVRows").toString()));
      }
      if (!jsonObj.get("ServiceBaseURL").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ServiceBaseURL` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ServiceBaseURL").toString()));
      }
      if (!jsonObj.get("TotalPenalties").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TotalPenalties` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TotalPenalties").toString()));
      }
      if (!jsonObj.get("V3Rows").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `V3Rows` to be a primitive type in the JSON string but got `%s`", jsonObj.get("V3Rows").toString()));
      }
      if (!jsonObj.get("VioLast4QRows").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `VioLast4QRows` to be a primitive type in the JSON string but got `%s`", jsonObj.get("VioLast4QRows").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Cwa08.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Cwa08' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Cwa08> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Cwa08.class));

       return (TypeAdapter<T>) new TypeAdapter<Cwa08>() {
           @Override
           public void write(JsonWriter out, Cwa08 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Cwa08 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Cwa08 given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Cwa08
   * @throws IOException if the JSON string is invalid with respect to Cwa08
   */
  public static Cwa08 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Cwa08.class);
  }

  /**
   * Convert an instance of Cwa08 to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

