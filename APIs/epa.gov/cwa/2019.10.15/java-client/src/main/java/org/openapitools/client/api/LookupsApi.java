/*
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Clean Water Act (CWA) Rest Services
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  CWA Rest Services provides multiple service endpoints, each with specific capabilities, to search and retrieve data on facilities regulated under the Clean Water Act (CWA) and managed under the National Pollutant Discharge Elimination System (NPDES) program. The returned results reflect data drawn from EPA's ICIS-NPDES database. \\ The get_facilities, get_map, get_qid, and get_download end points are meant to be used together, while the enhanced get_facility_info end point is self contained.   The get_facility_info end point returns either an array of state, county or zip clusters with summary statistics per cluster or an array of facilities. \\ The recommended use scenario for get_facilities, get_qid, get_map, and get_downoad is: \\  <b>1)</b>  Use get_facilities to validate passed query parameters, obtain summary statistics and to obtain a query_id (QID).  QIDs are time sensitive and will be valid for approximately 30 minutes.  <b>2)</b>  Use get_qid, with the returned QID, to paginate through arrays of facility results.  <b>3)</b>  Use get_map, with the returned QID, to zoom in/out and pan on the clustered and individual facility coordinates that meet the QID query criteria.  <b>4)</b>  Use get_download, with the returned QID, to generate a Comma Separated Value (CSV) file of facility information that meets the QID query criteria. \\ \\ Use the qcolumns parameter to customize your search results.  Use the Metadata service endpoint for a list of available output objects, their Column Ids, and their definitions to help you build your customized output.  \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 2019.10.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import java.math.BigDecimal;
import org.openapitools.client.model.RestLookupsBpTribesGet200Response;
import org.openapitools.client.model.RestLookupsCwaParametersGet200Response;
import org.openapitools.client.model.RestLookupsCwaPollutantsGet200Response;
import org.openapitools.client.model.RestLookupsFederalAgenciesGet200Response;
import org.openapitools.client.model.RestLookupsIcisInspectionTypesGet200Response;
import org.openapitools.client.model.RestLookupsIcisLawSectionsGet200Response;
import org.openapitools.client.model.RestLookupsNaicsCodesGet200Response;
import org.openapitools.client.model.RestLookupsNpdesParametersGet200Response;
import org.openapitools.client.model.RestLookupsWbdCodeLuGet200Response;
import org.openapitools.client.model.RestLookupsWbdNameLuGet200Response;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class LookupsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public LookupsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public LookupsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for restLookupsBpTribesGet
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of tribes containing the search term. If search term not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsBpTribesGetCall(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rest_lookups.bp_tribes";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (searchTerm != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search_term", searchTerm));
        }

        if (searchCode != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search_code", searchCode));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call restLookupsBpTribesGetValidateBeforeCall(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback _callback) throws ApiException {
        return restLookupsBpTribesGetCall(output, paramCallback, searchTerm, searchCode, _callback);

    }

    /**
     * ECHO BP Tribes Lookup Service
     * Returns the EPA Standard Indian Tribes and Native Alaskan Villages tribal_id and tribe_name.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @return RestLookupsBpTribesGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of tribes containing the search term. If search term not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public RestLookupsBpTribesGet200Response restLookupsBpTribesGet(String output, String paramCallback, String searchTerm, String searchCode) throws ApiException {
        ApiResponse<RestLookupsBpTribesGet200Response> localVarResp = restLookupsBpTribesGetWithHttpInfo(output, paramCallback, searchTerm, searchCode);
        return localVarResp.getData();
    }

    /**
     * ECHO BP Tribes Lookup Service
     * Returns the EPA Standard Indian Tribes and Native Alaskan Villages tribal_id and tribe_name.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @return ApiResponse&lt;RestLookupsBpTribesGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of tribes containing the search term. If search term not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RestLookupsBpTribesGet200Response> restLookupsBpTribesGetWithHttpInfo(String output, String paramCallback, String searchTerm, String searchCode) throws ApiException {
        okhttp3.Call localVarCall = restLookupsBpTribesGetValidateBeforeCall(output, paramCallback, searchTerm, searchCode, null);
        Type localVarReturnType = new TypeToken<RestLookupsBpTribesGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * ECHO BP Tribes Lookup Service (asynchronously)
     * Returns the EPA Standard Indian Tribes and Native Alaskan Villages tribal_id and tribe_name.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of tribes containing the search term. If search term not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsBpTribesGetAsync(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback<RestLookupsBpTribesGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = restLookupsBpTribesGetValidateBeforeCall(output, paramCallback, searchTerm, searchCode, _callback);
        Type localVarReturnType = new TypeToken<RestLookupsBpTribesGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for restLookupsBpTribesPost
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of tribes containing the search term. If search term not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsBpTribesPostCall(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rest_lookups.bp_tribes";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        if (searchTerm != null) {
            localVarFormParams.put("search_term", searchTerm);
        }

        if (searchCode != null) {
            localVarFormParams.put("search_code", searchCode);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call restLookupsBpTribesPostValidateBeforeCall(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback _callback) throws ApiException {
        return restLookupsBpTribesPostCall(output, paramCallback, searchTerm, searchCode, _callback);

    }

    /**
     * ECHO BP Tribes Lookup Service
     * Returns the EPA Standard Indian Tribes and Native Alaskan Villages tribal_id and tribe_name.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @return RestLookupsBpTribesGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of tribes containing the search term. If search term not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public RestLookupsBpTribesGet200Response restLookupsBpTribesPost(String output, String paramCallback, String searchTerm, String searchCode) throws ApiException {
        ApiResponse<RestLookupsBpTribesGet200Response> localVarResp = restLookupsBpTribesPostWithHttpInfo(output, paramCallback, searchTerm, searchCode);
        return localVarResp.getData();
    }

    /**
     * ECHO BP Tribes Lookup Service
     * Returns the EPA Standard Indian Tribes and Native Alaskan Villages tribal_id and tribe_name.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @return ApiResponse&lt;RestLookupsBpTribesGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of tribes containing the search term. If search term not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RestLookupsBpTribesGet200Response> restLookupsBpTribesPostWithHttpInfo(String output, String paramCallback, String searchTerm, String searchCode) throws ApiException {
        okhttp3.Call localVarCall = restLookupsBpTribesPostValidateBeforeCall(output, paramCallback, searchTerm, searchCode, null);
        Type localVarReturnType = new TypeToken<RestLookupsBpTribesGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * ECHO BP Tribes Lookup Service (asynchronously)
     * Returns the EPA Standard Indian Tribes and Native Alaskan Villages tribal_id and tribe_name.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of tribes containing the search term. If search term not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsBpTribesPostAsync(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback<RestLookupsBpTribesGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = restLookupsBpTribesPostValidateBeforeCall(output, paramCallback, searchTerm, searchCode, _callback);
        Type localVarReturnType = new TypeToken<RestLookupsBpTribesGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for restLookupsCwaParametersGet
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of parameter codes and descriptions that contain the search_term or search_code entered. If search term or search code not provided, returns all values. ValueCode is the 5-digit parameter code. ValueDescription is the parameter description. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsCwaParametersGetCall(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rest_lookups.cwa_parameters";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (searchTerm != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search_term", searchTerm));
        }

        if (searchCode != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search_code", searchCode));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call restLookupsCwaParametersGetValidateBeforeCall(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback _callback) throws ApiException {
        return restLookupsCwaParametersGetCall(output, paramCallback, searchTerm, searchCode, _callback);

    }

    /**
     * ECHO CWA Parameter Lookup Service
     * Look up Clean Water Act parameter codes and descriptions in the Integrated Compliance Information System - National Pollutant Discharge Elimination System (ICIS-NPDES) by code or term.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @return RestLookupsCwaParametersGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of parameter codes and descriptions that contain the search_term or search_code entered. If search term or search code not provided, returns all values. ValueCode is the 5-digit parameter code. ValueDescription is the parameter description. </td><td>  -  </td></tr>
     </table>
     */
    public RestLookupsCwaParametersGet200Response restLookupsCwaParametersGet(String output, String paramCallback, String searchTerm, String searchCode) throws ApiException {
        ApiResponse<RestLookupsCwaParametersGet200Response> localVarResp = restLookupsCwaParametersGetWithHttpInfo(output, paramCallback, searchTerm, searchCode);
        return localVarResp.getData();
    }

    /**
     * ECHO CWA Parameter Lookup Service
     * Look up Clean Water Act parameter codes and descriptions in the Integrated Compliance Information System - National Pollutant Discharge Elimination System (ICIS-NPDES) by code or term.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @return ApiResponse&lt;RestLookupsCwaParametersGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of parameter codes and descriptions that contain the search_term or search_code entered. If search term or search code not provided, returns all values. ValueCode is the 5-digit parameter code. ValueDescription is the parameter description. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RestLookupsCwaParametersGet200Response> restLookupsCwaParametersGetWithHttpInfo(String output, String paramCallback, String searchTerm, String searchCode) throws ApiException {
        okhttp3.Call localVarCall = restLookupsCwaParametersGetValidateBeforeCall(output, paramCallback, searchTerm, searchCode, null);
        Type localVarReturnType = new TypeToken<RestLookupsCwaParametersGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * ECHO CWA Parameter Lookup Service (asynchronously)
     * Look up Clean Water Act parameter codes and descriptions in the Integrated Compliance Information System - National Pollutant Discharge Elimination System (ICIS-NPDES) by code or term.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of parameter codes and descriptions that contain the search_term or search_code entered. If search term or search code not provided, returns all values. ValueCode is the 5-digit parameter code. ValueDescription is the parameter description. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsCwaParametersGetAsync(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback<RestLookupsCwaParametersGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = restLookupsCwaParametersGetValidateBeforeCall(output, paramCallback, searchTerm, searchCode, _callback);
        Type localVarReturnType = new TypeToken<RestLookupsCwaParametersGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for restLookupsCwaParametersPost
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of parameter codes and descriptions that contain the search_term or search_code entered. If search term or search code not provided, returns all values. ValueCode is the 5-digit parameter code. ValueDescription is the parameter description. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsCwaParametersPostCall(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rest_lookups.cwa_parameters";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        if (searchTerm != null) {
            localVarFormParams.put("search_term", searchTerm);
        }

        if (searchCode != null) {
            localVarFormParams.put("search_code", searchCode);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call restLookupsCwaParametersPostValidateBeforeCall(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback _callback) throws ApiException {
        return restLookupsCwaParametersPostCall(output, paramCallback, searchTerm, searchCode, _callback);

    }

    /**
     * ECHO CWA Parameter Lookup Service
     * Look up Clean Water Act parameter codes and descriptions in the Integrated Compliance Information System - National Pollutant Discharge Elimination System (ICIS-NPDES) by code or term.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @return RestLookupsCwaParametersGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of parameter codes and descriptions that contain the search_term or search_code entered. If search term or search code not provided, returns all values. ValueCode is the 5-digit parameter code. ValueDescription is the parameter description. </td><td>  -  </td></tr>
     </table>
     */
    public RestLookupsCwaParametersGet200Response restLookupsCwaParametersPost(String output, String paramCallback, String searchTerm, String searchCode) throws ApiException {
        ApiResponse<RestLookupsCwaParametersGet200Response> localVarResp = restLookupsCwaParametersPostWithHttpInfo(output, paramCallback, searchTerm, searchCode);
        return localVarResp.getData();
    }

    /**
     * ECHO CWA Parameter Lookup Service
     * Look up Clean Water Act parameter codes and descriptions in the Integrated Compliance Information System - National Pollutant Discharge Elimination System (ICIS-NPDES) by code or term.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @return ApiResponse&lt;RestLookupsCwaParametersGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of parameter codes and descriptions that contain the search_term or search_code entered. If search term or search code not provided, returns all values. ValueCode is the 5-digit parameter code. ValueDescription is the parameter description. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RestLookupsCwaParametersGet200Response> restLookupsCwaParametersPostWithHttpInfo(String output, String paramCallback, String searchTerm, String searchCode) throws ApiException {
        okhttp3.Call localVarCall = restLookupsCwaParametersPostValidateBeforeCall(output, paramCallback, searchTerm, searchCode, null);
        Type localVarReturnType = new TypeToken<RestLookupsCwaParametersGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * ECHO CWA Parameter Lookup Service (asynchronously)
     * Look up Clean Water Act parameter codes and descriptions in the Integrated Compliance Information System - National Pollutant Discharge Elimination System (ICIS-NPDES) by code or term.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of parameter codes and descriptions that contain the search_term or search_code entered. If search term or search code not provided, returns all values. ValueCode is the 5-digit parameter code. ValueDescription is the parameter description. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsCwaParametersPostAsync(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback<RestLookupsCwaParametersGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = restLookupsCwaParametersPostValidateBeforeCall(output, paramCallback, searchTerm, searchCode, _callback);
        Type localVarReturnType = new TypeToken<RestLookupsCwaParametersGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for restLookupsCwaPollutantsGet
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of water polluntants containing search term or search code. If search term or search code not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsCwaPollutantsGetCall(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rest_lookups.cwa_pollutants";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (searchTerm != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search_term", searchTerm));
        }

        if (searchCode != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search_code", searchCode));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call restLookupsCwaPollutantsGetValidateBeforeCall(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback _callback) throws ApiException {
        return restLookupsCwaPollutantsGetCall(output, paramCallback, searchTerm, searchCode, _callback);

    }

    /**
     * ECHO CWA Pollutants Lookup Service
     * Look up Clean Water Act pollutants by name
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @return RestLookupsCwaPollutantsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of water polluntants containing search term or search code. If search term or search code not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public RestLookupsCwaPollutantsGet200Response restLookupsCwaPollutantsGet(String output, String paramCallback, String searchTerm, String searchCode) throws ApiException {
        ApiResponse<RestLookupsCwaPollutantsGet200Response> localVarResp = restLookupsCwaPollutantsGetWithHttpInfo(output, paramCallback, searchTerm, searchCode);
        return localVarResp.getData();
    }

    /**
     * ECHO CWA Pollutants Lookup Service
     * Look up Clean Water Act pollutants by name
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @return ApiResponse&lt;RestLookupsCwaPollutantsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of water polluntants containing search term or search code. If search term or search code not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RestLookupsCwaPollutantsGet200Response> restLookupsCwaPollutantsGetWithHttpInfo(String output, String paramCallback, String searchTerm, String searchCode) throws ApiException {
        okhttp3.Call localVarCall = restLookupsCwaPollutantsGetValidateBeforeCall(output, paramCallback, searchTerm, searchCode, null);
        Type localVarReturnType = new TypeToken<RestLookupsCwaPollutantsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * ECHO CWA Pollutants Lookup Service (asynchronously)
     * Look up Clean Water Act pollutants by name
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of water polluntants containing search term or search code. If search term or search code not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsCwaPollutantsGetAsync(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback<RestLookupsCwaPollutantsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = restLookupsCwaPollutantsGetValidateBeforeCall(output, paramCallback, searchTerm, searchCode, _callback);
        Type localVarReturnType = new TypeToken<RestLookupsCwaPollutantsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for restLookupsCwaPollutantsPost
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of water polluntants containing search term or search code. If search term or search code not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsCwaPollutantsPostCall(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rest_lookups.cwa_pollutants";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        if (searchTerm != null) {
            localVarFormParams.put("search_term", searchTerm);
        }

        if (searchCode != null) {
            localVarFormParams.put("search_code", searchCode);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call restLookupsCwaPollutantsPostValidateBeforeCall(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback _callback) throws ApiException {
        return restLookupsCwaPollutantsPostCall(output, paramCallback, searchTerm, searchCode, _callback);

    }

    /**
     * ECHO CWA Pollutants Lookup Service
     * Look up Clean Water Act pollutants by name
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @return RestLookupsCwaPollutantsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of water polluntants containing search term or search code. If search term or search code not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public RestLookupsCwaPollutantsGet200Response restLookupsCwaPollutantsPost(String output, String paramCallback, String searchTerm, String searchCode) throws ApiException {
        ApiResponse<RestLookupsCwaPollutantsGet200Response> localVarResp = restLookupsCwaPollutantsPostWithHttpInfo(output, paramCallback, searchTerm, searchCode);
        return localVarResp.getData();
    }

    /**
     * ECHO CWA Pollutants Lookup Service
     * Look up Clean Water Act pollutants by name
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @return ApiResponse&lt;RestLookupsCwaPollutantsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of water polluntants containing search term or search code. If search term or search code not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RestLookupsCwaPollutantsGet200Response> restLookupsCwaPollutantsPostWithHttpInfo(String output, String paramCallback, String searchTerm, String searchCode) throws ApiException {
        okhttp3.Call localVarCall = restLookupsCwaPollutantsPostValidateBeforeCall(output, paramCallback, searchTerm, searchCode, null);
        Type localVarReturnType = new TypeToken<RestLookupsCwaPollutantsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * ECHO CWA Pollutants Lookup Service (asynchronously)
     * Look up Clean Water Act pollutants by name
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of water polluntants containing search term or search code. If search term or search code not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsCwaPollutantsPostAsync(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback<RestLookupsCwaPollutantsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = restLookupsCwaPollutantsPostValidateBeforeCall(output, paramCallback, searchTerm, searchCode, _callback);
        Type localVarReturnType = new TypeToken<RestLookupsCwaPollutantsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for restLookupsFederalAgenciesGet
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of federal agency codes and their descriptions. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsFederalAgenciesGetCall(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rest_lookups.federal_agencies";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (searchTerm != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search_term", searchTerm));
        }

        if (searchCode != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search_code", searchCode));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call restLookupsFederalAgenciesGetValidateBeforeCall(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback _callback) throws ApiException {
        return restLookupsFederalAgenciesGetCall(output, paramCallback, searchTerm, searchCode, _callback);

    }

    /**
     * ECHO Federal Agency Lookup Service
     * Look up Federal Agency Code
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @return RestLookupsFederalAgenciesGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of federal agency codes and their descriptions. </td><td>  -  </td></tr>
     </table>
     */
    public RestLookupsFederalAgenciesGet200Response restLookupsFederalAgenciesGet(String output, String paramCallback, String searchTerm, String searchCode) throws ApiException {
        ApiResponse<RestLookupsFederalAgenciesGet200Response> localVarResp = restLookupsFederalAgenciesGetWithHttpInfo(output, paramCallback, searchTerm, searchCode);
        return localVarResp.getData();
    }

    /**
     * ECHO Federal Agency Lookup Service
     * Look up Federal Agency Code
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @return ApiResponse&lt;RestLookupsFederalAgenciesGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of federal agency codes and their descriptions. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RestLookupsFederalAgenciesGet200Response> restLookupsFederalAgenciesGetWithHttpInfo(String output, String paramCallback, String searchTerm, String searchCode) throws ApiException {
        okhttp3.Call localVarCall = restLookupsFederalAgenciesGetValidateBeforeCall(output, paramCallback, searchTerm, searchCode, null);
        Type localVarReturnType = new TypeToken<RestLookupsFederalAgenciesGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * ECHO Federal Agency Lookup Service (asynchronously)
     * Look up Federal Agency Code
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of federal agency codes and their descriptions. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsFederalAgenciesGetAsync(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback<RestLookupsFederalAgenciesGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = restLookupsFederalAgenciesGetValidateBeforeCall(output, paramCallback, searchTerm, searchCode, _callback);
        Type localVarReturnType = new TypeToken<RestLookupsFederalAgenciesGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for restLookupsFederalAgenciesPost
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of federal agency codes and their descriptions. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsFederalAgenciesPostCall(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rest_lookups.federal_agencies";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        if (searchTerm != null) {
            localVarFormParams.put("search_term", searchTerm);
        }

        if (searchCode != null) {
            localVarFormParams.put("search_code", searchCode);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call restLookupsFederalAgenciesPostValidateBeforeCall(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback _callback) throws ApiException {
        return restLookupsFederalAgenciesPostCall(output, paramCallback, searchTerm, searchCode, _callback);

    }

    /**
     * ECHO Federal Agency Lookup Service
     * Look up Federal Agency Code
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @return RestLookupsFederalAgenciesGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of federal agency codes and their descriptions. </td><td>  -  </td></tr>
     </table>
     */
    public RestLookupsFederalAgenciesGet200Response restLookupsFederalAgenciesPost(String output, String paramCallback, String searchTerm, String searchCode) throws ApiException {
        ApiResponse<RestLookupsFederalAgenciesGet200Response> localVarResp = restLookupsFederalAgenciesPostWithHttpInfo(output, paramCallback, searchTerm, searchCode);
        return localVarResp.getData();
    }

    /**
     * ECHO Federal Agency Lookup Service
     * Look up Federal Agency Code
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @return ApiResponse&lt;RestLookupsFederalAgenciesGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of federal agency codes and their descriptions. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RestLookupsFederalAgenciesGet200Response> restLookupsFederalAgenciesPostWithHttpInfo(String output, String paramCallback, String searchTerm, String searchCode) throws ApiException {
        okhttp3.Call localVarCall = restLookupsFederalAgenciesPostValidateBeforeCall(output, paramCallback, searchTerm, searchCode, null);
        Type localVarReturnType = new TypeToken<RestLookupsFederalAgenciesGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * ECHO Federal Agency Lookup Service (asynchronously)
     * Look up Federal Agency Code
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of federal agency codes and their descriptions. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsFederalAgenciesPostAsync(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback<RestLookupsFederalAgenciesGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = restLookupsFederalAgenciesPostValidateBeforeCall(output, paramCallback, searchTerm, searchCode, _callback);
        Type localVarReturnType = new TypeToken<RestLookupsFederalAgenciesGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for restLookupsIcisInspectionTypesGet
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of icis_inspection_types codes and their description. If search term or search code is  not provided, all values are returned. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsIcisInspectionTypesGetCall(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rest_lookups.icis_inspection_types";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (searchTerm != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search_term", searchTerm));
        }

        if (searchCode != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search_code", searchCode));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call restLookupsIcisInspectionTypesGetValidateBeforeCall(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback _callback) throws ApiException {
        return restLookupsIcisInspectionTypesGetCall(output, paramCallback, searchTerm, searchCode, _callback);

    }

    /**
     * ECHO ICIS NPDES Inspection Types Lookup Service
     * Returns the ICIS NPDES Compliance Monitoring Type Code and Description.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @return RestLookupsIcisInspectionTypesGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of icis_inspection_types codes and their description. If search term or search code is  not provided, all values are returned. </td><td>  -  </td></tr>
     </table>
     */
    public RestLookupsIcisInspectionTypesGet200Response restLookupsIcisInspectionTypesGet(String output, String paramCallback, String searchTerm, String searchCode) throws ApiException {
        ApiResponse<RestLookupsIcisInspectionTypesGet200Response> localVarResp = restLookupsIcisInspectionTypesGetWithHttpInfo(output, paramCallback, searchTerm, searchCode);
        return localVarResp.getData();
    }

    /**
     * ECHO ICIS NPDES Inspection Types Lookup Service
     * Returns the ICIS NPDES Compliance Monitoring Type Code and Description.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @return ApiResponse&lt;RestLookupsIcisInspectionTypesGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of icis_inspection_types codes and their description. If search term or search code is  not provided, all values are returned. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RestLookupsIcisInspectionTypesGet200Response> restLookupsIcisInspectionTypesGetWithHttpInfo(String output, String paramCallback, String searchTerm, String searchCode) throws ApiException {
        okhttp3.Call localVarCall = restLookupsIcisInspectionTypesGetValidateBeforeCall(output, paramCallback, searchTerm, searchCode, null);
        Type localVarReturnType = new TypeToken<RestLookupsIcisInspectionTypesGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * ECHO ICIS NPDES Inspection Types Lookup Service (asynchronously)
     * Returns the ICIS NPDES Compliance Monitoring Type Code and Description.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of icis_inspection_types codes and their description. If search term or search code is  not provided, all values are returned. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsIcisInspectionTypesGetAsync(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback<RestLookupsIcisInspectionTypesGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = restLookupsIcisInspectionTypesGetValidateBeforeCall(output, paramCallback, searchTerm, searchCode, _callback);
        Type localVarReturnType = new TypeToken<RestLookupsIcisInspectionTypesGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for restLookupsIcisInspectionTypesPost
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of icis_inspection_types codes and their description. If search term or search code is  not provided, all values are returned. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsIcisInspectionTypesPostCall(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rest_lookups.icis_inspection_types";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        if (searchTerm != null) {
            localVarFormParams.put("search_term", searchTerm);
        }

        if (searchCode != null) {
            localVarFormParams.put("search_code", searchCode);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call restLookupsIcisInspectionTypesPostValidateBeforeCall(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback _callback) throws ApiException {
        return restLookupsIcisInspectionTypesPostCall(output, paramCallback, searchTerm, searchCode, _callback);

    }

    /**
     * ECHO ICIS NPDES Inspection Types Lookup Service
     * Returns the ICIS NPDES Compliance Monitoring Type Code and Description.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @return RestLookupsIcisInspectionTypesGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of icis_inspection_types codes and their description. If search term or search code is  not provided, all values are returned. </td><td>  -  </td></tr>
     </table>
     */
    public RestLookupsIcisInspectionTypesGet200Response restLookupsIcisInspectionTypesPost(String output, String paramCallback, String searchTerm, String searchCode) throws ApiException {
        ApiResponse<RestLookupsIcisInspectionTypesGet200Response> localVarResp = restLookupsIcisInspectionTypesPostWithHttpInfo(output, paramCallback, searchTerm, searchCode);
        return localVarResp.getData();
    }

    /**
     * ECHO ICIS NPDES Inspection Types Lookup Service
     * Returns the ICIS NPDES Compliance Monitoring Type Code and Description.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @return ApiResponse&lt;RestLookupsIcisInspectionTypesGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of icis_inspection_types codes and their description. If search term or search code is  not provided, all values are returned. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RestLookupsIcisInspectionTypesGet200Response> restLookupsIcisInspectionTypesPostWithHttpInfo(String output, String paramCallback, String searchTerm, String searchCode) throws ApiException {
        okhttp3.Call localVarCall = restLookupsIcisInspectionTypesPostValidateBeforeCall(output, paramCallback, searchTerm, searchCode, null);
        Type localVarReturnType = new TypeToken<RestLookupsIcisInspectionTypesGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * ECHO ICIS NPDES Inspection Types Lookup Service (asynchronously)
     * Returns the ICIS NPDES Compliance Monitoring Type Code and Description.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of icis_inspection_types codes and their description. If search term or search code is  not provided, all values are returned. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsIcisInspectionTypesPostAsync(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback<RestLookupsIcisInspectionTypesGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = restLookupsIcisInspectionTypesPostValidateBeforeCall(output, paramCallback, searchTerm, searchCode, _callback);
        Type localVarReturnType = new TypeToken<RestLookupsIcisInspectionTypesGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for restLookupsIcisLawSectionsGet
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param statuteCode  (optional)
     * @param statusFlag  (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param sortOrder  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of icis_inspection_types codes and their description. If search term or search code is  not provided, all values are returned. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsIcisLawSectionsGetCall(String output, String paramCallback, String statuteCode, String statusFlag, String searchTerm, String searchCode, BigDecimal sortOrder, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rest_lookups.icis_law_sections";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (statuteCode != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("statute_code", statuteCode));
        }

        if (statusFlag != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("status_flag", statusFlag));
        }

        if (searchTerm != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search_term", searchTerm));
        }

        if (searchCode != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search_code", searchCode));
        }

        if (sortOrder != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_order", sortOrder));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call restLookupsIcisLawSectionsGetValidateBeforeCall(String output, String paramCallback, String statuteCode, String statusFlag, String searchTerm, String searchCode, BigDecimal sortOrder, final ApiCallback _callback) throws ApiException {
        return restLookupsIcisLawSectionsGetCall(output, paramCallback, statuteCode, statusFlag, searchTerm, searchCode, sortOrder, _callback);

    }

    /**
     * ECHO ICIS NPDES Law Sections Lookup Service
     * Returns the ICIS NPDES Law Section Descriptions.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param statuteCode  (optional)
     * @param statusFlag  (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param sortOrder  (optional)
     * @return RestLookupsIcisLawSectionsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of icis_inspection_types codes and their description. If search term or search code is  not provided, all values are returned. </td><td>  -  </td></tr>
     </table>
     */
    public RestLookupsIcisLawSectionsGet200Response restLookupsIcisLawSectionsGet(String output, String paramCallback, String statuteCode, String statusFlag, String searchTerm, String searchCode, BigDecimal sortOrder) throws ApiException {
        ApiResponse<RestLookupsIcisLawSectionsGet200Response> localVarResp = restLookupsIcisLawSectionsGetWithHttpInfo(output, paramCallback, statuteCode, statusFlag, searchTerm, searchCode, sortOrder);
        return localVarResp.getData();
    }

    /**
     * ECHO ICIS NPDES Law Sections Lookup Service
     * Returns the ICIS NPDES Law Section Descriptions.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param statuteCode  (optional)
     * @param statusFlag  (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param sortOrder  (optional)
     * @return ApiResponse&lt;RestLookupsIcisLawSectionsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of icis_inspection_types codes and their description. If search term or search code is  not provided, all values are returned. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RestLookupsIcisLawSectionsGet200Response> restLookupsIcisLawSectionsGetWithHttpInfo(String output, String paramCallback, String statuteCode, String statusFlag, String searchTerm, String searchCode, BigDecimal sortOrder) throws ApiException {
        okhttp3.Call localVarCall = restLookupsIcisLawSectionsGetValidateBeforeCall(output, paramCallback, statuteCode, statusFlag, searchTerm, searchCode, sortOrder, null);
        Type localVarReturnType = new TypeToken<RestLookupsIcisLawSectionsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * ECHO ICIS NPDES Law Sections Lookup Service (asynchronously)
     * Returns the ICIS NPDES Law Section Descriptions.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param statuteCode  (optional)
     * @param statusFlag  (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param sortOrder  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of icis_inspection_types codes and their description. If search term or search code is  not provided, all values are returned. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsIcisLawSectionsGetAsync(String output, String paramCallback, String statuteCode, String statusFlag, String searchTerm, String searchCode, BigDecimal sortOrder, final ApiCallback<RestLookupsIcisLawSectionsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = restLookupsIcisLawSectionsGetValidateBeforeCall(output, paramCallback, statuteCode, statusFlag, searchTerm, searchCode, sortOrder, _callback);
        Type localVarReturnType = new TypeToken<RestLookupsIcisLawSectionsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for restLookupsIcisLawSectionsPost
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param statuteCode  (optional)
     * @param statusFlag  (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param sortOrder  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of icis_inspection_types codes and their description. If search term or search code is  not provided, all values are returned. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsIcisLawSectionsPostCall(String output, String paramCallback, String statuteCode, String statusFlag, String searchTerm, String searchCode, BigDecimal sortOrder, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rest_lookups.icis_law_sections";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        if (statuteCode != null) {
            localVarFormParams.put("statute_code", statuteCode);
        }

        if (statusFlag != null) {
            localVarFormParams.put("status_flag", statusFlag);
        }

        if (searchTerm != null) {
            localVarFormParams.put("search_term", searchTerm);
        }

        if (searchCode != null) {
            localVarFormParams.put("search_code", searchCode);
        }

        if (sortOrder != null) {
            localVarFormParams.put("sort_order", sortOrder);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call restLookupsIcisLawSectionsPostValidateBeforeCall(String output, String paramCallback, String statuteCode, String statusFlag, String searchTerm, String searchCode, BigDecimal sortOrder, final ApiCallback _callback) throws ApiException {
        return restLookupsIcisLawSectionsPostCall(output, paramCallback, statuteCode, statusFlag, searchTerm, searchCode, sortOrder, _callback);

    }

    /**
     * ECHO ICIS NPDES Law Sections Lookup Service
     * Returns the ICIS NPDES Law Section Descriptions.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param statuteCode  (optional)
     * @param statusFlag  (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param sortOrder  (optional)
     * @return RestLookupsIcisLawSectionsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of icis_inspection_types codes and their description. If search term or search code is  not provided, all values are returned. </td><td>  -  </td></tr>
     </table>
     */
    public RestLookupsIcisLawSectionsGet200Response restLookupsIcisLawSectionsPost(String output, String paramCallback, String statuteCode, String statusFlag, String searchTerm, String searchCode, BigDecimal sortOrder) throws ApiException {
        ApiResponse<RestLookupsIcisLawSectionsGet200Response> localVarResp = restLookupsIcisLawSectionsPostWithHttpInfo(output, paramCallback, statuteCode, statusFlag, searchTerm, searchCode, sortOrder);
        return localVarResp.getData();
    }

    /**
     * ECHO ICIS NPDES Law Sections Lookup Service
     * Returns the ICIS NPDES Law Section Descriptions.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param statuteCode  (optional)
     * @param statusFlag  (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param sortOrder  (optional)
     * @return ApiResponse&lt;RestLookupsIcisLawSectionsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of icis_inspection_types codes and their description. If search term or search code is  not provided, all values are returned. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RestLookupsIcisLawSectionsGet200Response> restLookupsIcisLawSectionsPostWithHttpInfo(String output, String paramCallback, String statuteCode, String statusFlag, String searchTerm, String searchCode, BigDecimal sortOrder) throws ApiException {
        okhttp3.Call localVarCall = restLookupsIcisLawSectionsPostValidateBeforeCall(output, paramCallback, statuteCode, statusFlag, searchTerm, searchCode, sortOrder, null);
        Type localVarReturnType = new TypeToken<RestLookupsIcisLawSectionsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * ECHO ICIS NPDES Law Sections Lookup Service (asynchronously)
     * Returns the ICIS NPDES Law Section Descriptions.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param statuteCode  (optional)
     * @param statusFlag  (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param sortOrder  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of icis_inspection_types codes and their description. If search term or search code is  not provided, all values are returned. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsIcisLawSectionsPostAsync(String output, String paramCallback, String statuteCode, String statusFlag, String searchTerm, String searchCode, BigDecimal sortOrder, final ApiCallback<RestLookupsIcisLawSectionsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = restLookupsIcisLawSectionsPostValidateBeforeCall(output, paramCallback, statuteCode, statusFlag, searchTerm, searchCode, sortOrder, _callback);
        Type localVarReturnType = new TypeToken<RestLookupsIcisLawSectionsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for restLookupsNaicsCodesGet
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of NAICS codes and descriptions based on search term or search code. If search term or search code not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsNaicsCodesGetCall(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rest_lookups.naics_codes";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (searchTerm != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search_term", searchTerm));
        }

        if (searchCode != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search_code", searchCode));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call restLookupsNaicsCodesGetValidateBeforeCall(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback _callback) throws ApiException {
        return restLookupsNaicsCodesGetCall(output, paramCallback, searchTerm, searchCode, _callback);

    }

    /**
     * ECHO NAICS Codes Lookup Service
     * 
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @return RestLookupsNaicsCodesGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of NAICS codes and descriptions based on search term or search code. If search term or search code not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public RestLookupsNaicsCodesGet200Response restLookupsNaicsCodesGet(String output, String paramCallback, String searchTerm, String searchCode) throws ApiException {
        ApiResponse<RestLookupsNaicsCodesGet200Response> localVarResp = restLookupsNaicsCodesGetWithHttpInfo(output, paramCallback, searchTerm, searchCode);
        return localVarResp.getData();
    }

    /**
     * ECHO NAICS Codes Lookup Service
     * 
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @return ApiResponse&lt;RestLookupsNaicsCodesGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of NAICS codes and descriptions based on search term or search code. If search term or search code not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RestLookupsNaicsCodesGet200Response> restLookupsNaicsCodesGetWithHttpInfo(String output, String paramCallback, String searchTerm, String searchCode) throws ApiException {
        okhttp3.Call localVarCall = restLookupsNaicsCodesGetValidateBeforeCall(output, paramCallback, searchTerm, searchCode, null);
        Type localVarReturnType = new TypeToken<RestLookupsNaicsCodesGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * ECHO NAICS Codes Lookup Service (asynchronously)
     * 
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of NAICS codes and descriptions based on search term or search code. If search term or search code not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsNaicsCodesGetAsync(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback<RestLookupsNaicsCodesGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = restLookupsNaicsCodesGetValidateBeforeCall(output, paramCallback, searchTerm, searchCode, _callback);
        Type localVarReturnType = new TypeToken<RestLookupsNaicsCodesGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for restLookupsNaicsCodesPost
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of NAICS codes and descriptions based on search term or search code. If search term or search code not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsNaicsCodesPostCall(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rest_lookups.naics_codes";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        if (searchTerm != null) {
            localVarFormParams.put("search_term", searchTerm);
        }

        if (searchCode != null) {
            localVarFormParams.put("search_code", searchCode);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call restLookupsNaicsCodesPostValidateBeforeCall(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback _callback) throws ApiException {
        return restLookupsNaicsCodesPostCall(output, paramCallback, searchTerm, searchCode, _callback);

    }

    /**
     * ECHO NAICS Codes Lookup Service
     * 
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @return RestLookupsNaicsCodesGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of NAICS codes and descriptions based on search term or search code. If search term or search code not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public RestLookupsNaicsCodesGet200Response restLookupsNaicsCodesPost(String output, String paramCallback, String searchTerm, String searchCode) throws ApiException {
        ApiResponse<RestLookupsNaicsCodesGet200Response> localVarResp = restLookupsNaicsCodesPostWithHttpInfo(output, paramCallback, searchTerm, searchCode);
        return localVarResp.getData();
    }

    /**
     * ECHO NAICS Codes Lookup Service
     * 
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @return ApiResponse&lt;RestLookupsNaicsCodesGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of NAICS codes and descriptions based on search term or search code. If search term or search code not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RestLookupsNaicsCodesGet200Response> restLookupsNaicsCodesPostWithHttpInfo(String output, String paramCallback, String searchTerm, String searchCode) throws ApiException {
        okhttp3.Call localVarCall = restLookupsNaicsCodesPostValidateBeforeCall(output, paramCallback, searchTerm, searchCode, null);
        Type localVarReturnType = new TypeToken<RestLookupsNaicsCodesGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * ECHO NAICS Codes Lookup Service (asynchronously)
     * 
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param searchCode Enter a partial or complete code value. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of NAICS codes and descriptions based on search term or search code. If search term or search code not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsNaicsCodesPostAsync(String output, String paramCallback, String searchTerm, String searchCode, final ApiCallback<RestLookupsNaicsCodesGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = restLookupsNaicsCodesPostValidateBeforeCall(output, paramCallback, searchTerm, searchCode, _callback);
        Type localVarReturnType = new TypeToken<RestLookupsNaicsCodesGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for restLookupsNpdesParametersGet
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of NPDES Parameter Codes and their description that meet the search term. If the search term is not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsNpdesParametersGetCall(String output, String paramCallback, String searchTerm, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rest_lookups.npdes_parameters";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (searchTerm != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search_term", searchTerm));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call restLookupsNpdesParametersGetValidateBeforeCall(String output, String paramCallback, String searchTerm, final ApiCallback _callback) throws ApiException {
        return restLookupsNpdesParametersGetCall(output, paramCallback, searchTerm, _callback);

    }

    /**
     * ECHO NPDES Parameters Lookup Service
     * ICIS Limit Parameter Code and Name lookup based on the supply of a partial parameter name. (NPDES &#x3D; National Pollutant Discharge Elimination System)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @return RestLookupsNpdesParametersGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of NPDES Parameter Codes and their description that meet the search term. If the search term is not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public RestLookupsNpdesParametersGet200Response restLookupsNpdesParametersGet(String output, String paramCallback, String searchTerm) throws ApiException {
        ApiResponse<RestLookupsNpdesParametersGet200Response> localVarResp = restLookupsNpdesParametersGetWithHttpInfo(output, paramCallback, searchTerm);
        return localVarResp.getData();
    }

    /**
     * ECHO NPDES Parameters Lookup Service
     * ICIS Limit Parameter Code and Name lookup based on the supply of a partial parameter name. (NPDES &#x3D; National Pollutant Discharge Elimination System)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @return ApiResponse&lt;RestLookupsNpdesParametersGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of NPDES Parameter Codes and their description that meet the search term. If the search term is not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RestLookupsNpdesParametersGet200Response> restLookupsNpdesParametersGetWithHttpInfo(String output, String paramCallback, String searchTerm) throws ApiException {
        okhttp3.Call localVarCall = restLookupsNpdesParametersGetValidateBeforeCall(output, paramCallback, searchTerm, null);
        Type localVarReturnType = new TypeToken<RestLookupsNpdesParametersGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * ECHO NPDES Parameters Lookup Service (asynchronously)
     * ICIS Limit Parameter Code and Name lookup based on the supply of a partial parameter name. (NPDES &#x3D; National Pollutant Discharge Elimination System)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of NPDES Parameter Codes and their description that meet the search term. If the search term is not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsNpdesParametersGetAsync(String output, String paramCallback, String searchTerm, final ApiCallback<RestLookupsNpdesParametersGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = restLookupsNpdesParametersGetValidateBeforeCall(output, paramCallback, searchTerm, _callback);
        Type localVarReturnType = new TypeToken<RestLookupsNpdesParametersGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for restLookupsNpdesParametersPost
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of NPDES Parameter Codes and their description that meet the search term. If the search term is not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsNpdesParametersPostCall(String output, String paramCallback, String searchTerm, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rest_lookups.npdes_parameters";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        if (searchTerm != null) {
            localVarFormParams.put("search_term", searchTerm);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call restLookupsNpdesParametersPostValidateBeforeCall(String output, String paramCallback, String searchTerm, final ApiCallback _callback) throws ApiException {
        return restLookupsNpdesParametersPostCall(output, paramCallback, searchTerm, _callback);

    }

    /**
     * ECHO NPDES Parameters Lookup Service
     * ICIS Limit Parameter Code and Name lookup based on the supply of a partial parameter name. (NPDES &#x3D; National Pollutant Discharge Elimination System)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @return RestLookupsNpdesParametersGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of NPDES Parameter Codes and their description that meet the search term. If the search term is not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public RestLookupsNpdesParametersGet200Response restLookupsNpdesParametersPost(String output, String paramCallback, String searchTerm) throws ApiException {
        ApiResponse<RestLookupsNpdesParametersGet200Response> localVarResp = restLookupsNpdesParametersPostWithHttpInfo(output, paramCallback, searchTerm);
        return localVarResp.getData();
    }

    /**
     * ECHO NPDES Parameters Lookup Service
     * ICIS Limit Parameter Code and Name lookup based on the supply of a partial parameter name. (NPDES &#x3D; National Pollutant Discharge Elimination System)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @return ApiResponse&lt;RestLookupsNpdesParametersGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of NPDES Parameter Codes and their description that meet the search term. If the search term is not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RestLookupsNpdesParametersGet200Response> restLookupsNpdesParametersPostWithHttpInfo(String output, String paramCallback, String searchTerm) throws ApiException {
        okhttp3.Call localVarCall = restLookupsNpdesParametersPostValidateBeforeCall(output, paramCallback, searchTerm, null);
        Type localVarReturnType = new TypeToken<RestLookupsNpdesParametersGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * ECHO NPDES Parameters Lookup Service (asynchronously)
     * ICIS Limit Parameter Code and Name lookup based on the supply of a partial parameter name. (NPDES &#x3D; National Pollutant Discharge Elimination System)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param searchTerm Enter a partial or complete search phrase or word. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of NPDES Parameter Codes and their description that meet the search term. If the search term is not provided, returns all values. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsNpdesParametersPostAsync(String output, String paramCallback, String searchTerm, final ApiCallback<RestLookupsNpdesParametersGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = restLookupsNpdesParametersPostValidateBeforeCall(output, paramCallback, searchTerm, _callback);
        Type localVarReturnType = new TypeToken<RestLookupsNpdesParametersGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for restLookupsWbdCodeLuGet
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param wbdCode Two-digit watershed code [Hydrologic Unit Code (HUC)]. (optional)
     * @param wbdLevel The number of digits of the watershed code [Hydrologic Unit Code (HUC)] returned in the ValueCode. Must be an even number between 4 and 12. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of WBD names and codes based on the WBD code and WBD level provided. If WBD Code not provided, returns all values. ValueCode is the WBD Code containing the number of digits provided in the WBD level. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsWbdCodeLuGetCall(String output, String paramCallback, String wbdCode, String wbdLevel, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rest_lookups.wbd_code_lu";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (wbdCode != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("wbd_code", wbdCode));
        }

        if (wbdLevel != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("wbd_level", wbdLevel));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call restLookupsWbdCodeLuGetValidateBeforeCall(String output, String paramCallback, String wbdCode, String wbdLevel, final ApiCallback _callback) throws ApiException {
        return restLookupsWbdCodeLuGetCall(output, paramCallback, wbdCode, wbdLevel, _callback);

    }

    /**
     * ECHO WBD Code Lookup Service
     * USGS Watershed Boundary Dataset (WBD) Name lookup based on a supplied WBD Code and Watershed Level
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param wbdCode Two-digit watershed code [Hydrologic Unit Code (HUC)]. (optional)
     * @param wbdLevel The number of digits of the watershed code [Hydrologic Unit Code (HUC)] returned in the ValueCode. Must be an even number between 4 and 12. (optional)
     * @return RestLookupsWbdCodeLuGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of WBD names and codes based on the WBD code and WBD level provided. If WBD Code not provided, returns all values. ValueCode is the WBD Code containing the number of digits provided in the WBD level. </td><td>  -  </td></tr>
     </table>
     */
    public RestLookupsWbdCodeLuGet200Response restLookupsWbdCodeLuGet(String output, String paramCallback, String wbdCode, String wbdLevel) throws ApiException {
        ApiResponse<RestLookupsWbdCodeLuGet200Response> localVarResp = restLookupsWbdCodeLuGetWithHttpInfo(output, paramCallback, wbdCode, wbdLevel);
        return localVarResp.getData();
    }

    /**
     * ECHO WBD Code Lookup Service
     * USGS Watershed Boundary Dataset (WBD) Name lookup based on a supplied WBD Code and Watershed Level
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param wbdCode Two-digit watershed code [Hydrologic Unit Code (HUC)]. (optional)
     * @param wbdLevel The number of digits of the watershed code [Hydrologic Unit Code (HUC)] returned in the ValueCode. Must be an even number between 4 and 12. (optional)
     * @return ApiResponse&lt;RestLookupsWbdCodeLuGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of WBD names and codes based on the WBD code and WBD level provided. If WBD Code not provided, returns all values. ValueCode is the WBD Code containing the number of digits provided in the WBD level. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RestLookupsWbdCodeLuGet200Response> restLookupsWbdCodeLuGetWithHttpInfo(String output, String paramCallback, String wbdCode, String wbdLevel) throws ApiException {
        okhttp3.Call localVarCall = restLookupsWbdCodeLuGetValidateBeforeCall(output, paramCallback, wbdCode, wbdLevel, null);
        Type localVarReturnType = new TypeToken<RestLookupsWbdCodeLuGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * ECHO WBD Code Lookup Service (asynchronously)
     * USGS Watershed Boundary Dataset (WBD) Name lookup based on a supplied WBD Code and Watershed Level
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param wbdCode Two-digit watershed code [Hydrologic Unit Code (HUC)]. (optional)
     * @param wbdLevel The number of digits of the watershed code [Hydrologic Unit Code (HUC)] returned in the ValueCode. Must be an even number between 4 and 12. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of WBD names and codes based on the WBD code and WBD level provided. If WBD Code not provided, returns all values. ValueCode is the WBD Code containing the number of digits provided in the WBD level. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsWbdCodeLuGetAsync(String output, String paramCallback, String wbdCode, String wbdLevel, final ApiCallback<RestLookupsWbdCodeLuGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = restLookupsWbdCodeLuGetValidateBeforeCall(output, paramCallback, wbdCode, wbdLevel, _callback);
        Type localVarReturnType = new TypeToken<RestLookupsWbdCodeLuGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for restLookupsWbdCodeLuPost
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param wbdCode Two-digit watershed code [Hydrologic Unit Code (HUC)]. (optional)
     * @param wbdLevel The number of digits of the watershed code [Hydrologic Unit Code (HUC)] returned in the ValueCode. Must be an even number between 4 and 12. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of WBD names and codes based on the WBD code and WBD level provided. If WBD Code not provided, returns all values. ValueCode is the WBD Code containing the number of digits provided in the WBD level. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsWbdCodeLuPostCall(String output, String paramCallback, String wbdCode, String wbdLevel, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rest_lookups.wbd_code_lu";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        if (wbdCode != null) {
            localVarFormParams.put("wbd_code", wbdCode);
        }

        if (wbdLevel != null) {
            localVarFormParams.put("wbd_level", wbdLevel);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call restLookupsWbdCodeLuPostValidateBeforeCall(String output, String paramCallback, String wbdCode, String wbdLevel, final ApiCallback _callback) throws ApiException {
        return restLookupsWbdCodeLuPostCall(output, paramCallback, wbdCode, wbdLevel, _callback);

    }

    /**
     * ECHO WBD Code Lookup Service
     * USGS Watershed Boundary Dataset (WBD) Name lookup based on a supplied WBD Code and Watershed Level
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param wbdCode Two-digit watershed code [Hydrologic Unit Code (HUC)]. (optional)
     * @param wbdLevel The number of digits of the watershed code [Hydrologic Unit Code (HUC)] returned in the ValueCode. Must be an even number between 4 and 12. (optional)
     * @return RestLookupsWbdCodeLuGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of WBD names and codes based on the WBD code and WBD level provided. If WBD Code not provided, returns all values. ValueCode is the WBD Code containing the number of digits provided in the WBD level. </td><td>  -  </td></tr>
     </table>
     */
    public RestLookupsWbdCodeLuGet200Response restLookupsWbdCodeLuPost(String output, String paramCallback, String wbdCode, String wbdLevel) throws ApiException {
        ApiResponse<RestLookupsWbdCodeLuGet200Response> localVarResp = restLookupsWbdCodeLuPostWithHttpInfo(output, paramCallback, wbdCode, wbdLevel);
        return localVarResp.getData();
    }

    /**
     * ECHO WBD Code Lookup Service
     * USGS Watershed Boundary Dataset (WBD) Name lookup based on a supplied WBD Code and Watershed Level
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param wbdCode Two-digit watershed code [Hydrologic Unit Code (HUC)]. (optional)
     * @param wbdLevel The number of digits of the watershed code [Hydrologic Unit Code (HUC)] returned in the ValueCode. Must be an even number between 4 and 12. (optional)
     * @return ApiResponse&lt;RestLookupsWbdCodeLuGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of WBD names and codes based on the WBD code and WBD level provided. If WBD Code not provided, returns all values. ValueCode is the WBD Code containing the number of digits provided in the WBD level. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RestLookupsWbdCodeLuGet200Response> restLookupsWbdCodeLuPostWithHttpInfo(String output, String paramCallback, String wbdCode, String wbdLevel) throws ApiException {
        okhttp3.Call localVarCall = restLookupsWbdCodeLuPostValidateBeforeCall(output, paramCallback, wbdCode, wbdLevel, null);
        Type localVarReturnType = new TypeToken<RestLookupsWbdCodeLuGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * ECHO WBD Code Lookup Service (asynchronously)
     * USGS Watershed Boundary Dataset (WBD) Name lookup based on a supplied WBD Code and Watershed Level
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param wbdCode Two-digit watershed code [Hydrologic Unit Code (HUC)]. (optional)
     * @param wbdLevel The number of digits of the watershed code [Hydrologic Unit Code (HUC)] returned in the ValueCode. Must be an even number between 4 and 12. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of WBD names and codes based on the WBD code and WBD level provided. If WBD Code not provided, returns all values. ValueCode is the WBD Code containing the number of digits provided in the WBD level. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsWbdCodeLuPostAsync(String output, String paramCallback, String wbdCode, String wbdLevel, final ApiCallback<RestLookupsWbdCodeLuGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = restLookupsWbdCodeLuPostValidateBeforeCall(output, paramCallback, wbdCode, wbdLevel, _callback);
        Type localVarReturnType = new TypeToken<RestLookupsWbdCodeLuGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for restLookupsWbdNameLuGet
     * @param wbdName Watershed Name Filter. (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param wbdLevel The number of digits of the watershed code [Hydrologic Unit Code (HUC)] returned in the ValueCode. Must be an even number between 4 and 12. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of WBD names and codes based on the WBD name and WBD level provided. ValueCode is the WBD Code containing the number of digits provided in the WBD level. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsWbdNameLuGetCall(String wbdName, String output, String paramCallback, String wbdLevel, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rest_lookups.wbd_name_lu";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (wbdName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("wbd_name", wbdName));
        }

        if (wbdLevel != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("wbd_level", wbdLevel));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call restLookupsWbdNameLuGetValidateBeforeCall(String wbdName, String output, String paramCallback, String wbdLevel, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'wbdName' is set
        if (wbdName == null) {
            throw new ApiException("Missing the required parameter 'wbdName' when calling restLookupsWbdNameLuGet(Async)");
        }

        return restLookupsWbdNameLuGetCall(wbdName, output, paramCallback, wbdLevel, _callback);

    }

    /**
     * ECHO WBD Name Lookup Service
     * USGS Watershed Boundary Dataset (WBD) Code lookup based on a supplied WBD Name and Watershed Level
     * @param wbdName Watershed Name Filter. (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param wbdLevel The number of digits of the watershed code [Hydrologic Unit Code (HUC)] returned in the ValueCode. Must be an even number between 4 and 12. (optional)
     * @return RestLookupsWbdNameLuGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of WBD names and codes based on the WBD name and WBD level provided. ValueCode is the WBD Code containing the number of digits provided in the WBD level. </td><td>  -  </td></tr>
     </table>
     */
    public RestLookupsWbdNameLuGet200Response restLookupsWbdNameLuGet(String wbdName, String output, String paramCallback, String wbdLevel) throws ApiException {
        ApiResponse<RestLookupsWbdNameLuGet200Response> localVarResp = restLookupsWbdNameLuGetWithHttpInfo(wbdName, output, paramCallback, wbdLevel);
        return localVarResp.getData();
    }

    /**
     * ECHO WBD Name Lookup Service
     * USGS Watershed Boundary Dataset (WBD) Code lookup based on a supplied WBD Name and Watershed Level
     * @param wbdName Watershed Name Filter. (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param wbdLevel The number of digits of the watershed code [Hydrologic Unit Code (HUC)] returned in the ValueCode. Must be an even number between 4 and 12. (optional)
     * @return ApiResponse&lt;RestLookupsWbdNameLuGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of WBD names and codes based on the WBD name and WBD level provided. ValueCode is the WBD Code containing the number of digits provided in the WBD level. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RestLookupsWbdNameLuGet200Response> restLookupsWbdNameLuGetWithHttpInfo(String wbdName, String output, String paramCallback, String wbdLevel) throws ApiException {
        okhttp3.Call localVarCall = restLookupsWbdNameLuGetValidateBeforeCall(wbdName, output, paramCallback, wbdLevel, null);
        Type localVarReturnType = new TypeToken<RestLookupsWbdNameLuGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * ECHO WBD Name Lookup Service (asynchronously)
     * USGS Watershed Boundary Dataset (WBD) Code lookup based on a supplied WBD Name and Watershed Level
     * @param wbdName Watershed Name Filter. (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param wbdLevel The number of digits of the watershed code [Hydrologic Unit Code (HUC)] returned in the ValueCode. Must be an even number between 4 and 12. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of WBD names and codes based on the WBD name and WBD level provided. ValueCode is the WBD Code containing the number of digits provided in the WBD level. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsWbdNameLuGetAsync(String wbdName, String output, String paramCallback, String wbdLevel, final ApiCallback<RestLookupsWbdNameLuGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = restLookupsWbdNameLuGetValidateBeforeCall(wbdName, output, paramCallback, wbdLevel, _callback);
        Type localVarReturnType = new TypeToken<RestLookupsWbdNameLuGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for restLookupsWbdNameLuPost
     * @param wbdName Watershed Name Filter. (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param wbdLevel The number of digits of the watershed code [Hydrologic Unit Code (HUC)] returned in the ValueCode. Must be an even number between 4 and 12. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of WBD names and codes based on the WBD name and WBD level provided. ValueCode is the WBD Code containing the number of digits provided in the WBD level. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsWbdNameLuPostCall(String wbdName, String output, String paramCallback, String wbdLevel, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rest_lookups.wbd_name_lu";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        if (wbdName != null) {
            localVarFormParams.put("wbd_name", wbdName);
        }

        if (wbdLevel != null) {
            localVarFormParams.put("wbd_level", wbdLevel);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call restLookupsWbdNameLuPostValidateBeforeCall(String wbdName, String output, String paramCallback, String wbdLevel, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'wbdName' is set
        if (wbdName == null) {
            throw new ApiException("Missing the required parameter 'wbdName' when calling restLookupsWbdNameLuPost(Async)");
        }

        return restLookupsWbdNameLuPostCall(wbdName, output, paramCallback, wbdLevel, _callback);

    }

    /**
     * ECHO WBD Name Lookup Service
     * USGS Watershed Boundary Dataset (WBD) Code lookup based on a supplied WBD Name and Watershed Level
     * @param wbdName Watershed Name Filter. (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param wbdLevel The number of digits of the watershed code [Hydrologic Unit Code (HUC)] returned in the ValueCode. Must be an even number between 4 and 12. (optional)
     * @return RestLookupsWbdNameLuGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of WBD names and codes based on the WBD name and WBD level provided. ValueCode is the WBD Code containing the number of digits provided in the WBD level. </td><td>  -  </td></tr>
     </table>
     */
    public RestLookupsWbdNameLuGet200Response restLookupsWbdNameLuPost(String wbdName, String output, String paramCallback, String wbdLevel) throws ApiException {
        ApiResponse<RestLookupsWbdNameLuGet200Response> localVarResp = restLookupsWbdNameLuPostWithHttpInfo(wbdName, output, paramCallback, wbdLevel);
        return localVarResp.getData();
    }

    /**
     * ECHO WBD Name Lookup Service
     * USGS Watershed Boundary Dataset (WBD) Code lookup based on a supplied WBD Name and Watershed Level
     * @param wbdName Watershed Name Filter. (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param wbdLevel The number of digits of the watershed code [Hydrologic Unit Code (HUC)] returned in the ValueCode. Must be an even number between 4 and 12. (optional)
     * @return ApiResponse&lt;RestLookupsWbdNameLuGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of WBD names and codes based on the WBD name and WBD level provided. ValueCode is the WBD Code containing the number of digits provided in the WBD level. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RestLookupsWbdNameLuGet200Response> restLookupsWbdNameLuPostWithHttpInfo(String wbdName, String output, String paramCallback, String wbdLevel) throws ApiException {
        okhttp3.Call localVarCall = restLookupsWbdNameLuPostValidateBeforeCall(wbdName, output, paramCallback, wbdLevel, null);
        Type localVarReturnType = new TypeToken<RestLookupsWbdNameLuGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * ECHO WBD Name Lookup Service (asynchronously)
     * USGS Watershed Boundary Dataset (WBD) Code lookup based on a supplied WBD Name and Watershed Level
     * @param wbdName Watershed Name Filter. (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param wbdLevel The number of digits of the watershed code [Hydrologic Unit Code (HUC)] returned in the ValueCode. Must be an even number between 4 and 12. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of WBD names and codes based on the WBD name and WBD level provided. ValueCode is the WBD Code containing the number of digits provided in the WBD level. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call restLookupsWbdNameLuPostAsync(String wbdName, String output, String paramCallback, String wbdLevel, final ApiCallback<RestLookupsWbdNameLuGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = restLookupsWbdNameLuPostValidateBeforeCall(wbdName, output, paramCallback, wbdLevel, _callback);
        Type localVarReturnType = new TypeToken<RestLookupsWbdNameLuGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
