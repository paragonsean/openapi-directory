# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FormDataFPImpCauGrp(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ALGAL_GROWTH = 'ALGAL GROWTH'
    AMMONIA = 'AMMONIA'
    BIOTOXINS = 'BIOTOXINS'
    CAUSE_UNKNOWN = 'CAUSE UNKNOWN'
    CAUSE_UNKNOWN_MINUS__FISH_KILLS = 'CAUSE UNKNOWN - FISH KILLS'
    CAUSE_UNKNOWN_MINUS__IMPAIRED_BIOTA = 'CAUSE UNKNOWN - IMPAIRED BIOTA'
    CHLORINE = 'CHLORINE'
    DIOXINS = 'DIOXINS'
    FISH_CONSUMPTION_ADVISORY = 'FISH CONSUMPTION ADVISORY'
    FLOW_ALTERATION_LEFT_PARENTHESIS_S_RIGHT_PARENTHESIS = 'FLOW ALTERATION(S)'
    HABITAT_ALTERATIONS = 'HABITAT ALTERATIONS'
    MERCURY = 'MERCURY'
    METALS_LEFT_PARENTHESIS_OTHER_THAN_MERCURY_RIGHT_PARENTHESIS = 'METALS (OTHER THAN MERCURY)'
    NOXIOUS_AQUATIC_PLANTS = 'NOXIOUS AQUATIC PLANTS'
    NUISANCE_EXOTIC_SPECIES = 'NUISANCE EXOTIC SPECIES'
    NUISANCE_NATIVE_SPECIES = 'NUISANCE NATIVE SPECIES'
    NUTRIENTS = 'NUTRIENTS'
    OIL_AND_GREASE = 'OIL AND GREASE'
    ORGANIC_ENRICHMENT_SLASH_OXYGEN_DEPLETION = 'ORGANIC ENRICHMENT/OXYGEN DEPLETION'
    OTHER_CAUSE = 'OTHER CAUSE'
    PATHOGENS = 'PATHOGENS'
    PESTICIDES = 'PESTICIDES'
    PH_SLASH_ACIDITY_SLASH_CAUSTIC_CONDITIONS = 'PH/ACIDITY/CAUSTIC CONDITIONS'
    POLYCHLORINATED_BIPHENYLS_LEFT_PARENTHESIS_PCBS_RIGHT_PARENTHESIS = 'POLYCHLORINATED BIPHENYLS (PCBS)'
    RADIATION = 'RADIATION'
    SALINITY_SLASH_TOTAL_DISSOLVED_SOLIDS_SLASH_CHLORIDES_SLASH_SULFATES = 'SALINITY/TOTAL DISSOLVED SOLIDS/CHLORIDES/SULFATES'
    SEDIMENT = 'SEDIMENT'
    TASTE_COMMA__COLOR_AND_ODOR = 'TASTE, COLOR AND ODOR'
    TEMPERATURE = 'TEMPERATURE'
    TOTAL_TOXICS = 'TOTAL TOXICS'
    TOXIC_INORGANICS = 'TOXIC INORGANICS'
    TOXIC_ORGANICS = 'TOXIC ORGANICS'
    TRASH = 'TRASH'
    TURBIDITY = 'TURBIDITY'

    def __init__(self):
        """FormDataFPImpCauGrp - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FormDataFPImpCauGrp':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The formData_f.p_imp_cau_grp of this FormDataFPImpCauGrp.
        """
        return util.deserialize_model(dikt, cls)
