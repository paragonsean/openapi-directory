/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Resource Conservation and Recovery Act 
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.    RCRA Rest Services provides multiple service endpoints, each with specific capabilities, to search and retrieve data on hazardous waste handlers/facilities regulated under the Resource Conservation and Recovery Act (RCRA).   The returned results reflect data drawn from EPA's RCRAInfo database. \\ The get_facilities, get_map, get_qid, and get_download end points are meant to be used together, while the enhanced get_facility_info end point is self contained.   The get_facility_info end point returns either an array of state, county or zip clusters with summary statistics per cluster or an array of facilities. \\ The recommended use scenario for get_facilities, get_qid, get_map, and get_downoad is: \\  <b>1)</b>  Use get_facilities to validate passed query parameters, obtain summary statistics and to obtain a query_id (QID).  QIDs are time sensitive and will be valid for approximately 30 minutes.  <b>2)</b>  Use get_qid, with the returned QID, to paginate through arrays of facility results.  <b>3)</b>  Use get_map, with the returned QID, to zoom in/out and pan on the clustered and individual facility coordinates that meet the QID query criteria.  <b>4)</b>  Use get_download, with the returned QID, to generate a Comma Separated Value (CSV) file of facility information that meets the QID query criteria. \\ \\ Use the qcolumns parameter to customize your search results.  Use the Metadata service endpoint for a list of available output objects, their Column Ids, and their definitions to help you build your customized output.  \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 2019.10.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.USEpaEnforcementAndComplianceHistoryOnlineEchoResourceConservationAndRecoveryAct);
  }
}(this, function(expect, USEpaEnforcementAndComplianceHistoryOnlineEchoResourceConservationAndRecoveryAct) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoResourceConservationAndRecoveryAct.ResourceConservationAndRecoveryActApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ResourceConservationAndRecoveryActApi', function() {
    describe('rcraRestServicesGetDownloadGet', function() {
      it('should call rcraRestServicesGetDownloadGet successfully', function(done) {
        //uncomment below and update the code to test rcraRestServicesGetDownloadGet
        //instance.rcraRestServicesGetDownloadGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rcraRestServicesGetDownloadPost', function() {
      it('should call rcraRestServicesGetDownloadPost successfully', function(done) {
        //uncomment below and update the code to test rcraRestServicesGetDownloadPost
        //instance.rcraRestServicesGetDownloadPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rcraRestServicesGetFacilitiesGet', function() {
      it('should call rcraRestServicesGetFacilitiesGet successfully', function(done) {
        //uncomment below and update the code to test rcraRestServicesGetFacilitiesGet
        //instance.rcraRestServicesGetFacilitiesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rcraRestServicesGetFacilitiesPost', function() {
      it('should call rcraRestServicesGetFacilitiesPost successfully', function(done) {
        //uncomment below and update the code to test rcraRestServicesGetFacilitiesPost
        //instance.rcraRestServicesGetFacilitiesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rcraRestServicesGetFacilityInfoGet', function() {
      it('should call rcraRestServicesGetFacilityInfoGet successfully', function(done) {
        //uncomment below and update the code to test rcraRestServicesGetFacilityInfoGet
        //instance.rcraRestServicesGetFacilityInfoGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rcraRestServicesGetFacilityInfoPost', function() {
      it('should call rcraRestServicesGetFacilityInfoPost successfully', function(done) {
        //uncomment below and update the code to test rcraRestServicesGetFacilityInfoPost
        //instance.rcraRestServicesGetFacilityInfoPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rcraRestServicesGetGeojsonGet', function() {
      it('should call rcraRestServicesGetGeojsonGet successfully', function(done) {
        //uncomment below and update the code to test rcraRestServicesGetGeojsonGet
        //instance.rcraRestServicesGetGeojsonGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rcraRestServicesGetGeojsonPost', function() {
      it('should call rcraRestServicesGetGeojsonPost successfully', function(done) {
        //uncomment below and update the code to test rcraRestServicesGetGeojsonPost
        //instance.rcraRestServicesGetGeojsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rcraRestServicesGetInfoClustersGet', function() {
      it('should call rcraRestServicesGetInfoClustersGet successfully', function(done) {
        //uncomment below and update the code to test rcraRestServicesGetInfoClustersGet
        //instance.rcraRestServicesGetInfoClustersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rcraRestServicesGetInfoClustersPost', function() {
      it('should call rcraRestServicesGetInfoClustersPost successfully', function(done) {
        //uncomment below and update the code to test rcraRestServicesGetInfoClustersPost
        //instance.rcraRestServicesGetInfoClustersPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rcraRestServicesGetMapGet', function() {
      it('should call rcraRestServicesGetMapGet successfully', function(done) {
        //uncomment below and update the code to test rcraRestServicesGetMapGet
        //instance.rcraRestServicesGetMapGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rcraRestServicesGetMapPost', function() {
      it('should call rcraRestServicesGetMapPost successfully', function(done) {
        //uncomment below and update the code to test rcraRestServicesGetMapPost
        //instance.rcraRestServicesGetMapPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rcraRestServicesGetQidGet', function() {
      it('should call rcraRestServicesGetQidGet successfully', function(done) {
        //uncomment below and update the code to test rcraRestServicesGetQidGet
        //instance.rcraRestServicesGetQidGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rcraRestServicesGetQidPost', function() {
      it('should call rcraRestServicesGetQidPost successfully', function(done) {
        //uncomment below and update the code to test rcraRestServicesGetQidPost
        //instance.rcraRestServicesGetQidPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
