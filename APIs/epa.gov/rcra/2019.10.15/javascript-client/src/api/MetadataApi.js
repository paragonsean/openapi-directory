/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Resource Conservation and Recovery Act 
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.    RCRA Rest Services provides multiple service endpoints, each with specific capabilities, to search and retrieve data on hazardous waste handlers/facilities regulated under the Resource Conservation and Recovery Act (RCRA).   The returned results reflect data drawn from EPA's RCRAInfo database. \\ The get_facilities, get_map, get_qid, and get_download end points are meant to be used together, while the enhanced get_facility_info end point is self contained.   The get_facility_info end point returns either an array of state, county or zip clusters with summary statistics per cluster or an array of facilities. \\ The recommended use scenario for get_facilities, get_qid, get_map, and get_downoad is: \\  <b>1)</b>  Use get_facilities to validate passed query parameters, obtain summary statistics and to obtain a query_id (QID).  QIDs are time sensitive and will be valid for approximately 30 minutes.  <b>2)</b>  Use get_qid, with the returned QID, to paginate through arrays of facility results.  <b>3)</b>  Use get_map, with the returned QID, to zoom in/out and pan on the clustered and individual facility coordinates that meet the QID query criteria.  <b>4)</b>  Use get_download, with the returned QID, to generate a Comma Separated Value (CSV) file of facility information that meets the QID query criteria. \\ \\ Use the qcolumns parameter to customize your search results.  Use the Metadata service endpoint for a list of available output objects, their Column Ids, and their definitions to help you build your customized output.  \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 2019.10.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RcraRestServicesMetadataGet200Response from '../model/RcraRestServicesMetadataGet200Response';

/**
* Metadata service.
* @module api/MetadataApi
* @version 2019.10.15
*/
export default class MetadataApi {

    /**
    * Constructs a new MetadataApi. 
    * @alias module:api/MetadataApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the rcraRestServicesMetadataGet operation.
     * @callback module:api/MetadataApi~rcraRestServicesMetadataGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RcraRestServicesMetadataGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Resource Conservation and Recovery Act (RCRA) Metadata Service
     * Returns the JSON Object Name and ColumnId for usage with the qcolumns parameter for get_qid, get_facility_info and other service endpoints.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/MetadataApi~rcraRestServicesMetadataGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RcraRestServicesMetadataGet200Response}
     */
    rcraRestServicesMetadataGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = RcraRestServicesMetadataGet200Response;
      return this.apiClient.callApi(
        '/rcra_rest_services.metadata', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the rcraRestServicesMetadataPost operation.
     * @callback module:api/MetadataApi~rcraRestServicesMetadataPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RcraRestServicesMetadataGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Resource Conservation and Recovery Act (RCRA) Metadata Service
     * Returns the JSON Object Name and ColumnId for usage with the qcolumns parameter for get_qid, get_facility_info and other service endpoints.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/MetadataApi~rcraRestServicesMetadataPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RcraRestServicesMetadataGet200Response}
     */
    rcraRestServicesMetadataPost(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = RcraRestServicesMetadataGet200Response;
      return this.apiClient.callApi(
        '/rcra_rest_services.metadata', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
