/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Clean Air Act
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  Air Rest Services provides multiple service endpoints, each with specific capabilities, to search and retrieve data on facilities regulated under the Clean Air Act (CAA). The returned results reflect data drawn from EPA's ICIS-Air database.  The get_facilities, get_map, get_qid, and get_download end points are meant to be used together, while the enhanced get_facility_info end point is self contained. The get_facility_info end point returns either an array of state, county or zip clusters with summary statistics per cluster or an array of facilities.  The recommended use scenario for get_facilities, get_qid, get_map, and get_downoad is:  <b>1)</b>  Use get_facilities to validate passed query parameters, obtain summary statistics and to obtain a query_id (QID).  QIDs are time sensitive and will be valid for approximately 30 minutes. <b>2)</b>  Use get_qid, with the returned QID, to paginate through arrays of facility results. <b>3)</b>  Use get_map, with the returned QID, to zoom in/out and pan on the clustered and individual facility coordinates that meet the QID query criteria. <b>4)</b>  Use get_download, with the returned QID, to generate a Comma Separated Value (CSV) file of facility information that meets the QID query criteria.  Use the qcolumns parameter to customize your search results.  Use the Metadata service endpoint for a list of available output objects, their Column Ids, and their definitions to help you build your customized output.   Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>
 *
 * The version of the OpenAPI document: 2019.10.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.USEpaEnforcementAndComplianceHistoryOnlineEchoCleanAirAct);
  }
}(this, function(expect, USEpaEnforcementAndComplianceHistoryOnlineEchoCleanAirAct) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoCleanAirAct.Air00();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Air00', function() {
    it('should create an instance of Air00', function() {
      // uncomment below and update the code to test Air00
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoCleanAirAct.Air00();
      //expect(instance).to.be.a(USEpaEnforcementAndComplianceHistoryOnlineEchoCleanAirAct.Air00);
    });

    it('should have the property cVRows (base name: "CVRows")', function() {
      // uncomment below and update the code to test the property cVRows
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoCleanAirAct.Air00();
      //expect(instance).to.be();
    });

    it('should have the property clusterCount (base name: "ClusterCount")', function() {
      // uncomment below and update the code to test the property clusterCount
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoCleanAirAct.Air00();
      //expect(instance).to.be();
    });

    it('should have the property clusterIcon (base name: "ClusterIcon")', function() {
      // uncomment below and update the code to test the property clusterIcon
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoCleanAirAct.Air00();
      //expect(instance).to.be();
    });

    it('should have the property clusterLatitude (base name: "ClusterLatitude")', function() {
      // uncomment below and update the code to test the property clusterLatitude
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoCleanAirAct.Air00();
      //expect(instance).to.be();
    });

    it('should have the property clusterLongitude (base name: "ClusterLongitude")', function() {
      // uncomment below and update the code to test the property clusterLongitude
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoCleanAirAct.Air00();
      //expect(instance).to.be();
    });

    it('should have the property clusterName (base name: "ClusterName")', function() {
      // uncomment below and update the code to test the property clusterName
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoCleanAirAct.Air00();
      //expect(instance).to.be();
    });

    it('should have the property clusterType (base name: "ClusterType")', function() {
      // uncomment below and update the code to test the property clusterType
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoCleanAirAct.Air00();
      //expect(instance).to.be();
    });

    it('should have the property clusterValue (base name: "ClusterValue")', function() {
      // uncomment below and update the code to test the property clusterValue
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoCleanAirAct.Air00();
      //expect(instance).to.be();
    });

    it('should have the property ePARegionCode (base name: "EPARegionCode")', function() {
      // uncomment below and update the code to test the property ePARegionCode
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoCleanAirAct.Air00();
      //expect(instance).to.be();
    });

    it('should have the property fEARows (base name: "FEARows")', function() {
      // uncomment below and update the code to test the property fEARows
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoCleanAirAct.Air00();
      //expect(instance).to.be();
    });

    it('should have the property iNSPRows (base name: "INSPRows")', function() {
      // uncomment below and update the code to test the property iNSPRows
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoCleanAirAct.Air00();
      //expect(instance).to.be();
    });

    it('should have the property indianCountryRows (base name: "IndianCountryRows")', function() {
      // uncomment below and update the code to test the property indianCountryRows
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoCleanAirAct.Air00();
      //expect(instance).to.be();
    });

    it('should have the property infFEARows (base name: "InfFEARows")', function() {
      // uncomment below and update the code to test the property infFEARows
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoCleanAirAct.Air00();
      //expect(instance).to.be();
    });

    it('should have the property objectId (base name: "ObjectId")', function() {
      // uncomment below and update the code to test the property objectId
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoCleanAirAct.Air00();
      //expect(instance).to.be();
    });

    it('should have the property sVRows (base name: "SVRows")', function() {
      // uncomment below and update the code to test the property sVRows
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoCleanAirAct.Air00();
      //expect(instance).to.be();
    });

    it('should have the property totalPenalties (base name: "TotalPenalties")', function() {
      // uncomment below and update the code to test the property totalPenalties
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoCleanAirAct.Air00();
      //expect(instance).to.be();
    });

    it('should have the property v3Rows (base name: "V3Rows")', function() {
      // uncomment below and update the code to test the property v3Rows
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoCleanAirAct.Air00();
      //expect(instance).to.be();
    });

  });

}));
