/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Clean Air Act
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  Air Rest Services provides multiple service endpoints, each with specific capabilities, to search and retrieve data on facilities regulated under the Clean Air Act (CAA). The returned results reflect data drawn from EPA's ICIS-Air database.  The get_facilities, get_map, get_qid, and get_download end points are meant to be used together, while the enhanced get_facility_info end point is self contained. The get_facility_info end point returns either an array of state, county or zip clusters with summary statistics per cluster or an array of facilities.  The recommended use scenario for get_facilities, get_qid, get_map, and get_downoad is:  <b>1)</b>  Use get_facilities to validate passed query parameters, obtain summary statistics and to obtain a query_id (QID).  QIDs are time sensitive and will be valid for approximately 30 minutes. <b>2)</b>  Use get_qid, with the returned QID, to paginate through arrays of facility results. <b>3)</b>  Use get_map, with the returned QID, to zoom in/out and pan on the clustered and individual facility coordinates that meet the QID query criteria. <b>4)</b>  Use get_download, with the returned QID, to generate a Comma Separated Value (CSV) file of facility information that meets the QID query criteria.  Use the qcolumns parameter to customize your search results.  Use the Metadata service endpoint for a list of available output objects, their Column Ids, and their definitions to help you build your customized output.   Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>
 *
 * The version of the OpenAPI document: 2019.10.15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAir05.h
 *
 * Results Object
 */

#ifndef OAIAir05_H
#define OAIAir05_H

#include <QJsonObject>

#include "OAIAir03.h"
#include "OAIAir04.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAir03;
class OAIAir04;

class OAIAir05 : public OAIObject {
public:
    OAIAir05();
    OAIAir05(QString json);
    ~OAIAir05() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBadSystemIds() const;
    void setBadSystemIds(const QString &bad_system_ids);
    bool is_bad_system_ids_Set() const;
    bool is_bad_system_ids_Valid() const;

    QString getCvRows() const;
    void setCvRows(const QString &cv_rows);
    bool is_cv_rows_Set() const;
    bool is_cv_rows_Valid() const;

    QString getFeaRows() const;
    void setFeaRows(const QString &fea_rows);
    bool is_fea_rows_Set() const;
    bool is_fea_rows_Valid() const;

    QList<OAIAir03> getFacilities() const;
    void setFacilities(const QList<OAIAir03> &facilities);
    bool is_facilities_Set() const;
    bool is_facilities_Valid() const;

    QString getInspRows() const;
    void setInspRows(const QString &insp_rows);
    bool is_insp_rows_Set() const;
    bool is_insp_rows_Valid() const;

    QString getIndianCountryRows() const;
    void setIndianCountryRows(const QString &indian_country_rows);
    bool is_indian_country_rows_Set() const;
    bool is_indian_country_rows_Valid() const;

    QString getInfFeaRows() const;
    void setInfFeaRows(const QString &inf_fea_rows);
    bool is_inf_fea_rows_Set() const;
    bool is_inf_fea_rows_Valid() const;

    OAIAir04 getMapOutput() const;
    void setMapOutput(const OAIAir04 &map_output);
    bool is_map_output_Set() const;
    bool is_map_output_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getPageNo() const;
    void setPageNo(const QString &page_no);
    bool is_page_no_Set() const;
    bool is_page_no_Valid() const;

    QString getQueryId() const;
    void setQueryId(const QString &query_id);
    bool is_query_id_Set() const;
    bool is_query_id_Valid() const;

    QString getQueryRows() const;
    void setQueryRows(const QString &query_rows);
    bool is_query_rows_Set() const;
    bool is_query_rows_Valid() const;

    QString getSvRows() const;
    void setSvRows(const QString &sv_rows);
    bool is_sv_rows_Set() const;
    bool is_sv_rows_Valid() const;

    QString getTotalPenalties() const;
    void setTotalPenalties(const QString &total_penalties);
    bool is_total_penalties_Set() const;
    bool is_total_penalties_Valid() const;

    QString getV3Rows() const;
    void setV3Rows(const QString &v3_rows);
    bool is_v3_rows_Set() const;
    bool is_v3_rows_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bad_system_ids;
    bool m_bad_system_ids_isSet;
    bool m_bad_system_ids_isValid;

    QString m_cv_rows;
    bool m_cv_rows_isSet;
    bool m_cv_rows_isValid;

    QString m_fea_rows;
    bool m_fea_rows_isSet;
    bool m_fea_rows_isValid;

    QList<OAIAir03> m_facilities;
    bool m_facilities_isSet;
    bool m_facilities_isValid;

    QString m_insp_rows;
    bool m_insp_rows_isSet;
    bool m_insp_rows_isValid;

    QString m_indian_country_rows;
    bool m_indian_country_rows_isSet;
    bool m_indian_country_rows_isValid;

    QString m_inf_fea_rows;
    bool m_inf_fea_rows_isSet;
    bool m_inf_fea_rows_isValid;

    OAIAir04 m_map_output;
    bool m_map_output_isSet;
    bool m_map_output_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_page_no;
    bool m_page_no_isSet;
    bool m_page_no_isValid;

    QString m_query_id;
    bool m_query_id_isSet;
    bool m_query_id_isValid;

    QString m_query_rows;
    bool m_query_rows_isSet;
    bool m_query_rows_isValid;

    QString m_sv_rows;
    bool m_sv_rows_isSet;
    bool m_sv_rows_isValid;

    QString m_total_penalties;
    bool m_total_penalties_isSet;
    bool m_total_penalties_isValid;

    QString m_v3_rows;
    bool m_v3_rows_isSet;
    bool m_v3_rows_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAir05)

#endif // OAIAir05_H
