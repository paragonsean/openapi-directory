/*
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Safe Drinking Water Act
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.    SDW Rest Services provides multiple service endpoints, each with specific capabilities, to search and retrieve data on public water systems regulated under the Safe Drinking Water Act (SDWA).  The returned results reflect data drawn from EPA's Federal Safe Drinking Water Information System (SDWIS) database. \\ The get_systems, get_qid, and get_download end points are meant to be used together. \\ The recommended use scenario for get_systems, get_qid, and get_downoad is: \\  <b>1)</b>  Use get_systems to validate passed query parameters, obtain summary statistics and to obtain a query_id (QID).  QIDs are time sensitive and will be valid for approximately 30 minutes.  <b>2)</b>  Use get_qid, with the returned QID, to paginate through arrays of water system results.  <b>3)</b>  Use get_download, with the returned QID, to generate a Comma Separated Value (CSV) file of water system information that meets the QID query criteria. \\ \\ Use the qcolumns parameter to customize your search results.  Use the Metadata service endpoint for a list of available output objects, their Column Ids, and their definitions to help you build your customized output.  \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 2019.10.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import java.math.BigDecimal;
import java.io.File;
import org.openapitools.client.model.SdwRestServicesGetQidGet200Response;
import org.openapitools.client.model.SdwRestServicesGetSystemsGet200Response;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SafeDrinkingWaterApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public SafeDrinkingWaterApi() {
        this(Configuration.getDefaultApiClient());
    }

    public SafeDrinkingWaterApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for sdwRestServicesGetDownloadGet
     * @param qid Query ID Selector.  Enter the QueryID number from a previously run query. (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - CSV &#x3D; Facility results formatted as comma delimited file download (default). (optional)
     * @param qcolumns Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sdwRestServicesGetDownloadGetCall(String qid, String output, String qcolumns, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/sdw_rest_services.get_download";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (qid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("qid", qid));
        }

        if (qcolumns != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("qcolumns", qcolumns));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call sdwRestServicesGetDownloadGetValidateBeforeCall(String qid, String output, String qcolumns, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'qid' is set
        if (qid == null) {
            throw new ApiException("Missing the required parameter 'qid' when calling sdwRestServicesGetDownloadGet(Async)");
        }

        return sdwRestServicesGetDownloadGetCall(qid, output, qcolumns, _callback);

    }

    /**
     * Safe Drinking Water Act (SDWA) Download Data Service
     * Based on the QID obtained from a get_systems query, return a comma separated value (CSV) file of the water systems found.
     * @param qid Query ID Selector.  Enter the QueryID number from a previously run query. (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - CSV &#x3D; Facility results formatted as comma delimited file download (default). (optional)
     * @param qcolumns Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions. (optional)
     * @return File
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public File sdwRestServicesGetDownloadGet(String qid, String output, String qcolumns) throws ApiException {
        ApiResponse<File> localVarResp = sdwRestServicesGetDownloadGetWithHttpInfo(qid, output, qcolumns);
        return localVarResp.getData();
    }

    /**
     * Safe Drinking Water Act (SDWA) Download Data Service
     * Based on the QID obtained from a get_systems query, return a comma separated value (CSV) file of the water systems found.
     * @param qid Query ID Selector.  Enter the QueryID number from a previously run query. (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - CSV &#x3D; Facility results formatted as comma delimited file download (default). (optional)
     * @param qcolumns Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions. (optional)
     * @return ApiResponse&lt;File&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<File> sdwRestServicesGetDownloadGetWithHttpInfo(String qid, String output, String qcolumns) throws ApiException {
        okhttp3.Call localVarCall = sdwRestServicesGetDownloadGetValidateBeforeCall(qid, output, qcolumns, null);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Safe Drinking Water Act (SDWA) Download Data Service (asynchronously)
     * Based on the QID obtained from a get_systems query, return a comma separated value (CSV) file of the water systems found.
     * @param qid Query ID Selector.  Enter the QueryID number from a previously run query. (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - CSV &#x3D; Facility results formatted as comma delimited file download (default). (optional)
     * @param qcolumns Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sdwRestServicesGetDownloadGetAsync(String qid, String output, String qcolumns, final ApiCallback<File> _callback) throws ApiException {

        okhttp3.Call localVarCall = sdwRestServicesGetDownloadGetValidateBeforeCall(qid, output, qcolumns, _callback);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for sdwRestServicesGetDownloadPost
     * @param qid Query ID Selector.  Enter the QueryID number from a previously run query. (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - CSV &#x3D; Facility results formatted as comma delimited file download (default). (optional)
     * @param qcolumns Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sdwRestServicesGetDownloadPostCall(String qid, String output, String qcolumns, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/sdw_rest_services.get_download";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (qid != null) {
            localVarFormParams.put("qid", qid);
        }

        if (qcolumns != null) {
            localVarFormParams.put("qcolumns", qcolumns);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call sdwRestServicesGetDownloadPostValidateBeforeCall(String qid, String output, String qcolumns, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'qid' is set
        if (qid == null) {
            throw new ApiException("Missing the required parameter 'qid' when calling sdwRestServicesGetDownloadPost(Async)");
        }

        return sdwRestServicesGetDownloadPostCall(qid, output, qcolumns, _callback);

    }

    /**
     * Safe Drinking Water Act (SDWA) Download Data Service
     * Based on the QID obtained from a get_systems query, return a comma separated value (CSV) file of the water systems found.
     * @param qid Query ID Selector.  Enter the QueryID number from a previously run query. (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - CSV &#x3D; Facility results formatted as comma delimited file download (default). (optional)
     * @param qcolumns Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions. (optional)
     * @return File
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public File sdwRestServicesGetDownloadPost(String qid, String output, String qcolumns) throws ApiException {
        ApiResponse<File> localVarResp = sdwRestServicesGetDownloadPostWithHttpInfo(qid, output, qcolumns);
        return localVarResp.getData();
    }

    /**
     * Safe Drinking Water Act (SDWA) Download Data Service
     * Based on the QID obtained from a get_systems query, return a comma separated value (CSV) file of the water systems found.
     * @param qid Query ID Selector.  Enter the QueryID number from a previously run query. (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - CSV &#x3D; Facility results formatted as comma delimited file download (default). (optional)
     * @param qcolumns Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions. (optional)
     * @return ApiResponse&lt;File&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<File> sdwRestServicesGetDownloadPostWithHttpInfo(String qid, String output, String qcolumns) throws ApiException {
        okhttp3.Call localVarCall = sdwRestServicesGetDownloadPostValidateBeforeCall(qid, output, qcolumns, null);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Safe Drinking Water Act (SDWA) Download Data Service (asynchronously)
     * Based on the QID obtained from a get_systems query, return a comma separated value (CSV) file of the water systems found.
     * @param qid Query ID Selector.  Enter the QueryID number from a previously run query. (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - CSV &#x3D; Facility results formatted as comma delimited file download (default). (optional)
     * @param qcolumns Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sdwRestServicesGetDownloadPostAsync(String qid, String output, String qcolumns, final ApiCallback<File> _callback) throws ApiException {

        okhttp3.Call localVarCall = sdwRestServicesGetDownloadPostValidateBeforeCall(qid, output, qcolumns, _callback);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for sdwRestServicesGetQidGet
     * @param qid Query ID Selector.  Enter the QueryID number from a previously run query. (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pageno Indicates the number of the page to display. It is used only when the results are paginated. (optional, default to 1.0)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param newsort Output Sort Column.  Enter the number of the column on which the data will be sorted. If unpopulated results will sort on the first column. (optional)
     * @param descending Output Sort Column Descending Flag.  Enter Y to column identified in the newsort parameter descending.  Enter N to use ascending sort order. Used only when newsort parameter is populated. (optional)
     * @param qcolumns Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are an array (page)  of SDWA (SDWIS) Water Systems with the number of systems equal to the responseset (page size). </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sdwRestServicesGetQidGetCall(String qid, String output, BigDecimal pageno, String paramCallback, BigDecimal newsort, String descending, String qcolumns, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/sdw_rest_services.get_qid";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (qid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("qid", qid));
        }

        if (pageno != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageno", pageno));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (newsort != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("newsort", newsort));
        }

        if (descending != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("descending", descending));
        }

        if (qcolumns != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("qcolumns", qcolumns));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call sdwRestServicesGetQidGetValidateBeforeCall(String qid, String output, BigDecimal pageno, String paramCallback, BigDecimal newsort, String descending, String qcolumns, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'qid' is set
        if (qid == null) {
            throw new ApiException("Missing the required parameter 'qid' when calling sdwRestServicesGetQidGet(Async)");
        }

        return sdwRestServicesGetQidGetCall(qid, output, pageno, paramCallback, newsort, descending, qcolumns, _callback);

    }

    /**
     * Safe Drinking Water Act (SDWA) Paginated Results Service
     * GET_QID is passed with a query ID corresponding to a previously run get_systems query. It then returns a Systems object containing all matching water systems. The main purpose of GET_QID is for large querysets that contain multiple pages (responsesets) of output. GET_QID allows for pagination and for the selection and sorting of columns. 
     * @param qid Query ID Selector.  Enter the QueryID number from a previously run query. (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pageno Indicates the number of the page to display. It is used only when the results are paginated. (optional, default to 1.0)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param newsort Output Sort Column.  Enter the number of the column on which the data will be sorted. If unpopulated results will sort on the first column. (optional)
     * @param descending Output Sort Column Descending Flag.  Enter Y to column identified in the newsort parameter descending.  Enter N to use ascending sort order. Used only when newsort parameter is populated. (optional)
     * @param qcolumns Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions. (optional)
     * @return SdwRestServicesGetQidGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are an array (page)  of SDWA (SDWIS) Water Systems with the number of systems equal to the responseset (page size). </td><td>  -  </td></tr>
     </table>
     */
    public SdwRestServicesGetQidGet200Response sdwRestServicesGetQidGet(String qid, String output, BigDecimal pageno, String paramCallback, BigDecimal newsort, String descending, String qcolumns) throws ApiException {
        ApiResponse<SdwRestServicesGetQidGet200Response> localVarResp = sdwRestServicesGetQidGetWithHttpInfo(qid, output, pageno, paramCallback, newsort, descending, qcolumns);
        return localVarResp.getData();
    }

    /**
     * Safe Drinking Water Act (SDWA) Paginated Results Service
     * GET_QID is passed with a query ID corresponding to a previously run get_systems query. It then returns a Systems object containing all matching water systems. The main purpose of GET_QID is for large querysets that contain multiple pages (responsesets) of output. GET_QID allows for pagination and for the selection and sorting of columns. 
     * @param qid Query ID Selector.  Enter the QueryID number from a previously run query. (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pageno Indicates the number of the page to display. It is used only when the results are paginated. (optional, default to 1.0)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param newsort Output Sort Column.  Enter the number of the column on which the data will be sorted. If unpopulated results will sort on the first column. (optional)
     * @param descending Output Sort Column Descending Flag.  Enter Y to column identified in the newsort parameter descending.  Enter N to use ascending sort order. Used only when newsort parameter is populated. (optional)
     * @param qcolumns Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions. (optional)
     * @return ApiResponse&lt;SdwRestServicesGetQidGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are an array (page)  of SDWA (SDWIS) Water Systems with the number of systems equal to the responseset (page size). </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<SdwRestServicesGetQidGet200Response> sdwRestServicesGetQidGetWithHttpInfo(String qid, String output, BigDecimal pageno, String paramCallback, BigDecimal newsort, String descending, String qcolumns) throws ApiException {
        okhttp3.Call localVarCall = sdwRestServicesGetQidGetValidateBeforeCall(qid, output, pageno, paramCallback, newsort, descending, qcolumns, null);
        Type localVarReturnType = new TypeToken<SdwRestServicesGetQidGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Safe Drinking Water Act (SDWA) Paginated Results Service (asynchronously)
     * GET_QID is passed with a query ID corresponding to a previously run get_systems query. It then returns a Systems object containing all matching water systems. The main purpose of GET_QID is for large querysets that contain multiple pages (responsesets) of output. GET_QID allows for pagination and for the selection and sorting of columns. 
     * @param qid Query ID Selector.  Enter the QueryID number from a previously run query. (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pageno Indicates the number of the page to display. It is used only when the results are paginated. (optional, default to 1.0)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param newsort Output Sort Column.  Enter the number of the column on which the data will be sorted. If unpopulated results will sort on the first column. (optional)
     * @param descending Output Sort Column Descending Flag.  Enter Y to column identified in the newsort parameter descending.  Enter N to use ascending sort order. Used only when newsort parameter is populated. (optional)
     * @param qcolumns Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are an array (page)  of SDWA (SDWIS) Water Systems with the number of systems equal to the responseset (page size). </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sdwRestServicesGetQidGetAsync(String qid, String output, BigDecimal pageno, String paramCallback, BigDecimal newsort, String descending, String qcolumns, final ApiCallback<SdwRestServicesGetQidGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = sdwRestServicesGetQidGetValidateBeforeCall(qid, output, pageno, paramCallback, newsort, descending, qcolumns, _callback);
        Type localVarReturnType = new TypeToken<SdwRestServicesGetQidGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for sdwRestServicesGetQidPost
     * @param qid Query ID Selector.  Enter the QueryID number from a previously run query. (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pageno Indicates the number of the page to display. It is used only when the results are paginated. (optional, default to 1.0)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param newsort Output Sort Column.  Enter the number of the column on which the data will be sorted. If unpopulated results will sort on the first column. (optional)
     * @param descending Output Sort Column Descending Flag.  Enter Y to column identified in the newsort parameter descending.  Enter N to use ascending sort order. Used only when newsort parameter is populated. (optional)
     * @param qcolumns Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are an array (page)  of SDWA (SDWIS) Water Systems with the number of systems equal to the responseset (page size). </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sdwRestServicesGetQidPostCall(String qid, String output, BigDecimal pageno, String paramCallback, BigDecimal newsort, String descending, String qcolumns, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/sdw_rest_services.get_qid";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (qid != null) {
            localVarFormParams.put("qid", qid);
        }

        if (pageno != null) {
            localVarFormParams.put("pageno", pageno);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        if (newsort != null) {
            localVarFormParams.put("newsort", newsort);
        }

        if (descending != null) {
            localVarFormParams.put("descending", descending);
        }

        if (qcolumns != null) {
            localVarFormParams.put("qcolumns", qcolumns);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call sdwRestServicesGetQidPostValidateBeforeCall(String qid, String output, BigDecimal pageno, String paramCallback, BigDecimal newsort, String descending, String qcolumns, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'qid' is set
        if (qid == null) {
            throw new ApiException("Missing the required parameter 'qid' when calling sdwRestServicesGetQidPost(Async)");
        }

        return sdwRestServicesGetQidPostCall(qid, output, pageno, paramCallback, newsort, descending, qcolumns, _callback);

    }

    /**
     * Safe Drinking Water Act (SDWA) Paginated Results Service
     * GET_QID is passed with a query ID corresponding to a previously run get_systems query. It then returns a Systems object containing all matching water systems. The main purpose of GET_QID is for large querysets that contain multiple pages (responsesets) of output. GET_QID allows for pagination and for the selection and sorting of columns. 
     * @param qid Query ID Selector.  Enter the QueryID number from a previously run query. (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pageno Indicates the number of the page to display. It is used only when the results are paginated. (optional, default to 1.0)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param newsort Output Sort Column.  Enter the number of the column on which the data will be sorted. If unpopulated results will sort on the first column. (optional)
     * @param descending Output Sort Column Descending Flag.  Enter Y to column identified in the newsort parameter descending.  Enter N to use ascending sort order. Used only when newsort parameter is populated. (optional)
     * @param qcolumns Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions. (optional)
     * @return SdwRestServicesGetQidGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are an array (page)  of SDWA (SDWIS) Water Systems with the number of systems equal to the responseset (page size). </td><td>  -  </td></tr>
     </table>
     */
    public SdwRestServicesGetQidGet200Response sdwRestServicesGetQidPost(String qid, String output, BigDecimal pageno, String paramCallback, BigDecimal newsort, String descending, String qcolumns) throws ApiException {
        ApiResponse<SdwRestServicesGetQidGet200Response> localVarResp = sdwRestServicesGetQidPostWithHttpInfo(qid, output, pageno, paramCallback, newsort, descending, qcolumns);
        return localVarResp.getData();
    }

    /**
     * Safe Drinking Water Act (SDWA) Paginated Results Service
     * GET_QID is passed with a query ID corresponding to a previously run get_systems query. It then returns a Systems object containing all matching water systems. The main purpose of GET_QID is for large querysets that contain multiple pages (responsesets) of output. GET_QID allows for pagination and for the selection and sorting of columns. 
     * @param qid Query ID Selector.  Enter the QueryID number from a previously run query. (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pageno Indicates the number of the page to display. It is used only when the results are paginated. (optional, default to 1.0)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param newsort Output Sort Column.  Enter the number of the column on which the data will be sorted. If unpopulated results will sort on the first column. (optional)
     * @param descending Output Sort Column Descending Flag.  Enter Y to column identified in the newsort parameter descending.  Enter N to use ascending sort order. Used only when newsort parameter is populated. (optional)
     * @param qcolumns Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions. (optional)
     * @return ApiResponse&lt;SdwRestServicesGetQidGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are an array (page)  of SDWA (SDWIS) Water Systems with the number of systems equal to the responseset (page size). </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<SdwRestServicesGetQidGet200Response> sdwRestServicesGetQidPostWithHttpInfo(String qid, String output, BigDecimal pageno, String paramCallback, BigDecimal newsort, String descending, String qcolumns) throws ApiException {
        okhttp3.Call localVarCall = sdwRestServicesGetQidPostValidateBeforeCall(qid, output, pageno, paramCallback, newsort, descending, qcolumns, null);
        Type localVarReturnType = new TypeToken<SdwRestServicesGetQidGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Safe Drinking Water Act (SDWA) Paginated Results Service (asynchronously)
     * GET_QID is passed with a query ID corresponding to a previously run get_systems query. It then returns a Systems object containing all matching water systems. The main purpose of GET_QID is for large querysets that contain multiple pages (responsesets) of output. GET_QID allows for pagination and for the selection and sorting of columns. 
     * @param qid Query ID Selector.  Enter the QueryID number from a previously run query. (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pageno Indicates the number of the page to display. It is used only when the results are paginated. (optional, default to 1.0)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param newsort Output Sort Column.  Enter the number of the column on which the data will be sorted. If unpopulated results will sort on the first column. (optional)
     * @param descending Output Sort Column Descending Flag.  Enter Y to column identified in the newsort parameter descending.  Enter N to use ascending sort order. Used only when newsort parameter is populated. (optional)
     * @param qcolumns Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are an array (page)  of SDWA (SDWIS) Water Systems with the number of systems equal to the responseset (page size). </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sdwRestServicesGetQidPostAsync(String qid, String output, BigDecimal pageno, String paramCallback, BigDecimal newsort, String descending, String qcolumns, final ApiCallback<SdwRestServicesGetQidGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = sdwRestServicesGetQidPostValidateBeforeCall(qid, output, pageno, paramCallback, newsort, descending, qcolumns, _callback);
        Type localVarReturnType = new TypeToken<SdwRestServicesGetQidGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for sdwRestServicesGetSystemsGet
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pFn Facility Name Filter. Enter one or more case-insensitive facility names to filter results.  Provide multiple values as a comma-delimited list.  See p_fntype for additional modifiers. (optional)
     * @param pCt Facility City Filter. Enter a single case-insensitive city name to filter results. (optional)
     * @param pCo Facility County Filter. Provide a single county name in combination with a state value provided via p_st. (optional)
     * @param pFips FIPS Code Filter.  Enter a single 5-character Federal Information Processing Standards (FIPS) state + county value to restrict results.  E.g. to limit results to Kenosha County, Wisconsin, use 55059. (optional)
     * @param pSt Facility State and State-Equivalent Filter.  Provide one or more USPS postal abbreviations for states and state-equivalents to filter results.  Provide multiple values as a comma-delimited list. (optional)
     * @param pZip 5-Digit ZIP Code Filter. Provide one or more 5-digit postal zip codes to filter results.  May contain multiple comma-separated values. (optional)
     * @param pReg EPA Region Filter. Provide a single value of 01 thru 10 to restrict results to a single EPA region. (optional)
     * @param pTrb Tribe name (optional)
     * @param pAct Active Permits/Facilities Flag.  Provide Y or N to filter results to facilities with active permits. (optional)
     * @param pQiv Quarters in Noncompliance Limiter.  Enter a coded value to limit results to facilities with given quarter of noncompliance. - Z &#x3D; Zero quarters in noncompliance. - GEXX &#x3D; Replacing XX with a numeric value, that number of quarterd or more in noncompliance. - GTXX &#x3D; Replacing XX with a numeric value, more than that number of quarters in noncompliance. (optional)
     * @param pIco Indian Country Flag.  Enter a \&quot;Y\&quot; or \&quot;N\&quot; to restrict searches to facilities inside or outside Indian Country. (optional)
     * @param pPid Nine-digit permit IDs. May contain up to 2000 comma-separated values. (optional)
     * @param pOwop Owner/Operator code filter.  Enter one of the following codes to filter results: - F &#x3D; Federal Government - S &#x3D; State Government - L &#x3D; Local Government - M &#x3D; Public/Private - N &#x3D; Native American - P &#x3D; Private (optional)
     * @param pSystyp Type of public water system: - CWS&#x3D;Community water system - NCWS&#x3D;Non-community water system - NTCWS&#x3D;Non-transient non-community water system - TNCWS&#x3D;Transient non-community water system (optional)
     * @param pSwtyp Source Water Type: - SW &#x3D; Surface water  - GW&#x3D; Ground water - GU &#x3D; Ground water under direct influence of (UDI) surface water - SWP &#x3D; Purchased Surface water - GWP &#x3D; Purchased Ground water - GUP &#x3D; Purchased Ground water UDI surface water (optional)
     * @param pPopsv Estimated average daily population served by a system: - LE500 &#x3D; 500 or less - IN501_3K &#x3D; 501-3,300 - IN3K_10K &#x3D; 3,301-10,000 - IN10K_100K &#x3D; 10,001-100,000 - IN100K_1M &#x3D; 100,001-1,000,000 - GT1M &#x3D; More than 1,000,000 May contain multiple comma-separated values. (optional)
     * @param pCntysv  (optional)
     * @param pCs Current violations: - M &#x3D; Monitoring and Reporting Violations - H &#x3D; Health-based Violations - O &#x3D; Other Violations - P &#x3D; Public Notice Violations - S &#x3D; Serious Violator - N &#x3D; No Violations May contain multiple comma-separated values. (optional)
     * @param pMr Monitoring and Reporting Violations (failure to conduct regular monitoring of drinking water quality or submit monitoring results in a timely fashion). (optional)
     * @param pHealth Violations of health-based drinking water standards (maximum contaminant levels, maximum residual disinfectant levels, or treatment technique rules). (optional)
     * @param pOther Other violations, such as failing to issue annual consumer confidence reports or maintain required records. (optional)
     * @param pPn Public Notice Violations (failure to immediately alert consumers of serious problem with drinking water). (optional)
     * @param pSv Serious Violator (unresolved serious, multiple, and/or continuing violations). A value of Y will return only SDWIS systems that are Serious Violators, while a value of N will only return SDWIS Systems that are not Serious Violators. (optional)
     * @param pQs Quick Search. Allows entry for city, state, and/or zip code. (optional)
     * @param pSfs Single Facility Search Filter.  Provide a facility name or program system identifier to limit results.  For the all data search, the FRS registry identifier is also searched. (optional)
     * @param pPswpol For CWA, pollutant names for surface water discharges. for Drinking Water, SDWIS Violation contaminant codes for unaddressed violations that have occurred in the last 3 years. May contain multiple comma-separated values. (optional)
     * @param pPswvio Used in conjuction with parameters p_pswpol and p_pswparam, indicates whether search should only include pollutants with violations. (optional)
     * @param pPbale Lead Action Level Exceedance.  A \&quot;Y\&quot; value will select water systems with at least 1 Lead Action Level Exceedance. (optional)
     * @param pCuale Copper Action Level Exceedance.  A \&quot;Y\&quot; value will select water systems with at least 1 Copper Action Level Exceedance. (optional)
     * @param pRc350v Rule code 350 violation. A \&quot;Y\&quot; value will select water systems with at least one rule code 350 violation. (optional)
     * @param pPbv Lead Violations.  A \&quot;Y\&quot; value will select water systems with at least 1 Lead Violation. (optional)
     * @param pCuv Copper Violation.  A \&quot;Y\&quot; value will select water systems with at least 1 Copper Violation. (optional)
     * @param pLcrv Lead or Copper rule violations.  A \&quot;Y\&quot; value will select water systems with at least 1 Lead or Copper Rule Violation. (optional)
     * @param pFea Formal Enforcement Actions [within / not within] specified date range indicator. The date range is determined by parameters p_fead1 and p_fead2 or by parameter p_feay. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pFeay Years (1 to 5) Range.  This value is used to create a date range for Formal Enforcement Actions (FEA). Used along with p_fea (which indicates whether to look within or outside of the date range) to find FEAs within (or not within) the number of years specified. (optional)
     * @param pFeaa Agency associated with Formal Enforcement Actions: - E &#x3D; EPA - S &#x3D; State - A &#x3D; All (optional)
     * @param pIea Informal Enforcement Actions [within / not within] specified date range.  The date range is determined by parameters p_iead1 and p_iead2 or by parameter p_ieay. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pIeay Years (1 to 5) Range.  This value is used to create a date range for Informal Enforcement Actions (IEA). Used along with p_iea (which indicates whether to look within or outside of the date range) to find IEAs within (or not within) the number of years specified. (optional)
     * @param pIeaa Agency associated with Informal Enforcement Actions. If left blank, both agencies are included. - E &#x3D; EPA - S &#x3D; State (optional)
     * @param pQis Significant Quarters in Noncompliance Limiter.  Enter one of the following codes to limit results to facilities having given quarters of noncompliance. - Z &#x3D; Zero quarters in noncompliance. - GE1 &#x3D; One or more quarters in noncompliance. - GT1 &#x3D; More than one quarters in noncompliance. - GE2 &#x3D; Two or more quarters in noncompliance. - GT2 &#x3D; More than two quarters in noncompliance. - GE4 &#x3D; Four or more quarters in noncompliance. - GT4 &#x3D; More than four quarters in noncompliance. - GE8 &#x3D; Eight or more quarters in noncompliance. - GT8 &#x3D; More than eight quarters in noncompliance. - GE12 &#x3D; Twelve or more quarters in noncompliance. - GT12 &#x3D; Twelve or more quarters in noncompliance. - 12 &#x3D; Exactly twelve quarters in noncompliance. Note the seemingly incongruous of GT12 is deliberate. (optional)
     * @param pPfead1 Formal Enforcement Action Date Range Start.  Enter a date in MM/DD/YYYY format to set the start of the range for filtering by recent Formal Enforcement Action (FEA) taken against the facility within the last five years. (optional)
     * @param pPfead2 Formal Enforcement Action Date Range End.  Enter a date in MM/DD/YYYY format to set the end of the date range for filtering by recent Formal Enforcement Action (FEA) taken against the facility within the last five years. (optional)
     * @param pPfeat Formal Enforcement Action (FEA) Code Filter.  Enter one or more three-letter FEA codes to restrict results to facilities with these attributes.  Use p_fead1 and p_fead2 parameters to further restrict this filter by entering a date range.  Provide multiple codes as a comma-delimited list. (optional)
     * @param pSs5yr Sanitary Surveys (in past 5 years) flag.  Values of visit_reason_code are either \&quot;SNSV\&quot; or \&quot;SNSP\&quot; in the past 5 years indicate a Sanitary Survey.    Enter \&quot;Y\&quot; to select facilities with Sanitary Surveys within the past 5 years.    Enter \&quot;N\&quot; to select facilities without Sanitary Surveys in the past 5 years.  Enter a number to search for greater for facilities with a quantity than or equal to that value.    (optional)
     * @param pSdc Significant Deficiency Count (in past 5 years) flag.    Enter \&quot;Y\&quot; to select facilities with Sanitary Surveys within the past 5 years.    Enter \&quot;N\&quot; to select facilities without Sanitary Surveys in the past 5 years.  Enter a number to search for facilities with a quantity greater than or equal to that value. (optional)
     * @param pSdcIls  (optional)
     * @param pYsl Last Facility Inspection [within / not within] Specified Date Range Indicator. The date range is determined by parameters p_idt1 and p_idt2 or by parameter p_ysly. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pYsly Number of years (1 to 5) since last facility inspection.  A value of 1 means that it has been inspected within the year. (optional)
     * @param pYsla Facility Last Inspection Code Filter.  If left blank, both agencies are included.  Enter a value to limit results: - E &#x3D; EPA - S &#x3D; State (optional)
     * @param pIdt1 Beginning of date range of most recent facility inspection. (optional)
     * @param pIdt2 End of date range of most recent facility inspection. (optional)
     * @param pCmsFlag  (optional)
     * @param queryset Query Limiter.  Enter a value to limit the number of records returned for each query. Value cannot exceed 70,000. (optional)
     * @param responseset Response Set Limiter. Enter a value to limit the number of records per page. Value cannot exceed 1,000. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param qcolumns Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of public water systems that meet the specified search criteria. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sdwRestServicesGetSystemsGetCall(String output, String pFn, String pCt, String pCo, String pFips, String pSt, String pZip, String pReg, String pTrb, String pAct, String pQiv, String pIco, String pPid, String pOwop, String pSystyp, String pSwtyp, String pPopsv, String pCntysv, String pCs, String pMr, String pHealth, String pOther, String pPn, String pSv, String pQs, String pSfs, String pPswpol, String pPswvio, String pPbale, String pCuale, String pRc350v, String pPbv, String pCuv, String pLcrv, String pFea, BigDecimal pFeay, String pFeaa, String pIea, BigDecimal pIeay, String pIeaa, String pQis, String pPfead1, String pPfead2, String pPfeat, String pSs5yr, String pSdc, String pSdcIls, String pYsl, String pYsly, String pYsla, String pIdt1, String pIdt2, String pCmsFlag, BigDecimal queryset, BigDecimal responseset, String paramCallback, String qcolumns, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/sdw_rest_services.get_systems";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pFn != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_fn", pFn));
        }

        if (pCt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_ct", pCt));
        }

        if (pCo != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_co", pCo));
        }

        if (pFips != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_fips", pFips));
        }

        if (pSt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_st", pSt));
        }

        if (pZip != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_zip", pZip));
        }

        if (pReg != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_reg", pReg));
        }

        if (pTrb != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_trb", pTrb));
        }

        if (pAct != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_act", pAct));
        }

        if (pQiv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_qiv", pQiv));
        }

        if (pIco != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_ico", pIco));
        }

        if (pPid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_pid", pPid));
        }

        if (pOwop != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_owop", pOwop));
        }

        if (pSystyp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_systyp", pSystyp));
        }

        if (pSwtyp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_swtyp", pSwtyp));
        }

        if (pPopsv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_popsv", pPopsv));
        }

        if (pCntysv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_cntysv", pCntysv));
        }

        if (pCs != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_cs", pCs));
        }

        if (pMr != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_mr", pMr));
        }

        if (pHealth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_health", pHealth));
        }

        if (pOther != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_other", pOther));
        }

        if (pPn != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_pn", pPn));
        }

        if (pSv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_sv", pSv));
        }

        if (pQs != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_qs", pQs));
        }

        if (pSfs != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_sfs", pSfs));
        }

        if (pPswpol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_pswpol", pPswpol));
        }

        if (pPswvio != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_pswvio", pPswvio));
        }

        if (pPbale != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_pbale", pPbale));
        }

        if (pCuale != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_cuale", pCuale));
        }

        if (pRc350v != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_rc350v", pRc350v));
        }

        if (pPbv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_pbv", pPbv));
        }

        if (pCuv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_cuv", pCuv));
        }

        if (pLcrv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_lcrv", pLcrv));
        }

        if (pFea != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_fea", pFea));
        }

        if (pFeay != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_feay", pFeay));
        }

        if (pFeaa != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_feaa", pFeaa));
        }

        if (pIea != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_iea", pIea));
        }

        if (pIeay != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_ieay", pIeay));
        }

        if (pIeaa != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_ieaa", pIeaa));
        }

        if (pQis != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_qis", pQis));
        }

        if (pPfead1 != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_pfead1", pPfead1));
        }

        if (pPfead2 != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_pfead2", pPfead2));
        }

        if (pPfeat != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_pfeat", pPfeat));
        }

        if (pSs5yr != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_ss5yr", pSs5yr));
        }

        if (pSdc != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_sdc", pSdc));
        }

        if (pSdcIls != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_sdc_ils", pSdcIls));
        }

        if (pYsl != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_ysl", pYsl));
        }

        if (pYsly != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_ysly", pYsly));
        }

        if (pYsla != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_ysla", pYsla));
        }

        if (pIdt1 != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_idt1", pIdt1));
        }

        if (pIdt2 != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_idt2", pIdt2));
        }

        if (pCmsFlag != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_cms_flag", pCmsFlag));
        }

        if (queryset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("queryset", queryset));
        }

        if (responseset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("responseset", responseset));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (qcolumns != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("qcolumns", qcolumns));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call sdwRestServicesGetSystemsGetValidateBeforeCall(String output, String pFn, String pCt, String pCo, String pFips, String pSt, String pZip, String pReg, String pTrb, String pAct, String pQiv, String pIco, String pPid, String pOwop, String pSystyp, String pSwtyp, String pPopsv, String pCntysv, String pCs, String pMr, String pHealth, String pOther, String pPn, String pSv, String pQs, String pSfs, String pPswpol, String pPswvio, String pPbale, String pCuale, String pRc350v, String pPbv, String pCuv, String pLcrv, String pFea, BigDecimal pFeay, String pFeaa, String pIea, BigDecimal pIeay, String pIeaa, String pQis, String pPfead1, String pPfead2, String pPfeat, String pSs5yr, String pSdc, String pSdcIls, String pYsl, String pYsly, String pYsla, String pIdt1, String pIdt2, String pCmsFlag, BigDecimal queryset, BigDecimal responseset, String paramCallback, String qcolumns, final ApiCallback _callback) throws ApiException {
        return sdwRestServicesGetSystemsGetCall(output, pFn, pCt, pCo, pFips, pSt, pZip, pReg, pTrb, pAct, pQiv, pIco, pPid, pOwop, pSystyp, pSwtyp, pPopsv, pCntysv, pCs, pMr, pHealth, pOther, pPn, pSv, pQs, pSfs, pPswpol, pPswvio, pPbale, pCuale, pRc350v, pPbv, pCuv, pLcrv, pFea, pFeay, pFeaa, pIea, pIeay, pIeaa, pQis, pPfead1, pPfead2, pPfeat, pSs5yr, pSdc, pSdcIls, pYsl, pYsly, pYsla, pIdt1, pIdt2, pCmsFlag, queryset, responseset, paramCallback, qcolumns, _callback);

    }

    /**
     * Safe Drinking Water Act (SDWA) Systems Search Service
     * Returns an array of public water systems that meet the specified search criteria.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pFn Facility Name Filter. Enter one or more case-insensitive facility names to filter results.  Provide multiple values as a comma-delimited list.  See p_fntype for additional modifiers. (optional)
     * @param pCt Facility City Filter. Enter a single case-insensitive city name to filter results. (optional)
     * @param pCo Facility County Filter. Provide a single county name in combination with a state value provided via p_st. (optional)
     * @param pFips FIPS Code Filter.  Enter a single 5-character Federal Information Processing Standards (FIPS) state + county value to restrict results.  E.g. to limit results to Kenosha County, Wisconsin, use 55059. (optional)
     * @param pSt Facility State and State-Equivalent Filter.  Provide one or more USPS postal abbreviations for states and state-equivalents to filter results.  Provide multiple values as a comma-delimited list. (optional)
     * @param pZip 5-Digit ZIP Code Filter. Provide one or more 5-digit postal zip codes to filter results.  May contain multiple comma-separated values. (optional)
     * @param pReg EPA Region Filter. Provide a single value of 01 thru 10 to restrict results to a single EPA region. (optional)
     * @param pTrb Tribe name (optional)
     * @param pAct Active Permits/Facilities Flag.  Provide Y or N to filter results to facilities with active permits. (optional)
     * @param pQiv Quarters in Noncompliance Limiter.  Enter a coded value to limit results to facilities with given quarter of noncompliance. - Z &#x3D; Zero quarters in noncompliance. - GEXX &#x3D; Replacing XX with a numeric value, that number of quarterd or more in noncompliance. - GTXX &#x3D; Replacing XX with a numeric value, more than that number of quarters in noncompliance. (optional)
     * @param pIco Indian Country Flag.  Enter a \&quot;Y\&quot; or \&quot;N\&quot; to restrict searches to facilities inside or outside Indian Country. (optional)
     * @param pPid Nine-digit permit IDs. May contain up to 2000 comma-separated values. (optional)
     * @param pOwop Owner/Operator code filter.  Enter one of the following codes to filter results: - F &#x3D; Federal Government - S &#x3D; State Government - L &#x3D; Local Government - M &#x3D; Public/Private - N &#x3D; Native American - P &#x3D; Private (optional)
     * @param pSystyp Type of public water system: - CWS&#x3D;Community water system - NCWS&#x3D;Non-community water system - NTCWS&#x3D;Non-transient non-community water system - TNCWS&#x3D;Transient non-community water system (optional)
     * @param pSwtyp Source Water Type: - SW &#x3D; Surface water  - GW&#x3D; Ground water - GU &#x3D; Ground water under direct influence of (UDI) surface water - SWP &#x3D; Purchased Surface water - GWP &#x3D; Purchased Ground water - GUP &#x3D; Purchased Ground water UDI surface water (optional)
     * @param pPopsv Estimated average daily population served by a system: - LE500 &#x3D; 500 or less - IN501_3K &#x3D; 501-3,300 - IN3K_10K &#x3D; 3,301-10,000 - IN10K_100K &#x3D; 10,001-100,000 - IN100K_1M &#x3D; 100,001-1,000,000 - GT1M &#x3D; More than 1,000,000 May contain multiple comma-separated values. (optional)
     * @param pCntysv  (optional)
     * @param pCs Current violations: - M &#x3D; Monitoring and Reporting Violations - H &#x3D; Health-based Violations - O &#x3D; Other Violations - P &#x3D; Public Notice Violations - S &#x3D; Serious Violator - N &#x3D; No Violations May contain multiple comma-separated values. (optional)
     * @param pMr Monitoring and Reporting Violations (failure to conduct regular monitoring of drinking water quality or submit monitoring results in a timely fashion). (optional)
     * @param pHealth Violations of health-based drinking water standards (maximum contaminant levels, maximum residual disinfectant levels, or treatment technique rules). (optional)
     * @param pOther Other violations, such as failing to issue annual consumer confidence reports or maintain required records. (optional)
     * @param pPn Public Notice Violations (failure to immediately alert consumers of serious problem with drinking water). (optional)
     * @param pSv Serious Violator (unresolved serious, multiple, and/or continuing violations). A value of Y will return only SDWIS systems that are Serious Violators, while a value of N will only return SDWIS Systems that are not Serious Violators. (optional)
     * @param pQs Quick Search. Allows entry for city, state, and/or zip code. (optional)
     * @param pSfs Single Facility Search Filter.  Provide a facility name or program system identifier to limit results.  For the all data search, the FRS registry identifier is also searched. (optional)
     * @param pPswpol For CWA, pollutant names for surface water discharges. for Drinking Water, SDWIS Violation contaminant codes for unaddressed violations that have occurred in the last 3 years. May contain multiple comma-separated values. (optional)
     * @param pPswvio Used in conjuction with parameters p_pswpol and p_pswparam, indicates whether search should only include pollutants with violations. (optional)
     * @param pPbale Lead Action Level Exceedance.  A \&quot;Y\&quot; value will select water systems with at least 1 Lead Action Level Exceedance. (optional)
     * @param pCuale Copper Action Level Exceedance.  A \&quot;Y\&quot; value will select water systems with at least 1 Copper Action Level Exceedance. (optional)
     * @param pRc350v Rule code 350 violation. A \&quot;Y\&quot; value will select water systems with at least one rule code 350 violation. (optional)
     * @param pPbv Lead Violations.  A \&quot;Y\&quot; value will select water systems with at least 1 Lead Violation. (optional)
     * @param pCuv Copper Violation.  A \&quot;Y\&quot; value will select water systems with at least 1 Copper Violation. (optional)
     * @param pLcrv Lead or Copper rule violations.  A \&quot;Y\&quot; value will select water systems with at least 1 Lead or Copper Rule Violation. (optional)
     * @param pFea Formal Enforcement Actions [within / not within] specified date range indicator. The date range is determined by parameters p_fead1 and p_fead2 or by parameter p_feay. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pFeay Years (1 to 5) Range.  This value is used to create a date range for Formal Enforcement Actions (FEA). Used along with p_fea (which indicates whether to look within or outside of the date range) to find FEAs within (or not within) the number of years specified. (optional)
     * @param pFeaa Agency associated with Formal Enforcement Actions: - E &#x3D; EPA - S &#x3D; State - A &#x3D; All (optional)
     * @param pIea Informal Enforcement Actions [within / not within] specified date range.  The date range is determined by parameters p_iead1 and p_iead2 or by parameter p_ieay. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pIeay Years (1 to 5) Range.  This value is used to create a date range for Informal Enforcement Actions (IEA). Used along with p_iea (which indicates whether to look within or outside of the date range) to find IEAs within (or not within) the number of years specified. (optional)
     * @param pIeaa Agency associated with Informal Enforcement Actions. If left blank, both agencies are included. - E &#x3D; EPA - S &#x3D; State (optional)
     * @param pQis Significant Quarters in Noncompliance Limiter.  Enter one of the following codes to limit results to facilities having given quarters of noncompliance. - Z &#x3D; Zero quarters in noncompliance. - GE1 &#x3D; One or more quarters in noncompliance. - GT1 &#x3D; More than one quarters in noncompliance. - GE2 &#x3D; Two or more quarters in noncompliance. - GT2 &#x3D; More than two quarters in noncompliance. - GE4 &#x3D; Four or more quarters in noncompliance. - GT4 &#x3D; More than four quarters in noncompliance. - GE8 &#x3D; Eight or more quarters in noncompliance. - GT8 &#x3D; More than eight quarters in noncompliance. - GE12 &#x3D; Twelve or more quarters in noncompliance. - GT12 &#x3D; Twelve or more quarters in noncompliance. - 12 &#x3D; Exactly twelve quarters in noncompliance. Note the seemingly incongruous of GT12 is deliberate. (optional)
     * @param pPfead1 Formal Enforcement Action Date Range Start.  Enter a date in MM/DD/YYYY format to set the start of the range for filtering by recent Formal Enforcement Action (FEA) taken against the facility within the last five years. (optional)
     * @param pPfead2 Formal Enforcement Action Date Range End.  Enter a date in MM/DD/YYYY format to set the end of the date range for filtering by recent Formal Enforcement Action (FEA) taken against the facility within the last five years. (optional)
     * @param pPfeat Formal Enforcement Action (FEA) Code Filter.  Enter one or more three-letter FEA codes to restrict results to facilities with these attributes.  Use p_fead1 and p_fead2 parameters to further restrict this filter by entering a date range.  Provide multiple codes as a comma-delimited list. (optional)
     * @param pSs5yr Sanitary Surveys (in past 5 years) flag.  Values of visit_reason_code are either \&quot;SNSV\&quot; or \&quot;SNSP\&quot; in the past 5 years indicate a Sanitary Survey.    Enter \&quot;Y\&quot; to select facilities with Sanitary Surveys within the past 5 years.    Enter \&quot;N\&quot; to select facilities without Sanitary Surveys in the past 5 years.  Enter a number to search for greater for facilities with a quantity than or equal to that value.    (optional)
     * @param pSdc Significant Deficiency Count (in past 5 years) flag.    Enter \&quot;Y\&quot; to select facilities with Sanitary Surveys within the past 5 years.    Enter \&quot;N\&quot; to select facilities without Sanitary Surveys in the past 5 years.  Enter a number to search for facilities with a quantity greater than or equal to that value. (optional)
     * @param pSdcIls  (optional)
     * @param pYsl Last Facility Inspection [within / not within] Specified Date Range Indicator. The date range is determined by parameters p_idt1 and p_idt2 or by parameter p_ysly. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pYsly Number of years (1 to 5) since last facility inspection.  A value of 1 means that it has been inspected within the year. (optional)
     * @param pYsla Facility Last Inspection Code Filter.  If left blank, both agencies are included.  Enter a value to limit results: - E &#x3D; EPA - S &#x3D; State (optional)
     * @param pIdt1 Beginning of date range of most recent facility inspection. (optional)
     * @param pIdt2 End of date range of most recent facility inspection. (optional)
     * @param pCmsFlag  (optional)
     * @param queryset Query Limiter.  Enter a value to limit the number of records returned for each query. Value cannot exceed 70,000. (optional)
     * @param responseset Response Set Limiter. Enter a value to limit the number of records per page. Value cannot exceed 1,000. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param qcolumns Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions. (optional)
     * @return SdwRestServicesGetSystemsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of public water systems that meet the specified search criteria. </td><td>  -  </td></tr>
     </table>
     */
    public SdwRestServicesGetSystemsGet200Response sdwRestServicesGetSystemsGet(String output, String pFn, String pCt, String pCo, String pFips, String pSt, String pZip, String pReg, String pTrb, String pAct, String pQiv, String pIco, String pPid, String pOwop, String pSystyp, String pSwtyp, String pPopsv, String pCntysv, String pCs, String pMr, String pHealth, String pOther, String pPn, String pSv, String pQs, String pSfs, String pPswpol, String pPswvio, String pPbale, String pCuale, String pRc350v, String pPbv, String pCuv, String pLcrv, String pFea, BigDecimal pFeay, String pFeaa, String pIea, BigDecimal pIeay, String pIeaa, String pQis, String pPfead1, String pPfead2, String pPfeat, String pSs5yr, String pSdc, String pSdcIls, String pYsl, String pYsly, String pYsla, String pIdt1, String pIdt2, String pCmsFlag, BigDecimal queryset, BigDecimal responseset, String paramCallback, String qcolumns) throws ApiException {
        ApiResponse<SdwRestServicesGetSystemsGet200Response> localVarResp = sdwRestServicesGetSystemsGetWithHttpInfo(output, pFn, pCt, pCo, pFips, pSt, pZip, pReg, pTrb, pAct, pQiv, pIco, pPid, pOwop, pSystyp, pSwtyp, pPopsv, pCntysv, pCs, pMr, pHealth, pOther, pPn, pSv, pQs, pSfs, pPswpol, pPswvio, pPbale, pCuale, pRc350v, pPbv, pCuv, pLcrv, pFea, pFeay, pFeaa, pIea, pIeay, pIeaa, pQis, pPfead1, pPfead2, pPfeat, pSs5yr, pSdc, pSdcIls, pYsl, pYsly, pYsla, pIdt1, pIdt2, pCmsFlag, queryset, responseset, paramCallback, qcolumns);
        return localVarResp.getData();
    }

    /**
     * Safe Drinking Water Act (SDWA) Systems Search Service
     * Returns an array of public water systems that meet the specified search criteria.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pFn Facility Name Filter. Enter one or more case-insensitive facility names to filter results.  Provide multiple values as a comma-delimited list.  See p_fntype for additional modifiers. (optional)
     * @param pCt Facility City Filter. Enter a single case-insensitive city name to filter results. (optional)
     * @param pCo Facility County Filter. Provide a single county name in combination with a state value provided via p_st. (optional)
     * @param pFips FIPS Code Filter.  Enter a single 5-character Federal Information Processing Standards (FIPS) state + county value to restrict results.  E.g. to limit results to Kenosha County, Wisconsin, use 55059. (optional)
     * @param pSt Facility State and State-Equivalent Filter.  Provide one or more USPS postal abbreviations for states and state-equivalents to filter results.  Provide multiple values as a comma-delimited list. (optional)
     * @param pZip 5-Digit ZIP Code Filter. Provide one or more 5-digit postal zip codes to filter results.  May contain multiple comma-separated values. (optional)
     * @param pReg EPA Region Filter. Provide a single value of 01 thru 10 to restrict results to a single EPA region. (optional)
     * @param pTrb Tribe name (optional)
     * @param pAct Active Permits/Facilities Flag.  Provide Y or N to filter results to facilities with active permits. (optional)
     * @param pQiv Quarters in Noncompliance Limiter.  Enter a coded value to limit results to facilities with given quarter of noncompliance. - Z &#x3D; Zero quarters in noncompliance. - GEXX &#x3D; Replacing XX with a numeric value, that number of quarterd or more in noncompliance. - GTXX &#x3D; Replacing XX with a numeric value, more than that number of quarters in noncompliance. (optional)
     * @param pIco Indian Country Flag.  Enter a \&quot;Y\&quot; or \&quot;N\&quot; to restrict searches to facilities inside or outside Indian Country. (optional)
     * @param pPid Nine-digit permit IDs. May contain up to 2000 comma-separated values. (optional)
     * @param pOwop Owner/Operator code filter.  Enter one of the following codes to filter results: - F &#x3D; Federal Government - S &#x3D; State Government - L &#x3D; Local Government - M &#x3D; Public/Private - N &#x3D; Native American - P &#x3D; Private (optional)
     * @param pSystyp Type of public water system: - CWS&#x3D;Community water system - NCWS&#x3D;Non-community water system - NTCWS&#x3D;Non-transient non-community water system - TNCWS&#x3D;Transient non-community water system (optional)
     * @param pSwtyp Source Water Type: - SW &#x3D; Surface water  - GW&#x3D; Ground water - GU &#x3D; Ground water under direct influence of (UDI) surface water - SWP &#x3D; Purchased Surface water - GWP &#x3D; Purchased Ground water - GUP &#x3D; Purchased Ground water UDI surface water (optional)
     * @param pPopsv Estimated average daily population served by a system: - LE500 &#x3D; 500 or less - IN501_3K &#x3D; 501-3,300 - IN3K_10K &#x3D; 3,301-10,000 - IN10K_100K &#x3D; 10,001-100,000 - IN100K_1M &#x3D; 100,001-1,000,000 - GT1M &#x3D; More than 1,000,000 May contain multiple comma-separated values. (optional)
     * @param pCntysv  (optional)
     * @param pCs Current violations: - M &#x3D; Monitoring and Reporting Violations - H &#x3D; Health-based Violations - O &#x3D; Other Violations - P &#x3D; Public Notice Violations - S &#x3D; Serious Violator - N &#x3D; No Violations May contain multiple comma-separated values. (optional)
     * @param pMr Monitoring and Reporting Violations (failure to conduct regular monitoring of drinking water quality or submit monitoring results in a timely fashion). (optional)
     * @param pHealth Violations of health-based drinking water standards (maximum contaminant levels, maximum residual disinfectant levels, or treatment technique rules). (optional)
     * @param pOther Other violations, such as failing to issue annual consumer confidence reports or maintain required records. (optional)
     * @param pPn Public Notice Violations (failure to immediately alert consumers of serious problem with drinking water). (optional)
     * @param pSv Serious Violator (unresolved serious, multiple, and/or continuing violations). A value of Y will return only SDWIS systems that are Serious Violators, while a value of N will only return SDWIS Systems that are not Serious Violators. (optional)
     * @param pQs Quick Search. Allows entry for city, state, and/or zip code. (optional)
     * @param pSfs Single Facility Search Filter.  Provide a facility name or program system identifier to limit results.  For the all data search, the FRS registry identifier is also searched. (optional)
     * @param pPswpol For CWA, pollutant names for surface water discharges. for Drinking Water, SDWIS Violation contaminant codes for unaddressed violations that have occurred in the last 3 years. May contain multiple comma-separated values. (optional)
     * @param pPswvio Used in conjuction with parameters p_pswpol and p_pswparam, indicates whether search should only include pollutants with violations. (optional)
     * @param pPbale Lead Action Level Exceedance.  A \&quot;Y\&quot; value will select water systems with at least 1 Lead Action Level Exceedance. (optional)
     * @param pCuale Copper Action Level Exceedance.  A \&quot;Y\&quot; value will select water systems with at least 1 Copper Action Level Exceedance. (optional)
     * @param pRc350v Rule code 350 violation. A \&quot;Y\&quot; value will select water systems with at least one rule code 350 violation. (optional)
     * @param pPbv Lead Violations.  A \&quot;Y\&quot; value will select water systems with at least 1 Lead Violation. (optional)
     * @param pCuv Copper Violation.  A \&quot;Y\&quot; value will select water systems with at least 1 Copper Violation. (optional)
     * @param pLcrv Lead or Copper rule violations.  A \&quot;Y\&quot; value will select water systems with at least 1 Lead or Copper Rule Violation. (optional)
     * @param pFea Formal Enforcement Actions [within / not within] specified date range indicator. The date range is determined by parameters p_fead1 and p_fead2 or by parameter p_feay. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pFeay Years (1 to 5) Range.  This value is used to create a date range for Formal Enforcement Actions (FEA). Used along with p_fea (which indicates whether to look within or outside of the date range) to find FEAs within (or not within) the number of years specified. (optional)
     * @param pFeaa Agency associated with Formal Enforcement Actions: - E &#x3D; EPA - S &#x3D; State - A &#x3D; All (optional)
     * @param pIea Informal Enforcement Actions [within / not within] specified date range.  The date range is determined by parameters p_iead1 and p_iead2 or by parameter p_ieay. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pIeay Years (1 to 5) Range.  This value is used to create a date range for Informal Enforcement Actions (IEA). Used along with p_iea (which indicates whether to look within or outside of the date range) to find IEAs within (or not within) the number of years specified. (optional)
     * @param pIeaa Agency associated with Informal Enforcement Actions. If left blank, both agencies are included. - E &#x3D; EPA - S &#x3D; State (optional)
     * @param pQis Significant Quarters in Noncompliance Limiter.  Enter one of the following codes to limit results to facilities having given quarters of noncompliance. - Z &#x3D; Zero quarters in noncompliance. - GE1 &#x3D; One or more quarters in noncompliance. - GT1 &#x3D; More than one quarters in noncompliance. - GE2 &#x3D; Two or more quarters in noncompliance. - GT2 &#x3D; More than two quarters in noncompliance. - GE4 &#x3D; Four or more quarters in noncompliance. - GT4 &#x3D; More than four quarters in noncompliance. - GE8 &#x3D; Eight or more quarters in noncompliance. - GT8 &#x3D; More than eight quarters in noncompliance. - GE12 &#x3D; Twelve or more quarters in noncompliance. - GT12 &#x3D; Twelve or more quarters in noncompliance. - 12 &#x3D; Exactly twelve quarters in noncompliance. Note the seemingly incongruous of GT12 is deliberate. (optional)
     * @param pPfead1 Formal Enforcement Action Date Range Start.  Enter a date in MM/DD/YYYY format to set the start of the range for filtering by recent Formal Enforcement Action (FEA) taken against the facility within the last five years. (optional)
     * @param pPfead2 Formal Enforcement Action Date Range End.  Enter a date in MM/DD/YYYY format to set the end of the date range for filtering by recent Formal Enforcement Action (FEA) taken against the facility within the last five years. (optional)
     * @param pPfeat Formal Enforcement Action (FEA) Code Filter.  Enter one or more three-letter FEA codes to restrict results to facilities with these attributes.  Use p_fead1 and p_fead2 parameters to further restrict this filter by entering a date range.  Provide multiple codes as a comma-delimited list. (optional)
     * @param pSs5yr Sanitary Surveys (in past 5 years) flag.  Values of visit_reason_code are either \&quot;SNSV\&quot; or \&quot;SNSP\&quot; in the past 5 years indicate a Sanitary Survey.    Enter \&quot;Y\&quot; to select facilities with Sanitary Surveys within the past 5 years.    Enter \&quot;N\&quot; to select facilities without Sanitary Surveys in the past 5 years.  Enter a number to search for greater for facilities with a quantity than or equal to that value.    (optional)
     * @param pSdc Significant Deficiency Count (in past 5 years) flag.    Enter \&quot;Y\&quot; to select facilities with Sanitary Surveys within the past 5 years.    Enter \&quot;N\&quot; to select facilities without Sanitary Surveys in the past 5 years.  Enter a number to search for facilities with a quantity greater than or equal to that value. (optional)
     * @param pSdcIls  (optional)
     * @param pYsl Last Facility Inspection [within / not within] Specified Date Range Indicator. The date range is determined by parameters p_idt1 and p_idt2 or by parameter p_ysly. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pYsly Number of years (1 to 5) since last facility inspection.  A value of 1 means that it has been inspected within the year. (optional)
     * @param pYsla Facility Last Inspection Code Filter.  If left blank, both agencies are included.  Enter a value to limit results: - E &#x3D; EPA - S &#x3D; State (optional)
     * @param pIdt1 Beginning of date range of most recent facility inspection. (optional)
     * @param pIdt2 End of date range of most recent facility inspection. (optional)
     * @param pCmsFlag  (optional)
     * @param queryset Query Limiter.  Enter a value to limit the number of records returned for each query. Value cannot exceed 70,000. (optional)
     * @param responseset Response Set Limiter. Enter a value to limit the number of records per page. Value cannot exceed 1,000. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param qcolumns Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions. (optional)
     * @return ApiResponse&lt;SdwRestServicesGetSystemsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of public water systems that meet the specified search criteria. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<SdwRestServicesGetSystemsGet200Response> sdwRestServicesGetSystemsGetWithHttpInfo(String output, String pFn, String pCt, String pCo, String pFips, String pSt, String pZip, String pReg, String pTrb, String pAct, String pQiv, String pIco, String pPid, String pOwop, String pSystyp, String pSwtyp, String pPopsv, String pCntysv, String pCs, String pMr, String pHealth, String pOther, String pPn, String pSv, String pQs, String pSfs, String pPswpol, String pPswvio, String pPbale, String pCuale, String pRc350v, String pPbv, String pCuv, String pLcrv, String pFea, BigDecimal pFeay, String pFeaa, String pIea, BigDecimal pIeay, String pIeaa, String pQis, String pPfead1, String pPfead2, String pPfeat, String pSs5yr, String pSdc, String pSdcIls, String pYsl, String pYsly, String pYsla, String pIdt1, String pIdt2, String pCmsFlag, BigDecimal queryset, BigDecimal responseset, String paramCallback, String qcolumns) throws ApiException {
        okhttp3.Call localVarCall = sdwRestServicesGetSystemsGetValidateBeforeCall(output, pFn, pCt, pCo, pFips, pSt, pZip, pReg, pTrb, pAct, pQiv, pIco, pPid, pOwop, pSystyp, pSwtyp, pPopsv, pCntysv, pCs, pMr, pHealth, pOther, pPn, pSv, pQs, pSfs, pPswpol, pPswvio, pPbale, pCuale, pRc350v, pPbv, pCuv, pLcrv, pFea, pFeay, pFeaa, pIea, pIeay, pIeaa, pQis, pPfead1, pPfead2, pPfeat, pSs5yr, pSdc, pSdcIls, pYsl, pYsly, pYsla, pIdt1, pIdt2, pCmsFlag, queryset, responseset, paramCallback, qcolumns, null);
        Type localVarReturnType = new TypeToken<SdwRestServicesGetSystemsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Safe Drinking Water Act (SDWA) Systems Search Service (asynchronously)
     * Returns an array of public water systems that meet the specified search criteria.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pFn Facility Name Filter. Enter one or more case-insensitive facility names to filter results.  Provide multiple values as a comma-delimited list.  See p_fntype for additional modifiers. (optional)
     * @param pCt Facility City Filter. Enter a single case-insensitive city name to filter results. (optional)
     * @param pCo Facility County Filter. Provide a single county name in combination with a state value provided via p_st. (optional)
     * @param pFips FIPS Code Filter.  Enter a single 5-character Federal Information Processing Standards (FIPS) state + county value to restrict results.  E.g. to limit results to Kenosha County, Wisconsin, use 55059. (optional)
     * @param pSt Facility State and State-Equivalent Filter.  Provide one or more USPS postal abbreviations for states and state-equivalents to filter results.  Provide multiple values as a comma-delimited list. (optional)
     * @param pZip 5-Digit ZIP Code Filter. Provide one or more 5-digit postal zip codes to filter results.  May contain multiple comma-separated values. (optional)
     * @param pReg EPA Region Filter. Provide a single value of 01 thru 10 to restrict results to a single EPA region. (optional)
     * @param pTrb Tribe name (optional)
     * @param pAct Active Permits/Facilities Flag.  Provide Y or N to filter results to facilities with active permits. (optional)
     * @param pQiv Quarters in Noncompliance Limiter.  Enter a coded value to limit results to facilities with given quarter of noncompliance. - Z &#x3D; Zero quarters in noncompliance. - GEXX &#x3D; Replacing XX with a numeric value, that number of quarterd or more in noncompliance. - GTXX &#x3D; Replacing XX with a numeric value, more than that number of quarters in noncompliance. (optional)
     * @param pIco Indian Country Flag.  Enter a \&quot;Y\&quot; or \&quot;N\&quot; to restrict searches to facilities inside or outside Indian Country. (optional)
     * @param pPid Nine-digit permit IDs. May contain up to 2000 comma-separated values. (optional)
     * @param pOwop Owner/Operator code filter.  Enter one of the following codes to filter results: - F &#x3D; Federal Government - S &#x3D; State Government - L &#x3D; Local Government - M &#x3D; Public/Private - N &#x3D; Native American - P &#x3D; Private (optional)
     * @param pSystyp Type of public water system: - CWS&#x3D;Community water system - NCWS&#x3D;Non-community water system - NTCWS&#x3D;Non-transient non-community water system - TNCWS&#x3D;Transient non-community water system (optional)
     * @param pSwtyp Source Water Type: - SW &#x3D; Surface water  - GW&#x3D; Ground water - GU &#x3D; Ground water under direct influence of (UDI) surface water - SWP &#x3D; Purchased Surface water - GWP &#x3D; Purchased Ground water - GUP &#x3D; Purchased Ground water UDI surface water (optional)
     * @param pPopsv Estimated average daily population served by a system: - LE500 &#x3D; 500 or less - IN501_3K &#x3D; 501-3,300 - IN3K_10K &#x3D; 3,301-10,000 - IN10K_100K &#x3D; 10,001-100,000 - IN100K_1M &#x3D; 100,001-1,000,000 - GT1M &#x3D; More than 1,000,000 May contain multiple comma-separated values. (optional)
     * @param pCntysv  (optional)
     * @param pCs Current violations: - M &#x3D; Monitoring and Reporting Violations - H &#x3D; Health-based Violations - O &#x3D; Other Violations - P &#x3D; Public Notice Violations - S &#x3D; Serious Violator - N &#x3D; No Violations May contain multiple comma-separated values. (optional)
     * @param pMr Monitoring and Reporting Violations (failure to conduct regular monitoring of drinking water quality or submit monitoring results in a timely fashion). (optional)
     * @param pHealth Violations of health-based drinking water standards (maximum contaminant levels, maximum residual disinfectant levels, or treatment technique rules). (optional)
     * @param pOther Other violations, such as failing to issue annual consumer confidence reports or maintain required records. (optional)
     * @param pPn Public Notice Violations (failure to immediately alert consumers of serious problem with drinking water). (optional)
     * @param pSv Serious Violator (unresolved serious, multiple, and/or continuing violations). A value of Y will return only SDWIS systems that are Serious Violators, while a value of N will only return SDWIS Systems that are not Serious Violators. (optional)
     * @param pQs Quick Search. Allows entry for city, state, and/or zip code. (optional)
     * @param pSfs Single Facility Search Filter.  Provide a facility name or program system identifier to limit results.  For the all data search, the FRS registry identifier is also searched. (optional)
     * @param pPswpol For CWA, pollutant names for surface water discharges. for Drinking Water, SDWIS Violation contaminant codes for unaddressed violations that have occurred in the last 3 years. May contain multiple comma-separated values. (optional)
     * @param pPswvio Used in conjuction with parameters p_pswpol and p_pswparam, indicates whether search should only include pollutants with violations. (optional)
     * @param pPbale Lead Action Level Exceedance.  A \&quot;Y\&quot; value will select water systems with at least 1 Lead Action Level Exceedance. (optional)
     * @param pCuale Copper Action Level Exceedance.  A \&quot;Y\&quot; value will select water systems with at least 1 Copper Action Level Exceedance. (optional)
     * @param pRc350v Rule code 350 violation. A \&quot;Y\&quot; value will select water systems with at least one rule code 350 violation. (optional)
     * @param pPbv Lead Violations.  A \&quot;Y\&quot; value will select water systems with at least 1 Lead Violation. (optional)
     * @param pCuv Copper Violation.  A \&quot;Y\&quot; value will select water systems with at least 1 Copper Violation. (optional)
     * @param pLcrv Lead or Copper rule violations.  A \&quot;Y\&quot; value will select water systems with at least 1 Lead or Copper Rule Violation. (optional)
     * @param pFea Formal Enforcement Actions [within / not within] specified date range indicator. The date range is determined by parameters p_fead1 and p_fead2 or by parameter p_feay. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pFeay Years (1 to 5) Range.  This value is used to create a date range for Formal Enforcement Actions (FEA). Used along with p_fea (which indicates whether to look within or outside of the date range) to find FEAs within (or not within) the number of years specified. (optional)
     * @param pFeaa Agency associated with Formal Enforcement Actions: - E &#x3D; EPA - S &#x3D; State - A &#x3D; All (optional)
     * @param pIea Informal Enforcement Actions [within / not within] specified date range.  The date range is determined by parameters p_iead1 and p_iead2 or by parameter p_ieay. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pIeay Years (1 to 5) Range.  This value is used to create a date range for Informal Enforcement Actions (IEA). Used along with p_iea (which indicates whether to look within or outside of the date range) to find IEAs within (or not within) the number of years specified. (optional)
     * @param pIeaa Agency associated with Informal Enforcement Actions. If left blank, both agencies are included. - E &#x3D; EPA - S &#x3D; State (optional)
     * @param pQis Significant Quarters in Noncompliance Limiter.  Enter one of the following codes to limit results to facilities having given quarters of noncompliance. - Z &#x3D; Zero quarters in noncompliance. - GE1 &#x3D; One or more quarters in noncompliance. - GT1 &#x3D; More than one quarters in noncompliance. - GE2 &#x3D; Two or more quarters in noncompliance. - GT2 &#x3D; More than two quarters in noncompliance. - GE4 &#x3D; Four or more quarters in noncompliance. - GT4 &#x3D; More than four quarters in noncompliance. - GE8 &#x3D; Eight or more quarters in noncompliance. - GT8 &#x3D; More than eight quarters in noncompliance. - GE12 &#x3D; Twelve or more quarters in noncompliance. - GT12 &#x3D; Twelve or more quarters in noncompliance. - 12 &#x3D; Exactly twelve quarters in noncompliance. Note the seemingly incongruous of GT12 is deliberate. (optional)
     * @param pPfead1 Formal Enforcement Action Date Range Start.  Enter a date in MM/DD/YYYY format to set the start of the range for filtering by recent Formal Enforcement Action (FEA) taken against the facility within the last five years. (optional)
     * @param pPfead2 Formal Enforcement Action Date Range End.  Enter a date in MM/DD/YYYY format to set the end of the date range for filtering by recent Formal Enforcement Action (FEA) taken against the facility within the last five years. (optional)
     * @param pPfeat Formal Enforcement Action (FEA) Code Filter.  Enter one or more three-letter FEA codes to restrict results to facilities with these attributes.  Use p_fead1 and p_fead2 parameters to further restrict this filter by entering a date range.  Provide multiple codes as a comma-delimited list. (optional)
     * @param pSs5yr Sanitary Surveys (in past 5 years) flag.  Values of visit_reason_code are either \&quot;SNSV\&quot; or \&quot;SNSP\&quot; in the past 5 years indicate a Sanitary Survey.    Enter \&quot;Y\&quot; to select facilities with Sanitary Surveys within the past 5 years.    Enter \&quot;N\&quot; to select facilities without Sanitary Surveys in the past 5 years.  Enter a number to search for greater for facilities with a quantity than or equal to that value.    (optional)
     * @param pSdc Significant Deficiency Count (in past 5 years) flag.    Enter \&quot;Y\&quot; to select facilities with Sanitary Surveys within the past 5 years.    Enter \&quot;N\&quot; to select facilities without Sanitary Surveys in the past 5 years.  Enter a number to search for facilities with a quantity greater than or equal to that value. (optional)
     * @param pSdcIls  (optional)
     * @param pYsl Last Facility Inspection [within / not within] Specified Date Range Indicator. The date range is determined by parameters p_idt1 and p_idt2 or by parameter p_ysly. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pYsly Number of years (1 to 5) since last facility inspection.  A value of 1 means that it has been inspected within the year. (optional)
     * @param pYsla Facility Last Inspection Code Filter.  If left blank, both agencies are included.  Enter a value to limit results: - E &#x3D; EPA - S &#x3D; State (optional)
     * @param pIdt1 Beginning of date range of most recent facility inspection. (optional)
     * @param pIdt2 End of date range of most recent facility inspection. (optional)
     * @param pCmsFlag  (optional)
     * @param queryset Query Limiter.  Enter a value to limit the number of records returned for each query. Value cannot exceed 70,000. (optional)
     * @param responseset Response Set Limiter. Enter a value to limit the number of records per page. Value cannot exceed 1,000. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param qcolumns Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of public water systems that meet the specified search criteria. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sdwRestServicesGetSystemsGetAsync(String output, String pFn, String pCt, String pCo, String pFips, String pSt, String pZip, String pReg, String pTrb, String pAct, String pQiv, String pIco, String pPid, String pOwop, String pSystyp, String pSwtyp, String pPopsv, String pCntysv, String pCs, String pMr, String pHealth, String pOther, String pPn, String pSv, String pQs, String pSfs, String pPswpol, String pPswvio, String pPbale, String pCuale, String pRc350v, String pPbv, String pCuv, String pLcrv, String pFea, BigDecimal pFeay, String pFeaa, String pIea, BigDecimal pIeay, String pIeaa, String pQis, String pPfead1, String pPfead2, String pPfeat, String pSs5yr, String pSdc, String pSdcIls, String pYsl, String pYsly, String pYsla, String pIdt1, String pIdt2, String pCmsFlag, BigDecimal queryset, BigDecimal responseset, String paramCallback, String qcolumns, final ApiCallback<SdwRestServicesGetSystemsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = sdwRestServicesGetSystemsGetValidateBeforeCall(output, pFn, pCt, pCo, pFips, pSt, pZip, pReg, pTrb, pAct, pQiv, pIco, pPid, pOwop, pSystyp, pSwtyp, pPopsv, pCntysv, pCs, pMr, pHealth, pOther, pPn, pSv, pQs, pSfs, pPswpol, pPswvio, pPbale, pCuale, pRc350v, pPbv, pCuv, pLcrv, pFea, pFeay, pFeaa, pIea, pIeay, pIeaa, pQis, pPfead1, pPfead2, pPfeat, pSs5yr, pSdc, pSdcIls, pYsl, pYsly, pYsla, pIdt1, pIdt2, pCmsFlag, queryset, responseset, paramCallback, qcolumns, _callback);
        Type localVarReturnType = new TypeToken<SdwRestServicesGetSystemsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for sdwRestServicesGetSystemsPost
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pFn Facility Name Filter. Enter one or more case-insensitive facility names to filter results.  Provide multiple values as a comma-delimited list.  See p_fntype for additional modifiers. (optional)
     * @param pCt Facility City Filter. Enter a single case-insensitive city name to filter results. (optional)
     * @param pCo Facility County Filter. Provide a single county name in combination with a state value provided via p_st. (optional)
     * @param pFips FIPS Code Filter.  Enter a single 5-character Federal Information Processing Standards (FIPS) state + county value to restrict results.  E.g. to limit results to Kenosha County, Wisconsin, use 55059. (optional)
     * @param pSt Facility State and State-Equivalent Filter.  Provide one or more USPS postal abbreviations for states and state-equivalents to filter results.  Provide multiple values as a comma-delimited list. (optional)
     * @param pZip 5-Digit ZIP Code Filter. Provide one or more 5-digit postal zip codes to filter results.  May contain multiple comma-separated values. (optional)
     * @param pReg EPA Region Filter. Provide a single value of 01 thru 10 to restrict results to a single EPA region. (optional)
     * @param pTrb Tribe name (optional)
     * @param pAct Active Permits/Facilities Flag.  Provide Y or N to filter results to facilities with active permits. (optional)
     * @param pQiv Quarters in Noncompliance Limiter.  Enter a coded value to limit results to facilities with given quarter of noncompliance. - Z &#x3D; Zero quarters in noncompliance. - GEXX &#x3D; Replacing XX with a numeric value, that number of quarterd or more in noncompliance. - GTXX &#x3D; Replacing XX with a numeric value, more than that number of quarters in noncompliance. (optional)
     * @param pIco Indian Country Flag.  Enter a \\\&quot;Y\\\&quot; or \\\&quot;N\\\&quot; to restrict searches to facilities inside or outside Indian Country. (optional)
     * @param pPid Nine-digit permit IDs. May contain up to 2000 comma-separated values. (optional)
     * @param pOwop Owner/Operator code filter.  Enter one of the following codes to filter results: - F &#x3D; Federal Government - S &#x3D; State Government - L &#x3D; Local Government - M &#x3D; Public/Private - N &#x3D; Native American - P &#x3D; Private (optional)
     * @param pSystyp Type of public water system: - CWS&#x3D;Community water system - NCWS&#x3D;Non-community water system - NTCWS&#x3D;Non-transient non-community water system - TNCWS&#x3D;Transient non-community water system (optional)
     * @param pSwtyp Source Water Type: - SW &#x3D; Surface water  - GW&#x3D; Ground water - GU &#x3D; Ground water under direct influence of (UDI) surface water - SWP &#x3D; Purchased Surface water - GWP &#x3D; Purchased Ground water - GUP &#x3D; Purchased Ground water UDI surface water (optional)
     * @param pPopsv Estimated average daily population served by a system: - LE500 &#x3D; 500 or less - IN501_3K &#x3D; 501-3,300 - IN3K_10K &#x3D; 3,301-10,000 - IN10K_100K &#x3D; 10,001-100,000 - IN100K_1M &#x3D; 100,001-1,000,000 - GT1M &#x3D; More than 1,000,000 May contain multiple comma-separated values. (optional)
     * @param pCntysv  (optional)
     * @param pCs Current violations: - M &#x3D; Monitoring and Reporting Violations - H &#x3D; Health-based Violations - O &#x3D; Other Violations - P &#x3D; Public Notice Violations - S &#x3D; Serious Violator - N &#x3D; No Violations May contain multiple comma-separated values. (optional)
     * @param pMr Monitoring and Reporting Violations (failure to conduct regular monitoring of drinking water quality or submit monitoring results in a timely fashion). (optional)
     * @param pHealth Violations of health-based drinking water standards (maximum contaminant levels, maximum residual disinfectant levels, or treatment technique rules). (optional)
     * @param pOther Other violations, such as failing to issue annual consumer confidence reports or maintain required records. (optional)
     * @param pPn Public Notice Violations (failure to immediately alert consumers of serious problem with drinking water). (optional)
     * @param pSv Serious Violator (unresolved serious, multiple, and/or continuing violations). A value of Y will return only SDWIS systems that are Serious Violators, while a value of N will only return SDWIS Systems that are not Serious Violators. (optional)
     * @param pQs Quick Search. Allows entry for city, state, and/or zip code. (optional)
     * @param pSfs Single Facility Search Filter.  Provide a facility name or program system identifier to limit results.  For the all data search, the FRS registry identifier is also searched. (optional)
     * @param pPswpol For CWA, pollutant names for surface water discharges. for Drinking Water, SDWIS Violation contaminant codes for unaddressed violations that have occurred in the last 3 years. May contain multiple comma-separated values. (optional)
     * @param pPswvio Used in conjuction with parameters p_pswpol and p_pswparam, indicates whether search should only include pollutants with violations. (optional)
     * @param pPbale Lead Action Level Exceedance.  A \\\&quot;Y\\\&quot; value will select water systems with at least 1 Lead Action Level Exceedance. (optional)
     * @param pCuale Copper Action Level Exceedance.  A \\\&quot;Y\\\&quot; value will select water systems with at least 1 Copper Action Level Exceedance. (optional)
     * @param pRc350v Rule code 350 violation. A \\\&quot;Y\\\&quot; value will select water systems with at least one rule code 350 violation. (optional)
     * @param pPbv Lead Violations.  A \\\&quot;Y\\\&quot; value will select water systems with at least 1 Lead Violation. (optional)
     * @param pCuv Copper Violation.  A \\\&quot;Y\\\&quot; value will select water systems with at least 1 Copper Violation. (optional)
     * @param pLcrv Lead or Copper rule violations.  A \\\&quot;Y\\\&quot; value will select water systems with at least 1 Lead or Copper Rule Violation. (optional)
     * @param pFea Formal Enforcement Actions [within / not within] specified date range indicator. The date range is determined by parameters p_fead1 and p_fead2 or by parameter p_feay. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pFeay Years (1 to 5) Range.  This value is used to create a date range for Formal Enforcement Actions (FEA). Used along with p_fea (which indicates whether to look within or outside of the date range) to find FEAs within (or not within) the number of years specified. (optional)
     * @param pFeaa Agency associated with Formal Enforcement Actions: - E &#x3D; EPA - S &#x3D; State - A &#x3D; All (optional)
     * @param pIea Informal Enforcement Actions [within / not within] specified date range.  The date range is determined by parameters p_iead1 and p_iead2 or by parameter p_ieay. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pIeay Years (1 to 5) Range.  This value is used to create a date range for Informal Enforcement Actions (IEA). Used along with p_iea (which indicates whether to look within or outside of the date range) to find IEAs within (or not within) the number of years specified. (optional)
     * @param pIeaa Agency associated with Informal Enforcement Actions. If left blank, both agencies are included. - E &#x3D; EPA - S &#x3D; State (optional)
     * @param pQis Significant Quarters in Noncompliance Limiter.  Enter one of the following codes to limit results to facilities having given quarters of noncompliance. - Z &#x3D; Zero quarters in noncompliance. - GE1 &#x3D; One or more quarters in noncompliance. - GT1 &#x3D; More than one quarters in noncompliance. - GE2 &#x3D; Two or more quarters in noncompliance. - GT2 &#x3D; More than two quarters in noncompliance. - GE4 &#x3D; Four or more quarters in noncompliance. - GT4 &#x3D; More than four quarters in noncompliance. - GE8 &#x3D; Eight or more quarters in noncompliance. - GT8 &#x3D; More than eight quarters in noncompliance. - GE12 &#x3D; Twelve or more quarters in noncompliance. - GT12 &#x3D; Twelve or more quarters in noncompliance. - 12 &#x3D; Exactly twelve quarters in noncompliance. Note the seemingly incongruous of GT12 is deliberate. (optional)
     * @param pPfead1 Formal Enforcement Action Date Range Start.  Enter a date in MM/DD/YYYY format to set the start of the range for filtering by recent Formal Enforcement Action (FEA) taken against the facility within the last five years. (optional)
     * @param pPfead2 Formal Enforcement Action Date Range End.  Enter a date in MM/DD/YYYY format to set the end of the date range for filtering by recent Formal Enforcement Action (FEA) taken against the facility within the last five years. (optional)
     * @param pPfeat Formal Enforcement Action (FEA) Code Filter.  Enter one or more three-letter FEA codes to restrict results to facilities with these attributes.  Use p_fead1 and p_fead2 parameters to further restrict this filter by entering a date range.  Provide multiple codes as a comma-delimited list. (optional)
     * @param pSs5yr Sanitary Surveys (in past 5 years) flag.  Values of visit_reason_code are either \\\&quot;SNSV\\\&quot; or \\\&quot;SNSP\\\&quot; in the past 5 years indicate a Sanitary Survey.    Enter \\\&quot;Y\\\&quot; to select facilities with Sanitary Surveys within the past 5 years.    Enter \\\&quot;N\\\&quot; to select facilities without Sanitary Surveys in the past 5 years.  Enter a number to search for greater for facilities with a quantity than or equal to that value.    (optional)
     * @param pSdc Significant Deficiency Count (in past 5 years) flag.    Enter \\\&quot;Y\\\&quot; to select facilities with Sanitary Surveys within the past 5 years.    Enter \\\&quot;N\\\&quot; to select facilities without Sanitary Surveys in the past 5 years.  Enter a number to search for facilities with a quantity greater than or equal to that value. (optional)
     * @param pSdcIls  (optional)
     * @param pYsl Last Facility Inspection [within / not within] Specified Date Range Indicator. The date range is determined by parameters p_idt1 and p_idt2 or by parameter p_ysly. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pYsly Number of years (1 to 5) since last facility inspection.  A value of 1 means that it has been inspected within the year. (optional)
     * @param pYsla Facility Last Inspection Code Filter.  If left blank, both agencies are included.  Enter a value to limit results: - E &#x3D; EPA - S &#x3D; State (optional)
     * @param pIdt1 Beginning of date range of most recent facility inspection. (optional)
     * @param pIdt2 End of date range of most recent facility inspection. (optional)
     * @param pCmsFlag  (optional)
     * @param queryset Query Limiter.  Enter a value to limit the number of records returned for each query. Value cannot exceed 70,000. (optional)
     * @param responseset Response Set Limiter. Enter a value to limit the number of records per page. Value cannot exceed 1,000. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param qcolumns Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of public water systems that meet the specified search criteria. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sdwRestServicesGetSystemsPostCall(String output, String pFn, String pCt, String pCo, String pFips, String pSt, String pZip, String pReg, String pTrb, String pAct, String pQiv, String pIco, String pPid, String pOwop, String pSystyp, String pSwtyp, String pPopsv, String pCntysv, String pCs, String pMr, String pHealth, String pOther, String pPn, String pSv, String pQs, String pSfs, String pPswpol, String pPswvio, String pPbale, String pCuale, String pRc350v, String pPbv, String pCuv, String pLcrv, String pFea, BigDecimal pFeay, String pFeaa, String pIea, BigDecimal pIeay, String pIeaa, String pQis, String pPfead1, String pPfead2, String pPfeat, String pSs5yr, String pSdc, String pSdcIls, String pYsl, String pYsly, String pYsla, String pIdt1, String pIdt2, String pCmsFlag, BigDecimal queryset, BigDecimal responseset, String paramCallback, String qcolumns, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/sdw_rest_services.get_systems";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pFn != null) {
            localVarFormParams.put("p_fn", pFn);
        }

        if (pCt != null) {
            localVarFormParams.put("p_ct", pCt);
        }

        if (pCo != null) {
            localVarFormParams.put("p_co", pCo);
        }

        if (pFips != null) {
            localVarFormParams.put("p_fips", pFips);
        }

        if (pSt != null) {
            localVarFormParams.put("p_st", pSt);
        }

        if (pZip != null) {
            localVarFormParams.put("p_zip", pZip);
        }

        if (pReg != null) {
            localVarFormParams.put("p_reg", pReg);
        }

        if (pTrb != null) {
            localVarFormParams.put("p_trb", pTrb);
        }

        if (pAct != null) {
            localVarFormParams.put("p_act", pAct);
        }

        if (pQiv != null) {
            localVarFormParams.put("p_qiv", pQiv);
        }

        if (pIco != null) {
            localVarFormParams.put("p_ico", pIco);
        }

        if (pPid != null) {
            localVarFormParams.put("p_pid", pPid);
        }

        if (pOwop != null) {
            localVarFormParams.put("p_owop", pOwop);
        }

        if (pSystyp != null) {
            localVarFormParams.put("p_systyp", pSystyp);
        }

        if (pSwtyp != null) {
            localVarFormParams.put("p_swtyp", pSwtyp);
        }

        if (pPopsv != null) {
            localVarFormParams.put("p_popsv", pPopsv);
        }

        if (pCntysv != null) {
            localVarFormParams.put("p_cntysv", pCntysv);
        }

        if (pCs != null) {
            localVarFormParams.put("p_cs", pCs);
        }

        if (pMr != null) {
            localVarFormParams.put("p_mr", pMr);
        }

        if (pHealth != null) {
            localVarFormParams.put("p_health", pHealth);
        }

        if (pOther != null) {
            localVarFormParams.put("p_other", pOther);
        }

        if (pPn != null) {
            localVarFormParams.put("p_pn", pPn);
        }

        if (pSv != null) {
            localVarFormParams.put("p_sv", pSv);
        }

        if (pQs != null) {
            localVarFormParams.put("p_qs", pQs);
        }

        if (pSfs != null) {
            localVarFormParams.put("p_sfs", pSfs);
        }

        if (pPswpol != null) {
            localVarFormParams.put("p_pswpol", pPswpol);
        }

        if (pPswvio != null) {
            localVarFormParams.put("p_pswvio", pPswvio);
        }

        if (pPbale != null) {
            localVarFormParams.put("p_pbale", pPbale);
        }

        if (pCuale != null) {
            localVarFormParams.put("p_cuale", pCuale);
        }

        if (pRc350v != null) {
            localVarFormParams.put("p_rc350v", pRc350v);
        }

        if (pPbv != null) {
            localVarFormParams.put("p_pbv", pPbv);
        }

        if (pCuv != null) {
            localVarFormParams.put("p_cuv", pCuv);
        }

        if (pLcrv != null) {
            localVarFormParams.put("p_lcrv", pLcrv);
        }

        if (pFea != null) {
            localVarFormParams.put("p_fea", pFea);
        }

        if (pFeay != null) {
            localVarFormParams.put("p_feay", pFeay);
        }

        if (pFeaa != null) {
            localVarFormParams.put("p_feaa", pFeaa);
        }

        if (pIea != null) {
            localVarFormParams.put("p_iea", pIea);
        }

        if (pIeay != null) {
            localVarFormParams.put("p_ieay", pIeay);
        }

        if (pIeaa != null) {
            localVarFormParams.put("p_ieaa", pIeaa);
        }

        if (pQis != null) {
            localVarFormParams.put("p_qis", pQis);
        }

        if (pPfead1 != null) {
            localVarFormParams.put("p_pfead1", pPfead1);
        }

        if (pPfead2 != null) {
            localVarFormParams.put("p_pfead2", pPfead2);
        }

        if (pPfeat != null) {
            localVarFormParams.put("p_pfeat", pPfeat);
        }

        if (pSs5yr != null) {
            localVarFormParams.put("p_ss5yr", pSs5yr);
        }

        if (pSdc != null) {
            localVarFormParams.put("p_sdc", pSdc);
        }

        if (pSdcIls != null) {
            localVarFormParams.put("p_sdc_ils", pSdcIls);
        }

        if (pYsl != null) {
            localVarFormParams.put("p_ysl", pYsl);
        }

        if (pYsly != null) {
            localVarFormParams.put("p_ysly", pYsly);
        }

        if (pYsla != null) {
            localVarFormParams.put("p_ysla", pYsla);
        }

        if (pIdt1 != null) {
            localVarFormParams.put("p_idt1", pIdt1);
        }

        if (pIdt2 != null) {
            localVarFormParams.put("p_idt2", pIdt2);
        }

        if (pCmsFlag != null) {
            localVarFormParams.put("p_cms_flag", pCmsFlag);
        }

        if (queryset != null) {
            localVarFormParams.put("queryset", queryset);
        }

        if (responseset != null) {
            localVarFormParams.put("responseset", responseset);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        if (qcolumns != null) {
            localVarFormParams.put("qcolumns", qcolumns);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call sdwRestServicesGetSystemsPostValidateBeforeCall(String output, String pFn, String pCt, String pCo, String pFips, String pSt, String pZip, String pReg, String pTrb, String pAct, String pQiv, String pIco, String pPid, String pOwop, String pSystyp, String pSwtyp, String pPopsv, String pCntysv, String pCs, String pMr, String pHealth, String pOther, String pPn, String pSv, String pQs, String pSfs, String pPswpol, String pPswvio, String pPbale, String pCuale, String pRc350v, String pPbv, String pCuv, String pLcrv, String pFea, BigDecimal pFeay, String pFeaa, String pIea, BigDecimal pIeay, String pIeaa, String pQis, String pPfead1, String pPfead2, String pPfeat, String pSs5yr, String pSdc, String pSdcIls, String pYsl, String pYsly, String pYsla, String pIdt1, String pIdt2, String pCmsFlag, BigDecimal queryset, BigDecimal responseset, String paramCallback, String qcolumns, final ApiCallback _callback) throws ApiException {
        return sdwRestServicesGetSystemsPostCall(output, pFn, pCt, pCo, pFips, pSt, pZip, pReg, pTrb, pAct, pQiv, pIco, pPid, pOwop, pSystyp, pSwtyp, pPopsv, pCntysv, pCs, pMr, pHealth, pOther, pPn, pSv, pQs, pSfs, pPswpol, pPswvio, pPbale, pCuale, pRc350v, pPbv, pCuv, pLcrv, pFea, pFeay, pFeaa, pIea, pIeay, pIeaa, pQis, pPfead1, pPfead2, pPfeat, pSs5yr, pSdc, pSdcIls, pYsl, pYsly, pYsla, pIdt1, pIdt2, pCmsFlag, queryset, responseset, paramCallback, qcolumns, _callback);

    }

    /**
     * Safe Drinking Water Act (SDWA) Systems Search Service
     * Returns an array of public water systems that meet the specified search criteria.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pFn Facility Name Filter. Enter one or more case-insensitive facility names to filter results.  Provide multiple values as a comma-delimited list.  See p_fntype for additional modifiers. (optional)
     * @param pCt Facility City Filter. Enter a single case-insensitive city name to filter results. (optional)
     * @param pCo Facility County Filter. Provide a single county name in combination with a state value provided via p_st. (optional)
     * @param pFips FIPS Code Filter.  Enter a single 5-character Federal Information Processing Standards (FIPS) state + county value to restrict results.  E.g. to limit results to Kenosha County, Wisconsin, use 55059. (optional)
     * @param pSt Facility State and State-Equivalent Filter.  Provide one or more USPS postal abbreviations for states and state-equivalents to filter results.  Provide multiple values as a comma-delimited list. (optional)
     * @param pZip 5-Digit ZIP Code Filter. Provide one or more 5-digit postal zip codes to filter results.  May contain multiple comma-separated values. (optional)
     * @param pReg EPA Region Filter. Provide a single value of 01 thru 10 to restrict results to a single EPA region. (optional)
     * @param pTrb Tribe name (optional)
     * @param pAct Active Permits/Facilities Flag.  Provide Y or N to filter results to facilities with active permits. (optional)
     * @param pQiv Quarters in Noncompliance Limiter.  Enter a coded value to limit results to facilities with given quarter of noncompliance. - Z &#x3D; Zero quarters in noncompliance. - GEXX &#x3D; Replacing XX with a numeric value, that number of quarterd or more in noncompliance. - GTXX &#x3D; Replacing XX with a numeric value, more than that number of quarters in noncompliance. (optional)
     * @param pIco Indian Country Flag.  Enter a \\\&quot;Y\\\&quot; or \\\&quot;N\\\&quot; to restrict searches to facilities inside or outside Indian Country. (optional)
     * @param pPid Nine-digit permit IDs. May contain up to 2000 comma-separated values. (optional)
     * @param pOwop Owner/Operator code filter.  Enter one of the following codes to filter results: - F &#x3D; Federal Government - S &#x3D; State Government - L &#x3D; Local Government - M &#x3D; Public/Private - N &#x3D; Native American - P &#x3D; Private (optional)
     * @param pSystyp Type of public water system: - CWS&#x3D;Community water system - NCWS&#x3D;Non-community water system - NTCWS&#x3D;Non-transient non-community water system - TNCWS&#x3D;Transient non-community water system (optional)
     * @param pSwtyp Source Water Type: - SW &#x3D; Surface water  - GW&#x3D; Ground water - GU &#x3D; Ground water under direct influence of (UDI) surface water - SWP &#x3D; Purchased Surface water - GWP &#x3D; Purchased Ground water - GUP &#x3D; Purchased Ground water UDI surface water (optional)
     * @param pPopsv Estimated average daily population served by a system: - LE500 &#x3D; 500 or less - IN501_3K &#x3D; 501-3,300 - IN3K_10K &#x3D; 3,301-10,000 - IN10K_100K &#x3D; 10,001-100,000 - IN100K_1M &#x3D; 100,001-1,000,000 - GT1M &#x3D; More than 1,000,000 May contain multiple comma-separated values. (optional)
     * @param pCntysv  (optional)
     * @param pCs Current violations: - M &#x3D; Monitoring and Reporting Violations - H &#x3D; Health-based Violations - O &#x3D; Other Violations - P &#x3D; Public Notice Violations - S &#x3D; Serious Violator - N &#x3D; No Violations May contain multiple comma-separated values. (optional)
     * @param pMr Monitoring and Reporting Violations (failure to conduct regular monitoring of drinking water quality or submit monitoring results in a timely fashion). (optional)
     * @param pHealth Violations of health-based drinking water standards (maximum contaminant levels, maximum residual disinfectant levels, or treatment technique rules). (optional)
     * @param pOther Other violations, such as failing to issue annual consumer confidence reports or maintain required records. (optional)
     * @param pPn Public Notice Violations (failure to immediately alert consumers of serious problem with drinking water). (optional)
     * @param pSv Serious Violator (unresolved serious, multiple, and/or continuing violations). A value of Y will return only SDWIS systems that are Serious Violators, while a value of N will only return SDWIS Systems that are not Serious Violators. (optional)
     * @param pQs Quick Search. Allows entry for city, state, and/or zip code. (optional)
     * @param pSfs Single Facility Search Filter.  Provide a facility name or program system identifier to limit results.  For the all data search, the FRS registry identifier is also searched. (optional)
     * @param pPswpol For CWA, pollutant names for surface water discharges. for Drinking Water, SDWIS Violation contaminant codes for unaddressed violations that have occurred in the last 3 years. May contain multiple comma-separated values. (optional)
     * @param pPswvio Used in conjuction with parameters p_pswpol and p_pswparam, indicates whether search should only include pollutants with violations. (optional)
     * @param pPbale Lead Action Level Exceedance.  A \\\&quot;Y\\\&quot; value will select water systems with at least 1 Lead Action Level Exceedance. (optional)
     * @param pCuale Copper Action Level Exceedance.  A \\\&quot;Y\\\&quot; value will select water systems with at least 1 Copper Action Level Exceedance. (optional)
     * @param pRc350v Rule code 350 violation. A \\\&quot;Y\\\&quot; value will select water systems with at least one rule code 350 violation. (optional)
     * @param pPbv Lead Violations.  A \\\&quot;Y\\\&quot; value will select water systems with at least 1 Lead Violation. (optional)
     * @param pCuv Copper Violation.  A \\\&quot;Y\\\&quot; value will select water systems with at least 1 Copper Violation. (optional)
     * @param pLcrv Lead or Copper rule violations.  A \\\&quot;Y\\\&quot; value will select water systems with at least 1 Lead or Copper Rule Violation. (optional)
     * @param pFea Formal Enforcement Actions [within / not within] specified date range indicator. The date range is determined by parameters p_fead1 and p_fead2 or by parameter p_feay. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pFeay Years (1 to 5) Range.  This value is used to create a date range for Formal Enforcement Actions (FEA). Used along with p_fea (which indicates whether to look within or outside of the date range) to find FEAs within (or not within) the number of years specified. (optional)
     * @param pFeaa Agency associated with Formal Enforcement Actions: - E &#x3D; EPA - S &#x3D; State - A &#x3D; All (optional)
     * @param pIea Informal Enforcement Actions [within / not within] specified date range.  The date range is determined by parameters p_iead1 and p_iead2 or by parameter p_ieay. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pIeay Years (1 to 5) Range.  This value is used to create a date range for Informal Enforcement Actions (IEA). Used along with p_iea (which indicates whether to look within or outside of the date range) to find IEAs within (or not within) the number of years specified. (optional)
     * @param pIeaa Agency associated with Informal Enforcement Actions. If left blank, both agencies are included. - E &#x3D; EPA - S &#x3D; State (optional)
     * @param pQis Significant Quarters in Noncompliance Limiter.  Enter one of the following codes to limit results to facilities having given quarters of noncompliance. - Z &#x3D; Zero quarters in noncompliance. - GE1 &#x3D; One or more quarters in noncompliance. - GT1 &#x3D; More than one quarters in noncompliance. - GE2 &#x3D; Two or more quarters in noncompliance. - GT2 &#x3D; More than two quarters in noncompliance. - GE4 &#x3D; Four or more quarters in noncompliance. - GT4 &#x3D; More than four quarters in noncompliance. - GE8 &#x3D; Eight or more quarters in noncompliance. - GT8 &#x3D; More than eight quarters in noncompliance. - GE12 &#x3D; Twelve or more quarters in noncompliance. - GT12 &#x3D; Twelve or more quarters in noncompliance. - 12 &#x3D; Exactly twelve quarters in noncompliance. Note the seemingly incongruous of GT12 is deliberate. (optional)
     * @param pPfead1 Formal Enforcement Action Date Range Start.  Enter a date in MM/DD/YYYY format to set the start of the range for filtering by recent Formal Enforcement Action (FEA) taken against the facility within the last five years. (optional)
     * @param pPfead2 Formal Enforcement Action Date Range End.  Enter a date in MM/DD/YYYY format to set the end of the date range for filtering by recent Formal Enforcement Action (FEA) taken against the facility within the last five years. (optional)
     * @param pPfeat Formal Enforcement Action (FEA) Code Filter.  Enter one or more three-letter FEA codes to restrict results to facilities with these attributes.  Use p_fead1 and p_fead2 parameters to further restrict this filter by entering a date range.  Provide multiple codes as a comma-delimited list. (optional)
     * @param pSs5yr Sanitary Surveys (in past 5 years) flag.  Values of visit_reason_code are either \\\&quot;SNSV\\\&quot; or \\\&quot;SNSP\\\&quot; in the past 5 years indicate a Sanitary Survey.    Enter \\\&quot;Y\\\&quot; to select facilities with Sanitary Surveys within the past 5 years.    Enter \\\&quot;N\\\&quot; to select facilities without Sanitary Surveys in the past 5 years.  Enter a number to search for greater for facilities with a quantity than or equal to that value.    (optional)
     * @param pSdc Significant Deficiency Count (in past 5 years) flag.    Enter \\\&quot;Y\\\&quot; to select facilities with Sanitary Surveys within the past 5 years.    Enter \\\&quot;N\\\&quot; to select facilities without Sanitary Surveys in the past 5 years.  Enter a number to search for facilities with a quantity greater than or equal to that value. (optional)
     * @param pSdcIls  (optional)
     * @param pYsl Last Facility Inspection [within / not within] Specified Date Range Indicator. The date range is determined by parameters p_idt1 and p_idt2 or by parameter p_ysly. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pYsly Number of years (1 to 5) since last facility inspection.  A value of 1 means that it has been inspected within the year. (optional)
     * @param pYsla Facility Last Inspection Code Filter.  If left blank, both agencies are included.  Enter a value to limit results: - E &#x3D; EPA - S &#x3D; State (optional)
     * @param pIdt1 Beginning of date range of most recent facility inspection. (optional)
     * @param pIdt2 End of date range of most recent facility inspection. (optional)
     * @param pCmsFlag  (optional)
     * @param queryset Query Limiter.  Enter a value to limit the number of records returned for each query. Value cannot exceed 70,000. (optional)
     * @param responseset Response Set Limiter. Enter a value to limit the number of records per page. Value cannot exceed 1,000. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param qcolumns Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions. (optional)
     * @return SdwRestServicesGetSystemsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of public water systems that meet the specified search criteria. </td><td>  -  </td></tr>
     </table>
     */
    public SdwRestServicesGetSystemsGet200Response sdwRestServicesGetSystemsPost(String output, String pFn, String pCt, String pCo, String pFips, String pSt, String pZip, String pReg, String pTrb, String pAct, String pQiv, String pIco, String pPid, String pOwop, String pSystyp, String pSwtyp, String pPopsv, String pCntysv, String pCs, String pMr, String pHealth, String pOther, String pPn, String pSv, String pQs, String pSfs, String pPswpol, String pPswvio, String pPbale, String pCuale, String pRc350v, String pPbv, String pCuv, String pLcrv, String pFea, BigDecimal pFeay, String pFeaa, String pIea, BigDecimal pIeay, String pIeaa, String pQis, String pPfead1, String pPfead2, String pPfeat, String pSs5yr, String pSdc, String pSdcIls, String pYsl, String pYsly, String pYsla, String pIdt1, String pIdt2, String pCmsFlag, BigDecimal queryset, BigDecimal responseset, String paramCallback, String qcolumns) throws ApiException {
        ApiResponse<SdwRestServicesGetSystemsGet200Response> localVarResp = sdwRestServicesGetSystemsPostWithHttpInfo(output, pFn, pCt, pCo, pFips, pSt, pZip, pReg, pTrb, pAct, pQiv, pIco, pPid, pOwop, pSystyp, pSwtyp, pPopsv, pCntysv, pCs, pMr, pHealth, pOther, pPn, pSv, pQs, pSfs, pPswpol, pPswvio, pPbale, pCuale, pRc350v, pPbv, pCuv, pLcrv, pFea, pFeay, pFeaa, pIea, pIeay, pIeaa, pQis, pPfead1, pPfead2, pPfeat, pSs5yr, pSdc, pSdcIls, pYsl, pYsly, pYsla, pIdt1, pIdt2, pCmsFlag, queryset, responseset, paramCallback, qcolumns);
        return localVarResp.getData();
    }

    /**
     * Safe Drinking Water Act (SDWA) Systems Search Service
     * Returns an array of public water systems that meet the specified search criteria.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pFn Facility Name Filter. Enter one or more case-insensitive facility names to filter results.  Provide multiple values as a comma-delimited list.  See p_fntype for additional modifiers. (optional)
     * @param pCt Facility City Filter. Enter a single case-insensitive city name to filter results. (optional)
     * @param pCo Facility County Filter. Provide a single county name in combination with a state value provided via p_st. (optional)
     * @param pFips FIPS Code Filter.  Enter a single 5-character Federal Information Processing Standards (FIPS) state + county value to restrict results.  E.g. to limit results to Kenosha County, Wisconsin, use 55059. (optional)
     * @param pSt Facility State and State-Equivalent Filter.  Provide one or more USPS postal abbreviations for states and state-equivalents to filter results.  Provide multiple values as a comma-delimited list. (optional)
     * @param pZip 5-Digit ZIP Code Filter. Provide one or more 5-digit postal zip codes to filter results.  May contain multiple comma-separated values. (optional)
     * @param pReg EPA Region Filter. Provide a single value of 01 thru 10 to restrict results to a single EPA region. (optional)
     * @param pTrb Tribe name (optional)
     * @param pAct Active Permits/Facilities Flag.  Provide Y or N to filter results to facilities with active permits. (optional)
     * @param pQiv Quarters in Noncompliance Limiter.  Enter a coded value to limit results to facilities with given quarter of noncompliance. - Z &#x3D; Zero quarters in noncompliance. - GEXX &#x3D; Replacing XX with a numeric value, that number of quarterd or more in noncompliance. - GTXX &#x3D; Replacing XX with a numeric value, more than that number of quarters in noncompliance. (optional)
     * @param pIco Indian Country Flag.  Enter a \\\&quot;Y\\\&quot; or \\\&quot;N\\\&quot; to restrict searches to facilities inside or outside Indian Country. (optional)
     * @param pPid Nine-digit permit IDs. May contain up to 2000 comma-separated values. (optional)
     * @param pOwop Owner/Operator code filter.  Enter one of the following codes to filter results: - F &#x3D; Federal Government - S &#x3D; State Government - L &#x3D; Local Government - M &#x3D; Public/Private - N &#x3D; Native American - P &#x3D; Private (optional)
     * @param pSystyp Type of public water system: - CWS&#x3D;Community water system - NCWS&#x3D;Non-community water system - NTCWS&#x3D;Non-transient non-community water system - TNCWS&#x3D;Transient non-community water system (optional)
     * @param pSwtyp Source Water Type: - SW &#x3D; Surface water  - GW&#x3D; Ground water - GU &#x3D; Ground water under direct influence of (UDI) surface water - SWP &#x3D; Purchased Surface water - GWP &#x3D; Purchased Ground water - GUP &#x3D; Purchased Ground water UDI surface water (optional)
     * @param pPopsv Estimated average daily population served by a system: - LE500 &#x3D; 500 or less - IN501_3K &#x3D; 501-3,300 - IN3K_10K &#x3D; 3,301-10,000 - IN10K_100K &#x3D; 10,001-100,000 - IN100K_1M &#x3D; 100,001-1,000,000 - GT1M &#x3D; More than 1,000,000 May contain multiple comma-separated values. (optional)
     * @param pCntysv  (optional)
     * @param pCs Current violations: - M &#x3D; Monitoring and Reporting Violations - H &#x3D; Health-based Violations - O &#x3D; Other Violations - P &#x3D; Public Notice Violations - S &#x3D; Serious Violator - N &#x3D; No Violations May contain multiple comma-separated values. (optional)
     * @param pMr Monitoring and Reporting Violations (failure to conduct regular monitoring of drinking water quality or submit monitoring results in a timely fashion). (optional)
     * @param pHealth Violations of health-based drinking water standards (maximum contaminant levels, maximum residual disinfectant levels, or treatment technique rules). (optional)
     * @param pOther Other violations, such as failing to issue annual consumer confidence reports or maintain required records. (optional)
     * @param pPn Public Notice Violations (failure to immediately alert consumers of serious problem with drinking water). (optional)
     * @param pSv Serious Violator (unresolved serious, multiple, and/or continuing violations). A value of Y will return only SDWIS systems that are Serious Violators, while a value of N will only return SDWIS Systems that are not Serious Violators. (optional)
     * @param pQs Quick Search. Allows entry for city, state, and/or zip code. (optional)
     * @param pSfs Single Facility Search Filter.  Provide a facility name or program system identifier to limit results.  For the all data search, the FRS registry identifier is also searched. (optional)
     * @param pPswpol For CWA, pollutant names for surface water discharges. for Drinking Water, SDWIS Violation contaminant codes for unaddressed violations that have occurred in the last 3 years. May contain multiple comma-separated values. (optional)
     * @param pPswvio Used in conjuction with parameters p_pswpol and p_pswparam, indicates whether search should only include pollutants with violations. (optional)
     * @param pPbale Lead Action Level Exceedance.  A \\\&quot;Y\\\&quot; value will select water systems with at least 1 Lead Action Level Exceedance. (optional)
     * @param pCuale Copper Action Level Exceedance.  A \\\&quot;Y\\\&quot; value will select water systems with at least 1 Copper Action Level Exceedance. (optional)
     * @param pRc350v Rule code 350 violation. A \\\&quot;Y\\\&quot; value will select water systems with at least one rule code 350 violation. (optional)
     * @param pPbv Lead Violations.  A \\\&quot;Y\\\&quot; value will select water systems with at least 1 Lead Violation. (optional)
     * @param pCuv Copper Violation.  A \\\&quot;Y\\\&quot; value will select water systems with at least 1 Copper Violation. (optional)
     * @param pLcrv Lead or Copper rule violations.  A \\\&quot;Y\\\&quot; value will select water systems with at least 1 Lead or Copper Rule Violation. (optional)
     * @param pFea Formal Enforcement Actions [within / not within] specified date range indicator. The date range is determined by parameters p_fead1 and p_fead2 or by parameter p_feay. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pFeay Years (1 to 5) Range.  This value is used to create a date range for Formal Enforcement Actions (FEA). Used along with p_fea (which indicates whether to look within or outside of the date range) to find FEAs within (or not within) the number of years specified. (optional)
     * @param pFeaa Agency associated with Formal Enforcement Actions: - E &#x3D; EPA - S &#x3D; State - A &#x3D; All (optional)
     * @param pIea Informal Enforcement Actions [within / not within] specified date range.  The date range is determined by parameters p_iead1 and p_iead2 or by parameter p_ieay. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pIeay Years (1 to 5) Range.  This value is used to create a date range for Informal Enforcement Actions (IEA). Used along with p_iea (which indicates whether to look within or outside of the date range) to find IEAs within (or not within) the number of years specified. (optional)
     * @param pIeaa Agency associated with Informal Enforcement Actions. If left blank, both agencies are included. - E &#x3D; EPA - S &#x3D; State (optional)
     * @param pQis Significant Quarters in Noncompliance Limiter.  Enter one of the following codes to limit results to facilities having given quarters of noncompliance. - Z &#x3D; Zero quarters in noncompliance. - GE1 &#x3D; One or more quarters in noncompliance. - GT1 &#x3D; More than one quarters in noncompliance. - GE2 &#x3D; Two or more quarters in noncompliance. - GT2 &#x3D; More than two quarters in noncompliance. - GE4 &#x3D; Four or more quarters in noncompliance. - GT4 &#x3D; More than four quarters in noncompliance. - GE8 &#x3D; Eight or more quarters in noncompliance. - GT8 &#x3D; More than eight quarters in noncompliance. - GE12 &#x3D; Twelve or more quarters in noncompliance. - GT12 &#x3D; Twelve or more quarters in noncompliance. - 12 &#x3D; Exactly twelve quarters in noncompliance. Note the seemingly incongruous of GT12 is deliberate. (optional)
     * @param pPfead1 Formal Enforcement Action Date Range Start.  Enter a date in MM/DD/YYYY format to set the start of the range for filtering by recent Formal Enforcement Action (FEA) taken against the facility within the last five years. (optional)
     * @param pPfead2 Formal Enforcement Action Date Range End.  Enter a date in MM/DD/YYYY format to set the end of the date range for filtering by recent Formal Enforcement Action (FEA) taken against the facility within the last five years. (optional)
     * @param pPfeat Formal Enforcement Action (FEA) Code Filter.  Enter one or more three-letter FEA codes to restrict results to facilities with these attributes.  Use p_fead1 and p_fead2 parameters to further restrict this filter by entering a date range.  Provide multiple codes as a comma-delimited list. (optional)
     * @param pSs5yr Sanitary Surveys (in past 5 years) flag.  Values of visit_reason_code are either \\\&quot;SNSV\\\&quot; or \\\&quot;SNSP\\\&quot; in the past 5 years indicate a Sanitary Survey.    Enter \\\&quot;Y\\\&quot; to select facilities with Sanitary Surveys within the past 5 years.    Enter \\\&quot;N\\\&quot; to select facilities without Sanitary Surveys in the past 5 years.  Enter a number to search for greater for facilities with a quantity than or equal to that value.    (optional)
     * @param pSdc Significant Deficiency Count (in past 5 years) flag.    Enter \\\&quot;Y\\\&quot; to select facilities with Sanitary Surveys within the past 5 years.    Enter \\\&quot;N\\\&quot; to select facilities without Sanitary Surveys in the past 5 years.  Enter a number to search for facilities with a quantity greater than or equal to that value. (optional)
     * @param pSdcIls  (optional)
     * @param pYsl Last Facility Inspection [within / not within] Specified Date Range Indicator. The date range is determined by parameters p_idt1 and p_idt2 or by parameter p_ysly. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pYsly Number of years (1 to 5) since last facility inspection.  A value of 1 means that it has been inspected within the year. (optional)
     * @param pYsla Facility Last Inspection Code Filter.  If left blank, both agencies are included.  Enter a value to limit results: - E &#x3D; EPA - S &#x3D; State (optional)
     * @param pIdt1 Beginning of date range of most recent facility inspection. (optional)
     * @param pIdt2 End of date range of most recent facility inspection. (optional)
     * @param pCmsFlag  (optional)
     * @param queryset Query Limiter.  Enter a value to limit the number of records returned for each query. Value cannot exceed 70,000. (optional)
     * @param responseset Response Set Limiter. Enter a value to limit the number of records per page. Value cannot exceed 1,000. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param qcolumns Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions. (optional)
     * @return ApiResponse&lt;SdwRestServicesGetSystemsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of public water systems that meet the specified search criteria. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<SdwRestServicesGetSystemsGet200Response> sdwRestServicesGetSystemsPostWithHttpInfo(String output, String pFn, String pCt, String pCo, String pFips, String pSt, String pZip, String pReg, String pTrb, String pAct, String pQiv, String pIco, String pPid, String pOwop, String pSystyp, String pSwtyp, String pPopsv, String pCntysv, String pCs, String pMr, String pHealth, String pOther, String pPn, String pSv, String pQs, String pSfs, String pPswpol, String pPswvio, String pPbale, String pCuale, String pRc350v, String pPbv, String pCuv, String pLcrv, String pFea, BigDecimal pFeay, String pFeaa, String pIea, BigDecimal pIeay, String pIeaa, String pQis, String pPfead1, String pPfead2, String pPfeat, String pSs5yr, String pSdc, String pSdcIls, String pYsl, String pYsly, String pYsla, String pIdt1, String pIdt2, String pCmsFlag, BigDecimal queryset, BigDecimal responseset, String paramCallback, String qcolumns) throws ApiException {
        okhttp3.Call localVarCall = sdwRestServicesGetSystemsPostValidateBeforeCall(output, pFn, pCt, pCo, pFips, pSt, pZip, pReg, pTrb, pAct, pQiv, pIco, pPid, pOwop, pSystyp, pSwtyp, pPopsv, pCntysv, pCs, pMr, pHealth, pOther, pPn, pSv, pQs, pSfs, pPswpol, pPswvio, pPbale, pCuale, pRc350v, pPbv, pCuv, pLcrv, pFea, pFeay, pFeaa, pIea, pIeay, pIeaa, pQis, pPfead1, pPfead2, pPfeat, pSs5yr, pSdc, pSdcIls, pYsl, pYsly, pYsla, pIdt1, pIdt2, pCmsFlag, queryset, responseset, paramCallback, qcolumns, null);
        Type localVarReturnType = new TypeToken<SdwRestServicesGetSystemsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Safe Drinking Water Act (SDWA) Systems Search Service (asynchronously)
     * Returns an array of public water systems that meet the specified search criteria.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pFn Facility Name Filter. Enter one or more case-insensitive facility names to filter results.  Provide multiple values as a comma-delimited list.  See p_fntype for additional modifiers. (optional)
     * @param pCt Facility City Filter. Enter a single case-insensitive city name to filter results. (optional)
     * @param pCo Facility County Filter. Provide a single county name in combination with a state value provided via p_st. (optional)
     * @param pFips FIPS Code Filter.  Enter a single 5-character Federal Information Processing Standards (FIPS) state + county value to restrict results.  E.g. to limit results to Kenosha County, Wisconsin, use 55059. (optional)
     * @param pSt Facility State and State-Equivalent Filter.  Provide one or more USPS postal abbreviations for states and state-equivalents to filter results.  Provide multiple values as a comma-delimited list. (optional)
     * @param pZip 5-Digit ZIP Code Filter. Provide one or more 5-digit postal zip codes to filter results.  May contain multiple comma-separated values. (optional)
     * @param pReg EPA Region Filter. Provide a single value of 01 thru 10 to restrict results to a single EPA region. (optional)
     * @param pTrb Tribe name (optional)
     * @param pAct Active Permits/Facilities Flag.  Provide Y or N to filter results to facilities with active permits. (optional)
     * @param pQiv Quarters in Noncompliance Limiter.  Enter a coded value to limit results to facilities with given quarter of noncompliance. - Z &#x3D; Zero quarters in noncompliance. - GEXX &#x3D; Replacing XX with a numeric value, that number of quarterd or more in noncompliance. - GTXX &#x3D; Replacing XX with a numeric value, more than that number of quarters in noncompliance. (optional)
     * @param pIco Indian Country Flag.  Enter a \\\&quot;Y\\\&quot; or \\\&quot;N\\\&quot; to restrict searches to facilities inside or outside Indian Country. (optional)
     * @param pPid Nine-digit permit IDs. May contain up to 2000 comma-separated values. (optional)
     * @param pOwop Owner/Operator code filter.  Enter one of the following codes to filter results: - F &#x3D; Federal Government - S &#x3D; State Government - L &#x3D; Local Government - M &#x3D; Public/Private - N &#x3D; Native American - P &#x3D; Private (optional)
     * @param pSystyp Type of public water system: - CWS&#x3D;Community water system - NCWS&#x3D;Non-community water system - NTCWS&#x3D;Non-transient non-community water system - TNCWS&#x3D;Transient non-community water system (optional)
     * @param pSwtyp Source Water Type: - SW &#x3D; Surface water  - GW&#x3D; Ground water - GU &#x3D; Ground water under direct influence of (UDI) surface water - SWP &#x3D; Purchased Surface water - GWP &#x3D; Purchased Ground water - GUP &#x3D; Purchased Ground water UDI surface water (optional)
     * @param pPopsv Estimated average daily population served by a system: - LE500 &#x3D; 500 or less - IN501_3K &#x3D; 501-3,300 - IN3K_10K &#x3D; 3,301-10,000 - IN10K_100K &#x3D; 10,001-100,000 - IN100K_1M &#x3D; 100,001-1,000,000 - GT1M &#x3D; More than 1,000,000 May contain multiple comma-separated values. (optional)
     * @param pCntysv  (optional)
     * @param pCs Current violations: - M &#x3D; Monitoring and Reporting Violations - H &#x3D; Health-based Violations - O &#x3D; Other Violations - P &#x3D; Public Notice Violations - S &#x3D; Serious Violator - N &#x3D; No Violations May contain multiple comma-separated values. (optional)
     * @param pMr Monitoring and Reporting Violations (failure to conduct regular monitoring of drinking water quality or submit monitoring results in a timely fashion). (optional)
     * @param pHealth Violations of health-based drinking water standards (maximum contaminant levels, maximum residual disinfectant levels, or treatment technique rules). (optional)
     * @param pOther Other violations, such as failing to issue annual consumer confidence reports or maintain required records. (optional)
     * @param pPn Public Notice Violations (failure to immediately alert consumers of serious problem with drinking water). (optional)
     * @param pSv Serious Violator (unresolved serious, multiple, and/or continuing violations). A value of Y will return only SDWIS systems that are Serious Violators, while a value of N will only return SDWIS Systems that are not Serious Violators. (optional)
     * @param pQs Quick Search. Allows entry for city, state, and/or zip code. (optional)
     * @param pSfs Single Facility Search Filter.  Provide a facility name or program system identifier to limit results.  For the all data search, the FRS registry identifier is also searched. (optional)
     * @param pPswpol For CWA, pollutant names for surface water discharges. for Drinking Water, SDWIS Violation contaminant codes for unaddressed violations that have occurred in the last 3 years. May contain multiple comma-separated values. (optional)
     * @param pPswvio Used in conjuction with parameters p_pswpol and p_pswparam, indicates whether search should only include pollutants with violations. (optional)
     * @param pPbale Lead Action Level Exceedance.  A \\\&quot;Y\\\&quot; value will select water systems with at least 1 Lead Action Level Exceedance. (optional)
     * @param pCuale Copper Action Level Exceedance.  A \\\&quot;Y\\\&quot; value will select water systems with at least 1 Copper Action Level Exceedance. (optional)
     * @param pRc350v Rule code 350 violation. A \\\&quot;Y\\\&quot; value will select water systems with at least one rule code 350 violation. (optional)
     * @param pPbv Lead Violations.  A \\\&quot;Y\\\&quot; value will select water systems with at least 1 Lead Violation. (optional)
     * @param pCuv Copper Violation.  A \\\&quot;Y\\\&quot; value will select water systems with at least 1 Copper Violation. (optional)
     * @param pLcrv Lead or Copper rule violations.  A \\\&quot;Y\\\&quot; value will select water systems with at least 1 Lead or Copper Rule Violation. (optional)
     * @param pFea Formal Enforcement Actions [within / not within] specified date range indicator. The date range is determined by parameters p_fead1 and p_fead2 or by parameter p_feay. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pFeay Years (1 to 5) Range.  This value is used to create a date range for Formal Enforcement Actions (FEA). Used along with p_fea (which indicates whether to look within or outside of the date range) to find FEAs within (or not within) the number of years specified. (optional)
     * @param pFeaa Agency associated with Formal Enforcement Actions: - E &#x3D; EPA - S &#x3D; State - A &#x3D; All (optional)
     * @param pIea Informal Enforcement Actions [within / not within] specified date range.  The date range is determined by parameters p_iead1 and p_iead2 or by parameter p_ieay. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pIeay Years (1 to 5) Range.  This value is used to create a date range for Informal Enforcement Actions (IEA). Used along with p_iea (which indicates whether to look within or outside of the date range) to find IEAs within (or not within) the number of years specified. (optional)
     * @param pIeaa Agency associated with Informal Enforcement Actions. If left blank, both agencies are included. - E &#x3D; EPA - S &#x3D; State (optional)
     * @param pQis Significant Quarters in Noncompliance Limiter.  Enter one of the following codes to limit results to facilities having given quarters of noncompliance. - Z &#x3D; Zero quarters in noncompliance. - GE1 &#x3D; One or more quarters in noncompliance. - GT1 &#x3D; More than one quarters in noncompliance. - GE2 &#x3D; Two or more quarters in noncompliance. - GT2 &#x3D; More than two quarters in noncompliance. - GE4 &#x3D; Four or more quarters in noncompliance. - GT4 &#x3D; More than four quarters in noncompliance. - GE8 &#x3D; Eight or more quarters in noncompliance. - GT8 &#x3D; More than eight quarters in noncompliance. - GE12 &#x3D; Twelve or more quarters in noncompliance. - GT12 &#x3D; Twelve or more quarters in noncompliance. - 12 &#x3D; Exactly twelve quarters in noncompliance. Note the seemingly incongruous of GT12 is deliberate. (optional)
     * @param pPfead1 Formal Enforcement Action Date Range Start.  Enter a date in MM/DD/YYYY format to set the start of the range for filtering by recent Formal Enforcement Action (FEA) taken against the facility within the last five years. (optional)
     * @param pPfead2 Formal Enforcement Action Date Range End.  Enter a date in MM/DD/YYYY format to set the end of the date range for filtering by recent Formal Enforcement Action (FEA) taken against the facility within the last five years. (optional)
     * @param pPfeat Formal Enforcement Action (FEA) Code Filter.  Enter one or more three-letter FEA codes to restrict results to facilities with these attributes.  Use p_fead1 and p_fead2 parameters to further restrict this filter by entering a date range.  Provide multiple codes as a comma-delimited list. (optional)
     * @param pSs5yr Sanitary Surveys (in past 5 years) flag.  Values of visit_reason_code are either \\\&quot;SNSV\\\&quot; or \\\&quot;SNSP\\\&quot; in the past 5 years indicate a Sanitary Survey.    Enter \\\&quot;Y\\\&quot; to select facilities with Sanitary Surveys within the past 5 years.    Enter \\\&quot;N\\\&quot; to select facilities without Sanitary Surveys in the past 5 years.  Enter a number to search for greater for facilities with a quantity than or equal to that value.    (optional)
     * @param pSdc Significant Deficiency Count (in past 5 years) flag.    Enter \\\&quot;Y\\\&quot; to select facilities with Sanitary Surveys within the past 5 years.    Enter \\\&quot;N\\\&quot; to select facilities without Sanitary Surveys in the past 5 years.  Enter a number to search for facilities with a quantity greater than or equal to that value. (optional)
     * @param pSdcIls  (optional)
     * @param pYsl Last Facility Inspection [within / not within] Specified Date Range Indicator. The date range is determined by parameters p_idt1 and p_idt2 or by parameter p_ysly. - W &#x3D; within date range - N &#x3D; not within date range (optional)
     * @param pYsly Number of years (1 to 5) since last facility inspection.  A value of 1 means that it has been inspected within the year. (optional)
     * @param pYsla Facility Last Inspection Code Filter.  If left blank, both agencies are included.  Enter a value to limit results: - E &#x3D; EPA - S &#x3D; State (optional)
     * @param pIdt1 Beginning of date range of most recent facility inspection. (optional)
     * @param pIdt2 End of date range of most recent facility inspection. (optional)
     * @param pCmsFlag  (optional)
     * @param queryset Query Limiter.  Enter a value to limit the number of records returned for each query. Value cannot exceed 70,000. (optional)
     * @param responseset Response Set Limiter. Enter a value to limit the number of records per page. Value cannot exceed 1,000. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param qcolumns Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an array of public water systems that meet the specified search criteria. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sdwRestServicesGetSystemsPostAsync(String output, String pFn, String pCt, String pCo, String pFips, String pSt, String pZip, String pReg, String pTrb, String pAct, String pQiv, String pIco, String pPid, String pOwop, String pSystyp, String pSwtyp, String pPopsv, String pCntysv, String pCs, String pMr, String pHealth, String pOther, String pPn, String pSv, String pQs, String pSfs, String pPswpol, String pPswvio, String pPbale, String pCuale, String pRc350v, String pPbv, String pCuv, String pLcrv, String pFea, BigDecimal pFeay, String pFeaa, String pIea, BigDecimal pIeay, String pIeaa, String pQis, String pPfead1, String pPfead2, String pPfeat, String pSs5yr, String pSdc, String pSdcIls, String pYsl, String pYsly, String pYsla, String pIdt1, String pIdt2, String pCmsFlag, BigDecimal queryset, BigDecimal responseset, String paramCallback, String qcolumns, final ApiCallback<SdwRestServicesGetSystemsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = sdwRestServicesGetSystemsPostValidateBeforeCall(output, pFn, pCt, pCo, pFips, pSt, pZip, pReg, pTrb, pAct, pQiv, pIco, pPid, pOwop, pSystyp, pSwtyp, pPopsv, pCntysv, pCs, pMr, pHealth, pOther, pPn, pSv, pQs, pSfs, pPswpol, pPswvio, pPbale, pCuale, pRc350v, pPbv, pCuv, pLcrv, pFea, pFeay, pFeaa, pIea, pIeay, pIeaa, pQis, pPfead1, pPfead2, pPfeat, pSs5yr, pSdc, pSdcIls, pYsl, pYsly, pYsla, pIdt1, pIdt2, pCmsFlag, queryset, responseset, paramCallback, qcolumns, _callback);
        Type localVarReturnType = new TypeToken<SdwRestServicesGetSystemsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
