/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Safe Drinking Water Act
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.    SDW Rest Services provides multiple service endpoints, each with specific capabilities, to search and retrieve data on public water systems regulated under the Safe Drinking Water Act (SDWA).  The returned results reflect data drawn from EPA's Federal Safe Drinking Water Information System (SDWIS) database. \\ The get_systems, get_qid, and get_download end points are meant to be used together. \\ The recommended use scenario for get_systems, get_qid, and get_downoad is: \\  <b>1)</b>  Use get_systems to validate passed query parameters, obtain summary statistics and to obtain a query_id (QID).  QIDs are time sensitive and will be valid for approximately 30 minutes.  <b>2)</b>  Use get_qid, with the returned QID, to paginate through arrays of water system results.  <b>3)</b>  Use get_download, with the returned QID, to generate a Comma Separated Value (CSV) file of water system information that meets the QID query criteria. \\ \\ Use the qcolumns parameter to customize your search results.  Use the Metadata service endpoint for a list of available output objects, their Column Ids, and their definitions to help you build your customized output.  \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 2019.10.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import FormDataFDescending from './model/FormDataFDescending';
import FormDataFPAct from './model/FormDataFPAct';
import FormDataFPFea from './model/FormDataFPFea';
import FormDataFPFeaa from './model/FormDataFPFeaa';
import FormDataFPFeay from './model/FormDataFPFeay';
import FormDataFPHealth from './model/FormDataFPHealth';
import FormDataFPIco from './model/FormDataFPIco';
import FormDataFPIea from './model/FormDataFPIea';
import FormDataFPIeaa from './model/FormDataFPIeaa';
import FormDataFPIeay from './model/FormDataFPIeay';
import FormDataFPMr from './model/FormDataFPMr';
import FormDataFPOther from './model/FormDataFPOther';
import FormDataFPOwop from './model/FormDataFPOwop';
import FormDataFPPn from './model/FormDataFPPn';
import FormDataFPPswvio from './model/FormDataFPPswvio';
import FormDataFPQis from './model/FormDataFPQis';
import FormDataFPQiv from './model/FormDataFPQiv';
import FormDataFPReg from './model/FormDataFPReg';
import FormDataFPSv from './model/FormDataFPSv';
import FormDataFPSwtyp from './model/FormDataFPSwtyp';
import FormDataFPSystyp from './model/FormDataFPSystyp';
import FormDataFPYsl from './model/FormDataFPYsl';
import FormDataFPYsla from './model/FormDataFPYsla';
import FormDataFPYsly from './model/FormDataFPYsly';
import Meta1 from './model/Meta1';
import Meta3 from './model/Meta3';
import Sdw02 from './model/Sdw02';
import Sdw03 from './model/Sdw03';
import Sdw04 from './model/Sdw04';
import SdwRestServicesGetQidGet200Response from './model/SdwRestServicesGetQidGet200Response';
import SdwRestServicesGetSystemsGet200Response from './model/SdwRestServicesGetSystemsGet200Response';
import SdwRestServicesMetadataGet200Response from './model/SdwRestServicesMetadataGet200Response';
import MetadataApi from './api/MetadataApi';
import SafeDrinkingWaterApi from './api/SafeDrinkingWaterApi';


/**
* Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA&#39;s Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.    SDW Rest Services provides multiple service endpoints, each with specific capabilities, to search and retrieve data on public water systems regulated under the Safe Drinking Water Act (SDWA).  The returned results reflect data drawn from EPA&#39;s Federal Safe Drinking Water Information System (SDWIS) database. \\ The get_systems, get_qid, and get_download end points are meant to be used together. \\ The recommended use scenario for get_systems, get_qid, and get_downoad is: \\  &lt;b&gt;1)&lt;/b&gt;  Use get_systems to validate passed query parameters, obtain summary statistics and to obtain a query_id (QID).  QIDs are time sensitive and will be valid for approximately 30 minutes.  &lt;b&gt;2)&lt;/b&gt;  Use get_qid, with the returned QID, to paginate through arrays of water system results.  &lt;b&gt;3)&lt;/b&gt;  Use get_download, with the returned QID, to generate a Comma Separated Value (CSV) file of water system information that meets the QID query criteria. \\ \\ Use the qcolumns parameter to customize your search results.  Use the Metadata service endpoint for a list of available output objects, their Column Ids, and their definitions to help you build your customized output.  \\ Additional ECHO Resources:   &lt;a href&#x3D;\&quot;https://echo.epa.gov/tools/web-services\&quot;&gt;Web Services&lt;/a&gt;, &lt;a href&#x3D;\&quot;https://echo.epa.gov/resources/echo-data/about-the-data\&quot;&gt;About ECHO&#39;s Data&lt;/a&gt;, &lt;a href&#x3D;\&quot;https://echo.epa.gov/tools/data-downloads\&quot;&gt;Data Downloads&lt;/a&gt;  .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var USEpaEnforcementAndComplianceHistoryOnlineEchoSafeDrinkingWaterAct = require('index'); // See note below*.
* var xxxSvc = new USEpaEnforcementAndComplianceHistoryOnlineEchoSafeDrinkingWaterAct.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new USEpaEnforcementAndComplianceHistoryOnlineEchoSafeDrinkingWaterAct.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new USEpaEnforcementAndComplianceHistoryOnlineEchoSafeDrinkingWaterAct.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new USEpaEnforcementAndComplianceHistoryOnlineEchoSafeDrinkingWaterAct.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2019.10.15
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The FormDataFDescending model constructor.
     * @property {module:model/FormDataFDescending}
     */
    FormDataFDescending,

    /**
     * The FormDataFPAct model constructor.
     * @property {module:model/FormDataFPAct}
     */
    FormDataFPAct,

    /**
     * The FormDataFPFea model constructor.
     * @property {module:model/FormDataFPFea}
     */
    FormDataFPFea,

    /**
     * The FormDataFPFeaa model constructor.
     * @property {module:model/FormDataFPFeaa}
     */
    FormDataFPFeaa,

    /**
     * The FormDataFPFeay model constructor.
     * @property {module:model/FormDataFPFeay}
     */
    FormDataFPFeay,

    /**
     * The FormDataFPHealth model constructor.
     * @property {module:model/FormDataFPHealth}
     */
    FormDataFPHealth,

    /**
     * The FormDataFPIco model constructor.
     * @property {module:model/FormDataFPIco}
     */
    FormDataFPIco,

    /**
     * The FormDataFPIea model constructor.
     * @property {module:model/FormDataFPIea}
     */
    FormDataFPIea,

    /**
     * The FormDataFPIeaa model constructor.
     * @property {module:model/FormDataFPIeaa}
     */
    FormDataFPIeaa,

    /**
     * The FormDataFPIeay model constructor.
     * @property {module:model/FormDataFPIeay}
     */
    FormDataFPIeay,

    /**
     * The FormDataFPMr model constructor.
     * @property {module:model/FormDataFPMr}
     */
    FormDataFPMr,

    /**
     * The FormDataFPOther model constructor.
     * @property {module:model/FormDataFPOther}
     */
    FormDataFPOther,

    /**
     * The FormDataFPOwop model constructor.
     * @property {module:model/FormDataFPOwop}
     */
    FormDataFPOwop,

    /**
     * The FormDataFPPn model constructor.
     * @property {module:model/FormDataFPPn}
     */
    FormDataFPPn,

    /**
     * The FormDataFPPswvio model constructor.
     * @property {module:model/FormDataFPPswvio}
     */
    FormDataFPPswvio,

    /**
     * The FormDataFPQis model constructor.
     * @property {module:model/FormDataFPQis}
     */
    FormDataFPQis,

    /**
     * The FormDataFPQiv model constructor.
     * @property {module:model/FormDataFPQiv}
     */
    FormDataFPQiv,

    /**
     * The FormDataFPReg model constructor.
     * @property {module:model/FormDataFPReg}
     */
    FormDataFPReg,

    /**
     * The FormDataFPSv model constructor.
     * @property {module:model/FormDataFPSv}
     */
    FormDataFPSv,

    /**
     * The FormDataFPSwtyp model constructor.
     * @property {module:model/FormDataFPSwtyp}
     */
    FormDataFPSwtyp,

    /**
     * The FormDataFPSystyp model constructor.
     * @property {module:model/FormDataFPSystyp}
     */
    FormDataFPSystyp,

    /**
     * The FormDataFPYsl model constructor.
     * @property {module:model/FormDataFPYsl}
     */
    FormDataFPYsl,

    /**
     * The FormDataFPYsla model constructor.
     * @property {module:model/FormDataFPYsla}
     */
    FormDataFPYsla,

    /**
     * The FormDataFPYsly model constructor.
     * @property {module:model/FormDataFPYsly}
     */
    FormDataFPYsly,

    /**
     * The Meta1 model constructor.
     * @property {module:model/Meta1}
     */
    Meta1,

    /**
     * The Meta3 model constructor.
     * @property {module:model/Meta3}
     */
    Meta3,

    /**
     * The Sdw02 model constructor.
     * @property {module:model/Sdw02}
     */
    Sdw02,

    /**
     * The Sdw03 model constructor.
     * @property {module:model/Sdw03}
     */
    Sdw03,

    /**
     * The Sdw04 model constructor.
     * @property {module:model/Sdw04}
     */
    Sdw04,

    /**
     * The SdwRestServicesGetQidGet200Response model constructor.
     * @property {module:model/SdwRestServicesGetQidGet200Response}
     */
    SdwRestServicesGetQidGet200Response,

    /**
     * The SdwRestServicesGetSystemsGet200Response model constructor.
     * @property {module:model/SdwRestServicesGetSystemsGet200Response}
     */
    SdwRestServicesGetSystemsGet200Response,

    /**
     * The SdwRestServicesMetadataGet200Response model constructor.
     * @property {module:model/SdwRestServicesMetadataGet200Response}
     */
    SdwRestServicesMetadataGet200Response,

    /**
    * The MetadataApi service constructor.
    * @property {module:api/MetadataApi}
    */
    MetadataApi,

    /**
    * The SafeDrinkingWaterApi service constructor.
    * @property {module:api/SafeDrinkingWaterApi}
    */
    SafeDrinkingWaterApi
};
