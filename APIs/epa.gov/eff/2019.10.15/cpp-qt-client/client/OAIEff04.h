/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Effluent Charting and Reporting
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use.   ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.    EFF Rest Services provides the data for ECHO's Effluent Charts, a set of dynamic charts and tables of permitted effluent limits, releases, and violations over time for Clean Water Act (CWA) wastewater discharge permits issued under the National Pollutant Discharge Elimination System (NPDES).    See Effluent Charts Help (https://echo.epa.gov/help/reports/effluent-charts-help) for additional information. \\ The are 3 service end points for Effluent Charts:  get_summary_chart, get_effluent_chart, and download_effluent_chart. \\  <b>1)</b>  Use get_summary_chart to retrieve a summary matrix of effluent parameters by effluent outfall and an overall violation status for a provided NPDES Permit and date range.  <b>2)</b>  Use get_effluent_chart to retrieve detailed Discharge Limit, DMR and NPDES Violation information for a provided NPDES Permit, date range, effluent parameter, or outfall.  <b>3)</b>  Use download_effluent_chart to generate a Comma Separated Value (CSV) file of the detailed data provided with get_effluent chart, for a provided NPDES Permit, date range, effluent parameter, or outfall. \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 2019.10.15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEff04.h
 *
 * Permit Features Object
 */

#ifndef OAIEff04_H
#define OAIEff04_H

#include <QJsonObject>

#include "OAIEff03.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEff03;

class OAIEff04 : public OAIObject {
public:
    OAIEff04();
    OAIEff04(QString json);
    ~OAIEff04() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIEff03> getParameters() const;
    void setParameters(const QList<OAIEff03> &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    QString getPermFeatureNmbr() const;
    void setPermFeatureNmbr(const QString &perm_feature_nmbr);
    bool is_perm_feature_nmbr_Set() const;
    bool is_perm_feature_nmbr_Valid() const;

    QString getPermFeatureTypeCode() const;
    void setPermFeatureTypeCode(const QString &perm_feature_type_code);
    bool is_perm_feature_type_code_Set() const;
    bool is_perm_feature_type_code_Valid() const;

    QString getPermFeatureTypeDesc() const;
    void setPermFeatureTypeDesc(const QString &perm_feature_type_desc);
    bool is_perm_feature_type_desc_Set() const;
    bool is_perm_feature_type_desc_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIEff03> m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    QString m_perm_feature_nmbr;
    bool m_perm_feature_nmbr_isSet;
    bool m_perm_feature_nmbr_isValid;

    QString m_perm_feature_type_code;
    bool m_perm_feature_type_code_isSet;
    bool m_perm_feature_type_code_isValid;

    QString m_perm_feature_type_desc;
    bool m_perm_feature_type_desc_isSet;
    bool m_perm_feature_type_desc_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEff04)

#endif // OAIEff04_H
