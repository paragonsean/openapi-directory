/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Effluent Charting and Reporting
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use.   ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.    EFF Rest Services provides the data for ECHO's Effluent Charts, a set of dynamic charts and tables of permitted effluent limits, releases, and violations over time for Clean Water Act (CWA) wastewater discharge permits issued under the National Pollutant Discharge Elimination System (NPDES).    See Effluent Charts Help (https://echo.epa.gov/help/reports/effluent-charts-help) for additional information. \\ The are 3 service end points for Effluent Charts:  get_summary_chart, get_effluent_chart, and download_effluent_chart. \\  <b>1)</b>  Use get_summary_chart to retrieve a summary matrix of effluent parameters by effluent outfall and an overall violation status for a provided NPDES Permit and date range.  <b>2)</b>  Use get_effluent_chart to retrieve detailed Discharge Limit, DMR and NPDES Violation information for a provided NPDES Permit, date range, effluent parameter, or outfall.  <b>3)</b>  Use download_effluent_chart to generate a Comma Separated Value (CSV) file of the detailed data provided with get_effluent chart, for a provided NPDES Permit, date range, effluent parameter, or outfall. \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 2019.10.15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEff07.h
 *
 * Parameters Object
 */

#ifndef OAIEff07_H
#define OAIEff07_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEff07 : public OAIObject {
public:
    OAIEff07();
    OAIEff07(QString json);
    ~OAIEff07() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCurrentVioStatus() const;
    void setCurrentVioStatus(const QString &current_vio_status);
    bool is_current_vio_status_Set() const;
    bool is_current_vio_status_Valid() const;

    QString getMaxVioStatus() const;
    void setMaxVioStatus(const QString &max_vio_status);
    bool is_max_vio_status_Set() const;
    bool is_max_vio_status_Valid() const;

    QString getParameterCode() const;
    void setParameterCode(const QString &parameter_code);
    bool is_parameter_code_Set() const;
    bool is_parameter_code_Valid() const;

    QString getParameterDesc() const;
    void setParameterDesc(const QString &parameter_desc);
    bool is_parameter_desc_Set() const;
    bool is_parameter_desc_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_current_vio_status;
    bool m_current_vio_status_isSet;
    bool m_current_vio_status_isValid;

    QString m_max_vio_status;
    bool m_max_vio_status_isSet;
    bool m_max_vio_status_isValid;

    QString m_parameter_code;
    bool m_parameter_code_isSet;
    bool m_parameter_code_isValid;

    QString m_parameter_desc;
    bool m_parameter_desc_isSet;
    bool m_parameter_desc_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEff07)

#endif // OAIEff07_H
