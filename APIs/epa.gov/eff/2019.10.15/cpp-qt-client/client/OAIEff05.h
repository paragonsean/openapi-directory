/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Effluent Charting and Reporting
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use.   ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.    EFF Rest Services provides the data for ECHO's Effluent Charts, a set of dynamic charts and tables of permitted effluent limits, releases, and violations over time for Clean Water Act (CWA) wastewater discharge permits issued under the National Pollutant Discharge Elimination System (NPDES).    See Effluent Charts Help (https://echo.epa.gov/help/reports/effluent-charts-help) for additional information. \\ The are 3 service end points for Effluent Charts:  get_summary_chart, get_effluent_chart, and download_effluent_chart. \\  <b>1)</b>  Use get_summary_chart to retrieve a summary matrix of effluent parameters by effluent outfall and an overall violation status for a provided NPDES Permit and date range.  <b>2)</b>  Use get_effluent_chart to retrieve detailed Discharge Limit, DMR and NPDES Violation information for a provided NPDES Permit, date range, effluent parameter, or outfall.  <b>3)</b>  Use download_effluent_chart to generate a Comma Separated Value (CSV) file of the detailed data provided with get_effluent chart, for a provided NPDES Permit, date range, effluent parameter, or outfall. \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 2019.10.15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEff05.h
 *
 * Results Object
 */

#ifndef OAIEff05_H
#define OAIEff05_H

#include <QJsonObject>

#include "OAIEff04.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEff04;

class OAIEff05 : public OAIObject {
public:
    OAIEff05();
    OAIEff05(QString json);
    ~OAIEff05() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCwpCity() const;
    void setCwpCity(const QString &cwp_city);
    bool is_cwp_city_Set() const;
    bool is_cwp_city_Valid() const;

    QString getCwpCurrentSncStatus() const;
    void setCwpCurrentSncStatus(const QString &cwp_current_snc_status);
    bool is_cwp_current_snc_status_Set() const;
    bool is_cwp_current_snc_status_Valid() const;

    QString getCwpMajorMinorStatusFlag() const;
    void setCwpMajorMinorStatusFlag(const QString &cwp_major_minor_status_flag);
    bool is_cwp_major_minor_status_flag_Set() const;
    bool is_cwp_major_minor_status_flag_Valid() const;

    QString getCwpName() const;
    void setCwpName(const QString &cwp_name);
    bool is_cwp_name_Set() const;
    bool is_cwp_name_Valid() const;

    QString getCwpPermitStatusDesc() const;
    void setCwpPermitStatusDesc(const QString &cwp_permit_status_desc);
    bool is_cwp_permit_status_desc_Set() const;
    bool is_cwp_permit_status_desc_Valid() const;

    QString getCwpPermitTypeDesc() const;
    void setCwpPermitTypeDesc(const QString &cwp_permit_type_desc);
    bool is_cwp_permit_type_desc_Set() const;
    bool is_cwp_permit_type_desc_Valid() const;

    QString getCwpState() const;
    void setCwpState(const QString &cwp_state);
    bool is_cwp_state_Set() const;
    bool is_cwp_state_Valid() const;

    QString getCwpStreet() const;
    void setCwpStreet(const QString &cwp_street);
    bool is_cwp_street_Set() const;
    bool is_cwp_street_Valid() const;

    QString getCwpZip() const;
    void setCwpZip(const QString &cwp_zip);
    bool is_cwp_zip_Set() const;
    bool is_cwp_zip_Valid() const;

    QString getEpaSystem() const;
    void setEpaSystem(const QString &epa_system);
    bool is_epa_system_Set() const;
    bool is_epa_system_Valid() const;

    QString getEndDate() const;
    void setEndDate(const QString &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QList<OAIEff04> getPermFeatures() const;
    void setPermFeatures(const QList<OAIEff04> &perm_features);
    bool is_perm_features_Set() const;
    bool is_perm_features_Valid() const;

    QString getRegistryId() const;
    void setRegistryId(const QString &registry_id);
    bool is_registry_id_Set() const;
    bool is_registry_id_Valid() const;

    QString getSourceId() const;
    void setSourceId(const QString &source_id);
    bool is_source_id_Set() const;
    bool is_source_id_Valid() const;

    QString getStartDate() const;
    void setStartDate(const QString &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    QString getStatute() const;
    void setStatute(const QString &statute);
    bool is_statute_Set() const;
    bool is_statute_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cwp_city;
    bool m_cwp_city_isSet;
    bool m_cwp_city_isValid;

    QString m_cwp_current_snc_status;
    bool m_cwp_current_snc_status_isSet;
    bool m_cwp_current_snc_status_isValid;

    QString m_cwp_major_minor_status_flag;
    bool m_cwp_major_minor_status_flag_isSet;
    bool m_cwp_major_minor_status_flag_isValid;

    QString m_cwp_name;
    bool m_cwp_name_isSet;
    bool m_cwp_name_isValid;

    QString m_cwp_permit_status_desc;
    bool m_cwp_permit_status_desc_isSet;
    bool m_cwp_permit_status_desc_isValid;

    QString m_cwp_permit_type_desc;
    bool m_cwp_permit_type_desc_isSet;
    bool m_cwp_permit_type_desc_isValid;

    QString m_cwp_state;
    bool m_cwp_state_isSet;
    bool m_cwp_state_isValid;

    QString m_cwp_street;
    bool m_cwp_street_isSet;
    bool m_cwp_street_isValid;

    QString m_cwp_zip;
    bool m_cwp_zip_isSet;
    bool m_cwp_zip_isValid;

    QString m_epa_system;
    bool m_epa_system_isSet;
    bool m_epa_system_isValid;

    QString m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QList<OAIEff04> m_perm_features;
    bool m_perm_features_isSet;
    bool m_perm_features_isValid;

    QString m_registry_id;
    bool m_registry_id_isSet;
    bool m_registry_id_isValid;

    QString m_source_id;
    bool m_source_id_isSet;
    bool m_source_id_isValid;

    QString m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    QString m_statute;
    bool m_statute_isSet;
    bool m_statute_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEff05)

#endif // OAIEff05_H
