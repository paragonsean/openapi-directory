/*
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Effluent Charting and Reporting
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use.   ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.    EFF Rest Services provides the data for ECHO's Effluent Charts, a set of dynamic charts and tables of permitted effluent limits, releases, and violations over time for Clean Water Act (CWA) wastewater discharge permits issued under the National Pollutant Discharge Elimination System (NPDES).    See Effluent Charts Help (https://echo.epa.gov/help/reports/effluent-charts-help) for additional information. \\ The are 3 service end points for Effluent Charts:  get_summary_chart, get_effluent_chart, and download_effluent_chart. \\  <b>1)</b>  Use get_summary_chart to retrieve a summary matrix of effluent parameters by effluent outfall and an overall violation status for a provided NPDES Permit and date range.  <b>2)</b>  Use get_effluent_chart to retrieve detailed Discharge Limit, DMR and NPDES Violation information for a provided NPDES Permit, date range, effluent parameter, or outfall.  <b>3)</b>  Use download_effluent_chart to generate a Comma Separated Value (CSV) file of the detailed data provided with get_effluent chart, for a provided NPDES Permit, date range, effluent parameter, or outfall. \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 2019.10.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Eff04;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Eff05
 */
public class Eff05Test {
    private final Eff05 model = new Eff05();

    /**
     * Model tests for Eff05
     */
    @Test
    public void testEff05() {
        // TODO: test Eff05
    }

    /**
     * Test the property 'cwPCity'
     */
    @Test
    public void cwPCityTest() {
        // TODO: test cwPCity
    }

    /**
     * Test the property 'cwPCurrentSNCStatus'
     */
    @Test
    public void cwPCurrentSNCStatusTest() {
        // TODO: test cwPCurrentSNCStatus
    }

    /**
     * Test the property 'cwPMajorMinorStatusFlag'
     */
    @Test
    public void cwPMajorMinorStatusFlagTest() {
        // TODO: test cwPMajorMinorStatusFlag
    }

    /**
     * Test the property 'cwPName'
     */
    @Test
    public void cwPNameTest() {
        // TODO: test cwPName
    }

    /**
     * Test the property 'cwPPermitStatusDesc'
     */
    @Test
    public void cwPPermitStatusDescTest() {
        // TODO: test cwPPermitStatusDesc
    }

    /**
     * Test the property 'cwPPermitTypeDesc'
     */
    @Test
    public void cwPPermitTypeDescTest() {
        // TODO: test cwPPermitTypeDesc
    }

    /**
     * Test the property 'cwPState'
     */
    @Test
    public void cwPStateTest() {
        // TODO: test cwPState
    }

    /**
     * Test the property 'cwPStreet'
     */
    @Test
    public void cwPStreetTest() {
        // TODO: test cwPStreet
    }

    /**
     * Test the property 'cwPZip'
     */
    @Test
    public void cwPZipTest() {
        // TODO: test cwPZip
    }

    /**
     * Test the property 'epASystem'
     */
    @Test
    public void epASystemTest() {
        // TODO: test epASystem
    }

    /**
     * Test the property 'endDate'
     */
    @Test
    public void endDateTest() {
        // TODO: test endDate
    }

    /**
     * Test the property 'message'
     */
    @Test
    public void messageTest() {
        // TODO: test message
    }

    /**
     * Test the property 'permFeatures'
     */
    @Test
    public void permFeaturesTest() {
        // TODO: test permFeatures
    }

    /**
     * Test the property 'registryId'
     */
    @Test
    public void registryIdTest() {
        // TODO: test registryId
    }

    /**
     * Test the property 'sourceId'
     */
    @Test
    public void sourceIdTest() {
        // TODO: test sourceId
    }

    /**
     * Test the property 'startDate'
     */
    @Test
    public void startDateTest() {
        // TODO: test startDate
    }

    /**
     * Test the property 'statute'
     */
    @Test
    public void statuteTest() {
        // TODO: test statute
    }

}
