/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Effluent Charting and Reporting
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use.   ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.    EFF Rest Services provides the data for ECHO's Effluent Charts, a set of dynamic charts and tables of permitted effluent limits, releases, and violations over time for Clean Water Act (CWA) wastewater discharge permits issued under the National Pollutant Discharge Elimination System (NPDES).    See Effluent Charts Help (https://echo.epa.gov/help/reports/effluent-charts-help) for additional information. \\ The are 3 service end points for Effluent Charts:  get_summary_chart, get_effluent_chart, and download_effluent_chart. \\  <b>1)</b>  Use get_summary_chart to retrieve a summary matrix of effluent parameters by effluent outfall and an overall violation status for a provided NPDES Permit and date range.  <b>2)</b>  Use get_effluent_chart to retrieve detailed Discharge Limit, DMR and NPDES Violation information for a provided NPDES Permit, date range, effluent parameter, or outfall.  <b>3)</b>  Use download_effluent_chart to generate a Comma Separated Value (CSV) file of the detailed data provided with get_effluent chart, for a provided NPDES Permit, date range, effluent parameter, or outfall. \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 2019.10.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RestLookupsCwaParametersGet200Response from '../model/RestLookupsCwaParametersGet200Response';

/**
* Lookups service.
* @module api/LookupsApi
* @version 2019.10.15
*/
export default class LookupsApi {

    /**
    * Constructs a new LookupsApi. 
    * @alias module:api/LookupsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the restLookupsCwaParametersGet operation.
     * @callback module:api/LookupsApi~restLookupsCwaParametersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RestLookupsCwaParametersGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * ECHO CWA Parameter Lookup Service
     * Look up Clean Water Act parameter codes and descriptions in the Integrated Compliance Information System - National Pollutant Discharge Elimination System (ICIS-NPDES) by code or term.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {String} [searchTerm] Enter a partial or complete search phrase or word.
     * @param {String} [searchCode] Enter a partial or complete code value.
     * @param {module:api/LookupsApi~restLookupsCwaParametersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RestLookupsCwaParametersGet200Response}
     */
    restLookupsCwaParametersGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'callback': opts['callback'],
        'search_term': opts['searchTerm'],
        'search_code': opts['searchCode']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = RestLookupsCwaParametersGet200Response;
      return this.apiClient.callApi(
        '/rest_lookups.cwa_parameters', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the restLookupsCwaParametersPost operation.
     * @callback module:api/LookupsApi~restLookupsCwaParametersPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RestLookupsCwaParametersGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * ECHO CWA Parameter Lookup Service
     * Look up Clean Water Act parameter codes and descriptions in the Integrated Compliance Information System - National Pollutant Discharge Elimination System (ICIS-NPDES) by code or term.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {String} [searchTerm] Enter a partial or complete search phrase or word.
     * @param {String} [searchCode] Enter a partial or complete code value.
     * @param {module:api/LookupsApi~restLookupsCwaParametersPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RestLookupsCwaParametersGet200Response}
     */
    restLookupsCwaParametersPost(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'callback': opts['callback'],
        'search_term': opts['searchTerm'],
        'search_code': opts['searchCode']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = RestLookupsCwaParametersGet200Response;
      return this.apiClient.callApi(
        '/rest_lookups.cwa_parameters', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
