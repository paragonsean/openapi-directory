/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Effluent Charting and Reporting
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use.   ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.    EFF Rest Services provides the data for ECHO's Effluent Charts, a set of dynamic charts and tables of permitted effluent limits, releases, and violations over time for Clean Water Act (CWA) wastewater discharge permits issued under the National Pollutant Discharge Elimination System (NPDES).    See Effluent Charts Help (https://echo.epa.gov/help/reports/effluent-charts-help) for additional information. \\ The are 3 service end points for Effluent Charts:  get_summary_chart, get_effluent_chart, and download_effluent_chart. \\  <b>1)</b>  Use get_summary_chart to retrieve a summary matrix of effluent parameters by effluent outfall and an overall violation status for a provided NPDES Permit and date range.  <b>2)</b>  Use get_effluent_chart to retrieve detailed Discharge Limit, DMR and NPDES Violation information for a provided NPDES Permit, date range, effluent parameter, or outfall.  <b>3)</b>  Use download_effluent_chart to generate a Comma Separated Value (CSV) file of the detailed data provided with get_effluent chart, for a provided NPDES Permit, date range, effluent parameter, or outfall. \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 2019.10.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Eff01 from './model/Eff01';
import Eff02 from './model/Eff02';
import Eff03 from './model/Eff03';
import Eff04 from './model/Eff04';
import Eff05 from './model/Eff05';
import Eff06 from './model/Eff06';
import Eff07 from './model/Eff07';
import Eff08 from './model/Eff08';
import Eff09 from './model/Eff09';
import EffRestServicesGetEffluentChartGet200Response from './model/EffRestServicesGetEffluentChartGet200Response';
import EffRestServicesGetSummaryChartGet200Response from './model/EffRestServicesGetSummaryChartGet200Response';
import FormDataFOutput from './model/FormDataFOutput';
import RestLookupsCwaParametersGet200Response from './model/RestLookupsCwaParametersGet200Response';
import Rlup01 from './model/Rlup01';
import Rlup23 from './model/Rlup23';
import EffluentChartsApi from './api/EffluentChartsApi';
import LookupsApi from './api/LookupsApi';


/**
* Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA&#39;s Office of Enforcement and Compliance Assurance for public use.   ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.    EFF Rest Services provides the data for ECHO&#39;s Effluent Charts, a set of dynamic charts and tables of permitted effluent limits, releases, and violations over time for Clean Water Act (CWA) wastewater discharge permits issued under the National Pollutant Discharge Elimination System (NPDES).    See Effluent Charts Help (https://echo.epa.gov/help/reports/effluent-charts-help) for additional information. \\ The are 3 service end points for Effluent Charts:  get_summary_chart, get_effluent_chart, and download_effluent_chart. \\  &lt;b&gt;1)&lt;/b&gt;  Use get_summary_chart to retrieve a summary matrix of effluent parameters by effluent outfall and an overall violation status for a provided NPDES Permit and date range.  &lt;b&gt;2)&lt;/b&gt;  Use get_effluent_chart to retrieve detailed Discharge Limit, DMR and NPDES Violation information for a provided NPDES Permit, date range, effluent parameter, or outfall.  &lt;b&gt;3)&lt;/b&gt;  Use download_effluent_chart to generate a Comma Separated Value (CSV) file of the detailed data provided with get_effluent chart, for a provided NPDES Permit, date range, effluent parameter, or outfall. \\ Additional ECHO Resources:   &lt;a href&#x3D;\&quot;https://echo.epa.gov/tools/web-services\&quot;&gt;Web Services&lt;/a&gt;, &lt;a href&#x3D;\&quot;https://echo.epa.gov/resources/echo-data/about-the-data\&quot;&gt;About ECHO&#39;s Data&lt;/a&gt;, &lt;a href&#x3D;\&quot;https://echo.epa.gov/tools/data-downloads\&quot;&gt;Data Downloads&lt;/a&gt;  .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting = require('index'); // See note below*.
* var xxxSvc = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2019.10.15
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Eff01 model constructor.
     * @property {module:model/Eff01}
     */
    Eff01,

    /**
     * The Eff02 model constructor.
     * @property {module:model/Eff02}
     */
    Eff02,

    /**
     * The Eff03 model constructor.
     * @property {module:model/Eff03}
     */
    Eff03,

    /**
     * The Eff04 model constructor.
     * @property {module:model/Eff04}
     */
    Eff04,

    /**
     * The Eff05 model constructor.
     * @property {module:model/Eff05}
     */
    Eff05,

    /**
     * The Eff06 model constructor.
     * @property {module:model/Eff06}
     */
    Eff06,

    /**
     * The Eff07 model constructor.
     * @property {module:model/Eff07}
     */
    Eff07,

    /**
     * The Eff08 model constructor.
     * @property {module:model/Eff08}
     */
    Eff08,

    /**
     * The Eff09 model constructor.
     * @property {module:model/Eff09}
     */
    Eff09,

    /**
     * The EffRestServicesGetEffluentChartGet200Response model constructor.
     * @property {module:model/EffRestServicesGetEffluentChartGet200Response}
     */
    EffRestServicesGetEffluentChartGet200Response,

    /**
     * The EffRestServicesGetSummaryChartGet200Response model constructor.
     * @property {module:model/EffRestServicesGetSummaryChartGet200Response}
     */
    EffRestServicesGetSummaryChartGet200Response,

    /**
     * The FormDataFOutput model constructor.
     * @property {module:model/FormDataFOutput}
     */
    FormDataFOutput,

    /**
     * The RestLookupsCwaParametersGet200Response model constructor.
     * @property {module:model/RestLookupsCwaParametersGet200Response}
     */
    RestLookupsCwaParametersGet200Response,

    /**
     * The Rlup01 model constructor.
     * @property {module:model/Rlup01}
     */
    Rlup01,

    /**
     * The Rlup23 model constructor.
     * @property {module:model/Rlup23}
     */
    Rlup23,

    /**
    * The EffluentChartsApi service constructor.
    * @property {module:api/EffluentChartsApi}
    */
    EffluentChartsApi,

    /**
    * The LookupsApi service constructor.
    * @property {module:api/LookupsApi}
    */
    LookupsApi
};
