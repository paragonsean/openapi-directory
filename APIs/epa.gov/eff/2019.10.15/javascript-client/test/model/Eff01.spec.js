/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Effluent Charting and Reporting
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use.   ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.    EFF Rest Services provides the data for ECHO's Effluent Charts, a set of dynamic charts and tables of permitted effluent limits, releases, and violations over time for Clean Water Act (CWA) wastewater discharge permits issued under the National Pollutant Discharge Elimination System (NPDES).    See Effluent Charts Help (https://echo.epa.gov/help/reports/effluent-charts-help) for additional information. \\ The are 3 service end points for Effluent Charts:  get_summary_chart, get_effluent_chart, and download_effluent_chart. \\  <b>1)</b>  Use get_summary_chart to retrieve a summary matrix of effluent parameters by effluent outfall and an overall violation status for a provided NPDES Permit and date range.  <b>2)</b>  Use get_effluent_chart to retrieve detailed Discharge Limit, DMR and NPDES Violation information for a provided NPDES Permit, date range, effluent parameter, or outfall.  <b>3)</b>  Use download_effluent_chart to generate a Comma Separated Value (CSV) file of the detailed data provided with get_effluent chart, for a provided NPDES Permit, date range, effluent parameter, or outfall. \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 2019.10.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting);
  }
}(this, function(expect, USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Eff01', function() {
    it('should create an instance of Eff01', function() {
      // uncomment below and update the code to test Eff01
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be.a(USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01);
    });

    it('should have the property dMREventId (base name: "DMREventId")', function() {
      // uncomment below and update the code to test the property dMREventId
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property dMRFormValueId (base name: "DMRFormValueId")', function() {
      // uncomment below and update the code to test the property dMRFormValueId
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property dMRUnitCode (base name: "DMRUnitCode")', function() {
      // uncomment below and update the code to test the property dMRUnitCode
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property dMRUnitDesc (base name: "DMRUnitDesc")', function() {
      // uncomment below and update the code to test the property dMRUnitDesc
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property dMRValueId (base name: "DMRValueId")', function() {
      // uncomment below and update the code to test the property dMRValueId
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property dMRValueNmbr (base name: "DMRValueNmbr")', function() {
      // uncomment below and update the code to test the property dMRValueNmbr
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property dMRValueQualifierCode (base name: "DMRValueQualifierCode")', function() {
      // uncomment below and update the code to test the property dMRValueQualifierCode
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property dMRValueStdUnits (base name: "DMRValueStdUnits")', function() {
      // uncomment below and update the code to test the property dMRValueStdUnits
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property daysLate (base name: "DaysLate")', function() {
      // uncomment below and update the code to test the property daysLate
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property exceedencePct (base name: "ExceedencePct")', function() {
      // uncomment below and update the code to test the property exceedencePct
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property limitBeginDate (base name: "LimitBeginDate")', function() {
      // uncomment below and update the code to test the property limitBeginDate
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property limitEndDate (base name: "LimitEndDate")', function() {
      // uncomment below and update the code to test the property limitEndDate
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property limitId (base name: "LimitId")', function() {
      // uncomment below and update the code to test the property limitId
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property limitSetId (base name: "LimitSetId")', function() {
      // uncomment below and update the code to test the property limitSetId
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property limitSetScheduleId (base name: "LimitSetScheduleId")', function() {
      // uncomment below and update the code to test the property limitSetScheduleId
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property limitTypeCode (base name: "LimitTypeCode")', function() {
      // uncomment below and update the code to test the property limitTypeCode
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property limitUnitCode (base name: "LimitUnitCode")', function() {
      // uncomment below and update the code to test the property limitUnitCode
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property limitUnitDesc (base name: "LimitUnitDesc")', function() {
      // uncomment below and update the code to test the property limitUnitDesc
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property limitValueId (base name: "LimitValueId")', function() {
      // uncomment below and update the code to test the property limitValueId
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property limitValueNmbr (base name: "LimitValueNmbr")', function() {
      // uncomment below and update the code to test the property limitValueNmbr
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property limitValueQualifierCode (base name: "LimitValueQualifierCode")', function() {
      // uncomment below and update the code to test the property limitValueQualifierCode
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property limitValueStdUnits (base name: "LimitValueStdUnits")', function() {
      // uncomment below and update the code to test the property limitValueStdUnits
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property limitValueTypeCode (base name: "LimitValueTypeCode")', function() {
      // uncomment below and update the code to test the property limitValueTypeCode
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property limitValueTypeDesc (base name: "LimitValueTypeDesc")', function() {
      // uncomment below and update the code to test the property limitValueTypeDesc
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property monitoringPeriodEndDate (base name: "MonitoringPeriodEndDate")', function() {
      // uncomment below and update the code to test the property monitoringPeriodEndDate
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property nODEDesc (base name: "NODEDesc")', function() {
      // uncomment below and update the code to test the property nODEDesc
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property nODICode (base name: "NODICode")', function() {
      // uncomment below and update the code to test the property nODICode
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property nPDESViolations (base name: "NPDESViolations")', function() {
      // uncomment below and update the code to test the property nPDESViolations
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property nmbrOfSubmission (base name: "NmbrOfSubmission")', function() {
      // uncomment below and update the code to test the property nmbrOfSubmission
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property permFeatureId (base name: "PermFeatureId")', function() {
      // uncomment below and update the code to test the property permFeatureId
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property statisticalBaseCode (base name: "StatisticalBaseCode")', function() {
      // uncomment below and update the code to test the property statisticalBaseCode
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property statisticalBaseDesc (base name: "StatisticalBaseDesc")', function() {
      // uncomment below and update the code to test the property statisticalBaseDesc
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property statisticalBaseTypeCode (base name: "StatisticalBaseTypeCode")', function() {
      // uncomment below and update the code to test the property statisticalBaseTypeCode
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property statisticalBaseTypeDesc (base name: "StatisticalBaseTypeDesc")', function() {
      // uncomment below and update the code to test the property statisticalBaseTypeDesc
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property stayValueNmbr (base name: "StayValueNmbr")', function() {
      // uncomment below and update the code to test the property stayValueNmbr
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property stdUnitCode (base name: "StdUnitCode")', function() {
      // uncomment below and update the code to test the property stdUnitCode
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property stdUnitDesc (base name: "StdUnitDesc")', function() {
      // uncomment below and update the code to test the property stdUnitDesc
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property valueReceivedDate (base name: "ValueReceivedDate")', function() {
      // uncomment below and update the code to test the property valueReceivedDate
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property valueTypeCode (base name: "ValueTypeCode")', function() {
      // uncomment below and update the code to test the property valueTypeCode
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property valueTypeDesc (base name: "ValueTypeDesc")', function() {
      // uncomment below and update the code to test the property valueTypeDesc
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

    it('should have the property versionNmbr (base name: "VersionNmbr")', function() {
      // uncomment below and update the code to test the property versionNmbr
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoEffluentChartingAndReporting.Eff01();
      //expect(instance).to.be();
    });

  });

}));
