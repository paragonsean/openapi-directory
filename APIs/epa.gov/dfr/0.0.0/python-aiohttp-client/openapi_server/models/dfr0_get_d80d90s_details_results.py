# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dfr0_get_d80d90s_details_d80_d90s_details import Dfr0GetD80d90sDetailsD80D90sDetails
from openapi_server import util


class Dfr0GetD80d90sDetailsResults(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, d80_d90s_details: Dfr0GetD80d90sDetailsD80D90sDetails=None, message: str=None):
        """Dfr0GetD80d90sDetailsResults - a model defined in OpenAPI

        :param d80_d90s_details: The d80_d90s_details of this Dfr0GetD80d90sDetailsResults.
        :param message: The message of this Dfr0GetD80d90sDetailsResults.
        """
        self.openapi_types = {
            'd80_d90s_details': Dfr0GetD80d90sDetailsD80D90sDetails,
            'message': str
        }

        self.attribute_map = {
            'd80_d90s_details': 'D80D90sDetails',
            'message': 'Message'
        }

        self._d80_d90s_details = d80_d90s_details
        self._message = message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Dfr0GetD80d90sDetailsResults':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The dfr0_get_d80d90s_details.Results of this Dfr0GetD80d90sDetailsResults.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def d80_d90s_details(self):
        """Gets the d80_d90s_details of this Dfr0GetD80d90sDetailsResults.


        :return: The d80_d90s_details of this Dfr0GetD80d90sDetailsResults.
        :rtype: Dfr0GetD80d90sDetailsD80D90sDetails
        """
        return self._d80_d90s_details

    @d80_d90s_details.setter
    def d80_d90s_details(self, d80_d90s_details):
        """Sets the d80_d90s_details of this Dfr0GetD80d90sDetailsResults.


        :param d80_d90s_details: The d80_d90s_details of this Dfr0GetD80d90sDetailsResults.
        :type d80_d90s_details: Dfr0GetD80d90sDetailsD80D90sDetails
        """
        if d80_d90s_details is None:
            raise ValueError("Invalid value for `d80_d90s_details`, must not be `None`")

        self._d80_d90s_details = d80_d90s_details

    @property
    def message(self):
        """Gets the message of this Dfr0GetD80d90sDetailsResults.

        Field to record messages (typically performance-related) about packet processing

        :return: The message of this Dfr0GetD80d90sDetailsResults.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this Dfr0GetD80d90sDetailsResults.

        Field to record messages (typically performance-related) about packet processing

        :param message: The message of this Dfr0GetD80d90sDetailsResults.
        :type message: str
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")

        self._message = message
