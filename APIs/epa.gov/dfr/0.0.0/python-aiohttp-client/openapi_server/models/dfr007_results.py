# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dfr027 import Dfr027
from openapi_server import util


class Dfr007Results(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cwa3_yr_d80_d90_counts: Dfr027=None, message: str=None):
        """Dfr007Results - a model defined in OpenAPI

        :param cwa3_yr_d80_d90_counts: The cwa3_yr_d80_d90_counts of this Dfr007Results.
        :param message: The message of this Dfr007Results.
        """
        self.openapi_types = {
            'cwa3_yr_d80_d90_counts': Dfr027,
            'message': str
        }

        self.attribute_map = {
            'cwa3_yr_d80_d90_counts': 'CWA3YrD80D90Counts',
            'message': 'Message'
        }

        self._cwa3_yr_d80_d90_counts = cwa3_yr_d80_d90_counts
        self._message = message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Dfr007Results':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The dfr007_Results of this Dfr007Results.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cwa3_yr_d80_d90_counts(self):
        """Gets the cwa3_yr_d80_d90_counts of this Dfr007Results.


        :return: The cwa3_yr_d80_d90_counts of this Dfr007Results.
        :rtype: Dfr027
        """
        return self._cwa3_yr_d80_d90_counts

    @cwa3_yr_d80_d90_counts.setter
    def cwa3_yr_d80_d90_counts(self, cwa3_yr_d80_d90_counts):
        """Sets the cwa3_yr_d80_d90_counts of this Dfr007Results.


        :param cwa3_yr_d80_d90_counts: The cwa3_yr_d80_d90_counts of this Dfr007Results.
        :type cwa3_yr_d80_d90_counts: Dfr027
        """
        if cwa3_yr_d80_d90_counts is None:
            raise ValueError("Invalid value for `cwa3_yr_d80_d90_counts`, must not be `None`")

        self._cwa3_yr_d80_d90_counts = cwa3_yr_d80_d90_counts

    @property
    def message(self):
        """Gets the message of this Dfr007Results.

        Field to record messages (typically performance-related) about packet processing

        :return: The message of this Dfr007Results.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this Dfr007Results.

        Field to record messages (typically performance-related) about packet processing

        :param message: The message of this Dfr007Results.
        :type message: str
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")

        self._message = message
