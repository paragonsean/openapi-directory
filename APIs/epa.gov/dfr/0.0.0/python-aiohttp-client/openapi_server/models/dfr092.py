# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dfr093 import Dfr093
from openapi_server import util


class Dfr092(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, site_visit: List[Dfr093]=None):
        """Dfr092 - a model defined in OpenAPI

        :param site_visit: The site_visit of this Dfr092.
        """
        self.openapi_types = {
            'site_visit': List[Dfr093]
        }

        self.attribute_map = {
            'site_visit': 'SiteVisit'
        }

        self._site_visit = site_visit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Dfr092':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The dfr092 of this Dfr092.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def site_visit(self):
        """Gets the site_visit of this Dfr092.


        :return: The site_visit of this Dfr092.
        :rtype: List[Dfr093]
        """
        return self._site_visit

    @site_visit.setter
    def site_visit(self, site_visit):
        """Sets the site_visit of this Dfr092.


        :param site_visit: The site_visit of this Dfr092.
        :type site_visit: List[Dfr093]
        """
        if site_visit is None:
            raise ValueError("Invalid value for `site_visit`, must not be `None`")

        self._site_visit = site_visit
