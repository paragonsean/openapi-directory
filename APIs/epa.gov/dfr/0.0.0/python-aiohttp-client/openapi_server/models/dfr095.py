# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dfr096 import Dfr096
from openapi_server import util


class Dfr095(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dates: List[Dfr096]=None):
        """Dfr095 - a model defined in OpenAPI

        :param dates: The dates of this Dfr095.
        """
        self.openapi_types = {
            'dates': List[Dfr096]
        }

        self.attribute_map = {
            'dates': 'Dates'
        }

        self._dates = dates

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Dfr095':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The dfr095 of this Dfr095.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dates(self):
        """Gets the dates of this Dfr095.


        :return: The dates of this Dfr095.
        :rtype: List[Dfr096]
        """
        return self._dates

    @dates.setter
    def dates(self, dates):
        """Sets the dates of this Dfr095.


        :param dates: The dates of this Dfr095.
        :type dates: List[Dfr096]
        """
        if dates is None:
            raise ValueError("Invalid value for `dates`, must not be `None`")

        self._dates = dates
