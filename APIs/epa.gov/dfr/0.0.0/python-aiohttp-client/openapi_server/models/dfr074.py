# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dfr075 import Dfr075
from openapi_server import util


class Dfr074(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, naics_codes: List[Dfr075]=None):
        """Dfr074 - a model defined in OpenAPI

        :param naics_codes: The naics_codes of this Dfr074.
        """
        self.openapi_types = {
            'naics_codes': List[Dfr075]
        }

        self.attribute_map = {
            'naics_codes': 'NAICSCodes'
        }

        self._naics_codes = naics_codes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Dfr074':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The dfr074 of this Dfr074.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def naics_codes(self):
        """Gets the naics_codes of this Dfr074.


        :return: The naics_codes of this Dfr074.
        :rtype: List[Dfr075]
        """
        return self._naics_codes

    @naics_codes.setter
    def naics_codes(self, naics_codes):
        """Sets the naics_codes of this Dfr074.


        :param naics_codes: The naics_codes of this Dfr074.
        :type naics_codes: List[Dfr075]
        """
        if naics_codes is None:
            raise ValueError("Invalid value for `naics_codes`, must not be `None`")

        self._naics_codes = naics_codes
