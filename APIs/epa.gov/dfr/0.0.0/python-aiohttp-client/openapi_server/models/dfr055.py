# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dfr054 import Dfr054
from openapi_server import util


class Dfr055(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, settlement: List[Dfr054]=None):
        """Dfr055 - a model defined in OpenAPI

        :param settlement: The settlement of this Dfr055.
        """
        self.openapi_types = {
            'settlement': List[Dfr054]
        }

        self.attribute_map = {
            'settlement': 'Settlement'
        }

        self._settlement = settlement

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Dfr055':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The dfr055 of this Dfr055.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def settlement(self):
        """Gets the settlement of this Dfr055.


        :return: The settlement of this Dfr055.
        :rtype: List[Dfr054]
        """
        return self._settlement

    @settlement.setter
    def settlement(self, settlement):
        """Sets the settlement of this Dfr055.


        :param settlement: The settlement of this Dfr055.
        :type settlement: List[Dfr054]
        """
        if settlement is None:
            raise ValueError("Invalid value for `settlement`, must not be `None`")

        self._settlement = settlement
