# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dfr102 import Dfr102
from openapi_server import util


class Dfr133Results(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message: str=None, tri_releases: Dfr102=None):
        """Dfr133Results - a model defined in OpenAPI

        :param message: The message of this Dfr133Results.
        :param tri_releases: The tri_releases of this Dfr133Results.
        """
        self.openapi_types = {
            'message': str,
            'tri_releases': Dfr102
        }

        self.attribute_map = {
            'message': 'Message',
            'tri_releases': 'TRIReleases'
        }

        self._message = message
        self._tri_releases = tri_releases

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Dfr133Results':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The dfr133_Results of this Dfr133Results.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message(self):
        """Gets the message of this Dfr133Results.

        Field to record messages (typically performance-related) about packet processing

        :return: The message of this Dfr133Results.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this Dfr133Results.

        Field to record messages (typically performance-related) about packet processing

        :param message: The message of this Dfr133Results.
        :type message: str
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")

        self._message = message

    @property
    def tri_releases(self):
        """Gets the tri_releases of this Dfr133Results.


        :return: The tri_releases of this Dfr133Results.
        :rtype: Dfr102
        """
        return self._tri_releases

    @tri_releases.setter
    def tri_releases(self, tri_releases):
        """Sets the tri_releases of this Dfr133Results.


        :param tri_releases: The tri_releases of this Dfr133Results.
        :type tri_releases: Dfr102
        """

        self._tri_releases = tri_releases
