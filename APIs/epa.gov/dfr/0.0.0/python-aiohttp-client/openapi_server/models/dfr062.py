# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dfr018_summaries import Dfr018Summaries
from openapi_server.models.dfr063_s import Dfr063S
from openapi_server import util


class Dfr062(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, program_dates: List[Dfr063S]=None, summaries: List[Dfr018Summaries]=None):
        """Dfr062 - a model defined in OpenAPI

        :param program_dates: The program_dates of this Dfr062.
        :param summaries: The summaries of this Dfr062.
        """
        self.openapi_types = {
            'program_dates': List[Dfr063S],
            'summaries': List[Dfr018Summaries]
        }

        self.attribute_map = {
            'program_dates': 'ProgramDates',
            'summaries': 'Summaries'
        }

        self._program_dates = program_dates
        self._summaries = summaries

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Dfr062':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The dfr062 of this Dfr062.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def program_dates(self):
        """Gets the program_dates of this Dfr062.


        :return: The program_dates of this Dfr062.
        :rtype: List[Dfr063S]
        """
        return self._program_dates

    @program_dates.setter
    def program_dates(self, program_dates):
        """Sets the program_dates of this Dfr062.


        :param program_dates: The program_dates of this Dfr062.
        :type program_dates: List[Dfr063S]
        """
        if program_dates is None:
            raise ValueError("Invalid value for `program_dates`, must not be `None`")

        self._program_dates = program_dates

    @property
    def summaries(self):
        """Gets the summaries of this Dfr062.


        :return: The summaries of this Dfr062.
        :rtype: List[Dfr018Summaries]
        """
        return self._summaries

    @summaries.setter
    def summaries(self, summaries):
        """Sets the summaries of this Dfr062.


        :param summaries: The summaries of this Dfr062.
        :type summaries: List[Dfr018Summaries]
        """
        if summaries is None:
            raise ValueError("Invalid value for `summaries`, must not be `None`")

        self._summaries = summaries
