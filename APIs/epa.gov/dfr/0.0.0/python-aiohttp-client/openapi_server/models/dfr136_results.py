# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dfr111_details import Dfr111Details
from openapi_server import util


class Dfr136Results(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message: str=None, water_quality_details: Dfr111Details=None):
        """Dfr136Results - a model defined in OpenAPI

        :param message: The message of this Dfr136Results.
        :param water_quality_details: The water_quality_details of this Dfr136Results.
        """
        self.openapi_types = {
            'message': str,
            'water_quality_details': Dfr111Details
        }

        self.attribute_map = {
            'message': 'Message',
            'water_quality_details': 'WaterQualityDetails'
        }

        self._message = message
        self._water_quality_details = water_quality_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Dfr136Results':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The dfr136_Results of this Dfr136Results.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message(self):
        """Gets the message of this Dfr136Results.

        Field to record messages (typically performance-related) about packet processing

        :return: The message of this Dfr136Results.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this Dfr136Results.

        Field to record messages (typically performance-related) about packet processing

        :param message: The message of this Dfr136Results.
        :type message: str
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")

        self._message = message

    @property
    def water_quality_details(self):
        """Gets the water_quality_details of this Dfr136Results.


        :return: The water_quality_details of this Dfr136Results.
        :rtype: Dfr111Details
        """
        return self._water_quality_details

    @water_quality_details.setter
    def water_quality_details(self, water_quality_details):
        """Sets the water_quality_details of this Dfr136Results.


        :param water_quality_details: The water_quality_details of this Dfr136Results.
        :type water_quality_details: Dfr111Details
        """

        self._water_quality_details = water_quality_details
