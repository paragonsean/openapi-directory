# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dfr018_registry_ids import Dfr018RegistryIDs
from openapi_server import util


class Dfr018MultipleFRSFacilities(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, registry_ids: List[Dfr018RegistryIDs]=None):
        """Dfr018MultipleFRSFacilities - a model defined in OpenAPI

        :param registry_ids: The registry_ids of this Dfr018MultipleFRSFacilities.
        """
        self.openapi_types = {
            'registry_ids': List[Dfr018RegistryIDs]
        }

        self.attribute_map = {
            'registry_ids': 'RegistryIDs'
        }

        self._registry_ids = registry_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Dfr018MultipleFRSFacilities':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The dfr018_MultipleFRSFacilities of this Dfr018MultipleFRSFacilities.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def registry_ids(self):
        """Gets the registry_ids of this Dfr018MultipleFRSFacilities.


        :return: The registry_ids of this Dfr018MultipleFRSFacilities.
        :rtype: List[Dfr018RegistryIDs]
        """
        return self._registry_ids

    @registry_ids.setter
    def registry_ids(self, registry_ids):
        """Sets the registry_ids of this Dfr018MultipleFRSFacilities.


        :param registry_ids: The registry_ids of this Dfr018MultipleFRSFacilities.
        :type registry_ids: List[Dfr018RegistryIDs]
        """

        self._registry_ids = registry_ids
