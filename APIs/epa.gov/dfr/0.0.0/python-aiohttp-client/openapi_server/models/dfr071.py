# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Dfr071(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cu90: str=None, cu90_dates: str=None, cu90_units: str=None, cu90_value: str=None):
        """Dfr071 - a model defined in OpenAPI

        :param cu90: The cu90 of this Dfr071.
        :param cu90_dates: The cu90_dates of this Dfr071.
        :param cu90_units: The cu90_units of this Dfr071.
        :param cu90_value: The cu90_value of this Dfr071.
        """
        self.openapi_types = {
            'cu90': str,
            'cu90_dates': str,
            'cu90_units': str,
            'cu90_value': str
        }

        self.attribute_map = {
            'cu90': 'CU90',
            'cu90_dates': 'CU90Dates',
            'cu90_units': 'CU90Units',
            'cu90_value': 'CU90Value'
        }

        self._cu90 = cu90
        self._cu90_dates = cu90_dates
        self._cu90_units = cu90_units
        self._cu90_value = cu90_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Dfr071':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The dfr071 of this Dfr071.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cu90(self):
        """Gets the cu90 of this Dfr071.

        The concentration of copper representing the 90th percentile level of all tap water samples collected for the water system

        :return: The cu90 of this Dfr071.
        :rtype: str
        """
        return self._cu90

    @cu90.setter
    def cu90(self, cu90):
        """Sets the cu90 of this Dfr071.

        The concentration of copper representing the 90th percentile level of all tap water samples collected for the water system

        :param cu90: The cu90 of this Dfr071.
        :type cu90: str
        """
        if cu90 is None:
            raise ValueError("Invalid value for `cu90`, must not be `None`")

        self._cu90 = cu90

    @property
    def cu90_dates(self):
        """Gets the cu90_dates of this Dfr071.

        The dates during which tap water samples were collected.

        :return: The cu90_dates of this Dfr071.
        :rtype: str
        """
        return self._cu90_dates

    @cu90_dates.setter
    def cu90_dates(self, cu90_dates):
        """Sets the cu90_dates of this Dfr071.

        The dates during which tap water samples were collected.

        :param cu90_dates: The cu90_dates of this Dfr071.
        :type cu90_dates: str
        """
        if cu90_dates is None:
            raise ValueError("Invalid value for `cu90_dates`, must not be `None`")

        self._cu90_dates = cu90_dates

    @property
    def cu90_units(self):
        """Gets the cu90_units of this Dfr071.

        The measurement units.

        :return: The cu90_units of this Dfr071.
        :rtype: str
        """
        return self._cu90_units

    @cu90_units.setter
    def cu90_units(self, cu90_units):
        """Sets the cu90_units of this Dfr071.

        The measurement units.

        :param cu90_units: The cu90_units of this Dfr071.
        :type cu90_units: str
        """
        if cu90_units is None:
            raise ValueError("Invalid value for `cu90_units`, must not be `None`")

        self._cu90_units = cu90_units

    @property
    def cu90_value(self):
        """Gets the cu90_value of this Dfr071.

        The value of the concentration of copper representing the 90th percentile level of all tap water samples collected for the water system

        :return: The cu90_value of this Dfr071.
        :rtype: str
        """
        return self._cu90_value

    @cu90_value.setter
    def cu90_value(self, cu90_value):
        """Sets the cu90_value of this Dfr071.

        The value of the concentration of copper representing the 90th percentile level of all tap water samples collected for the water system

        :param cu90_value: The cu90_value of this Dfr071.
        :type cu90_value: str
        """
        if cu90_value is None:
            raise ValueError("Invalid value for `cu90_value`, must not be `None`")

        self._cu90_value = cu90_value
