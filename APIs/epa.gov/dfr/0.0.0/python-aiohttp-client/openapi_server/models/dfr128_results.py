# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dfr106 import Dfr106
from openapi_server import util


class Dfr128Results(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message: str=None, violations_enforcement_actions: Dfr106=None):
        """Dfr128Results - a model defined in OpenAPI

        :param message: The message of this Dfr128Results.
        :param violations_enforcement_actions: The violations_enforcement_actions of this Dfr128Results.
        """
        self.openapi_types = {
            'message': str,
            'violations_enforcement_actions': Dfr106
        }

        self.attribute_map = {
            'message': 'Message',
            'violations_enforcement_actions': 'ViolationsEnforcementActions'
        }

        self._message = message
        self._violations_enforcement_actions = violations_enforcement_actions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Dfr128Results':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The dfr128_Results of this Dfr128Results.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message(self):
        """Gets the message of this Dfr128Results.

        Field to record messages (typically performance-related) about packet processing

        :return: The message of this Dfr128Results.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this Dfr128Results.

        Field to record messages (typically performance-related) about packet processing

        :param message: The message of this Dfr128Results.
        :type message: str
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")

        self._message = message

    @property
    def violations_enforcement_actions(self):
        """Gets the violations_enforcement_actions of this Dfr128Results.


        :return: The violations_enforcement_actions of this Dfr128Results.
        :rtype: Dfr106
        """
        return self._violations_enforcement_actions

    @violations_enforcement_actions.setter
    def violations_enforcement_actions(self, violations_enforcement_actions):
        """Sets the violations_enforcement_actions of this Dfr128Results.


        :param violations_enforcement_actions: The violations_enforcement_actions of this Dfr128Results.
        :type violations_enforcement_actions: Dfr106
        """

        self._violations_enforcement_actions = violations_enforcement_actions
