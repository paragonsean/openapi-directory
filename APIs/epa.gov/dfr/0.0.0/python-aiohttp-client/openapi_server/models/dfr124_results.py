# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dfr078 import Dfr078
from openapi_server import util


class Dfr124Results(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message: str=None, rcra_compliance: Dfr078=None):
        """Dfr124Results - a model defined in OpenAPI

        :param message: The message of this Dfr124Results.
        :param rcra_compliance: The rcra_compliance of this Dfr124Results.
        """
        self.openapi_types = {
            'message': str,
            'rcra_compliance': Dfr078
        }

        self.attribute_map = {
            'message': 'Message',
            'rcra_compliance': 'RCRACompliance'
        }

        self._message = message
        self._rcra_compliance = rcra_compliance

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Dfr124Results':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The dfr124_Results of this Dfr124Results.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message(self):
        """Gets the message of this Dfr124Results.

        Field to record messages (typically performance-related) about packet processing

        :return: The message of this Dfr124Results.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this Dfr124Results.

        Field to record messages (typically performance-related) about packet processing

        :param message: The message of this Dfr124Results.
        :type message: str
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")

        self._message = message

    @property
    def rcra_compliance(self):
        """Gets the rcra_compliance of this Dfr124Results.


        :return: The rcra_compliance of this Dfr124Results.
        :rtype: Dfr078
        """
        return self._rcra_compliance

    @rcra_compliance.setter
    def rcra_compliance(self, rcra_compliance):
        """Sets the rcra_compliance of this Dfr124Results.


        :param rcra_compliance: The rcra_compliance of this Dfr124Results.
        :type rcra_compliance: Dfr078
        """

        self._rcra_compliance = rcra_compliance
