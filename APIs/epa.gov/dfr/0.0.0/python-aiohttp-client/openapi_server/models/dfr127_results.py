# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dfr090 import Dfr090
from openapi_server import util


class Dfr127Results(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message: str=None, site_visits: Dfr090=None):
        """Dfr127Results - a model defined in OpenAPI

        :param message: The message of this Dfr127Results.
        :param site_visits: The site_visits of this Dfr127Results.
        """
        self.openapi_types = {
            'message': str,
            'site_visits': Dfr090
        }

        self.attribute_map = {
            'message': 'Message',
            'site_visits': 'SiteVisits'
        }

        self._message = message
        self._site_visits = site_visits

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Dfr127Results':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The dfr127_Results of this Dfr127Results.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message(self):
        """Gets the message of this Dfr127Results.

        Field to record messages (typically performance-related) about packet processing

        :return: The message of this Dfr127Results.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this Dfr127Results.

        Field to record messages (typically performance-related) about packet processing

        :param message: The message of this Dfr127Results.
        :type message: str
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")

        self._message = message

    @property
    def site_visits(self):
        """Gets the site_visits of this Dfr127Results.


        :return: The site_visits of this Dfr127Results.
        :rtype: Dfr090
        """
        return self._site_visits

    @site_visits.setter
    def site_visits(self, site_visits):
        """Sets the site_visits of this Dfr127Results.


        :param site_visits: The site_visits of this Dfr127Results.
        :type site_visits: Dfr090
        """

        self._site_visits = site_visits
