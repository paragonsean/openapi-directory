# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dfr103 import Dfr103
from openapi_server.models.dfr104 import Dfr104
from openapi_server import util


class Dfr102(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chemicals: List[Dfr103]=None, header: List[Dfr104]=None):
        """Dfr102 - a model defined in OpenAPI

        :param chemicals: The chemicals of this Dfr102.
        :param header: The header of this Dfr102.
        """
        self.openapi_types = {
            'chemicals': List[Dfr103],
            'header': List[Dfr104]
        }

        self.attribute_map = {
            'chemicals': 'Chemicals',
            'header': 'Header'
        }

        self._chemicals = chemicals
        self._header = header

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Dfr102':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The dfr102 of this Dfr102.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chemicals(self):
        """Gets the chemicals of this Dfr102.


        :return: The chemicals of this Dfr102.
        :rtype: List[Dfr103]
        """
        return self._chemicals

    @chemicals.setter
    def chemicals(self, chemicals):
        """Sets the chemicals of this Dfr102.


        :param chemicals: The chemicals of this Dfr102.
        :type chemicals: List[Dfr103]
        """

        self._chemicals = chemicals

    @property
    def header(self):
        """Gets the header of this Dfr102.


        :return: The header of this Dfr102.
        :rtype: List[Dfr104]
        """
        return self._header

    @header.setter
    def header(self, header):
        """Sets the header of this Dfr102.


        :param header: The header of this Dfr102.
        :type header: List[Dfr104]
        """

        self._header = header
