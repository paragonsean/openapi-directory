# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Dfr105(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, area_name: str=None, distance_to_area: str=None, epaid: str=None, tribe_name: str=None):
        """Dfr105 - a model defined in OpenAPI

        :param area_name: The area_name of this Dfr105.
        :param distance_to_area: The distance_to_area of this Dfr105.
        :param epaid: The epaid of this Dfr105.
        :param tribe_name: The tribe_name of this Dfr105.
        """
        self.openapi_types = {
            'area_name': str,
            'distance_to_area': str,
            'epaid': str,
            'tribe_name': str
        }

        self.attribute_map = {
            'area_name': 'AreaName',
            'distance_to_area': 'DistanceToArea',
            'epaid': 'EPAId',
            'tribe_name': 'TribeName'
        }

        self._area_name = area_name
        self._distance_to_area = distance_to_area
        self._epaid = epaid
        self._tribe_name = tribe_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Dfr105':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The dfr105 of this Dfr105.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def area_name(self):
        """Gets the area_name of this Dfr105.

        Displays Clean Air Act stationary source program subpart designation, Clean Water Act-NPDES permit component(s), and/or other Resource Conservation and Recovery Act designations, if any.

        :return: The area_name of this Dfr105.
        :rtype: str
        """
        return self._area_name

    @area_name.setter
    def area_name(self, area_name):
        """Sets the area_name of this Dfr105.

        Displays Clean Air Act stationary source program subpart designation, Clean Water Act-NPDES permit component(s), and/or other Resource Conservation and Recovery Act designations, if any.

        :param area_name: The area_name of this Dfr105.
        :type area_name: str
        """
        if area_name is None:
            raise ValueError("Invalid value for `area_name`, must not be `None`")

        self._area_name = area_name

    @property
    def distance_to_area(self):
        """Gets the distance_to_area of this Dfr105.

        Air Facility System (AFS) ID.

        :return: The distance_to_area of this Dfr105.
        :rtype: str
        """
        return self._distance_to_area

    @distance_to_area.setter
    def distance_to_area(self, distance_to_area):
        """Sets the distance_to_area of this Dfr105.

        Air Facility System (AFS) ID.

        :param distance_to_area: The distance_to_area of this Dfr105.
        :type distance_to_area: str
        """
        if distance_to_area is None:
            raise ValueError("Invalid value for `distance_to_area`, must not be `None`")

        self._distance_to_area = distance_to_area

    @property
    def epaid(self):
        """Gets the epaid of this Dfr105.

        This is the EPA Identifier for substances.

        :return: The epaid of this Dfr105.
        :rtype: str
        """
        return self._epaid

    @epaid.setter
    def epaid(self, epaid):
        """Sets the epaid of this Dfr105.

        This is the EPA Identifier for substances.

        :param epaid: The epaid of this Dfr105.
        :type epaid: str
        """
        if epaid is None:
            raise ValueError("Invalid value for `epaid`, must not be `None`")

        self._epaid = epaid

    @property
    def tribe_name(self):
        """Gets the tribe_name of this Dfr105.

        Air Facility System (AFS) ID.

        :return: The tribe_name of this Dfr105.
        :rtype: str
        """
        return self._tribe_name

    @tribe_name.setter
    def tribe_name(self, tribe_name):
        """Sets the tribe_name of this Dfr105.

        Air Facility System (AFS) ID.

        :param tribe_name: The tribe_name of this Dfr105.
        :type tribe_name: str
        """
        if tribe_name is None:
            raise ValueError("Invalid value for `tribe_name`, must not be `None`")

        self._tribe_name = tribe_name
