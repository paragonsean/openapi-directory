# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Dfr018Reports(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, has_poll_rpt: str=None):
        """Dfr018Reports - a model defined in OpenAPI

        :param has_poll_rpt: The has_poll_rpt of this Dfr018Reports.
        """
        self.openapi_types = {
            'has_poll_rpt': str
        }

        self.attribute_map = {
            'has_poll_rpt': 'HasPollRpt'
        }

        self._has_poll_rpt = has_poll_rpt

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Dfr018Reports':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The dfr018_Reports of this Dfr018Reports.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def has_poll_rpt(self):
        """Gets the has_poll_rpt of this Dfr018Reports.

        ???

        :return: The has_poll_rpt of this Dfr018Reports.
        :rtype: str
        """
        return self._has_poll_rpt

    @has_poll_rpt.setter
    def has_poll_rpt(self, has_poll_rpt):
        """Sets the has_poll_rpt of this Dfr018Reports.

        ???

        :param has_poll_rpt: The has_poll_rpt of this Dfr018Reports.
        :type has_poll_rpt: str
        """
        if has_poll_rpt is None:
            raise ValueError("Invalid value for `has_poll_rpt`, must not be `None`")

        self._has_poll_rpt = has_poll_rpt
