/*
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Dfr018Permits
 */
public class Dfr018PermitsTest {
    private final Dfr018Permits model = new Dfr018Permits();

    /**
     * Model tests for Dfr018Permits
     */
    @Test
    public void testDfr018Permits() {
        // TODO: test Dfr018Permits
    }

    /**
     * Test the property 'accuracyScore'
     */
    @Test
    public void accuracyScoreTest() {
        // TODO: test accuracyScore
    }

    /**
     * Test the property 'accuracyValue'
     */
    @Test
    public void accuracyValueTest() {
        // TODO: test accuracyValue
    }

    /**
     * Test the property 'areas'
     */
    @Test
    public void areasTest() {
        // TODO: test areas
    }

    /**
     * Test the property 'collectDesc'
     */
    @Test
    public void collectDescTest() {
        // TODO: test collectDesc
    }

    /**
     * Test the property 'DQURL'
     */
    @Test
    public void DQURLTest() {
        // TODO: test DQURL
    }

    /**
     * Test the property 'epARegion'
     */
    @Test
    public void epARegionTest() {
        // TODO: test epARegion
    }

    /**
     * Test the property 'epASystem'
     */
    @Test
    public void epASystemTest() {
        // TODO: test epASystem
    }

    /**
     * Test the property 'expDate'
     */
    @Test
    public void expDateTest() {
        // TODO: test expDate
    }

    /**
     * Test the property 'facilityCity'
     */
    @Test
    public void facilityCityTest() {
        // TODO: test facilityCity
    }

    /**
     * Test the property 'facilityName'
     */
    @Test
    public void facilityNameTest() {
        // TODO: test facilityName
    }

    /**
     * Test the property 'facilityState'
     */
    @Test
    public void facilityStateTest() {
        // TODO: test facilityState
    }

    /**
     * Test the property 'facilityStatus'
     */
    @Test
    public void facilityStatusTest() {
        // TODO: test facilityStatus
    }

    /**
     * Test the property 'facilityStreet'
     */
    @Test
    public void facilityStreetTest() {
        // TODO: test facilityStreet
    }

    /**
     * Test the property 'facilityZip'
     */
    @Test
    public void facilityZipTest() {
        // TODO: test facilityZip
    }

    /**
     * Test the property 'hasBioRpt'
     */
    @Test
    public void hasBioRptTest() {
        // TODO: test hasBioRpt
    }

    /**
     * Test the property 'hasIcisSsoRpt'
     */
    @Test
    public void hasIcisSsoRptTest() {
        // TODO: test hasIcisSsoRpt
    }

    /**
     * Test the property 'hdatumDesc'
     */
    @Test
    public void hdatumDescTest() {
        // TODO: test hdatumDesc
    }

    /**
     * Test the property 'indianCountry'
     */
    @Test
    public void indianCountryTest() {
        // TODO: test indianCountry
    }

    /**
     * Test the property 'latitude'
     */
    @Test
    public void latitudeTest() {
        // TODO: test latitude
    }

    /**
     * Test the property 'longitude'
     */
    @Test
    public void longitudeTest() {
        // TODO: test longitude
    }

    /**
     * Test the property 'NAICS'
     */
    @Test
    public void NAICSTest() {
        // TODO: test NAICS
    }

    /**
     * Test the property 'refPointDesc'
     */
    @Test
    public void refPointDescTest() {
        // TODO: test refPointDesc
    }

    /**
     * Test the property 'SIC'
     */
    @Test
    public void SICTest() {
        // TODO: test SIC
    }

    /**
     * Test the property 'scale'
     */
    @Test
    public void scaleTest() {
        // TODO: test scale
    }

    /**
     * Test the property 'sourceID'
     */
    @Test
    public void sourceIDTest() {
        // TODO: test sourceID
    }

    /**
     * Test the property 'statute'
     */
    @Test
    public void statuteTest() {
        // TODO: test statute
    }

    /**
     * Test the property 'universe'
     */
    @Test
    public void universeTest() {
        // TODO: test universe
    }

}
