/*
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Dfr0Qtr13Status
 */
public class Dfr0Qtr13StatusTest {
    private final Dfr0Qtr13Status model = new Dfr0Qtr13Status();

    /**
     * Model tests for Dfr0Qtr13Status
     */
    @Test
    public void testDfr0Qtr13Status() {
        // TODO: test Dfr0Qtr13Status
    }

    /**
     * Test the property 'qtr10Status'
     */
    @Test
    public void qtr10StatusTest() {
        // TODO: test qtr10Status
    }

    /**
     * Test the property 'qtr11Status'
     */
    @Test
    public void qtr11StatusTest() {
        // TODO: test qtr11Status
    }

    /**
     * Test the property 'qtr12Status'
     */
    @Test
    public void qtr12StatusTest() {
        // TODO: test qtr12Status
    }

    /**
     * Test the property 'qtr13Status'
     */
    @Test
    public void qtr13StatusTest() {
        // TODO: test qtr13Status
    }

    /**
     * Test the property 'qtr1Status'
     */
    @Test
    public void qtr1StatusTest() {
        // TODO: test qtr1Status
    }

    /**
     * Test the property 'qtr2Status'
     */
    @Test
    public void qtr2StatusTest() {
        // TODO: test qtr2Status
    }

    /**
     * Test the property 'qtr3Status'
     */
    @Test
    public void qtr3StatusTest() {
        // TODO: test qtr3Status
    }

    /**
     * Test the property 'qtr4Status'
     */
    @Test
    public void qtr4StatusTest() {
        // TODO: test qtr4Status
    }

    /**
     * Test the property 'qtr5Status'
     */
    @Test
    public void qtr5StatusTest() {
        // TODO: test qtr5Status
    }

    /**
     * Test the property 'qtr6Status'
     */
    @Test
    public void qtr6StatusTest() {
        // TODO: test qtr6Status
    }

    /**
     * Test the property 'qtr7Status'
     */
    @Test
    public void qtr7StatusTest() {
        // TODO: test qtr7Status
    }

    /**
     * Test the property 'qtr8Status'
     */
    @Test
    public void qtr8StatusTest() {
        // TODO: test qtr8Status
    }

    /**
     * Test the property 'qtr9Status'
     */
    @Test
    public void qtr9StatusTest() {
        // TODO: test qtr9Status
    }

    /**
     * Test the property 'sourceID'
     */
    @Test
    public void sourceIDTest() {
        // TODO: test sourceID
    }

}
