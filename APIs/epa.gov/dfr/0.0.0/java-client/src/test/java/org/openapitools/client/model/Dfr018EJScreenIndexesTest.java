/*
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Dfr018EJScreenIndexes
 */
public class Dfr018EJScreenIndexesTest {
    private final Dfr018EJScreenIndexes model = new Dfr018EJScreenIndexes();

    /**
     * Model tests for Dfr018EJScreenIndexes
     */
    @Test
    public void testDfr018EJScreenIndexes() {
        // TODO: test Dfr018EJScreenIndexes
    }

    /**
     * Test the property 'hazardWasteProximity'
     */
    @Test
    public void hazardWasteProximityTest() {
        // TODO: test hazardWasteProximity
    }

    /**
     * Test the property 'leadPaintIndicator'
     */
    @Test
    public void leadPaintIndicatorTest() {
        // TODO: test leadPaintIndicator
    }

    /**
     * Test the property 'naTACancerRisk'
     */
    @Test
    public void naTACancerRiskTest() {
        // TODO: test naTACancerRisk
    }

    /**
     * Test the property 'naTADieselPM'
     */
    @Test
    public void naTADieselPMTest() {
        // TODO: test naTADieselPM
    }

    /**
     * Test the property 'naTARespiratoryHI'
     */
    @Test
    public void naTARespiratoryHITest() {
        // TODO: test naTARespiratoryHI
    }

    /**
     * Test the property 'over80Count'
     */
    @Test
    public void over80CountTest() {
        // TODO: test over80Count
    }

    /**
     * Test the property 'ozone'
     */
    @Test
    public void ozoneTest() {
        // TODO: test ozone
    }

    /**
     * Test the property 'PM25'
     */
    @Test
    public void PM25Test() {
        // TODO: test PM25
    }

    /**
     * Test the property 'rmPProximity'
     */
    @Test
    public void rmPProximityTest() {
        // TODO: test rmPProximity
    }

    /**
     * Test the property 'registryID'
     */
    @Test
    public void registryIDTest() {
        // TODO: test registryID
    }

    /**
     * Test the property 'superfundProximity'
     */
    @Test
    public void superfundProximityTest() {
        // TODO: test superfundProximity
    }

    /**
     * Test the property 'trafficProximity'
     */
    @Test
    public void trafficProximityTest() {
        // TODO: test trafficProximity
    }

    /**
     * Test the property 'waterDischargeProximity'
     */
    @Test
    public void waterDischargeProximityTest() {
        // TODO: test waterDischargeProximity
    }

}
