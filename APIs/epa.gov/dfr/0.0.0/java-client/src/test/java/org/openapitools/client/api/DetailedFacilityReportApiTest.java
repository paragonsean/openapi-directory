/*
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DfrRestServicesGetAirComplianceGet200Response;
import org.openapitools.client.model.DfrRestServicesGetAirQualityGet200Response;
import org.openapitools.client.model.DfrRestServicesGetAwsDocsGet200Response;
import org.openapitools.client.model.DfrRestServicesGetCaseFormalActionsGet200Response;
import org.openapitools.client.model.DfrRestServicesGetComplianceHistoryGet200Response;
import org.openapitools.client.model.DfrRestServicesGetComplianceSummaryGet200Response;
import org.openapitools.client.model.DfrRestServicesGetCwa3yrComplianceGet200Response;
import org.openapitools.client.model.DfrRestServicesGetCwa3yrD80d90CountsGet200Response;
import org.openapitools.client.model.DfrRestServicesGetCwaCsComplianceGet200Response;
import org.openapitools.client.model.DfrRestServicesGetCwaEffAlrExpGet200Response;
import org.openapitools.client.model.DfrRestServicesGetCwaEffAlrGet200Response;
import org.openapitools.client.model.DfrRestServicesGetCwaEffComplianceExpGet200Response;
import org.openapitools.client.model.DfrRestServicesGetCwaEffComplianceGet200Response;
import org.openapitools.client.model.DfrRestServicesGetCwaPsComplianceGet200Response;
import org.openapitools.client.model.DfrRestServicesGetCwaRncComplianceGet200Response;
import org.openapitools.client.model.DfrRestServicesGetCwaSeComplianceGet200Response;
import org.openapitools.client.model.DfrRestServicesGetD80d90sDetailsGet200Response;
import org.openapitools.client.model.DfrRestServicesGetDemographicsByIdGet200Response;
import org.openapitools.client.model.DfrRestServicesGetDfrGet200Response;
import org.openapitools.client.model.DfrRestServicesGetEjscreenIndexesGet200Response;
import org.openapitools.client.model.DfrRestServicesGetEnforcementSummaryGet200Response;
import org.openapitools.client.model.DfrRestServicesGetExtractDatesGet200Response;
import org.openapitools.client.model.DfrRestServicesGetFormalActionsGet200Response;
import org.openapitools.client.model.DfrRestServicesGetIcisFormalActionsGet200Response;
import org.openapitools.client.model.DfrRestServicesGetInspectionsGet200Response;
import org.openapitools.client.model.DfrRestServicesGetMapGet200Response;
import org.openapitools.client.model.DfrRestServicesGetNaicsGet200Response;
import org.openapitools.client.model.DfrRestServicesGetNoticesGet200Response;
import org.openapitools.client.model.DfrRestServicesGetPermitsGet200Response;
import org.openapitools.client.model.DfrRestServicesGetRcraComplianceGet200Response;
import org.openapitools.client.model.DfrRestServicesGetSdwaLeadAndCopperGet200Response;
import org.openapitools.client.model.DfrRestServicesGetSdwaSanitarySurveysGet200Response;
import org.openapitools.client.model.DfrRestServicesGetSdwaSiteVisitsGet200Response;
import org.openapitools.client.model.DfrRestServicesGetSdwaViolationsGet200Response;
import org.openapitools.client.model.DfrRestServicesGetSdwisComplianceGet200Response;
import org.openapitools.client.model.DfrRestServicesGetSicCodesGet200Response;
import org.openapitools.client.model.DfrRestServicesGetSpatialMetadataGet200Response;
import org.openapitools.client.model.DfrRestServicesGetTriHistoryGet200Response;
import org.openapitools.client.model.DfrRestServicesGetTriReleasesGet200Response;
import org.openapitools.client.model.DfrRestServicesGetTribesGet200Response;
import org.openapitools.client.model.DfrRestServicesGetWaterQualityDetailsGet200Response;
import org.openapitools.client.model.DfrRestServicesGetWaterQualityGet200Response;
import java.io.File;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DetailedFacilityReportApi
 */
@Disabled
public class DetailedFacilityReportApiTest {

    private final DetailedFacilityReportApi api = new DetailedFacilityReportApi();

    /**
     * Downloads the complete Air Compliance History Section of the DFR
     *
     * For the provided system identifier, dowloads all displayed Air quaterly/monthly Facility Level Status, High Priority Violation (HPV) History, HPV Detailed Violations and Federal Reportable Violation  information in a Comma Seperated Value (CSV) format.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesAir3YrDownloadGetTest() throws ApiException {
        File response = api.dfrRestServicesAir3YrDownloadGet();
        // TODO: test validations
    }

    /**
     * Downloads the complete Air Compliance History Section of the DFR
     *
     * For the provided system identifier, dowloads all displayed Air quaterly/monthly Facility Level Status, High Priority Violation (HPV) History, HPV Detailed Violations and Federal Reportable Violation  information in a Comma Seperated Value (CSV) format.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesAir3YrDownloadPostTest() throws ApiException {
        File response = api.dfrRestServicesAir3YrDownloadPost();
        // TODO: test validations
    }

    /**
     * Downloads NPDES Effluent Violation Information by month and quarter.
     *
     * For the provided system identifier, dowloads all displayed NPDES quaterly/monthly effluent violation information in a Comma Seperated Value (CSV) format.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesCwa3YrEffluentDownloadGetTest() throws ApiException {
        File response = api.dfrRestServicesCwa3YrEffluentDownloadGet();
        // TODO: test validations
    }

    /**
     * Downloads NPDES Effluent Violation Information by month and quarter.
     *
     * For the provided system identifier, dowloads all displayed NPDES quaterly/monthly effluent violation information in a Comma Seperated Value (CSV) format.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesCwa3YrEffluentDownloadPostTest() throws ApiException {
        File response = api.dfrRestServicesCwa3YrEffluentDownloadPost();
        // TODO: test validations
    }

    /**
     * Downloads NPDES Compliance Schedule, Permit Schedule and Single Event Violation Information by month and quarter.
     *
     * For the provided system identifier, dowloads all displayed NPDES quaterly/monthly Compliance Schedule, Permit Schedule, and Single Event Violation  information in a Comma Seperated Value (CSV) format.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesCwa3YrSepscsDownloadGetTest() throws ApiException {
        File response = api.dfrRestServicesCwa3YrSepscsDownloadGet();
        // TODO: test validations
    }

    /**
     * Downloads NPDES Compliance Schedule, Permit Schedule and Single Event Violation Information by month and quarter.
     *
     * For the provided system identifier, dowloads all displayed NPDES quaterly/monthly Compliance Schedule, Permit Schedule, and Single Event Violation  information in a Comma Seperated Value (CSV) format.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesCwa3YrSepscsDownloadPostTest() throws ApiException {
        File response = api.dfrRestServicesCwa3YrSepscsDownloadPost();
        // TODO: test validations
    }

    /**
     * Detailed Facility Report Air Compliance Report Service
     *
     * This procedure obtains data for Air Compliance in the Environmental Conditions Section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetAirComplianceGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetAirComplianceGet200Response response = api.dfrRestServicesGetAirComplianceGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report Air Compliance Report Service
     *
     * This procedure obtains data for Air Compliance in the Environmental Conditions Section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetAirCompliancePostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetAirComplianceGet200Response response = api.dfrRestServicesGetAirCompliancePost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report Air Quality Report Service
     *
     * This procedure obtains data for Air Quality in the Environmental Conditions Section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetAirQualityGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetAirQualityGet200Response response = api.dfrRestServicesGetAirQualityGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report Air Quality Report Service
     *
     * This procedure obtains data for Air Quality in the Environmental Conditions Section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetAirQualityPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetAirQualityGet200Response response = api.dfrRestServicesGetAirQualityPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Placeholder
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetAwsDocsGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetAwsDocsGet200Response response = api.dfrRestServicesGetAwsDocsGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Placeholder
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetAwsDocsPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetAwsDocsGet200Response response = api.dfrRestServicesGetAwsDocsPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Displays Cases related to the Facility
     *
     * Displays closed case information from EPA&#39;s Federal Enforcement &amp; Compliance System that are related to the facility.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetCaseFormalActionsGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetCaseFormalActionsGet200Response response = api.dfrRestServicesGetCaseFormalActionsGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Displays Cases related to the Facility
     *
     * Displays closed case information from EPA&#39;s Federal Enforcement &amp; Compliance System that are related to the facility.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetCaseFormalActionsPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetCaseFormalActionsGet200Response response = api.dfrRestServicesGetCaseFormalActionsPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report 5 Year Compliance Monitoring History Service
     *
     * This procedure obtains data for the Compliance Monitoring History (5 years) in the Enforcement and Compliance Section of the Detailed Facility report.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetComplianceHistoryGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetComplianceHistoryGet200Response response = api.dfrRestServicesGetComplianceHistoryGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report 5 Year Compliance Monitoring History Service
     *
     * This procedure obtains data for the Compliance Monitoring History (5 years) in the Enforcement and Compliance Section of the Detailed Facility report.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetComplianceHistoryPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetComplianceHistoryGet200Response response = api.dfrRestServicesGetComplianceHistoryPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report Compliance Summary Service
     *
     * This procedure obtains data for Compliance Summary Data in the Enforcement and Compliance Section of the Detailed Facility report.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetComplianceSummaryGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetComplianceSummaryGet200Response response = api.dfrRestServicesGetComplianceSummaryGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report Compliance Summary Service
     *
     * This procedure obtains data for Compliance Summary Data in the Enforcement and Compliance Section of the Detailed Facility report.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetComplianceSummaryPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetComplianceSummaryGet200Response response = api.dfrRestServicesGetComplianceSummaryPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Downloads a spectific section  of the DFR in CSV Format
     *
     * For a supplied system id and DFR section name, the procedure will download that section in a Comma Separated Value (CSV) format.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetCsvGetTest() throws ApiException {
        File response = api.dfrRestServicesGetCsvGet();
        // TODO: test validations
    }

    /**
     * Downloads a spectific section  of the DFR in CSV Format
     *
     * For a supplied system id and DFR section name, the procedure will download that section in a Comma Separated Value (CSV) format.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetCsvPostTest() throws ApiException {
        File response = api.dfrRestServicesGetCsvPost();
        // TODO: test validations
    }

    /**
     * Detailed Facility Report 3 Year CWA Facility-Level Status Service
     *
     * This procedure obtains data for the CWA Facility-Level Status section located in the Three Year Compliance Status by Quarter portion of the DFR. Valid Compliance Statuses are as follows: &gt; \&quot;In Viol\&quot; &#x3D; Facility is in violation &gt; \&quot;No Viol\&quot; &#x3D; No violation found &gt; \&quot;Unk\&quot; &#x3D; Unknown status &gt; \&quot;SNC/Cat 1\&quot; &#x3D; SNC/Category I violation found
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetCwa3yrComplianceGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetCwa3yrComplianceGet200Response response = api.dfrRestServicesGetCwa3yrComplianceGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report 3 Year CWA Facility-Level Status Service
     *
     * This procedure obtains data for the CWA Facility-Level Status section located in the Three Year Compliance Status by Quarter portion of the DFR. Valid Compliance Statuses are as follows: &gt; \&quot;In Viol\&quot; &#x3D; Facility is in violation &gt; \&quot;No Viol\&quot; &#x3D; No violation found &gt; \&quot;Unk\&quot; &#x3D; Unknown status &gt; \&quot;SNC/Cat 1\&quot; &#x3D; SNC/Category I violation found
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetCwa3yrCompliancePostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetCwa3yrComplianceGet200Response response = api.dfrRestServicesGetCwa3yrCompliancePost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Displays monlthly and quarterly counts of D80 and D90 Effluent Non Reporting Violations Related to the Facility
     *
     * Displays monlthly and quarterly counts of D80 and D90 Effluent Non Reporting Violations Related to the Facility from EPA&#39;s ICIS NPDES System.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetCwa3yrD80d90CountsGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetCwa3yrD80d90CountsGet200Response response = api.dfrRestServicesGetCwa3yrD80d90CountsGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Displays monlthly and quarterly counts of D80 and D90 Effluent Non Reporting Violations Related to the Facility
     *
     * Displays monlthly and quarterly counts of D80 and D90 Effluent Non Reporting Violations Related to the Facility from EPA&#39;s ICIS NPDES System.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetCwa3yrD80d90CountsPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetCwa3yrD80d90CountsGet200Response response = api.dfrRestServicesGetCwa3yrD80d90CountsPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report CWA CSV Compliance Service
     *
     * This procedure obtains data for the CWA Compliance Schedule Violations section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetCwaCsComplianceGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetCwaCsComplianceGet200Response response = api.dfrRestServicesGetCwaCsComplianceGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report CWA CSV Compliance Service
     *
     * This procedure obtains data for the CWA Compliance Schedule Violations section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetCwaCsCompliancePostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetCwaCsComplianceGet200Response response = api.dfrRestServicesGetCwaCsCompliancePost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Placeholder
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetCwaEffAlrExpGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetCwaEffAlrExpGet200Response response = api.dfrRestServicesGetCwaEffAlrExpGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Placeholder
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetCwaEffAlrExpPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetCwaEffAlrExpGet200Response response = api.dfrRestServicesGetCwaEffAlrExpPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report CWA Effluent ALR Service
     *
     * This procedure obtains data for the CWA Pollutant Discharge section located in the Three Year Compliance Status by Quarter portion of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetCwaEffAlrGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetCwaEffAlrGet200Response response = api.dfrRestServicesGetCwaEffAlrGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report CWA Effluent ALR Service
     *
     * This procedure obtains data for the CWA Pollutant Discharge section located in the Three Year Compliance Status by Quarter portion of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetCwaEffAlrPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetCwaEffAlrGet200Response response = api.dfrRestServicesGetCwaEffAlrPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Placeholder
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetCwaEffComplianceExpGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetCwaEffComplianceExpGet200Response response = api.dfrRestServicesGetCwaEffComplianceExpGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Placeholder
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetCwaEffComplianceExpPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetCwaEffComplianceExpGet200Response response = api.dfrRestServicesGetCwaEffComplianceExpPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report CWA Effluent Compliance Service
     *
     * This procedure obtains data for the CWA Effluent Compliance section on the DFR.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetCwaEffComplianceGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetCwaEffComplianceGet200Response response = api.dfrRestServicesGetCwaEffComplianceGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report CWA Effluent Compliance Service
     *
     * This procedure obtains data for the CWA Effluent Compliance section on the DFR.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetCwaEffCompliancePostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetCwaEffComplianceGet200Response response = api.dfrRestServicesGetCwaEffCompliancePost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report CWA PSV Compliance Service
     *
     * This procedure obtains data for the CWA Permit Schedule Violations section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetCwaPsComplianceGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetCwaPsComplianceGet200Response response = api.dfrRestServicesGetCwaPsComplianceGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report CWA PSV Compliance Service
     *
     * This procedure obtains data for the CWA Permit Schedule Violations section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetCwaPsCompliancePostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetCwaPsComplianceGet200Response response = api.dfrRestServicesGetCwaPsCompliancePost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report CWA RNC Compliance Service
     *
     * This procedure obtains data for the CWA SNC/RNC History section located in the Three Year ompliance Status by Quarter portion of the DFR. Valid Compliance Statuses are as follows. &gt; S &#x3D; SNC/Category I - an enforcement action has been issued, and the facility is not meeting its compliance schedule &gt; E &#x3D; SNC/Category I - effluent violations of monthly average limits (Technical Review Criteria and chronic) &gt; X &#x3D; SNC/Category I - effluent violations of non-monthly average limits (Technical Review Criteria and chronic) &gt; T &#x3D; SNC/Category I - compliance schedule reporting violation &gt; D &#x3D; SNC/Category I - reporting violation - nonreceipt of DMR &gt; N &#x3D; RNC/Category II - reportable non-compliance &gt; P &#x3D; Resolved Pending - an enforcement action has been issued, and facility compliance with the action is pending final completion &gt; R &#x3D; Resolved - the facility has returned to compliance with its permit conditions, either with or without issuance of an enforcement action &gt; C &#x3D; Not considered in RNC/SNC based on manual review of data by state or EPA region. This manual override status is also indicated by a superscripted \&quot;m\&quot;. &gt; Blank &#x3D; Not considered in RNC/SNC &gt; N/A &#x3D; EPA&#39;s data system is not able to determine the facility-level compliance status based upon the information available. This information may be available from a state database.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetCwaRncComplianceGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetCwaRncComplianceGet200Response response = api.dfrRestServicesGetCwaRncComplianceGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report CWA RNC Compliance Service
     *
     * This procedure obtains data for the CWA SNC/RNC History section located in the Three Year ompliance Status by Quarter portion of the DFR. Valid Compliance Statuses are as follows. &gt; S &#x3D; SNC/Category I - an enforcement action has been issued, and the facility is not meeting its compliance schedule &gt; E &#x3D; SNC/Category I - effluent violations of monthly average limits (Technical Review Criteria and chronic) &gt; X &#x3D; SNC/Category I - effluent violations of non-monthly average limits (Technical Review Criteria and chronic) &gt; T &#x3D; SNC/Category I - compliance schedule reporting violation &gt; D &#x3D; SNC/Category I - reporting violation - nonreceipt of DMR &gt; N &#x3D; RNC/Category II - reportable non-compliance &gt; P &#x3D; Resolved Pending - an enforcement action has been issued, and facility compliance with the action is pending final completion &gt; R &#x3D; Resolved - the facility has returned to compliance with its permit conditions, either with or without issuance of an enforcement action &gt; C &#x3D; Not considered in RNC/SNC based on manual review of data by state or EPA region. This manual override status is also indicated by a superscripted \&quot;m\&quot;. &gt; Blank &#x3D; Not considered in RNC/SNC &gt; N/A &#x3D; EPA&#39;s data system is not able to determine the facility-level compliance status based upon the information available. This information may be available from a state database.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetCwaRncCompliancePostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetCwaRncComplianceGet200Response response = api.dfrRestServicesGetCwaRncCompliancePost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report CWA SEV Compliance Service
     *
     * This procedure obtains data for the CWA Single Event Violations section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetCwaSeComplianceGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetCwaSeComplianceGet200Response response = api.dfrRestServicesGetCwaSeComplianceGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report CWA SEV Compliance Service
     *
     * This procedure obtains data for the CWA Single Event Violations section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetCwaSeCompliancePostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetCwaSeComplianceGet200Response response = api.dfrRestServicesGetCwaSeCompliancePost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Display detailed D80/D90 information for the facility for a given quarter or month
     *
     * Displays detailed D80/D90 Effluent Non Reporting  information from EPA&#39;s ICIS NPDES system for the facility for a given quarter or month.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetD80d90sDetailsGetTest() throws ApiException {
        String output = null;
        String pNpdesId = null;
        String pMissinglate = null;
        String pQmtype = null;
        String pQmvalue = null;
        String paramCallback = null;
        DfrRestServicesGetD80d90sDetailsGet200Response response = api.dfrRestServicesGetD80d90sDetailsGet(output, pNpdesId, pMissinglate, pQmtype, pQmvalue, paramCallback);
        // TODO: test validations
    }

    /**
     * Display detailed D80/D90 information for the facility for a given quarter or month
     *
     * Displays detailed D80/D90 Effluent Non Reporting  information from EPA&#39;s ICIS NPDES system for the facility for a given quarter or month.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetD80d90sDetailsPostTest() throws ApiException {
        String output = null;
        String pNpdesId = null;
        String pMissinglate = null;
        String pQmtype = null;
        String pQmvalue = null;
        String paramCallback = null;
        DfrRestServicesGetD80d90sDetailsGet200Response response = api.dfrRestServicesGetD80d90sDetailsPost(output, pNpdesId, pMissinglate, pQmtype, pQmvalue, paramCallback);
        // TODO: test validations
    }

    /**
     * Displays 2010 Census and ACS demographics by Facility ID
     *
     * Displays precalculated 2010 Census and American Community Survey demographic information for a provided facility identifier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetDemographicsByIdGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetDemographicsByIdGet200Response response = api.dfrRestServicesGetDemographicsByIdGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Displays 2010 Census and ACS demographics by Facility ID
     *
     * Displays precalculated 2010 Census and American Community Survey demographic information for a provided facility identifier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetDemographicsByIdPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetDemographicsByIdGet200Response response = api.dfrRestServicesGetDemographicsByIdPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report Service
     *
     * This procedure is the overall service for the Detailed Facility Report. It returns all of the data displayed in the DFR web report by invoking individual procedures that each return a targeted portion of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetDfrGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String pSystem = null;
        String paramCallback = null;
        DfrRestServicesGetDfrGet200Response response = api.dfrRestServicesGetDfrGet(pId, output, pSystem, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report Service
     *
     * This procedure is the overall service for the Detailed Facility Report. It returns all of the data displayed in the DFR web report by invoking individual procedures that each return a targeted portion of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetDfrPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String pSystem = null;
        String paramCallback = null;
        DfrRestServicesGetDfrGet200Response response = api.dfrRestServicesGetDfrPost(pId, output, pSystem, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report EJScreen Indexes Service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetEjscreenIndexesGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetEjscreenIndexesGet200Response response = api.dfrRestServicesGetEjscreenIndexesGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report EJScreen Indexes Service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetEjscreenIndexesPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetEjscreenIndexesGet200Response response = api.dfrRestServicesGetEjscreenIndexesPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report Enforcement Summary Service
     *
     * This procedure obtains data for the Enforcement and Compliance Summary in the Facility Summary section of the Detailed Facility Report.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetEnforcementSummaryGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetEnforcementSummaryGet200Response response = api.dfrRestServicesGetEnforcementSummaryGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report Enforcement Summary Service
     *
     * This procedure obtains data for the Enforcement and Compliance Summary in the Facility Summary section of the Detailed Facility Report.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetEnforcementSummaryPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetEnforcementSummaryGet200Response response = api.dfrRestServicesGetEnforcementSummaryPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Displays the dates that data was extracted from native EPA systems for the DFR.
     *
     * By EPA System, displays the extract dates that data was extracted for the DFR from multiple EPA computer systems.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetExtractDatesGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetExtractDatesGet200Response response = api.dfrRestServicesGetExtractDatesGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Displays the dates that data was extracted from native EPA systems for the DFR.
     *
     * By EPA System, displays the extract dates that data was extracted for the DFR from multiple EPA computer systems.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetExtractDatesPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetExtractDatesGet200Response response = api.dfrRestServicesGetExtractDatesPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report Formal Actions Service
     *
     * This procedure obtains data for the Formal Enforcement Actions section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetFormalActionsGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetFormalActionsGet200Response response = api.dfrRestServicesGetFormalActionsGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report Formal Actions Service
     *
     * This procedure obtains data for the Formal Enforcement Actions section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetFormalActionsPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetFormalActionsGet200Response response = api.dfrRestServicesGetFormalActionsPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report ICIS Formal Actions Service
     *
     * This procedure obtains data for the Integrated Compliance Information System, Formal Enforcement Actions section of the DFR. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetIcisFormalActionsGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetIcisFormalActionsGet200Response response = api.dfrRestServicesGetIcisFormalActionsGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report ICIS Formal Actions Service
     *
     * This procedure obtains data for the Integrated Compliance Information System, Formal Enforcement Actions section of the DFR. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetIcisFormalActionsPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetIcisFormalActionsGet200Response response = api.dfrRestServicesGetIcisFormalActionsPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report Inspections Summary Service
     *
     * This procedure obtains data for Enforcement and Compliance Summary Section of the Detailed Facility report.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetInspectionsGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetInspectionsGet200Response response = api.dfrRestServicesGetInspectionsGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report Inspections Summary Service
     *
     * This procedure obtains data for Enforcement and Compliance Summary Section of the Detailed Facility report.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetInspectionsPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetInspectionsGet200Response response = api.dfrRestServicesGetInspectionsPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report Map Service
     *
     * Returns an object with the facility&#39;s latitude and longitude coordinates.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetMapGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetMapGet200Response response = api.dfrRestServicesGetMapGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report Map Service
     *
     * Returns an object with the facility&#39;s latitude and longitude coordinates.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetMapPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetMapGet200Response response = api.dfrRestServicesGetMapPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report NAICS Code Service
     *
     * This procedure obtains data for the Facility NAICS Codes section in Facility/System Characteristics of the Detailed Facility Report.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetNaicsGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetNaicsGet200Response response = api.dfrRestServicesGetNaicsGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report NAICS Code Service
     *
     * This procedure obtains data for the Facility NAICS Codes section in Facility/System Characteristics of the Detailed Facility Report.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetNaicsPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetNaicsGet200Response response = api.dfrRestServicesGetNaicsPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report Notices Service
     *
     * This procedure obtains data for the Notices/Informal Actions section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetNoticesGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetNoticesGet200Response response = api.dfrRestServicesGetNoticesGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report Notices Service
     *
     * This procedure obtains data for the Notices/Informal Actions section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetNoticesPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetNoticesGet200Response response = api.dfrRestServicesGetNoticesPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report Permits Service
     *
     * This procedure obtains data for the following sections of the Detailed Facility Report. &gt; Facility Information (FRS) in the Facility Summary. &gt; Regulatory Interests in the Facility Summary. &gt; Also Reports in the Facility Summary. &gt; Facility/System Characteristics in Facility/System Characteristics. &gt; Facility Contact Information in Facility/System Characteristics. &gt; Facility SIC Codes in Facility/System Characteristics section. &gt; Facility NAICS Codes in Facility/System Characteristics section.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetPermitsGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetPermitsGet200Response response = api.dfrRestServicesGetPermitsGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report Permits Service
     *
     * This procedure obtains data for the following sections of the Detailed Facility Report. &gt; Facility Information (FRS) in the Facility Summary. &gt; Regulatory Interests in the Facility Summary. &gt; Also Reports in the Facility Summary. &gt; Facility/System Characteristics in Facility/System Characteristics. &gt; Facility Contact Information in Facility/System Characteristics. &gt; Facility SIC Codes in Facility/System Characteristics section. &gt; Facility NAICS Codes in Facility/System Characteristics section.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetPermitsPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetPermitsGet200Response response = api.dfrRestServicesGetPermitsPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report RCRA Compliance Service
     *
     * This procedure obtains data for the RCRA Compliance section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetRcraComplianceGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetRcraComplianceGet200Response response = api.dfrRestServicesGetRcraComplianceGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report RCRA Compliance Service
     *
     * This procedure obtains data for the RCRA Compliance section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetRcraCompliancePostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetRcraComplianceGet200Response response = api.dfrRestServicesGetRcraCompliancePost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report SDWA Lead and Copper Service
     *
     * This procedure obtains data for the SDWA, Lead and Copper Rule section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetSdwaLeadAndCopperGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetSdwaLeadAndCopperGet200Response response = api.dfrRestServicesGetSdwaLeadAndCopperGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report SDWA Lead and Copper Service
     *
     * This procedure obtains data for the SDWA, Lead and Copper Rule section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetSdwaLeadAndCopperPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetSdwaLeadAndCopperGet200Response response = api.dfrRestServicesGetSdwaLeadAndCopperPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report SDWA Sanitary Surveys Service
     *
     * This procedure obtains data for the SDWA, Sanitary Surveys section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetSdwaSanitarySurveysGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetSdwaSanitarySurveysGet200Response response = api.dfrRestServicesGetSdwaSanitarySurveysGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report SDWA Sanitary Surveys Service
     *
     * This procedure obtains data for the SDWA, Sanitary Surveys section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetSdwaSanitarySurveysPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetSdwaSanitarySurveysGet200Response response = api.dfrRestServicesGetSdwaSanitarySurveysPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report SDWA Sanitary Site Visits Service
     *
     * This procedure obtains data for the SDWA, Sanitary Site Visits section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetSdwaSiteVisitsGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetSdwaSiteVisitsGet200Response response = api.dfrRestServicesGetSdwaSiteVisitsGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report SDWA Sanitary Site Visits Service
     *
     * This procedure obtains data for the SDWA, Sanitary Site Visits section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetSdwaSiteVisitsPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetSdwaSiteVisitsGet200Response response = api.dfrRestServicesGetSdwaSiteVisitsPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report SDWA Violations Service
     *
     * This procedure obtains data for the SDWA Violations section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetSdwaViolationsGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetSdwaViolationsGet200Response response = api.dfrRestServicesGetSdwaViolationsGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report SDWA Violations Service
     *
     * This procedure obtains data for the SDWA Violations section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetSdwaViolationsPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetSdwaViolationsGet200Response response = api.dfrRestServicesGetSdwaViolationsPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report SDWIS Compliance Service
     *
     * This procedure obtains data for the SDWA Compliance section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetSdwisComplianceGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetSdwisComplianceGet200Response response = api.dfrRestServicesGetSdwisComplianceGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report SDWIS Compliance Service
     *
     * This procedure obtains data for the SDWA Compliance section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetSdwisCompliancePostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetSdwisComplianceGet200Response response = api.dfrRestServicesGetSdwisCompliancePost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report SIC Code Service
     *
     * This procedure obtains data for the Facility SIC Codes section in Facility/System Characteristics of the Detailed Facility Report.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetSicCodesGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetSicCodesGet200Response response = api.dfrRestServicesGetSicCodesGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report SIC Code Service
     *
     * This procedure obtains data for the Facility SIC Codes section in Facility/System Characteristics of the Detailed Facility Report.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetSicCodesPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetSicCodesGet200Response response = api.dfrRestServicesGetSicCodesPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report Spatial Metadata Service
     *
     * Returns an object with the facility coordinate spatial metadata.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetSpatialMetadataGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetSpatialMetadataGet200Response response = api.dfrRestServicesGetSpatialMetadataGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report Spatial Metadata Service
     *
     * Returns an object with the facility coordinate spatial metadata.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetSpatialMetadataPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetSpatialMetadataGet200Response response = api.dfrRestServicesGetSpatialMetadataPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report TRI History Service
     *
     * This procedure obtains data for the TRI History section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetTriHistoryGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetTriHistoryGet200Response response = api.dfrRestServicesGetTriHistoryGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report TRI History Service
     *
     * This procedure obtains data for the TRI History section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetTriHistoryPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetTriHistoryGet200Response response = api.dfrRestServicesGetTriHistoryPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report TRI Releases Service
     *
     * This procedrue obtains data for the TRI Releases section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetTriReleasesGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetTriReleasesGet200Response response = api.dfrRestServicesGetTriReleasesGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report TRI Releases Service
     *
     * This procedrue obtains data for the TRI Releases section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetTriReleasesPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetTriReleasesGet200Response response = api.dfrRestServicesGetTriReleasesPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report Tribes Service
     *
     * This procedure obtains data for the Tribes and Reservations section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetTribesGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetTribesGet200Response response = api.dfrRestServicesGetTribesGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report Tribes Service
     *
     * This procedure obtains data for the Tribes and Reservations section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetTribesPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetTribesGet200Response response = api.dfrRestServicesGetTribesPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Displays detailed Water Quality information from EPA&#39;s Office of Water Systems
     *
     * This information is only available for facilities with a NPDES permit. Based on spatial data, displays water quality information from EPA&#39;s Office of Water ATTAINS system.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetWaterQualityDetailsGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetWaterQualityDetailsGet200Response response = api.dfrRestServicesGetWaterQualityDetailsGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Displays detailed Water Quality information from EPA&#39;s Office of Water Systems
     *
     * This information is only available for facilities with a NPDES permit. Based on spatial data, displays water quality information from EPA&#39;s Office of Water ATTAINS system.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetWaterQualityDetailsPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetWaterQualityDetailsGet200Response response = api.dfrRestServicesGetWaterQualityDetailsPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report Water Quality Service
     *
     * This procedure obtains data for the Water Quality section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetWaterQualityGetTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetWaterQualityGet200Response response = api.dfrRestServicesGetWaterQualityGet(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Detailed Facility Report Water Quality Service
     *
     * This procedure obtains data for the Water Quality section of the DFR.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesGetWaterQualityPostTest() throws ApiException {
        String pId = null;
        String output = null;
        String paramCallback = null;
        DfrRestServicesGetWaterQualityGet200Response response = api.dfrRestServicesGetWaterQualityPost(pId, output, paramCallback);
        // TODO: test validations
    }

    /**
     * Downloads the complete RCRA Compliance History Section of the DFR
     *
     * For the provided system identifier, dowloads all displayed RCRA quaterly/monthly Facility Level Status and Violation information in a Comma Seperated Value (CSV) format.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesRcra3YrDownloadGetTest() throws ApiException {
        File response = api.dfrRestServicesRcra3YrDownloadGet();
        // TODO: test validations
    }

    /**
     * Downloads the complete RCRA Compliance History Section of the DFR
     *
     * For the provided system identifier, dowloads all displayed RCRA quaterly/monthly Facility Level Status and Violation information in a Comma Seperated Value (CSV) format.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfrRestServicesRcra3YrDownloadPostTest() throws ApiException {
        File response = api.dfrRestServicesRcra3YrDownloadPost();
        // TODO: test validations
    }

}
