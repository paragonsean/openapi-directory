/*
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Dfr035EXPParameters
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:30:18.338738-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Dfr035EXPParameters {
  public static final String SERIALIZED_NAME_DISCHARGE_POINT = "DischargePoint";
  @SerializedName(SERIALIZED_NAME_DISCHARGE_POINT)
  private String dischargePoint;

  public static final String SERIALIZED_NAME_MEASUREMENT_TYPE = "MeasurementType";
  @SerializedName(SERIALIZED_NAME_MEASUREMENT_TYPE)
  private String measurementType;

  public static final String SERIALIZED_NAME_MNTH10_VALUE = "Mnth10Value";
  @SerializedName(SERIALIZED_NAME_MNTH10_VALUE)
  private String mnth10Value;

  public static final String SERIALIZED_NAME_MNTH11_VALUE = "Mnth11Value";
  @SerializedName(SERIALIZED_NAME_MNTH11_VALUE)
  private String mnth11Value;

  public static final String SERIALIZED_NAME_MNTH12_VALUE = "Mnth12Value";
  @SerializedName(SERIALIZED_NAME_MNTH12_VALUE)
  private String mnth12Value;

  public static final String SERIALIZED_NAME_MNTH13_VALUE = "Mnth13Value";
  @SerializedName(SERIALIZED_NAME_MNTH13_VALUE)
  private String mnth13Value;

  public static final String SERIALIZED_NAME_MNTH14_VALUE = "Mnth14Value";
  @SerializedName(SERIALIZED_NAME_MNTH14_VALUE)
  private String mnth14Value;

  public static final String SERIALIZED_NAME_MNTH15_VALUE = "Mnth15Value";
  @SerializedName(SERIALIZED_NAME_MNTH15_VALUE)
  private String mnth15Value;

  public static final String SERIALIZED_NAME_MNTH16_VALUE = "Mnth16Value";
  @SerializedName(SERIALIZED_NAME_MNTH16_VALUE)
  private String mnth16Value;

  public static final String SERIALIZED_NAME_MNTH17_VALUE = "Mnth17Value";
  @SerializedName(SERIALIZED_NAME_MNTH17_VALUE)
  private String mnth17Value;

  public static final String SERIALIZED_NAME_MNTH18_VALUE = "Mnth18Value";
  @SerializedName(SERIALIZED_NAME_MNTH18_VALUE)
  private String mnth18Value;

  public static final String SERIALIZED_NAME_MNTH19_VALUE = "Mnth19Value";
  @SerializedName(SERIALIZED_NAME_MNTH19_VALUE)
  private String mnth19Value;

  public static final String SERIALIZED_NAME_MNTH1_VALUE = "Mnth1Value";
  @SerializedName(SERIALIZED_NAME_MNTH1_VALUE)
  private String mnth1Value;

  public static final String SERIALIZED_NAME_MNTH20_VALUE = "Mnth20Value";
  @SerializedName(SERIALIZED_NAME_MNTH20_VALUE)
  private String mnth20Value;

  public static final String SERIALIZED_NAME_MNTH21_VALUE = "Mnth21Value";
  @SerializedName(SERIALIZED_NAME_MNTH21_VALUE)
  private String mnth21Value;

  public static final String SERIALIZED_NAME_MNTH22_VALUE = "Mnth22Value";
  @SerializedName(SERIALIZED_NAME_MNTH22_VALUE)
  private String mnth22Value;

  public static final String SERIALIZED_NAME_MNTH23_VALUE = "Mnth23Value";
  @SerializedName(SERIALIZED_NAME_MNTH23_VALUE)
  private String mnth23Value;

  public static final String SERIALIZED_NAME_MNTH24_VALUE = "Mnth24Value";
  @SerializedName(SERIALIZED_NAME_MNTH24_VALUE)
  private String mnth24Value;

  public static final String SERIALIZED_NAME_MNTH25_VALUE = "Mnth25Value";
  @SerializedName(SERIALIZED_NAME_MNTH25_VALUE)
  private String mnth25Value;

  public static final String SERIALIZED_NAME_MNTH26_VALUE = "Mnth26Value";
  @SerializedName(SERIALIZED_NAME_MNTH26_VALUE)
  private String mnth26Value;

  public static final String SERIALIZED_NAME_MNTH27_VALUE = "Mnth27Value";
  @SerializedName(SERIALIZED_NAME_MNTH27_VALUE)
  private String mnth27Value;

  public static final String SERIALIZED_NAME_MNTH28_VALUE = "Mnth28Value";
  @SerializedName(SERIALIZED_NAME_MNTH28_VALUE)
  private String mnth28Value;

  public static final String SERIALIZED_NAME_MNTH29_VALUE = "Mnth29Value";
  @SerializedName(SERIALIZED_NAME_MNTH29_VALUE)
  private String mnth29Value;

  public static final String SERIALIZED_NAME_MNTH2_VALUE = "Mnth2Value";
  @SerializedName(SERIALIZED_NAME_MNTH2_VALUE)
  private String mnth2Value;

  public static final String SERIALIZED_NAME_MNTH30_VALUE = "Mnth30Value";
  @SerializedName(SERIALIZED_NAME_MNTH30_VALUE)
  private String mnth30Value;

  public static final String SERIALIZED_NAME_MNTH31_VALUE = "Mnth31Value";
  @SerializedName(SERIALIZED_NAME_MNTH31_VALUE)
  private String mnth31Value;

  public static final String SERIALIZED_NAME_MNTH32_VALUE = "Mnth32Value";
  @SerializedName(SERIALIZED_NAME_MNTH32_VALUE)
  private String mnth32Value;

  public static final String SERIALIZED_NAME_MNTH33_VALUE = "Mnth33Value";
  @SerializedName(SERIALIZED_NAME_MNTH33_VALUE)
  private String mnth33Value;

  public static final String SERIALIZED_NAME_MNTH34_VALUE = "Mnth34Value";
  @SerializedName(SERIALIZED_NAME_MNTH34_VALUE)
  private String mnth34Value;

  public static final String SERIALIZED_NAME_MNTH35_VALUE = "Mnth35Value";
  @SerializedName(SERIALIZED_NAME_MNTH35_VALUE)
  private String mnth35Value;

  public static final String SERIALIZED_NAME_MNTH36_VALUE = "Mnth36Value";
  @SerializedName(SERIALIZED_NAME_MNTH36_VALUE)
  private String mnth36Value;

  public static final String SERIALIZED_NAME_MNTH37_VALUE = "Mnth37Value";
  @SerializedName(SERIALIZED_NAME_MNTH37_VALUE)
  private String mnth37Value;

  public static final String SERIALIZED_NAME_MNTH38_VALUE = "Mnth38Value";
  @SerializedName(SERIALIZED_NAME_MNTH38_VALUE)
  private String mnth38Value;

  public static final String SERIALIZED_NAME_MNTH39_VALUE = "Mnth39Value";
  @SerializedName(SERIALIZED_NAME_MNTH39_VALUE)
  private String mnth39Value;

  public static final String SERIALIZED_NAME_MNTH3_VALUE = "Mnth3Value";
  @SerializedName(SERIALIZED_NAME_MNTH3_VALUE)
  private String mnth3Value;

  public static final String SERIALIZED_NAME_MNTH4_VALUE = "Mnth4Value";
  @SerializedName(SERIALIZED_NAME_MNTH4_VALUE)
  private String mnth4Value;

  public static final String SERIALIZED_NAME_MNTH5_VALUE = "Mnth5Value";
  @SerializedName(SERIALIZED_NAME_MNTH5_VALUE)
  private String mnth5Value;

  public static final String SERIALIZED_NAME_MNTH6_VALUE = "Mnth6Value";
  @SerializedName(SERIALIZED_NAME_MNTH6_VALUE)
  private String mnth6Value;

  public static final String SERIALIZED_NAME_MNTH7_VALUE = "Mnth7Value";
  @SerializedName(SERIALIZED_NAME_MNTH7_VALUE)
  private String mnth7Value;

  public static final String SERIALIZED_NAME_MNTH8_VALUE = "Mnth8Value";
  @SerializedName(SERIALIZED_NAME_MNTH8_VALUE)
  private String mnth8Value;

  public static final String SERIALIZED_NAME_MNTH9_VALUE = "Mnth9Value";
  @SerializedName(SERIALIZED_NAME_MNTH9_VALUE)
  private String mnth9Value;

  public static final String SERIALIZED_NAME_MONITORING_LOCATION = "MonitoringLocation";
  @SerializedName(SERIALIZED_NAME_MONITORING_LOCATION)
  private String monitoringLocation;

  public static final String SERIALIZED_NAME_PARAMETER_CODE = "ParameterCode";
  @SerializedName(SERIALIZED_NAME_PARAMETER_CODE)
  private String parameterCode;

  public static final String SERIALIZED_NAME_PARAMETER_NAME = "ParameterName";
  @SerializedName(SERIALIZED_NAME_PARAMETER_NAME)
  private String parameterName;

  public static final String SERIALIZED_NAME_QTR10_VALUE = "Qtr10Value";
  @SerializedName(SERIALIZED_NAME_QTR10_VALUE)
  private String qtr10Value;

  public static final String SERIALIZED_NAME_QTR11_VALUE = "Qtr11Value";
  @SerializedName(SERIALIZED_NAME_QTR11_VALUE)
  private String qtr11Value;

  public static final String SERIALIZED_NAME_QTR12_VALUE = "Qtr12Value";
  @SerializedName(SERIALIZED_NAME_QTR12_VALUE)
  private String qtr12Value;

  public static final String SERIALIZED_NAME_QTR13_VALUE = "Qtr13Value";
  @SerializedName(SERIALIZED_NAME_QTR13_VALUE)
  private String qtr13Value;

  public static final String SERIALIZED_NAME_QTR1_VALUE = "Qtr1Value";
  @SerializedName(SERIALIZED_NAME_QTR1_VALUE)
  private String qtr1Value;

  public static final String SERIALIZED_NAME_QTR2_VALUE = "Qtr2Value";
  @SerializedName(SERIALIZED_NAME_QTR2_VALUE)
  private String qtr2Value;

  public static final String SERIALIZED_NAME_QTR3_VALUE = "Qtr3Value";
  @SerializedName(SERIALIZED_NAME_QTR3_VALUE)
  private String qtr3Value;

  public static final String SERIALIZED_NAME_QTR4_VALUE = "Qtr4Value";
  @SerializedName(SERIALIZED_NAME_QTR4_VALUE)
  private String qtr4Value;

  public static final String SERIALIZED_NAME_QTR5_VALUE = "Qtr5Value";
  @SerializedName(SERIALIZED_NAME_QTR5_VALUE)
  private String qtr5Value;

  public static final String SERIALIZED_NAME_QTR6_VALUE = "Qtr6Value";
  @SerializedName(SERIALIZED_NAME_QTR6_VALUE)
  private String qtr6Value;

  public static final String SERIALIZED_NAME_QTR7_VALUE = "Qtr7Value";
  @SerializedName(SERIALIZED_NAME_QTR7_VALUE)
  private String qtr7Value;

  public static final String SERIALIZED_NAME_QTR8_VALUE = "Qtr8Value";
  @SerializedName(SERIALIZED_NAME_QTR8_VALUE)
  private String qtr8Value;

  public static final String SERIALIZED_NAME_QTR9_VALUE = "Qtr9Value";
  @SerializedName(SERIALIZED_NAME_QTR9_VALUE)
  private String qtr9Value;

  public static final String SERIALIZED_NAME_SOURCE_I_D = "SourceID";
  @SerializedName(SERIALIZED_NAME_SOURCE_I_D)
  private String sourceID;

  public Dfr035EXPParameters() {
  }

  public Dfr035EXPParameters dischargePoint(String dischargePoint) {
    this.dischargePoint = dischargePoint;
    return this;
  }

  /**
   * A 3- or 4-character code that uniquely identifies a single permitted discharge point (also called a pipe or outfall).
   * @return dischargePoint
   */
  @javax.annotation.Nonnull
  public String getDischargePoint() {
    return dischargePoint;
  }

  public void setDischargePoint(String dischargePoint) {
    this.dischargePoint = dischargePoint;
  }


  public Dfr035EXPParameters measurementType(String measurementType) {
    this.measurementType = measurementType;
    return this;
  }

  /**
   * The type of measurement used to determine the violation. Applicable values: - \&quot;Mnthly\&quot;  stands for monthly. This means that the exceedance shown in that row was based upon a monthly average of readings submitted by the permittee. - \&quot;NMth\&quot; stands for non-monthly. This is generally a \&quot;maximum\&quot; amount read during the reporting period (and could indicate a spike that is not continuous). \&quot;Neither\&quot; denotes other measurements such as a minimum (e.g., pH could be in violation if below the permitted level).
   * @return measurementType
   */
  @javax.annotation.Nonnull
  public String getMeasurementType() {
    return measurementType;
  }

  public void setMeasurementType(String measurementType) {
    this.measurementType = measurementType;
  }


  public Dfr035EXPParameters mnth10Value(String mnth10Value) {
    this.mnth10Value = mnth10Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the tenth month. This may be a percent exceedance or a violation start or end date.
   * @return mnth10Value
   */
  @javax.annotation.Nonnull
  public String getMnth10Value() {
    return mnth10Value;
  }

  public void setMnth10Value(String mnth10Value) {
    this.mnth10Value = mnth10Value;
  }


  public Dfr035EXPParameters mnth11Value(String mnth11Value) {
    this.mnth11Value = mnth11Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the eleventh month. This may be a percent exceedance or a violation start or end date.
   * @return mnth11Value
   */
  @javax.annotation.Nonnull
  public String getMnth11Value() {
    return mnth11Value;
  }

  public void setMnth11Value(String mnth11Value) {
    this.mnth11Value = mnth11Value;
  }


  public Dfr035EXPParameters mnth12Value(String mnth12Value) {
    this.mnth12Value = mnth12Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the twelfth month. This may be a percent exceedance or a violation start or end date.
   * @return mnth12Value
   */
  @javax.annotation.Nonnull
  public String getMnth12Value() {
    return mnth12Value;
  }

  public void setMnth12Value(String mnth12Value) {
    this.mnth12Value = mnth12Value;
  }


  public Dfr035EXPParameters mnth13Value(String mnth13Value) {
    this.mnth13Value = mnth13Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the thirteenth month. This may be a percent exceedance or a violation start or end date.
   * @return mnth13Value
   */
  @javax.annotation.Nonnull
  public String getMnth13Value() {
    return mnth13Value;
  }

  public void setMnth13Value(String mnth13Value) {
    this.mnth13Value = mnth13Value;
  }


  public Dfr035EXPParameters mnth14Value(String mnth14Value) {
    this.mnth14Value = mnth14Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the fourteenth month. This may be a percent exceedance or a violation start or end date.
   * @return mnth14Value
   */
  @javax.annotation.Nonnull
  public String getMnth14Value() {
    return mnth14Value;
  }

  public void setMnth14Value(String mnth14Value) {
    this.mnth14Value = mnth14Value;
  }


  public Dfr035EXPParameters mnth15Value(String mnth15Value) {
    this.mnth15Value = mnth15Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the fifteenth month. This may be a percent exceedance or a violation start or end date.
   * @return mnth15Value
   */
  @javax.annotation.Nonnull
  public String getMnth15Value() {
    return mnth15Value;
  }

  public void setMnth15Value(String mnth15Value) {
    this.mnth15Value = mnth15Value;
  }


  public Dfr035EXPParameters mnth16Value(String mnth16Value) {
    this.mnth16Value = mnth16Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the sixteenth month. This may be a percent exceedance or a violation start or end date.
   * @return mnth16Value
   */
  @javax.annotation.Nonnull
  public String getMnth16Value() {
    return mnth16Value;
  }

  public void setMnth16Value(String mnth16Value) {
    this.mnth16Value = mnth16Value;
  }


  public Dfr035EXPParameters mnth17Value(String mnth17Value) {
    this.mnth17Value = mnth17Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the seventeenth month. This may be a percent exceedance or a violation start or end date.
   * @return mnth17Value
   */
  @javax.annotation.Nonnull
  public String getMnth17Value() {
    return mnth17Value;
  }

  public void setMnth17Value(String mnth17Value) {
    this.mnth17Value = mnth17Value;
  }


  public Dfr035EXPParameters mnth18Value(String mnth18Value) {
    this.mnth18Value = mnth18Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the eighteenth month. This may be a percent exceedance or a violation start or end date.
   * @return mnth18Value
   */
  @javax.annotation.Nonnull
  public String getMnth18Value() {
    return mnth18Value;
  }

  public void setMnth18Value(String mnth18Value) {
    this.mnth18Value = mnth18Value;
  }


  public Dfr035EXPParameters mnth19Value(String mnth19Value) {
    this.mnth19Value = mnth19Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the ninteenth month. This may be a percent exceedance or a violation start or end date.
   * @return mnth19Value
   */
  @javax.annotation.Nonnull
  public String getMnth19Value() {
    return mnth19Value;
  }

  public void setMnth19Value(String mnth19Value) {
    this.mnth19Value = mnth19Value;
  }


  public Dfr035EXPParameters mnth1Value(String mnth1Value) {
    this.mnth1Value = mnth1Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the first month. This may be a percent exceedance or a violation start or end date.
   * @return mnth1Value
   */
  @javax.annotation.Nonnull
  public String getMnth1Value() {
    return mnth1Value;
  }

  public void setMnth1Value(String mnth1Value) {
    this.mnth1Value = mnth1Value;
  }


  public Dfr035EXPParameters mnth20Value(String mnth20Value) {
    this.mnth20Value = mnth20Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the twentieth month. This may be a percent exceedance or a violation start or end date.
   * @return mnth20Value
   */
  @javax.annotation.Nonnull
  public String getMnth20Value() {
    return mnth20Value;
  }

  public void setMnth20Value(String mnth20Value) {
    this.mnth20Value = mnth20Value;
  }


  public Dfr035EXPParameters mnth21Value(String mnth21Value) {
    this.mnth21Value = mnth21Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the twenty-first month. This may be a percent exceedance or a violation start or end date.
   * @return mnth21Value
   */
  @javax.annotation.Nonnull
  public String getMnth21Value() {
    return mnth21Value;
  }

  public void setMnth21Value(String mnth21Value) {
    this.mnth21Value = mnth21Value;
  }


  public Dfr035EXPParameters mnth22Value(String mnth22Value) {
    this.mnth22Value = mnth22Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the twenty-second month. This may be a percent exceedance or a violation start or end date.
   * @return mnth22Value
   */
  @javax.annotation.Nonnull
  public String getMnth22Value() {
    return mnth22Value;
  }

  public void setMnth22Value(String mnth22Value) {
    this.mnth22Value = mnth22Value;
  }


  public Dfr035EXPParameters mnth23Value(String mnth23Value) {
    this.mnth23Value = mnth23Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the twenty-third month. This may be a percent exceedance or a violation start or end date.
   * @return mnth23Value
   */
  @javax.annotation.Nonnull
  public String getMnth23Value() {
    return mnth23Value;
  }

  public void setMnth23Value(String mnth23Value) {
    this.mnth23Value = mnth23Value;
  }


  public Dfr035EXPParameters mnth24Value(String mnth24Value) {
    this.mnth24Value = mnth24Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the twenty-fourth month. This may be a percent exceedance or a violation start or end date.
   * @return mnth24Value
   */
  @javax.annotation.Nonnull
  public String getMnth24Value() {
    return mnth24Value;
  }

  public void setMnth24Value(String mnth24Value) {
    this.mnth24Value = mnth24Value;
  }


  public Dfr035EXPParameters mnth25Value(String mnth25Value) {
    this.mnth25Value = mnth25Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the twenty-fifth month. This may be a percent exceedance or a violation start or end date.
   * @return mnth25Value
   */
  @javax.annotation.Nonnull
  public String getMnth25Value() {
    return mnth25Value;
  }

  public void setMnth25Value(String mnth25Value) {
    this.mnth25Value = mnth25Value;
  }


  public Dfr035EXPParameters mnth26Value(String mnth26Value) {
    this.mnth26Value = mnth26Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the twenty-sixth month. This may be a percent exceedance or a violation start or end date.
   * @return mnth26Value
   */
  @javax.annotation.Nonnull
  public String getMnth26Value() {
    return mnth26Value;
  }

  public void setMnth26Value(String mnth26Value) {
    this.mnth26Value = mnth26Value;
  }


  public Dfr035EXPParameters mnth27Value(String mnth27Value) {
    this.mnth27Value = mnth27Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the twenty-seventh month. This may be a percent exceedance or a violation start or end date.
   * @return mnth27Value
   */
  @javax.annotation.Nonnull
  public String getMnth27Value() {
    return mnth27Value;
  }

  public void setMnth27Value(String mnth27Value) {
    this.mnth27Value = mnth27Value;
  }


  public Dfr035EXPParameters mnth28Value(String mnth28Value) {
    this.mnth28Value = mnth28Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the twenty-eighth month. This may be a percent exceedance or a violation start or end date.
   * @return mnth28Value
   */
  @javax.annotation.Nonnull
  public String getMnth28Value() {
    return mnth28Value;
  }

  public void setMnth28Value(String mnth28Value) {
    this.mnth28Value = mnth28Value;
  }


  public Dfr035EXPParameters mnth29Value(String mnth29Value) {
    this.mnth29Value = mnth29Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the twenty-ninth month. This may be a percent exceedance or a violation start or end date.
   * @return mnth29Value
   */
  @javax.annotation.Nonnull
  public String getMnth29Value() {
    return mnth29Value;
  }

  public void setMnth29Value(String mnth29Value) {
    this.mnth29Value = mnth29Value;
  }


  public Dfr035EXPParameters mnth2Value(String mnth2Value) {
    this.mnth2Value = mnth2Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the second month. This may be a percent exceedance or a violation start or end date.
   * @return mnth2Value
   */
  @javax.annotation.Nonnull
  public String getMnth2Value() {
    return mnth2Value;
  }

  public void setMnth2Value(String mnth2Value) {
    this.mnth2Value = mnth2Value;
  }


  public Dfr035EXPParameters mnth30Value(String mnth30Value) {
    this.mnth30Value = mnth30Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the thirtieth month. This may be a percent exceedance or a violation start or end date.
   * @return mnth30Value
   */
  @javax.annotation.Nonnull
  public String getMnth30Value() {
    return mnth30Value;
  }

  public void setMnth30Value(String mnth30Value) {
    this.mnth30Value = mnth30Value;
  }


  public Dfr035EXPParameters mnth31Value(String mnth31Value) {
    this.mnth31Value = mnth31Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the thirty-first month. This may be a percent exceedance or a violation start or end date.
   * @return mnth31Value
   */
  @javax.annotation.Nonnull
  public String getMnth31Value() {
    return mnth31Value;
  }

  public void setMnth31Value(String mnth31Value) {
    this.mnth31Value = mnth31Value;
  }


  public Dfr035EXPParameters mnth32Value(String mnth32Value) {
    this.mnth32Value = mnth32Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the thirty-second month. This may be a percent exceedance or a violation start or end date.
   * @return mnth32Value
   */
  @javax.annotation.Nonnull
  public String getMnth32Value() {
    return mnth32Value;
  }

  public void setMnth32Value(String mnth32Value) {
    this.mnth32Value = mnth32Value;
  }


  public Dfr035EXPParameters mnth33Value(String mnth33Value) {
    this.mnth33Value = mnth33Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the thirty-third month. This may be a percent exceedance or a violation start or end date.
   * @return mnth33Value
   */
  @javax.annotation.Nonnull
  public String getMnth33Value() {
    return mnth33Value;
  }

  public void setMnth33Value(String mnth33Value) {
    this.mnth33Value = mnth33Value;
  }


  public Dfr035EXPParameters mnth34Value(String mnth34Value) {
    this.mnth34Value = mnth34Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the thirty-fourth month. This may be a percent exceedance or a violation start or end date.
   * @return mnth34Value
   */
  @javax.annotation.Nonnull
  public String getMnth34Value() {
    return mnth34Value;
  }

  public void setMnth34Value(String mnth34Value) {
    this.mnth34Value = mnth34Value;
  }


  public Dfr035EXPParameters mnth35Value(String mnth35Value) {
    this.mnth35Value = mnth35Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the thirty-fifth month. This may be a percent exceedance or a violation start or end date.
   * @return mnth35Value
   */
  @javax.annotation.Nonnull
  public String getMnth35Value() {
    return mnth35Value;
  }

  public void setMnth35Value(String mnth35Value) {
    this.mnth35Value = mnth35Value;
  }


  public Dfr035EXPParameters mnth36Value(String mnth36Value) {
    this.mnth36Value = mnth36Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the thirty-sixth month. This may be a percent exceedance or a violation start or end date.
   * @return mnth36Value
   */
  @javax.annotation.Nonnull
  public String getMnth36Value() {
    return mnth36Value;
  }

  public void setMnth36Value(String mnth36Value) {
    this.mnth36Value = mnth36Value;
  }


  public Dfr035EXPParameters mnth37Value(String mnth37Value) {
    this.mnth37Value = mnth37Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the thirty-seventh month. This may be a percent exceedance or a violation start or end date.
   * @return mnth37Value
   */
  @javax.annotation.Nonnull
  public String getMnth37Value() {
    return mnth37Value;
  }

  public void setMnth37Value(String mnth37Value) {
    this.mnth37Value = mnth37Value;
  }


  public Dfr035EXPParameters mnth38Value(String mnth38Value) {
    this.mnth38Value = mnth38Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the thirty-eighth month. This may be a percent exceedance or a violation start or end date.
   * @return mnth38Value
   */
  @javax.annotation.Nonnull
  public String getMnth38Value() {
    return mnth38Value;
  }

  public void setMnth38Value(String mnth38Value) {
    this.mnth38Value = mnth38Value;
  }


  public Dfr035EXPParameters mnth39Value(String mnth39Value) {
    this.mnth39Value = mnth39Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the thirty-ninth month. This may be a percent exceedance or a violation start or end date.
   * @return mnth39Value
   */
  @javax.annotation.Nonnull
  public String getMnth39Value() {
    return mnth39Value;
  }

  public void setMnth39Value(String mnth39Value) {
    this.mnth39Value = mnth39Value;
  }


  public Dfr035EXPParameters mnth3Value(String mnth3Value) {
    this.mnth3Value = mnth3Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the third month. This may be a percent exceedance or a violation start or end date.
   * @return mnth3Value
   */
  @javax.annotation.Nonnull
  public String getMnth3Value() {
    return mnth3Value;
  }

  public void setMnth3Value(String mnth3Value) {
    this.mnth3Value = mnth3Value;
  }


  public Dfr035EXPParameters mnth4Value(String mnth4Value) {
    this.mnth4Value = mnth4Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the fourth month. This may be a percent exceedance or a violation start or end date.
   * @return mnth4Value
   */
  @javax.annotation.Nonnull
  public String getMnth4Value() {
    return mnth4Value;
  }

  public void setMnth4Value(String mnth4Value) {
    this.mnth4Value = mnth4Value;
  }


  public Dfr035EXPParameters mnth5Value(String mnth5Value) {
    this.mnth5Value = mnth5Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the fifth month. This may be a percent exceedance or a violation start or end date.
   * @return mnth5Value
   */
  @javax.annotation.Nonnull
  public String getMnth5Value() {
    return mnth5Value;
  }

  public void setMnth5Value(String mnth5Value) {
    this.mnth5Value = mnth5Value;
  }


  public Dfr035EXPParameters mnth6Value(String mnth6Value) {
    this.mnth6Value = mnth6Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the sixth month. This may be a percent exceedance or a violation start or end date.
   * @return mnth6Value
   */
  @javax.annotation.Nonnull
  public String getMnth6Value() {
    return mnth6Value;
  }

  public void setMnth6Value(String mnth6Value) {
    this.mnth6Value = mnth6Value;
  }


  public Dfr035EXPParameters mnth7Value(String mnth7Value) {
    this.mnth7Value = mnth7Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the seventh month. This may be a percent exceedance or a violation start or end date.
   * @return mnth7Value
   */
  @javax.annotation.Nonnull
  public String getMnth7Value() {
    return mnth7Value;
  }

  public void setMnth7Value(String mnth7Value) {
    this.mnth7Value = mnth7Value;
  }


  public Dfr035EXPParameters mnth8Value(String mnth8Value) {
    this.mnth8Value = mnth8Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the eighth month. This may be a percent exceedance or a violation start or end date.
   * @return mnth8Value
   */
  @javax.annotation.Nonnull
  public String getMnth8Value() {
    return mnth8Value;
  }

  public void setMnth8Value(String mnth8Value) {
    this.mnth8Value = mnth8Value;
  }


  public Dfr035EXPParameters mnth9Value(String mnth9Value) {
    this.mnth9Value = mnth9Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the ninth month. This may be a percent exceedance or a violation start or end date.
   * @return mnth9Value
   */
  @javax.annotation.Nonnull
  public String getMnth9Value() {
    return mnth9Value;
  }

  public void setMnth9Value(String mnth9Value) {
    this.mnth9Value = mnth9Value;
  }


  public Dfr035EXPParameters monitoringLocation(String monitoringLocation) {
    this.monitoringLocation = monitoringLocation;
    return this;
  }

  /**
   * Get monitoringLocation
   * @return monitoringLocation
   */
  @javax.annotation.Nonnull
  public String getMonitoringLocation() {
    return monitoringLocation;
  }

  public void setMonitoringLocation(String monitoringLocation) {
    this.monitoringLocation = monitoringLocation;
  }


  public Dfr035EXPParameters parameterCode(String parameterCode) {
    this.parameterCode = parameterCode;
    return this;
  }

  /**
   * The unique 5 digit numeric code identifying the parameter. If the code is less than 5 digits in the .CSV, append zeros to the beginning of the number (e.g., 100 is equivalent to 00100)
   * @return parameterCode
   */
  @javax.annotation.Nonnull
  public String getParameterCode() {
    return parameterCode;
  }

  public void setParameterCode(String parameterCode) {
    this.parameterCode = parameterCode;
  }


  public Dfr035EXPParameters parameterName(String parameterName) {
    this.parameterName = parameterName;
    return this;
  }

  /**
   * The pollutant name.
   * @return parameterName
   */
  @javax.annotation.Nonnull
  public String getParameterName() {
    return parameterName;
  }

  public void setParameterName(String parameterName) {
    this.parameterName = parameterName;
  }


  public Dfr035EXPParameters qtr10Value(String qtr10Value) {
    this.qtr10Value = qtr10Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the tenth quarter. This may be a percent exceedance or a violation start or end date.
   * @return qtr10Value
   */
  @javax.annotation.Nonnull
  public String getQtr10Value() {
    return qtr10Value;
  }

  public void setQtr10Value(String qtr10Value) {
    this.qtr10Value = qtr10Value;
  }


  public Dfr035EXPParameters qtr11Value(String qtr11Value) {
    this.qtr11Value = qtr11Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the eleventh quarter. This may be a percent exceedance or a violation start or end date.
   * @return qtr11Value
   */
  @javax.annotation.Nonnull
  public String getQtr11Value() {
    return qtr11Value;
  }

  public void setQtr11Value(String qtr11Value) {
    this.qtr11Value = qtr11Value;
  }


  public Dfr035EXPParameters qtr12Value(String qtr12Value) {
    this.qtr12Value = qtr12Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the twelfth quarter. This may be a percent exceedance or a violation start or end date.
   * @return qtr12Value
   */
  @javax.annotation.Nonnull
  public String getQtr12Value() {
    return qtr12Value;
  }

  public void setQtr12Value(String qtr12Value) {
    this.qtr12Value = qtr12Value;
  }


  public Dfr035EXPParameters qtr13Value(String qtr13Value) {
    this.qtr13Value = qtr13Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the thirteenth quarter. This may be a percent exceedance or a violation start or end date.
   * @return qtr13Value
   */
  @javax.annotation.Nonnull
  public String getQtr13Value() {
    return qtr13Value;
  }

  public void setQtr13Value(String qtr13Value) {
    this.qtr13Value = qtr13Value;
  }


  public Dfr035EXPParameters qtr1Value(String qtr1Value) {
    this.qtr1Value = qtr1Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the first quarter. This may be a percent exceedance or a violation start or end date.
   * @return qtr1Value
   */
  @javax.annotation.Nonnull
  public String getQtr1Value() {
    return qtr1Value;
  }

  public void setQtr1Value(String qtr1Value) {
    this.qtr1Value = qtr1Value;
  }


  public Dfr035EXPParameters qtr2Value(String qtr2Value) {
    this.qtr2Value = qtr2Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the second quarter. This may be a percent exceedance or a violation start or end date.
   * @return qtr2Value
   */
  @javax.annotation.Nonnull
  public String getQtr2Value() {
    return qtr2Value;
  }

  public void setQtr2Value(String qtr2Value) {
    this.qtr2Value = qtr2Value;
  }


  public Dfr035EXPParameters qtr3Value(String qtr3Value) {
    this.qtr3Value = qtr3Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the third quarter. This may be a percent exceedance or a violation start or end date.
   * @return qtr3Value
   */
  @javax.annotation.Nonnull
  public String getQtr3Value() {
    return qtr3Value;
  }

  public void setQtr3Value(String qtr3Value) {
    this.qtr3Value = qtr3Value;
  }


  public Dfr035EXPParameters qtr4Value(String qtr4Value) {
    this.qtr4Value = qtr4Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the fourth quarter. This may be a percent exceedance or a violation start or end date.
   * @return qtr4Value
   */
  @javax.annotation.Nonnull
  public String getQtr4Value() {
    return qtr4Value;
  }

  public void setQtr4Value(String qtr4Value) {
    this.qtr4Value = qtr4Value;
  }


  public Dfr035EXPParameters qtr5Value(String qtr5Value) {
    this.qtr5Value = qtr5Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the fifth quarter. This may be a percent exceedance or a violation start or end date.
   * @return qtr5Value
   */
  @javax.annotation.Nonnull
  public String getQtr5Value() {
    return qtr5Value;
  }

  public void setQtr5Value(String qtr5Value) {
    this.qtr5Value = qtr5Value;
  }


  public Dfr035EXPParameters qtr6Value(String qtr6Value) {
    this.qtr6Value = qtr6Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the sixth quarter. This may be a percent exceedance or a violation start or end date.
   * @return qtr6Value
   */
  @javax.annotation.Nonnull
  public String getQtr6Value() {
    return qtr6Value;
  }

  public void setQtr6Value(String qtr6Value) {
    this.qtr6Value = qtr6Value;
  }


  public Dfr035EXPParameters qtr7Value(String qtr7Value) {
    this.qtr7Value = qtr7Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the seventh quarter. This may be a percent exceedance or a violation start or end date.
   * @return qtr7Value
   */
  @javax.annotation.Nonnull
  public String getQtr7Value() {
    return qtr7Value;
  }

  public void setQtr7Value(String qtr7Value) {
    this.qtr7Value = qtr7Value;
  }


  public Dfr035EXPParameters qtr8Value(String qtr8Value) {
    this.qtr8Value = qtr8Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the eighth quarter. This may be a percent exceedance or a violation start or end date.
   * @return qtr8Value
   */
  @javax.annotation.Nonnull
  public String getQtr8Value() {
    return qtr8Value;
  }

  public void setQtr8Value(String qtr8Value) {
    this.qtr8Value = qtr8Value;
  }


  public Dfr035EXPParameters qtr9Value(String qtr9Value) {
    this.qtr9Value = qtr9Value;
    return this;
  }

  /**
   * The value associated with the noncompliance in the ninth quarter. This may be a percent exceedance or a violation start or end date.
   * @return qtr9Value
   */
  @javax.annotation.Nonnull
  public String getQtr9Value() {
    return qtr9Value;
  }

  public void setQtr9Value(String qtr9Value) {
    this.qtr9Value = qtr9Value;
  }


  public Dfr035EXPParameters sourceID(String sourceID) {
    this.sourceID = sourceID;
    return this;
  }

  /**
   * Unique Identifier assigned by EPA.
   * @return sourceID
   */
  @javax.annotation.Nonnull
  public String getSourceID() {
    return sourceID;
  }

  public void setSourceID(String sourceID) {
    this.sourceID = sourceID;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Dfr035EXPParameters dfr035EXPParameters = (Dfr035EXPParameters) o;
    return Objects.equals(this.dischargePoint, dfr035EXPParameters.dischargePoint) &&
        Objects.equals(this.measurementType, dfr035EXPParameters.measurementType) &&
        Objects.equals(this.mnth10Value, dfr035EXPParameters.mnth10Value) &&
        Objects.equals(this.mnth11Value, dfr035EXPParameters.mnth11Value) &&
        Objects.equals(this.mnth12Value, dfr035EXPParameters.mnth12Value) &&
        Objects.equals(this.mnth13Value, dfr035EXPParameters.mnth13Value) &&
        Objects.equals(this.mnth14Value, dfr035EXPParameters.mnth14Value) &&
        Objects.equals(this.mnth15Value, dfr035EXPParameters.mnth15Value) &&
        Objects.equals(this.mnth16Value, dfr035EXPParameters.mnth16Value) &&
        Objects.equals(this.mnth17Value, dfr035EXPParameters.mnth17Value) &&
        Objects.equals(this.mnth18Value, dfr035EXPParameters.mnth18Value) &&
        Objects.equals(this.mnth19Value, dfr035EXPParameters.mnth19Value) &&
        Objects.equals(this.mnth1Value, dfr035EXPParameters.mnth1Value) &&
        Objects.equals(this.mnth20Value, dfr035EXPParameters.mnth20Value) &&
        Objects.equals(this.mnth21Value, dfr035EXPParameters.mnth21Value) &&
        Objects.equals(this.mnth22Value, dfr035EXPParameters.mnth22Value) &&
        Objects.equals(this.mnth23Value, dfr035EXPParameters.mnth23Value) &&
        Objects.equals(this.mnth24Value, dfr035EXPParameters.mnth24Value) &&
        Objects.equals(this.mnth25Value, dfr035EXPParameters.mnth25Value) &&
        Objects.equals(this.mnth26Value, dfr035EXPParameters.mnth26Value) &&
        Objects.equals(this.mnth27Value, dfr035EXPParameters.mnth27Value) &&
        Objects.equals(this.mnth28Value, dfr035EXPParameters.mnth28Value) &&
        Objects.equals(this.mnth29Value, dfr035EXPParameters.mnth29Value) &&
        Objects.equals(this.mnth2Value, dfr035EXPParameters.mnth2Value) &&
        Objects.equals(this.mnth30Value, dfr035EXPParameters.mnth30Value) &&
        Objects.equals(this.mnth31Value, dfr035EXPParameters.mnth31Value) &&
        Objects.equals(this.mnth32Value, dfr035EXPParameters.mnth32Value) &&
        Objects.equals(this.mnth33Value, dfr035EXPParameters.mnth33Value) &&
        Objects.equals(this.mnth34Value, dfr035EXPParameters.mnth34Value) &&
        Objects.equals(this.mnth35Value, dfr035EXPParameters.mnth35Value) &&
        Objects.equals(this.mnth36Value, dfr035EXPParameters.mnth36Value) &&
        Objects.equals(this.mnth37Value, dfr035EXPParameters.mnth37Value) &&
        Objects.equals(this.mnth38Value, dfr035EXPParameters.mnth38Value) &&
        Objects.equals(this.mnth39Value, dfr035EXPParameters.mnth39Value) &&
        Objects.equals(this.mnth3Value, dfr035EXPParameters.mnth3Value) &&
        Objects.equals(this.mnth4Value, dfr035EXPParameters.mnth4Value) &&
        Objects.equals(this.mnth5Value, dfr035EXPParameters.mnth5Value) &&
        Objects.equals(this.mnth6Value, dfr035EXPParameters.mnth6Value) &&
        Objects.equals(this.mnth7Value, dfr035EXPParameters.mnth7Value) &&
        Objects.equals(this.mnth8Value, dfr035EXPParameters.mnth8Value) &&
        Objects.equals(this.mnth9Value, dfr035EXPParameters.mnth9Value) &&
        Objects.equals(this.monitoringLocation, dfr035EXPParameters.monitoringLocation) &&
        Objects.equals(this.parameterCode, dfr035EXPParameters.parameterCode) &&
        Objects.equals(this.parameterName, dfr035EXPParameters.parameterName) &&
        Objects.equals(this.qtr10Value, dfr035EXPParameters.qtr10Value) &&
        Objects.equals(this.qtr11Value, dfr035EXPParameters.qtr11Value) &&
        Objects.equals(this.qtr12Value, dfr035EXPParameters.qtr12Value) &&
        Objects.equals(this.qtr13Value, dfr035EXPParameters.qtr13Value) &&
        Objects.equals(this.qtr1Value, dfr035EXPParameters.qtr1Value) &&
        Objects.equals(this.qtr2Value, dfr035EXPParameters.qtr2Value) &&
        Objects.equals(this.qtr3Value, dfr035EXPParameters.qtr3Value) &&
        Objects.equals(this.qtr4Value, dfr035EXPParameters.qtr4Value) &&
        Objects.equals(this.qtr5Value, dfr035EXPParameters.qtr5Value) &&
        Objects.equals(this.qtr6Value, dfr035EXPParameters.qtr6Value) &&
        Objects.equals(this.qtr7Value, dfr035EXPParameters.qtr7Value) &&
        Objects.equals(this.qtr8Value, dfr035EXPParameters.qtr8Value) &&
        Objects.equals(this.qtr9Value, dfr035EXPParameters.qtr9Value) &&
        Objects.equals(this.sourceID, dfr035EXPParameters.sourceID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dischargePoint, measurementType, mnth10Value, mnth11Value, mnth12Value, mnth13Value, mnth14Value, mnth15Value, mnth16Value, mnth17Value, mnth18Value, mnth19Value, mnth1Value, mnth20Value, mnth21Value, mnth22Value, mnth23Value, mnth24Value, mnth25Value, mnth26Value, mnth27Value, mnth28Value, mnth29Value, mnth2Value, mnth30Value, mnth31Value, mnth32Value, mnth33Value, mnth34Value, mnth35Value, mnth36Value, mnth37Value, mnth38Value, mnth39Value, mnth3Value, mnth4Value, mnth5Value, mnth6Value, mnth7Value, mnth8Value, mnth9Value, monitoringLocation, parameterCode, parameterName, qtr10Value, qtr11Value, qtr12Value, qtr13Value, qtr1Value, qtr2Value, qtr3Value, qtr4Value, qtr5Value, qtr6Value, qtr7Value, qtr8Value, qtr9Value, sourceID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Dfr035EXPParameters {\n");
    sb.append("    dischargePoint: ").append(toIndentedString(dischargePoint)).append("\n");
    sb.append("    measurementType: ").append(toIndentedString(measurementType)).append("\n");
    sb.append("    mnth10Value: ").append(toIndentedString(mnth10Value)).append("\n");
    sb.append("    mnth11Value: ").append(toIndentedString(mnth11Value)).append("\n");
    sb.append("    mnth12Value: ").append(toIndentedString(mnth12Value)).append("\n");
    sb.append("    mnth13Value: ").append(toIndentedString(mnth13Value)).append("\n");
    sb.append("    mnth14Value: ").append(toIndentedString(mnth14Value)).append("\n");
    sb.append("    mnth15Value: ").append(toIndentedString(mnth15Value)).append("\n");
    sb.append("    mnth16Value: ").append(toIndentedString(mnth16Value)).append("\n");
    sb.append("    mnth17Value: ").append(toIndentedString(mnth17Value)).append("\n");
    sb.append("    mnth18Value: ").append(toIndentedString(mnth18Value)).append("\n");
    sb.append("    mnth19Value: ").append(toIndentedString(mnth19Value)).append("\n");
    sb.append("    mnth1Value: ").append(toIndentedString(mnth1Value)).append("\n");
    sb.append("    mnth20Value: ").append(toIndentedString(mnth20Value)).append("\n");
    sb.append("    mnth21Value: ").append(toIndentedString(mnth21Value)).append("\n");
    sb.append("    mnth22Value: ").append(toIndentedString(mnth22Value)).append("\n");
    sb.append("    mnth23Value: ").append(toIndentedString(mnth23Value)).append("\n");
    sb.append("    mnth24Value: ").append(toIndentedString(mnth24Value)).append("\n");
    sb.append("    mnth25Value: ").append(toIndentedString(mnth25Value)).append("\n");
    sb.append("    mnth26Value: ").append(toIndentedString(mnth26Value)).append("\n");
    sb.append("    mnth27Value: ").append(toIndentedString(mnth27Value)).append("\n");
    sb.append("    mnth28Value: ").append(toIndentedString(mnth28Value)).append("\n");
    sb.append("    mnth29Value: ").append(toIndentedString(mnth29Value)).append("\n");
    sb.append("    mnth2Value: ").append(toIndentedString(mnth2Value)).append("\n");
    sb.append("    mnth30Value: ").append(toIndentedString(mnth30Value)).append("\n");
    sb.append("    mnth31Value: ").append(toIndentedString(mnth31Value)).append("\n");
    sb.append("    mnth32Value: ").append(toIndentedString(mnth32Value)).append("\n");
    sb.append("    mnth33Value: ").append(toIndentedString(mnth33Value)).append("\n");
    sb.append("    mnth34Value: ").append(toIndentedString(mnth34Value)).append("\n");
    sb.append("    mnth35Value: ").append(toIndentedString(mnth35Value)).append("\n");
    sb.append("    mnth36Value: ").append(toIndentedString(mnth36Value)).append("\n");
    sb.append("    mnth37Value: ").append(toIndentedString(mnth37Value)).append("\n");
    sb.append("    mnth38Value: ").append(toIndentedString(mnth38Value)).append("\n");
    sb.append("    mnth39Value: ").append(toIndentedString(mnth39Value)).append("\n");
    sb.append("    mnth3Value: ").append(toIndentedString(mnth3Value)).append("\n");
    sb.append("    mnth4Value: ").append(toIndentedString(mnth4Value)).append("\n");
    sb.append("    mnth5Value: ").append(toIndentedString(mnth5Value)).append("\n");
    sb.append("    mnth6Value: ").append(toIndentedString(mnth6Value)).append("\n");
    sb.append("    mnth7Value: ").append(toIndentedString(mnth7Value)).append("\n");
    sb.append("    mnth8Value: ").append(toIndentedString(mnth8Value)).append("\n");
    sb.append("    mnth9Value: ").append(toIndentedString(mnth9Value)).append("\n");
    sb.append("    monitoringLocation: ").append(toIndentedString(monitoringLocation)).append("\n");
    sb.append("    parameterCode: ").append(toIndentedString(parameterCode)).append("\n");
    sb.append("    parameterName: ").append(toIndentedString(parameterName)).append("\n");
    sb.append("    qtr10Value: ").append(toIndentedString(qtr10Value)).append("\n");
    sb.append("    qtr11Value: ").append(toIndentedString(qtr11Value)).append("\n");
    sb.append("    qtr12Value: ").append(toIndentedString(qtr12Value)).append("\n");
    sb.append("    qtr13Value: ").append(toIndentedString(qtr13Value)).append("\n");
    sb.append("    qtr1Value: ").append(toIndentedString(qtr1Value)).append("\n");
    sb.append("    qtr2Value: ").append(toIndentedString(qtr2Value)).append("\n");
    sb.append("    qtr3Value: ").append(toIndentedString(qtr3Value)).append("\n");
    sb.append("    qtr4Value: ").append(toIndentedString(qtr4Value)).append("\n");
    sb.append("    qtr5Value: ").append(toIndentedString(qtr5Value)).append("\n");
    sb.append("    qtr6Value: ").append(toIndentedString(qtr6Value)).append("\n");
    sb.append("    qtr7Value: ").append(toIndentedString(qtr7Value)).append("\n");
    sb.append("    qtr8Value: ").append(toIndentedString(qtr8Value)).append("\n");
    sb.append("    qtr9Value: ").append(toIndentedString(qtr9Value)).append("\n");
    sb.append("    sourceID: ").append(toIndentedString(sourceID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DischargePoint");
    openapiFields.add("MeasurementType");
    openapiFields.add("Mnth10Value");
    openapiFields.add("Mnth11Value");
    openapiFields.add("Mnth12Value");
    openapiFields.add("Mnth13Value");
    openapiFields.add("Mnth14Value");
    openapiFields.add("Mnth15Value");
    openapiFields.add("Mnth16Value");
    openapiFields.add("Mnth17Value");
    openapiFields.add("Mnth18Value");
    openapiFields.add("Mnth19Value");
    openapiFields.add("Mnth1Value");
    openapiFields.add("Mnth20Value");
    openapiFields.add("Mnth21Value");
    openapiFields.add("Mnth22Value");
    openapiFields.add("Mnth23Value");
    openapiFields.add("Mnth24Value");
    openapiFields.add("Mnth25Value");
    openapiFields.add("Mnth26Value");
    openapiFields.add("Mnth27Value");
    openapiFields.add("Mnth28Value");
    openapiFields.add("Mnth29Value");
    openapiFields.add("Mnth2Value");
    openapiFields.add("Mnth30Value");
    openapiFields.add("Mnth31Value");
    openapiFields.add("Mnth32Value");
    openapiFields.add("Mnth33Value");
    openapiFields.add("Mnth34Value");
    openapiFields.add("Mnth35Value");
    openapiFields.add("Mnth36Value");
    openapiFields.add("Mnth37Value");
    openapiFields.add("Mnth38Value");
    openapiFields.add("Mnth39Value");
    openapiFields.add("Mnth3Value");
    openapiFields.add("Mnth4Value");
    openapiFields.add("Mnth5Value");
    openapiFields.add("Mnth6Value");
    openapiFields.add("Mnth7Value");
    openapiFields.add("Mnth8Value");
    openapiFields.add("Mnth9Value");
    openapiFields.add("MonitoringLocation");
    openapiFields.add("ParameterCode");
    openapiFields.add("ParameterName");
    openapiFields.add("Qtr10Value");
    openapiFields.add("Qtr11Value");
    openapiFields.add("Qtr12Value");
    openapiFields.add("Qtr13Value");
    openapiFields.add("Qtr1Value");
    openapiFields.add("Qtr2Value");
    openapiFields.add("Qtr3Value");
    openapiFields.add("Qtr4Value");
    openapiFields.add("Qtr5Value");
    openapiFields.add("Qtr6Value");
    openapiFields.add("Qtr7Value");
    openapiFields.add("Qtr8Value");
    openapiFields.add("Qtr9Value");
    openapiFields.add("SourceID");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("DischargePoint");
    openapiRequiredFields.add("MeasurementType");
    openapiRequiredFields.add("Mnth10Value");
    openapiRequiredFields.add("Mnth11Value");
    openapiRequiredFields.add("Mnth12Value");
    openapiRequiredFields.add("Mnth13Value");
    openapiRequiredFields.add("Mnth14Value");
    openapiRequiredFields.add("Mnth15Value");
    openapiRequiredFields.add("Mnth16Value");
    openapiRequiredFields.add("Mnth17Value");
    openapiRequiredFields.add("Mnth18Value");
    openapiRequiredFields.add("Mnth19Value");
    openapiRequiredFields.add("Mnth1Value");
    openapiRequiredFields.add("Mnth20Value");
    openapiRequiredFields.add("Mnth21Value");
    openapiRequiredFields.add("Mnth22Value");
    openapiRequiredFields.add("Mnth23Value");
    openapiRequiredFields.add("Mnth24Value");
    openapiRequiredFields.add("Mnth25Value");
    openapiRequiredFields.add("Mnth26Value");
    openapiRequiredFields.add("Mnth27Value");
    openapiRequiredFields.add("Mnth28Value");
    openapiRequiredFields.add("Mnth29Value");
    openapiRequiredFields.add("Mnth2Value");
    openapiRequiredFields.add("Mnth30Value");
    openapiRequiredFields.add("Mnth31Value");
    openapiRequiredFields.add("Mnth32Value");
    openapiRequiredFields.add("Mnth33Value");
    openapiRequiredFields.add("Mnth34Value");
    openapiRequiredFields.add("Mnth35Value");
    openapiRequiredFields.add("Mnth36Value");
    openapiRequiredFields.add("Mnth37Value");
    openapiRequiredFields.add("Mnth38Value");
    openapiRequiredFields.add("Mnth39Value");
    openapiRequiredFields.add("Mnth3Value");
    openapiRequiredFields.add("Mnth4Value");
    openapiRequiredFields.add("Mnth5Value");
    openapiRequiredFields.add("Mnth6Value");
    openapiRequiredFields.add("Mnth7Value");
    openapiRequiredFields.add("Mnth8Value");
    openapiRequiredFields.add("Mnth9Value");
    openapiRequiredFields.add("MonitoringLocation");
    openapiRequiredFields.add("ParameterCode");
    openapiRequiredFields.add("ParameterName");
    openapiRequiredFields.add("Qtr10Value");
    openapiRequiredFields.add("Qtr11Value");
    openapiRequiredFields.add("Qtr12Value");
    openapiRequiredFields.add("Qtr13Value");
    openapiRequiredFields.add("Qtr1Value");
    openapiRequiredFields.add("Qtr2Value");
    openapiRequiredFields.add("Qtr3Value");
    openapiRequiredFields.add("Qtr4Value");
    openapiRequiredFields.add("Qtr5Value");
    openapiRequiredFields.add("Qtr6Value");
    openapiRequiredFields.add("Qtr7Value");
    openapiRequiredFields.add("Qtr8Value");
    openapiRequiredFields.add("Qtr9Value");
    openapiRequiredFields.add("SourceID");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Dfr035EXPParameters
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Dfr035EXPParameters.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Dfr035EXPParameters is not found in the empty JSON string", Dfr035EXPParameters.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Dfr035EXPParameters.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Dfr035EXPParameters` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Dfr035EXPParameters.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("DischargePoint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DischargePoint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DischargePoint").toString()));
      }
      if (!jsonObj.get("MeasurementType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MeasurementType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MeasurementType").toString()));
      }
      if (!jsonObj.get("Mnth10Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth10Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth10Value").toString()));
      }
      if (!jsonObj.get("Mnth11Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth11Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth11Value").toString()));
      }
      if (!jsonObj.get("Mnth12Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth12Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth12Value").toString()));
      }
      if (!jsonObj.get("Mnth13Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth13Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth13Value").toString()));
      }
      if (!jsonObj.get("Mnth14Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth14Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth14Value").toString()));
      }
      if (!jsonObj.get("Mnth15Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth15Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth15Value").toString()));
      }
      if (!jsonObj.get("Mnth16Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth16Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth16Value").toString()));
      }
      if (!jsonObj.get("Mnth17Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth17Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth17Value").toString()));
      }
      if (!jsonObj.get("Mnth18Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth18Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth18Value").toString()));
      }
      if (!jsonObj.get("Mnth19Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth19Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth19Value").toString()));
      }
      if (!jsonObj.get("Mnth1Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth1Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth1Value").toString()));
      }
      if (!jsonObj.get("Mnth20Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth20Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth20Value").toString()));
      }
      if (!jsonObj.get("Mnth21Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth21Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth21Value").toString()));
      }
      if (!jsonObj.get("Mnth22Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth22Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth22Value").toString()));
      }
      if (!jsonObj.get("Mnth23Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth23Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth23Value").toString()));
      }
      if (!jsonObj.get("Mnth24Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth24Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth24Value").toString()));
      }
      if (!jsonObj.get("Mnth25Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth25Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth25Value").toString()));
      }
      if (!jsonObj.get("Mnth26Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth26Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth26Value").toString()));
      }
      if (!jsonObj.get("Mnth27Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth27Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth27Value").toString()));
      }
      if (!jsonObj.get("Mnth28Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth28Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth28Value").toString()));
      }
      if (!jsonObj.get("Mnth29Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth29Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth29Value").toString()));
      }
      if (!jsonObj.get("Mnth2Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth2Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth2Value").toString()));
      }
      if (!jsonObj.get("Mnth30Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth30Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth30Value").toString()));
      }
      if (!jsonObj.get("Mnth31Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth31Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth31Value").toString()));
      }
      if (!jsonObj.get("Mnth32Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth32Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth32Value").toString()));
      }
      if (!jsonObj.get("Mnth33Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth33Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth33Value").toString()));
      }
      if (!jsonObj.get("Mnth34Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth34Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth34Value").toString()));
      }
      if (!jsonObj.get("Mnth35Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth35Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth35Value").toString()));
      }
      if (!jsonObj.get("Mnth36Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth36Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth36Value").toString()));
      }
      if (!jsonObj.get("Mnth37Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth37Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth37Value").toString()));
      }
      if (!jsonObj.get("Mnth38Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth38Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth38Value").toString()));
      }
      if (!jsonObj.get("Mnth39Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth39Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth39Value").toString()));
      }
      if (!jsonObj.get("Mnth3Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth3Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth3Value").toString()));
      }
      if (!jsonObj.get("Mnth4Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth4Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth4Value").toString()));
      }
      if (!jsonObj.get("Mnth5Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth5Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth5Value").toString()));
      }
      if (!jsonObj.get("Mnth6Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth6Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth6Value").toString()));
      }
      if (!jsonObj.get("Mnth7Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth7Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth7Value").toString()));
      }
      if (!jsonObj.get("Mnth8Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth8Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth8Value").toString()));
      }
      if (!jsonObj.get("Mnth9Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mnth9Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mnth9Value").toString()));
      }
      if (!jsonObj.get("MonitoringLocation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MonitoringLocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MonitoringLocation").toString()));
      }
      if (!jsonObj.get("ParameterCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ParameterCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ParameterCode").toString()));
      }
      if (!jsonObj.get("ParameterName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ParameterName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ParameterName").toString()));
      }
      if (!jsonObj.get("Qtr10Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Qtr10Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Qtr10Value").toString()));
      }
      if (!jsonObj.get("Qtr11Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Qtr11Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Qtr11Value").toString()));
      }
      if (!jsonObj.get("Qtr12Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Qtr12Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Qtr12Value").toString()));
      }
      if (!jsonObj.get("Qtr13Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Qtr13Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Qtr13Value").toString()));
      }
      if (!jsonObj.get("Qtr1Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Qtr1Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Qtr1Value").toString()));
      }
      if (!jsonObj.get("Qtr2Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Qtr2Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Qtr2Value").toString()));
      }
      if (!jsonObj.get("Qtr3Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Qtr3Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Qtr3Value").toString()));
      }
      if (!jsonObj.get("Qtr4Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Qtr4Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Qtr4Value").toString()));
      }
      if (!jsonObj.get("Qtr5Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Qtr5Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Qtr5Value").toString()));
      }
      if (!jsonObj.get("Qtr6Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Qtr6Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Qtr6Value").toString()));
      }
      if (!jsonObj.get("Qtr7Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Qtr7Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Qtr7Value").toString()));
      }
      if (!jsonObj.get("Qtr8Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Qtr8Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Qtr8Value").toString()));
      }
      if (!jsonObj.get("Qtr9Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Qtr9Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Qtr9Value").toString()));
      }
      if (!jsonObj.get("SourceID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SourceID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SourceID").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Dfr035EXPParameters.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Dfr035EXPParameters' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Dfr035EXPParameters> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Dfr035EXPParameters.class));

       return (TypeAdapter<T>) new TypeAdapter<Dfr035EXPParameters>() {
           @Override
           public void write(JsonWriter out, Dfr035EXPParameters value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Dfr035EXPParameters read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Dfr035EXPParameters given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Dfr035EXPParameters
   * @throws IOException if the JSON string is invalid with respect to Dfr035EXPParameters
   */
  public static Dfr035EXPParameters fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Dfr035EXPParameters.class);
  }

  /**
   * Convert an instance of Dfr035EXPParameters to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

