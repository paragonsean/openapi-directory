/*
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Dfr018ProgramDates;
import org.openapitools.client.model.Dfr065;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Formal Actions Object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:30:18.338738-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Dfr064 {
  public static final String SERIALIZED_NAME_ACTION = "Action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private List<Dfr065> action = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROGRAM_DATES = "ProgramDates";
  @SerializedName(SERIALIZED_NAME_PROGRAM_DATES)
  private List<Dfr018ProgramDates> programDates = new ArrayList<>();

  public Dfr064() {
  }

  public Dfr064 action(List<Dfr065> action) {
    this.action = action;
    return this;
  }

  public Dfr064 addActionItem(Dfr065 actionItem) {
    if (this.action == null) {
      this.action = new ArrayList<>();
    }
    this.action.add(actionItem);
    return this;
  }

  /**
   * Get action
   * @return action
   */
  @javax.annotation.Nullable
  public List<Dfr065> getAction() {
    return action;
  }

  public void setAction(List<Dfr065> action) {
    this.action = action;
  }


  public Dfr064 programDates(List<Dfr018ProgramDates> programDates) {
    this.programDates = programDates;
    return this;
  }

  public Dfr064 addProgramDatesItem(Dfr018ProgramDates programDatesItem) {
    if (this.programDates == null) {
      this.programDates = new ArrayList<>();
    }
    this.programDates.add(programDatesItem);
    return this;
  }

  /**
   * Get programDates
   * @return programDates
   */
  @javax.annotation.Nullable
  public List<Dfr018ProgramDates> getProgramDates() {
    return programDates;
  }

  public void setProgramDates(List<Dfr018ProgramDates> programDates) {
    this.programDates = programDates;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Dfr064 dfr064 = (Dfr064) o;
    return Objects.equals(this.action, dfr064.action) &&
        Objects.equals(this.programDates, dfr064.programDates);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, programDates);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Dfr064 {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    programDates: ").append(toIndentedString(programDates)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Action");
    openapiFields.add("ProgramDates");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Dfr064
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Dfr064.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Dfr064 is not found in the empty JSON string", Dfr064.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Dfr064.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Dfr064` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("Action") != null && !jsonObj.get("Action").isJsonNull()) {
        JsonArray jsonArrayaction = jsonObj.getAsJsonArray("Action");
        if (jsonArrayaction != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Action").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Action` to be an array in the JSON string but got `%s`", jsonObj.get("Action").toString()));
          }

          // validate the optional field `Action` (array)
          for (int i = 0; i < jsonArrayaction.size(); i++) {
            Dfr065.validateJsonElement(jsonArrayaction.get(i));
          };
        }
      }
      if (jsonObj.get("ProgramDates") != null && !jsonObj.get("ProgramDates").isJsonNull()) {
        JsonArray jsonArrayprogramDates = jsonObj.getAsJsonArray("ProgramDates");
        if (jsonArrayprogramDates != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ProgramDates").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ProgramDates` to be an array in the JSON string but got `%s`", jsonObj.get("ProgramDates").toString()));
          }

          // validate the optional field `ProgramDates` (array)
          for (int i = 0; i < jsonArrayprogramDates.size(); i++) {
            Dfr018ProgramDates.validateJsonElement(jsonArrayprogramDates.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Dfr064.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Dfr064' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Dfr064> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Dfr064.class));

       return (TypeAdapter<T>) new TypeAdapter<Dfr064>() {
           @Override
           public void write(JsonWriter out, Dfr064 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Dfr064 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Dfr064 given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Dfr064
   * @throws IOException if the JSON string is invalid with respect to Dfr064
   */
  public static Dfr064 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Dfr064.class);
  }

  /**
   * Convert an instance of Dfr064 to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

