/*
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.DfrRestServicesGetAirComplianceGet200Response;
import org.openapitools.client.model.DfrRestServicesGetAirQualityGet200Response;
import org.openapitools.client.model.DfrRestServicesGetAwsDocsGet200Response;
import org.openapitools.client.model.DfrRestServicesGetCaseFormalActionsGet200Response;
import org.openapitools.client.model.DfrRestServicesGetComplianceHistoryGet200Response;
import org.openapitools.client.model.DfrRestServicesGetComplianceSummaryGet200Response;
import org.openapitools.client.model.DfrRestServicesGetCwa3yrComplianceGet200Response;
import org.openapitools.client.model.DfrRestServicesGetCwa3yrD80d90CountsGet200Response;
import org.openapitools.client.model.DfrRestServicesGetCwaCsComplianceGet200Response;
import org.openapitools.client.model.DfrRestServicesGetCwaEffAlrExpGet200Response;
import org.openapitools.client.model.DfrRestServicesGetCwaEffAlrGet200Response;
import org.openapitools.client.model.DfrRestServicesGetCwaEffComplianceExpGet200Response;
import org.openapitools.client.model.DfrRestServicesGetCwaEffComplianceGet200Response;
import org.openapitools.client.model.DfrRestServicesGetCwaPsComplianceGet200Response;
import org.openapitools.client.model.DfrRestServicesGetCwaRncComplianceGet200Response;
import org.openapitools.client.model.DfrRestServicesGetCwaSeComplianceGet200Response;
import org.openapitools.client.model.DfrRestServicesGetD80d90sDetailsGet200Response;
import org.openapitools.client.model.DfrRestServicesGetDemographicsByIdGet200Response;
import org.openapitools.client.model.DfrRestServicesGetDfrGet200Response;
import org.openapitools.client.model.DfrRestServicesGetEjscreenIndexesGet200Response;
import org.openapitools.client.model.DfrRestServicesGetEnforcementSummaryGet200Response;
import org.openapitools.client.model.DfrRestServicesGetExtractDatesGet200Response;
import org.openapitools.client.model.DfrRestServicesGetFormalActionsGet200Response;
import org.openapitools.client.model.DfrRestServicesGetIcisFormalActionsGet200Response;
import org.openapitools.client.model.DfrRestServicesGetInspectionsGet200Response;
import org.openapitools.client.model.DfrRestServicesGetMapGet200Response;
import org.openapitools.client.model.DfrRestServicesGetNaicsGet200Response;
import org.openapitools.client.model.DfrRestServicesGetNoticesGet200Response;
import org.openapitools.client.model.DfrRestServicesGetPermitsGet200Response;
import org.openapitools.client.model.DfrRestServicesGetRcraComplianceGet200Response;
import org.openapitools.client.model.DfrRestServicesGetSdwaLeadAndCopperGet200Response;
import org.openapitools.client.model.DfrRestServicesGetSdwaSanitarySurveysGet200Response;
import org.openapitools.client.model.DfrRestServicesGetSdwaSiteVisitsGet200Response;
import org.openapitools.client.model.DfrRestServicesGetSdwaViolationsGet200Response;
import org.openapitools.client.model.DfrRestServicesGetSdwisComplianceGet200Response;
import org.openapitools.client.model.DfrRestServicesGetSicCodesGet200Response;
import org.openapitools.client.model.DfrRestServicesGetSpatialMetadataGet200Response;
import org.openapitools.client.model.DfrRestServicesGetTriHistoryGet200Response;
import org.openapitools.client.model.DfrRestServicesGetTriReleasesGet200Response;
import org.openapitools.client.model.DfrRestServicesGetTribesGet200Response;
import org.openapitools.client.model.DfrRestServicesGetWaterQualityDetailsGet200Response;
import org.openapitools.client.model.DfrRestServicesGetWaterQualityGet200Response;
import java.io.File;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DetailedFacilityReportApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public DetailedFacilityReportApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DetailedFacilityReportApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for dfrRestServicesAir3YrDownloadGet
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesAir3YrDownloadGetCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.air_3_yr_download";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesAir3YrDownloadGetValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return dfrRestServicesAir3YrDownloadGetCall(_callback);

    }

    /**
     * Downloads the complete Air Compliance History Section of the DFR
     * For the provided system identifier, dowloads all displayed Air quaterly/monthly Facility Level Status, High Priority Violation (HPV) History, HPV Detailed Violations and Federal Reportable Violation  information in a Comma Seperated Value (CSV) format.
     * @return File
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public File dfrRestServicesAir3YrDownloadGet() throws ApiException {
        ApiResponse<File> localVarResp = dfrRestServicesAir3YrDownloadGetWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * Downloads the complete Air Compliance History Section of the DFR
     * For the provided system identifier, dowloads all displayed Air quaterly/monthly Facility Level Status, High Priority Violation (HPV) History, HPV Detailed Violations and Federal Reportable Violation  information in a Comma Seperated Value (CSV) format.
     * @return ApiResponse&lt;File&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<File> dfrRestServicesAir3YrDownloadGetWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesAir3YrDownloadGetValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Downloads the complete Air Compliance History Section of the DFR (asynchronously)
     * For the provided system identifier, dowloads all displayed Air quaterly/monthly Facility Level Status, High Priority Violation (HPV) History, HPV Detailed Violations and Federal Reportable Violation  information in a Comma Seperated Value (CSV) format.
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesAir3YrDownloadGetAsync(final ApiCallback<File> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesAir3YrDownloadGetValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesAir3YrDownloadPost
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesAir3YrDownloadPostCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.air_3_yr_download";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesAir3YrDownloadPostValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return dfrRestServicesAir3YrDownloadPostCall(_callback);

    }

    /**
     * Downloads the complete Air Compliance History Section of the DFR
     * For the provided system identifier, dowloads all displayed Air quaterly/monthly Facility Level Status, High Priority Violation (HPV) History, HPV Detailed Violations and Federal Reportable Violation  information in a Comma Seperated Value (CSV) format.
     * @return File
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public File dfrRestServicesAir3YrDownloadPost() throws ApiException {
        ApiResponse<File> localVarResp = dfrRestServicesAir3YrDownloadPostWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * Downloads the complete Air Compliance History Section of the DFR
     * For the provided system identifier, dowloads all displayed Air quaterly/monthly Facility Level Status, High Priority Violation (HPV) History, HPV Detailed Violations and Federal Reportable Violation  information in a Comma Seperated Value (CSV) format.
     * @return ApiResponse&lt;File&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<File> dfrRestServicesAir3YrDownloadPostWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesAir3YrDownloadPostValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Downloads the complete Air Compliance History Section of the DFR (asynchronously)
     * For the provided system identifier, dowloads all displayed Air quaterly/monthly Facility Level Status, High Priority Violation (HPV) History, HPV Detailed Violations and Federal Reportable Violation  information in a Comma Seperated Value (CSV) format.
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesAir3YrDownloadPostAsync(final ApiCallback<File> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesAir3YrDownloadPostValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesCwa3YrEffluentDownloadGet
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesCwa3YrEffluentDownloadGetCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.cwa_3_yr_effluent_download";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesCwa3YrEffluentDownloadGetValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return dfrRestServicesCwa3YrEffluentDownloadGetCall(_callback);

    }

    /**
     * Downloads NPDES Effluent Violation Information by month and quarter.
     * For the provided system identifier, dowloads all displayed NPDES quaterly/monthly effluent violation information in a Comma Seperated Value (CSV) format.
     * @return File
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public File dfrRestServicesCwa3YrEffluentDownloadGet() throws ApiException {
        ApiResponse<File> localVarResp = dfrRestServicesCwa3YrEffluentDownloadGetWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * Downloads NPDES Effluent Violation Information by month and quarter.
     * For the provided system identifier, dowloads all displayed NPDES quaterly/monthly effluent violation information in a Comma Seperated Value (CSV) format.
     * @return ApiResponse&lt;File&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<File> dfrRestServicesCwa3YrEffluentDownloadGetWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesCwa3YrEffluentDownloadGetValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Downloads NPDES Effluent Violation Information by month and quarter. (asynchronously)
     * For the provided system identifier, dowloads all displayed NPDES quaterly/monthly effluent violation information in a Comma Seperated Value (CSV) format.
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesCwa3YrEffluentDownloadGetAsync(final ApiCallback<File> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesCwa3YrEffluentDownloadGetValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesCwa3YrEffluentDownloadPost
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesCwa3YrEffluentDownloadPostCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.cwa_3_yr_effluent_download";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesCwa3YrEffluentDownloadPostValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return dfrRestServicesCwa3YrEffluentDownloadPostCall(_callback);

    }

    /**
     * Downloads NPDES Effluent Violation Information by month and quarter.
     * For the provided system identifier, dowloads all displayed NPDES quaterly/monthly effluent violation information in a Comma Seperated Value (CSV) format.
     * @return File
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public File dfrRestServicesCwa3YrEffluentDownloadPost() throws ApiException {
        ApiResponse<File> localVarResp = dfrRestServicesCwa3YrEffluentDownloadPostWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * Downloads NPDES Effluent Violation Information by month and quarter.
     * For the provided system identifier, dowloads all displayed NPDES quaterly/monthly effluent violation information in a Comma Seperated Value (CSV) format.
     * @return ApiResponse&lt;File&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<File> dfrRestServicesCwa3YrEffluentDownloadPostWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesCwa3YrEffluentDownloadPostValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Downloads NPDES Effluent Violation Information by month and quarter. (asynchronously)
     * For the provided system identifier, dowloads all displayed NPDES quaterly/monthly effluent violation information in a Comma Seperated Value (CSV) format.
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesCwa3YrEffluentDownloadPostAsync(final ApiCallback<File> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesCwa3YrEffluentDownloadPostValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesCwa3YrSepscsDownloadGet
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesCwa3YrSepscsDownloadGetCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.cwa_3_yr_sepscs_download";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesCwa3YrSepscsDownloadGetValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return dfrRestServicesCwa3YrSepscsDownloadGetCall(_callback);

    }

    /**
     * Downloads NPDES Compliance Schedule, Permit Schedule and Single Event Violation Information by month and quarter.
     * For the provided system identifier, dowloads all displayed NPDES quaterly/monthly Compliance Schedule, Permit Schedule, and Single Event Violation  information in a Comma Seperated Value (CSV) format.
     * @return File
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public File dfrRestServicesCwa3YrSepscsDownloadGet() throws ApiException {
        ApiResponse<File> localVarResp = dfrRestServicesCwa3YrSepscsDownloadGetWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * Downloads NPDES Compliance Schedule, Permit Schedule and Single Event Violation Information by month and quarter.
     * For the provided system identifier, dowloads all displayed NPDES quaterly/monthly Compliance Schedule, Permit Schedule, and Single Event Violation  information in a Comma Seperated Value (CSV) format.
     * @return ApiResponse&lt;File&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<File> dfrRestServicesCwa3YrSepscsDownloadGetWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesCwa3YrSepscsDownloadGetValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Downloads NPDES Compliance Schedule, Permit Schedule and Single Event Violation Information by month and quarter. (asynchronously)
     * For the provided system identifier, dowloads all displayed NPDES quaterly/monthly Compliance Schedule, Permit Schedule, and Single Event Violation  information in a Comma Seperated Value (CSV) format.
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesCwa3YrSepscsDownloadGetAsync(final ApiCallback<File> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesCwa3YrSepscsDownloadGetValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesCwa3YrSepscsDownloadPost
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesCwa3YrSepscsDownloadPostCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.cwa_3_yr_sepscs_download";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesCwa3YrSepscsDownloadPostValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return dfrRestServicesCwa3YrSepscsDownloadPostCall(_callback);

    }

    /**
     * Downloads NPDES Compliance Schedule, Permit Schedule and Single Event Violation Information by month and quarter.
     * For the provided system identifier, dowloads all displayed NPDES quaterly/monthly Compliance Schedule, Permit Schedule, and Single Event Violation  information in a Comma Seperated Value (CSV) format.
     * @return File
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public File dfrRestServicesCwa3YrSepscsDownloadPost() throws ApiException {
        ApiResponse<File> localVarResp = dfrRestServicesCwa3YrSepscsDownloadPostWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * Downloads NPDES Compliance Schedule, Permit Schedule and Single Event Violation Information by month and quarter.
     * For the provided system identifier, dowloads all displayed NPDES quaterly/monthly Compliance Schedule, Permit Schedule, and Single Event Violation  information in a Comma Seperated Value (CSV) format.
     * @return ApiResponse&lt;File&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<File> dfrRestServicesCwa3YrSepscsDownloadPostWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesCwa3YrSepscsDownloadPostValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Downloads NPDES Compliance Schedule, Permit Schedule and Single Event Violation Information by month and quarter. (asynchronously)
     * For the provided system identifier, dowloads all displayed NPDES quaterly/monthly Compliance Schedule, Permit Schedule, and Single Event Violation  information in a Comma Seperated Value (CSV) format.
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesCwa3YrSepscsDownloadPostAsync(final ApiCallback<File> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesCwa3YrSepscsDownloadPostValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetAirComplianceGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance statuses for 12 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetAirComplianceGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_air_compliance";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetAirComplianceGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetAirComplianceGet(Async)");
        }

        return dfrRestServicesGetAirComplianceGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report Air Compliance Report Service
     * This procedure obtains data for Air Compliance in the Environmental Conditions Section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetAirComplianceGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance statuses for 12 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetAirComplianceGet200Response dfrRestServicesGetAirComplianceGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetAirComplianceGet200Response> localVarResp = dfrRestServicesGetAirComplianceGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report Air Compliance Report Service
     * This procedure obtains data for Air Compliance in the Environmental Conditions Section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetAirComplianceGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance statuses for 12 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetAirComplianceGet200Response> dfrRestServicesGetAirComplianceGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetAirComplianceGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetAirComplianceGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report Air Compliance Report Service (asynchronously)
     * This procedure obtains data for Air Compliance in the Environmental Conditions Section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance statuses for 12 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetAirComplianceGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetAirComplianceGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetAirComplianceGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetAirComplianceGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetAirCompliancePost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance statuses for 12 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetAirCompliancePostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_air_compliance";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetAirCompliancePostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetAirCompliancePost(Async)");
        }

        return dfrRestServicesGetAirCompliancePostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report Air Compliance Report Service
     * This procedure obtains data for Air Compliance in the Environmental Conditions Section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetAirComplianceGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance statuses for 12 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetAirComplianceGet200Response dfrRestServicesGetAirCompliancePost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetAirComplianceGet200Response> localVarResp = dfrRestServicesGetAirCompliancePostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report Air Compliance Report Service
     * This procedure obtains data for Air Compliance in the Environmental Conditions Section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetAirComplianceGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance statuses for 12 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetAirComplianceGet200Response> dfrRestServicesGetAirCompliancePostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetAirCompliancePostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetAirComplianceGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report Air Compliance Report Service (asynchronously)
     * This procedure obtains data for Air Compliance in the Environmental Conditions Section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance statuses for 12 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetAirCompliancePostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetAirComplianceGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetAirCompliancePostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetAirComplianceGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetAirQualityGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information on air quality </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetAirQualityGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_air_quality";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetAirQualityGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetAirQualityGet(Async)");
        }

        return dfrRestServicesGetAirQualityGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report Air Quality Report Service
     * This procedure obtains data for Air Quality in the Environmental Conditions Section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetAirQualityGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information on air quality </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetAirQualityGet200Response dfrRestServicesGetAirQualityGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetAirQualityGet200Response> localVarResp = dfrRestServicesGetAirQualityGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report Air Quality Report Service
     * This procedure obtains data for Air Quality in the Environmental Conditions Section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetAirQualityGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information on air quality </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetAirQualityGet200Response> dfrRestServicesGetAirQualityGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetAirQualityGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetAirQualityGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report Air Quality Report Service (asynchronously)
     * This procedure obtains data for Air Quality in the Environmental Conditions Section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information on air quality </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetAirQualityGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetAirQualityGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetAirQualityGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetAirQualityGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetAirQualityPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information on air quality </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetAirQualityPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_air_quality";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetAirQualityPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetAirQualityPost(Async)");
        }

        return dfrRestServicesGetAirQualityPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report Air Quality Report Service
     * This procedure obtains data for Air Quality in the Environmental Conditions Section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetAirQualityGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information on air quality </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetAirQualityGet200Response dfrRestServicesGetAirQualityPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetAirQualityGet200Response> localVarResp = dfrRestServicesGetAirQualityPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report Air Quality Report Service
     * This procedure obtains data for Air Quality in the Environmental Conditions Section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetAirQualityGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information on air quality </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetAirQualityGet200Response> dfrRestServicesGetAirQualityPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetAirQualityPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetAirQualityGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report Air Quality Report Service (asynchronously)
     * This procedure obtains data for Air Quality in the Environmental Conditions Section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information on air quality </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetAirQualityPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetAirQualityGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetAirQualityPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetAirQualityGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetAwsDocsGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetAwsDocsGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_aws_docs";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetAwsDocsGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetAwsDocsGet(Async)");
        }

        return dfrRestServicesGetAwsDocsGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Placeholder
     * 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetAwsDocsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetAwsDocsGet200Response dfrRestServicesGetAwsDocsGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetAwsDocsGet200Response> localVarResp = dfrRestServicesGetAwsDocsGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Placeholder
     * 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetAwsDocsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetAwsDocsGet200Response> dfrRestServicesGetAwsDocsGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetAwsDocsGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetAwsDocsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Placeholder (asynchronously)
     * 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetAwsDocsGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetAwsDocsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetAwsDocsGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetAwsDocsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetAwsDocsPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetAwsDocsPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_aws_docs";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetAwsDocsPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetAwsDocsPost(Async)");
        }

        return dfrRestServicesGetAwsDocsPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Placeholder
     * 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetAwsDocsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetAwsDocsGet200Response dfrRestServicesGetAwsDocsPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetAwsDocsGet200Response> localVarResp = dfrRestServicesGetAwsDocsPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Placeholder
     * 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetAwsDocsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetAwsDocsGet200Response> dfrRestServicesGetAwsDocsPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetAwsDocsPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetAwsDocsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Placeholder (asynchronously)
     * 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetAwsDocsPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetAwsDocsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetAwsDocsPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetAwsDocsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetCaseFormalActionsGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information on cases. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCaseFormalActionsGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_case_formal_actions";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetCaseFormalActionsGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetCaseFormalActionsGet(Async)");
        }

        return dfrRestServicesGetCaseFormalActionsGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Displays Cases related to the Facility
     * Displays closed case information from EPA&#39;s Federal Enforcement &amp; Compliance System that are related to the facility.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetCaseFormalActionsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information on cases. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetCaseFormalActionsGet200Response dfrRestServicesGetCaseFormalActionsGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetCaseFormalActionsGet200Response> localVarResp = dfrRestServicesGetCaseFormalActionsGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Displays Cases related to the Facility
     * Displays closed case information from EPA&#39;s Federal Enforcement &amp; Compliance System that are related to the facility.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetCaseFormalActionsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information on cases. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetCaseFormalActionsGet200Response> dfrRestServicesGetCaseFormalActionsGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetCaseFormalActionsGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCaseFormalActionsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Displays Cases related to the Facility (asynchronously)
     * Displays closed case information from EPA&#39;s Federal Enforcement &amp; Compliance System that are related to the facility.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information on cases. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCaseFormalActionsGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetCaseFormalActionsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetCaseFormalActionsGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCaseFormalActionsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetCaseFormalActionsPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information on cases. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCaseFormalActionsPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_case_formal_actions";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetCaseFormalActionsPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetCaseFormalActionsPost(Async)");
        }

        return dfrRestServicesGetCaseFormalActionsPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Displays Cases related to the Facility
     * Displays closed case information from EPA&#39;s Federal Enforcement &amp; Compliance System that are related to the facility.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetCaseFormalActionsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information on cases. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetCaseFormalActionsGet200Response dfrRestServicesGetCaseFormalActionsPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetCaseFormalActionsGet200Response> localVarResp = dfrRestServicesGetCaseFormalActionsPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Displays Cases related to the Facility
     * Displays closed case information from EPA&#39;s Federal Enforcement &amp; Compliance System that are related to the facility.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetCaseFormalActionsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information on cases. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetCaseFormalActionsGet200Response> dfrRestServicesGetCaseFormalActionsPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetCaseFormalActionsPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCaseFormalActionsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Displays Cases related to the Facility (asynchronously)
     * Displays closed case information from EPA&#39;s Federal Enforcement &amp; Compliance System that are related to the facility.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information on cases. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCaseFormalActionsPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetCaseFormalActionsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetCaseFormalActionsPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCaseFormalActionsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetComplianceHistoryGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance histories </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetComplianceHistoryGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_compliance_history";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetComplianceHistoryGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetComplianceHistoryGet(Async)");
        }

        return dfrRestServicesGetComplianceHistoryGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report 5 Year Compliance Monitoring History Service
     * This procedure obtains data for the Compliance Monitoring History (5 years) in the Enforcement and Compliance Section of the Detailed Facility report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetComplianceHistoryGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance histories </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetComplianceHistoryGet200Response dfrRestServicesGetComplianceHistoryGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetComplianceHistoryGet200Response> localVarResp = dfrRestServicesGetComplianceHistoryGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report 5 Year Compliance Monitoring History Service
     * This procedure obtains data for the Compliance Monitoring History (5 years) in the Enforcement and Compliance Section of the Detailed Facility report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetComplianceHistoryGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance histories </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetComplianceHistoryGet200Response> dfrRestServicesGetComplianceHistoryGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetComplianceHistoryGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetComplianceHistoryGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report 5 Year Compliance Monitoring History Service (asynchronously)
     * This procedure obtains data for the Compliance Monitoring History (5 years) in the Enforcement and Compliance Section of the Detailed Facility report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance histories </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetComplianceHistoryGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetComplianceHistoryGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetComplianceHistoryGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetComplianceHistoryGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetComplianceHistoryPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance histories </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetComplianceHistoryPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_compliance_history";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetComplianceHistoryPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetComplianceHistoryPost(Async)");
        }

        return dfrRestServicesGetComplianceHistoryPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report 5 Year Compliance Monitoring History Service
     * This procedure obtains data for the Compliance Monitoring History (5 years) in the Enforcement and Compliance Section of the Detailed Facility report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetComplianceHistoryGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance histories </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetComplianceHistoryGet200Response dfrRestServicesGetComplianceHistoryPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetComplianceHistoryGet200Response> localVarResp = dfrRestServicesGetComplianceHistoryPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report 5 Year Compliance Monitoring History Service
     * This procedure obtains data for the Compliance Monitoring History (5 years) in the Enforcement and Compliance Section of the Detailed Facility report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetComplianceHistoryGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance histories </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetComplianceHistoryGet200Response> dfrRestServicesGetComplianceHistoryPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetComplianceHistoryPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetComplianceHistoryGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report 5 Year Compliance Monitoring History Service (asynchronously)
     * This procedure obtains data for the Compliance Monitoring History (5 years) in the Enforcement and Compliance Section of the Detailed Facility report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance histories </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetComplianceHistoryPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetComplianceHistoryGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetComplianceHistoryPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetComplianceHistoryGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetComplianceSummaryGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance summaries </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetComplianceSummaryGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_compliance_summary";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetComplianceSummaryGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetComplianceSummaryGet(Async)");
        }

        return dfrRestServicesGetComplianceSummaryGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report Compliance Summary Service
     * This procedure obtains data for Compliance Summary Data in the Enforcement and Compliance Section of the Detailed Facility report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetComplianceSummaryGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance summaries </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetComplianceSummaryGet200Response dfrRestServicesGetComplianceSummaryGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetComplianceSummaryGet200Response> localVarResp = dfrRestServicesGetComplianceSummaryGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report Compliance Summary Service
     * This procedure obtains data for Compliance Summary Data in the Enforcement and Compliance Section of the Detailed Facility report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetComplianceSummaryGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance summaries </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetComplianceSummaryGet200Response> dfrRestServicesGetComplianceSummaryGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetComplianceSummaryGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetComplianceSummaryGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report Compliance Summary Service (asynchronously)
     * This procedure obtains data for Compliance Summary Data in the Enforcement and Compliance Section of the Detailed Facility report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance summaries </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetComplianceSummaryGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetComplianceSummaryGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetComplianceSummaryGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetComplianceSummaryGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetComplianceSummaryPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance summaries </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetComplianceSummaryPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_compliance_summary";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetComplianceSummaryPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetComplianceSummaryPost(Async)");
        }

        return dfrRestServicesGetComplianceSummaryPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report Compliance Summary Service
     * This procedure obtains data for Compliance Summary Data in the Enforcement and Compliance Section of the Detailed Facility report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetComplianceSummaryGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance summaries </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetComplianceSummaryGet200Response dfrRestServicesGetComplianceSummaryPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetComplianceSummaryGet200Response> localVarResp = dfrRestServicesGetComplianceSummaryPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report Compliance Summary Service
     * This procedure obtains data for Compliance Summary Data in the Enforcement and Compliance Section of the Detailed Facility report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetComplianceSummaryGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance summaries </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetComplianceSummaryGet200Response> dfrRestServicesGetComplianceSummaryPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetComplianceSummaryPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetComplianceSummaryGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report Compliance Summary Service (asynchronously)
     * This procedure obtains data for Compliance Summary Data in the Enforcement and Compliance Section of the Detailed Facility report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance summaries </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetComplianceSummaryPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetComplianceSummaryGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetComplianceSummaryPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetComplianceSummaryGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetCsvGet
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCsvGetCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_csv";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetCsvGetValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return dfrRestServicesGetCsvGetCall(_callback);

    }

    /**
     * Downloads a spectific section  of the DFR in CSV Format
     * For a supplied system id and DFR section name, the procedure will download that section in a Comma Separated Value (CSV) format.
     * @return File
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public File dfrRestServicesGetCsvGet() throws ApiException {
        ApiResponse<File> localVarResp = dfrRestServicesGetCsvGetWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * Downloads a spectific section  of the DFR in CSV Format
     * For a supplied system id and DFR section name, the procedure will download that section in a Comma Separated Value (CSV) format.
     * @return ApiResponse&lt;File&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<File> dfrRestServicesGetCsvGetWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetCsvGetValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Downloads a spectific section  of the DFR in CSV Format (asynchronously)
     * For a supplied system id and DFR section name, the procedure will download that section in a Comma Separated Value (CSV) format.
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCsvGetAsync(final ApiCallback<File> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetCsvGetValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetCsvPost
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCsvPostCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_csv";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetCsvPostValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return dfrRestServicesGetCsvPostCall(_callback);

    }

    /**
     * Downloads a spectific section  of the DFR in CSV Format
     * For a supplied system id and DFR section name, the procedure will download that section in a Comma Separated Value (CSV) format.
     * @return File
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public File dfrRestServicesGetCsvPost() throws ApiException {
        ApiResponse<File> localVarResp = dfrRestServicesGetCsvPostWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * Downloads a spectific section  of the DFR in CSV Format
     * For a supplied system id and DFR section name, the procedure will download that section in a Comma Separated Value (CSV) format.
     * @return ApiResponse&lt;File&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<File> dfrRestServicesGetCsvPostWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetCsvPostValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Downloads a spectific section  of the DFR in CSV Format (asynchronously)
     * For a supplied system id and DFR section name, the procedure will download that section in a Comma Separated Value (CSV) format.
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCsvPostAsync(final ApiCallback<File> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetCsvPostValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetCwa3yrComplianceGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance statuses for 13 quarters </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwa3yrComplianceGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_cwa_3yr_compliance";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetCwa3yrComplianceGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetCwa3yrComplianceGet(Async)");
        }

        return dfrRestServicesGetCwa3yrComplianceGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report 3 Year CWA Facility-Level Status Service
     * This procedure obtains data for the CWA Facility-Level Status section located in the Three Year Compliance Status by Quarter portion of the DFR. Valid Compliance Statuses are as follows: &gt; \&quot;In Viol\&quot; &#x3D; Facility is in violation &gt; \&quot;No Viol\&quot; &#x3D; No violation found &gt; \&quot;Unk\&quot; &#x3D; Unknown status &gt; \&quot;SNC/Cat 1\&quot; &#x3D; SNC/Category I violation found
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetCwa3yrComplianceGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance statuses for 13 quarters </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetCwa3yrComplianceGet200Response dfrRestServicesGetCwa3yrComplianceGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetCwa3yrComplianceGet200Response> localVarResp = dfrRestServicesGetCwa3yrComplianceGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report 3 Year CWA Facility-Level Status Service
     * This procedure obtains data for the CWA Facility-Level Status section located in the Three Year Compliance Status by Quarter portion of the DFR. Valid Compliance Statuses are as follows: &gt; \&quot;In Viol\&quot; &#x3D; Facility is in violation &gt; \&quot;No Viol\&quot; &#x3D; No violation found &gt; \&quot;Unk\&quot; &#x3D; Unknown status &gt; \&quot;SNC/Cat 1\&quot; &#x3D; SNC/Category I violation found
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetCwa3yrComplianceGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance statuses for 13 quarters </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetCwa3yrComplianceGet200Response> dfrRestServicesGetCwa3yrComplianceGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetCwa3yrComplianceGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwa3yrComplianceGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report 3 Year CWA Facility-Level Status Service (asynchronously)
     * This procedure obtains data for the CWA Facility-Level Status section located in the Three Year Compliance Status by Quarter portion of the DFR. Valid Compliance Statuses are as follows: &gt; \&quot;In Viol\&quot; &#x3D; Facility is in violation &gt; \&quot;No Viol\&quot; &#x3D; No violation found &gt; \&quot;Unk\&quot; &#x3D; Unknown status &gt; \&quot;SNC/Cat 1\&quot; &#x3D; SNC/Category I violation found
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance statuses for 13 quarters </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwa3yrComplianceGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetCwa3yrComplianceGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetCwa3yrComplianceGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwa3yrComplianceGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetCwa3yrCompliancePost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance statuses for 13 quarters </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwa3yrCompliancePostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_cwa_3yr_compliance";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetCwa3yrCompliancePostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetCwa3yrCompliancePost(Async)");
        }

        return dfrRestServicesGetCwa3yrCompliancePostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report 3 Year CWA Facility-Level Status Service
     * This procedure obtains data for the CWA Facility-Level Status section located in the Three Year Compliance Status by Quarter portion of the DFR. Valid Compliance Statuses are as follows: &gt; \&quot;In Viol\&quot; &#x3D; Facility is in violation &gt; \&quot;No Viol\&quot; &#x3D; No violation found &gt; \&quot;Unk\&quot; &#x3D; Unknown status &gt; \&quot;SNC/Cat 1\&quot; &#x3D; SNC/Category I violation found
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetCwa3yrComplianceGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance statuses for 13 quarters </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetCwa3yrComplianceGet200Response dfrRestServicesGetCwa3yrCompliancePost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetCwa3yrComplianceGet200Response> localVarResp = dfrRestServicesGetCwa3yrCompliancePostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report 3 Year CWA Facility-Level Status Service
     * This procedure obtains data for the CWA Facility-Level Status section located in the Three Year Compliance Status by Quarter portion of the DFR. Valid Compliance Statuses are as follows: &gt; \&quot;In Viol\&quot; &#x3D; Facility is in violation &gt; \&quot;No Viol\&quot; &#x3D; No violation found &gt; \&quot;Unk\&quot; &#x3D; Unknown status &gt; \&quot;SNC/Cat 1\&quot; &#x3D; SNC/Category I violation found
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetCwa3yrComplianceGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance statuses for 13 quarters </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetCwa3yrComplianceGet200Response> dfrRestServicesGetCwa3yrCompliancePostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetCwa3yrCompliancePostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwa3yrComplianceGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report 3 Year CWA Facility-Level Status Service (asynchronously)
     * This procedure obtains data for the CWA Facility-Level Status section located in the Three Year Compliance Status by Quarter portion of the DFR. Valid Compliance Statuses are as follows: &gt; \&quot;In Viol\&quot; &#x3D; Facility is in violation &gt; \&quot;No Viol\&quot; &#x3D; No violation found &gt; \&quot;Unk\&quot; &#x3D; Unknown status &gt; \&quot;SNC/Cat 1\&quot; &#x3D; SNC/Category I violation found
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance statuses for 13 quarters </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwa3yrCompliancePostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetCwa3yrComplianceGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetCwa3yrCompliancePostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwa3yrComplianceGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetCwa3yrD80d90CountsGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of D80/D90 counts for 13 quarters and 39 months. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwa3yrD80d90CountsGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_cwa_3yr_d80d90_counts";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetCwa3yrD80d90CountsGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetCwa3yrD80d90CountsGet(Async)");
        }

        return dfrRestServicesGetCwa3yrD80d90CountsGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Displays monlthly and quarterly counts of D80 and D90 Effluent Non Reporting Violations Related to the Facility
     * Displays monlthly and quarterly counts of D80 and D90 Effluent Non Reporting Violations Related to the Facility from EPA&#39;s ICIS NPDES System.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetCwa3yrD80d90CountsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of D80/D90 counts for 13 quarters and 39 months. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetCwa3yrD80d90CountsGet200Response dfrRestServicesGetCwa3yrD80d90CountsGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetCwa3yrD80d90CountsGet200Response> localVarResp = dfrRestServicesGetCwa3yrD80d90CountsGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Displays monlthly and quarterly counts of D80 and D90 Effluent Non Reporting Violations Related to the Facility
     * Displays monlthly and quarterly counts of D80 and D90 Effluent Non Reporting Violations Related to the Facility from EPA&#39;s ICIS NPDES System.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetCwa3yrD80d90CountsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of D80/D90 counts for 13 quarters and 39 months. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetCwa3yrD80d90CountsGet200Response> dfrRestServicesGetCwa3yrD80d90CountsGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetCwa3yrD80d90CountsGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwa3yrD80d90CountsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Displays monlthly and quarterly counts of D80 and D90 Effluent Non Reporting Violations Related to the Facility (asynchronously)
     * Displays monlthly and quarterly counts of D80 and D90 Effluent Non Reporting Violations Related to the Facility from EPA&#39;s ICIS NPDES System.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of D80/D90 counts for 13 quarters and 39 months. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwa3yrD80d90CountsGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetCwa3yrD80d90CountsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetCwa3yrD80d90CountsGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwa3yrD80d90CountsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetCwa3yrD80d90CountsPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of D80/D90 counts for 13 quarters and 39 months. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwa3yrD80d90CountsPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_cwa_3yr_d80d90_counts";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetCwa3yrD80d90CountsPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetCwa3yrD80d90CountsPost(Async)");
        }

        return dfrRestServicesGetCwa3yrD80d90CountsPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Displays monlthly and quarterly counts of D80 and D90 Effluent Non Reporting Violations Related to the Facility
     * Displays monlthly and quarterly counts of D80 and D90 Effluent Non Reporting Violations Related to the Facility from EPA&#39;s ICIS NPDES System.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetCwa3yrD80d90CountsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of D80/D90 counts for 13 quarters and 39 months. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetCwa3yrD80d90CountsGet200Response dfrRestServicesGetCwa3yrD80d90CountsPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetCwa3yrD80d90CountsGet200Response> localVarResp = dfrRestServicesGetCwa3yrD80d90CountsPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Displays monlthly and quarterly counts of D80 and D90 Effluent Non Reporting Violations Related to the Facility
     * Displays monlthly and quarterly counts of D80 and D90 Effluent Non Reporting Violations Related to the Facility from EPA&#39;s ICIS NPDES System.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetCwa3yrD80d90CountsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of D80/D90 counts for 13 quarters and 39 months. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetCwa3yrD80d90CountsGet200Response> dfrRestServicesGetCwa3yrD80d90CountsPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetCwa3yrD80d90CountsPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwa3yrD80d90CountsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Displays monlthly and quarterly counts of D80 and D90 Effluent Non Reporting Violations Related to the Facility (asynchronously)
     * Displays monlthly and quarterly counts of D80 and D90 Effluent Non Reporting Violations Related to the Facility from EPA&#39;s ICIS NPDES System.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of D80/D90 counts for 13 quarters and 39 months. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwa3yrD80d90CountsPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetCwa3yrD80d90CountsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetCwa3yrD80d90CountsPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwa3yrD80d90CountsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetCwaCsComplianceGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance statuses for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaCsComplianceGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_cwa_cs_compliance";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetCwaCsComplianceGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaCsComplianceGet(Async)");
        }

        return dfrRestServicesGetCwaCsComplianceGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report CWA CSV Compliance Service
     * This procedure obtains data for the CWA Compliance Schedule Violations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetCwaCsComplianceGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance statuses for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetCwaCsComplianceGet200Response dfrRestServicesGetCwaCsComplianceGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetCwaCsComplianceGet200Response> localVarResp = dfrRestServicesGetCwaCsComplianceGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report CWA CSV Compliance Service
     * This procedure obtains data for the CWA Compliance Schedule Violations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetCwaCsComplianceGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance statuses for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetCwaCsComplianceGet200Response> dfrRestServicesGetCwaCsComplianceGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetCwaCsComplianceGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaCsComplianceGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report CWA CSV Compliance Service (asynchronously)
     * This procedure obtains data for the CWA Compliance Schedule Violations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance statuses for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaCsComplianceGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetCwaCsComplianceGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetCwaCsComplianceGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaCsComplianceGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetCwaCsCompliancePost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance statuses for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaCsCompliancePostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_cwa_cs_compliance";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetCwaCsCompliancePostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaCsCompliancePost(Async)");
        }

        return dfrRestServicesGetCwaCsCompliancePostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report CWA CSV Compliance Service
     * This procedure obtains data for the CWA Compliance Schedule Violations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetCwaCsComplianceGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance statuses for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetCwaCsComplianceGet200Response dfrRestServicesGetCwaCsCompliancePost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetCwaCsComplianceGet200Response> localVarResp = dfrRestServicesGetCwaCsCompliancePostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report CWA CSV Compliance Service
     * This procedure obtains data for the CWA Compliance Schedule Violations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetCwaCsComplianceGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance statuses for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetCwaCsComplianceGet200Response> dfrRestServicesGetCwaCsCompliancePostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetCwaCsCompliancePostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaCsComplianceGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report CWA CSV Compliance Service (asynchronously)
     * This procedure obtains data for the CWA Compliance Schedule Violations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of compliance statuses for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaCsCompliancePostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetCwaCsComplianceGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetCwaCsCompliancePostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaCsComplianceGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetCwaEffAlrExpGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaEffAlrExpGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_cwa_eff_alr_exp";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetCwaEffAlrExpGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaEffAlrExpGet(Async)");
        }

        return dfrRestServicesGetCwaEffAlrExpGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Placeholder
     * 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetCwaEffAlrExpGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetCwaEffAlrExpGet200Response dfrRestServicesGetCwaEffAlrExpGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetCwaEffAlrExpGet200Response> localVarResp = dfrRestServicesGetCwaEffAlrExpGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Placeholder
     * 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetCwaEffAlrExpGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetCwaEffAlrExpGet200Response> dfrRestServicesGetCwaEffAlrExpGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetCwaEffAlrExpGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaEffAlrExpGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Placeholder (asynchronously)
     * 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaEffAlrExpGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetCwaEffAlrExpGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetCwaEffAlrExpGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaEffAlrExpGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetCwaEffAlrExpPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaEffAlrExpPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_cwa_eff_alr_exp";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetCwaEffAlrExpPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaEffAlrExpPost(Async)");
        }

        return dfrRestServicesGetCwaEffAlrExpPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Placeholder
     * 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetCwaEffAlrExpGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetCwaEffAlrExpGet200Response dfrRestServicesGetCwaEffAlrExpPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetCwaEffAlrExpGet200Response> localVarResp = dfrRestServicesGetCwaEffAlrExpPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Placeholder
     * 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetCwaEffAlrExpGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetCwaEffAlrExpGet200Response> dfrRestServicesGetCwaEffAlrExpPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetCwaEffAlrExpPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaEffAlrExpGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Placeholder (asynchronously)
     * 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaEffAlrExpPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetCwaEffAlrExpGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetCwaEffAlrExpPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaEffAlrExpGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetCwaEffAlrGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of effluent ALR for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaEffAlrGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_cwa_eff_alr";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetCwaEffAlrGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaEffAlrGet(Async)");
        }

        return dfrRestServicesGetCwaEffAlrGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report CWA Effluent ALR Service
     * This procedure obtains data for the CWA Pollutant Discharge section located in the Three Year Compliance Status by Quarter portion of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetCwaEffAlrGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of effluent ALR for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetCwaEffAlrGet200Response dfrRestServicesGetCwaEffAlrGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetCwaEffAlrGet200Response> localVarResp = dfrRestServicesGetCwaEffAlrGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report CWA Effluent ALR Service
     * This procedure obtains data for the CWA Pollutant Discharge section located in the Three Year Compliance Status by Quarter portion of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetCwaEffAlrGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of effluent ALR for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetCwaEffAlrGet200Response> dfrRestServicesGetCwaEffAlrGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetCwaEffAlrGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaEffAlrGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report CWA Effluent ALR Service (asynchronously)
     * This procedure obtains data for the CWA Pollutant Discharge section located in the Three Year Compliance Status by Quarter portion of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of effluent ALR for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaEffAlrGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetCwaEffAlrGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetCwaEffAlrGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaEffAlrGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetCwaEffAlrPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of effluent ALR for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaEffAlrPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_cwa_eff_alr";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetCwaEffAlrPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaEffAlrPost(Async)");
        }

        return dfrRestServicesGetCwaEffAlrPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report CWA Effluent ALR Service
     * This procedure obtains data for the CWA Pollutant Discharge section located in the Three Year Compliance Status by Quarter portion of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetCwaEffAlrGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of effluent ALR for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetCwaEffAlrGet200Response dfrRestServicesGetCwaEffAlrPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetCwaEffAlrGet200Response> localVarResp = dfrRestServicesGetCwaEffAlrPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report CWA Effluent ALR Service
     * This procedure obtains data for the CWA Pollutant Discharge section located in the Three Year Compliance Status by Quarter portion of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetCwaEffAlrGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of effluent ALR for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetCwaEffAlrGet200Response> dfrRestServicesGetCwaEffAlrPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetCwaEffAlrPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaEffAlrGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report CWA Effluent ALR Service (asynchronously)
     * This procedure obtains data for the CWA Pollutant Discharge section located in the Three Year Compliance Status by Quarter portion of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of effluent ALR for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaEffAlrPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetCwaEffAlrGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetCwaEffAlrPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaEffAlrGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetCwaEffComplianceExpGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaEffComplianceExpGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_cwa_eff_compliance_exp";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetCwaEffComplianceExpGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaEffComplianceExpGet(Async)");
        }

        return dfrRestServicesGetCwaEffComplianceExpGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Placeholder
     * 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetCwaEffComplianceExpGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetCwaEffComplianceExpGet200Response dfrRestServicesGetCwaEffComplianceExpGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetCwaEffComplianceExpGet200Response> localVarResp = dfrRestServicesGetCwaEffComplianceExpGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Placeholder
     * 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetCwaEffComplianceExpGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetCwaEffComplianceExpGet200Response> dfrRestServicesGetCwaEffComplianceExpGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetCwaEffComplianceExpGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaEffComplianceExpGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Placeholder (asynchronously)
     * 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaEffComplianceExpGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetCwaEffComplianceExpGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetCwaEffComplianceExpGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaEffComplianceExpGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetCwaEffComplianceExpPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaEffComplianceExpPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_cwa_eff_compliance_exp";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetCwaEffComplianceExpPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaEffComplianceExpPost(Async)");
        }

        return dfrRestServicesGetCwaEffComplianceExpPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Placeholder
     * 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetCwaEffComplianceExpGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetCwaEffComplianceExpGet200Response dfrRestServicesGetCwaEffComplianceExpPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetCwaEffComplianceExpGet200Response> localVarResp = dfrRestServicesGetCwaEffComplianceExpPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Placeholder
     * 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetCwaEffComplianceExpGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetCwaEffComplianceExpGet200Response> dfrRestServicesGetCwaEffComplianceExpPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetCwaEffComplianceExpPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaEffComplianceExpGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Placeholder (asynchronously)
     * 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaEffComplianceExpPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetCwaEffComplianceExpGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetCwaEffComplianceExpPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaEffComplianceExpGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetCwaEffComplianceGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of effluent compliance statuses for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaEffComplianceGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_cwa_eff_compliance";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetCwaEffComplianceGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaEffComplianceGet(Async)");
        }

        return dfrRestServicesGetCwaEffComplianceGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report CWA Effluent Compliance Service
     * This procedure obtains data for the CWA Effluent Compliance section on the DFR.  
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetCwaEffComplianceGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of effluent compliance statuses for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetCwaEffComplianceGet200Response dfrRestServicesGetCwaEffComplianceGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetCwaEffComplianceGet200Response> localVarResp = dfrRestServicesGetCwaEffComplianceGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report CWA Effluent Compliance Service
     * This procedure obtains data for the CWA Effluent Compliance section on the DFR.  
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetCwaEffComplianceGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of effluent compliance statuses for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetCwaEffComplianceGet200Response> dfrRestServicesGetCwaEffComplianceGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetCwaEffComplianceGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaEffComplianceGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report CWA Effluent Compliance Service (asynchronously)
     * This procedure obtains data for the CWA Effluent Compliance section on the DFR.  
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of effluent compliance statuses for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaEffComplianceGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetCwaEffComplianceGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetCwaEffComplianceGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaEffComplianceGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetCwaEffCompliancePost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of effluent compliance statuses for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaEffCompliancePostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_cwa_eff_compliance";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetCwaEffCompliancePostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaEffCompliancePost(Async)");
        }

        return dfrRestServicesGetCwaEffCompliancePostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report CWA Effluent Compliance Service
     * This procedure obtains data for the CWA Effluent Compliance section on the DFR.  
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetCwaEffComplianceGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of effluent compliance statuses for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetCwaEffComplianceGet200Response dfrRestServicesGetCwaEffCompliancePost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetCwaEffComplianceGet200Response> localVarResp = dfrRestServicesGetCwaEffCompliancePostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report CWA Effluent Compliance Service
     * This procedure obtains data for the CWA Effluent Compliance section on the DFR.  
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetCwaEffComplianceGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of effluent compliance statuses for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetCwaEffComplianceGet200Response> dfrRestServicesGetCwaEffCompliancePostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetCwaEffCompliancePostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaEffComplianceGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report CWA Effluent Compliance Service (asynchronously)
     * This procedure obtains data for the CWA Effluent Compliance section on the DFR.  
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of effluent compliance statuses for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaEffCompliancePostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetCwaEffComplianceGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetCwaEffCompliancePostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaEffComplianceGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetCwaPsComplianceGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of permit schedule violations for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaPsComplianceGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_cwa_ps_compliance";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetCwaPsComplianceGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaPsComplianceGet(Async)");
        }

        return dfrRestServicesGetCwaPsComplianceGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report CWA PSV Compliance Service
     * This procedure obtains data for the CWA Permit Schedule Violations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetCwaPsComplianceGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of permit schedule violations for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetCwaPsComplianceGet200Response dfrRestServicesGetCwaPsComplianceGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetCwaPsComplianceGet200Response> localVarResp = dfrRestServicesGetCwaPsComplianceGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report CWA PSV Compliance Service
     * This procedure obtains data for the CWA Permit Schedule Violations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetCwaPsComplianceGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of permit schedule violations for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetCwaPsComplianceGet200Response> dfrRestServicesGetCwaPsComplianceGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetCwaPsComplianceGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaPsComplianceGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report CWA PSV Compliance Service (asynchronously)
     * This procedure obtains data for the CWA Permit Schedule Violations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of permit schedule violations for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaPsComplianceGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetCwaPsComplianceGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetCwaPsComplianceGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaPsComplianceGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetCwaPsCompliancePost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of permit schedule violations for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaPsCompliancePostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_cwa_ps_compliance";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetCwaPsCompliancePostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaPsCompliancePost(Async)");
        }

        return dfrRestServicesGetCwaPsCompliancePostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report CWA PSV Compliance Service
     * This procedure obtains data for the CWA Permit Schedule Violations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetCwaPsComplianceGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of permit schedule violations for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetCwaPsComplianceGet200Response dfrRestServicesGetCwaPsCompliancePost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetCwaPsComplianceGet200Response> localVarResp = dfrRestServicesGetCwaPsCompliancePostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report CWA PSV Compliance Service
     * This procedure obtains data for the CWA Permit Schedule Violations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetCwaPsComplianceGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of permit schedule violations for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetCwaPsComplianceGet200Response> dfrRestServicesGetCwaPsCompliancePostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetCwaPsCompliancePostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaPsComplianceGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report CWA PSV Compliance Service (asynchronously)
     * This procedure obtains data for the CWA Permit Schedule Violations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of permit schedule violations for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaPsCompliancePostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetCwaPsComplianceGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetCwaPsCompliancePostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaPsComplianceGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetCwaRncComplianceGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of RNC compliance statuses for 12 quarters </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaRncComplianceGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_cwa_rnc_compliance";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetCwaRncComplianceGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaRncComplianceGet(Async)");
        }

        return dfrRestServicesGetCwaRncComplianceGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report CWA RNC Compliance Service
     * This procedure obtains data for the CWA SNC/RNC History section located in the Three Year ompliance Status by Quarter portion of the DFR. Valid Compliance Statuses are as follows. &gt; S &#x3D; SNC/Category I - an enforcement action has been issued, and the facility is not meeting its compliance schedule &gt; E &#x3D; SNC/Category I - effluent violations of monthly average limits (Technical Review Criteria and chronic) &gt; X &#x3D; SNC/Category I - effluent violations of non-monthly average limits (Technical Review Criteria and chronic) &gt; T &#x3D; SNC/Category I - compliance schedule reporting violation &gt; D &#x3D; SNC/Category I - reporting violation - nonreceipt of DMR &gt; N &#x3D; RNC/Category II - reportable non-compliance &gt; P &#x3D; Resolved Pending - an enforcement action has been issued, and facility compliance with the action is pending final completion &gt; R &#x3D; Resolved - the facility has returned to compliance with its permit conditions, either with or without issuance of an enforcement action &gt; C &#x3D; Not considered in RNC/SNC based on manual review of data by state or EPA region. This manual override status is also indicated by a superscripted \&quot;m\&quot;. &gt; Blank &#x3D; Not considered in RNC/SNC &gt; N/A &#x3D; EPA&#39;s data system is not able to determine the facility-level compliance status based upon the information available. This information may be available from a state database.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetCwaRncComplianceGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of RNC compliance statuses for 12 quarters </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetCwaRncComplianceGet200Response dfrRestServicesGetCwaRncComplianceGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetCwaRncComplianceGet200Response> localVarResp = dfrRestServicesGetCwaRncComplianceGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report CWA RNC Compliance Service
     * This procedure obtains data for the CWA SNC/RNC History section located in the Three Year ompliance Status by Quarter portion of the DFR. Valid Compliance Statuses are as follows. &gt; S &#x3D; SNC/Category I - an enforcement action has been issued, and the facility is not meeting its compliance schedule &gt; E &#x3D; SNC/Category I - effluent violations of monthly average limits (Technical Review Criteria and chronic) &gt; X &#x3D; SNC/Category I - effluent violations of non-monthly average limits (Technical Review Criteria and chronic) &gt; T &#x3D; SNC/Category I - compliance schedule reporting violation &gt; D &#x3D; SNC/Category I - reporting violation - nonreceipt of DMR &gt; N &#x3D; RNC/Category II - reportable non-compliance &gt; P &#x3D; Resolved Pending - an enforcement action has been issued, and facility compliance with the action is pending final completion &gt; R &#x3D; Resolved - the facility has returned to compliance with its permit conditions, either with or without issuance of an enforcement action &gt; C &#x3D; Not considered in RNC/SNC based on manual review of data by state or EPA region. This manual override status is also indicated by a superscripted \&quot;m\&quot;. &gt; Blank &#x3D; Not considered in RNC/SNC &gt; N/A &#x3D; EPA&#39;s data system is not able to determine the facility-level compliance status based upon the information available. This information may be available from a state database.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetCwaRncComplianceGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of RNC compliance statuses for 12 quarters </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetCwaRncComplianceGet200Response> dfrRestServicesGetCwaRncComplianceGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetCwaRncComplianceGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaRncComplianceGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report CWA RNC Compliance Service (asynchronously)
     * This procedure obtains data for the CWA SNC/RNC History section located in the Three Year ompliance Status by Quarter portion of the DFR. Valid Compliance Statuses are as follows. &gt; S &#x3D; SNC/Category I - an enforcement action has been issued, and the facility is not meeting its compliance schedule &gt; E &#x3D; SNC/Category I - effluent violations of monthly average limits (Technical Review Criteria and chronic) &gt; X &#x3D; SNC/Category I - effluent violations of non-monthly average limits (Technical Review Criteria and chronic) &gt; T &#x3D; SNC/Category I - compliance schedule reporting violation &gt; D &#x3D; SNC/Category I - reporting violation - nonreceipt of DMR &gt; N &#x3D; RNC/Category II - reportable non-compliance &gt; P &#x3D; Resolved Pending - an enforcement action has been issued, and facility compliance with the action is pending final completion &gt; R &#x3D; Resolved - the facility has returned to compliance with its permit conditions, either with or without issuance of an enforcement action &gt; C &#x3D; Not considered in RNC/SNC based on manual review of data by state or EPA region. This manual override status is also indicated by a superscripted \&quot;m\&quot;. &gt; Blank &#x3D; Not considered in RNC/SNC &gt; N/A &#x3D; EPA&#39;s data system is not able to determine the facility-level compliance status based upon the information available. This information may be available from a state database.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of RNC compliance statuses for 12 quarters </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaRncComplianceGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetCwaRncComplianceGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetCwaRncComplianceGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaRncComplianceGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetCwaRncCompliancePost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of RNC compliance statuses for 12 quarters </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaRncCompliancePostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_cwa_rnc_compliance";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetCwaRncCompliancePostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaRncCompliancePost(Async)");
        }

        return dfrRestServicesGetCwaRncCompliancePostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report CWA RNC Compliance Service
     * This procedure obtains data for the CWA SNC/RNC History section located in the Three Year ompliance Status by Quarter portion of the DFR. Valid Compliance Statuses are as follows. &gt; S &#x3D; SNC/Category I - an enforcement action has been issued, and the facility is not meeting its compliance schedule &gt; E &#x3D; SNC/Category I - effluent violations of monthly average limits (Technical Review Criteria and chronic) &gt; X &#x3D; SNC/Category I - effluent violations of non-monthly average limits (Technical Review Criteria and chronic) &gt; T &#x3D; SNC/Category I - compliance schedule reporting violation &gt; D &#x3D; SNC/Category I - reporting violation - nonreceipt of DMR &gt; N &#x3D; RNC/Category II - reportable non-compliance &gt; P &#x3D; Resolved Pending - an enforcement action has been issued, and facility compliance with the action is pending final completion &gt; R &#x3D; Resolved - the facility has returned to compliance with its permit conditions, either with or without issuance of an enforcement action &gt; C &#x3D; Not considered in RNC/SNC based on manual review of data by state or EPA region. This manual override status is also indicated by a superscripted \&quot;m\&quot;. &gt; Blank &#x3D; Not considered in RNC/SNC &gt; N/A &#x3D; EPA&#39;s data system is not able to determine the facility-level compliance status based upon the information available. This information may be available from a state database.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetCwaRncComplianceGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of RNC compliance statuses for 12 quarters </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetCwaRncComplianceGet200Response dfrRestServicesGetCwaRncCompliancePost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetCwaRncComplianceGet200Response> localVarResp = dfrRestServicesGetCwaRncCompliancePostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report CWA RNC Compliance Service
     * This procedure obtains data for the CWA SNC/RNC History section located in the Three Year ompliance Status by Quarter portion of the DFR. Valid Compliance Statuses are as follows. &gt; S &#x3D; SNC/Category I - an enforcement action has been issued, and the facility is not meeting its compliance schedule &gt; E &#x3D; SNC/Category I - effluent violations of monthly average limits (Technical Review Criteria and chronic) &gt; X &#x3D; SNC/Category I - effluent violations of non-monthly average limits (Technical Review Criteria and chronic) &gt; T &#x3D; SNC/Category I - compliance schedule reporting violation &gt; D &#x3D; SNC/Category I - reporting violation - nonreceipt of DMR &gt; N &#x3D; RNC/Category II - reportable non-compliance &gt; P &#x3D; Resolved Pending - an enforcement action has been issued, and facility compliance with the action is pending final completion &gt; R &#x3D; Resolved - the facility has returned to compliance with its permit conditions, either with or without issuance of an enforcement action &gt; C &#x3D; Not considered in RNC/SNC based on manual review of data by state or EPA region. This manual override status is also indicated by a superscripted \&quot;m\&quot;. &gt; Blank &#x3D; Not considered in RNC/SNC &gt; N/A &#x3D; EPA&#39;s data system is not able to determine the facility-level compliance status based upon the information available. This information may be available from a state database.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetCwaRncComplianceGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of RNC compliance statuses for 12 quarters </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetCwaRncComplianceGet200Response> dfrRestServicesGetCwaRncCompliancePostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetCwaRncCompliancePostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaRncComplianceGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report CWA RNC Compliance Service (asynchronously)
     * This procedure obtains data for the CWA SNC/RNC History section located in the Three Year ompliance Status by Quarter portion of the DFR. Valid Compliance Statuses are as follows. &gt; S &#x3D; SNC/Category I - an enforcement action has been issued, and the facility is not meeting its compliance schedule &gt; E &#x3D; SNC/Category I - effluent violations of monthly average limits (Technical Review Criteria and chronic) &gt; X &#x3D; SNC/Category I - effluent violations of non-monthly average limits (Technical Review Criteria and chronic) &gt; T &#x3D; SNC/Category I - compliance schedule reporting violation &gt; D &#x3D; SNC/Category I - reporting violation - nonreceipt of DMR &gt; N &#x3D; RNC/Category II - reportable non-compliance &gt; P &#x3D; Resolved Pending - an enforcement action has been issued, and facility compliance with the action is pending final completion &gt; R &#x3D; Resolved - the facility has returned to compliance with its permit conditions, either with or without issuance of an enforcement action &gt; C &#x3D; Not considered in RNC/SNC based on manual review of data by state or EPA region. This manual override status is also indicated by a superscripted \&quot;m\&quot;. &gt; Blank &#x3D; Not considered in RNC/SNC &gt; N/A &#x3D; EPA&#39;s data system is not able to determine the facility-level compliance status based upon the information available. This information may be available from a state database.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of RNC compliance statuses for 12 quarters </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaRncCompliancePostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetCwaRncComplianceGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetCwaRncCompliancePostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaRncComplianceGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetCwaSeComplianceGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of single-event statuses for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaSeComplianceGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_cwa_se_compliance";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetCwaSeComplianceGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaSeComplianceGet(Async)");
        }

        return dfrRestServicesGetCwaSeComplianceGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report CWA SEV Compliance Service
     * This procedure obtains data for the CWA Single Event Violations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetCwaSeComplianceGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of single-event statuses for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetCwaSeComplianceGet200Response dfrRestServicesGetCwaSeComplianceGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetCwaSeComplianceGet200Response> localVarResp = dfrRestServicesGetCwaSeComplianceGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report CWA SEV Compliance Service
     * This procedure obtains data for the CWA Single Event Violations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetCwaSeComplianceGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of single-event statuses for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetCwaSeComplianceGet200Response> dfrRestServicesGetCwaSeComplianceGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetCwaSeComplianceGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaSeComplianceGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report CWA SEV Compliance Service (asynchronously)
     * This procedure obtains data for the CWA Single Event Violations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of single-event statuses for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaSeComplianceGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetCwaSeComplianceGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetCwaSeComplianceGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaSeComplianceGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetCwaSeCompliancePost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of single-event statuses for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaSeCompliancePostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_cwa_se_compliance";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetCwaSeCompliancePostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaSeCompliancePost(Async)");
        }

        return dfrRestServicesGetCwaSeCompliancePostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report CWA SEV Compliance Service
     * This procedure obtains data for the CWA Single Event Violations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetCwaSeComplianceGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of single-event statuses for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetCwaSeComplianceGet200Response dfrRestServicesGetCwaSeCompliancePost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetCwaSeComplianceGet200Response> localVarResp = dfrRestServicesGetCwaSeCompliancePostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report CWA SEV Compliance Service
     * This procedure obtains data for the CWA Single Event Violations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetCwaSeComplianceGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of single-event statuses for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetCwaSeComplianceGet200Response> dfrRestServicesGetCwaSeCompliancePostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetCwaSeCompliancePostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaSeComplianceGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report CWA SEV Compliance Service (asynchronously)
     * This procedure obtains data for the CWA Single Event Violations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of single-event statuses for 13 quarters. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetCwaSeCompliancePostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetCwaSeComplianceGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetCwaSeCompliancePostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetCwaSeComplianceGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetD80d90sDetailsGet
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pNpdesId The NPDES_ID for the NPDES Permit to download DMR D80 and D90 Non-Receipt violations. (optional)
     * @param pMissinglate For the D80.D90 download, identifies whether or not MISSINGviolations are downloaded or LATE violations are downloaded.  Valid values are:  MiISSING and LATE. (optional)
     * @param pQmtype Identifies the time frame type, month or quarter, for the D80/D90 download. (optional)
     * @param pQmvalue A number between 1 and 39 that identifies the specific month or quarter for the D80/D90 violation download. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information for  D80/D90 violations. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetD80d90sDetailsGetCall(String output, String pNpdesId, String pMissinglate, String pQmtype, String pQmvalue, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_d80d90s_details";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pNpdesId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_npdes_id", pNpdesId));
        }

        if (pMissinglate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_missinglate", pMissinglate));
        }

        if (pQmtype != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_qmtype", pQmtype));
        }

        if (pQmvalue != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_qmvalue", pQmvalue));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetD80d90sDetailsGetValidateBeforeCall(String output, String pNpdesId, String pMissinglate, String pQmtype, String pQmvalue, String paramCallback, final ApiCallback _callback) throws ApiException {
        return dfrRestServicesGetD80d90sDetailsGetCall(output, pNpdesId, pMissinglate, pQmtype, pQmvalue, paramCallback, _callback);

    }

    /**
     * Display detailed D80/D90 information for the facility for a given quarter or month
     * Displays detailed D80/D90 Effluent Non Reporting  information from EPA&#39;s ICIS NPDES system for the facility for a given quarter or month.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pNpdesId The NPDES_ID for the NPDES Permit to download DMR D80 and D90 Non-Receipt violations. (optional)
     * @param pMissinglate For the D80.D90 download, identifies whether or not MISSINGviolations are downloaded or LATE violations are downloaded.  Valid values are:  MiISSING and LATE. (optional)
     * @param pQmtype Identifies the time frame type, month or quarter, for the D80/D90 download. (optional)
     * @param pQmvalue A number between 1 and 39 that identifies the specific month or quarter for the D80/D90 violation download. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetD80d90sDetailsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information for  D80/D90 violations. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetD80d90sDetailsGet200Response dfrRestServicesGetD80d90sDetailsGet(String output, String pNpdesId, String pMissinglate, String pQmtype, String pQmvalue, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetD80d90sDetailsGet200Response> localVarResp = dfrRestServicesGetD80d90sDetailsGetWithHttpInfo(output, pNpdesId, pMissinglate, pQmtype, pQmvalue, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Display detailed D80/D90 information for the facility for a given quarter or month
     * Displays detailed D80/D90 Effluent Non Reporting  information from EPA&#39;s ICIS NPDES system for the facility for a given quarter or month.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pNpdesId The NPDES_ID for the NPDES Permit to download DMR D80 and D90 Non-Receipt violations. (optional)
     * @param pMissinglate For the D80.D90 download, identifies whether or not MISSINGviolations are downloaded or LATE violations are downloaded.  Valid values are:  MiISSING and LATE. (optional)
     * @param pQmtype Identifies the time frame type, month or quarter, for the D80/D90 download. (optional)
     * @param pQmvalue A number between 1 and 39 that identifies the specific month or quarter for the D80/D90 violation download. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetD80d90sDetailsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information for  D80/D90 violations. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetD80d90sDetailsGet200Response> dfrRestServicesGetD80d90sDetailsGetWithHttpInfo(String output, String pNpdesId, String pMissinglate, String pQmtype, String pQmvalue, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetD80d90sDetailsGetValidateBeforeCall(output, pNpdesId, pMissinglate, pQmtype, pQmvalue, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetD80d90sDetailsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Display detailed D80/D90 information for the facility for a given quarter or month (asynchronously)
     * Displays detailed D80/D90 Effluent Non Reporting  information from EPA&#39;s ICIS NPDES system for the facility for a given quarter or month.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pNpdesId The NPDES_ID for the NPDES Permit to download DMR D80 and D90 Non-Receipt violations. (optional)
     * @param pMissinglate For the D80.D90 download, identifies whether or not MISSINGviolations are downloaded or LATE violations are downloaded.  Valid values are:  MiISSING and LATE. (optional)
     * @param pQmtype Identifies the time frame type, month or quarter, for the D80/D90 download. (optional)
     * @param pQmvalue A number between 1 and 39 that identifies the specific month or quarter for the D80/D90 violation download. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information for  D80/D90 violations. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetD80d90sDetailsGetAsync(String output, String pNpdesId, String pMissinglate, String pQmtype, String pQmvalue, String paramCallback, final ApiCallback<DfrRestServicesGetD80d90sDetailsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetD80d90sDetailsGetValidateBeforeCall(output, pNpdesId, pMissinglate, pQmtype, pQmvalue, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetD80d90sDetailsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetD80d90sDetailsPost
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pNpdesId The NPDES_ID for the NPDES Permit to download DMR D80 and D90 Non-Receipt violations. (optional)
     * @param pMissinglate For the D80.D90 download, identifies whether or not MISSINGviolations are downloaded or LATE violations are downloaded.  Valid values are:  MiISSING and LATE. (optional)
     * @param pQmtype Identifies the time frame type, month or quarter, for the D80/D90 download. (optional)
     * @param pQmvalue A number between 1 and 39 that identifies the specific month or quarter for the D80/D90 violation download. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information for  D80/D90 violations. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetD80d90sDetailsPostCall(String output, String pNpdesId, String pMissinglate, String pQmtype, String pQmvalue, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_d80d90s_details";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pNpdesId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_npdes_id", pNpdesId));
        }

        if (pMissinglate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_missinglate", pMissinglate));
        }

        if (pQmtype != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_qmtype", pQmtype));
        }

        if (pQmvalue != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_qmvalue", pQmvalue));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetD80d90sDetailsPostValidateBeforeCall(String output, String pNpdesId, String pMissinglate, String pQmtype, String pQmvalue, String paramCallback, final ApiCallback _callback) throws ApiException {
        return dfrRestServicesGetD80d90sDetailsPostCall(output, pNpdesId, pMissinglate, pQmtype, pQmvalue, paramCallback, _callback);

    }

    /**
     * Display detailed D80/D90 information for the facility for a given quarter or month
     * Displays detailed D80/D90 Effluent Non Reporting  information from EPA&#39;s ICIS NPDES system for the facility for a given quarter or month.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pNpdesId The NPDES_ID for the NPDES Permit to download DMR D80 and D90 Non-Receipt violations. (optional)
     * @param pMissinglate For the D80.D90 download, identifies whether or not MISSINGviolations are downloaded or LATE violations are downloaded.  Valid values are:  MiISSING and LATE. (optional)
     * @param pQmtype Identifies the time frame type, month or quarter, for the D80/D90 download. (optional)
     * @param pQmvalue A number between 1 and 39 that identifies the specific month or quarter for the D80/D90 violation download. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetD80d90sDetailsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information for  D80/D90 violations. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetD80d90sDetailsGet200Response dfrRestServicesGetD80d90sDetailsPost(String output, String pNpdesId, String pMissinglate, String pQmtype, String pQmvalue, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetD80d90sDetailsGet200Response> localVarResp = dfrRestServicesGetD80d90sDetailsPostWithHttpInfo(output, pNpdesId, pMissinglate, pQmtype, pQmvalue, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Display detailed D80/D90 information for the facility for a given quarter or month
     * Displays detailed D80/D90 Effluent Non Reporting  information from EPA&#39;s ICIS NPDES system for the facility for a given quarter or month.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pNpdesId The NPDES_ID for the NPDES Permit to download DMR D80 and D90 Non-Receipt violations. (optional)
     * @param pMissinglate For the D80.D90 download, identifies whether or not MISSINGviolations are downloaded or LATE violations are downloaded.  Valid values are:  MiISSING and LATE. (optional)
     * @param pQmtype Identifies the time frame type, month or quarter, for the D80/D90 download. (optional)
     * @param pQmvalue A number between 1 and 39 that identifies the specific month or quarter for the D80/D90 violation download. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetD80d90sDetailsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information for  D80/D90 violations. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetD80d90sDetailsGet200Response> dfrRestServicesGetD80d90sDetailsPostWithHttpInfo(String output, String pNpdesId, String pMissinglate, String pQmtype, String pQmvalue, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetD80d90sDetailsPostValidateBeforeCall(output, pNpdesId, pMissinglate, pQmtype, pQmvalue, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetD80d90sDetailsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Display detailed D80/D90 information for the facility for a given quarter or month (asynchronously)
     * Displays detailed D80/D90 Effluent Non Reporting  information from EPA&#39;s ICIS NPDES system for the facility for a given quarter or month.
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pNpdesId The NPDES_ID for the NPDES Permit to download DMR D80 and D90 Non-Receipt violations. (optional)
     * @param pMissinglate For the D80.D90 download, identifies whether or not MISSINGviolations are downloaded or LATE violations are downloaded.  Valid values are:  MiISSING and LATE. (optional)
     * @param pQmtype Identifies the time frame type, month or quarter, for the D80/D90 download. (optional)
     * @param pQmvalue A number between 1 and 39 that identifies the specific month or quarter for the D80/D90 violation download. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information for  D80/D90 violations. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetD80d90sDetailsPostAsync(String output, String pNpdesId, String pMissinglate, String pQmtype, String pQmvalue, String paramCallback, final ApiCallback<DfrRestServicesGetD80d90sDetailsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetD80d90sDetailsPostValidateBeforeCall(output, pNpdesId, pMissinglate, pQmtype, pQmvalue, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetD80d90sDetailsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetDemographicsByIdGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes demographics </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetDemographicsByIdGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_demographics_by_id";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetDemographicsByIdGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetDemographicsByIdGet(Async)");
        }

        return dfrRestServicesGetDemographicsByIdGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Displays 2010 Census and ACS demographics by Facility ID
     * Displays precalculated 2010 Census and American Community Survey demographic information for a provided facility identifier.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetDemographicsByIdGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes demographics </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetDemographicsByIdGet200Response dfrRestServicesGetDemographicsByIdGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetDemographicsByIdGet200Response> localVarResp = dfrRestServicesGetDemographicsByIdGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Displays 2010 Census and ACS demographics by Facility ID
     * Displays precalculated 2010 Census and American Community Survey demographic information for a provided facility identifier.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetDemographicsByIdGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes demographics </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetDemographicsByIdGet200Response> dfrRestServicesGetDemographicsByIdGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetDemographicsByIdGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetDemographicsByIdGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Displays 2010 Census and ACS demographics by Facility ID (asynchronously)
     * Displays precalculated 2010 Census and American Community Survey demographic information for a provided facility identifier.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes demographics </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetDemographicsByIdGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetDemographicsByIdGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetDemographicsByIdGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetDemographicsByIdGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetDemographicsByIdPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes demographics </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetDemographicsByIdPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_demographics_by_id";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetDemographicsByIdPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetDemographicsByIdPost(Async)");
        }

        return dfrRestServicesGetDemographicsByIdPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Displays 2010 Census and ACS demographics by Facility ID
     * Displays precalculated 2010 Census and American Community Survey demographic information for a provided facility identifier.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetDemographicsByIdGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes demographics </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetDemographicsByIdGet200Response dfrRestServicesGetDemographicsByIdPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetDemographicsByIdGet200Response> localVarResp = dfrRestServicesGetDemographicsByIdPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Displays 2010 Census and ACS demographics by Facility ID
     * Displays precalculated 2010 Census and American Community Survey demographic information for a provided facility identifier.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetDemographicsByIdGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes demographics </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetDemographicsByIdGet200Response> dfrRestServicesGetDemographicsByIdPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetDemographicsByIdPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetDemographicsByIdGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Displays 2010 Census and ACS demographics by Facility ID (asynchronously)
     * Displays precalculated 2010 Census and American Community Survey demographic information for a provided facility identifier.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes demographics </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetDemographicsByIdPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetDemographicsByIdGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetDemographicsByIdPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetDemographicsByIdGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetDfrGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pSystem System Acronym Filter.  Enter a single system acronym to filter results. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns a complex object (Detailed Facility Report) composed of objects from all of the other procedures. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetDfrGetCall(String pId, String output, String pSystem, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_dfr";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (pSystem != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_system", pSystem));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetDfrGetValidateBeforeCall(String pId, String output, String pSystem, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetDfrGet(Async)");
        }

        return dfrRestServicesGetDfrGetCall(pId, output, pSystem, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report Service
     * This procedure is the overall service for the Detailed Facility Report. It returns all of the data displayed in the DFR web report by invoking individual procedures that each return a targeted portion of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pSystem System Acronym Filter.  Enter a single system acronym to filter results. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetDfrGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns a complex object (Detailed Facility Report) composed of objects from all of the other procedures. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetDfrGet200Response dfrRestServicesGetDfrGet(String pId, String output, String pSystem, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetDfrGet200Response> localVarResp = dfrRestServicesGetDfrGetWithHttpInfo(pId, output, pSystem, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report Service
     * This procedure is the overall service for the Detailed Facility Report. It returns all of the data displayed in the DFR web report by invoking individual procedures that each return a targeted portion of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pSystem System Acronym Filter.  Enter a single system acronym to filter results. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetDfrGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns a complex object (Detailed Facility Report) composed of objects from all of the other procedures. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetDfrGet200Response> dfrRestServicesGetDfrGetWithHttpInfo(String pId, String output, String pSystem, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetDfrGetValidateBeforeCall(pId, output, pSystem, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetDfrGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report Service (asynchronously)
     * This procedure is the overall service for the Detailed Facility Report. It returns all of the data displayed in the DFR web report by invoking individual procedures that each return a targeted portion of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pSystem System Acronym Filter.  Enter a single system acronym to filter results. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns a complex object (Detailed Facility Report) composed of objects from all of the other procedures. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetDfrGetAsync(String pId, String output, String pSystem, String paramCallback, final ApiCallback<DfrRestServicesGetDfrGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetDfrGetValidateBeforeCall(pId, output, pSystem, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetDfrGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetDfrPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pSystem System Acronym Filter.  Enter a single system acronym to filter results. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns a complex object (Detailed Facility Report) composed of objects from all of the other procedures. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetDfrPostCall(String pId, String output, String pSystem, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_dfr";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (pSystem != null) {
            localVarFormParams.put("p_system", pSystem);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetDfrPostValidateBeforeCall(String pId, String output, String pSystem, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetDfrPost(Async)");
        }

        return dfrRestServicesGetDfrPostCall(pId, output, pSystem, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report Service
     * This procedure is the overall service for the Detailed Facility Report. It returns all of the data displayed in the DFR web report by invoking individual procedures that each return a targeted portion of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pSystem System Acronym Filter.  Enter a single system acronym to filter results. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetDfrGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns a complex object (Detailed Facility Report) composed of objects from all of the other procedures. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetDfrGet200Response dfrRestServicesGetDfrPost(String pId, String output, String pSystem, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetDfrGet200Response> localVarResp = dfrRestServicesGetDfrPostWithHttpInfo(pId, output, pSystem, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report Service
     * This procedure is the overall service for the Detailed Facility Report. It returns all of the data displayed in the DFR web report by invoking individual procedures that each return a targeted portion of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pSystem System Acronym Filter.  Enter a single system acronym to filter results. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetDfrGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns a complex object (Detailed Facility Report) composed of objects from all of the other procedures. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetDfrGet200Response> dfrRestServicesGetDfrPostWithHttpInfo(String pId, String output, String pSystem, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetDfrPostValidateBeforeCall(pId, output, pSystem, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetDfrGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report Service (asynchronously)
     * This procedure is the overall service for the Detailed Facility Report. It returns all of the data displayed in the DFR web report by invoking individual procedures that each return a targeted portion of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param pSystem System Acronym Filter.  Enter a single system acronym to filter results. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns a complex object (Detailed Facility Report) composed of objects from all of the other procedures. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetDfrPostAsync(String pId, String output, String pSystem, String paramCallback, final ApiCallback<DfrRestServicesGetDfrGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetDfrPostValidateBeforeCall(pId, output, pSystem, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetDfrGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetEjscreenIndexesGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetEjscreenIndexesGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_ejscreen_indexes";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetEjscreenIndexesGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetEjscreenIndexesGet(Async)");
        }

        return dfrRestServicesGetEjscreenIndexesGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report EJScreen Indexes Service
     * 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetEjscreenIndexesGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetEjscreenIndexesGet200Response dfrRestServicesGetEjscreenIndexesGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetEjscreenIndexesGet200Response> localVarResp = dfrRestServicesGetEjscreenIndexesGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report EJScreen Indexes Service
     * 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetEjscreenIndexesGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetEjscreenIndexesGet200Response> dfrRestServicesGetEjscreenIndexesGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetEjscreenIndexesGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetEjscreenIndexesGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report EJScreen Indexes Service (asynchronously)
     * 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetEjscreenIndexesGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetEjscreenIndexesGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetEjscreenIndexesGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetEjscreenIndexesGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetEjscreenIndexesPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetEjscreenIndexesPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_ejscreen_indexes";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetEjscreenIndexesPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetEjscreenIndexesPost(Async)");
        }

        return dfrRestServicesGetEjscreenIndexesPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report EJScreen Indexes Service
     * 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetEjscreenIndexesGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetEjscreenIndexesGet200Response dfrRestServicesGetEjscreenIndexesPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetEjscreenIndexesGet200Response> localVarResp = dfrRestServicesGetEjscreenIndexesPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report EJScreen Indexes Service
     * 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetEjscreenIndexesGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetEjscreenIndexesGet200Response> dfrRestServicesGetEjscreenIndexesPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetEjscreenIndexesPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetEjscreenIndexesGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report EJScreen Indexes Service (asynchronously)
     * 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetEjscreenIndexesPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetEjscreenIndexesGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetEjscreenIndexesPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetEjscreenIndexesGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetEnforcementSummaryGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of enforcement compliance summaries </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetEnforcementSummaryGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_enforcement_summary";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetEnforcementSummaryGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetEnforcementSummaryGet(Async)");
        }

        return dfrRestServicesGetEnforcementSummaryGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report Enforcement Summary Service
     * This procedure obtains data for the Enforcement and Compliance Summary in the Facility Summary section of the Detailed Facility Report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetEnforcementSummaryGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of enforcement compliance summaries </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetEnforcementSummaryGet200Response dfrRestServicesGetEnforcementSummaryGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetEnforcementSummaryGet200Response> localVarResp = dfrRestServicesGetEnforcementSummaryGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report Enforcement Summary Service
     * This procedure obtains data for the Enforcement and Compliance Summary in the Facility Summary section of the Detailed Facility Report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetEnforcementSummaryGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of enforcement compliance summaries </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetEnforcementSummaryGet200Response> dfrRestServicesGetEnforcementSummaryGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetEnforcementSummaryGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetEnforcementSummaryGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report Enforcement Summary Service (asynchronously)
     * This procedure obtains data for the Enforcement and Compliance Summary in the Facility Summary section of the Detailed Facility Report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of enforcement compliance summaries </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetEnforcementSummaryGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetEnforcementSummaryGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetEnforcementSummaryGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetEnforcementSummaryGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetEnforcementSummaryPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of enforcement compliance summaries </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetEnforcementSummaryPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_enforcement_summary";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetEnforcementSummaryPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetEnforcementSummaryPost(Async)");
        }

        return dfrRestServicesGetEnforcementSummaryPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report Enforcement Summary Service
     * This procedure obtains data for the Enforcement and Compliance Summary in the Facility Summary section of the Detailed Facility Report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetEnforcementSummaryGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of enforcement compliance summaries </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetEnforcementSummaryGet200Response dfrRestServicesGetEnforcementSummaryPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetEnforcementSummaryGet200Response> localVarResp = dfrRestServicesGetEnforcementSummaryPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report Enforcement Summary Service
     * This procedure obtains data for the Enforcement and Compliance Summary in the Facility Summary section of the Detailed Facility Report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetEnforcementSummaryGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of enforcement compliance summaries </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetEnforcementSummaryGet200Response> dfrRestServicesGetEnforcementSummaryPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetEnforcementSummaryPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetEnforcementSummaryGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report Enforcement Summary Service (asynchronously)
     * This procedure obtains data for the Enforcement and Compliance Summary in the Facility Summary section of the Detailed Facility Report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of enforcement compliance summaries </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetEnforcementSummaryPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetEnforcementSummaryGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetEnforcementSummaryPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetEnforcementSummaryGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetExtractDatesGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object  that includes information on DFR system extract dates. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetExtractDatesGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_extract_dates";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetExtractDatesGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetExtractDatesGet(Async)");
        }

        return dfrRestServicesGetExtractDatesGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Displays the dates that data was extracted from native EPA systems for the DFR.
     * By EPA System, displays the extract dates that data was extracted for the DFR from multiple EPA computer systems.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetExtractDatesGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object  that includes information on DFR system extract dates. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetExtractDatesGet200Response dfrRestServicesGetExtractDatesGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetExtractDatesGet200Response> localVarResp = dfrRestServicesGetExtractDatesGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Displays the dates that data was extracted from native EPA systems for the DFR.
     * By EPA System, displays the extract dates that data was extracted for the DFR from multiple EPA computer systems.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetExtractDatesGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object  that includes information on DFR system extract dates. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetExtractDatesGet200Response> dfrRestServicesGetExtractDatesGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetExtractDatesGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetExtractDatesGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Displays the dates that data was extracted from native EPA systems for the DFR. (asynchronously)
     * By EPA System, displays the extract dates that data was extracted for the DFR from multiple EPA computer systems.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object  that includes information on DFR system extract dates. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetExtractDatesGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetExtractDatesGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetExtractDatesGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetExtractDatesGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetExtractDatesPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object  that includes information on DFR system extract dates. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetExtractDatesPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_extract_dates";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetExtractDatesPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetExtractDatesPost(Async)");
        }

        return dfrRestServicesGetExtractDatesPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Displays the dates that data was extracted from native EPA systems for the DFR.
     * By EPA System, displays the extract dates that data was extracted for the DFR from multiple EPA computer systems.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetExtractDatesGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object  that includes information on DFR system extract dates. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetExtractDatesGet200Response dfrRestServicesGetExtractDatesPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetExtractDatesGet200Response> localVarResp = dfrRestServicesGetExtractDatesPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Displays the dates that data was extracted from native EPA systems for the DFR.
     * By EPA System, displays the extract dates that data was extracted for the DFR from multiple EPA computer systems.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetExtractDatesGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object  that includes information on DFR system extract dates. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetExtractDatesGet200Response> dfrRestServicesGetExtractDatesPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetExtractDatesPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetExtractDatesGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Displays the dates that data was extracted from native EPA systems for the DFR. (asynchronously)
     * By EPA System, displays the extract dates that data was extracted for the DFR from multiple EPA computer systems.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object  that includes information on DFR system extract dates. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetExtractDatesPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetExtractDatesGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetExtractDatesPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetExtractDatesGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetFormalActionsGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of formal actions. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetFormalActionsGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_formal_actions";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetFormalActionsGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetFormalActionsGet(Async)");
        }

        return dfrRestServicesGetFormalActionsGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report Formal Actions Service
     * This procedure obtains data for the Formal Enforcement Actions section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetFormalActionsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of formal actions. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetFormalActionsGet200Response dfrRestServicesGetFormalActionsGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetFormalActionsGet200Response> localVarResp = dfrRestServicesGetFormalActionsGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report Formal Actions Service
     * This procedure obtains data for the Formal Enforcement Actions section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetFormalActionsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of formal actions. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetFormalActionsGet200Response> dfrRestServicesGetFormalActionsGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetFormalActionsGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetFormalActionsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report Formal Actions Service (asynchronously)
     * This procedure obtains data for the Formal Enforcement Actions section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of formal actions. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetFormalActionsGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetFormalActionsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetFormalActionsGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetFormalActionsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetFormalActionsPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of formal actions. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetFormalActionsPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_formal_actions";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetFormalActionsPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetFormalActionsPost(Async)");
        }

        return dfrRestServicesGetFormalActionsPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report Formal Actions Service
     * This procedure obtains data for the Formal Enforcement Actions section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetFormalActionsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of formal actions. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetFormalActionsGet200Response dfrRestServicesGetFormalActionsPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetFormalActionsGet200Response> localVarResp = dfrRestServicesGetFormalActionsPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report Formal Actions Service
     * This procedure obtains data for the Formal Enforcement Actions section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetFormalActionsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of formal actions. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetFormalActionsGet200Response> dfrRestServicesGetFormalActionsPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetFormalActionsPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetFormalActionsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report Formal Actions Service (asynchronously)
     * This procedure obtains data for the Formal Enforcement Actions section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of formal actions. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetFormalActionsPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetFormalActionsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetFormalActionsPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetFormalActionsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetIcisFormalActionsGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of ICIS formal actions. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetIcisFormalActionsGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_icis_formal_actions";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetIcisFormalActionsGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetIcisFormalActionsGet(Async)");
        }

        return dfrRestServicesGetIcisFormalActionsGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report ICIS Formal Actions Service
     * This procedure obtains data for the Integrated Compliance Information System, Formal Enforcement Actions section of the DFR. 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetIcisFormalActionsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of ICIS formal actions. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetIcisFormalActionsGet200Response dfrRestServicesGetIcisFormalActionsGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetIcisFormalActionsGet200Response> localVarResp = dfrRestServicesGetIcisFormalActionsGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report ICIS Formal Actions Service
     * This procedure obtains data for the Integrated Compliance Information System, Formal Enforcement Actions section of the DFR. 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetIcisFormalActionsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of ICIS formal actions. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetIcisFormalActionsGet200Response> dfrRestServicesGetIcisFormalActionsGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetIcisFormalActionsGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetIcisFormalActionsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report ICIS Formal Actions Service (asynchronously)
     * This procedure obtains data for the Integrated Compliance Information System, Formal Enforcement Actions section of the DFR. 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of ICIS formal actions. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetIcisFormalActionsGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetIcisFormalActionsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetIcisFormalActionsGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetIcisFormalActionsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetIcisFormalActionsPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of ICIS formal actions. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetIcisFormalActionsPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_icis_formal_actions";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetIcisFormalActionsPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetIcisFormalActionsPost(Async)");
        }

        return dfrRestServicesGetIcisFormalActionsPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report ICIS Formal Actions Service
     * This procedure obtains data for the Integrated Compliance Information System, Formal Enforcement Actions section of the DFR. 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetIcisFormalActionsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of ICIS formal actions. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetIcisFormalActionsGet200Response dfrRestServicesGetIcisFormalActionsPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetIcisFormalActionsGet200Response> localVarResp = dfrRestServicesGetIcisFormalActionsPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report ICIS Formal Actions Service
     * This procedure obtains data for the Integrated Compliance Information System, Formal Enforcement Actions section of the DFR. 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetIcisFormalActionsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of ICIS formal actions. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetIcisFormalActionsGet200Response> dfrRestServicesGetIcisFormalActionsPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetIcisFormalActionsPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetIcisFormalActionsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report ICIS Formal Actions Service (asynchronously)
     * This procedure obtains data for the Integrated Compliance Information System, Formal Enforcement Actions section of the DFR. 
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of ICIS formal actions. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetIcisFormalActionsPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetIcisFormalActionsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetIcisFormalActionsPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetIcisFormalActionsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetInspectionsGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of inspection enforcement summaries </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetInspectionsGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_inspections";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetInspectionsGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetInspectionsGet(Async)");
        }

        return dfrRestServicesGetInspectionsGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report Inspections Summary Service
     * This procedure obtains data for Enforcement and Compliance Summary Section of the Detailed Facility report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetInspectionsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of inspection enforcement summaries </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetInspectionsGet200Response dfrRestServicesGetInspectionsGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetInspectionsGet200Response> localVarResp = dfrRestServicesGetInspectionsGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report Inspections Summary Service
     * This procedure obtains data for Enforcement and Compliance Summary Section of the Detailed Facility report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetInspectionsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of inspection enforcement summaries </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetInspectionsGet200Response> dfrRestServicesGetInspectionsGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetInspectionsGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetInspectionsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report Inspections Summary Service (asynchronously)
     * This procedure obtains data for Enforcement and Compliance Summary Section of the Detailed Facility report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of inspection enforcement summaries </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetInspectionsGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetInspectionsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetInspectionsGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetInspectionsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetInspectionsPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of inspection enforcement summaries </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetInspectionsPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_inspections";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetInspectionsPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetInspectionsPost(Async)");
        }

        return dfrRestServicesGetInspectionsPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report Inspections Summary Service
     * This procedure obtains data for Enforcement and Compliance Summary Section of the Detailed Facility report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetInspectionsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of inspection enforcement summaries </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetInspectionsGet200Response dfrRestServicesGetInspectionsPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetInspectionsGet200Response> localVarResp = dfrRestServicesGetInspectionsPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report Inspections Summary Service
     * This procedure obtains data for Enforcement and Compliance Summary Section of the Detailed Facility report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetInspectionsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of inspection enforcement summaries </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetInspectionsGet200Response> dfrRestServicesGetInspectionsPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetInspectionsPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetInspectionsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report Inspections Summary Service (asynchronously)
     * This procedure obtains data for Enforcement and Compliance Summary Section of the Detailed Facility report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of inspection enforcement summaries </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetInspectionsPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetInspectionsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetInspectionsPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetInspectionsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetMapGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information for displaying a map </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetMapGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_map";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetMapGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetMapGet(Async)");
        }

        return dfrRestServicesGetMapGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report Map Service
     * Returns an object with the facility&#39;s latitude and longitude coordinates.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetMapGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information for displaying a map </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetMapGet200Response dfrRestServicesGetMapGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetMapGet200Response> localVarResp = dfrRestServicesGetMapGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report Map Service
     * Returns an object with the facility&#39;s latitude and longitude coordinates.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetMapGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information for displaying a map </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetMapGet200Response> dfrRestServicesGetMapGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetMapGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetMapGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report Map Service (asynchronously)
     * Returns an object with the facility&#39;s latitude and longitude coordinates.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information for displaying a map </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetMapGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetMapGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetMapGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetMapGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetMapPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information for displaying a map </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetMapPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_map";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetMapPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetMapPost(Async)");
        }

        return dfrRestServicesGetMapPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report Map Service
     * Returns an object with the facility&#39;s latitude and longitude coordinates.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetMapGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information for displaying a map </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetMapGet200Response dfrRestServicesGetMapPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetMapGet200Response> localVarResp = dfrRestServicesGetMapPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report Map Service
     * Returns an object with the facility&#39;s latitude and longitude coordinates.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetMapGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information for displaying a map </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetMapGet200Response> dfrRestServicesGetMapPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetMapPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetMapGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report Map Service (asynchronously)
     * Returns an object with the facility&#39;s latitude and longitude coordinates.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes information for displaying a map </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetMapPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetMapGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetMapPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetMapGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetNaicsGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of NAICS codes </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetNaicsGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_naics";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetNaicsGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetNaicsGet(Async)");
        }

        return dfrRestServicesGetNaicsGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report NAICS Code Service
     * This procedure obtains data for the Facility NAICS Codes section in Facility/System Characteristics of the Detailed Facility Report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetNaicsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of NAICS codes </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetNaicsGet200Response dfrRestServicesGetNaicsGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetNaicsGet200Response> localVarResp = dfrRestServicesGetNaicsGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report NAICS Code Service
     * This procedure obtains data for the Facility NAICS Codes section in Facility/System Characteristics of the Detailed Facility Report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetNaicsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of NAICS codes </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetNaicsGet200Response> dfrRestServicesGetNaicsGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetNaicsGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetNaicsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report NAICS Code Service (asynchronously)
     * This procedure obtains data for the Facility NAICS Codes section in Facility/System Characteristics of the Detailed Facility Report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of NAICS codes </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetNaicsGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetNaicsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetNaicsGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetNaicsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetNaicsPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of NAICS codes </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetNaicsPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_naics";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetNaicsPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetNaicsPost(Async)");
        }

        return dfrRestServicesGetNaicsPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report NAICS Code Service
     * This procedure obtains data for the Facility NAICS Codes section in Facility/System Characteristics of the Detailed Facility Report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetNaicsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of NAICS codes </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetNaicsGet200Response dfrRestServicesGetNaicsPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetNaicsGet200Response> localVarResp = dfrRestServicesGetNaicsPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report NAICS Code Service
     * This procedure obtains data for the Facility NAICS Codes section in Facility/System Characteristics of the Detailed Facility Report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetNaicsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of NAICS codes </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetNaicsGet200Response> dfrRestServicesGetNaicsPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetNaicsPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetNaicsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report NAICS Code Service (asynchronously)
     * This procedure obtains data for the Facility NAICS Codes section in Facility/System Characteristics of the Detailed Facility Report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of NAICS codes </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetNaicsPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetNaicsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetNaicsPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetNaicsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetNoticesGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of notices </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetNoticesGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_notices";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetNoticesGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetNoticesGet(Async)");
        }

        return dfrRestServicesGetNoticesGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report Notices Service
     * This procedure obtains data for the Notices/Informal Actions section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetNoticesGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of notices </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetNoticesGet200Response dfrRestServicesGetNoticesGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetNoticesGet200Response> localVarResp = dfrRestServicesGetNoticesGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report Notices Service
     * This procedure obtains data for the Notices/Informal Actions section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetNoticesGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of notices </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetNoticesGet200Response> dfrRestServicesGetNoticesGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetNoticesGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetNoticesGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report Notices Service (asynchronously)
     * This procedure obtains data for the Notices/Informal Actions section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of notices </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetNoticesGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetNoticesGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetNoticesGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetNoticesGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetNoticesPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of notices </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetNoticesPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_notices";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetNoticesPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetNoticesPost(Async)");
        }

        return dfrRestServicesGetNoticesPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report Notices Service
     * This procedure obtains data for the Notices/Informal Actions section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetNoticesGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of notices </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetNoticesGet200Response dfrRestServicesGetNoticesPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetNoticesGet200Response> localVarResp = dfrRestServicesGetNoticesPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report Notices Service
     * This procedure obtains data for the Notices/Informal Actions section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetNoticesGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of notices </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetNoticesGet200Response> dfrRestServicesGetNoticesPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetNoticesPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetNoticesGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report Notices Service (asynchronously)
     * This procedure obtains data for the Notices/Informal Actions section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of notices </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetNoticesPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetNoticesGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetNoticesPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetNoticesGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetPermitsGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of permits </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetPermitsGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_permits";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetPermitsGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetPermitsGet(Async)");
        }

        return dfrRestServicesGetPermitsGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report Permits Service
     * This procedure obtains data for the following sections of the Detailed Facility Report. &gt; Facility Information (FRS) in the Facility Summary. &gt; Regulatory Interests in the Facility Summary. &gt; Also Reports in the Facility Summary. &gt; Facility/System Characteristics in Facility/System Characteristics. &gt; Facility Contact Information in Facility/System Characteristics. &gt; Facility SIC Codes in Facility/System Characteristics section. &gt; Facility NAICS Codes in Facility/System Characteristics section.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetPermitsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of permits </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetPermitsGet200Response dfrRestServicesGetPermitsGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetPermitsGet200Response> localVarResp = dfrRestServicesGetPermitsGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report Permits Service
     * This procedure obtains data for the following sections of the Detailed Facility Report. &gt; Facility Information (FRS) in the Facility Summary. &gt; Regulatory Interests in the Facility Summary. &gt; Also Reports in the Facility Summary. &gt; Facility/System Characteristics in Facility/System Characteristics. &gt; Facility Contact Information in Facility/System Characteristics. &gt; Facility SIC Codes in Facility/System Characteristics section. &gt; Facility NAICS Codes in Facility/System Characteristics section.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetPermitsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of permits </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetPermitsGet200Response> dfrRestServicesGetPermitsGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetPermitsGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetPermitsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report Permits Service (asynchronously)
     * This procedure obtains data for the following sections of the Detailed Facility Report. &gt; Facility Information (FRS) in the Facility Summary. &gt; Regulatory Interests in the Facility Summary. &gt; Also Reports in the Facility Summary. &gt; Facility/System Characteristics in Facility/System Characteristics. &gt; Facility Contact Information in Facility/System Characteristics. &gt; Facility SIC Codes in Facility/System Characteristics section. &gt; Facility NAICS Codes in Facility/System Characteristics section.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of permits </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetPermitsGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetPermitsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetPermitsGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetPermitsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetPermitsPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of permits </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetPermitsPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_permits";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetPermitsPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetPermitsPost(Async)");
        }

        return dfrRestServicesGetPermitsPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report Permits Service
     * This procedure obtains data for the following sections of the Detailed Facility Report. &gt; Facility Information (FRS) in the Facility Summary. &gt; Regulatory Interests in the Facility Summary. &gt; Also Reports in the Facility Summary. &gt; Facility/System Characteristics in Facility/System Characteristics. &gt; Facility Contact Information in Facility/System Characteristics. &gt; Facility SIC Codes in Facility/System Characteristics section. &gt; Facility NAICS Codes in Facility/System Characteristics section.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetPermitsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of permits </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetPermitsGet200Response dfrRestServicesGetPermitsPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetPermitsGet200Response> localVarResp = dfrRestServicesGetPermitsPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report Permits Service
     * This procedure obtains data for the following sections of the Detailed Facility Report. &gt; Facility Information (FRS) in the Facility Summary. &gt; Regulatory Interests in the Facility Summary. &gt; Also Reports in the Facility Summary. &gt; Facility/System Characteristics in Facility/System Characteristics. &gt; Facility Contact Information in Facility/System Characteristics. &gt; Facility SIC Codes in Facility/System Characteristics section. &gt; Facility NAICS Codes in Facility/System Characteristics section.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetPermitsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of permits </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetPermitsGet200Response> dfrRestServicesGetPermitsPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetPermitsPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetPermitsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report Permits Service (asynchronously)
     * This procedure obtains data for the following sections of the Detailed Facility Report. &gt; Facility Information (FRS) in the Facility Summary. &gt; Regulatory Interests in the Facility Summary. &gt; Also Reports in the Facility Summary. &gt; Facility/System Characteristics in Facility/System Characteristics. &gt; Facility Contact Information in Facility/System Characteristics. &gt; Facility SIC Codes in Facility/System Characteristics section. &gt; Facility NAICS Codes in Facility/System Characteristics section.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of permits </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetPermitsPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetPermitsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetPermitsPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetPermitsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetRcraComplianceGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes RCRA compliance statuses </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetRcraComplianceGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_rcra_compliance";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetRcraComplianceGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetRcraComplianceGet(Async)");
        }

        return dfrRestServicesGetRcraComplianceGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report RCRA Compliance Service
     * This procedure obtains data for the RCRA Compliance section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetRcraComplianceGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes RCRA compliance statuses </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetRcraComplianceGet200Response dfrRestServicesGetRcraComplianceGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetRcraComplianceGet200Response> localVarResp = dfrRestServicesGetRcraComplianceGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report RCRA Compliance Service
     * This procedure obtains data for the RCRA Compliance section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetRcraComplianceGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes RCRA compliance statuses </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetRcraComplianceGet200Response> dfrRestServicesGetRcraComplianceGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetRcraComplianceGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetRcraComplianceGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report RCRA Compliance Service (asynchronously)
     * This procedure obtains data for the RCRA Compliance section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes RCRA compliance statuses </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetRcraComplianceGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetRcraComplianceGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetRcraComplianceGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetRcraComplianceGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetRcraCompliancePost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes RCRA compliance statuses </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetRcraCompliancePostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_rcra_compliance";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetRcraCompliancePostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetRcraCompliancePost(Async)");
        }

        return dfrRestServicesGetRcraCompliancePostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report RCRA Compliance Service
     * This procedure obtains data for the RCRA Compliance section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetRcraComplianceGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes RCRA compliance statuses </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetRcraComplianceGet200Response dfrRestServicesGetRcraCompliancePost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetRcraComplianceGet200Response> localVarResp = dfrRestServicesGetRcraCompliancePostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report RCRA Compliance Service
     * This procedure obtains data for the RCRA Compliance section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetRcraComplianceGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes RCRA compliance statuses </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetRcraComplianceGet200Response> dfrRestServicesGetRcraCompliancePostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetRcraCompliancePostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetRcraComplianceGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report RCRA Compliance Service (asynchronously)
     * This procedure obtains data for the RCRA Compliance section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes RCRA compliance statuses </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetRcraCompliancePostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetRcraComplianceGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetRcraCompliancePostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetRcraComplianceGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetSdwaLeadAndCopperGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of lead and copper rules </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSdwaLeadAndCopperGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_sdwa_lead_and_copper";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetSdwaLeadAndCopperGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetSdwaLeadAndCopperGet(Async)");
        }

        return dfrRestServicesGetSdwaLeadAndCopperGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report SDWA Lead and Copper Service
     * This procedure obtains data for the SDWA, Lead and Copper Rule section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetSdwaLeadAndCopperGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of lead and copper rules </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetSdwaLeadAndCopperGet200Response dfrRestServicesGetSdwaLeadAndCopperGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetSdwaLeadAndCopperGet200Response> localVarResp = dfrRestServicesGetSdwaLeadAndCopperGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report SDWA Lead and Copper Service
     * This procedure obtains data for the SDWA, Lead and Copper Rule section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetSdwaLeadAndCopperGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of lead and copper rules </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetSdwaLeadAndCopperGet200Response> dfrRestServicesGetSdwaLeadAndCopperGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetSdwaLeadAndCopperGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSdwaLeadAndCopperGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report SDWA Lead and Copper Service (asynchronously)
     * This procedure obtains data for the SDWA, Lead and Copper Rule section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of lead and copper rules </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSdwaLeadAndCopperGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetSdwaLeadAndCopperGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetSdwaLeadAndCopperGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSdwaLeadAndCopperGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetSdwaLeadAndCopperPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of lead and copper rules </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSdwaLeadAndCopperPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_sdwa_lead_and_copper";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetSdwaLeadAndCopperPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetSdwaLeadAndCopperPost(Async)");
        }

        return dfrRestServicesGetSdwaLeadAndCopperPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report SDWA Lead and Copper Service
     * This procedure obtains data for the SDWA, Lead and Copper Rule section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetSdwaLeadAndCopperGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of lead and copper rules </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetSdwaLeadAndCopperGet200Response dfrRestServicesGetSdwaLeadAndCopperPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetSdwaLeadAndCopperGet200Response> localVarResp = dfrRestServicesGetSdwaLeadAndCopperPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report SDWA Lead and Copper Service
     * This procedure obtains data for the SDWA, Lead and Copper Rule section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetSdwaLeadAndCopperGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of lead and copper rules </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetSdwaLeadAndCopperGet200Response> dfrRestServicesGetSdwaLeadAndCopperPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetSdwaLeadAndCopperPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSdwaLeadAndCopperGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report SDWA Lead and Copper Service (asynchronously)
     * This procedure obtains data for the SDWA, Lead and Copper Rule section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of lead and copper rules </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSdwaLeadAndCopperPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetSdwaLeadAndCopperGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetSdwaLeadAndCopperPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSdwaLeadAndCopperGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetSdwaSanitarySurveysGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of sanitary surveys </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSdwaSanitarySurveysGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_sdwa_sanitary_surveys";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetSdwaSanitarySurveysGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetSdwaSanitarySurveysGet(Async)");
        }

        return dfrRestServicesGetSdwaSanitarySurveysGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report SDWA Sanitary Surveys Service
     * This procedure obtains data for the SDWA, Sanitary Surveys section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetSdwaSanitarySurveysGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of sanitary surveys </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetSdwaSanitarySurveysGet200Response dfrRestServicesGetSdwaSanitarySurveysGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetSdwaSanitarySurveysGet200Response> localVarResp = dfrRestServicesGetSdwaSanitarySurveysGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report SDWA Sanitary Surveys Service
     * This procedure obtains data for the SDWA, Sanitary Surveys section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetSdwaSanitarySurveysGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of sanitary surveys </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetSdwaSanitarySurveysGet200Response> dfrRestServicesGetSdwaSanitarySurveysGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetSdwaSanitarySurveysGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSdwaSanitarySurveysGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report SDWA Sanitary Surveys Service (asynchronously)
     * This procedure obtains data for the SDWA, Sanitary Surveys section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of sanitary surveys </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSdwaSanitarySurveysGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetSdwaSanitarySurveysGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetSdwaSanitarySurveysGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSdwaSanitarySurveysGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetSdwaSanitarySurveysPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of sanitary surveys </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSdwaSanitarySurveysPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_sdwa_sanitary_surveys";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetSdwaSanitarySurveysPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetSdwaSanitarySurveysPost(Async)");
        }

        return dfrRestServicesGetSdwaSanitarySurveysPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report SDWA Sanitary Surveys Service
     * This procedure obtains data for the SDWA, Sanitary Surveys section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetSdwaSanitarySurveysGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of sanitary surveys </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetSdwaSanitarySurveysGet200Response dfrRestServicesGetSdwaSanitarySurveysPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetSdwaSanitarySurveysGet200Response> localVarResp = dfrRestServicesGetSdwaSanitarySurveysPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report SDWA Sanitary Surveys Service
     * This procedure obtains data for the SDWA, Sanitary Surveys section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetSdwaSanitarySurveysGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of sanitary surveys </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetSdwaSanitarySurveysGet200Response> dfrRestServicesGetSdwaSanitarySurveysPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetSdwaSanitarySurveysPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSdwaSanitarySurveysGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report SDWA Sanitary Surveys Service (asynchronously)
     * This procedure obtains data for the SDWA, Sanitary Surveys section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of sanitary surveys </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSdwaSanitarySurveysPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetSdwaSanitarySurveysGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetSdwaSanitarySurveysPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSdwaSanitarySurveysGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetSdwaSiteVisitsGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of site visits </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSdwaSiteVisitsGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_sdwa_site_visits";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetSdwaSiteVisitsGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetSdwaSiteVisitsGet(Async)");
        }

        return dfrRestServicesGetSdwaSiteVisitsGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report SDWA Sanitary Site Visits Service
     * This procedure obtains data for the SDWA, Sanitary Site Visits section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetSdwaSiteVisitsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of site visits </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetSdwaSiteVisitsGet200Response dfrRestServicesGetSdwaSiteVisitsGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetSdwaSiteVisitsGet200Response> localVarResp = dfrRestServicesGetSdwaSiteVisitsGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report SDWA Sanitary Site Visits Service
     * This procedure obtains data for the SDWA, Sanitary Site Visits section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetSdwaSiteVisitsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of site visits </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetSdwaSiteVisitsGet200Response> dfrRestServicesGetSdwaSiteVisitsGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetSdwaSiteVisitsGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSdwaSiteVisitsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report SDWA Sanitary Site Visits Service (asynchronously)
     * This procedure obtains data for the SDWA, Sanitary Site Visits section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of site visits </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSdwaSiteVisitsGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetSdwaSiteVisitsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetSdwaSiteVisitsGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSdwaSiteVisitsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetSdwaSiteVisitsPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of site visits </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSdwaSiteVisitsPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_sdwa_site_visits";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetSdwaSiteVisitsPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetSdwaSiteVisitsPost(Async)");
        }

        return dfrRestServicesGetSdwaSiteVisitsPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report SDWA Sanitary Site Visits Service
     * This procedure obtains data for the SDWA, Sanitary Site Visits section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetSdwaSiteVisitsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of site visits </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetSdwaSiteVisitsGet200Response dfrRestServicesGetSdwaSiteVisitsPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetSdwaSiteVisitsGet200Response> localVarResp = dfrRestServicesGetSdwaSiteVisitsPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report SDWA Sanitary Site Visits Service
     * This procedure obtains data for the SDWA, Sanitary Site Visits section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetSdwaSiteVisitsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of site visits </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetSdwaSiteVisitsGet200Response> dfrRestServicesGetSdwaSiteVisitsPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetSdwaSiteVisitsPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSdwaSiteVisitsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report SDWA Sanitary Site Visits Service (asynchronously)
     * This procedure obtains data for the SDWA, Sanitary Site Visits section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of site visits </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSdwaSiteVisitsPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetSdwaSiteVisitsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetSdwaSiteVisitsPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSdwaSiteVisitsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetSdwaViolationsGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes SDWA violations </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSdwaViolationsGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_sdwa_violations";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetSdwaViolationsGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetSdwaViolationsGet(Async)");
        }

        return dfrRestServicesGetSdwaViolationsGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report SDWA Violations Service
     * This procedure obtains data for the SDWA Violations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetSdwaViolationsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes SDWA violations </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetSdwaViolationsGet200Response dfrRestServicesGetSdwaViolationsGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetSdwaViolationsGet200Response> localVarResp = dfrRestServicesGetSdwaViolationsGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report SDWA Violations Service
     * This procedure obtains data for the SDWA Violations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetSdwaViolationsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes SDWA violations </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetSdwaViolationsGet200Response> dfrRestServicesGetSdwaViolationsGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetSdwaViolationsGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSdwaViolationsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report SDWA Violations Service (asynchronously)
     * This procedure obtains data for the SDWA Violations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes SDWA violations </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSdwaViolationsGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetSdwaViolationsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetSdwaViolationsGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSdwaViolationsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetSdwaViolationsPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes SDWA violations </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSdwaViolationsPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_sdwa_violations";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetSdwaViolationsPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetSdwaViolationsPost(Async)");
        }

        return dfrRestServicesGetSdwaViolationsPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report SDWA Violations Service
     * This procedure obtains data for the SDWA Violations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetSdwaViolationsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes SDWA violations </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetSdwaViolationsGet200Response dfrRestServicesGetSdwaViolationsPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetSdwaViolationsGet200Response> localVarResp = dfrRestServicesGetSdwaViolationsPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report SDWA Violations Service
     * This procedure obtains data for the SDWA Violations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetSdwaViolationsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes SDWA violations </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetSdwaViolationsGet200Response> dfrRestServicesGetSdwaViolationsPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetSdwaViolationsPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSdwaViolationsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report SDWA Violations Service (asynchronously)
     * This procedure obtains data for the SDWA Violations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes SDWA violations </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSdwaViolationsPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetSdwaViolationsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetSdwaViolationsPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSdwaViolationsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetSdwisComplianceGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of SDWIS compliance summaries </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSdwisComplianceGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_sdwis_compliance";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetSdwisComplianceGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetSdwisComplianceGet(Async)");
        }

        return dfrRestServicesGetSdwisComplianceGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report SDWIS Compliance Service
     * This procedure obtains data for the SDWA Compliance section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetSdwisComplianceGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of SDWIS compliance summaries </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetSdwisComplianceGet200Response dfrRestServicesGetSdwisComplianceGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetSdwisComplianceGet200Response> localVarResp = dfrRestServicesGetSdwisComplianceGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report SDWIS Compliance Service
     * This procedure obtains data for the SDWA Compliance section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetSdwisComplianceGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of SDWIS compliance summaries </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetSdwisComplianceGet200Response> dfrRestServicesGetSdwisComplianceGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetSdwisComplianceGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSdwisComplianceGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report SDWIS Compliance Service (asynchronously)
     * This procedure obtains data for the SDWA Compliance section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of SDWIS compliance summaries </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSdwisComplianceGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetSdwisComplianceGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetSdwisComplianceGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSdwisComplianceGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetSdwisCompliancePost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of SDWIS compliance summaries </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSdwisCompliancePostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_sdwis_compliance";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetSdwisCompliancePostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetSdwisCompliancePost(Async)");
        }

        return dfrRestServicesGetSdwisCompliancePostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report SDWIS Compliance Service
     * This procedure obtains data for the SDWA Compliance section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetSdwisComplianceGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of SDWIS compliance summaries </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetSdwisComplianceGet200Response dfrRestServicesGetSdwisCompliancePost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetSdwisComplianceGet200Response> localVarResp = dfrRestServicesGetSdwisCompliancePostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report SDWIS Compliance Service
     * This procedure obtains data for the SDWA Compliance section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetSdwisComplianceGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of SDWIS compliance summaries </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetSdwisComplianceGet200Response> dfrRestServicesGetSdwisCompliancePostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetSdwisCompliancePostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSdwisComplianceGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report SDWIS Compliance Service (asynchronously)
     * This procedure obtains data for the SDWA Compliance section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of SDWIS compliance summaries </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSdwisCompliancePostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetSdwisComplianceGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetSdwisCompliancePostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSdwisComplianceGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetSicCodesGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of SIC codes </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSicCodesGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_sic_codes";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetSicCodesGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetSicCodesGet(Async)");
        }

        return dfrRestServicesGetSicCodesGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report SIC Code Service
     * This procedure obtains data for the Facility SIC Codes section in Facility/System Characteristics of the Detailed Facility Report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetSicCodesGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of SIC codes </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetSicCodesGet200Response dfrRestServicesGetSicCodesGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetSicCodesGet200Response> localVarResp = dfrRestServicesGetSicCodesGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report SIC Code Service
     * This procedure obtains data for the Facility SIC Codes section in Facility/System Characteristics of the Detailed Facility Report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetSicCodesGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of SIC codes </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetSicCodesGet200Response> dfrRestServicesGetSicCodesGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetSicCodesGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSicCodesGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report SIC Code Service (asynchronously)
     * This procedure obtains data for the Facility SIC Codes section in Facility/System Characteristics of the Detailed Facility Report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of SIC codes </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSicCodesGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetSicCodesGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetSicCodesGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSicCodesGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetSicCodesPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of SIC codes </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSicCodesPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_sic_codes";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetSicCodesPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetSicCodesPost(Async)");
        }

        return dfrRestServicesGetSicCodesPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report SIC Code Service
     * This procedure obtains data for the Facility SIC Codes section in Facility/System Characteristics of the Detailed Facility Report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetSicCodesGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of SIC codes </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetSicCodesGet200Response dfrRestServicesGetSicCodesPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetSicCodesGet200Response> localVarResp = dfrRestServicesGetSicCodesPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report SIC Code Service
     * This procedure obtains data for the Facility SIC Codes section in Facility/System Characteristics of the Detailed Facility Report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetSicCodesGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of SIC codes </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetSicCodesGet200Response> dfrRestServicesGetSicCodesPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetSicCodesPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSicCodesGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report SIC Code Service (asynchronously)
     * This procedure obtains data for the Facility SIC Codes section in Facility/System Characteristics of the Detailed Facility Report.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of SIC codes </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSicCodesPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetSicCodesGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetSicCodesPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSicCodesGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetSpatialMetadataGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes spatial metadata </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSpatialMetadataGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_spatial_metadata";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetSpatialMetadataGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetSpatialMetadataGet(Async)");
        }

        return dfrRestServicesGetSpatialMetadataGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report Spatial Metadata Service
     * Returns an object with the facility coordinate spatial metadata.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetSpatialMetadataGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes spatial metadata </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetSpatialMetadataGet200Response dfrRestServicesGetSpatialMetadataGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetSpatialMetadataGet200Response> localVarResp = dfrRestServicesGetSpatialMetadataGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report Spatial Metadata Service
     * Returns an object with the facility coordinate spatial metadata.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetSpatialMetadataGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes spatial metadata </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetSpatialMetadataGet200Response> dfrRestServicesGetSpatialMetadataGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetSpatialMetadataGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSpatialMetadataGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report Spatial Metadata Service (asynchronously)
     * Returns an object with the facility coordinate spatial metadata.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes spatial metadata </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSpatialMetadataGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetSpatialMetadataGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetSpatialMetadataGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSpatialMetadataGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetSpatialMetadataPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes spatial metadata </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSpatialMetadataPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_spatial_metadata";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetSpatialMetadataPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetSpatialMetadataPost(Async)");
        }

        return dfrRestServicesGetSpatialMetadataPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report Spatial Metadata Service
     * Returns an object with the facility coordinate spatial metadata.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetSpatialMetadataGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes spatial metadata </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetSpatialMetadataGet200Response dfrRestServicesGetSpatialMetadataPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetSpatialMetadataGet200Response> localVarResp = dfrRestServicesGetSpatialMetadataPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report Spatial Metadata Service
     * Returns an object with the facility coordinate spatial metadata.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetSpatialMetadataGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes spatial metadata </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetSpatialMetadataGet200Response> dfrRestServicesGetSpatialMetadataPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetSpatialMetadataPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSpatialMetadataGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report Spatial Metadata Service (asynchronously)
     * Returns an object with the facility coordinate spatial metadata.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes spatial metadata </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetSpatialMetadataPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetSpatialMetadataGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetSpatialMetadataPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetSpatialMetadataGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetTriHistoryGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes TRI history </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetTriHistoryGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_tri_history";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetTriHistoryGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetTriHistoryGet(Async)");
        }

        return dfrRestServicesGetTriHistoryGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report TRI History Service
     * This procedure obtains data for the TRI History section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetTriHistoryGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes TRI history </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetTriHistoryGet200Response dfrRestServicesGetTriHistoryGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetTriHistoryGet200Response> localVarResp = dfrRestServicesGetTriHistoryGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report TRI History Service
     * This procedure obtains data for the TRI History section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetTriHistoryGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes TRI history </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetTriHistoryGet200Response> dfrRestServicesGetTriHistoryGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetTriHistoryGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetTriHistoryGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report TRI History Service (asynchronously)
     * This procedure obtains data for the TRI History section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes TRI history </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetTriHistoryGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetTriHistoryGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetTriHistoryGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetTriHistoryGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetTriHistoryPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes TRI history </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetTriHistoryPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_tri_history";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetTriHistoryPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetTriHistoryPost(Async)");
        }

        return dfrRestServicesGetTriHistoryPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report TRI History Service
     * This procedure obtains data for the TRI History section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetTriHistoryGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes TRI history </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetTriHistoryGet200Response dfrRestServicesGetTriHistoryPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetTriHistoryGet200Response> localVarResp = dfrRestServicesGetTriHistoryPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report TRI History Service
     * This procedure obtains data for the TRI History section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetTriHistoryGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes TRI history </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetTriHistoryGet200Response> dfrRestServicesGetTriHistoryPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetTriHistoryPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetTriHistoryGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report TRI History Service (asynchronously)
     * This procedure obtains data for the TRI History section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes TRI history </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetTriHistoryPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetTriHistoryGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetTriHistoryPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetTriHistoryGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetTriReleasesGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes TRI releases </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetTriReleasesGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_tri_releases";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetTriReleasesGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetTriReleasesGet(Async)");
        }

        return dfrRestServicesGetTriReleasesGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report TRI Releases Service
     * This procedrue obtains data for the TRI Releases section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetTriReleasesGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes TRI releases </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetTriReleasesGet200Response dfrRestServicesGetTriReleasesGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetTriReleasesGet200Response> localVarResp = dfrRestServicesGetTriReleasesGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report TRI Releases Service
     * This procedrue obtains data for the TRI Releases section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetTriReleasesGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes TRI releases </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetTriReleasesGet200Response> dfrRestServicesGetTriReleasesGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetTriReleasesGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetTriReleasesGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report TRI Releases Service (asynchronously)
     * This procedrue obtains data for the TRI Releases section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes TRI releases </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetTriReleasesGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetTriReleasesGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetTriReleasesGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetTriReleasesGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetTriReleasesPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes TRI releases </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetTriReleasesPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_tri_releases";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetTriReleasesPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetTriReleasesPost(Async)");
        }

        return dfrRestServicesGetTriReleasesPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report TRI Releases Service
     * This procedrue obtains data for the TRI Releases section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetTriReleasesGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes TRI releases </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetTriReleasesGet200Response dfrRestServicesGetTriReleasesPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetTriReleasesGet200Response> localVarResp = dfrRestServicesGetTriReleasesPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report TRI Releases Service
     * This procedrue obtains data for the TRI Releases section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetTriReleasesGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes TRI releases </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetTriReleasesGet200Response> dfrRestServicesGetTriReleasesPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetTriReleasesPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetTriReleasesGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report TRI Releases Service (asynchronously)
     * This procedrue obtains data for the TRI Releases section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes TRI releases </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetTriReleasesPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetTriReleasesGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetTriReleasesPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetTriReleasesGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetTribesGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of tribal location information. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetTribesGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_tribes";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetTribesGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetTribesGet(Async)");
        }

        return dfrRestServicesGetTribesGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report Tribes Service
     * This procedure obtains data for the Tribes and Reservations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetTribesGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of tribal location information. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetTribesGet200Response dfrRestServicesGetTribesGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetTribesGet200Response> localVarResp = dfrRestServicesGetTribesGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report Tribes Service
     * This procedure obtains data for the Tribes and Reservations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetTribesGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of tribal location information. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetTribesGet200Response> dfrRestServicesGetTribesGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetTribesGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetTribesGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report Tribes Service (asynchronously)
     * This procedure obtains data for the Tribes and Reservations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of tribal location information. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetTribesGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetTribesGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetTribesGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetTribesGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetTribesPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of tribal location information. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetTribesPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_tribes";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetTribesPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetTribesPost(Async)");
        }

        return dfrRestServicesGetTribesPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report Tribes Service
     * This procedure obtains data for the Tribes and Reservations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetTribesGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of tribal location information. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetTribesGet200Response dfrRestServicesGetTribesPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetTribesGet200Response> localVarResp = dfrRestServicesGetTribesPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report Tribes Service
     * This procedure obtains data for the Tribes and Reservations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetTribesGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of tribal location information. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetTribesGet200Response> dfrRestServicesGetTribesPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetTribesPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetTribesGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report Tribes Service (asynchronously)
     * This procedure obtains data for the Tribes and Reservations section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of tribal location information. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetTribesPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetTribesGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetTribesPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetTribesGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetWaterQualityDetailsGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes water qualtity information. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetWaterQualityDetailsGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_water_quality_details";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetWaterQualityDetailsGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetWaterQualityDetailsGet(Async)");
        }

        return dfrRestServicesGetWaterQualityDetailsGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Displays detailed Water Quality information from EPA&#39;s Office of Water Systems
     * This information is only available for facilities with a NPDES permit. Based on spatial data, displays water quality information from EPA&#39;s Office of Water ATTAINS system.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetWaterQualityDetailsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes water qualtity information. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetWaterQualityDetailsGet200Response dfrRestServicesGetWaterQualityDetailsGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetWaterQualityDetailsGet200Response> localVarResp = dfrRestServicesGetWaterQualityDetailsGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Displays detailed Water Quality information from EPA&#39;s Office of Water Systems
     * This information is only available for facilities with a NPDES permit. Based on spatial data, displays water quality information from EPA&#39;s Office of Water ATTAINS system.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetWaterQualityDetailsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes water qualtity information. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetWaterQualityDetailsGet200Response> dfrRestServicesGetWaterQualityDetailsGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetWaterQualityDetailsGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetWaterQualityDetailsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Displays detailed Water Quality information from EPA&#39;s Office of Water Systems (asynchronously)
     * This information is only available for facilities with a NPDES permit. Based on spatial data, displays water quality information from EPA&#39;s Office of Water ATTAINS system.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes water qualtity information. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetWaterQualityDetailsGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetWaterQualityDetailsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetWaterQualityDetailsGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetWaterQualityDetailsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetWaterQualityDetailsPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes water qualtity information. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetWaterQualityDetailsPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_water_quality_details";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetWaterQualityDetailsPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetWaterQualityDetailsPost(Async)");
        }

        return dfrRestServicesGetWaterQualityDetailsPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Displays detailed Water Quality information from EPA&#39;s Office of Water Systems
     * This information is only available for facilities with a NPDES permit. Based on spatial data, displays water quality information from EPA&#39;s Office of Water ATTAINS system.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetWaterQualityDetailsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes water qualtity information. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetWaterQualityDetailsGet200Response dfrRestServicesGetWaterQualityDetailsPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetWaterQualityDetailsGet200Response> localVarResp = dfrRestServicesGetWaterQualityDetailsPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Displays detailed Water Quality information from EPA&#39;s Office of Water Systems
     * This information is only available for facilities with a NPDES permit. Based on spatial data, displays water quality information from EPA&#39;s Office of Water ATTAINS system.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetWaterQualityDetailsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes water qualtity information. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetWaterQualityDetailsGet200Response> dfrRestServicesGetWaterQualityDetailsPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetWaterQualityDetailsPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetWaterQualityDetailsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Displays detailed Water Quality information from EPA&#39;s Office of Water Systems (asynchronously)
     * This information is only available for facilities with a NPDES permit. Based on spatial data, displays water quality information from EPA&#39;s Office of Water ATTAINS system.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes water qualtity information. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetWaterQualityDetailsPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetWaterQualityDetailsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetWaterQualityDetailsPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetWaterQualityDetailsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetWaterQualityGet
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of water quality information. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetWaterQualityGetCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_water_quality";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("output", output));
        }

        if (pId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("p_id", pId));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetWaterQualityGetValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetWaterQualityGet(Async)");
        }

        return dfrRestServicesGetWaterQualityGetCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report Water Quality Service
     * This procedure obtains data for the Water Quality section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetWaterQualityGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of water quality information. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetWaterQualityGet200Response dfrRestServicesGetWaterQualityGet(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetWaterQualityGet200Response> localVarResp = dfrRestServicesGetWaterQualityGetWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report Water Quality Service
     * This procedure obtains data for the Water Quality section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetWaterQualityGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of water quality information. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetWaterQualityGet200Response> dfrRestServicesGetWaterQualityGetWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetWaterQualityGetValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetWaterQualityGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report Water Quality Service (asynchronously)
     * This procedure obtains data for the Water Quality section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of water quality information. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetWaterQualityGetAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetWaterQualityGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetWaterQualityGetValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetWaterQualityGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesGetWaterQualityPost
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of water quality information. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetWaterQualityPostCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.get_water_quality";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (output != null) {
            localVarFormParams.put("output", output);
        }

        if (pId != null) {
            localVarFormParams.put("p_id", pId);
        }

        if (paramCallback != null) {
            localVarFormParams.put("callback", paramCallback);
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesGetWaterQualityPostValidateBeforeCall(String pId, String output, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pId' is set
        if (pId == null) {
            throw new ApiException("Missing the required parameter 'pId' when calling dfrRestServicesGetWaterQualityPost(Async)");
        }

        return dfrRestServicesGetWaterQualityPostCall(pId, output, paramCallback, _callback);

    }

    /**
     * Detailed Facility Report Water Quality Service
     * This procedure obtains data for the Water Quality section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return DfrRestServicesGetWaterQualityGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of water quality information. </td><td>  -  </td></tr>
     </table>
     */
    public DfrRestServicesGetWaterQualityGet200Response dfrRestServicesGetWaterQualityPost(String pId, String output, String paramCallback) throws ApiException {
        ApiResponse<DfrRestServicesGetWaterQualityGet200Response> localVarResp = dfrRestServicesGetWaterQualityPostWithHttpInfo(pId, output, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Detailed Facility Report Water Quality Service
     * This procedure obtains data for the Water Quality section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @return ApiResponse&lt;DfrRestServicesGetWaterQualityGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of water quality information. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DfrRestServicesGetWaterQualityGet200Response> dfrRestServicesGetWaterQualityPostWithHttpInfo(String pId, String output, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesGetWaterQualityPostValidateBeforeCall(pId, output, paramCallback, null);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetWaterQualityGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Detailed Facility Report Water Quality Service (asynchronously)
     * This procedure obtains data for the Water Quality section of the DFR.
     * @param pId Either the EPA Facility Registry System&#39;s REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID). (required)
     * @param output Output Format Flag.  Enter one of the following keywords: - JSON &#x3D; Data model formatted as Javascript Object Notation (default). - JSONP &#x3D; Data model formatted as Javascript Object Notation with Padding.   - XML &#x3D; Data model formatted as Extensible Markup Language. (optional)
     * @param paramCallback JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns an object that includes an array of water quality information. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesGetWaterQualityPostAsync(String pId, String output, String paramCallback, final ApiCallback<DfrRestServicesGetWaterQualityGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesGetWaterQualityPostValidateBeforeCall(pId, output, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<DfrRestServicesGetWaterQualityGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesRcra3YrDownloadGet
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesRcra3YrDownloadGetCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.rcra_3_yr_download";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesRcra3YrDownloadGetValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return dfrRestServicesRcra3YrDownloadGetCall(_callback);

    }

    /**
     * Downloads the complete RCRA Compliance History Section of the DFR
     * For the provided system identifier, dowloads all displayed RCRA quaterly/monthly Facility Level Status and Violation information in a Comma Seperated Value (CSV) format.
     * @return File
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public File dfrRestServicesRcra3YrDownloadGet() throws ApiException {
        ApiResponse<File> localVarResp = dfrRestServicesRcra3YrDownloadGetWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * Downloads the complete RCRA Compliance History Section of the DFR
     * For the provided system identifier, dowloads all displayed RCRA quaterly/monthly Facility Level Status and Violation information in a Comma Seperated Value (CSV) format.
     * @return ApiResponse&lt;File&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<File> dfrRestServicesRcra3YrDownloadGetWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesRcra3YrDownloadGetValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Downloads the complete RCRA Compliance History Section of the DFR (asynchronously)
     * For the provided system identifier, dowloads all displayed RCRA quaterly/monthly Facility Level Status and Violation information in a Comma Seperated Value (CSV) format.
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesRcra3YrDownloadGetAsync(final ApiCallback<File> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesRcra3YrDownloadGetValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for dfrRestServicesRcra3YrDownloadPost
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesRcra3YrDownloadPostCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/dfr_rest_services.rcra_3_yr_download";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json",
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dfrRestServicesRcra3YrDownloadPostValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return dfrRestServicesRcra3YrDownloadPostCall(_callback);

    }

    /**
     * Downloads the complete RCRA Compliance History Section of the DFR
     * For the provided system identifier, dowloads all displayed RCRA quaterly/monthly Facility Level Status and Violation information in a Comma Seperated Value (CSV) format.
     * @return File
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public File dfrRestServicesRcra3YrDownloadPost() throws ApiException {
        ApiResponse<File> localVarResp = dfrRestServicesRcra3YrDownloadPostWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * Downloads the complete RCRA Compliance History Section of the DFR
     * For the provided system identifier, dowloads all displayed RCRA quaterly/monthly Facility Level Status and Violation information in a Comma Seperated Value (CSV) format.
     * @return ApiResponse&lt;File&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<File> dfrRestServicesRcra3YrDownloadPostWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = dfrRestServicesRcra3YrDownloadPostValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Downloads the complete RCRA Compliance History Section of the DFR (asynchronously)
     * For the provided system identifier, dowloads all displayed RCRA quaterly/monthly Facility Level Status and Violation information in a Comma Seperated Value (CSV) format.
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Results are a comma separated value (CSV) file. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dfrRestServicesRcra3YrDownloadPostAsync(final ApiCallback<File> _callback) throws ApiException {

        okhttp3.Call localVarCall = dfrRestServicesRcra3YrDownloadPostValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
