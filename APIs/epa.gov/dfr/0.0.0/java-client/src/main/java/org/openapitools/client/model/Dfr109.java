/*
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Enforcement Actions Object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:30:18.338738-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Dfr109 {
  public static final String SERIALIZED_NAME_AGENCY = "Agency";
  @SerializedName(SERIALIZED_NAME_AGENCY)
  private String agency;

  public static final String SERIALIZED_NAME_ENFORCEMENT_ACTION_TYPE_DESC = "EnforcementActionTypeDesc";
  @SerializedName(SERIALIZED_NAME_ENFORCEMENT_ACTION_TYPE_DESC)
  private String enforcementActionTypeDesc;

  public static final String SERIALIZED_NAME_ENFORCEMENT_DATE = "EnforcementDate";
  @SerializedName(SERIALIZED_NAME_ENFORCEMENT_DATE)
  private String enforcementDate;

  public static final String SERIALIZED_NAME_ENFORCEMENT_ID = "EnforcementId";
  @SerializedName(SERIALIZED_NAME_ENFORCEMENT_ID)
  private String enforcementId;

  public static final String SERIALIZED_NAME_ENFORCEMENT_TYPE = "EnforcementType";
  @SerializedName(SERIALIZED_NAME_ENFORCEMENT_TYPE)
  private String enforcementType;

  public Dfr109() {
  }

  public Dfr109 agency(String agency) {
    this.agency = agency;
    return this;
  }

  /**
   * Identifies the lead agency (e.g., EPA, State) conducting the inspection.  Values: State abbreviation or \&quot;EPA\&quot;
   * @return agency
   */
  @javax.annotation.Nonnull
  public String getAgency() {
    return agency;
  }

  public void setAgency(String agency) {
    this.agency = agency;
  }


  public Dfr109 enforcementActionTypeDesc(String enforcementActionTypeDesc) {
    this.enforcementActionTypeDesc = enforcementActionTypeDesc;
    return this;
  }

  /**
   * Text description of type of enforcement action.
   * @return enforcementActionTypeDesc
   */
  @javax.annotation.Nonnull
  public String getEnforcementActionTypeDesc() {
    return enforcementActionTypeDesc;
  }

  public void setEnforcementActionTypeDesc(String enforcementActionTypeDesc) {
    this.enforcementActionTypeDesc = enforcementActionTypeDesc;
  }


  public Dfr109 enforcementDate(String enforcementDate) {
    this.enforcementDate = enforcementDate;
    return this;
  }

  /**
   * Date of Enforcement.
   * @return enforcementDate
   */
  @javax.annotation.Nonnull
  public String getEnforcementDate() {
    return enforcementDate;
  }

  public void setEnforcementDate(String enforcementDate) {
    this.enforcementDate = enforcementDate;
  }


  public Dfr109 enforcementId(String enforcementId) {
    this.enforcementId = enforcementId;
    return this;
  }

  /**
   * The internal numerick key identifier used to inuqiely identify enforcement case activities.
   * @return enforcementId
   */
  @javax.annotation.Nonnull
  public String getEnforcementId() {
    return enforcementId;
  }

  public void setEnforcementId(String enforcementId) {
    this.enforcementId = enforcementId;
  }


  public Dfr109 enforcementType(String enforcementType) {
    this.enforcementType = enforcementType;
    return this;
  }

  /**
   * A text description of the Enforcement Action type.
   * @return enforcementType
   */
  @javax.annotation.Nonnull
  public String getEnforcementType() {
    return enforcementType;
  }

  public void setEnforcementType(String enforcementType) {
    this.enforcementType = enforcementType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Dfr109 dfr109 = (Dfr109) o;
    return Objects.equals(this.agency, dfr109.agency) &&
        Objects.equals(this.enforcementActionTypeDesc, dfr109.enforcementActionTypeDesc) &&
        Objects.equals(this.enforcementDate, dfr109.enforcementDate) &&
        Objects.equals(this.enforcementId, dfr109.enforcementId) &&
        Objects.equals(this.enforcementType, dfr109.enforcementType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agency, enforcementActionTypeDesc, enforcementDate, enforcementId, enforcementType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Dfr109 {\n");
    sb.append("    agency: ").append(toIndentedString(agency)).append("\n");
    sb.append("    enforcementActionTypeDesc: ").append(toIndentedString(enforcementActionTypeDesc)).append("\n");
    sb.append("    enforcementDate: ").append(toIndentedString(enforcementDate)).append("\n");
    sb.append("    enforcementId: ").append(toIndentedString(enforcementId)).append("\n");
    sb.append("    enforcementType: ").append(toIndentedString(enforcementType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Agency");
    openapiFields.add("EnforcementActionTypeDesc");
    openapiFields.add("EnforcementDate");
    openapiFields.add("EnforcementId");
    openapiFields.add("EnforcementType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Agency");
    openapiRequiredFields.add("EnforcementActionTypeDesc");
    openapiRequiredFields.add("EnforcementDate");
    openapiRequiredFields.add("EnforcementId");
    openapiRequiredFields.add("EnforcementType");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Dfr109
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Dfr109.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Dfr109 is not found in the empty JSON string", Dfr109.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Dfr109.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Dfr109` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Dfr109.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("Agency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Agency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Agency").toString()));
      }
      if (!jsonObj.get("EnforcementActionTypeDesc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EnforcementActionTypeDesc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EnforcementActionTypeDesc").toString()));
      }
      if (!jsonObj.get("EnforcementDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EnforcementDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EnforcementDate").toString()));
      }
      if (!jsonObj.get("EnforcementId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EnforcementId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EnforcementId").toString()));
      }
      if (!jsonObj.get("EnforcementType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EnforcementType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EnforcementType").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Dfr109.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Dfr109' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Dfr109> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Dfr109.class));

       return (TypeAdapter<T>) new TypeAdapter<Dfr109>() {
           @Override
           public void write(JsonWriter out, Dfr109 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Dfr109 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Dfr109 given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Dfr109
   * @throws IOException if the JSON string is invalid with respect to Dfr109
   */
  public static Dfr109 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Dfr109.class);
  }

  /**
   * Convert an instance of Dfr109 to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

