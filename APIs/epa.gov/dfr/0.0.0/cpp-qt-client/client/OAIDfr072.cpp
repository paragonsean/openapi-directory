/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDfr072.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDfr072::OAIDfr072(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDfr072::OAIDfr072() {
    this->initializeModel();
}

OAIDfr072::~OAIDfr072() {}

void OAIDfr072::initializeModel() {

    m_pb90_isSet = false;
    m_pb90_isValid = false;

    m_pb90_dates_isSet = false;
    m_pb90_dates_isValid = false;

    m_pb90_units_isSet = false;
    m_pb90_units_isValid = false;

    m_pb90_value_isSet = false;
    m_pb90_value_isValid = false;
}

void OAIDfr072::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDfr072::fromJsonObject(QJsonObject json) {

    m_pb90_isValid = ::OpenAPI::fromJsonValue(m_pb90, json[QString("PB90")]);
    m_pb90_isSet = !json[QString("PB90")].isNull() && m_pb90_isValid;

    m_pb90_dates_isValid = ::OpenAPI::fromJsonValue(m_pb90_dates, json[QString("PB90Dates")]);
    m_pb90_dates_isSet = !json[QString("PB90Dates")].isNull() && m_pb90_dates_isValid;

    m_pb90_units_isValid = ::OpenAPI::fromJsonValue(m_pb90_units, json[QString("PB90Units")]);
    m_pb90_units_isSet = !json[QString("PB90Units")].isNull() && m_pb90_units_isValid;

    m_pb90_value_isValid = ::OpenAPI::fromJsonValue(m_pb90_value, json[QString("PB90Value")]);
    m_pb90_value_isSet = !json[QString("PB90Value")].isNull() && m_pb90_value_isValid;
}

QString OAIDfr072::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDfr072::asJsonObject() const {
    QJsonObject obj;
    if (m_pb90_isSet) {
        obj.insert(QString("PB90"), ::OpenAPI::toJsonValue(m_pb90));
    }
    if (m_pb90_dates_isSet) {
        obj.insert(QString("PB90Dates"), ::OpenAPI::toJsonValue(m_pb90_dates));
    }
    if (m_pb90_units_isSet) {
        obj.insert(QString("PB90Units"), ::OpenAPI::toJsonValue(m_pb90_units));
    }
    if (m_pb90_value_isSet) {
        obj.insert(QString("PB90Value"), ::OpenAPI::toJsonValue(m_pb90_value));
    }
    return obj;
}

QString OAIDfr072::getPb90() const {
    return m_pb90;
}
void OAIDfr072::setPb90(const QString &pb90) {
    m_pb90 = pb90;
    m_pb90_isSet = true;
}

bool OAIDfr072::is_pb90_Set() const{
    return m_pb90_isSet;
}

bool OAIDfr072::is_pb90_Valid() const{
    return m_pb90_isValid;
}

QString OAIDfr072::getPb90Dates() const {
    return m_pb90_dates;
}
void OAIDfr072::setPb90Dates(const QString &pb90_dates) {
    m_pb90_dates = pb90_dates;
    m_pb90_dates_isSet = true;
}

bool OAIDfr072::is_pb90_dates_Set() const{
    return m_pb90_dates_isSet;
}

bool OAIDfr072::is_pb90_dates_Valid() const{
    return m_pb90_dates_isValid;
}

QString OAIDfr072::getPb90Units() const {
    return m_pb90_units;
}
void OAIDfr072::setPb90Units(const QString &pb90_units) {
    m_pb90_units = pb90_units;
    m_pb90_units_isSet = true;
}

bool OAIDfr072::is_pb90_units_Set() const{
    return m_pb90_units_isSet;
}

bool OAIDfr072::is_pb90_units_Valid() const{
    return m_pb90_units_isValid;
}

QString OAIDfr072::getPb90Value() const {
    return m_pb90_value;
}
void OAIDfr072::setPb90Value(const QString &pb90_value) {
    m_pb90_value = pb90_value;
    m_pb90_value_isSet = true;
}

bool OAIDfr072::is_pb90_value_Set() const{
    return m_pb90_value_isSet;
}

bool OAIDfr072::is_pb90_value_Valid() const{
    return m_pb90_value_isValid;
}

bool OAIDfr072::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pb90_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pb90_dates_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pb90_units_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pb90_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDfr072::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_pb90_isValid && m_pb90_dates_isValid && m_pb90_units_isValid && m_pb90_value_isValid && true;
}

} // namespace OpenAPI
