/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDfr030.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDfr030::OAIDfr030(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDfr030::OAIDfr030() {
    this->initializeModel();
}

OAIDfr030::~OAIDfr030() {}

void OAIDfr030::initializeModel() {

    m_missing_late_isSet = false;
    m_missing_late_isValid = false;

    m_mnth10_count_isSet = false;
    m_mnth10_count_isValid = false;

    m_mnth11_count_isSet = false;
    m_mnth11_count_isValid = false;

    m_mnth12_count_isSet = false;
    m_mnth12_count_isValid = false;

    m_mnth13_count_isSet = false;
    m_mnth13_count_isValid = false;

    m_mnth14_count_isSet = false;
    m_mnth14_count_isValid = false;

    m_mnth15_count_isSet = false;
    m_mnth15_count_isValid = false;

    m_mnth16_count_isSet = false;
    m_mnth16_count_isValid = false;

    m_mnth17_count_isSet = false;
    m_mnth17_count_isValid = false;

    m_mnth18_count_isSet = false;
    m_mnth18_count_isValid = false;

    m_mnth19_count_isSet = false;
    m_mnth19_count_isValid = false;

    m_mnth1_count_isSet = false;
    m_mnth1_count_isValid = false;

    m_mnth20_count_isSet = false;
    m_mnth20_count_isValid = false;

    m_mnth21_count_isSet = false;
    m_mnth21_count_isValid = false;

    m_mnth22_count_isSet = false;
    m_mnth22_count_isValid = false;

    m_mnth23_count_isSet = false;
    m_mnth23_count_isValid = false;

    m_mnth24_count_isSet = false;
    m_mnth24_count_isValid = false;

    m_mnth25_count_isSet = false;
    m_mnth25_count_isValid = false;

    m_mnth26_count_isSet = false;
    m_mnth26_count_isValid = false;

    m_mnth27_count_isSet = false;
    m_mnth27_count_isValid = false;

    m_mnth28_count_isSet = false;
    m_mnth28_count_isValid = false;

    m_mnth29_count_isSet = false;
    m_mnth29_count_isValid = false;

    m_mnth2_count_isSet = false;
    m_mnth2_count_isValid = false;

    m_mnth30_count_isSet = false;
    m_mnth30_count_isValid = false;

    m_mnth31_count_isSet = false;
    m_mnth31_count_isValid = false;

    m_mnth32_count_isSet = false;
    m_mnth32_count_isValid = false;

    m_mnth33_count_isSet = false;
    m_mnth33_count_isValid = false;

    m_mnth34_count_isSet = false;
    m_mnth34_count_isValid = false;

    m_mnth35_count_isSet = false;
    m_mnth35_count_isValid = false;

    m_mnth36_count_isSet = false;
    m_mnth36_count_isValid = false;

    m_mnth37_count_isSet = false;
    m_mnth37_count_isValid = false;

    m_mnth38_count_isSet = false;
    m_mnth38_count_isValid = false;

    m_mnth39_count_isSet = false;
    m_mnth39_count_isValid = false;

    m_mnth3_count_isSet = false;
    m_mnth3_count_isValid = false;

    m_mnth4_count_isSet = false;
    m_mnth4_count_isValid = false;

    m_mnth5_count_isSet = false;
    m_mnth5_count_isValid = false;

    m_mnth6_count_isSet = false;
    m_mnth6_count_isValid = false;

    m_mnth7_count_isSet = false;
    m_mnth7_count_isValid = false;

    m_mnth8_count_isSet = false;
    m_mnth8_count_isValid = false;

    m_mnth9_count_isSet = false;
    m_mnth9_count_isValid = false;

    m_qtr10_count_isSet = false;
    m_qtr10_count_isValid = false;

    m_qtr11_count_isSet = false;
    m_qtr11_count_isValid = false;

    m_qtr12_count_isSet = false;
    m_qtr12_count_isValid = false;

    m_qtr13_count_isSet = false;
    m_qtr13_count_isValid = false;

    m_qtr1_count_isSet = false;
    m_qtr1_count_isValid = false;

    m_qtr2_count_isSet = false;
    m_qtr2_count_isValid = false;

    m_qtr3_count_isSet = false;
    m_qtr3_count_isValid = false;

    m_qtr4_count_isSet = false;
    m_qtr4_count_isValid = false;

    m_qtr5_count_isSet = false;
    m_qtr5_count_isValid = false;

    m_qtr6_count_isSet = false;
    m_qtr6_count_isValid = false;

    m_qtr7_count_isSet = false;
    m_qtr7_count_isValid = false;

    m_qtr8_count_isSet = false;
    m_qtr8_count_isValid = false;

    m_qtr9_count_isSet = false;
    m_qtr9_count_isValid = false;

    m_source_id_isSet = false;
    m_source_id_isValid = false;
}

void OAIDfr030::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDfr030::fromJsonObject(QJsonObject json) {

    m_missing_late_isValid = ::OpenAPI::fromJsonValue(m_missing_late, json[QString("MissingLate")]);
    m_missing_late_isSet = !json[QString("MissingLate")].isNull() && m_missing_late_isValid;

    m_mnth10_count_isValid = ::OpenAPI::fromJsonValue(m_mnth10_count, json[QString("Mnth10Count")]);
    m_mnth10_count_isSet = !json[QString("Mnth10Count")].isNull() && m_mnth10_count_isValid;

    m_mnth11_count_isValid = ::OpenAPI::fromJsonValue(m_mnth11_count, json[QString("Mnth11Count")]);
    m_mnth11_count_isSet = !json[QString("Mnth11Count")].isNull() && m_mnth11_count_isValid;

    m_mnth12_count_isValid = ::OpenAPI::fromJsonValue(m_mnth12_count, json[QString("Mnth12Count")]);
    m_mnth12_count_isSet = !json[QString("Mnth12Count")].isNull() && m_mnth12_count_isValid;

    m_mnth13_count_isValid = ::OpenAPI::fromJsonValue(m_mnth13_count, json[QString("Mnth13Count")]);
    m_mnth13_count_isSet = !json[QString("Mnth13Count")].isNull() && m_mnth13_count_isValid;

    m_mnth14_count_isValid = ::OpenAPI::fromJsonValue(m_mnth14_count, json[QString("Mnth14Count")]);
    m_mnth14_count_isSet = !json[QString("Mnth14Count")].isNull() && m_mnth14_count_isValid;

    m_mnth15_count_isValid = ::OpenAPI::fromJsonValue(m_mnth15_count, json[QString("Mnth15Count")]);
    m_mnth15_count_isSet = !json[QString("Mnth15Count")].isNull() && m_mnth15_count_isValid;

    m_mnth16_count_isValid = ::OpenAPI::fromJsonValue(m_mnth16_count, json[QString("Mnth16Count")]);
    m_mnth16_count_isSet = !json[QString("Mnth16Count")].isNull() && m_mnth16_count_isValid;

    m_mnth17_count_isValid = ::OpenAPI::fromJsonValue(m_mnth17_count, json[QString("Mnth17Count")]);
    m_mnth17_count_isSet = !json[QString("Mnth17Count")].isNull() && m_mnth17_count_isValid;

    m_mnth18_count_isValid = ::OpenAPI::fromJsonValue(m_mnth18_count, json[QString("Mnth18Count")]);
    m_mnth18_count_isSet = !json[QString("Mnth18Count")].isNull() && m_mnth18_count_isValid;

    m_mnth19_count_isValid = ::OpenAPI::fromJsonValue(m_mnth19_count, json[QString("Mnth19Count")]);
    m_mnth19_count_isSet = !json[QString("Mnth19Count")].isNull() && m_mnth19_count_isValid;

    m_mnth1_count_isValid = ::OpenAPI::fromJsonValue(m_mnth1_count, json[QString("Mnth1Count")]);
    m_mnth1_count_isSet = !json[QString("Mnth1Count")].isNull() && m_mnth1_count_isValid;

    m_mnth20_count_isValid = ::OpenAPI::fromJsonValue(m_mnth20_count, json[QString("Mnth20Count")]);
    m_mnth20_count_isSet = !json[QString("Mnth20Count")].isNull() && m_mnth20_count_isValid;

    m_mnth21_count_isValid = ::OpenAPI::fromJsonValue(m_mnth21_count, json[QString("Mnth21Count")]);
    m_mnth21_count_isSet = !json[QString("Mnth21Count")].isNull() && m_mnth21_count_isValid;

    m_mnth22_count_isValid = ::OpenAPI::fromJsonValue(m_mnth22_count, json[QString("Mnth22Count")]);
    m_mnth22_count_isSet = !json[QString("Mnth22Count")].isNull() && m_mnth22_count_isValid;

    m_mnth23_count_isValid = ::OpenAPI::fromJsonValue(m_mnth23_count, json[QString("Mnth23Count")]);
    m_mnth23_count_isSet = !json[QString("Mnth23Count")].isNull() && m_mnth23_count_isValid;

    m_mnth24_count_isValid = ::OpenAPI::fromJsonValue(m_mnth24_count, json[QString("Mnth24Count")]);
    m_mnth24_count_isSet = !json[QString("Mnth24Count")].isNull() && m_mnth24_count_isValid;

    m_mnth25_count_isValid = ::OpenAPI::fromJsonValue(m_mnth25_count, json[QString("Mnth25Count")]);
    m_mnth25_count_isSet = !json[QString("Mnth25Count")].isNull() && m_mnth25_count_isValid;

    m_mnth26_count_isValid = ::OpenAPI::fromJsonValue(m_mnth26_count, json[QString("Mnth26Count")]);
    m_mnth26_count_isSet = !json[QString("Mnth26Count")].isNull() && m_mnth26_count_isValid;

    m_mnth27_count_isValid = ::OpenAPI::fromJsonValue(m_mnth27_count, json[QString("Mnth27Count")]);
    m_mnth27_count_isSet = !json[QString("Mnth27Count")].isNull() && m_mnth27_count_isValid;

    m_mnth28_count_isValid = ::OpenAPI::fromJsonValue(m_mnth28_count, json[QString("Mnth28Count")]);
    m_mnth28_count_isSet = !json[QString("Mnth28Count")].isNull() && m_mnth28_count_isValid;

    m_mnth29_count_isValid = ::OpenAPI::fromJsonValue(m_mnth29_count, json[QString("Mnth29Count")]);
    m_mnth29_count_isSet = !json[QString("Mnth29Count")].isNull() && m_mnth29_count_isValid;

    m_mnth2_count_isValid = ::OpenAPI::fromJsonValue(m_mnth2_count, json[QString("Mnth2Count")]);
    m_mnth2_count_isSet = !json[QString("Mnth2Count")].isNull() && m_mnth2_count_isValid;

    m_mnth30_count_isValid = ::OpenAPI::fromJsonValue(m_mnth30_count, json[QString("Mnth30Count")]);
    m_mnth30_count_isSet = !json[QString("Mnth30Count")].isNull() && m_mnth30_count_isValid;

    m_mnth31_count_isValid = ::OpenAPI::fromJsonValue(m_mnth31_count, json[QString("Mnth31Count")]);
    m_mnth31_count_isSet = !json[QString("Mnth31Count")].isNull() && m_mnth31_count_isValid;

    m_mnth32_count_isValid = ::OpenAPI::fromJsonValue(m_mnth32_count, json[QString("Mnth32Count")]);
    m_mnth32_count_isSet = !json[QString("Mnth32Count")].isNull() && m_mnth32_count_isValid;

    m_mnth33_count_isValid = ::OpenAPI::fromJsonValue(m_mnth33_count, json[QString("Mnth33Count")]);
    m_mnth33_count_isSet = !json[QString("Mnth33Count")].isNull() && m_mnth33_count_isValid;

    m_mnth34_count_isValid = ::OpenAPI::fromJsonValue(m_mnth34_count, json[QString("Mnth34Count")]);
    m_mnth34_count_isSet = !json[QString("Mnth34Count")].isNull() && m_mnth34_count_isValid;

    m_mnth35_count_isValid = ::OpenAPI::fromJsonValue(m_mnth35_count, json[QString("Mnth35Count")]);
    m_mnth35_count_isSet = !json[QString("Mnth35Count")].isNull() && m_mnth35_count_isValid;

    m_mnth36_count_isValid = ::OpenAPI::fromJsonValue(m_mnth36_count, json[QString("Mnth36Count")]);
    m_mnth36_count_isSet = !json[QString("Mnth36Count")].isNull() && m_mnth36_count_isValid;

    m_mnth37_count_isValid = ::OpenAPI::fromJsonValue(m_mnth37_count, json[QString("Mnth37Count")]);
    m_mnth37_count_isSet = !json[QString("Mnth37Count")].isNull() && m_mnth37_count_isValid;

    m_mnth38_count_isValid = ::OpenAPI::fromJsonValue(m_mnth38_count, json[QString("Mnth38Count")]);
    m_mnth38_count_isSet = !json[QString("Mnth38Count")].isNull() && m_mnth38_count_isValid;

    m_mnth39_count_isValid = ::OpenAPI::fromJsonValue(m_mnth39_count, json[QString("Mnth39Count")]);
    m_mnth39_count_isSet = !json[QString("Mnth39Count")].isNull() && m_mnth39_count_isValid;

    m_mnth3_count_isValid = ::OpenAPI::fromJsonValue(m_mnth3_count, json[QString("Mnth3Count")]);
    m_mnth3_count_isSet = !json[QString("Mnth3Count")].isNull() && m_mnth3_count_isValid;

    m_mnth4_count_isValid = ::OpenAPI::fromJsonValue(m_mnth4_count, json[QString("Mnth4Count")]);
    m_mnth4_count_isSet = !json[QString("Mnth4Count")].isNull() && m_mnth4_count_isValid;

    m_mnth5_count_isValid = ::OpenAPI::fromJsonValue(m_mnth5_count, json[QString("Mnth5Count")]);
    m_mnth5_count_isSet = !json[QString("Mnth5Count")].isNull() && m_mnth5_count_isValid;

    m_mnth6_count_isValid = ::OpenAPI::fromJsonValue(m_mnth6_count, json[QString("Mnth6Count")]);
    m_mnth6_count_isSet = !json[QString("Mnth6Count")].isNull() && m_mnth6_count_isValid;

    m_mnth7_count_isValid = ::OpenAPI::fromJsonValue(m_mnth7_count, json[QString("Mnth7Count")]);
    m_mnth7_count_isSet = !json[QString("Mnth7Count")].isNull() && m_mnth7_count_isValid;

    m_mnth8_count_isValid = ::OpenAPI::fromJsonValue(m_mnth8_count, json[QString("Mnth8Count")]);
    m_mnth8_count_isSet = !json[QString("Mnth8Count")].isNull() && m_mnth8_count_isValid;

    m_mnth9_count_isValid = ::OpenAPI::fromJsonValue(m_mnth9_count, json[QString("Mnth9Count")]);
    m_mnth9_count_isSet = !json[QString("Mnth9Count")].isNull() && m_mnth9_count_isValid;

    m_qtr10_count_isValid = ::OpenAPI::fromJsonValue(m_qtr10_count, json[QString("Qtr10Count")]);
    m_qtr10_count_isSet = !json[QString("Qtr10Count")].isNull() && m_qtr10_count_isValid;

    m_qtr11_count_isValid = ::OpenAPI::fromJsonValue(m_qtr11_count, json[QString("Qtr11Count")]);
    m_qtr11_count_isSet = !json[QString("Qtr11Count")].isNull() && m_qtr11_count_isValid;

    m_qtr12_count_isValid = ::OpenAPI::fromJsonValue(m_qtr12_count, json[QString("Qtr12Count")]);
    m_qtr12_count_isSet = !json[QString("Qtr12Count")].isNull() && m_qtr12_count_isValid;

    m_qtr13_count_isValid = ::OpenAPI::fromJsonValue(m_qtr13_count, json[QString("Qtr13Count")]);
    m_qtr13_count_isSet = !json[QString("Qtr13Count")].isNull() && m_qtr13_count_isValid;

    m_qtr1_count_isValid = ::OpenAPI::fromJsonValue(m_qtr1_count, json[QString("Qtr1Count")]);
    m_qtr1_count_isSet = !json[QString("Qtr1Count")].isNull() && m_qtr1_count_isValid;

    m_qtr2_count_isValid = ::OpenAPI::fromJsonValue(m_qtr2_count, json[QString("Qtr2Count")]);
    m_qtr2_count_isSet = !json[QString("Qtr2Count")].isNull() && m_qtr2_count_isValid;

    m_qtr3_count_isValid = ::OpenAPI::fromJsonValue(m_qtr3_count, json[QString("Qtr3Count")]);
    m_qtr3_count_isSet = !json[QString("Qtr3Count")].isNull() && m_qtr3_count_isValid;

    m_qtr4_count_isValid = ::OpenAPI::fromJsonValue(m_qtr4_count, json[QString("Qtr4Count")]);
    m_qtr4_count_isSet = !json[QString("Qtr4Count")].isNull() && m_qtr4_count_isValid;

    m_qtr5_count_isValid = ::OpenAPI::fromJsonValue(m_qtr5_count, json[QString("Qtr5Count")]);
    m_qtr5_count_isSet = !json[QString("Qtr5Count")].isNull() && m_qtr5_count_isValid;

    m_qtr6_count_isValid = ::OpenAPI::fromJsonValue(m_qtr6_count, json[QString("Qtr6Count")]);
    m_qtr6_count_isSet = !json[QString("Qtr6Count")].isNull() && m_qtr6_count_isValid;

    m_qtr7_count_isValid = ::OpenAPI::fromJsonValue(m_qtr7_count, json[QString("Qtr7Count")]);
    m_qtr7_count_isSet = !json[QString("Qtr7Count")].isNull() && m_qtr7_count_isValid;

    m_qtr8_count_isValid = ::OpenAPI::fromJsonValue(m_qtr8_count, json[QString("Qtr8Count")]);
    m_qtr8_count_isSet = !json[QString("Qtr8Count")].isNull() && m_qtr8_count_isValid;

    m_qtr9_count_isValid = ::OpenAPI::fromJsonValue(m_qtr9_count, json[QString("Qtr9Count")]);
    m_qtr9_count_isSet = !json[QString("Qtr9Count")].isNull() && m_qtr9_count_isValid;

    m_source_id_isValid = ::OpenAPI::fromJsonValue(m_source_id, json[QString("SourceID")]);
    m_source_id_isSet = !json[QString("SourceID")].isNull() && m_source_id_isValid;
}

QString OAIDfr030::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDfr030::asJsonObject() const {
    QJsonObject obj;
    if (m_missing_late_isSet) {
        obj.insert(QString("MissingLate"), ::OpenAPI::toJsonValue(m_missing_late));
    }
    if (m_mnth10_count_isSet) {
        obj.insert(QString("Mnth10Count"), ::OpenAPI::toJsonValue(m_mnth10_count));
    }
    if (m_mnth11_count_isSet) {
        obj.insert(QString("Mnth11Count"), ::OpenAPI::toJsonValue(m_mnth11_count));
    }
    if (m_mnth12_count_isSet) {
        obj.insert(QString("Mnth12Count"), ::OpenAPI::toJsonValue(m_mnth12_count));
    }
    if (m_mnth13_count_isSet) {
        obj.insert(QString("Mnth13Count"), ::OpenAPI::toJsonValue(m_mnth13_count));
    }
    if (m_mnth14_count_isSet) {
        obj.insert(QString("Mnth14Count"), ::OpenAPI::toJsonValue(m_mnth14_count));
    }
    if (m_mnth15_count_isSet) {
        obj.insert(QString("Mnth15Count"), ::OpenAPI::toJsonValue(m_mnth15_count));
    }
    if (m_mnth16_count_isSet) {
        obj.insert(QString("Mnth16Count"), ::OpenAPI::toJsonValue(m_mnth16_count));
    }
    if (m_mnth17_count_isSet) {
        obj.insert(QString("Mnth17Count"), ::OpenAPI::toJsonValue(m_mnth17_count));
    }
    if (m_mnth18_count_isSet) {
        obj.insert(QString("Mnth18Count"), ::OpenAPI::toJsonValue(m_mnth18_count));
    }
    if (m_mnth19_count_isSet) {
        obj.insert(QString("Mnth19Count"), ::OpenAPI::toJsonValue(m_mnth19_count));
    }
    if (m_mnth1_count_isSet) {
        obj.insert(QString("Mnth1Count"), ::OpenAPI::toJsonValue(m_mnth1_count));
    }
    if (m_mnth20_count_isSet) {
        obj.insert(QString("Mnth20Count"), ::OpenAPI::toJsonValue(m_mnth20_count));
    }
    if (m_mnth21_count_isSet) {
        obj.insert(QString("Mnth21Count"), ::OpenAPI::toJsonValue(m_mnth21_count));
    }
    if (m_mnth22_count_isSet) {
        obj.insert(QString("Mnth22Count"), ::OpenAPI::toJsonValue(m_mnth22_count));
    }
    if (m_mnth23_count_isSet) {
        obj.insert(QString("Mnth23Count"), ::OpenAPI::toJsonValue(m_mnth23_count));
    }
    if (m_mnth24_count_isSet) {
        obj.insert(QString("Mnth24Count"), ::OpenAPI::toJsonValue(m_mnth24_count));
    }
    if (m_mnth25_count_isSet) {
        obj.insert(QString("Mnth25Count"), ::OpenAPI::toJsonValue(m_mnth25_count));
    }
    if (m_mnth26_count_isSet) {
        obj.insert(QString("Mnth26Count"), ::OpenAPI::toJsonValue(m_mnth26_count));
    }
    if (m_mnth27_count_isSet) {
        obj.insert(QString("Mnth27Count"), ::OpenAPI::toJsonValue(m_mnth27_count));
    }
    if (m_mnth28_count_isSet) {
        obj.insert(QString("Mnth28Count"), ::OpenAPI::toJsonValue(m_mnth28_count));
    }
    if (m_mnth29_count_isSet) {
        obj.insert(QString("Mnth29Count"), ::OpenAPI::toJsonValue(m_mnth29_count));
    }
    if (m_mnth2_count_isSet) {
        obj.insert(QString("Mnth2Count"), ::OpenAPI::toJsonValue(m_mnth2_count));
    }
    if (m_mnth30_count_isSet) {
        obj.insert(QString("Mnth30Count"), ::OpenAPI::toJsonValue(m_mnth30_count));
    }
    if (m_mnth31_count_isSet) {
        obj.insert(QString("Mnth31Count"), ::OpenAPI::toJsonValue(m_mnth31_count));
    }
    if (m_mnth32_count_isSet) {
        obj.insert(QString("Mnth32Count"), ::OpenAPI::toJsonValue(m_mnth32_count));
    }
    if (m_mnth33_count_isSet) {
        obj.insert(QString("Mnth33Count"), ::OpenAPI::toJsonValue(m_mnth33_count));
    }
    if (m_mnth34_count_isSet) {
        obj.insert(QString("Mnth34Count"), ::OpenAPI::toJsonValue(m_mnth34_count));
    }
    if (m_mnth35_count_isSet) {
        obj.insert(QString("Mnth35Count"), ::OpenAPI::toJsonValue(m_mnth35_count));
    }
    if (m_mnth36_count_isSet) {
        obj.insert(QString("Mnth36Count"), ::OpenAPI::toJsonValue(m_mnth36_count));
    }
    if (m_mnth37_count_isSet) {
        obj.insert(QString("Mnth37Count"), ::OpenAPI::toJsonValue(m_mnth37_count));
    }
    if (m_mnth38_count_isSet) {
        obj.insert(QString("Mnth38Count"), ::OpenAPI::toJsonValue(m_mnth38_count));
    }
    if (m_mnth39_count_isSet) {
        obj.insert(QString("Mnth39Count"), ::OpenAPI::toJsonValue(m_mnth39_count));
    }
    if (m_mnth3_count_isSet) {
        obj.insert(QString("Mnth3Count"), ::OpenAPI::toJsonValue(m_mnth3_count));
    }
    if (m_mnth4_count_isSet) {
        obj.insert(QString("Mnth4Count"), ::OpenAPI::toJsonValue(m_mnth4_count));
    }
    if (m_mnth5_count_isSet) {
        obj.insert(QString("Mnth5Count"), ::OpenAPI::toJsonValue(m_mnth5_count));
    }
    if (m_mnth6_count_isSet) {
        obj.insert(QString("Mnth6Count"), ::OpenAPI::toJsonValue(m_mnth6_count));
    }
    if (m_mnth7_count_isSet) {
        obj.insert(QString("Mnth7Count"), ::OpenAPI::toJsonValue(m_mnth7_count));
    }
    if (m_mnth8_count_isSet) {
        obj.insert(QString("Mnth8Count"), ::OpenAPI::toJsonValue(m_mnth8_count));
    }
    if (m_mnth9_count_isSet) {
        obj.insert(QString("Mnth9Count"), ::OpenAPI::toJsonValue(m_mnth9_count));
    }
    if (m_qtr10_count_isSet) {
        obj.insert(QString("Qtr10Count"), ::OpenAPI::toJsonValue(m_qtr10_count));
    }
    if (m_qtr11_count_isSet) {
        obj.insert(QString("Qtr11Count"), ::OpenAPI::toJsonValue(m_qtr11_count));
    }
    if (m_qtr12_count_isSet) {
        obj.insert(QString("Qtr12Count"), ::OpenAPI::toJsonValue(m_qtr12_count));
    }
    if (m_qtr13_count_isSet) {
        obj.insert(QString("Qtr13Count"), ::OpenAPI::toJsonValue(m_qtr13_count));
    }
    if (m_qtr1_count_isSet) {
        obj.insert(QString("Qtr1Count"), ::OpenAPI::toJsonValue(m_qtr1_count));
    }
    if (m_qtr2_count_isSet) {
        obj.insert(QString("Qtr2Count"), ::OpenAPI::toJsonValue(m_qtr2_count));
    }
    if (m_qtr3_count_isSet) {
        obj.insert(QString("Qtr3Count"), ::OpenAPI::toJsonValue(m_qtr3_count));
    }
    if (m_qtr4_count_isSet) {
        obj.insert(QString("Qtr4Count"), ::OpenAPI::toJsonValue(m_qtr4_count));
    }
    if (m_qtr5_count_isSet) {
        obj.insert(QString("Qtr5Count"), ::OpenAPI::toJsonValue(m_qtr5_count));
    }
    if (m_qtr6_count_isSet) {
        obj.insert(QString("Qtr6Count"), ::OpenAPI::toJsonValue(m_qtr6_count));
    }
    if (m_qtr7_count_isSet) {
        obj.insert(QString("Qtr7Count"), ::OpenAPI::toJsonValue(m_qtr7_count));
    }
    if (m_qtr8_count_isSet) {
        obj.insert(QString("Qtr8Count"), ::OpenAPI::toJsonValue(m_qtr8_count));
    }
    if (m_qtr9_count_isSet) {
        obj.insert(QString("Qtr9Count"), ::OpenAPI::toJsonValue(m_qtr9_count));
    }
    if (m_source_id_isSet) {
        obj.insert(QString("SourceID"), ::OpenAPI::toJsonValue(m_source_id));
    }
    return obj;
}

QString OAIDfr030::getMissingLate() const {
    return m_missing_late;
}
void OAIDfr030::setMissingLate(const QString &missing_late) {
    m_missing_late = missing_late;
    m_missing_late_isSet = true;
}

bool OAIDfr030::is_missing_late_Set() const{
    return m_missing_late_isSet;
}

bool OAIDfr030::is_missing_late_Valid() const{
    return m_missing_late_isValid;
}

QString OAIDfr030::getMnth10Count() const {
    return m_mnth10_count;
}
void OAIDfr030::setMnth10Count(const QString &mnth10_count) {
    m_mnth10_count = mnth10_count;
    m_mnth10_count_isSet = true;
}

bool OAIDfr030::is_mnth10_count_Set() const{
    return m_mnth10_count_isSet;
}

bool OAIDfr030::is_mnth10_count_Valid() const{
    return m_mnth10_count_isValid;
}

QString OAIDfr030::getMnth11Count() const {
    return m_mnth11_count;
}
void OAIDfr030::setMnth11Count(const QString &mnth11_count) {
    m_mnth11_count = mnth11_count;
    m_mnth11_count_isSet = true;
}

bool OAIDfr030::is_mnth11_count_Set() const{
    return m_mnth11_count_isSet;
}

bool OAIDfr030::is_mnth11_count_Valid() const{
    return m_mnth11_count_isValid;
}

QString OAIDfr030::getMnth12Count() const {
    return m_mnth12_count;
}
void OAIDfr030::setMnth12Count(const QString &mnth12_count) {
    m_mnth12_count = mnth12_count;
    m_mnth12_count_isSet = true;
}

bool OAIDfr030::is_mnth12_count_Set() const{
    return m_mnth12_count_isSet;
}

bool OAIDfr030::is_mnth12_count_Valid() const{
    return m_mnth12_count_isValid;
}

QString OAIDfr030::getMnth13Count() const {
    return m_mnth13_count;
}
void OAIDfr030::setMnth13Count(const QString &mnth13_count) {
    m_mnth13_count = mnth13_count;
    m_mnth13_count_isSet = true;
}

bool OAIDfr030::is_mnth13_count_Set() const{
    return m_mnth13_count_isSet;
}

bool OAIDfr030::is_mnth13_count_Valid() const{
    return m_mnth13_count_isValid;
}

QString OAIDfr030::getMnth14Count() const {
    return m_mnth14_count;
}
void OAIDfr030::setMnth14Count(const QString &mnth14_count) {
    m_mnth14_count = mnth14_count;
    m_mnth14_count_isSet = true;
}

bool OAIDfr030::is_mnth14_count_Set() const{
    return m_mnth14_count_isSet;
}

bool OAIDfr030::is_mnth14_count_Valid() const{
    return m_mnth14_count_isValid;
}

QString OAIDfr030::getMnth15Count() const {
    return m_mnth15_count;
}
void OAIDfr030::setMnth15Count(const QString &mnth15_count) {
    m_mnth15_count = mnth15_count;
    m_mnth15_count_isSet = true;
}

bool OAIDfr030::is_mnth15_count_Set() const{
    return m_mnth15_count_isSet;
}

bool OAIDfr030::is_mnth15_count_Valid() const{
    return m_mnth15_count_isValid;
}

QString OAIDfr030::getMnth16Count() const {
    return m_mnth16_count;
}
void OAIDfr030::setMnth16Count(const QString &mnth16_count) {
    m_mnth16_count = mnth16_count;
    m_mnth16_count_isSet = true;
}

bool OAIDfr030::is_mnth16_count_Set() const{
    return m_mnth16_count_isSet;
}

bool OAIDfr030::is_mnth16_count_Valid() const{
    return m_mnth16_count_isValid;
}

QString OAIDfr030::getMnth17Count() const {
    return m_mnth17_count;
}
void OAIDfr030::setMnth17Count(const QString &mnth17_count) {
    m_mnth17_count = mnth17_count;
    m_mnth17_count_isSet = true;
}

bool OAIDfr030::is_mnth17_count_Set() const{
    return m_mnth17_count_isSet;
}

bool OAIDfr030::is_mnth17_count_Valid() const{
    return m_mnth17_count_isValid;
}

QString OAIDfr030::getMnth18Count() const {
    return m_mnth18_count;
}
void OAIDfr030::setMnth18Count(const QString &mnth18_count) {
    m_mnth18_count = mnth18_count;
    m_mnth18_count_isSet = true;
}

bool OAIDfr030::is_mnth18_count_Set() const{
    return m_mnth18_count_isSet;
}

bool OAIDfr030::is_mnth18_count_Valid() const{
    return m_mnth18_count_isValid;
}

QString OAIDfr030::getMnth19Count() const {
    return m_mnth19_count;
}
void OAIDfr030::setMnth19Count(const QString &mnth19_count) {
    m_mnth19_count = mnth19_count;
    m_mnth19_count_isSet = true;
}

bool OAIDfr030::is_mnth19_count_Set() const{
    return m_mnth19_count_isSet;
}

bool OAIDfr030::is_mnth19_count_Valid() const{
    return m_mnth19_count_isValid;
}

QString OAIDfr030::getMnth1Count() const {
    return m_mnth1_count;
}
void OAIDfr030::setMnth1Count(const QString &mnth1_count) {
    m_mnth1_count = mnth1_count;
    m_mnth1_count_isSet = true;
}

bool OAIDfr030::is_mnth1_count_Set() const{
    return m_mnth1_count_isSet;
}

bool OAIDfr030::is_mnth1_count_Valid() const{
    return m_mnth1_count_isValid;
}

QString OAIDfr030::getMnth20Count() const {
    return m_mnth20_count;
}
void OAIDfr030::setMnth20Count(const QString &mnth20_count) {
    m_mnth20_count = mnth20_count;
    m_mnth20_count_isSet = true;
}

bool OAIDfr030::is_mnth20_count_Set() const{
    return m_mnth20_count_isSet;
}

bool OAIDfr030::is_mnth20_count_Valid() const{
    return m_mnth20_count_isValid;
}

QString OAIDfr030::getMnth21Count() const {
    return m_mnth21_count;
}
void OAIDfr030::setMnth21Count(const QString &mnth21_count) {
    m_mnth21_count = mnth21_count;
    m_mnth21_count_isSet = true;
}

bool OAIDfr030::is_mnth21_count_Set() const{
    return m_mnth21_count_isSet;
}

bool OAIDfr030::is_mnth21_count_Valid() const{
    return m_mnth21_count_isValid;
}

QString OAIDfr030::getMnth22Count() const {
    return m_mnth22_count;
}
void OAIDfr030::setMnth22Count(const QString &mnth22_count) {
    m_mnth22_count = mnth22_count;
    m_mnth22_count_isSet = true;
}

bool OAIDfr030::is_mnth22_count_Set() const{
    return m_mnth22_count_isSet;
}

bool OAIDfr030::is_mnth22_count_Valid() const{
    return m_mnth22_count_isValid;
}

QString OAIDfr030::getMnth23Count() const {
    return m_mnth23_count;
}
void OAIDfr030::setMnth23Count(const QString &mnth23_count) {
    m_mnth23_count = mnth23_count;
    m_mnth23_count_isSet = true;
}

bool OAIDfr030::is_mnth23_count_Set() const{
    return m_mnth23_count_isSet;
}

bool OAIDfr030::is_mnth23_count_Valid() const{
    return m_mnth23_count_isValid;
}

QString OAIDfr030::getMnth24Count() const {
    return m_mnth24_count;
}
void OAIDfr030::setMnth24Count(const QString &mnth24_count) {
    m_mnth24_count = mnth24_count;
    m_mnth24_count_isSet = true;
}

bool OAIDfr030::is_mnth24_count_Set() const{
    return m_mnth24_count_isSet;
}

bool OAIDfr030::is_mnth24_count_Valid() const{
    return m_mnth24_count_isValid;
}

QString OAIDfr030::getMnth25Count() const {
    return m_mnth25_count;
}
void OAIDfr030::setMnth25Count(const QString &mnth25_count) {
    m_mnth25_count = mnth25_count;
    m_mnth25_count_isSet = true;
}

bool OAIDfr030::is_mnth25_count_Set() const{
    return m_mnth25_count_isSet;
}

bool OAIDfr030::is_mnth25_count_Valid() const{
    return m_mnth25_count_isValid;
}

QString OAIDfr030::getMnth26Count() const {
    return m_mnth26_count;
}
void OAIDfr030::setMnth26Count(const QString &mnth26_count) {
    m_mnth26_count = mnth26_count;
    m_mnth26_count_isSet = true;
}

bool OAIDfr030::is_mnth26_count_Set() const{
    return m_mnth26_count_isSet;
}

bool OAIDfr030::is_mnth26_count_Valid() const{
    return m_mnth26_count_isValid;
}

QString OAIDfr030::getMnth27Count() const {
    return m_mnth27_count;
}
void OAIDfr030::setMnth27Count(const QString &mnth27_count) {
    m_mnth27_count = mnth27_count;
    m_mnth27_count_isSet = true;
}

bool OAIDfr030::is_mnth27_count_Set() const{
    return m_mnth27_count_isSet;
}

bool OAIDfr030::is_mnth27_count_Valid() const{
    return m_mnth27_count_isValid;
}

QString OAIDfr030::getMnth28Count() const {
    return m_mnth28_count;
}
void OAIDfr030::setMnth28Count(const QString &mnth28_count) {
    m_mnth28_count = mnth28_count;
    m_mnth28_count_isSet = true;
}

bool OAIDfr030::is_mnth28_count_Set() const{
    return m_mnth28_count_isSet;
}

bool OAIDfr030::is_mnth28_count_Valid() const{
    return m_mnth28_count_isValid;
}

QString OAIDfr030::getMnth29Count() const {
    return m_mnth29_count;
}
void OAIDfr030::setMnth29Count(const QString &mnth29_count) {
    m_mnth29_count = mnth29_count;
    m_mnth29_count_isSet = true;
}

bool OAIDfr030::is_mnth29_count_Set() const{
    return m_mnth29_count_isSet;
}

bool OAIDfr030::is_mnth29_count_Valid() const{
    return m_mnth29_count_isValid;
}

QString OAIDfr030::getMnth2Count() const {
    return m_mnth2_count;
}
void OAIDfr030::setMnth2Count(const QString &mnth2_count) {
    m_mnth2_count = mnth2_count;
    m_mnth2_count_isSet = true;
}

bool OAIDfr030::is_mnth2_count_Set() const{
    return m_mnth2_count_isSet;
}

bool OAIDfr030::is_mnth2_count_Valid() const{
    return m_mnth2_count_isValid;
}

QString OAIDfr030::getMnth30Count() const {
    return m_mnth30_count;
}
void OAIDfr030::setMnth30Count(const QString &mnth30_count) {
    m_mnth30_count = mnth30_count;
    m_mnth30_count_isSet = true;
}

bool OAIDfr030::is_mnth30_count_Set() const{
    return m_mnth30_count_isSet;
}

bool OAIDfr030::is_mnth30_count_Valid() const{
    return m_mnth30_count_isValid;
}

QString OAIDfr030::getMnth31Count() const {
    return m_mnth31_count;
}
void OAIDfr030::setMnth31Count(const QString &mnth31_count) {
    m_mnth31_count = mnth31_count;
    m_mnth31_count_isSet = true;
}

bool OAIDfr030::is_mnth31_count_Set() const{
    return m_mnth31_count_isSet;
}

bool OAIDfr030::is_mnth31_count_Valid() const{
    return m_mnth31_count_isValid;
}

QString OAIDfr030::getMnth32Count() const {
    return m_mnth32_count;
}
void OAIDfr030::setMnth32Count(const QString &mnth32_count) {
    m_mnth32_count = mnth32_count;
    m_mnth32_count_isSet = true;
}

bool OAIDfr030::is_mnth32_count_Set() const{
    return m_mnth32_count_isSet;
}

bool OAIDfr030::is_mnth32_count_Valid() const{
    return m_mnth32_count_isValid;
}

QString OAIDfr030::getMnth33Count() const {
    return m_mnth33_count;
}
void OAIDfr030::setMnth33Count(const QString &mnth33_count) {
    m_mnth33_count = mnth33_count;
    m_mnth33_count_isSet = true;
}

bool OAIDfr030::is_mnth33_count_Set() const{
    return m_mnth33_count_isSet;
}

bool OAIDfr030::is_mnth33_count_Valid() const{
    return m_mnth33_count_isValid;
}

QString OAIDfr030::getMnth34Count() const {
    return m_mnth34_count;
}
void OAIDfr030::setMnth34Count(const QString &mnth34_count) {
    m_mnth34_count = mnth34_count;
    m_mnth34_count_isSet = true;
}

bool OAIDfr030::is_mnth34_count_Set() const{
    return m_mnth34_count_isSet;
}

bool OAIDfr030::is_mnth34_count_Valid() const{
    return m_mnth34_count_isValid;
}

QString OAIDfr030::getMnth35Count() const {
    return m_mnth35_count;
}
void OAIDfr030::setMnth35Count(const QString &mnth35_count) {
    m_mnth35_count = mnth35_count;
    m_mnth35_count_isSet = true;
}

bool OAIDfr030::is_mnth35_count_Set() const{
    return m_mnth35_count_isSet;
}

bool OAIDfr030::is_mnth35_count_Valid() const{
    return m_mnth35_count_isValid;
}

QString OAIDfr030::getMnth36Count() const {
    return m_mnth36_count;
}
void OAIDfr030::setMnth36Count(const QString &mnth36_count) {
    m_mnth36_count = mnth36_count;
    m_mnth36_count_isSet = true;
}

bool OAIDfr030::is_mnth36_count_Set() const{
    return m_mnth36_count_isSet;
}

bool OAIDfr030::is_mnth36_count_Valid() const{
    return m_mnth36_count_isValid;
}

QString OAIDfr030::getMnth37Count() const {
    return m_mnth37_count;
}
void OAIDfr030::setMnth37Count(const QString &mnth37_count) {
    m_mnth37_count = mnth37_count;
    m_mnth37_count_isSet = true;
}

bool OAIDfr030::is_mnth37_count_Set() const{
    return m_mnth37_count_isSet;
}

bool OAIDfr030::is_mnth37_count_Valid() const{
    return m_mnth37_count_isValid;
}

QString OAIDfr030::getMnth38Count() const {
    return m_mnth38_count;
}
void OAIDfr030::setMnth38Count(const QString &mnth38_count) {
    m_mnth38_count = mnth38_count;
    m_mnth38_count_isSet = true;
}

bool OAIDfr030::is_mnth38_count_Set() const{
    return m_mnth38_count_isSet;
}

bool OAIDfr030::is_mnth38_count_Valid() const{
    return m_mnth38_count_isValid;
}

QString OAIDfr030::getMnth39Count() const {
    return m_mnth39_count;
}
void OAIDfr030::setMnth39Count(const QString &mnth39_count) {
    m_mnth39_count = mnth39_count;
    m_mnth39_count_isSet = true;
}

bool OAIDfr030::is_mnth39_count_Set() const{
    return m_mnth39_count_isSet;
}

bool OAIDfr030::is_mnth39_count_Valid() const{
    return m_mnth39_count_isValid;
}

QString OAIDfr030::getMnth3Count() const {
    return m_mnth3_count;
}
void OAIDfr030::setMnth3Count(const QString &mnth3_count) {
    m_mnth3_count = mnth3_count;
    m_mnth3_count_isSet = true;
}

bool OAIDfr030::is_mnth3_count_Set() const{
    return m_mnth3_count_isSet;
}

bool OAIDfr030::is_mnth3_count_Valid() const{
    return m_mnth3_count_isValid;
}

QString OAIDfr030::getMnth4Count() const {
    return m_mnth4_count;
}
void OAIDfr030::setMnth4Count(const QString &mnth4_count) {
    m_mnth4_count = mnth4_count;
    m_mnth4_count_isSet = true;
}

bool OAIDfr030::is_mnth4_count_Set() const{
    return m_mnth4_count_isSet;
}

bool OAIDfr030::is_mnth4_count_Valid() const{
    return m_mnth4_count_isValid;
}

QString OAIDfr030::getMnth5Count() const {
    return m_mnth5_count;
}
void OAIDfr030::setMnth5Count(const QString &mnth5_count) {
    m_mnth5_count = mnth5_count;
    m_mnth5_count_isSet = true;
}

bool OAIDfr030::is_mnth5_count_Set() const{
    return m_mnth5_count_isSet;
}

bool OAIDfr030::is_mnth5_count_Valid() const{
    return m_mnth5_count_isValid;
}

QString OAIDfr030::getMnth6Count() const {
    return m_mnth6_count;
}
void OAIDfr030::setMnth6Count(const QString &mnth6_count) {
    m_mnth6_count = mnth6_count;
    m_mnth6_count_isSet = true;
}

bool OAIDfr030::is_mnth6_count_Set() const{
    return m_mnth6_count_isSet;
}

bool OAIDfr030::is_mnth6_count_Valid() const{
    return m_mnth6_count_isValid;
}

QString OAIDfr030::getMnth7Count() const {
    return m_mnth7_count;
}
void OAIDfr030::setMnth7Count(const QString &mnth7_count) {
    m_mnth7_count = mnth7_count;
    m_mnth7_count_isSet = true;
}

bool OAIDfr030::is_mnth7_count_Set() const{
    return m_mnth7_count_isSet;
}

bool OAIDfr030::is_mnth7_count_Valid() const{
    return m_mnth7_count_isValid;
}

QString OAIDfr030::getMnth8Count() const {
    return m_mnth8_count;
}
void OAIDfr030::setMnth8Count(const QString &mnth8_count) {
    m_mnth8_count = mnth8_count;
    m_mnth8_count_isSet = true;
}

bool OAIDfr030::is_mnth8_count_Set() const{
    return m_mnth8_count_isSet;
}

bool OAIDfr030::is_mnth8_count_Valid() const{
    return m_mnth8_count_isValid;
}

QString OAIDfr030::getMnth9Count() const {
    return m_mnth9_count;
}
void OAIDfr030::setMnth9Count(const QString &mnth9_count) {
    m_mnth9_count = mnth9_count;
    m_mnth9_count_isSet = true;
}

bool OAIDfr030::is_mnth9_count_Set() const{
    return m_mnth9_count_isSet;
}

bool OAIDfr030::is_mnth9_count_Valid() const{
    return m_mnth9_count_isValid;
}

QString OAIDfr030::getQtr10Count() const {
    return m_qtr10_count;
}
void OAIDfr030::setQtr10Count(const QString &qtr10_count) {
    m_qtr10_count = qtr10_count;
    m_qtr10_count_isSet = true;
}

bool OAIDfr030::is_qtr10_count_Set() const{
    return m_qtr10_count_isSet;
}

bool OAIDfr030::is_qtr10_count_Valid() const{
    return m_qtr10_count_isValid;
}

QString OAIDfr030::getQtr11Count() const {
    return m_qtr11_count;
}
void OAIDfr030::setQtr11Count(const QString &qtr11_count) {
    m_qtr11_count = qtr11_count;
    m_qtr11_count_isSet = true;
}

bool OAIDfr030::is_qtr11_count_Set() const{
    return m_qtr11_count_isSet;
}

bool OAIDfr030::is_qtr11_count_Valid() const{
    return m_qtr11_count_isValid;
}

QString OAIDfr030::getQtr12Count() const {
    return m_qtr12_count;
}
void OAIDfr030::setQtr12Count(const QString &qtr12_count) {
    m_qtr12_count = qtr12_count;
    m_qtr12_count_isSet = true;
}

bool OAIDfr030::is_qtr12_count_Set() const{
    return m_qtr12_count_isSet;
}

bool OAIDfr030::is_qtr12_count_Valid() const{
    return m_qtr12_count_isValid;
}

QString OAIDfr030::getQtr13Count() const {
    return m_qtr13_count;
}
void OAIDfr030::setQtr13Count(const QString &qtr13_count) {
    m_qtr13_count = qtr13_count;
    m_qtr13_count_isSet = true;
}

bool OAIDfr030::is_qtr13_count_Set() const{
    return m_qtr13_count_isSet;
}

bool OAIDfr030::is_qtr13_count_Valid() const{
    return m_qtr13_count_isValid;
}

QString OAIDfr030::getQtr1Count() const {
    return m_qtr1_count;
}
void OAIDfr030::setQtr1Count(const QString &qtr1_count) {
    m_qtr1_count = qtr1_count;
    m_qtr1_count_isSet = true;
}

bool OAIDfr030::is_qtr1_count_Set() const{
    return m_qtr1_count_isSet;
}

bool OAIDfr030::is_qtr1_count_Valid() const{
    return m_qtr1_count_isValid;
}

QString OAIDfr030::getQtr2Count() const {
    return m_qtr2_count;
}
void OAIDfr030::setQtr2Count(const QString &qtr2_count) {
    m_qtr2_count = qtr2_count;
    m_qtr2_count_isSet = true;
}

bool OAIDfr030::is_qtr2_count_Set() const{
    return m_qtr2_count_isSet;
}

bool OAIDfr030::is_qtr2_count_Valid() const{
    return m_qtr2_count_isValid;
}

QString OAIDfr030::getQtr3Count() const {
    return m_qtr3_count;
}
void OAIDfr030::setQtr3Count(const QString &qtr3_count) {
    m_qtr3_count = qtr3_count;
    m_qtr3_count_isSet = true;
}

bool OAIDfr030::is_qtr3_count_Set() const{
    return m_qtr3_count_isSet;
}

bool OAIDfr030::is_qtr3_count_Valid() const{
    return m_qtr3_count_isValid;
}

QString OAIDfr030::getQtr4Count() const {
    return m_qtr4_count;
}
void OAIDfr030::setQtr4Count(const QString &qtr4_count) {
    m_qtr4_count = qtr4_count;
    m_qtr4_count_isSet = true;
}

bool OAIDfr030::is_qtr4_count_Set() const{
    return m_qtr4_count_isSet;
}

bool OAIDfr030::is_qtr4_count_Valid() const{
    return m_qtr4_count_isValid;
}

QString OAIDfr030::getQtr5Count() const {
    return m_qtr5_count;
}
void OAIDfr030::setQtr5Count(const QString &qtr5_count) {
    m_qtr5_count = qtr5_count;
    m_qtr5_count_isSet = true;
}

bool OAIDfr030::is_qtr5_count_Set() const{
    return m_qtr5_count_isSet;
}

bool OAIDfr030::is_qtr5_count_Valid() const{
    return m_qtr5_count_isValid;
}

QString OAIDfr030::getQtr6Count() const {
    return m_qtr6_count;
}
void OAIDfr030::setQtr6Count(const QString &qtr6_count) {
    m_qtr6_count = qtr6_count;
    m_qtr6_count_isSet = true;
}

bool OAIDfr030::is_qtr6_count_Set() const{
    return m_qtr6_count_isSet;
}

bool OAIDfr030::is_qtr6_count_Valid() const{
    return m_qtr6_count_isValid;
}

QString OAIDfr030::getQtr7Count() const {
    return m_qtr7_count;
}
void OAIDfr030::setQtr7Count(const QString &qtr7_count) {
    m_qtr7_count = qtr7_count;
    m_qtr7_count_isSet = true;
}

bool OAIDfr030::is_qtr7_count_Set() const{
    return m_qtr7_count_isSet;
}

bool OAIDfr030::is_qtr7_count_Valid() const{
    return m_qtr7_count_isValid;
}

QString OAIDfr030::getQtr8Count() const {
    return m_qtr8_count;
}
void OAIDfr030::setQtr8Count(const QString &qtr8_count) {
    m_qtr8_count = qtr8_count;
    m_qtr8_count_isSet = true;
}

bool OAIDfr030::is_qtr8_count_Set() const{
    return m_qtr8_count_isSet;
}

bool OAIDfr030::is_qtr8_count_Valid() const{
    return m_qtr8_count_isValid;
}

QString OAIDfr030::getQtr9Count() const {
    return m_qtr9_count;
}
void OAIDfr030::setQtr9Count(const QString &qtr9_count) {
    m_qtr9_count = qtr9_count;
    m_qtr9_count_isSet = true;
}

bool OAIDfr030::is_qtr9_count_Set() const{
    return m_qtr9_count_isSet;
}

bool OAIDfr030::is_qtr9_count_Valid() const{
    return m_qtr9_count_isValid;
}

QString OAIDfr030::getSourceId() const {
    return m_source_id;
}
void OAIDfr030::setSourceId(const QString &source_id) {
    m_source_id = source_id;
    m_source_id_isSet = true;
}

bool OAIDfr030::is_source_id_Set() const{
    return m_source_id_isSet;
}

bool OAIDfr030::is_source_id_Valid() const{
    return m_source_id_isValid;
}

bool OAIDfr030::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_missing_late_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth10_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth11_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth12_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth13_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth14_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth15_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth16_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth17_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth18_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth19_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth1_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth20_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth21_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth22_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth23_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth24_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth25_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth26_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth27_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth28_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth29_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth2_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth30_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth31_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth32_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth33_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth34_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth35_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth36_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth37_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth38_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth39_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth3_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth4_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth5_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth6_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth7_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth8_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnth9_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_qtr10_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_qtr11_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_qtr12_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_qtr13_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_qtr1_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_qtr2_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_qtr3_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_qtr4_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_qtr5_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_qtr6_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_qtr7_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_qtr8_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_qtr9_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDfr030::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_missing_late_isValid && m_mnth10_count_isValid && m_mnth11_count_isValid && m_mnth12_count_isValid && m_mnth13_count_isValid && m_mnth14_count_isValid && m_mnth15_count_isValid && m_mnth16_count_isValid && m_mnth17_count_isValid && m_mnth18_count_isValid && m_mnth19_count_isValid && m_mnth1_count_isValid && m_mnth20_count_isValid && m_mnth21_count_isValid && m_mnth22_count_isValid && m_mnth23_count_isValid && m_mnth24_count_isValid && m_mnth25_count_isValid && m_mnth26_count_isValid && m_mnth27_count_isValid && m_mnth28_count_isValid && m_mnth29_count_isValid && m_mnth2_count_isValid && m_mnth30_count_isValid && m_mnth31_count_isValid && m_mnth32_count_isValid && m_mnth33_count_isValid && m_mnth34_count_isValid && m_mnth35_count_isValid && m_mnth36_count_isValid && m_mnth37_count_isValid && m_mnth38_count_isValid && m_mnth39_count_isValid && m_mnth3_count_isValid && m_mnth4_count_isValid && m_mnth5_count_isValid && m_mnth6_count_isValid && m_mnth7_count_isValid && m_mnth8_count_isValid && m_mnth9_count_isValid && m_qtr10_count_isValid && m_qtr11_count_isValid && m_qtr12_count_isValid && m_qtr13_count_isValid && m_qtr1_count_isValid && m_qtr2_count_isValid && m_qtr3_count_isValid && m_qtr4_count_isValid && m_qtr5_count_isValid && m_qtr6_count_isValid && m_qtr7_count_isValid && m_qtr8_count_isValid && m_qtr9_count_isValid && m_source_id_isValid && true;
}

} // namespace OpenAPI
