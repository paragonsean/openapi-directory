/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDfr118_Results.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDfr118_Results::OAIDfr118_Results(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDfr118_Results::OAIDfr118_Results() {
    this->initializeModel();
}

OAIDfr118_Results::~OAIDfr118_Results() {}

void OAIDfr118_Results::initializeModel() {

    m_inspection_enforcement_summary_isSet = false;
    m_inspection_enforcement_summary_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;
}

void OAIDfr118_Results::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDfr118_Results::fromJsonObject(QJsonObject json) {

    m_inspection_enforcement_summary_isValid = ::OpenAPI::fromJsonValue(m_inspection_enforcement_summary, json[QString("InspectionEnforcementSummary")]);
    m_inspection_enforcement_summary_isSet = !json[QString("InspectionEnforcementSummary")].isNull() && m_inspection_enforcement_summary_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("Message")]);
    m_message_isSet = !json[QString("Message")].isNull() && m_message_isValid;
}

QString OAIDfr118_Results::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDfr118_Results::asJsonObject() const {
    QJsonObject obj;
    if (m_inspection_enforcement_summary.isSet()) {
        obj.insert(QString("InspectionEnforcementSummary"), ::OpenAPI::toJsonValue(m_inspection_enforcement_summary));
    }
    if (m_message_isSet) {
        obj.insert(QString("Message"), ::OpenAPI::toJsonValue(m_message));
    }
    return obj;
}

OAIDfr068 OAIDfr118_Results::getInspectionEnforcementSummary() const {
    return m_inspection_enforcement_summary;
}
void OAIDfr118_Results::setInspectionEnforcementSummary(const OAIDfr068 &inspection_enforcement_summary) {
    m_inspection_enforcement_summary = inspection_enforcement_summary;
    m_inspection_enforcement_summary_isSet = true;
}

bool OAIDfr118_Results::is_inspection_enforcement_summary_Set() const{
    return m_inspection_enforcement_summary_isSet;
}

bool OAIDfr118_Results::is_inspection_enforcement_summary_Valid() const{
    return m_inspection_enforcement_summary_isValid;
}

QString OAIDfr118_Results::getMessage() const {
    return m_message;
}
void OAIDfr118_Results::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIDfr118_Results::is_message_Set() const{
    return m_message_isSet;
}

bool OAIDfr118_Results::is_message_Valid() const{
    return m_message_isValid;
}

bool OAIDfr118_Results::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_inspection_enforcement_summary.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDfr118_Results::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_message_isValid && true;
}

} // namespace OpenAPI
