/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDfr071.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDfr071::OAIDfr071(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDfr071::OAIDfr071() {
    this->initializeModel();
}

OAIDfr071::~OAIDfr071() {}

void OAIDfr071::initializeModel() {

    m_cu90_isSet = false;
    m_cu90_isValid = false;

    m_cu90_dates_isSet = false;
    m_cu90_dates_isValid = false;

    m_cu90_units_isSet = false;
    m_cu90_units_isValid = false;

    m_cu90_value_isSet = false;
    m_cu90_value_isValid = false;
}

void OAIDfr071::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDfr071::fromJsonObject(QJsonObject json) {

    m_cu90_isValid = ::OpenAPI::fromJsonValue(m_cu90, json[QString("CU90")]);
    m_cu90_isSet = !json[QString("CU90")].isNull() && m_cu90_isValid;

    m_cu90_dates_isValid = ::OpenAPI::fromJsonValue(m_cu90_dates, json[QString("CU90Dates")]);
    m_cu90_dates_isSet = !json[QString("CU90Dates")].isNull() && m_cu90_dates_isValid;

    m_cu90_units_isValid = ::OpenAPI::fromJsonValue(m_cu90_units, json[QString("CU90Units")]);
    m_cu90_units_isSet = !json[QString("CU90Units")].isNull() && m_cu90_units_isValid;

    m_cu90_value_isValid = ::OpenAPI::fromJsonValue(m_cu90_value, json[QString("CU90Value")]);
    m_cu90_value_isSet = !json[QString("CU90Value")].isNull() && m_cu90_value_isValid;
}

QString OAIDfr071::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDfr071::asJsonObject() const {
    QJsonObject obj;
    if (m_cu90_isSet) {
        obj.insert(QString("CU90"), ::OpenAPI::toJsonValue(m_cu90));
    }
    if (m_cu90_dates_isSet) {
        obj.insert(QString("CU90Dates"), ::OpenAPI::toJsonValue(m_cu90_dates));
    }
    if (m_cu90_units_isSet) {
        obj.insert(QString("CU90Units"), ::OpenAPI::toJsonValue(m_cu90_units));
    }
    if (m_cu90_value_isSet) {
        obj.insert(QString("CU90Value"), ::OpenAPI::toJsonValue(m_cu90_value));
    }
    return obj;
}

QString OAIDfr071::getCu90() const {
    return m_cu90;
}
void OAIDfr071::setCu90(const QString &cu90) {
    m_cu90 = cu90;
    m_cu90_isSet = true;
}

bool OAIDfr071::is_cu90_Set() const{
    return m_cu90_isSet;
}

bool OAIDfr071::is_cu90_Valid() const{
    return m_cu90_isValid;
}

QString OAIDfr071::getCu90Dates() const {
    return m_cu90_dates;
}
void OAIDfr071::setCu90Dates(const QString &cu90_dates) {
    m_cu90_dates = cu90_dates;
    m_cu90_dates_isSet = true;
}

bool OAIDfr071::is_cu90_dates_Set() const{
    return m_cu90_dates_isSet;
}

bool OAIDfr071::is_cu90_dates_Valid() const{
    return m_cu90_dates_isValid;
}

QString OAIDfr071::getCu90Units() const {
    return m_cu90_units;
}
void OAIDfr071::setCu90Units(const QString &cu90_units) {
    m_cu90_units = cu90_units;
    m_cu90_units_isSet = true;
}

bool OAIDfr071::is_cu90_units_Set() const{
    return m_cu90_units_isSet;
}

bool OAIDfr071::is_cu90_units_Valid() const{
    return m_cu90_units_isValid;
}

QString OAIDfr071::getCu90Value() const {
    return m_cu90_value;
}
void OAIDfr071::setCu90Value(const QString &cu90_value) {
    m_cu90_value = cu90_value;
    m_cu90_value_isSet = true;
}

bool OAIDfr071::is_cu90_value_Set() const{
    return m_cu90_value_isSet;
}

bool OAIDfr071::is_cu90_value_Valid() const{
    return m_cu90_value_isValid;
}

bool OAIDfr071::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cu90_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cu90_dates_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cu90_units_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cu90_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDfr071::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_cu90_isValid && m_cu90_dates_isValid && m_cu90_units_isValid && m_cu90_value_isValid && true;
}

} // namespace OpenAPI
