/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDfr065.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDfr065::OAIDfr065(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDfr065::OAIDfr065() {
    this->initializeModel();
}

OAIDfr065::~OAIDfr065() {}

void OAIDfr065::initializeModel() {

    m_action_date_isSet = false;
    m_action_date_isValid = false;

    m_action_type_isSet = false;
    m_action_type_isValid = false;

    m_lead_agency_isSet = false;
    m_lead_agency_isValid = false;

    m_penalty_amount_isSet = false;
    m_penalty_amount_isValid = false;

    m_penalty_desc_isSet = false;
    m_penalty_desc_isValid = false;

    m_source_id_isSet = false;
    m_source_id_isValid = false;

    m_statute_isSet = false;
    m_statute_isValid = false;
}

void OAIDfr065::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDfr065::fromJsonObject(QJsonObject json) {

    m_action_date_isValid = ::OpenAPI::fromJsonValue(m_action_date, json[QString("ActionDate")]);
    m_action_date_isSet = !json[QString("ActionDate")].isNull() && m_action_date_isValid;

    m_action_type_isValid = ::OpenAPI::fromJsonValue(m_action_type, json[QString("ActionType")]);
    m_action_type_isSet = !json[QString("ActionType")].isNull() && m_action_type_isValid;

    m_lead_agency_isValid = ::OpenAPI::fromJsonValue(m_lead_agency, json[QString("LeadAgency")]);
    m_lead_agency_isSet = !json[QString("LeadAgency")].isNull() && m_lead_agency_isValid;

    m_penalty_amount_isValid = ::OpenAPI::fromJsonValue(m_penalty_amount, json[QString("PenaltyAmount")]);
    m_penalty_amount_isSet = !json[QString("PenaltyAmount")].isNull() && m_penalty_amount_isValid;

    m_penalty_desc_isValid = ::OpenAPI::fromJsonValue(m_penalty_desc, json[QString("PenaltyDesc")]);
    m_penalty_desc_isSet = !json[QString("PenaltyDesc")].isNull() && m_penalty_desc_isValid;

    m_source_id_isValid = ::OpenAPI::fromJsonValue(m_source_id, json[QString("SourceID")]);
    m_source_id_isSet = !json[QString("SourceID")].isNull() && m_source_id_isValid;

    m_statute_isValid = ::OpenAPI::fromJsonValue(m_statute, json[QString("Statute")]);
    m_statute_isSet = !json[QString("Statute")].isNull() && m_statute_isValid;
}

QString OAIDfr065::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDfr065::asJsonObject() const {
    QJsonObject obj;
    if (m_action_date_isSet) {
        obj.insert(QString("ActionDate"), ::OpenAPI::toJsonValue(m_action_date));
    }
    if (m_action_type_isSet) {
        obj.insert(QString("ActionType"), ::OpenAPI::toJsonValue(m_action_type));
    }
    if (m_lead_agency_isSet) {
        obj.insert(QString("LeadAgency"), ::OpenAPI::toJsonValue(m_lead_agency));
    }
    if (m_penalty_amount_isSet) {
        obj.insert(QString("PenaltyAmount"), ::OpenAPI::toJsonValue(m_penalty_amount));
    }
    if (m_penalty_desc_isSet) {
        obj.insert(QString("PenaltyDesc"), ::OpenAPI::toJsonValue(m_penalty_desc));
    }
    if (m_source_id_isSet) {
        obj.insert(QString("SourceID"), ::OpenAPI::toJsonValue(m_source_id));
    }
    if (m_statute_isSet) {
        obj.insert(QString("Statute"), ::OpenAPI::toJsonValue(m_statute));
    }
    return obj;
}

QString OAIDfr065::getActionDate() const {
    return m_action_date;
}
void OAIDfr065::setActionDate(const QString &action_date) {
    m_action_date = action_date;
    m_action_date_isSet = true;
}

bool OAIDfr065::is_action_date_Set() const{
    return m_action_date_isSet;
}

bool OAIDfr065::is_action_date_Valid() const{
    return m_action_date_isValid;
}

QString OAIDfr065::getActionType() const {
    return m_action_type;
}
void OAIDfr065::setActionType(const QString &action_type) {
    m_action_type = action_type;
    m_action_type_isSet = true;
}

bool OAIDfr065::is_action_type_Set() const{
    return m_action_type_isSet;
}

bool OAIDfr065::is_action_type_Valid() const{
    return m_action_type_isValid;
}

QString OAIDfr065::getLeadAgency() const {
    return m_lead_agency;
}
void OAIDfr065::setLeadAgency(const QString &lead_agency) {
    m_lead_agency = lead_agency;
    m_lead_agency_isSet = true;
}

bool OAIDfr065::is_lead_agency_Set() const{
    return m_lead_agency_isSet;
}

bool OAIDfr065::is_lead_agency_Valid() const{
    return m_lead_agency_isValid;
}

QString OAIDfr065::getPenaltyAmount() const {
    return m_penalty_amount;
}
void OAIDfr065::setPenaltyAmount(const QString &penalty_amount) {
    m_penalty_amount = penalty_amount;
    m_penalty_amount_isSet = true;
}

bool OAIDfr065::is_penalty_amount_Set() const{
    return m_penalty_amount_isSet;
}

bool OAIDfr065::is_penalty_amount_Valid() const{
    return m_penalty_amount_isValid;
}

QString OAIDfr065::getPenaltyDesc() const {
    return m_penalty_desc;
}
void OAIDfr065::setPenaltyDesc(const QString &penalty_desc) {
    m_penalty_desc = penalty_desc;
    m_penalty_desc_isSet = true;
}

bool OAIDfr065::is_penalty_desc_Set() const{
    return m_penalty_desc_isSet;
}

bool OAIDfr065::is_penalty_desc_Valid() const{
    return m_penalty_desc_isValid;
}

QString OAIDfr065::getSourceId() const {
    return m_source_id;
}
void OAIDfr065::setSourceId(const QString &source_id) {
    m_source_id = source_id;
    m_source_id_isSet = true;
}

bool OAIDfr065::is_source_id_Set() const{
    return m_source_id_isSet;
}

bool OAIDfr065::is_source_id_Valid() const{
    return m_source_id_isValid;
}

QString OAIDfr065::getStatute() const {
    return m_statute;
}
void OAIDfr065::setStatute(const QString &statute) {
    m_statute = statute;
    m_statute_isSet = true;
}

bool OAIDfr065::is_statute_Set() const{
    return m_statute_isSet;
}

bool OAIDfr065::is_statute_Valid() const{
    return m_statute_isValid;
}

bool OAIDfr065::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_action_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lead_agency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_penalty_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_penalty_desc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_statute_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDfr065::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_action_date_isValid && m_action_type_isValid && m_lead_agency_isValid && m_penalty_amount_isValid && m_penalty_desc_isValid && m_source_id_isValid && m_statute_isValid && true;
}

} // namespace OpenAPI
