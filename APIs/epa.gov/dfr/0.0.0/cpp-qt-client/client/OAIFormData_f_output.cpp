/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFormData_f_output.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFormData_f_output::OAIFormData_f_output(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFormData_f_output::OAIFormData_f_output() {
    this->initializeModel();
}

OAIFormData_f_output::~OAIFormData_f_output() {}

void OAIFormData_f_output::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIFormData_f_output::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIFormData_f_output::fromJson(QString jsonString) {
    
    if ( jsonString.compare("JSONP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFormData_f_output::JSONP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("JSON", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFormData_f_output::JSON;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("XML", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFormData_f_output::XML;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIFormData_f_output::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIFormData_f_output::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIFormData_f_output::JSONP:
            val = "JSONP";
            break;
        case eOAIFormData_f_output::JSON:
            val = "JSON";
            break;
        case eOAIFormData_f_output::XML:
            val = "XML";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIFormData_f_output::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIFormData_f_output::eOAIFormData_f_output OAIFormData_f_output::getValue() const {
    return m_value;
}

void OAIFormData_f_output::setValue(const OAIFormData_f_output::eOAIFormData_f_output& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIFormData_f_output::isSet() const {
    
    return m_value_isSet;
}

bool OAIFormData_f_output::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
