/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDfr063_s.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDfr063_s::OAIDfr063_s(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDfr063_s::OAIDfr063_s() {
    this->initializeModel();
}

OAIDfr063_s::~OAIDfr063_s() {}

void OAIDfr063_s::initializeModel() {

    m_end_date_isSet = false;
    m_end_date_isValid = false;

    m_program_isSet = false;
    m_program_isValid = false;

    m_start_date3_yr_isSet = false;
    m_start_date3_yr_isValid = false;

    m_start_date5_yr_isSet = false;
    m_start_date5_yr_isValid = false;
}

void OAIDfr063_s::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDfr063_s::fromJsonObject(QJsonObject json) {

    m_end_date_isValid = ::OpenAPI::fromJsonValue(m_end_date, json[QString("EndDate")]);
    m_end_date_isSet = !json[QString("EndDate")].isNull() && m_end_date_isValid;

    m_program_isValid = ::OpenAPI::fromJsonValue(m_program, json[QString("Program")]);
    m_program_isSet = !json[QString("Program")].isNull() && m_program_isValid;

    m_start_date3_yr_isValid = ::OpenAPI::fromJsonValue(m_start_date3_yr, json[QString("StartDate3Yr")]);
    m_start_date3_yr_isSet = !json[QString("StartDate3Yr")].isNull() && m_start_date3_yr_isValid;

    m_start_date5_yr_isValid = ::OpenAPI::fromJsonValue(m_start_date5_yr, json[QString("StartDate5Yr")]);
    m_start_date5_yr_isSet = !json[QString("StartDate5Yr")].isNull() && m_start_date5_yr_isValid;
}

QString OAIDfr063_s::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDfr063_s::asJsonObject() const {
    QJsonObject obj;
    if (m_end_date_isSet) {
        obj.insert(QString("EndDate"), ::OpenAPI::toJsonValue(m_end_date));
    }
    if (m_program_isSet) {
        obj.insert(QString("Program"), ::OpenAPI::toJsonValue(m_program));
    }
    if (m_start_date3_yr_isSet) {
        obj.insert(QString("StartDate3Yr"), ::OpenAPI::toJsonValue(m_start_date3_yr));
    }
    if (m_start_date5_yr_isSet) {
        obj.insert(QString("StartDate5Yr"), ::OpenAPI::toJsonValue(m_start_date5_yr));
    }
    return obj;
}

QString OAIDfr063_s::getEndDate() const {
    return m_end_date;
}
void OAIDfr063_s::setEndDate(const QString &end_date) {
    m_end_date = end_date;
    m_end_date_isSet = true;
}

bool OAIDfr063_s::is_end_date_Set() const{
    return m_end_date_isSet;
}

bool OAIDfr063_s::is_end_date_Valid() const{
    return m_end_date_isValid;
}

QString OAIDfr063_s::getProgram() const {
    return m_program;
}
void OAIDfr063_s::setProgram(const QString &program) {
    m_program = program;
    m_program_isSet = true;
}

bool OAIDfr063_s::is_program_Set() const{
    return m_program_isSet;
}

bool OAIDfr063_s::is_program_Valid() const{
    return m_program_isValid;
}

QString OAIDfr063_s::getStartDate3Yr() const {
    return m_start_date3_yr;
}
void OAIDfr063_s::setStartDate3Yr(const QString &start_date3_yr) {
    m_start_date3_yr = start_date3_yr;
    m_start_date3_yr_isSet = true;
}

bool OAIDfr063_s::is_start_date3_yr_Set() const{
    return m_start_date3_yr_isSet;
}

bool OAIDfr063_s::is_start_date3_yr_Valid() const{
    return m_start_date3_yr_isValid;
}

QString OAIDfr063_s::getStartDate5Yr() const {
    return m_start_date5_yr;
}
void OAIDfr063_s::setStartDate5Yr(const QString &start_date5_yr) {
    m_start_date5_yr = start_date5_yr;
    m_start_date5_yr_isSet = true;
}

bool OAIDfr063_s::is_start_date5_yr_Set() const{
    return m_start_date5_yr_isSet;
}

bool OAIDfr063_s::is_start_date5_yr_Valid() const{
    return m_start_date5_yr_isValid;
}

bool OAIDfr063_s::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_program_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date3_yr_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date5_yr_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDfr063_s::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_end_date_isValid && m_program_isValid && m_start_date3_yr_isValid && m_start_date5_yr_isValid && true;
}

} // namespace OpenAPI
