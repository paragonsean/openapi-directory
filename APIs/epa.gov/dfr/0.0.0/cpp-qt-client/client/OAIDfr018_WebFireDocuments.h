/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDfr018_WebFireDocuments.h
 *
 * Web Fire Documents
 */

#ifndef OAIDfr018_WebFireDocuments_H
#define OAIDfr018_WebFireDocuments_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDfr018_WebFireDocuments : public OAIObject {
public:
    OAIDfr018_WebFireDocuments();
    OAIDfr018_WebFireDocuments(QString json);
    ~OAIDfr018_WebFireDocuments() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDocumentLink() const;
    void setDocumentLink(const QString &document_link);
    bool is_document_link_Set() const;
    bool is_document_link_Valid() const;

    QString getDocumentName() const;
    void setDocumentName(const QString &document_name);
    bool is_document_name_Set() const;
    bool is_document_name_Valid() const;

    QString getDocumentType() const;
    void setDocumentType(const QString &document_type);
    bool is_document_type_Set() const;
    bool is_document_type_Valid() const;

    QString getFacilityName() const;
    void setFacilityName(const QString &facility_name);
    bool is_facility_name_Set() const;
    bool is_facility_name_Valid() const;

    QString getRegistryId() const;
    void setRegistryId(const QString &registry_id);
    bool is_registry_id_Set() const;
    bool is_registry_id_Valid() const;

    QString getReportDocType() const;
    void setReportDocType(const QString &report_doc_type);
    bool is_report_doc_type_Set() const;
    bool is_report_doc_type_Valid() const;

    QString getReportSubmissionDate() const;
    void setReportSubmissionDate(const QString &report_submission_date);
    bool is_report_submission_date_Set() const;
    bool is_report_submission_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_document_link;
    bool m_document_link_isSet;
    bool m_document_link_isValid;

    QString m_document_name;
    bool m_document_name_isSet;
    bool m_document_name_isValid;

    QString m_document_type;
    bool m_document_type_isSet;
    bool m_document_type_isValid;

    QString m_facility_name;
    bool m_facility_name_isSet;
    bool m_facility_name_isValid;

    QString m_registry_id;
    bool m_registry_id_isSet;
    bool m_registry_id_isValid;

    QString m_report_doc_type;
    bool m_report_doc_type_isSet;
    bool m_report_doc_type_isValid;

    QString m_report_submission_date;
    bool m_report_submission_date_isSet;
    bool m_report_submission_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDfr018_WebFireDocuments)

#endif // OAIDfr018_WebFireDocuments_H
