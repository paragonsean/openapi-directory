/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDfr020.h
 *
 * Source Object
 */

#ifndef OAIDfr020_H
#define OAIDfr020_H

#include <QJsonObject>

#include "OAIDfr020__HPVHistory.h"
#include "OAIDfr020__PermitHistory.h"
#include "OAIDfr021.h"
#include "OAIDfr022.h"
#include "OAIDfr023.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDfr021;
class OAIDfr022;
class OAIDfr020__HPVHistory;
class OAIDfr023;
class OAIDfr020__PermitHistory;

class OAIDfr020 : public OAIObject {
public:
    OAIDfr020();
    OAIDfr020(QString json);
    ~OAIDfr020() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDfr021> getAfsPrograms() const;
    void setAfsPrograms(const QList<OAIDfr021> &afs_programs);
    bool is_afs_programs_Set() const;
    bool is_afs_programs_Valid() const;

    QList<OAIDfr022> getFrvProgramsPollutants() const;
    void setFrvProgramsPollutants(const QList<OAIDfr022> &frv_programs_pollutants);
    bool is_frv_programs_pollutants_Set() const;
    bool is_frv_programs_pollutants_Valid() const;

    OAIDfr020__HPVHistory getHpvHistory() const;
    void setHpvHistory(const OAIDfr020__HPVHistory &hpv_history);
    bool is_hpv_history_Set() const;
    bool is_hpv_history_Valid() const;

    QList<OAIDfr023> getHpvProgramsPollutants() const;
    void setHpvProgramsPollutants(const QList<OAIDfr023> &hpv_programs_pollutants);
    bool is_hpv_programs_pollutants_Set() const;
    bool is_hpv_programs_pollutants_Valid() const;

    OAIDfr020__PermitHistory getPermitHistory() const;
    void setPermitHistory(const OAIDfr020__PermitHistory &permit_history);
    bool is_permit_history_Set() const;
    bool is_permit_history_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDfr021> m_afs_programs;
    bool m_afs_programs_isSet;
    bool m_afs_programs_isValid;

    QList<OAIDfr022> m_frv_programs_pollutants;
    bool m_frv_programs_pollutants_isSet;
    bool m_frv_programs_pollutants_isValid;

    OAIDfr020__HPVHistory m_hpv_history;
    bool m_hpv_history_isSet;
    bool m_hpv_history_isValid;

    QList<OAIDfr023> m_hpv_programs_pollutants;
    bool m_hpv_programs_pollutants_isSet;
    bool m_hpv_programs_pollutants_isValid;

    OAIDfr020__PermitHistory m_permit_history;
    bool m_permit_history_isSet;
    bool m_permit_history_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDfr020)

#endif // OAIDfr020_H
