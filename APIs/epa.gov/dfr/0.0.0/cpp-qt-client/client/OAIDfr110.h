/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDfr110.h
 *
 * Violations Object
 */

#ifndef OAIDfr110_H
#define OAIDfr110_H

#include <QJsonObject>

#include "OAIDfr109.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDfr109;

class OAIDfr110 : public OAIObject {
public:
    OAIDfr110();
    OAIDfr110(QString json);
    ~OAIDfr110() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCompliancePeriodBeginDate() const;
    void setCompliancePeriodBeginDate(const QString &compliance_period_begin_date);
    bool is_compliance_period_begin_date_Set() const;
    bool is_compliance_period_begin_date_Valid() const;

    QString getCompliancePeriodEndDate() const;
    void setCompliancePeriodEndDate(const QString &compliance_period_end_date);
    bool is_compliance_period_end_date_Set() const;
    bool is_compliance_period_end_date_Valid() const;

    QString getContaminantName() const;
    void setContaminantName(const QString &contaminant_name);
    bool is_contaminant_name_Set() const;
    bool is_contaminant_name_Valid() const;

    QList<OAIDfr109> getEnforcementActions() const;
    void setEnforcementActions(const QList<OAIDfr109> &enforcement_actions);
    bool is_enforcement_actions_Set() const;
    bool is_enforcement_actions_Valid() const;

    QString getFederalMcl() const;
    void setFederalMcl(const QString &federal_mcl);
    bool is_federal_mcl_Set() const;
    bool is_federal_mcl_Valid() const;

    QString getFederalRule() const;
    void setFederalRule(const QString &federal_rule);
    bool is_federal_rule_Set() const;
    bool is_federal_rule_Valid() const;

    QString getResolvedDate() const;
    void setResolvedDate(const QString &resolved_date);
    bool is_resolved_date_Set() const;
    bool is_resolved_date_Valid() const;

    QString getSourceId() const;
    void setSourceId(const QString &source_id);
    bool is_source_id_Set() const;
    bool is_source_id_Valid() const;

    QString getStateMcl() const;
    void setStateMcl(const QString &state_mcl);
    bool is_state_mcl_Set() const;
    bool is_state_mcl_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getViolationCategoryCode() const;
    void setViolationCategoryCode(const QString &violation_category_code);
    bool is_violation_category_code_Set() const;
    bool is_violation_category_code_Valid() const;

    QString getViolationCategoryDesc() const;
    void setViolationCategoryDesc(const QString &violation_category_desc);
    bool is_violation_category_desc_Set() const;
    bool is_violation_category_desc_Valid() const;

    QString getViolationId() const;
    void setViolationId(const QString &violation_id);
    bool is_violation_id_Set() const;
    bool is_violation_id_Valid() const;

    QString getViolationMeasure() const;
    void setViolationMeasure(const QString &violation_measure);
    bool is_violation_measure_Set() const;
    bool is_violation_measure_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_compliance_period_begin_date;
    bool m_compliance_period_begin_date_isSet;
    bool m_compliance_period_begin_date_isValid;

    QString m_compliance_period_end_date;
    bool m_compliance_period_end_date_isSet;
    bool m_compliance_period_end_date_isValid;

    QString m_contaminant_name;
    bool m_contaminant_name_isSet;
    bool m_contaminant_name_isValid;

    QList<OAIDfr109> m_enforcement_actions;
    bool m_enforcement_actions_isSet;
    bool m_enforcement_actions_isValid;

    QString m_federal_mcl;
    bool m_federal_mcl_isSet;
    bool m_federal_mcl_isValid;

    QString m_federal_rule;
    bool m_federal_rule_isSet;
    bool m_federal_rule_isValid;

    QString m_resolved_date;
    bool m_resolved_date_isSet;
    bool m_resolved_date_isValid;

    QString m_source_id;
    bool m_source_id_isSet;
    bool m_source_id_isValid;

    QString m_state_mcl;
    bool m_state_mcl_isSet;
    bool m_state_mcl_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_violation_category_code;
    bool m_violation_category_code_isSet;
    bool m_violation_category_code_isValid;

    QString m_violation_category_desc;
    bool m_violation_category_desc_isSet;
    bool m_violation_category_desc_isValid;

    QString m_violation_id;
    bool m_violation_id_isSet;
    bool m_violation_id_isValid;

    QString m_violation_measure;
    bool m_violation_measure_isSet;
    bool m_violation_measure_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDfr110)

#endif // OAIDfr110_H
