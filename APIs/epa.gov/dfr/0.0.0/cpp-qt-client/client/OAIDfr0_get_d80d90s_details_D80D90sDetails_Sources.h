/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDfr0_get_d80d90s_details_D80D90sDetails_Sources.h
 *
 * Sources Object
 */

#ifndef OAIDfr0_get_d80d90s_details_D80D90sDetails_Sources_H
#define OAIDfr0_get_d80d90s_details_D80D90sDetails_Sources_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDfr0_get_d80d90s_details_D80D90sDetails_Sources : public OAIObject {
public:
    OAIDfr0_get_d80d90s_details_D80D90sDetails_Sources();
    OAIDfr0_get_d80d90s_details_D80D90sDetails_Sources(QString json);
    ~OAIDfr0_get_d80d90s_details_D80D90sDetails_Sources() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDaysLate() const;
    void setDaysLate(const QString &days_late);
    bool is_days_late_Set() const;
    bool is_days_late_Valid() const;

    QString getDmrDueDate() const;
    void setDmrDueDate(const QString &dmr_due_date);
    bool is_dmr_due_date_Set() const;
    bool is_dmr_due_date_Valid() const;

    QString getLimitBeginDate() const;
    void setLimitBeginDate(const QString &limit_begin_date);
    bool is_limit_begin_date_Set() const;
    bool is_limit_begin_date_Valid() const;

    QString getLimitEndDate() const;
    void setLimitEndDate(const QString &limit_end_date);
    bool is_limit_end_date_Set() const;
    bool is_limit_end_date_Valid() const;

    QString getLimitId() const;
    void setLimitId(const QString &limit_id);
    bool is_limit_id_Set() const;
    bool is_limit_id_Valid() const;

    QString getLimitSetName() const;
    void setLimitSetName(const QString &limit_set_name);
    bool is_limit_set_name_Set() const;
    bool is_limit_set_name_Valid() const;

    QString getMissingLate() const;
    void setMissingLate(const QString &missing_late);
    bool is_missing_late_Set() const;
    bool is_missing_late_Valid() const;

    QString getMonitoringLocationCode() const;
    void setMonitoringLocationCode(const QString &monitoring_location_code);
    bool is_monitoring_location_code_Set() const;
    bool is_monitoring_location_code_Valid() const;

    QString getMonitoringLocationDesc() const;
    void setMonitoringLocationDesc(const QString &monitoring_location_desc);
    bool is_monitoring_location_desc_Set() const;
    bool is_monitoring_location_desc_Valid() const;

    QString getMonitoringPeriodEndDate() const;
    void setMonitoringPeriodEndDate(const QString &monitoring_period_end_date);
    bool is_monitoring_period_end_date_Set() const;
    bool is_monitoring_period_end_date_Valid() const;

    QString getNpdesid() const;
    void setNpdesid(const QString &npdesid);
    bool is_npdesid_Set() const;
    bool is_npdesid_Valid() const;

    QString getNodiCode() const;
    void setNodiCode(const QString &nodi_code);
    bool is_nodi_code_Set() const;
    bool is_nodi_code_Valid() const;

    QString getNodiDesc() const;
    void setNodiDesc(const QString &nodi_desc);
    bool is_nodi_desc_Set() const;
    bool is_nodi_desc_Valid() const;

    QString getNodiValidationFlag() const;
    void setNodiValidationFlag(const QString &nodi_validation_flag);
    bool is_nodi_validation_flag_Set() const;
    bool is_nodi_validation_flag_Valid() const;

    QString getNpdesViolationId() const;
    void setNpdesViolationId(const QString &npdes_violation_id);
    bool is_npdes_violation_id_Set() const;
    bool is_npdes_violation_id_Valid() const;

    QString getParameterCode() const;
    void setParameterCode(const QString &parameter_code);
    bool is_parameter_code_Set() const;
    bool is_parameter_code_Valid() const;

    QString getParameterDesc() const;
    void setParameterDesc(const QString &parameter_desc);
    bool is_parameter_desc_Set() const;
    bool is_parameter_desc_Valid() const;

    QString getPermFeatureNmbr() const;
    void setPermFeatureNmbr(const QString &perm_feature_nmbr);
    bool is_perm_feature_nmbr_Set() const;
    bool is_perm_feature_nmbr_Valid() const;

    QString getRncDetectionCode() const;
    void setRncDetectionCode(const QString &rnc_detection_code);
    bool is_rnc_detection_code_Set() const;
    bool is_rnc_detection_code_Valid() const;

    QString getRncDetectionDate() const;
    void setRncDetectionDate(const QString &rnc_detection_date);
    bool is_rnc_detection_date_Set() const;
    bool is_rnc_detection_date_Valid() const;

    QString getRncDetectionDesc() const;
    void setRncDetectionDesc(const QString &rnc_detection_desc);
    bool is_rnc_detection_desc_Set() const;
    bool is_rnc_detection_desc_Valid() const;

    QString getRncResolutionCode() const;
    void setRncResolutionCode(const QString &rnc_resolution_code);
    bool is_rnc_resolution_code_Set() const;
    bool is_rnc_resolution_code_Valid() const;

    QString getRncResolutionDate() const;
    void setRncResolutionDate(const QString &rnc_resolution_date);
    bool is_rnc_resolution_date_Set() const;
    bool is_rnc_resolution_date_Valid() const;

    QString getRncResolutionDesc() const;
    void setRncResolutionDesc(const QString &rnc_resolution_desc);
    bool is_rnc_resolution_desc_Set() const;
    bool is_rnc_resolution_desc_Valid() const;

    QString getStatisticalBaseMonthlyAvg() const;
    void setStatisticalBaseMonthlyAvg(const QString &statistical_base_monthly_avg);
    bool is_statistical_base_monthly_avg_Set() const;
    bool is_statistical_base_monthly_avg_Valid() const;

    QString getValueReceivedDate() const;
    void setValueReceivedDate(const QString &value_received_date);
    bool is_value_received_date_Set() const;
    bool is_value_received_date_Valid() const;

    QString getValueTypeCode() const;
    void setValueTypeCode(const QString &value_type_code);
    bool is_value_type_code_Set() const;
    bool is_value_type_code_Valid() const;

    QString getVersionNmbr() const;
    void setVersionNmbr(const QString &version_nmbr);
    bool is_version_nmbr_Set() const;
    bool is_version_nmbr_Valid() const;

    QString getViolationCode() const;
    void setViolationCode(const QString &violation_code);
    bool is_violation_code_Set() const;
    bool is_violation_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_days_late;
    bool m_days_late_isSet;
    bool m_days_late_isValid;

    QString m_dmr_due_date;
    bool m_dmr_due_date_isSet;
    bool m_dmr_due_date_isValid;

    QString m_limit_begin_date;
    bool m_limit_begin_date_isSet;
    bool m_limit_begin_date_isValid;

    QString m_limit_end_date;
    bool m_limit_end_date_isSet;
    bool m_limit_end_date_isValid;

    QString m_limit_id;
    bool m_limit_id_isSet;
    bool m_limit_id_isValid;

    QString m_limit_set_name;
    bool m_limit_set_name_isSet;
    bool m_limit_set_name_isValid;

    QString m_missing_late;
    bool m_missing_late_isSet;
    bool m_missing_late_isValid;

    QString m_monitoring_location_code;
    bool m_monitoring_location_code_isSet;
    bool m_monitoring_location_code_isValid;

    QString m_monitoring_location_desc;
    bool m_monitoring_location_desc_isSet;
    bool m_monitoring_location_desc_isValid;

    QString m_monitoring_period_end_date;
    bool m_monitoring_period_end_date_isSet;
    bool m_monitoring_period_end_date_isValid;

    QString m_npdesid;
    bool m_npdesid_isSet;
    bool m_npdesid_isValid;

    QString m_nodi_code;
    bool m_nodi_code_isSet;
    bool m_nodi_code_isValid;

    QString m_nodi_desc;
    bool m_nodi_desc_isSet;
    bool m_nodi_desc_isValid;

    QString m_nodi_validation_flag;
    bool m_nodi_validation_flag_isSet;
    bool m_nodi_validation_flag_isValid;

    QString m_npdes_violation_id;
    bool m_npdes_violation_id_isSet;
    bool m_npdes_violation_id_isValid;

    QString m_parameter_code;
    bool m_parameter_code_isSet;
    bool m_parameter_code_isValid;

    QString m_parameter_desc;
    bool m_parameter_desc_isSet;
    bool m_parameter_desc_isValid;

    QString m_perm_feature_nmbr;
    bool m_perm_feature_nmbr_isSet;
    bool m_perm_feature_nmbr_isValid;

    QString m_rnc_detection_code;
    bool m_rnc_detection_code_isSet;
    bool m_rnc_detection_code_isValid;

    QString m_rnc_detection_date;
    bool m_rnc_detection_date_isSet;
    bool m_rnc_detection_date_isValid;

    QString m_rnc_detection_desc;
    bool m_rnc_detection_desc_isSet;
    bool m_rnc_detection_desc_isValid;

    QString m_rnc_resolution_code;
    bool m_rnc_resolution_code_isSet;
    bool m_rnc_resolution_code_isValid;

    QString m_rnc_resolution_date;
    bool m_rnc_resolution_date_isSet;
    bool m_rnc_resolution_date_isValid;

    QString m_rnc_resolution_desc;
    bool m_rnc_resolution_desc_isSet;
    bool m_rnc_resolution_desc_isValid;

    QString m_statistical_base_monthly_avg;
    bool m_statistical_base_monthly_avg_isSet;
    bool m_statistical_base_monthly_avg_isValid;

    QString m_value_received_date;
    bool m_value_received_date_isSet;
    bool m_value_received_date_isValid;

    QString m_value_type_code;
    bool m_value_type_code_isSet;
    bool m_value_type_code_isValid;

    QString m_version_nmbr;
    bool m_version_nmbr_isSet;
    bool m_version_nmbr_isValid;

    QString m_violation_code;
    bool m_violation_code_isSet;
    bool m_violation_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDfr0_get_d80d90s_details_D80D90sDetails_Sources)

#endif // OAIDfr0_get_d80d90s_details_D80D90sDetails_Sources_H
