/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDfr024.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDfr024::OAIDfr024(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDfr024::OAIDfr024() {
    this->initializeModel();
}

OAIDfr024::~OAIDfr024() {}

void OAIDfr024::initializeModel() {

    m_carbon_monoxide1971_area_isSet = false;
    m_carbon_monoxide1971_area_isValid = false;

    m_lead1978_area_isSet = false;
    m_lead1978_area_isValid = false;

    m_lead2008_area_isSet = false;
    m_lead2008_area_isValid = false;

    m_nitrogen_dioxide1971_area_isSet = false;
    m_nitrogen_dioxide1971_area_isValid = false;

    m_ozone8hr1997_area_isSet = false;
    m_ozone8hr1997_area_isValid = false;

    m_ozone8hr2008_area_isSet = false;
    m_ozone8hr2008_area_isValid = false;

    m_ozone8hr2015_area_isSet = false;
    m_ozone8hr2015_area_isValid = false;

    m_particulate_matter1987_area_isSet = false;
    m_particulate_matter1987_area_isValid = false;

    m_particulate_matter1997_area_isSet = false;
    m_particulate_matter1997_area_isValid = false;

    m_particulate_matter2006_area_isSet = false;
    m_particulate_matter2006_area_isValid = false;

    m_particulate_matter2012_area_isSet = false;
    m_particulate_matter2012_area_isValid = false;

    m_sulfur_dioxide1971_area_isSet = false;
    m_sulfur_dioxide1971_area_isValid = false;

    m_sulfur_dioxide2010_area_isSet = false;
    m_sulfur_dioxide2010_area_isValid = false;
}

void OAIDfr024::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDfr024::fromJsonObject(QJsonObject json) {

    m_carbon_monoxide1971_area_isValid = ::OpenAPI::fromJsonValue(m_carbon_monoxide1971_area, json[QString("CarbonMonoxide1971Area")]);
    m_carbon_monoxide1971_area_isSet = !json[QString("CarbonMonoxide1971Area")].isNull() && m_carbon_monoxide1971_area_isValid;

    m_lead1978_area_isValid = ::OpenAPI::fromJsonValue(m_lead1978_area, json[QString("Lead1978Area")]);
    m_lead1978_area_isSet = !json[QString("Lead1978Area")].isNull() && m_lead1978_area_isValid;

    m_lead2008_area_isValid = ::OpenAPI::fromJsonValue(m_lead2008_area, json[QString("Lead2008Area")]);
    m_lead2008_area_isSet = !json[QString("Lead2008Area")].isNull() && m_lead2008_area_isValid;

    m_nitrogen_dioxide1971_area_isValid = ::OpenAPI::fromJsonValue(m_nitrogen_dioxide1971_area, json[QString("NitrogenDioxide1971Area")]);
    m_nitrogen_dioxide1971_area_isSet = !json[QString("NitrogenDioxide1971Area")].isNull() && m_nitrogen_dioxide1971_area_isValid;

    m_ozone8hr1997_area_isValid = ::OpenAPI::fromJsonValue(m_ozone8hr1997_area, json[QString("Ozone8hr1997Area")]);
    m_ozone8hr1997_area_isSet = !json[QString("Ozone8hr1997Area")].isNull() && m_ozone8hr1997_area_isValid;

    m_ozone8hr2008_area_isValid = ::OpenAPI::fromJsonValue(m_ozone8hr2008_area, json[QString("Ozone8hr2008Area")]);
    m_ozone8hr2008_area_isSet = !json[QString("Ozone8hr2008Area")].isNull() && m_ozone8hr2008_area_isValid;

    m_ozone8hr2015_area_isValid = ::OpenAPI::fromJsonValue(m_ozone8hr2015_area, json[QString("Ozone8hr2015Area")]);
    m_ozone8hr2015_area_isSet = !json[QString("Ozone8hr2015Area")].isNull() && m_ozone8hr2015_area_isValid;

    m_particulate_matter1987_area_isValid = ::OpenAPI::fromJsonValue(m_particulate_matter1987_area, json[QString("ParticulateMatter1987Area")]);
    m_particulate_matter1987_area_isSet = !json[QString("ParticulateMatter1987Area")].isNull() && m_particulate_matter1987_area_isValid;

    m_particulate_matter1997_area_isValid = ::OpenAPI::fromJsonValue(m_particulate_matter1997_area, json[QString("ParticulateMatter1997Area")]);
    m_particulate_matter1997_area_isSet = !json[QString("ParticulateMatter1997Area")].isNull() && m_particulate_matter1997_area_isValid;

    m_particulate_matter2006_area_isValid = ::OpenAPI::fromJsonValue(m_particulate_matter2006_area, json[QString("ParticulateMatter2006Area")]);
    m_particulate_matter2006_area_isSet = !json[QString("ParticulateMatter2006Area")].isNull() && m_particulate_matter2006_area_isValid;

    m_particulate_matter2012_area_isValid = ::OpenAPI::fromJsonValue(m_particulate_matter2012_area, json[QString("ParticulateMatter2012Area")]);
    m_particulate_matter2012_area_isSet = !json[QString("ParticulateMatter2012Area")].isNull() && m_particulate_matter2012_area_isValid;

    m_sulfur_dioxide1971_area_isValid = ::OpenAPI::fromJsonValue(m_sulfur_dioxide1971_area, json[QString("SulfurDioxide1971Area")]);
    m_sulfur_dioxide1971_area_isSet = !json[QString("SulfurDioxide1971Area")].isNull() && m_sulfur_dioxide1971_area_isValid;

    m_sulfur_dioxide2010_area_isValid = ::OpenAPI::fromJsonValue(m_sulfur_dioxide2010_area, json[QString("SulfurDioxide2010Area")]);
    m_sulfur_dioxide2010_area_isSet = !json[QString("SulfurDioxide2010Area")].isNull() && m_sulfur_dioxide2010_area_isValid;
}

QString OAIDfr024::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDfr024::asJsonObject() const {
    QJsonObject obj;
    if (m_carbon_monoxide1971_area_isSet) {
        obj.insert(QString("CarbonMonoxide1971Area"), ::OpenAPI::toJsonValue(m_carbon_monoxide1971_area));
    }
    if (m_lead1978_area_isSet) {
        obj.insert(QString("Lead1978Area"), ::OpenAPI::toJsonValue(m_lead1978_area));
    }
    if (m_lead2008_area_isSet) {
        obj.insert(QString("Lead2008Area"), ::OpenAPI::toJsonValue(m_lead2008_area));
    }
    if (m_nitrogen_dioxide1971_area_isSet) {
        obj.insert(QString("NitrogenDioxide1971Area"), ::OpenAPI::toJsonValue(m_nitrogen_dioxide1971_area));
    }
    if (m_ozone8hr1997_area_isSet) {
        obj.insert(QString("Ozone8hr1997Area"), ::OpenAPI::toJsonValue(m_ozone8hr1997_area));
    }
    if (m_ozone8hr2008_area_isSet) {
        obj.insert(QString("Ozone8hr2008Area"), ::OpenAPI::toJsonValue(m_ozone8hr2008_area));
    }
    if (m_ozone8hr2015_area_isSet) {
        obj.insert(QString("Ozone8hr2015Area"), ::OpenAPI::toJsonValue(m_ozone8hr2015_area));
    }
    if (m_particulate_matter1987_area_isSet) {
        obj.insert(QString("ParticulateMatter1987Area"), ::OpenAPI::toJsonValue(m_particulate_matter1987_area));
    }
    if (m_particulate_matter1997_area_isSet) {
        obj.insert(QString("ParticulateMatter1997Area"), ::OpenAPI::toJsonValue(m_particulate_matter1997_area));
    }
    if (m_particulate_matter2006_area_isSet) {
        obj.insert(QString("ParticulateMatter2006Area"), ::OpenAPI::toJsonValue(m_particulate_matter2006_area));
    }
    if (m_particulate_matter2012_area_isSet) {
        obj.insert(QString("ParticulateMatter2012Area"), ::OpenAPI::toJsonValue(m_particulate_matter2012_area));
    }
    if (m_sulfur_dioxide1971_area_isSet) {
        obj.insert(QString("SulfurDioxide1971Area"), ::OpenAPI::toJsonValue(m_sulfur_dioxide1971_area));
    }
    if (m_sulfur_dioxide2010_area_isSet) {
        obj.insert(QString("SulfurDioxide2010Area"), ::OpenAPI::toJsonValue(m_sulfur_dioxide2010_area));
    }
    return obj;
}

QString OAIDfr024::getCarbonMonoxide1971Area() const {
    return m_carbon_monoxide1971_area;
}
void OAIDfr024::setCarbonMonoxide1971Area(const QString &carbon_monoxide1971_area) {
    m_carbon_monoxide1971_area = carbon_monoxide1971_area;
    m_carbon_monoxide1971_area_isSet = true;
}

bool OAIDfr024::is_carbon_monoxide1971_area_Set() const{
    return m_carbon_monoxide1971_area_isSet;
}

bool OAIDfr024::is_carbon_monoxide1971_area_Valid() const{
    return m_carbon_monoxide1971_area_isValid;
}

QString OAIDfr024::getLead1978Area() const {
    return m_lead1978_area;
}
void OAIDfr024::setLead1978Area(const QString &lead1978_area) {
    m_lead1978_area = lead1978_area;
    m_lead1978_area_isSet = true;
}

bool OAIDfr024::is_lead1978_area_Set() const{
    return m_lead1978_area_isSet;
}

bool OAIDfr024::is_lead1978_area_Valid() const{
    return m_lead1978_area_isValid;
}

QString OAIDfr024::getLead2008Area() const {
    return m_lead2008_area;
}
void OAIDfr024::setLead2008Area(const QString &lead2008_area) {
    m_lead2008_area = lead2008_area;
    m_lead2008_area_isSet = true;
}

bool OAIDfr024::is_lead2008_area_Set() const{
    return m_lead2008_area_isSet;
}

bool OAIDfr024::is_lead2008_area_Valid() const{
    return m_lead2008_area_isValid;
}

QString OAIDfr024::getNitrogenDioxide1971Area() const {
    return m_nitrogen_dioxide1971_area;
}
void OAIDfr024::setNitrogenDioxide1971Area(const QString &nitrogen_dioxide1971_area) {
    m_nitrogen_dioxide1971_area = nitrogen_dioxide1971_area;
    m_nitrogen_dioxide1971_area_isSet = true;
}

bool OAIDfr024::is_nitrogen_dioxide1971_area_Set() const{
    return m_nitrogen_dioxide1971_area_isSet;
}

bool OAIDfr024::is_nitrogen_dioxide1971_area_Valid() const{
    return m_nitrogen_dioxide1971_area_isValid;
}

QString OAIDfr024::getOzone8hr1997Area() const {
    return m_ozone8hr1997_area;
}
void OAIDfr024::setOzone8hr1997Area(const QString &ozone8hr1997_area) {
    m_ozone8hr1997_area = ozone8hr1997_area;
    m_ozone8hr1997_area_isSet = true;
}

bool OAIDfr024::is_ozone8hr1997_area_Set() const{
    return m_ozone8hr1997_area_isSet;
}

bool OAIDfr024::is_ozone8hr1997_area_Valid() const{
    return m_ozone8hr1997_area_isValid;
}

QString OAIDfr024::getOzone8hr2008Area() const {
    return m_ozone8hr2008_area;
}
void OAIDfr024::setOzone8hr2008Area(const QString &ozone8hr2008_area) {
    m_ozone8hr2008_area = ozone8hr2008_area;
    m_ozone8hr2008_area_isSet = true;
}

bool OAIDfr024::is_ozone8hr2008_area_Set() const{
    return m_ozone8hr2008_area_isSet;
}

bool OAIDfr024::is_ozone8hr2008_area_Valid() const{
    return m_ozone8hr2008_area_isValid;
}

QString OAIDfr024::getOzone8hr2015Area() const {
    return m_ozone8hr2015_area;
}
void OAIDfr024::setOzone8hr2015Area(const QString &ozone8hr2015_area) {
    m_ozone8hr2015_area = ozone8hr2015_area;
    m_ozone8hr2015_area_isSet = true;
}

bool OAIDfr024::is_ozone8hr2015_area_Set() const{
    return m_ozone8hr2015_area_isSet;
}

bool OAIDfr024::is_ozone8hr2015_area_Valid() const{
    return m_ozone8hr2015_area_isValid;
}

QString OAIDfr024::getParticulateMatter1987Area() const {
    return m_particulate_matter1987_area;
}
void OAIDfr024::setParticulateMatter1987Area(const QString &particulate_matter1987_area) {
    m_particulate_matter1987_area = particulate_matter1987_area;
    m_particulate_matter1987_area_isSet = true;
}

bool OAIDfr024::is_particulate_matter1987_area_Set() const{
    return m_particulate_matter1987_area_isSet;
}

bool OAIDfr024::is_particulate_matter1987_area_Valid() const{
    return m_particulate_matter1987_area_isValid;
}

QString OAIDfr024::getParticulateMatter1997Area() const {
    return m_particulate_matter1997_area;
}
void OAIDfr024::setParticulateMatter1997Area(const QString &particulate_matter1997_area) {
    m_particulate_matter1997_area = particulate_matter1997_area;
    m_particulate_matter1997_area_isSet = true;
}

bool OAIDfr024::is_particulate_matter1997_area_Set() const{
    return m_particulate_matter1997_area_isSet;
}

bool OAIDfr024::is_particulate_matter1997_area_Valid() const{
    return m_particulate_matter1997_area_isValid;
}

QString OAIDfr024::getParticulateMatter2006Area() const {
    return m_particulate_matter2006_area;
}
void OAIDfr024::setParticulateMatter2006Area(const QString &particulate_matter2006_area) {
    m_particulate_matter2006_area = particulate_matter2006_area;
    m_particulate_matter2006_area_isSet = true;
}

bool OAIDfr024::is_particulate_matter2006_area_Set() const{
    return m_particulate_matter2006_area_isSet;
}

bool OAIDfr024::is_particulate_matter2006_area_Valid() const{
    return m_particulate_matter2006_area_isValid;
}

QString OAIDfr024::getParticulateMatter2012Area() const {
    return m_particulate_matter2012_area;
}
void OAIDfr024::setParticulateMatter2012Area(const QString &particulate_matter2012_area) {
    m_particulate_matter2012_area = particulate_matter2012_area;
    m_particulate_matter2012_area_isSet = true;
}

bool OAIDfr024::is_particulate_matter2012_area_Set() const{
    return m_particulate_matter2012_area_isSet;
}

bool OAIDfr024::is_particulate_matter2012_area_Valid() const{
    return m_particulate_matter2012_area_isValid;
}

QString OAIDfr024::getSulfurDioxide1971Area() const {
    return m_sulfur_dioxide1971_area;
}
void OAIDfr024::setSulfurDioxide1971Area(const QString &sulfur_dioxide1971_area) {
    m_sulfur_dioxide1971_area = sulfur_dioxide1971_area;
    m_sulfur_dioxide1971_area_isSet = true;
}

bool OAIDfr024::is_sulfur_dioxide1971_area_Set() const{
    return m_sulfur_dioxide1971_area_isSet;
}

bool OAIDfr024::is_sulfur_dioxide1971_area_Valid() const{
    return m_sulfur_dioxide1971_area_isValid;
}

QString OAIDfr024::getSulfurDioxide2010Area() const {
    return m_sulfur_dioxide2010_area;
}
void OAIDfr024::setSulfurDioxide2010Area(const QString &sulfur_dioxide2010_area) {
    m_sulfur_dioxide2010_area = sulfur_dioxide2010_area;
    m_sulfur_dioxide2010_area_isSet = true;
}

bool OAIDfr024::is_sulfur_dioxide2010_area_Set() const{
    return m_sulfur_dioxide2010_area_isSet;
}

bool OAIDfr024::is_sulfur_dioxide2010_area_Valid() const{
    return m_sulfur_dioxide2010_area_isValid;
}

bool OAIDfr024::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_carbon_monoxide1971_area_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lead1978_area_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lead2008_area_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nitrogen_dioxide1971_area_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ozone8hr1997_area_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ozone8hr2008_area_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ozone8hr2015_area_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_particulate_matter1987_area_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_particulate_matter1997_area_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_particulate_matter2006_area_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_particulate_matter2012_area_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sulfur_dioxide1971_area_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sulfur_dioxide2010_area_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDfr024::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
