/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_dfr_rest_services_get_permits_get_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_dfr_rest_services_get_permits_get_200_response::OAI_dfr_rest_services_get_permits_get_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_dfr_rest_services_get_permits_get_200_response::OAI_dfr_rest_services_get_permits_get_200_response() {
    this->initializeModel();
}

OAI_dfr_rest_services_get_permits_get_200_response::~OAI_dfr_rest_services_get_permits_get_200_response() {}

void OAI_dfr_rest_services_get_permits_get_200_response::initializeModel() {

    m_results_isSet = false;
    m_results_isValid = false;
}

void OAI_dfr_rest_services_get_permits_get_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_dfr_rest_services_get_permits_get_200_response::fromJsonObject(QJsonObject json) {

    m_results_isValid = ::OpenAPI::fromJsonValue(m_results, json[QString("Results")]);
    m_results_isSet = !json[QString("Results")].isNull() && m_results_isValid;
}

QString OAI_dfr_rest_services_get_permits_get_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_dfr_rest_services_get_permits_get_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_results.isSet()) {
        obj.insert(QString("Results"), ::OpenAPI::toJsonValue(m_results));
    }
    return obj;
}

OAIDfr123_Results OAI_dfr_rest_services_get_permits_get_200_response::getResults() const {
    return m_results;
}
void OAI_dfr_rest_services_get_permits_get_200_response::setResults(const OAIDfr123_Results &results) {
    m_results = results;
    m_results_isSet = true;
}

bool OAI_dfr_rest_services_get_permits_get_200_response::is_results_Set() const{
    return m_results_isSet;
}

bool OAI_dfr_rest_services_get_permits_get_200_response::is_results_Valid() const{
    return m_results_isValid;
}

bool OAI_dfr_rest_services_get_permits_get_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_results.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_dfr_rest_services_get_permits_get_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_results_isValid && true;
}

} // namespace OpenAPI
