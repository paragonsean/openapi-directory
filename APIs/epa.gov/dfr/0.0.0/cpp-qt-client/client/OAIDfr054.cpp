/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDfr054.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDfr054::OAIDfr054(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDfr054::OAIDfr054() {
    this->initializeModel();
}

OAIDfr054::~OAIDfr054() {}

void OAIDfr054::initializeModel() {

    m_comp_action_cost_isSet = false;
    m_comp_action_cost_isValid = false;

    m_federal_penalty_isSet = false;
    m_federal_penalty_isValid = false;

    m_sep_cost_isSet = false;
    m_sep_cost_isValid = false;

    m_settlement_date_isSet = false;
    m_settlement_date_isValid = false;

    m_state_local_penalty_isSet = false;
    m_state_local_penalty_isValid = false;

    m_total_cost_recovery_isSet = false;
    m_total_cost_recovery_isValid = false;
}

void OAIDfr054::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDfr054::fromJsonObject(QJsonObject json) {

    m_comp_action_cost_isValid = ::OpenAPI::fromJsonValue(m_comp_action_cost, json[QString("CompActionCost")]);
    m_comp_action_cost_isSet = !json[QString("CompActionCost")].isNull() && m_comp_action_cost_isValid;

    m_federal_penalty_isValid = ::OpenAPI::fromJsonValue(m_federal_penalty, json[QString("FederalPenalty")]);
    m_federal_penalty_isSet = !json[QString("FederalPenalty")].isNull() && m_federal_penalty_isValid;

    m_sep_cost_isValid = ::OpenAPI::fromJsonValue(m_sep_cost, json[QString("SepCost")]);
    m_sep_cost_isSet = !json[QString("SepCost")].isNull() && m_sep_cost_isValid;

    m_settlement_date_isValid = ::OpenAPI::fromJsonValue(m_settlement_date, json[QString("SettlementDate")]);
    m_settlement_date_isSet = !json[QString("SettlementDate")].isNull() && m_settlement_date_isValid;

    m_state_local_penalty_isValid = ::OpenAPI::fromJsonValue(m_state_local_penalty, json[QString("StateLocalPenalty")]);
    m_state_local_penalty_isSet = !json[QString("StateLocalPenalty")].isNull() && m_state_local_penalty_isValid;

    m_total_cost_recovery_isValid = ::OpenAPI::fromJsonValue(m_total_cost_recovery, json[QString("TotalCostRecovery")]);
    m_total_cost_recovery_isSet = !json[QString("TotalCostRecovery")].isNull() && m_total_cost_recovery_isValid;
}

QString OAIDfr054::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDfr054::asJsonObject() const {
    QJsonObject obj;
    if (m_comp_action_cost_isSet) {
        obj.insert(QString("CompActionCost"), ::OpenAPI::toJsonValue(m_comp_action_cost));
    }
    if (m_federal_penalty_isSet) {
        obj.insert(QString("FederalPenalty"), ::OpenAPI::toJsonValue(m_federal_penalty));
    }
    if (m_sep_cost_isSet) {
        obj.insert(QString("SepCost"), ::OpenAPI::toJsonValue(m_sep_cost));
    }
    if (m_settlement_date_isSet) {
        obj.insert(QString("SettlementDate"), ::OpenAPI::toJsonValue(m_settlement_date));
    }
    if (m_state_local_penalty_isSet) {
        obj.insert(QString("StateLocalPenalty"), ::OpenAPI::toJsonValue(m_state_local_penalty));
    }
    if (m_total_cost_recovery_isSet) {
        obj.insert(QString("TotalCostRecovery"), ::OpenAPI::toJsonValue(m_total_cost_recovery));
    }
    return obj;
}

QString OAIDfr054::getCompActionCost() const {
    return m_comp_action_cost;
}
void OAIDfr054::setCompActionCost(const QString &comp_action_cost) {
    m_comp_action_cost = comp_action_cost;
    m_comp_action_cost_isSet = true;
}

bool OAIDfr054::is_comp_action_cost_Set() const{
    return m_comp_action_cost_isSet;
}

bool OAIDfr054::is_comp_action_cost_Valid() const{
    return m_comp_action_cost_isValid;
}

QString OAIDfr054::getFederalPenalty() const {
    return m_federal_penalty;
}
void OAIDfr054::setFederalPenalty(const QString &federal_penalty) {
    m_federal_penalty = federal_penalty;
    m_federal_penalty_isSet = true;
}

bool OAIDfr054::is_federal_penalty_Set() const{
    return m_federal_penalty_isSet;
}

bool OAIDfr054::is_federal_penalty_Valid() const{
    return m_federal_penalty_isValid;
}

QString OAIDfr054::getSepCost() const {
    return m_sep_cost;
}
void OAIDfr054::setSepCost(const QString &sep_cost) {
    m_sep_cost = sep_cost;
    m_sep_cost_isSet = true;
}

bool OAIDfr054::is_sep_cost_Set() const{
    return m_sep_cost_isSet;
}

bool OAIDfr054::is_sep_cost_Valid() const{
    return m_sep_cost_isValid;
}

QString OAIDfr054::getSettlementDate() const {
    return m_settlement_date;
}
void OAIDfr054::setSettlementDate(const QString &settlement_date) {
    m_settlement_date = settlement_date;
    m_settlement_date_isSet = true;
}

bool OAIDfr054::is_settlement_date_Set() const{
    return m_settlement_date_isSet;
}

bool OAIDfr054::is_settlement_date_Valid() const{
    return m_settlement_date_isValid;
}

QString OAIDfr054::getStateLocalPenalty() const {
    return m_state_local_penalty;
}
void OAIDfr054::setStateLocalPenalty(const QString &state_local_penalty) {
    m_state_local_penalty = state_local_penalty;
    m_state_local_penalty_isSet = true;
}

bool OAIDfr054::is_state_local_penalty_Set() const{
    return m_state_local_penalty_isSet;
}

bool OAIDfr054::is_state_local_penalty_Valid() const{
    return m_state_local_penalty_isValid;
}

QString OAIDfr054::getTotalCostRecovery() const {
    return m_total_cost_recovery;
}
void OAIDfr054::setTotalCostRecovery(const QString &total_cost_recovery) {
    m_total_cost_recovery = total_cost_recovery;
    m_total_cost_recovery_isSet = true;
}

bool OAIDfr054::is_total_cost_recovery_Set() const{
    return m_total_cost_recovery_isSet;
}

bool OAIDfr054::is_total_cost_recovery_Valid() const{
    return m_total_cost_recovery_isValid;
}

bool OAIDfr054::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_comp_action_cost_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_federal_penalty_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sep_cost_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_settlement_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_local_penalty_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_cost_recovery_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDfr054::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_comp_action_cost_isValid && m_federal_penalty_isValid && m_sep_cost_isValid && m_settlement_date_isValid && m_state_local_penalty_isValid && m_total_cost_recovery_isValid && true;
}

} // namespace OpenAPI
