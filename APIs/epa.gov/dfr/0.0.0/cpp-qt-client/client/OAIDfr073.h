/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDfr073.h
 *
 * Map Output Object
 */

#ifndef OAIDfr073_H
#define OAIDfr073_H

#include <QJsonObject>

#include "OAIDfr018_MapData.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDfr018_MapData;

class OAIDfr073 : public OAIObject {
public:
    OAIDfr073();
    OAIDfr073(QString json);
    ~OAIDfr073() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCenterLatitude() const;
    void setCenterLatitude(const QString &center_latitude);
    bool is_center_latitude_Set() const;
    bool is_center_latitude_Valid() const;

    QString getCenterLongitude() const;
    void setCenterLongitude(const QString &center_longitude);
    bool is_center_longitude_Set() const;
    bool is_center_longitude_Valid() const;

    QString getIconBaseUrl() const;
    void setIconBaseUrl(const QString &icon_base_url);
    bool is_icon_base_url_Set() const;
    bool is_icon_base_url_Valid() const;

    QList<OAIDfr018_MapData> getMapData() const;
    void setMapData(const QList<OAIDfr018_MapData> &map_data);
    bool is_map_data_Set() const;
    bool is_map_data_Valid() const;

    QString getPopUpBaseUrl() const;
    void setPopUpBaseUrl(const QString &pop_up_base_url);
    bool is_pop_up_base_url_Set() const;
    bool is_pop_up_base_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_center_latitude;
    bool m_center_latitude_isSet;
    bool m_center_latitude_isValid;

    QString m_center_longitude;
    bool m_center_longitude_isSet;
    bool m_center_longitude_isValid;

    QString m_icon_base_url;
    bool m_icon_base_url_isSet;
    bool m_icon_base_url_isValid;

    QList<OAIDfr018_MapData> m_map_data;
    bool m_map_data_isSet;
    bool m_map_data_isValid;

    QString m_pop_up_base_url;
    bool m_pop_up_base_url_isSet;
    bool m_pop_up_base_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDfr073)

#endif // OAIDfr073_H
