/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDfr018_RegistryIDs.h
 *
 * Registry IDs Object
 */

#ifndef OAIDfr018_RegistryIDs_H
#define OAIDfr018_RegistryIDs_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDfr018_RegistryIDs : public OAIObject {
public:
    OAIDfr018_RegistryIDs();
    OAIDfr018_RegistryIDs(QString json);
    ~OAIDfr018_RegistryIDs() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEpaSystem() const;
    void setEpaSystem(const QString &epa_system);
    bool is_epa_system_Set() const;
    bool is_epa_system_Valid() const;

    QString getFacilityCity() const;
    void setFacilityCity(const QString &facility_city);
    bool is_facility_city_Set() const;
    bool is_facility_city_Valid() const;

    QString getFacilityCounty() const;
    void setFacilityCounty(const QString &facility_county);
    bool is_facility_county_Set() const;
    bool is_facility_county_Valid() const;

    QString getFacilityName() const;
    void setFacilityName(const QString &facility_name);
    bool is_facility_name_Set() const;
    bool is_facility_name_Valid() const;

    QString getFacilityState() const;
    void setFacilityState(const QString &facility_state);
    bool is_facility_state_Set() const;
    bool is_facility_state_Valid() const;

    QString getFacilityStreet() const;
    void setFacilityStreet(const QString &facility_street);
    bool is_facility_street_Set() const;
    bool is_facility_street_Valid() const;

    QString getFacilityZip() const;
    void setFacilityZip(const QString &facility_zip);
    bool is_facility_zip_Set() const;
    bool is_facility_zip_Valid() const;

    QString getRegistryId() const;
    void setRegistryId(const QString &registry_id);
    bool is_registry_id_Set() const;
    bool is_registry_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_epa_system;
    bool m_epa_system_isSet;
    bool m_epa_system_isValid;

    QString m_facility_city;
    bool m_facility_city_isSet;
    bool m_facility_city_isValid;

    QString m_facility_county;
    bool m_facility_county_isSet;
    bool m_facility_county_isValid;

    QString m_facility_name;
    bool m_facility_name_isSet;
    bool m_facility_name_isValid;

    QString m_facility_state;
    bool m_facility_state_isSet;
    bool m_facility_state_isValid;

    QString m_facility_street;
    bool m_facility_street_isSet;
    bool m_facility_street_isValid;

    QString m_facility_zip;
    bool m_facility_zip_isSet;
    bool m_facility_zip_isValid;

    QString m_registry_id;
    bool m_registry_id_isSet;
    bool m_registry_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDfr018_RegistryIDs)

#endif // OAIDfr018_RegistryIDs_H
