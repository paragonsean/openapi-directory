/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DfrRestServicesGetAirComplianceGet200Response from '../model/DfrRestServicesGetAirComplianceGet200Response';
import DfrRestServicesGetAirQualityGet200Response from '../model/DfrRestServicesGetAirQualityGet200Response';
import DfrRestServicesGetAwsDocsGet200Response from '../model/DfrRestServicesGetAwsDocsGet200Response';
import DfrRestServicesGetCaseFormalActionsGet200Response from '../model/DfrRestServicesGetCaseFormalActionsGet200Response';
import DfrRestServicesGetComplianceHistoryGet200Response from '../model/DfrRestServicesGetComplianceHistoryGet200Response';
import DfrRestServicesGetComplianceSummaryGet200Response from '../model/DfrRestServicesGetComplianceSummaryGet200Response';
import DfrRestServicesGetCwa3yrComplianceGet200Response from '../model/DfrRestServicesGetCwa3yrComplianceGet200Response';
import DfrRestServicesGetCwa3yrD80d90CountsGet200Response from '../model/DfrRestServicesGetCwa3yrD80d90CountsGet200Response';
import DfrRestServicesGetCwaCsComplianceGet200Response from '../model/DfrRestServicesGetCwaCsComplianceGet200Response';
import DfrRestServicesGetCwaEffAlrExpGet200Response from '../model/DfrRestServicesGetCwaEffAlrExpGet200Response';
import DfrRestServicesGetCwaEffAlrGet200Response from '../model/DfrRestServicesGetCwaEffAlrGet200Response';
import DfrRestServicesGetCwaEffComplianceExpGet200Response from '../model/DfrRestServicesGetCwaEffComplianceExpGet200Response';
import DfrRestServicesGetCwaEffComplianceGet200Response from '../model/DfrRestServicesGetCwaEffComplianceGet200Response';
import DfrRestServicesGetCwaPsComplianceGet200Response from '../model/DfrRestServicesGetCwaPsComplianceGet200Response';
import DfrRestServicesGetCwaRncComplianceGet200Response from '../model/DfrRestServicesGetCwaRncComplianceGet200Response';
import DfrRestServicesGetCwaSeComplianceGet200Response from '../model/DfrRestServicesGetCwaSeComplianceGet200Response';
import DfrRestServicesGetD80d90sDetailsGet200Response from '../model/DfrRestServicesGetD80d90sDetailsGet200Response';
import DfrRestServicesGetDemographicsByIdGet200Response from '../model/DfrRestServicesGetDemographicsByIdGet200Response';
import DfrRestServicesGetDfrGet200Response from '../model/DfrRestServicesGetDfrGet200Response';
import DfrRestServicesGetEjscreenIndexesGet200Response from '../model/DfrRestServicesGetEjscreenIndexesGet200Response';
import DfrRestServicesGetEnforcementSummaryGet200Response from '../model/DfrRestServicesGetEnforcementSummaryGet200Response';
import DfrRestServicesGetExtractDatesGet200Response from '../model/DfrRestServicesGetExtractDatesGet200Response';
import DfrRestServicesGetFormalActionsGet200Response from '../model/DfrRestServicesGetFormalActionsGet200Response';
import DfrRestServicesGetIcisFormalActionsGet200Response from '../model/DfrRestServicesGetIcisFormalActionsGet200Response';
import DfrRestServicesGetInspectionsGet200Response from '../model/DfrRestServicesGetInspectionsGet200Response';
import DfrRestServicesGetMapGet200Response from '../model/DfrRestServicesGetMapGet200Response';
import DfrRestServicesGetNaicsGet200Response from '../model/DfrRestServicesGetNaicsGet200Response';
import DfrRestServicesGetNoticesGet200Response from '../model/DfrRestServicesGetNoticesGet200Response';
import DfrRestServicesGetPermitsGet200Response from '../model/DfrRestServicesGetPermitsGet200Response';
import DfrRestServicesGetRcraComplianceGet200Response from '../model/DfrRestServicesGetRcraComplianceGet200Response';
import DfrRestServicesGetSdwaLeadAndCopperGet200Response from '../model/DfrRestServicesGetSdwaLeadAndCopperGet200Response';
import DfrRestServicesGetSdwaSanitarySurveysGet200Response from '../model/DfrRestServicesGetSdwaSanitarySurveysGet200Response';
import DfrRestServicesGetSdwaSiteVisitsGet200Response from '../model/DfrRestServicesGetSdwaSiteVisitsGet200Response';
import DfrRestServicesGetSdwaViolationsGet200Response from '../model/DfrRestServicesGetSdwaViolationsGet200Response';
import DfrRestServicesGetSdwisComplianceGet200Response from '../model/DfrRestServicesGetSdwisComplianceGet200Response';
import DfrRestServicesGetSicCodesGet200Response from '../model/DfrRestServicesGetSicCodesGet200Response';
import DfrRestServicesGetSpatialMetadataGet200Response from '../model/DfrRestServicesGetSpatialMetadataGet200Response';
import DfrRestServicesGetTriHistoryGet200Response from '../model/DfrRestServicesGetTriHistoryGet200Response';
import DfrRestServicesGetTriReleasesGet200Response from '../model/DfrRestServicesGetTriReleasesGet200Response';
import DfrRestServicesGetTribesGet200Response from '../model/DfrRestServicesGetTribesGet200Response';
import DfrRestServicesGetWaterQualityDetailsGet200Response from '../model/DfrRestServicesGetWaterQualityDetailsGet200Response';
import DfrRestServicesGetWaterQualityGet200Response from '../model/DfrRestServicesGetWaterQualityGet200Response';

/**
* DetailedFacilityReport service.
* @module api/DetailedFacilityReportApi
* @version 0.0.0
*/
export default class DetailedFacilityReportApi {

    /**
    * Constructs a new DetailedFacilityReportApi. 
    * @alias module:api/DetailedFacilityReportApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the dfrRestServicesAir3YrDownloadGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesAir3YrDownloadGetCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Downloads the complete Air Compliance History Section of the DFR
     * For the provided system identifier, dowloads all displayed Air quaterly/monthly Facility Level Status, High Priority Violation (HPV) History, HPV Detailed Violations and Federal Reportable Violation  information in a Comma Seperated Value (CSV) format.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesAir3YrDownloadGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    dfrRestServicesAir3YrDownloadGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = File;
      return this.apiClient.callApi(
        '/dfr_rest_services.air_3_yr_download', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesAir3YrDownloadPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesAir3YrDownloadPostCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Downloads the complete Air Compliance History Section of the DFR
     * For the provided system identifier, dowloads all displayed Air quaterly/monthly Facility Level Status, High Priority Violation (HPV) History, HPV Detailed Violations and Federal Reportable Violation  information in a Comma Seperated Value (CSV) format.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesAir3YrDownloadPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    dfrRestServicesAir3YrDownloadPost(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = File;
      return this.apiClient.callApi(
        '/dfr_rest_services.air_3_yr_download', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesCwa3YrEffluentDownloadGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesCwa3YrEffluentDownloadGetCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Downloads NPDES Effluent Violation Information by month and quarter.
     * For the provided system identifier, dowloads all displayed NPDES quaterly/monthly effluent violation information in a Comma Seperated Value (CSV) format.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesCwa3YrEffluentDownloadGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    dfrRestServicesCwa3YrEffluentDownloadGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = File;
      return this.apiClient.callApi(
        '/dfr_rest_services.cwa_3_yr_effluent_download', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesCwa3YrEffluentDownloadPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesCwa3YrEffluentDownloadPostCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Downloads NPDES Effluent Violation Information by month and quarter.
     * For the provided system identifier, dowloads all displayed NPDES quaterly/monthly effluent violation information in a Comma Seperated Value (CSV) format.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesCwa3YrEffluentDownloadPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    dfrRestServicesCwa3YrEffluentDownloadPost(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = File;
      return this.apiClient.callApi(
        '/dfr_rest_services.cwa_3_yr_effluent_download', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesCwa3YrSepscsDownloadGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesCwa3YrSepscsDownloadGetCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Downloads NPDES Compliance Schedule, Permit Schedule and Single Event Violation Information by month and quarter.
     * For the provided system identifier, dowloads all displayed NPDES quaterly/monthly Compliance Schedule, Permit Schedule, and Single Event Violation  information in a Comma Seperated Value (CSV) format.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesCwa3YrSepscsDownloadGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    dfrRestServicesCwa3YrSepscsDownloadGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = File;
      return this.apiClient.callApi(
        '/dfr_rest_services.cwa_3_yr_sepscs_download', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesCwa3YrSepscsDownloadPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesCwa3YrSepscsDownloadPostCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Downloads NPDES Compliance Schedule, Permit Schedule and Single Event Violation Information by month and quarter.
     * For the provided system identifier, dowloads all displayed NPDES quaterly/monthly Compliance Schedule, Permit Schedule, and Single Event Violation  information in a Comma Seperated Value (CSV) format.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesCwa3YrSepscsDownloadPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    dfrRestServicesCwa3YrSepscsDownloadPost(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = File;
      return this.apiClient.callApi(
        '/dfr_rest_services.cwa_3_yr_sepscs_download', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetAirComplianceGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetAirComplianceGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetAirComplianceGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report Air Compliance Report Service
     * This procedure obtains data for Air Compliance in the Environmental Conditions Section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetAirComplianceGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetAirComplianceGet200Response}
     */
    dfrRestServicesGetAirComplianceGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetAirComplianceGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetAirComplianceGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_air_compliance', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetAirCompliancePost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetAirCompliancePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetAirComplianceGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report Air Compliance Report Service
     * This procedure obtains data for Air Compliance in the Environmental Conditions Section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetAirCompliancePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetAirComplianceGet200Response}
     */
    dfrRestServicesGetAirCompliancePost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetAirCompliancePost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetAirComplianceGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_air_compliance', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetAirQualityGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetAirQualityGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetAirQualityGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report Air Quality Report Service
     * This procedure obtains data for Air Quality in the Environmental Conditions Section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetAirQualityGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetAirQualityGet200Response}
     */
    dfrRestServicesGetAirQualityGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetAirQualityGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetAirQualityGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_air_quality', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetAirQualityPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetAirQualityPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetAirQualityGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report Air Quality Report Service
     * This procedure obtains data for Air Quality in the Environmental Conditions Section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetAirQualityPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetAirQualityGet200Response}
     */
    dfrRestServicesGetAirQualityPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetAirQualityPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetAirQualityGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_air_quality', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetAwsDocsGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetAwsDocsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetAwsDocsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Placeholder
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetAwsDocsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetAwsDocsGet200Response}
     */
    dfrRestServicesGetAwsDocsGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetAwsDocsGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetAwsDocsGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_aws_docs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetAwsDocsPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetAwsDocsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetAwsDocsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Placeholder
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetAwsDocsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetAwsDocsGet200Response}
     */
    dfrRestServicesGetAwsDocsPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetAwsDocsPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetAwsDocsGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_aws_docs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetCaseFormalActionsGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetCaseFormalActionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetCaseFormalActionsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Displays Cases related to the Facility
     * Displays closed case information from EPA's Federal Enforcement & Compliance System that are related to the facility.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetCaseFormalActionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetCaseFormalActionsGet200Response}
     */
    dfrRestServicesGetCaseFormalActionsGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetCaseFormalActionsGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetCaseFormalActionsGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_case_formal_actions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetCaseFormalActionsPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetCaseFormalActionsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetCaseFormalActionsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Displays Cases related to the Facility
     * Displays closed case information from EPA's Federal Enforcement & Compliance System that are related to the facility.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetCaseFormalActionsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetCaseFormalActionsGet200Response}
     */
    dfrRestServicesGetCaseFormalActionsPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetCaseFormalActionsPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetCaseFormalActionsGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_case_formal_actions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetComplianceHistoryGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetComplianceHistoryGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetComplianceHistoryGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report 5 Year Compliance Monitoring History Service
     * This procedure obtains data for the Compliance Monitoring History (5 years) in the Enforcement and Compliance Section of the Detailed Facility report.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetComplianceHistoryGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetComplianceHistoryGet200Response}
     */
    dfrRestServicesGetComplianceHistoryGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetComplianceHistoryGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetComplianceHistoryGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_compliance_history', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetComplianceHistoryPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetComplianceHistoryPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetComplianceHistoryGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report 5 Year Compliance Monitoring History Service
     * This procedure obtains data for the Compliance Monitoring History (5 years) in the Enforcement and Compliance Section of the Detailed Facility report.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetComplianceHistoryPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetComplianceHistoryGet200Response}
     */
    dfrRestServicesGetComplianceHistoryPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetComplianceHistoryPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetComplianceHistoryGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_compliance_history', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetComplianceSummaryGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetComplianceSummaryGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetComplianceSummaryGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report Compliance Summary Service
     * This procedure obtains data for Compliance Summary Data in the Enforcement and Compliance Section of the Detailed Facility report.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetComplianceSummaryGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetComplianceSummaryGet200Response}
     */
    dfrRestServicesGetComplianceSummaryGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetComplianceSummaryGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetComplianceSummaryGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_compliance_summary', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetComplianceSummaryPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetComplianceSummaryPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetComplianceSummaryGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report Compliance Summary Service
     * This procedure obtains data for Compliance Summary Data in the Enforcement and Compliance Section of the Detailed Facility report.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetComplianceSummaryPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetComplianceSummaryGet200Response}
     */
    dfrRestServicesGetComplianceSummaryPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetComplianceSummaryPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetComplianceSummaryGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_compliance_summary', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetCsvGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetCsvGetCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Downloads a spectific section  of the DFR in CSV Format
     * For a supplied system id and DFR section name, the procedure will download that section in a Comma Separated Value (CSV) format.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetCsvGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    dfrRestServicesGetCsvGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = File;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_csv', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetCsvPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetCsvPostCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Downloads a spectific section  of the DFR in CSV Format
     * For a supplied system id and DFR section name, the procedure will download that section in a Comma Separated Value (CSV) format.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetCsvPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    dfrRestServicesGetCsvPost(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = File;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_csv', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetCwa3yrComplianceGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetCwa3yrComplianceGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetCwa3yrComplianceGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report 3 Year CWA Facility-Level Status Service
     * This procedure obtains data for the CWA Facility-Level Status section located in the Three Year Compliance Status by Quarter portion of the DFR. Valid Compliance Statuses are as follows: > \"In Viol\" = Facility is in violation > \"No Viol\" = No violation found > \"Unk\" = Unknown status > \"SNC/Cat 1\" = SNC/Category I violation found
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetCwa3yrComplianceGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetCwa3yrComplianceGet200Response}
     */
    dfrRestServicesGetCwa3yrComplianceGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetCwa3yrComplianceGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetCwa3yrComplianceGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_cwa_3yr_compliance', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetCwa3yrCompliancePost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetCwa3yrCompliancePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetCwa3yrComplianceGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report 3 Year CWA Facility-Level Status Service
     * This procedure obtains data for the CWA Facility-Level Status section located in the Three Year Compliance Status by Quarter portion of the DFR. Valid Compliance Statuses are as follows: > \"In Viol\" = Facility is in violation > \"No Viol\" = No violation found > \"Unk\" = Unknown status > \"SNC/Cat 1\" = SNC/Category I violation found
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetCwa3yrCompliancePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetCwa3yrComplianceGet200Response}
     */
    dfrRestServicesGetCwa3yrCompliancePost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetCwa3yrCompliancePost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetCwa3yrComplianceGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_cwa_3yr_compliance', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetCwa3yrD80d90CountsGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetCwa3yrD80d90CountsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetCwa3yrD80d90CountsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Displays monlthly and quarterly counts of D80 and D90 Effluent Non Reporting Violations Related to the Facility
     * Displays monlthly and quarterly counts of D80 and D90 Effluent Non Reporting Violations Related to the Facility from EPA's ICIS NPDES System.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetCwa3yrD80d90CountsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetCwa3yrD80d90CountsGet200Response}
     */
    dfrRestServicesGetCwa3yrD80d90CountsGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetCwa3yrD80d90CountsGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetCwa3yrD80d90CountsGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_cwa_3yr_d80d90_counts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetCwa3yrD80d90CountsPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetCwa3yrD80d90CountsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetCwa3yrD80d90CountsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Displays monlthly and quarterly counts of D80 and D90 Effluent Non Reporting Violations Related to the Facility
     * Displays monlthly and quarterly counts of D80 and D90 Effluent Non Reporting Violations Related to the Facility from EPA's ICIS NPDES System.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetCwa3yrD80d90CountsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetCwa3yrD80d90CountsGet200Response}
     */
    dfrRestServicesGetCwa3yrD80d90CountsPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetCwa3yrD80d90CountsPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetCwa3yrD80d90CountsGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_cwa_3yr_d80d90_counts', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetCwaCsComplianceGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaCsComplianceGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetCwaCsComplianceGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report CWA CSV Compliance Service
     * This procedure obtains data for the CWA Compliance Schedule Violations section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaCsComplianceGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetCwaCsComplianceGet200Response}
     */
    dfrRestServicesGetCwaCsComplianceGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaCsComplianceGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetCwaCsComplianceGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_cwa_cs_compliance', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetCwaCsCompliancePost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaCsCompliancePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetCwaCsComplianceGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report CWA CSV Compliance Service
     * This procedure obtains data for the CWA Compliance Schedule Violations section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaCsCompliancePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetCwaCsComplianceGet200Response}
     */
    dfrRestServicesGetCwaCsCompliancePost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaCsCompliancePost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetCwaCsComplianceGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_cwa_cs_compliance', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetCwaEffAlrExpGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaEffAlrExpGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetCwaEffAlrExpGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Placeholder
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaEffAlrExpGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetCwaEffAlrExpGet200Response}
     */
    dfrRestServicesGetCwaEffAlrExpGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaEffAlrExpGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetCwaEffAlrExpGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_cwa_eff_alr_exp', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetCwaEffAlrExpPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaEffAlrExpPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetCwaEffAlrExpGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Placeholder
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaEffAlrExpPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetCwaEffAlrExpGet200Response}
     */
    dfrRestServicesGetCwaEffAlrExpPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaEffAlrExpPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetCwaEffAlrExpGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_cwa_eff_alr_exp', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetCwaEffAlrGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaEffAlrGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetCwaEffAlrGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report CWA Effluent ALR Service
     * This procedure obtains data for the CWA Pollutant Discharge section located in the Three Year Compliance Status by Quarter portion of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaEffAlrGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetCwaEffAlrGet200Response}
     */
    dfrRestServicesGetCwaEffAlrGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaEffAlrGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetCwaEffAlrGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_cwa_eff_alr', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetCwaEffAlrPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaEffAlrPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetCwaEffAlrGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report CWA Effluent ALR Service
     * This procedure obtains data for the CWA Pollutant Discharge section located in the Three Year Compliance Status by Quarter portion of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaEffAlrPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetCwaEffAlrGet200Response}
     */
    dfrRestServicesGetCwaEffAlrPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaEffAlrPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetCwaEffAlrGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_cwa_eff_alr', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetCwaEffComplianceExpGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaEffComplianceExpGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetCwaEffComplianceExpGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Placeholder
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaEffComplianceExpGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetCwaEffComplianceExpGet200Response}
     */
    dfrRestServicesGetCwaEffComplianceExpGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaEffComplianceExpGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetCwaEffComplianceExpGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_cwa_eff_compliance_exp', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetCwaEffComplianceExpPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaEffComplianceExpPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetCwaEffComplianceExpGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Placeholder
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaEffComplianceExpPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetCwaEffComplianceExpGet200Response}
     */
    dfrRestServicesGetCwaEffComplianceExpPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaEffComplianceExpPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetCwaEffComplianceExpGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_cwa_eff_compliance_exp', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetCwaEffComplianceGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaEffComplianceGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetCwaEffComplianceGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report CWA Effluent Compliance Service
     * This procedure obtains data for the CWA Effluent Compliance section on the DFR.  
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaEffComplianceGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetCwaEffComplianceGet200Response}
     */
    dfrRestServicesGetCwaEffComplianceGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaEffComplianceGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetCwaEffComplianceGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_cwa_eff_compliance', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetCwaEffCompliancePost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaEffCompliancePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetCwaEffComplianceGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report CWA Effluent Compliance Service
     * This procedure obtains data for the CWA Effluent Compliance section on the DFR.  
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaEffCompliancePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetCwaEffComplianceGet200Response}
     */
    dfrRestServicesGetCwaEffCompliancePost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaEffCompliancePost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetCwaEffComplianceGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_cwa_eff_compliance', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetCwaPsComplianceGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaPsComplianceGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetCwaPsComplianceGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report CWA PSV Compliance Service
     * This procedure obtains data for the CWA Permit Schedule Violations section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaPsComplianceGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetCwaPsComplianceGet200Response}
     */
    dfrRestServicesGetCwaPsComplianceGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaPsComplianceGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetCwaPsComplianceGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_cwa_ps_compliance', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetCwaPsCompliancePost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaPsCompliancePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetCwaPsComplianceGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report CWA PSV Compliance Service
     * This procedure obtains data for the CWA Permit Schedule Violations section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaPsCompliancePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetCwaPsComplianceGet200Response}
     */
    dfrRestServicesGetCwaPsCompliancePost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaPsCompliancePost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetCwaPsComplianceGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_cwa_ps_compliance', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetCwaRncComplianceGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaRncComplianceGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetCwaRncComplianceGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report CWA RNC Compliance Service
     * This procedure obtains data for the CWA SNC/RNC History section located in the Three Year ompliance Status by Quarter portion of the DFR. Valid Compliance Statuses are as follows. > S = SNC/Category I - an enforcement action has been issued, and the facility is not meeting its compliance schedule > E = SNC/Category I - effluent violations of monthly average limits (Technical Review Criteria and chronic) > X = SNC/Category I - effluent violations of non-monthly average limits (Technical Review Criteria and chronic) > T = SNC/Category I - compliance schedule reporting violation > D = SNC/Category I - reporting violation - nonreceipt of DMR > N = RNC/Category II - reportable non-compliance > P = Resolved Pending - an enforcement action has been issued, and facility compliance with the action is pending final completion > R = Resolved - the facility has returned to compliance with its permit conditions, either with or without issuance of an enforcement action > C = Not considered in RNC/SNC based on manual review of data by state or EPA region. This manual override status is also indicated by a superscripted \"m\". > Blank = Not considered in RNC/SNC > N/A = EPA's data system is not able to determine the facility-level compliance status based upon the information available. This information may be available from a state database.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaRncComplianceGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetCwaRncComplianceGet200Response}
     */
    dfrRestServicesGetCwaRncComplianceGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaRncComplianceGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetCwaRncComplianceGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_cwa_rnc_compliance', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetCwaRncCompliancePost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaRncCompliancePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetCwaRncComplianceGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report CWA RNC Compliance Service
     * This procedure obtains data for the CWA SNC/RNC History section located in the Three Year ompliance Status by Quarter portion of the DFR. Valid Compliance Statuses are as follows. > S = SNC/Category I - an enforcement action has been issued, and the facility is not meeting its compliance schedule > E = SNC/Category I - effluent violations of monthly average limits (Technical Review Criteria and chronic) > X = SNC/Category I - effluent violations of non-monthly average limits (Technical Review Criteria and chronic) > T = SNC/Category I - compliance schedule reporting violation > D = SNC/Category I - reporting violation - nonreceipt of DMR > N = RNC/Category II - reportable non-compliance > P = Resolved Pending - an enforcement action has been issued, and facility compliance with the action is pending final completion > R = Resolved - the facility has returned to compliance with its permit conditions, either with or without issuance of an enforcement action > C = Not considered in RNC/SNC based on manual review of data by state or EPA region. This manual override status is also indicated by a superscripted \"m\". > Blank = Not considered in RNC/SNC > N/A = EPA's data system is not able to determine the facility-level compliance status based upon the information available. This information may be available from a state database.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaRncCompliancePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetCwaRncComplianceGet200Response}
     */
    dfrRestServicesGetCwaRncCompliancePost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaRncCompliancePost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetCwaRncComplianceGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_cwa_rnc_compliance', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetCwaSeComplianceGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaSeComplianceGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetCwaSeComplianceGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report CWA SEV Compliance Service
     * This procedure obtains data for the CWA Single Event Violations section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaSeComplianceGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetCwaSeComplianceGet200Response}
     */
    dfrRestServicesGetCwaSeComplianceGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaSeComplianceGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetCwaSeComplianceGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_cwa_se_compliance', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetCwaSeCompliancePost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaSeCompliancePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetCwaSeComplianceGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report CWA SEV Compliance Service
     * This procedure obtains data for the CWA Single Event Violations section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetCwaSeCompliancePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetCwaSeComplianceGet200Response}
     */
    dfrRestServicesGetCwaSeCompliancePost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetCwaSeCompliancePost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetCwaSeComplianceGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_cwa_se_compliance', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetD80d90sDetailsGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetD80d90sDetailsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetD80d90sDetailsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Display detailed D80/D90 information for the facility for a given quarter or month
     * Displays detailed D80/D90 Effluent Non Reporting  information from EPA's ICIS NPDES system for the facility for a given quarter or month.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [pNpdesId] The NPDES_ID for the NPDES Permit to download DMR D80 and D90 Non-Receipt violations.
     * @param {module:model/String} [pMissinglate] For the D80.D90 download, identifies whether or not MISSINGviolations are downloaded or LATE violations are downloaded.  Valid values are:  MiISSING and LATE.
     * @param {module:model/String} [pQmtype] Identifies the time frame type, month or quarter, for the D80/D90 download.
     * @param {String} [pQmvalue] A number between 1 and 39 that identifies the specific month or quarter for the D80/D90 violation download.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetD80d90sDetailsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetD80d90sDetailsGet200Response}
     */
    dfrRestServicesGetD80d90sDetailsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_npdes_id': opts['pNpdesId'],
        'p_missinglate': opts['pMissinglate'],
        'p_qmtype': opts['pQmtype'],
        'p_qmvalue': opts['pQmvalue'],
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetD80d90sDetailsGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_d80d90s_details', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetD80d90sDetailsPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetD80d90sDetailsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetD80d90sDetailsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Display detailed D80/D90 information for the facility for a given quarter or month
     * Displays detailed D80/D90 Effluent Non Reporting  information from EPA's ICIS NPDES system for the facility for a given quarter or month.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [pNpdesId] The NPDES_ID for the NPDES Permit to download DMR D80 and D90 Non-Receipt violations.
     * @param {module:model/String} [pMissinglate] For the D80.D90 download, identifies whether or not MISSINGviolations are downloaded or LATE violations are downloaded.  Valid values are:  MiISSING and LATE.
     * @param {module:model/String} [pQmtype] Identifies the time frame type, month or quarter, for the D80/D90 download.
     * @param {String} [pQmvalue] A number between 1 and 39 that identifies the specific month or quarter for the D80/D90 violation download.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetD80d90sDetailsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetD80d90sDetailsGet200Response}
     */
    dfrRestServicesGetD80d90sDetailsPost(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_npdes_id': opts['pNpdesId'],
        'p_missinglate': opts['pMissinglate'],
        'p_qmtype': opts['pQmtype'],
        'p_qmvalue': opts['pQmvalue'],
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetD80d90sDetailsGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_d80d90s_details', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetDemographicsByIdGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetDemographicsByIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetDemographicsByIdGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Displays 2010 Census and ACS demographics by Facility ID
     * Displays precalculated 2010 Census and American Community Survey demographic information for a provided facility identifier.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetDemographicsByIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetDemographicsByIdGet200Response}
     */
    dfrRestServicesGetDemographicsByIdGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetDemographicsByIdGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetDemographicsByIdGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_demographics_by_id', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetDemographicsByIdPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetDemographicsByIdPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetDemographicsByIdGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Displays 2010 Census and ACS demographics by Facility ID
     * Displays precalculated 2010 Census and American Community Survey demographic information for a provided facility identifier.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetDemographicsByIdPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetDemographicsByIdGet200Response}
     */
    dfrRestServicesGetDemographicsByIdPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetDemographicsByIdPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetDemographicsByIdGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_demographics_by_id', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetDfrGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetDfrGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetDfrGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report Service
     * This procedure is the overall service for the Detailed Facility Report. It returns all of the data displayed in the DFR web report by invoking individual procedures that each return a targeted portion of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [pSystem] System Acronym Filter.  Enter a single system acronym to filter results.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetDfrGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetDfrGet200Response}
     */
    dfrRestServicesGetDfrGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetDfrGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'p_system': opts['pSystem'],
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetDfrGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_dfr', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetDfrPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetDfrPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetDfrGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report Service
     * This procedure is the overall service for the Detailed Facility Report. It returns all of the data displayed in the DFR web report by invoking individual procedures that each return a targeted portion of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [pSystem] System Acronym Filter.  Enter a single system acronym to filter results.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetDfrPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetDfrGet200Response}
     */
    dfrRestServicesGetDfrPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetDfrPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'p_system': opts['pSystem'],
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetDfrGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_dfr', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetEjscreenIndexesGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetEjscreenIndexesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetEjscreenIndexesGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report EJScreen Indexes Service
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetEjscreenIndexesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetEjscreenIndexesGet200Response}
     */
    dfrRestServicesGetEjscreenIndexesGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetEjscreenIndexesGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetEjscreenIndexesGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_ejscreen_indexes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetEjscreenIndexesPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetEjscreenIndexesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetEjscreenIndexesGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report EJScreen Indexes Service
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetEjscreenIndexesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetEjscreenIndexesGet200Response}
     */
    dfrRestServicesGetEjscreenIndexesPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetEjscreenIndexesPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetEjscreenIndexesGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_ejscreen_indexes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetEnforcementSummaryGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetEnforcementSummaryGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetEnforcementSummaryGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report Enforcement Summary Service
     * This procedure obtains data for the Enforcement and Compliance Summary in the Facility Summary section of the Detailed Facility Report.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetEnforcementSummaryGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetEnforcementSummaryGet200Response}
     */
    dfrRestServicesGetEnforcementSummaryGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetEnforcementSummaryGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetEnforcementSummaryGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_enforcement_summary', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetEnforcementSummaryPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetEnforcementSummaryPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetEnforcementSummaryGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report Enforcement Summary Service
     * This procedure obtains data for the Enforcement and Compliance Summary in the Facility Summary section of the Detailed Facility Report.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetEnforcementSummaryPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetEnforcementSummaryGet200Response}
     */
    dfrRestServicesGetEnforcementSummaryPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetEnforcementSummaryPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetEnforcementSummaryGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_enforcement_summary', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetExtractDatesGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetExtractDatesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetExtractDatesGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Displays the dates that data was extracted from native EPA systems for the DFR.
     * By EPA System, displays the extract dates that data was extracted for the DFR from multiple EPA computer systems.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetExtractDatesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetExtractDatesGet200Response}
     */
    dfrRestServicesGetExtractDatesGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetExtractDatesGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetExtractDatesGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_extract_dates', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetExtractDatesPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetExtractDatesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetExtractDatesGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Displays the dates that data was extracted from native EPA systems for the DFR.
     * By EPA System, displays the extract dates that data was extracted for the DFR from multiple EPA computer systems.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetExtractDatesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetExtractDatesGet200Response}
     */
    dfrRestServicesGetExtractDatesPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetExtractDatesPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetExtractDatesGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_extract_dates', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetFormalActionsGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetFormalActionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetFormalActionsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report Formal Actions Service
     * This procedure obtains data for the Formal Enforcement Actions section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetFormalActionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetFormalActionsGet200Response}
     */
    dfrRestServicesGetFormalActionsGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetFormalActionsGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetFormalActionsGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_formal_actions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetFormalActionsPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetFormalActionsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetFormalActionsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report Formal Actions Service
     * This procedure obtains data for the Formal Enforcement Actions section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetFormalActionsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetFormalActionsGet200Response}
     */
    dfrRestServicesGetFormalActionsPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetFormalActionsPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetFormalActionsGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_formal_actions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetIcisFormalActionsGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetIcisFormalActionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetIcisFormalActionsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report ICIS Formal Actions Service
     * This procedure obtains data for the Integrated Compliance Information System, Formal Enforcement Actions section of the DFR. 
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetIcisFormalActionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetIcisFormalActionsGet200Response}
     */
    dfrRestServicesGetIcisFormalActionsGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetIcisFormalActionsGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetIcisFormalActionsGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_icis_formal_actions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetIcisFormalActionsPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetIcisFormalActionsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetIcisFormalActionsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report ICIS Formal Actions Service
     * This procedure obtains data for the Integrated Compliance Information System, Formal Enforcement Actions section of the DFR. 
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetIcisFormalActionsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetIcisFormalActionsGet200Response}
     */
    dfrRestServicesGetIcisFormalActionsPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetIcisFormalActionsPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetIcisFormalActionsGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_icis_formal_actions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetInspectionsGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetInspectionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetInspectionsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report Inspections Summary Service
     * This procedure obtains data for Enforcement and Compliance Summary Section of the Detailed Facility report.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetInspectionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetInspectionsGet200Response}
     */
    dfrRestServicesGetInspectionsGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetInspectionsGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetInspectionsGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_inspections', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetInspectionsPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetInspectionsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetInspectionsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report Inspections Summary Service
     * This procedure obtains data for Enforcement and Compliance Summary Section of the Detailed Facility report.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetInspectionsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetInspectionsGet200Response}
     */
    dfrRestServicesGetInspectionsPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetInspectionsPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetInspectionsGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_inspections', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetMapGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetMapGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetMapGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report Map Service
     * Returns an object with the facility's latitude and longitude coordinates.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetMapGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetMapGet200Response}
     */
    dfrRestServicesGetMapGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetMapGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetMapGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_map', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetMapPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetMapPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetMapGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report Map Service
     * Returns an object with the facility's latitude and longitude coordinates.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetMapPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetMapGet200Response}
     */
    dfrRestServicesGetMapPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetMapPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetMapGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_map', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetNaicsGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetNaicsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetNaicsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report NAICS Code Service
     * This procedure obtains data for the Facility NAICS Codes section in Facility/System Characteristics of the Detailed Facility Report.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetNaicsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetNaicsGet200Response}
     */
    dfrRestServicesGetNaicsGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetNaicsGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetNaicsGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_naics', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetNaicsPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetNaicsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetNaicsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report NAICS Code Service
     * This procedure obtains data for the Facility NAICS Codes section in Facility/System Characteristics of the Detailed Facility Report.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetNaicsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetNaicsGet200Response}
     */
    dfrRestServicesGetNaicsPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetNaicsPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetNaicsGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_naics', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetNoticesGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetNoticesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetNoticesGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report Notices Service
     * This procedure obtains data for the Notices/Informal Actions section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetNoticesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetNoticesGet200Response}
     */
    dfrRestServicesGetNoticesGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetNoticesGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetNoticesGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_notices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetNoticesPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetNoticesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetNoticesGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report Notices Service
     * This procedure obtains data for the Notices/Informal Actions section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetNoticesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetNoticesGet200Response}
     */
    dfrRestServicesGetNoticesPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetNoticesPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetNoticesGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_notices', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetPermitsGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetPermitsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetPermitsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report Permits Service
     * This procedure obtains data for the following sections of the Detailed Facility Report. > Facility Information (FRS) in the Facility Summary. > Regulatory Interests in the Facility Summary. > Also Reports in the Facility Summary. > Facility/System Characteristics in Facility/System Characteristics. > Facility Contact Information in Facility/System Characteristics. > Facility SIC Codes in Facility/System Characteristics section. > Facility NAICS Codes in Facility/System Characteristics section.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetPermitsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetPermitsGet200Response}
     */
    dfrRestServicesGetPermitsGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetPermitsGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetPermitsGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_permits', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetPermitsPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetPermitsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetPermitsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report Permits Service
     * This procedure obtains data for the following sections of the Detailed Facility Report. > Facility Information (FRS) in the Facility Summary. > Regulatory Interests in the Facility Summary. > Also Reports in the Facility Summary. > Facility/System Characteristics in Facility/System Characteristics. > Facility Contact Information in Facility/System Characteristics. > Facility SIC Codes in Facility/System Characteristics section. > Facility NAICS Codes in Facility/System Characteristics section.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetPermitsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetPermitsGet200Response}
     */
    dfrRestServicesGetPermitsPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetPermitsPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetPermitsGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_permits', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetRcraComplianceGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetRcraComplianceGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetRcraComplianceGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report RCRA Compliance Service
     * This procedure obtains data for the RCRA Compliance section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetRcraComplianceGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetRcraComplianceGet200Response}
     */
    dfrRestServicesGetRcraComplianceGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetRcraComplianceGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetRcraComplianceGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_rcra_compliance', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetRcraCompliancePost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetRcraCompliancePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetRcraComplianceGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report RCRA Compliance Service
     * This procedure obtains data for the RCRA Compliance section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetRcraCompliancePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetRcraComplianceGet200Response}
     */
    dfrRestServicesGetRcraCompliancePost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetRcraCompliancePost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetRcraComplianceGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_rcra_compliance', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetSdwaLeadAndCopperGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetSdwaLeadAndCopperGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetSdwaLeadAndCopperGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report SDWA Lead and Copper Service
     * This procedure obtains data for the SDWA, Lead and Copper Rule section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetSdwaLeadAndCopperGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetSdwaLeadAndCopperGet200Response}
     */
    dfrRestServicesGetSdwaLeadAndCopperGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetSdwaLeadAndCopperGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetSdwaLeadAndCopperGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_sdwa_lead_and_copper', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetSdwaLeadAndCopperPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetSdwaLeadAndCopperPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetSdwaLeadAndCopperGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report SDWA Lead and Copper Service
     * This procedure obtains data for the SDWA, Lead and Copper Rule section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetSdwaLeadAndCopperPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetSdwaLeadAndCopperGet200Response}
     */
    dfrRestServicesGetSdwaLeadAndCopperPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetSdwaLeadAndCopperPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetSdwaLeadAndCopperGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_sdwa_lead_and_copper', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetSdwaSanitarySurveysGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetSdwaSanitarySurveysGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetSdwaSanitarySurveysGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report SDWA Sanitary Surveys Service
     * This procedure obtains data for the SDWA, Sanitary Surveys section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetSdwaSanitarySurveysGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetSdwaSanitarySurveysGet200Response}
     */
    dfrRestServicesGetSdwaSanitarySurveysGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetSdwaSanitarySurveysGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetSdwaSanitarySurveysGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_sdwa_sanitary_surveys', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetSdwaSanitarySurveysPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetSdwaSanitarySurveysPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetSdwaSanitarySurveysGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report SDWA Sanitary Surveys Service
     * This procedure obtains data for the SDWA, Sanitary Surveys section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetSdwaSanitarySurveysPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetSdwaSanitarySurveysGet200Response}
     */
    dfrRestServicesGetSdwaSanitarySurveysPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetSdwaSanitarySurveysPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetSdwaSanitarySurveysGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_sdwa_sanitary_surveys', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetSdwaSiteVisitsGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetSdwaSiteVisitsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetSdwaSiteVisitsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report SDWA Sanitary Site Visits Service
     * This procedure obtains data for the SDWA, Sanitary Site Visits section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetSdwaSiteVisitsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetSdwaSiteVisitsGet200Response}
     */
    dfrRestServicesGetSdwaSiteVisitsGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetSdwaSiteVisitsGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetSdwaSiteVisitsGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_sdwa_site_visits', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetSdwaSiteVisitsPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetSdwaSiteVisitsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetSdwaSiteVisitsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report SDWA Sanitary Site Visits Service
     * This procedure obtains data for the SDWA, Sanitary Site Visits section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetSdwaSiteVisitsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetSdwaSiteVisitsGet200Response}
     */
    dfrRestServicesGetSdwaSiteVisitsPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetSdwaSiteVisitsPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetSdwaSiteVisitsGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_sdwa_site_visits', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetSdwaViolationsGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetSdwaViolationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetSdwaViolationsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report SDWA Violations Service
     * This procedure obtains data for the SDWA Violations section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetSdwaViolationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetSdwaViolationsGet200Response}
     */
    dfrRestServicesGetSdwaViolationsGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetSdwaViolationsGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetSdwaViolationsGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_sdwa_violations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetSdwaViolationsPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetSdwaViolationsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetSdwaViolationsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report SDWA Violations Service
     * This procedure obtains data for the SDWA Violations section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetSdwaViolationsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetSdwaViolationsGet200Response}
     */
    dfrRestServicesGetSdwaViolationsPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetSdwaViolationsPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetSdwaViolationsGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_sdwa_violations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetSdwisComplianceGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetSdwisComplianceGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetSdwisComplianceGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report SDWIS Compliance Service
     * This procedure obtains data for the SDWA Compliance section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetSdwisComplianceGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetSdwisComplianceGet200Response}
     */
    dfrRestServicesGetSdwisComplianceGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetSdwisComplianceGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetSdwisComplianceGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_sdwis_compliance', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetSdwisCompliancePost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetSdwisCompliancePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetSdwisComplianceGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report SDWIS Compliance Service
     * This procedure obtains data for the SDWA Compliance section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetSdwisCompliancePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetSdwisComplianceGet200Response}
     */
    dfrRestServicesGetSdwisCompliancePost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetSdwisCompliancePost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetSdwisComplianceGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_sdwis_compliance', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetSicCodesGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetSicCodesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetSicCodesGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report SIC Code Service
     * This procedure obtains data for the Facility SIC Codes section in Facility/System Characteristics of the Detailed Facility Report.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetSicCodesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetSicCodesGet200Response}
     */
    dfrRestServicesGetSicCodesGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetSicCodesGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetSicCodesGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_sic_codes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetSicCodesPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetSicCodesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetSicCodesGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report SIC Code Service
     * This procedure obtains data for the Facility SIC Codes section in Facility/System Characteristics of the Detailed Facility Report.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetSicCodesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetSicCodesGet200Response}
     */
    dfrRestServicesGetSicCodesPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetSicCodesPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetSicCodesGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_sic_codes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetSpatialMetadataGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetSpatialMetadataGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetSpatialMetadataGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report Spatial Metadata Service
     * Returns an object with the facility coordinate spatial metadata.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetSpatialMetadataGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetSpatialMetadataGet200Response}
     */
    dfrRestServicesGetSpatialMetadataGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetSpatialMetadataGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetSpatialMetadataGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_spatial_metadata', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetSpatialMetadataPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetSpatialMetadataPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetSpatialMetadataGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report Spatial Metadata Service
     * Returns an object with the facility coordinate spatial metadata.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetSpatialMetadataPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetSpatialMetadataGet200Response}
     */
    dfrRestServicesGetSpatialMetadataPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetSpatialMetadataPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetSpatialMetadataGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_spatial_metadata', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetTriHistoryGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetTriHistoryGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetTriHistoryGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report TRI History Service
     * This procedure obtains data for the TRI History section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetTriHistoryGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetTriHistoryGet200Response}
     */
    dfrRestServicesGetTriHistoryGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetTriHistoryGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetTriHistoryGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_tri_history', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetTriHistoryPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetTriHistoryPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetTriHistoryGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report TRI History Service
     * This procedure obtains data for the TRI History section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetTriHistoryPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetTriHistoryGet200Response}
     */
    dfrRestServicesGetTriHistoryPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetTriHistoryPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetTriHistoryGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_tri_history', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetTriReleasesGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetTriReleasesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetTriReleasesGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report TRI Releases Service
     * This procedrue obtains data for the TRI Releases section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetTriReleasesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetTriReleasesGet200Response}
     */
    dfrRestServicesGetTriReleasesGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetTriReleasesGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetTriReleasesGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_tri_releases', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetTriReleasesPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetTriReleasesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetTriReleasesGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report TRI Releases Service
     * This procedrue obtains data for the TRI Releases section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetTriReleasesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetTriReleasesGet200Response}
     */
    dfrRestServicesGetTriReleasesPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetTriReleasesPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetTriReleasesGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_tri_releases', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetTribesGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetTribesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetTribesGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report Tribes Service
     * This procedure obtains data for the Tribes and Reservations section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetTribesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetTribesGet200Response}
     */
    dfrRestServicesGetTribesGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetTribesGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetTribesGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_tribes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetTribesPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetTribesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetTribesGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report Tribes Service
     * This procedure obtains data for the Tribes and Reservations section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetTribesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetTribesGet200Response}
     */
    dfrRestServicesGetTribesPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetTribesPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetTribesGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_tribes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetWaterQualityDetailsGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetWaterQualityDetailsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetWaterQualityDetailsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Displays detailed Water Quality information from EPA's Office of Water Systems
     * This information is only available for facilities with a NPDES permit. Based on spatial data, displays water quality information from EPA's Office of Water ATTAINS system.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetWaterQualityDetailsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetWaterQualityDetailsGet200Response}
     */
    dfrRestServicesGetWaterQualityDetailsGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetWaterQualityDetailsGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetWaterQualityDetailsGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_water_quality_details', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetWaterQualityDetailsPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetWaterQualityDetailsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetWaterQualityDetailsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Displays detailed Water Quality information from EPA's Office of Water Systems
     * This information is only available for facilities with a NPDES permit. Based on spatial data, displays water quality information from EPA's Office of Water ATTAINS system.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetWaterQualityDetailsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetWaterQualityDetailsGet200Response}
     */
    dfrRestServicesGetWaterQualityDetailsPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetWaterQualityDetailsPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetWaterQualityDetailsGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_water_quality_details', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetWaterQualityGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetWaterQualityGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetWaterQualityGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report Water Quality Service
     * This procedure obtains data for the Water Quality section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetWaterQualityGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetWaterQualityGet200Response}
     */
    dfrRestServicesGetWaterQualityGet(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetWaterQualityGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetWaterQualityGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_water_quality', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesGetWaterQualityPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesGetWaterQualityPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DfrRestServicesGetWaterQualityGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detailed Facility Report Water Quality Service
     * This procedure obtains data for the Water Quality section of the DFR.
     * @param {String} pId Either the EPA Facility Registry System's REGISTRY_ID for a facility or the facility identifier from the following EPA Systems: RCRAINFO (HANDLER_ID), AFS (SCSC), ICIS NPDES (NPDES_ID), or SDWIS (PWS_ID).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [output] Output Format Flag.  Enter one of the following keywords: - JSON = Data model formatted as Javascript Object Notation (default). - JSONP = Data model formatted as Javascript Object Notation with Padding.   - XML = Data model formatted as Extensible Markup Language.
     * @param {String} [callback] JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesGetWaterQualityPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DfrRestServicesGetWaterQualityGet200Response}
     */
    dfrRestServicesGetWaterQualityPost(pId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pId' is set
      if (pId === undefined || pId === null) {
        throw new Error("Missing the required parameter 'pId' when calling dfrRestServicesGetWaterQualityPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'output': opts['output'],
        'p_id': pId,
        'callback': opts['callback']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = DfrRestServicesGetWaterQualityGet200Response;
      return this.apiClient.callApi(
        '/dfr_rest_services.get_water_quality', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesRcra3YrDownloadGet operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesRcra3YrDownloadGetCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Downloads the complete RCRA Compliance History Section of the DFR
     * For the provided system identifier, dowloads all displayed RCRA quaterly/monthly Facility Level Status and Violation information in a Comma Seperated Value (CSV) format.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesRcra3YrDownloadGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    dfrRestServicesRcra3YrDownloadGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = File;
      return this.apiClient.callApi(
        '/dfr_rest_services.rcra_3_yr_download', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dfrRestServicesRcra3YrDownloadPost operation.
     * @callback module:api/DetailedFacilityReportApi~dfrRestServicesRcra3YrDownloadPostCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Downloads the complete RCRA Compliance History Section of the DFR
     * For the provided system identifier, dowloads all displayed RCRA quaterly/monthly Facility Level Status and Violation information in a Comma Seperated Value (CSV) format.
     * @param {module:api/DetailedFacilityReportApi~dfrRestServicesRcra3YrDownloadPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    dfrRestServicesRcra3YrDownloadPost(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = File;
      return this.apiClient.callApi(
        '/dfr_rest_services.rcra_3_yr_download', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
