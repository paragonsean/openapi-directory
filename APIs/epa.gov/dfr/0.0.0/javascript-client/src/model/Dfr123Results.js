/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Dfr018Permits from './Dfr018Permits';
import Dfr018Reports from './Dfr018Reports';

/**
 * The Dfr123Results model module.
 * @module model/Dfr123Results
 * @version 0.0.0
 */
class Dfr123Results {
    /**
     * Constructs a new <code>Dfr123Results</code>.
     * Results Object
     * @alias module:model/Dfr123Results
     * @param message {String} Field to record messages (typically performance-related) about packet processing
     */
    constructor(message) { 
        
        Dfr123Results.initialize(this, message);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, message) { 
        obj['Message'] = message;
    }

    /**
     * Constructs a <code>Dfr123Results</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Dfr123Results} obj Optional instance to populate.
     * @return {module:model/Dfr123Results} The populated <code>Dfr123Results</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Dfr123Results();

            if (data.hasOwnProperty('Message')) {
                obj['Message'] = ApiClient.convertToType(data['Message'], 'String');
            }
            if (data.hasOwnProperty('Permits')) {
                obj['Permits'] = ApiClient.convertToType(data['Permits'], [Dfr018Permits]);
            }
            if (data.hasOwnProperty('Reports')) {
                obj['Reports'] = Dfr018Reports.constructFromObject(data['Reports']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Dfr123Results</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Dfr123Results</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Dfr123Results.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Message'] && !(typeof data['Message'] === 'string' || data['Message'] instanceof String)) {
            throw new Error("Expected the field `Message` to be a primitive type in the JSON string but got " + data['Message']);
        }
        if (data['Permits']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Permits'])) {
                throw new Error("Expected the field `Permits` to be an array in the JSON data but got " + data['Permits']);
            }
            // validate the optional field `Permits` (array)
            for (const item of data['Permits']) {
                Dfr018Permits.validateJSON(item);
            };
        }
        // validate the optional field `Reports`
        if (data['Reports']) { // data not null
          Dfr018Reports.validateJSON(data['Reports']);
        }

        return true;
    }


}

Dfr123Results.RequiredProperties = ["Message"];

/**
 * Field to record messages (typically performance-related) about packet processing
 * @member {String} Message
 */
Dfr123Results.prototype['Message'] = undefined;

/**
 * @member {Array.<module:model/Dfr018Permits>} Permits
 */
Dfr123Results.prototype['Permits'] = undefined;

/**
 * @member {module:model/Dfr018Reports} Reports
 */
Dfr123Results.prototype['Reports'] = undefined;






export default Dfr123Results;

