/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Dfr075 model module.
 * @module model/Dfr075
 * @version 0.0.0
 */
class Dfr075 {
    /**
     * Constructs a new <code>Dfr075</code>.
     * NAICS Codes Object
     * @alias module:model/Dfr075
     * @param ePASystem {String} The EPA data system in which permit and facility records are kept. EPA's Facility Registry System (FRS) links all program database records (such as permit IDs and IDs facilities use in reporting to EPA) together. The following list describes the individual data systems that are linked to from the detailed facility report:   - AFS: Air Facility System for Clean Air Act stationary source programs. - ICP: Integrated Compliance Information System for Clean Water Act programs monitoring National Pollutant Discharge Elimination System (NPDES) permits. - RCR: Resource Conservation and Recovery Act Information System (RCRAInfo) for tracking the Resource Conservation and Recovery Act (RCRA) programs. - NCDB: National Compliance Database System for monitoring national performance of the Toxic Substance Control Act (TSCA); the Emergency Planning and Right-to-Know Act, Section 313 (EPCRA); the Asbestos Hazard Emergency Response (AHERA); and the Federal Insecticide, Fungicide, and Rodenticide Act (FIFRA). - TRI: Toxics Release Inventory for Emergency Planning and Community Right-to-Know Act, Section 313 submissions. - NEI: National Emissions Inventory database contains information on stationary and mobile sources that emit criteria air pollutants and their precursors, as well as hazardous air pollutants (HAPs). The database includes estimates of annual emissions, by source, of air pollutants in each area of the country, on an annual basis. - TSCA: Toxic Substances Control Act addressing the production, importation, use, and disposal of specific chemicals.
     * @param nAICSCode {String} The North American Industry Classification System (NAICS) code
     * @param nAICSDesc {String} The corresponding description of North American Industry Classification System (NAICS) code.
     * @param sourceID {String} Unique Identifier assigned by EPA.
     */
    constructor(ePASystem, nAICSCode, nAICSDesc, sourceID) { 
        
        Dfr075.initialize(this, ePASystem, nAICSCode, nAICSDesc, sourceID);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ePASystem, nAICSCode, nAICSDesc, sourceID) { 
        obj['EPASystem'] = ePASystem;
        obj['NAICSCode'] = nAICSCode;
        obj['NAICSDesc'] = nAICSDesc;
        obj['SourceID'] = sourceID;
    }

    /**
     * Constructs a <code>Dfr075</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Dfr075} obj Optional instance to populate.
     * @return {module:model/Dfr075} The populated <code>Dfr075</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Dfr075();

            if (data.hasOwnProperty('EPASystem')) {
                obj['EPASystem'] = ApiClient.convertToType(data['EPASystem'], 'String');
            }
            if (data.hasOwnProperty('NAICSCode')) {
                obj['NAICSCode'] = ApiClient.convertToType(data['NAICSCode'], 'String');
            }
            if (data.hasOwnProperty('NAICSDesc')) {
                obj['NAICSDesc'] = ApiClient.convertToType(data['NAICSDesc'], 'String');
            }
            if (data.hasOwnProperty('SourceID')) {
                obj['SourceID'] = ApiClient.convertToType(data['SourceID'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Dfr075</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Dfr075</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Dfr075.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['EPASystem'] && !(typeof data['EPASystem'] === 'string' || data['EPASystem'] instanceof String)) {
            throw new Error("Expected the field `EPASystem` to be a primitive type in the JSON string but got " + data['EPASystem']);
        }
        // ensure the json data is a string
        if (data['NAICSCode'] && !(typeof data['NAICSCode'] === 'string' || data['NAICSCode'] instanceof String)) {
            throw new Error("Expected the field `NAICSCode` to be a primitive type in the JSON string but got " + data['NAICSCode']);
        }
        // ensure the json data is a string
        if (data['NAICSDesc'] && !(typeof data['NAICSDesc'] === 'string' || data['NAICSDesc'] instanceof String)) {
            throw new Error("Expected the field `NAICSDesc` to be a primitive type in the JSON string but got " + data['NAICSDesc']);
        }
        // ensure the json data is a string
        if (data['SourceID'] && !(typeof data['SourceID'] === 'string' || data['SourceID'] instanceof String)) {
            throw new Error("Expected the field `SourceID` to be a primitive type in the JSON string but got " + data['SourceID']);
        }

        return true;
    }


}

Dfr075.RequiredProperties = ["EPASystem", "NAICSCode", "NAICSDesc", "SourceID"];

/**
 * The EPA data system in which permit and facility records are kept. EPA's Facility Registry System (FRS) links all program database records (such as permit IDs and IDs facilities use in reporting to EPA) together. The following list describes the individual data systems that are linked to from the detailed facility report:   - AFS: Air Facility System for Clean Air Act stationary source programs. - ICP: Integrated Compliance Information System for Clean Water Act programs monitoring National Pollutant Discharge Elimination System (NPDES) permits. - RCR: Resource Conservation and Recovery Act Information System (RCRAInfo) for tracking the Resource Conservation and Recovery Act (RCRA) programs. - NCDB: National Compliance Database System for monitoring national performance of the Toxic Substance Control Act (TSCA); the Emergency Planning and Right-to-Know Act, Section 313 (EPCRA); the Asbestos Hazard Emergency Response (AHERA); and the Federal Insecticide, Fungicide, and Rodenticide Act (FIFRA). - TRI: Toxics Release Inventory for Emergency Planning and Community Right-to-Know Act, Section 313 submissions. - NEI: National Emissions Inventory database contains information on stationary and mobile sources that emit criteria air pollutants and their precursors, as well as hazardous air pollutants (HAPs). The database includes estimates of annual emissions, by source, of air pollutants in each area of the country, on an annual basis. - TSCA: Toxic Substances Control Act addressing the production, importation, use, and disposal of specific chemicals.
 * @member {String} EPASystem
 */
Dfr075.prototype['EPASystem'] = undefined;

/**
 * The North American Industry Classification System (NAICS) code
 * @member {String} NAICSCode
 */
Dfr075.prototype['NAICSCode'] = undefined;

/**
 * The corresponding description of North American Industry Classification System (NAICS) code.
 * @member {String} NAICSDesc
 */
Dfr075.prototype['NAICSDesc'] = undefined;

/**
 * Unique Identifier assigned by EPA.
 * @member {String} SourceID
 */
Dfr075.prototype['SourceID'] = undefined;






export default Dfr075;

