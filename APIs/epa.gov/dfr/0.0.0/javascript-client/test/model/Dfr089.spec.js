/**
 * U.S. EPA Enforcement and Compliance History Online (ECHO) - Detailed Facility Report (DFR)
 * Enforcement and Compliance History Online (ECHO) is a tool developed and maintained by EPA's Office of Enforcement and Compliance Assurance for public use. ECHO provides integrated compliance and enforcement information for over 1 million regulated facilities nationwide.  DFR Rest Services provide multiple service endpoints, to retrieve detailed facility location, enforcement, compliance monitoring, and pollutant information for any single facility.  See the Detailed Facility Report (DFR) Help Page (https://echo.epa.gov/help/reports/detailed-facility-report-help) for additional information on the DFR.  Additionally, a Data Dictionary (https://echo.epa.gov/help/reports/dfr-data-dictionary) is also available.  There is one primary service end point, get_dfr, that provides all available DFR data.  All other service end points that are exposed, will return data on a single section of the DFR.     \\ Additional ECHO Resources:   <a href=\"https://echo.epa.gov/tools/web-services\">Web Services</a>, <a href=\"https://echo.epa.gov/resources/echo-data/about-the-data\">About ECHO's Data</a>, <a href=\"https://echo.epa.gov/tools/data-downloads\">Data Downloads</a>  
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.USEpaEnforcementAndComplianceHistoryOnlineEchoDetailedFacilityReportDfr);
  }
}(this, function(expect, USEpaEnforcementAndComplianceHistoryOnlineEchoDetailedFacilityReportDfr) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoDetailedFacilityReportDfr.Dfr089();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Dfr089', function() {
    it('should create an instance of Dfr089', function() {
      // uncomment below and update the code to test Dfr089
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoDetailedFacilityReportDfr.Dfr089();
      //expect(instance).to.be.a(USEpaEnforcementAndComplianceHistoryOnlineEchoDetailedFacilityReportDfr.Dfr089);
    });

    it('should have the property agency (base name: "Agency")', function() {
      // uncomment below and update the code to test the property agency
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoDetailedFacilityReportDfr.Dfr089();
      //expect(instance).to.be();
    });

    it('should have the property dataVerification (base name: "DataVerification")', function() {
      // uncomment below and update the code to test the property dataVerification
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoDetailedFacilityReportDfr.Dfr089();
      //expect(instance).to.be();
    });

    it('should have the property distribution (base name: "Distribution")', function() {
      // uncomment below and update the code to test the property distribution
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoDetailedFacilityReportDfr.Dfr089();
      //expect(instance).to.be();
    });

    it('should have the property financial (base name: "Financial")', function() {
      // uncomment below and update the code to test the property financial
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoDetailedFacilityReportDfr.Dfr089();
      //expect(instance).to.be();
    });

    it('should have the property finishedWaterStorage (base name: "FinishedWaterStorage")', function() {
      // uncomment below and update the code to test the property finishedWaterStorage
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoDetailedFacilityReportDfr.Dfr089();
      //expect(instance).to.be();
    });

    it('should have the property managementOperation (base name: "ManagementOperation")', function() {
      // uncomment below and update the code to test the property managementOperation
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoDetailedFacilityReportDfr.Dfr089();
      //expect(instance).to.be();
    });

    it('should have the property operatorCompliance (base name: "OperatorCompliance")', function() {
      // uncomment below and update the code to test the property operatorCompliance
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoDetailedFacilityReportDfr.Dfr089();
      //expect(instance).to.be();
    });

    it('should have the property otherEvaluation (base name: "OtherEvaluation")', function() {
      // uncomment below and update the code to test the property otherEvaluation
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoDetailedFacilityReportDfr.Dfr089();
      //expect(instance).to.be();
    });

    it('should have the property pumps (base name: "Pumps")', function() {
      // uncomment below and update the code to test the property pumps
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoDetailedFacilityReportDfr.Dfr089();
      //expect(instance).to.be();
    });

    it('should have the property security (base name: "Security")', function() {
      // uncomment below and update the code to test the property security
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoDetailedFacilityReportDfr.Dfr089();
      //expect(instance).to.be();
    });

    it('should have the property source (base name: "Source")', function() {
      // uncomment below and update the code to test the property source
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoDetailedFacilityReportDfr.Dfr089();
      //expect(instance).to.be();
    });

    it('should have the property sourceID (base name: "SourceID")', function() {
      // uncomment below and update the code to test the property sourceID
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoDetailedFacilityReportDfr.Dfr089();
      //expect(instance).to.be();
    });

    it('should have the property treatment (base name: "Treatment")', function() {
      // uncomment below and update the code to test the property treatment
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoDetailedFacilityReportDfr.Dfr089();
      //expect(instance).to.be();
    });

    it('should have the property visitDate (base name: "VisitDate")', function() {
      // uncomment below and update the code to test the property visitDate
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoDetailedFacilityReportDfr.Dfr089();
      //expect(instance).to.be();
    });

    it('should have the property visitType (base name: "VisitType")', function() {
      // uncomment below and update the code to test the property visitType
      //var instance = new USEpaEnforcementAndComplianceHistoryOnlineEchoDetailedFacilityReportDfr.Dfr089();
      //expect(instance).to.be();
    });

  });

}));
