/**
 * eNanoMapper database
 * AMBIT REST web services [eNanoMapper profile] with free text & faceted search
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@ideaconsult.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Dataset from './model/Dataset';
import Facet from './model/Facet';
import Investigation from './model/Investigation';
import SolrQuery from './model/SolrQuery';
import SolrResponse from './model/SolrResponse';
import SolrResponseResponse from './model/SolrResponseResponse';
import SolrResponseResponseHeader from './model/SolrResponseResponseHeader';
import SolrqueryPostRequest from './model/SolrqueryPostRequest';
import SolrqueryPostRequestParams from './model/SolrqueryPostRequestParams';
import Substance from './model/Substance';
import SubstanceComposition from './model/SubstanceComposition';
import SubstanceStudy from './model/SubstanceStudy';
import SubstanceStudySummary from './model/SubstanceStudySummary';
import FacetsApi from './api/FacetsApi';
import SearchApi from './api/SearchApi';
import StructuresApi from './api/StructuresApi';
import StudiesApi from './api/StudiesApi';
import SubstancesApi from './api/SubstancesApi';


/**
* AMBIT REST web services [eNanoMapper profile] with free text &amp; faceted search.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ENanoMapperDatabase = require('index'); // See note below*.
* var xxxSvc = new ENanoMapperDatabase.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ENanoMapperDatabase.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ENanoMapperDatabase.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ENanoMapperDatabase.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 4.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Dataset model constructor.
     * @property {module:model/Dataset}
     */
    Dataset,

    /**
     * The Facet model constructor.
     * @property {module:model/Facet}
     */
    Facet,

    /**
     * The Investigation model constructor.
     * @property {module:model/Investigation}
     */
    Investigation,

    /**
     * The SolrQuery model constructor.
     * @property {module:model/SolrQuery}
     */
    SolrQuery,

    /**
     * The SolrResponse model constructor.
     * @property {module:model/SolrResponse}
     */
    SolrResponse,

    /**
     * The SolrResponseResponse model constructor.
     * @property {module:model/SolrResponseResponse}
     */
    SolrResponseResponse,

    /**
     * The SolrResponseResponseHeader model constructor.
     * @property {module:model/SolrResponseResponseHeader}
     */
    SolrResponseResponseHeader,

    /**
     * The SolrqueryPostRequest model constructor.
     * @property {module:model/SolrqueryPostRequest}
     */
    SolrqueryPostRequest,

    /**
     * The SolrqueryPostRequestParams model constructor.
     * @property {module:model/SolrqueryPostRequestParams}
     */
    SolrqueryPostRequestParams,

    /**
     * The Substance model constructor.
     * @property {module:model/Substance}
     */
    Substance,

    /**
     * The SubstanceComposition model constructor.
     * @property {module:model/SubstanceComposition}
     */
    SubstanceComposition,

    /**
     * The SubstanceStudy model constructor.
     * @property {module:model/SubstanceStudy}
     */
    SubstanceStudy,

    /**
     * The SubstanceStudySummary model constructor.
     * @property {module:model/SubstanceStudySummary}
     */
    SubstanceStudySummary,

    /**
    * The FacetsApi service constructor.
    * @property {module:api/FacetsApi}
    */
    FacetsApi,

    /**
    * The SearchApi service constructor.
    * @property {module:api/SearchApi}
    */
    SearchApi,

    /**
    * The StructuresApi service constructor.
    * @property {module:api/StructuresApi}
    */
    StructuresApi,

    /**
    * The StudiesApi service constructor.
    * @property {module:api/StudiesApi}
    */
    StudiesApi,

    /**
    * The SubstancesApi service constructor.
    * @property {module:api/SubstancesApi}
    */
    SubstancesApi
};
