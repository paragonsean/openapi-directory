/**
 * eNanoMapper database
 * AMBIT REST web services [eNanoMapper profile] with free text & faceted search
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@ideaconsult.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubstanceStudySummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubstanceStudySummary::OAISubstanceStudySummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubstanceStudySummary::OAISubstanceStudySummary() {
    this->initializeModel();
}

OAISubstanceStudySummary::~OAISubstanceStudySummary() {}

void OAISubstanceStudySummary::initializeModel() {

    m_facet_isSet = false;
    m_facet_isValid = false;
}

void OAISubstanceStudySummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISubstanceStudySummary::fromJsonObject(QJsonObject json) {

    m_facet_isValid = ::OpenAPI::fromJsonValue(m_facet, json[QString("facet")]);
    m_facet_isSet = !json[QString("facet")].isNull() && m_facet_isValid;
}

QString OAISubstanceStudySummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISubstanceStudySummary::asJsonObject() const {
    QJsonObject obj;
    if (m_facet_isSet) {
        obj.insert(QString("facet"), ::OpenAPI::toJsonValue(m_facet));
    }
    return obj;
}

OAIObject OAISubstanceStudySummary::getFacet() const {
    return m_facet;
}
void OAISubstanceStudySummary::setFacet(const OAIObject &facet) {
    m_facet = facet;
    m_facet_isSet = true;
}

bool OAISubstanceStudySummary::is_facet_Set() const{
    return m_facet_isSet;
}

bool OAISubstanceStudySummary::is_facet_Valid() const{
    return m_facet_isValid;
}

bool OAISubstanceStudySummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_facet_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISubstanceStudySummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
