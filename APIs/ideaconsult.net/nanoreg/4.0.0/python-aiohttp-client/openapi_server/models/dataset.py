# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Dataset(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_entry: object=None, feature: object=None, model_uri: str=None, query: object=None):
        """Dataset - a model defined in OpenAPI

        :param data_entry: The data_entry of this Dataset.
        :param feature: The feature of this Dataset.
        :param model_uri: The model_uri of this Dataset.
        :param query: The query of this Dataset.
        """
        self.openapi_types = {
            'data_entry': object,
            'feature': object,
            'model_uri': str,
            'query': object
        }

        self.attribute_map = {
            'data_entry': 'dataEntry',
            'feature': 'feature',
            'model_uri': 'model_uri',
            'query': 'query'
        }

        self._data_entry = data_entry
        self._feature = feature
        self._model_uri = model_uri
        self._query = query

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Dataset':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Dataset of this Dataset.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_entry(self):
        """Gets the data_entry of this Dataset.


        :return: The data_entry of this Dataset.
        :rtype: object
        """
        return self._data_entry

    @data_entry.setter
    def data_entry(self, data_entry):
        """Sets the data_entry of this Dataset.


        :param data_entry: The data_entry of this Dataset.
        :type data_entry: object
        """

        self._data_entry = data_entry

    @property
    def feature(self):
        """Gets the feature of this Dataset.


        :return: The feature of this Dataset.
        :rtype: object
        """
        return self._feature

    @feature.setter
    def feature(self, feature):
        """Sets the feature of this Dataset.


        :param feature: The feature of this Dataset.
        :type feature: object
        """

        self._feature = feature

    @property
    def model_uri(self):
        """Gets the model_uri of this Dataset.


        :return: The model_uri of this Dataset.
        :rtype: str
        """
        return self._model_uri

    @model_uri.setter
    def model_uri(self, model_uri):
        """Sets the model_uri of this Dataset.


        :param model_uri: The model_uri of this Dataset.
        :type model_uri: str
        """

        self._model_uri = model_uri

    @property
    def query(self):
        """Gets the query of this Dataset.


        :return: The query of this Dataset.
        :rtype: object
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this Dataset.


        :param query: The query of this Dataset.
        :type query: object
        """

        self._query = query
