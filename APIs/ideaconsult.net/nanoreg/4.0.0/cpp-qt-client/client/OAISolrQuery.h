/**
 * eNanoMapper database
 * AMBIT REST web services [eNanoMapper profile] with free text & faceted search
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@ideaconsult.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISolrQuery.h
 *
 * 
 */

#ifndef OAISolrQuery_H
#define OAISolrQuery_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISolrQuery : public OAIObject {
public:
    OAISolrQuery();
    OAISolrQuery(QString json);
    ~OAISolrQuery() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFacet() const;
    void setFacet(const QString &facet);
    bool is_facet_Set() const;
    bool is_facet_Valid() const;

    QString getFilter() const;
    void setFilter(const QString &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    QString getQuery() const;
    void setQuery(const QString &query);
    bool is_query_Set() const;
    bool is_query_Valid() const;

    qint32 getRows() const;
    void setRows(const qint32 &rows);
    bool is_rows_Set() const;
    bool is_rows_Valid() const;

    bool isSort() const;
    void setSort(const bool &sort);
    bool is_sort_Set() const;
    bool is_sort_Valid() const;

    qint32 getStart() const;
    void setStart(const qint32 &start);
    bool is_start_Set() const;
    bool is_start_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_facet;
    bool m_facet_isSet;
    bool m_facet_isValid;

    QString m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    QString m_query;
    bool m_query_isSet;
    bool m_query_isValid;

    qint32 m_rows;
    bool m_rows_isSet;
    bool m_rows_isValid;

    bool m_sort;
    bool m_sort_isSet;
    bool m_sort_isValid;

    qint32 m_start;
    bool m_start_isSet;
    bool m_start_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISolrQuery)

#endif // OAISolrQuery_H
