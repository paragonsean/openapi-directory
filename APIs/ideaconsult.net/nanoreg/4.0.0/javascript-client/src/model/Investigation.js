/**
 * eNanoMapper database
 * AMBIT REST web services [eNanoMapper profile] with free text & faceted search
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@ideaconsult.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Investigation model module.
 * @module model/Investigation
 * @version 4.0.0
 */
class Investigation {
    /**
     * Constructs a new <code>Investigation</code>.
     * @alias module:model/Investigation
     */
    constructor() { 
        
        Investigation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Investigation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Investigation} obj Optional instance to populate.
     * @return {module:model/Investigation} The populated <code>Investigation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Investigation();

            if (data.hasOwnProperty('_childDocuments_')) {
                obj['_childDocuments_'] = ApiClient.convertToType(data['_childDocuments_'], Object);
            }
            if (data.hasOwnProperty('assay')) {
                obj['assay'] = ApiClient.convertToType(data['assay'], 'String');
            }
            if (data.hasOwnProperty('document_uuid')) {
                obj['document_uuid'] = ApiClient.convertToType(data['document_uuid'], 'String');
            }
            if (data.hasOwnProperty('effectendpoint')) {
                obj['effectendpoint'] = ApiClient.convertToType(data['effectendpoint'], 'String');
            }
            if (data.hasOwnProperty('endpoint')) {
                obj['endpoint'] = ApiClient.convertToType(data['endpoint'], 'String');
            }
            if (data.hasOwnProperty('endpointcategory')) {
                obj['endpointcategory'] = ApiClient.convertToType(data['endpointcategory'], 'String');
            }
            if (data.hasOwnProperty('err')) {
                obj['err'] = ApiClient.convertToType(data['err'], 'Number');
            }
            if (data.hasOwnProperty('errQualifier')) {
                obj['errQualifier'] = ApiClient.convertToType(data['errQualifier'], 'String');
            }
            if (data.hasOwnProperty('guidance')) {
                obj['guidance'] = ApiClient.convertToType(data['guidance'], 'String');
            }
            if (data.hasOwnProperty('investigation')) {
                obj['investigation'] = ApiClient.convertToType(data['investigation'], 'String');
            }
            if (data.hasOwnProperty('loQualifier')) {
                obj['loQualifier'] = ApiClient.convertToType(data['loQualifier'], 'String');
            }
            if (data.hasOwnProperty('loValue')) {
                obj['loValue'] = ApiClient.convertToType(data['loValue'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('owner_name')) {
                obj['owner_name'] = ApiClient.convertToType(data['owner_name'], 'String');
            }
            if (data.hasOwnProperty('publicname')) {
                obj['publicname'] = ApiClient.convertToType(data['publicname'], 'String');
            }
            if (data.hasOwnProperty('reference')) {
                obj['reference'] = ApiClient.convertToType(data['reference'], 'String');
            }
            if (data.hasOwnProperty('reference_owner')) {
                obj['reference_owner'] = ApiClient.convertToType(data['reference_owner'], 'String');
            }
            if (data.hasOwnProperty('reference_year')) {
                obj['reference_year'] = ApiClient.convertToType(data['reference_year'], 'String');
            }
            if (data.hasOwnProperty('resulttype')) {
                obj['resulttype'] = ApiClient.convertToType(data['resulttype'], 'String');
            }
            if (data.hasOwnProperty('s_uuid')) {
                obj['s_uuid'] = ApiClient.convertToType(data['s_uuid'], 'String');
            }
            if (data.hasOwnProperty('studyResultType')) {
                obj['studyResultType'] = ApiClient.convertToType(data['studyResultType'], 'String');
            }
            if (data.hasOwnProperty('substanceType')) {
                obj['substanceType'] = ApiClient.convertToType(data['substanceType'], 'String');
            }
            if (data.hasOwnProperty('textValue')) {
                obj['textValue'] = ApiClient.convertToType(data['textValue'], 'String');
            }
            if (data.hasOwnProperty('topcategory')) {
                obj['topcategory'] = ApiClient.convertToType(data['topcategory'], 'String');
            }
            if (data.hasOwnProperty('type_s')) {
                obj['type_s'] = ApiClient.convertToType(data['type_s'], 'String');
            }
            if (data.hasOwnProperty('unit')) {
                obj['unit'] = ApiClient.convertToType(data['unit'], 'String');
            }
            if (data.hasOwnProperty('upQualifier')) {
                obj['upQualifier'] = ApiClient.convertToType(data['upQualifier'], 'String');
            }
            if (data.hasOwnProperty('upValue')) {
                obj['upValue'] = ApiClient.convertToType(data['upValue'], 'Number');
            }
            if (data.hasOwnProperty('updated')) {
                obj['updated'] = ApiClient.convertToType(data['updated'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Investigation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Investigation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['assay'] && !(typeof data['assay'] === 'string' || data['assay'] instanceof String)) {
            throw new Error("Expected the field `assay` to be a primitive type in the JSON string but got " + data['assay']);
        }
        // ensure the json data is a string
        if (data['document_uuid'] && !(typeof data['document_uuid'] === 'string' || data['document_uuid'] instanceof String)) {
            throw new Error("Expected the field `document_uuid` to be a primitive type in the JSON string but got " + data['document_uuid']);
        }
        // ensure the json data is a string
        if (data['effectendpoint'] && !(typeof data['effectendpoint'] === 'string' || data['effectendpoint'] instanceof String)) {
            throw new Error("Expected the field `effectendpoint` to be a primitive type in the JSON string but got " + data['effectendpoint']);
        }
        // ensure the json data is a string
        if (data['endpoint'] && !(typeof data['endpoint'] === 'string' || data['endpoint'] instanceof String)) {
            throw new Error("Expected the field `endpoint` to be a primitive type in the JSON string but got " + data['endpoint']);
        }
        // ensure the json data is a string
        if (data['endpointcategory'] && !(typeof data['endpointcategory'] === 'string' || data['endpointcategory'] instanceof String)) {
            throw new Error("Expected the field `endpointcategory` to be a primitive type in the JSON string but got " + data['endpointcategory']);
        }
        // ensure the json data is a string
        if (data['errQualifier'] && !(typeof data['errQualifier'] === 'string' || data['errQualifier'] instanceof String)) {
            throw new Error("Expected the field `errQualifier` to be a primitive type in the JSON string but got " + data['errQualifier']);
        }
        // ensure the json data is a string
        if (data['guidance'] && !(typeof data['guidance'] === 'string' || data['guidance'] instanceof String)) {
            throw new Error("Expected the field `guidance` to be a primitive type in the JSON string but got " + data['guidance']);
        }
        // ensure the json data is a string
        if (data['investigation'] && !(typeof data['investigation'] === 'string' || data['investigation'] instanceof String)) {
            throw new Error("Expected the field `investigation` to be a primitive type in the JSON string but got " + data['investigation']);
        }
        // ensure the json data is a string
        if (data['loQualifier'] && !(typeof data['loQualifier'] === 'string' || data['loQualifier'] instanceof String)) {
            throw new Error("Expected the field `loQualifier` to be a primitive type in the JSON string but got " + data['loQualifier']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['owner_name'] && !(typeof data['owner_name'] === 'string' || data['owner_name'] instanceof String)) {
            throw new Error("Expected the field `owner_name` to be a primitive type in the JSON string but got " + data['owner_name']);
        }
        // ensure the json data is a string
        if (data['publicname'] && !(typeof data['publicname'] === 'string' || data['publicname'] instanceof String)) {
            throw new Error("Expected the field `publicname` to be a primitive type in the JSON string but got " + data['publicname']);
        }
        // ensure the json data is a string
        if (data['reference'] && !(typeof data['reference'] === 'string' || data['reference'] instanceof String)) {
            throw new Error("Expected the field `reference` to be a primitive type in the JSON string but got " + data['reference']);
        }
        // ensure the json data is a string
        if (data['reference_owner'] && !(typeof data['reference_owner'] === 'string' || data['reference_owner'] instanceof String)) {
            throw new Error("Expected the field `reference_owner` to be a primitive type in the JSON string but got " + data['reference_owner']);
        }
        // ensure the json data is a string
        if (data['reference_year'] && !(typeof data['reference_year'] === 'string' || data['reference_year'] instanceof String)) {
            throw new Error("Expected the field `reference_year` to be a primitive type in the JSON string but got " + data['reference_year']);
        }
        // ensure the json data is a string
        if (data['resulttype'] && !(typeof data['resulttype'] === 'string' || data['resulttype'] instanceof String)) {
            throw new Error("Expected the field `resulttype` to be a primitive type in the JSON string but got " + data['resulttype']);
        }
        // ensure the json data is a string
        if (data['s_uuid'] && !(typeof data['s_uuid'] === 'string' || data['s_uuid'] instanceof String)) {
            throw new Error("Expected the field `s_uuid` to be a primitive type in the JSON string but got " + data['s_uuid']);
        }
        // ensure the json data is a string
        if (data['studyResultType'] && !(typeof data['studyResultType'] === 'string' || data['studyResultType'] instanceof String)) {
            throw new Error("Expected the field `studyResultType` to be a primitive type in the JSON string but got " + data['studyResultType']);
        }
        // ensure the json data is a string
        if (data['substanceType'] && !(typeof data['substanceType'] === 'string' || data['substanceType'] instanceof String)) {
            throw new Error("Expected the field `substanceType` to be a primitive type in the JSON string but got " + data['substanceType']);
        }
        // ensure the json data is a string
        if (data['textValue'] && !(typeof data['textValue'] === 'string' || data['textValue'] instanceof String)) {
            throw new Error("Expected the field `textValue` to be a primitive type in the JSON string but got " + data['textValue']);
        }
        // ensure the json data is a string
        if (data['topcategory'] && !(typeof data['topcategory'] === 'string' || data['topcategory'] instanceof String)) {
            throw new Error("Expected the field `topcategory` to be a primitive type in the JSON string but got " + data['topcategory']);
        }
        // ensure the json data is a string
        if (data['type_s'] && !(typeof data['type_s'] === 'string' || data['type_s'] instanceof String)) {
            throw new Error("Expected the field `type_s` to be a primitive type in the JSON string but got " + data['type_s']);
        }
        // ensure the json data is a string
        if (data['unit'] && !(typeof data['unit'] === 'string' || data['unit'] instanceof String)) {
            throw new Error("Expected the field `unit` to be a primitive type in the JSON string but got " + data['unit']);
        }
        // ensure the json data is a string
        if (data['upQualifier'] && !(typeof data['upQualifier'] === 'string' || data['upQualifier'] instanceof String)) {
            throw new Error("Expected the field `upQualifier` to be a primitive type in the JSON string but got " + data['upQualifier']);
        }
        // ensure the json data is a string
        if (data['updated'] && !(typeof data['updated'] === 'string' || data['updated'] instanceof String)) {
            throw new Error("Expected the field `updated` to be a primitive type in the JSON string but got " + data['updated']);
        }

        return true;
    }


}



/**
 * @member {Object} _childDocuments_
 */
Investigation.prototype['_childDocuments_'] = undefined;

/**
 * @member {String} assay
 */
Investigation.prototype['assay'] = undefined;

/**
 * @member {String} document_uuid
 */
Investigation.prototype['document_uuid'] = undefined;

/**
 * @member {String} effectendpoint
 */
Investigation.prototype['effectendpoint'] = undefined;

/**
 * @member {String} endpoint
 */
Investigation.prototype['endpoint'] = undefined;

/**
 * @member {String} endpointcategory
 */
Investigation.prototype['endpointcategory'] = undefined;

/**
 * @member {Number} err
 */
Investigation.prototype['err'] = undefined;

/**
 * @member {String} errQualifier
 */
Investigation.prototype['errQualifier'] = undefined;

/**
 * @member {String} guidance
 */
Investigation.prototype['guidance'] = undefined;

/**
 * @member {String} investigation
 */
Investigation.prototype['investigation'] = undefined;

/**
 * @member {String} loQualifier
 */
Investigation.prototype['loQualifier'] = undefined;

/**
 * @member {Number} loValue
 */
Investigation.prototype['loValue'] = undefined;

/**
 * @member {String} name
 */
Investigation.prototype['name'] = undefined;

/**
 * @member {String} owner_name
 */
Investigation.prototype['owner_name'] = undefined;

/**
 * @member {String} publicname
 */
Investigation.prototype['publicname'] = undefined;

/**
 * @member {String} reference
 */
Investigation.prototype['reference'] = undefined;

/**
 * @member {String} reference_owner
 */
Investigation.prototype['reference_owner'] = undefined;

/**
 * @member {String} reference_year
 */
Investigation.prototype['reference_year'] = undefined;

/**
 * @member {String} resulttype
 */
Investigation.prototype['resulttype'] = undefined;

/**
 * @member {String} s_uuid
 */
Investigation.prototype['s_uuid'] = undefined;

/**
 * @member {String} studyResultType
 */
Investigation.prototype['studyResultType'] = undefined;

/**
 * @member {String} substanceType
 */
Investigation.prototype['substanceType'] = undefined;

/**
 * @member {String} textValue
 */
Investigation.prototype['textValue'] = undefined;

/**
 * @member {String} topcategory
 */
Investigation.prototype['topcategory'] = undefined;

/**
 * @member {String} type_s
 */
Investigation.prototype['type_s'] = undefined;

/**
 * @member {String} unit
 */
Investigation.prototype['unit'] = undefined;

/**
 * @member {String} upQualifier
 */
Investigation.prototype['upQualifier'] = undefined;

/**
 * @member {Number} upValue
 */
Investigation.prototype['upValue'] = undefined;

/**
 * @member {String} updated
 */
Investigation.prototype['updated'] = undefined;






export default Investigation;

