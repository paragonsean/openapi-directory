/**
 * Browshot API
 * Take screenshots of any website in real time
 *
 * The version of the OpenAPI document: 1.17.0
 * Contact: support@browshot.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBatch.h
 *
 * 
 */

#ifndef OAIBatch_H
#define OAIBatch_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBatch : public OAIObject {
public:
    OAIBatch();
    OAIBatch(QString json);
    ~OAIBatch() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    qint32 getFailed() const;
    void setFailed(const qint32 &failed);
    bool is_failed_Set() const;
    bool is_failed_Valid() const;

    qint32 getFinished() const;
    void setFinished(const qint32 &finished);
    bool is_finished_Set() const;
    bool is_finished_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getProcessed() const;
    void setProcessed(const qint32 &processed);
    bool is_processed_Set() const;
    bool is_processed_Valid() const;

    qint32 getStarted() const;
    void setStarted(const qint32 &started);
    bool is_started_Set() const;
    bool is_started_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<QString> getUrls() const;
    void setUrls(const QList<QString> &urls);
    bool is_urls_Set() const;
    bool is_urls_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    qint32 m_failed;
    bool m_failed_isSet;
    bool m_failed_isValid;

    qint32 m_finished;
    bool m_finished_isSet;
    bool m_finished_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_processed;
    bool m_processed_isSet;
    bool m_processed_isValid;

    qint32 m_started;
    bool m_started_isSet;
    bool m_started_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<QString> m_urls;
    bool m_urls_isSet;
    bool m_urls_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBatch)

#endif // OAIBatch_H
