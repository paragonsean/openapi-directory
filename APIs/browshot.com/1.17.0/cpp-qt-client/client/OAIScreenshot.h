/**
 * Browshot API
 * Take screenshots of any website in real time
 *
 * The version of the OpenAPI document: 1.17.0
 * Contact: support@browshot.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScreenshot.h
 *
 * 
 */

#ifndef OAIScreenshot_H
#define OAIScreenshot_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIScreenshot : public OAIObject {
public:
    OAIScreenshot();
    OAIScreenshot(QString json);
    ~OAIScreenshot() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCookie() const;
    void setCookie(const QString &cookie);
    bool is_cookie_Set() const;
    bool is_cookie_Valid() const;

    qint32 getCost() const;
    void setCost(const qint32 &cost);
    bool is_cost_Set() const;
    bool is_cost_Valid() const;

    qint32 getDelay() const;
    void setDelay(const qint32 &delay);
    bool is_delay_Set() const;
    bool is_delay_Valid() const;

    qint32 getDetails() const;
    void setDetails(const qint32 &details);
    bool is_details_Set() const;
    bool is_details_Valid() const;

    QString getError() const;
    void setError(const QString &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QString getFinalUrl() const;
    void setFinalUrl(const QString &final_url);
    bool is_final_url_Set() const;
    bool is_final_url_Valid() const;

    qint32 getFlashDelay() const;
    void setFlashDelay(const qint32 &flash_delay);
    bool is_flash_delay_Set() const;
    bool is_flash_delay_Valid() const;

    qint32 getHeight() const;
    void setHeight(const qint32 &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getInstanceId() const;
    void setInstanceId(const qint32 &instance_id);
    bool is_instance_id_Set() const;
    bool is_instance_id_Valid() const;

    QString getPostData() const;
    void setPostData(const QString &post_data);
    bool is_post_data_Set() const;
    bool is_post_data_Valid() const;

    qint32 getPriority() const;
    void setPriority(const qint32 &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QString getReferer() const;
    void setReferer(const QString &referer);
    bool is_referer_Set() const;
    bool is_referer_Valid() const;

    double getScale() const;
    void setScale(const double &scale);
    bool is_scale_Set() const;
    bool is_scale_Valid() const;

    OAIObject getScreenshotUrl() const;
    void setScreenshotUrl(const OAIObject &screenshot_url);
    bool is_screenshot_url_Set() const;
    bool is_screenshot_url_Valid() const;

    QString getScript() const;
    void setScript(const QString &script);
    bool is_script_Set() const;
    bool is_script_Valid() const;

    QString getSharedUrl() const;
    void setSharedUrl(const QString &shared_url);
    bool is_shared_url_Set() const;
    bool is_shared_url_Valid() const;

    QString getSize() const;
    void setSize(const QString &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    qint32 getWidth() const;
    void setWidth(const qint32 &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cookie;
    bool m_cookie_isSet;
    bool m_cookie_isValid;

    qint32 m_cost;
    bool m_cost_isSet;
    bool m_cost_isValid;

    qint32 m_delay;
    bool m_delay_isSet;
    bool m_delay_isValid;

    qint32 m_details;
    bool m_details_isSet;
    bool m_details_isValid;

    QString m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QString m_final_url;
    bool m_final_url_isSet;
    bool m_final_url_isValid;

    qint32 m_flash_delay;
    bool m_flash_delay_isSet;
    bool m_flash_delay_isValid;

    qint32 m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_instance_id;
    bool m_instance_id_isSet;
    bool m_instance_id_isValid;

    QString m_post_data;
    bool m_post_data_isSet;
    bool m_post_data_isValid;

    qint32 m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QString m_referer;
    bool m_referer_isSet;
    bool m_referer_isValid;

    double m_scale;
    bool m_scale_isSet;
    bool m_scale_isValid;

    OAIObject m_screenshot_url;
    bool m_screenshot_url_isSet;
    bool m_screenshot_url_isValid;

    QString m_script;
    bool m_script_isSet;
    bool m_script_isValid;

    QString m_shared_url;
    bool m_shared_url_isSet;
    bool m_shared_url_isValid;

    QString m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    qint32 m_width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScreenshot)

#endif // OAIScreenshot_H
