/*
 * Browshot API
 * Take screenshots of any website in real time
 *
 * The version of the OpenAPI document: 1.17.0
 * Contact: support@browshot.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Screenshot;
import org.openapitools.client.model.ScreenshotError;
import org.openapitools.client.model.ScreenshotHost;
import org.openapitools.client.model.ScreenshotInfoError;
import org.openapitools.client.model.ScreenshotList;
import org.openapitools.client.model.ScreenshotShort;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ScreenshotApi
 */
@Disabled
public class ScreenshotApiTest {

    private final ScreenshotApi api = new ScreenshotApi();

    /**
     * Request multiple screenshots
     *
     * Request multiple screenshots in one API call. The API call accepts all the parameters supported by screenshot/create. You can specify up to 10 URLs and 10 instances for a total of 100 screenshots in one API call. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createMultipleScreenshotsTest() throws ApiException {
        String url = null;
        Integer instanceId = null;
        String size = null;
        Integer cache = null;
        Integer delay = null;
        Integer flashDelay = null;
        Integer screenWidth = null;
        Integer screenHeight = null;
        Integer priority = null;
        String referer = null;
        String postData = null;
        String cookie = null;
        String script = null;
        Integer details = null;
        Integer html = null;
        Integer maxWait = null;
        String headers = null;
        String hosting = null;
        Integer hostingHeight = null;
        Integer hostingWidth = null;
        Float hostingScale = null;
        String hostingBucket = null;
        String hostingFile = null;
        String hostingHeaders = null;
        ScreenshotList response = api.createMultipleScreenshots(url, instanceId, size, cache, delay, flashDelay, screenWidth, screenHeight, priority, referer, postData, cookie, script, details, html, maxWait, headers, hosting, hostingHeight, hostingWidth, hostingScale, hostingBucket, hostingFile, hostingHeaders);
        // TODO: test validations
    }

    /**
     * Request a screenshot
     *
     * Screenshots requests to private and shared instances require a positive balance.  *IMPORTANT*: Remember that you can only do 100 free screenshots per month. To used a premium instance, use instance_id&#x3D;65 for example. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createScreenshotTest() throws ApiException {
        String url = null;
        Integer instanceId = null;
        String size = null;
        Integer cache = null;
        Integer delay = null;
        Integer flashDelay = null;
        Integer screenWidth = null;
        Integer screenHeight = null;
        Integer priority = null;
        String referer = null;
        String postData = null;
        String cookie = null;
        String script = null;
        Integer details = null;
        Integer html = null;
        Integer maxWait = null;
        String headers = null;
        Integer shots = null;
        Integer shotInterval = null;
        String hosting = null;
        Integer hostingHeight = null;
        Integer hostingWidth = null;
        Float hostingScale = null;
        String hostingBucket = null;
        String hostingFile = null;
        String hostingHeaders = null;
        Screenshot response = api.createScreenshot(url, instanceId, size, cache, delay, flashDelay, screenWidth, screenHeight, priority, referer, postData, cookie, script, details, html, maxWait, headers, shots, shotInterval, hosting, hostingHeight, hostingWidth, hostingScale, hostingBucket, hostingFile, hostingHeaders);
        // TODO: test validations
    }

    /**
     * Delete screenshot data
     *
     * You can delete details of your screenshots to remove any confidential information. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteScreenshotTest() throws ApiException {
        Integer id = null;
        String data = null;
        List<ScreenshotShort> response = api.deleteScreenshot(id, data);
        // TODO: test validations
    }

    /**
     * Get the HTML code
     *
     * Retrieve the HTML code of the rendered page. This API call should be used when html&#x3D;1 was specified in the screenshot request. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getHTMLTest() throws ApiException {
        Integer id = null;
        api.getHTML(id);
        // TODO: test validations
    }

    /**
     * Get information about screenshots
     *
     * Get information about the last 100 screenshots requested.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMultipleScreenshotsInfoTest() throws ApiException {
        Integer limit = null;
        String status = null;
        List<ScreenshotList> response = api.getMultipleScreenshotsInfo(limit, status);
        // TODO: test validations
    }

    /**
     * Query screenshot status
     *
     * Once a screenshot has been requested, its status must be checked until it is either \&quot;error\&quot; or \&quot;finished\&quot;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getScreenshotInfoTest() throws ApiException {
        Integer id = null;
        Integer details = null;
        List<Screenshot> response = api.getScreenshotInfo(id, details);
        // TODO: test validations
    }

    /**
     * Retrieve a thumbnail image
     *
     * Unlike the other API calls, this API sends back the thumbnail as a PNG file, not JSON. The HTTP response code indicates whether the screenshot was successful (200), or incomplete (404) or failed (404). If the screenshot failed or is not finished, a default image \&quot;Not found\&quot; is sent.  You can crop your screenshots. The crop is done first, then the thumbnail. You can take a 1024x768 screenshot, crop it to 768x768, and get it scaled down to 300x300. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getThumbnailTest() throws ApiException {
        Integer id = null;
        Integer width = null;
        Integer height = null;
        Double scale = null;
        Integer zoom = null;
        String ratio = null;
        Integer left = null;
        Integer right = null;
        Integer top = null;
        Integer bottom = null;
        String format = null;
        Integer shot = null;
        Integer quality = null;
        api.getThumbnail(id, width, height, scale, zoom, ratio, left, right, top, bottom, format, shot, quality);
        // TODO: test validations
    }

    /**
     * Host thumbnails on your own S3 account or on Browshot.
     *
     * You can host screenshots and thumbnails on your own S3 account or on Browshot.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void hostScreenshotTest() throws ApiException {
        Integer id = null;
        String hosting = null;
        Integer width = null;
        Integer height = null;
        Double scale = null;
        String bucket = null;
        String _file = null;
        String headers = null;
        List<ScreenshotHost> response = api.hostScreenshot(id, hosting, width, height, scale, bucket, _file, headers);
        // TODO: test validations
    }

    /**
     * Search for screenshots
     *
     * Search for screenshots of a specific URL.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchScreenshotTest() throws ApiException {
        String url = null;
        Integer limit = null;
        String status = null;
        List<ScreenshotList> response = api.searchScreenshot(url, limit, status);
        // TODO: test validations
    }

    /**
     * Share a screenshot
     *
     * You can make your screenshots public, add notes, and share it with your friends and colleagues. Only screenshots which are successfully completed can be shared.n the thumbnail. You can take a 1024x768 screenshot, crop it to 768x768, and get it scaled down to 300x300. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void shareScreenshotTest() throws ApiException {
        Integer id = null;
        String note = null;
        List<ScreenshotHost> response = api.shareScreenshot(id, note);
        // TODO: test validations
    }

}
