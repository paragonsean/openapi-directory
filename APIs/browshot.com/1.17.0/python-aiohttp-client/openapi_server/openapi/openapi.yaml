openapi: 3.0.1
info:
  contact:
    email: support@browshot.com
    name: API Support
    url: https://browshot.com/contact
  description: Take screenshots of any website in real time
  termsOfService: https://browshot.com/terms
  title: Browshot API
  version: 1.17.0
  x-apisguru-categories:
  - tools
  x-logo:
    url: https://cdn.browshot.com/static/images/logo.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/juliensobrier/browshot-api-spec/master/browshot.yaml
    version: "2.0"
  x-providerName: browshot.com
servers:
- url: https://api.browshot.com/api/v1
security:
- apiKeyQuery: []
paths:
  /account/info:
    get:
      description: Get information about your account.
      operationId: get_account_info
      parameters:
      - description: level of information returned
        in: query
        name: details
        schema:
          default: 1
          maximum: 3
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Account information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountError'
          description: Account not found
      summary: Get information about your account
      tags:
      - Account
      x-ms-trigger: single
      x-openapi-router-controller: openapi_server.controllers.account_controller
  /batch/ceate:
    post:
      description: |
        Get hundreds or thousands of screenshots from a text file. You can use this API call or the dashboard. Unlike the other API calls, you must issue a POST request with the Content-Type "multipart/form-data" in order to upload the text file. The text file must contain the list of URLs to request, 1 URL per line. Failed screenshots will be tried up to 3 times before giving up.
      operationId: create_batch
      parameters:
      - description: hosting option - s3 or browshot
        in: query
        name: hosting
        schema:
          enum:
          - s3
          type: string
      - description: maximum height of the thumbnail to host
        in: query
        name: hosting_height
        schema:
          maximum: 15000
          minimum: 1
          type: integer
      - description: maximum height of the thumbnail to host
        in: query
        name: hosting_width
        schema:
          maximum: 2000
          minimum: 1
          type: integer
      - description: scale of the thumbnail to host
        in: query
        name: hosting_scale
        schema:
          default: 1.0
          format: float
          type: number
      - description: S3 bucket to upload the screenshot or thumbnail (required for
          S3)
        in: query
        name: hosting_bucket
        schema:
          type: string
      - description: file name to use (for S3 only)
        in: query
        name: hosting_file
        schema:
          type: string
      - description: list of headers to add to the S3 object (for S3 only)
        in: query
        name: hosting_headers
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateBatch_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Batch'
                type: array
          description: batch information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: Batch not created
      summary: Requests thousands of screenshtos at once
      tags:
      - Batch
      x-ms-trigger: none
      x-openapi-router-controller: openapi_server.controllers.batch_controller
      x-codegen-request-body-name: body
  /batch/info:
    get:
      description: |
        Get the status of a batch requested through the API or through the dashboard.
      operationId: get_batch_info
      parameters:
      - description: batch ID
        in: query
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
          description: batch information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: Batch not found
      summary: Get the batch status
      tags:
      - Batch
      x-openapi-router-controller: openapi_server.controllers.batch_controller
  /browser/info:
    get:
      description: Get information about a browser.
      operationId: get_browser_info
      parameters:
      - description: browser ID
        in: query
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Browser'
          description: Browser information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrowserError'
          description: Browser not found
      summary: Get information about a browser
      tags:
      - Browser
      x-ms-visibility: none
      x-openapi-router-controller: openapi_server.controllers.browser_controller
  /browser/list:
    get:
      description: Get all browsers.
      operationId: get_browsers_info
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrowserList'
          description: Instance information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrowserError'
          description: Account not found
      summary: Get all browsers
      tags:
      - Browser
      x-ms-visibility: none
      x-openapi-router-controller: openapi_server.controllers.browser_controller
  /instance/info:
    get:
      description: Get information about an instance.
      operationId: get_instance_info
      parameters:
      - description: instance ID
        in: query
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
          description: Instance information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceError'
          description: Account not found
      summary: Get information about an instance
      tags:
      - Instance
      x-ms-visibility: none
      x-openapi-router-controller: openapi_server.controllers.instance_controller
  /instance/list:
    get:
      description: Get all instances.
      operationId: get_instances_info
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceList'
          description: Instance information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceError'
          description: Account not found
      summary: Get all instances
      tags:
      - Instance
      x-ms-visibility: none
      x-openapi-router-controller: openapi_server.controllers.instance_controller
  /screenshot/create:
    get:
      description: |
        Screenshots requests to private and shared instances require a positive balance.

        *IMPORTANT*: Remember that you can only do 100 free screenshots per month. To used a premium instance, use instance_id=65 for example.
      operationId: create_screenshot
      parameters:
      - description: URL of the page to get a screenshot for
        in: query
        name: url
        required: true
        schema:
          type: string
      - description: instance ID to use
        in: query
        name: instance_id
        required: true
        schema:
          type: integer
      - description: screenshot size - "screen" (default) or "page"
        in: query
        name: size
        schema:
          default: screen
          enum:
          - screen
          - page
          type: string
      - description: "use a previous screenshot (same URL, same instance) if it was\
          \ done within <cache_value> seconds. The default value is 24hours. Specify\
          \ cache=0 if you want a new screenshot."
        in: query
        name: cache
        schema:
          default: 86400
          type: integer
      - description: number of seconds to wait after the page has loaded. This is
          used to let JavaScript run longer before taking the screenshot. Use delay=0
          to take screenshots faster.
        in: query
        name: delay
        schema:
          default: 5
          maximum: 60
          minimum: 0
          type: integer
      - description: number of seconds to wait after the page has loaded if Flash
          elements are present. Use flash_delay=0 to take screenshots faster.
        in: query
        name: flash_delay
        schema:
          default: 10
          maximum: 30
          minimum: 0
          type: integer
      - description: width of the browser window. For desktop browsers only.
        in: query
        name: screen_width
        schema:
          default: 1024
          maximum: 2000
          minimum: 1
          type: integer
      - description: "height of the browser window. For desktop browsers only. (Note:\
          \ full-page screenshots can have a height of up to 15,000px)"
        in: query
        name: screen_height
        schema:
          default: 768
          maximum: 2000
          minimum: 1
          type: integer
      - description: assign priority to the screenshot (for private instances only)
        in: query
        name: priority
        schema:
          maximum: 3
          minimum: 1
          type: integer
      - description: use a custom referrer header - paid screenshots only
        in: query
        name: referer
        schema:
          type: string
      - description: "send a POST requests with post_data, useful for filling out\
          \ forms - paid screenshots only"
        in: query
        name: post_data
        schema:
          type: string
      - description: "set a cookie for the URL requested (see Custom POST Data, Referer\
          \ and Cookie) Cookies should be separated by a ; - paid screenshots only"
        in: query
        name: cookie
        schema:
          type: string
      - description: URL of javascript file to execute after the page load event
        in: query
        name: script
        schema:
          type: string
      - description: level of information available with screenshot/info
        in: query
        name: details
        schema:
          default: 2
          maximum: 3
          minimum: 1
          type: integer
      - description: saves the HTML of the rendered page which can be retrieved by
          the API call screenshot/html. This feature costs *1 credit* per screenshot.
        in: query
        name: html
        schema:
          default: 0
          maximum: 1
          minimum: 0
          type: integer
      - description: "maximum number of seconds to wait before triggering the PageLoad\
          \ event. Note that delay will still be used. (default: 0 = disabled)"
        in: query
        name: max_wait
        schema:
          default: 0
          maximum: 60
          minimum: 0
          type: integer
      - description: any custom HTTP headers. (Not supported with Internet Explorer)
        in: query
        name: headers
        schema:
          type: string
      - description: take multiple screenshots of the same page. This costs 1 additional
          credit for every 2 additional screenshots.
        in: query
        name: shots
        schema:
          default: 1
          maximum: 10
          minimum: 1
          type: integer
      - description: number of seconds between 2 screenshots
        in: query
        name: shot_interval
        schema:
          default: 5
          maximum: 10
          minimum: 1
          type: integer
      - description: hosting option - s3 or browshot
        in: query
        name: hosting
        schema:
          enum:
          - s3
          - browshot
          type: string
      - description: maximum height of the thumbnail to host
        in: query
        name: hosting_height
        schema:
          maximum: 15000
          minimum: 1
          type: integer
      - description: maximum height of the thumbnail to host
        in: query
        name: hosting_width
        schema:
          maximum: 2000
          minimum: 1
          type: integer
      - description: scale of the thumbnail to host
        in: query
        name: hosting_scale
        schema:
          default: 1.0
          format: float
          type: number
      - description: S3 bucket to upload the screenshot or thumbnail (required for
          S3)
        in: query
        name: hosting_bucket
        schema:
          type: string
      - description: file name to use (for S3 only)
        in: query
        name: hosting_file
        schema:
          type: string
      - description: list of headers to add to the S3 object (for S3 only)
        in: query
        name: hosting_headers
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Screenshot'
          description: Request accepted
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenshotError'
          description: Error
      summary: Request a screenshot
      tags:
      - Screenshot
      x-ms-trigger: none
      x-openapi-router-controller: openapi_server.controllers.screenshot_controller
  /screenshot/delete:
    get:
      description: |
        You can delete details of your screenshots to remove any confidential information.
      operationId: delete_screenshot
      parameters:
      - description: screenshot ID
        in: query
        name: id
        required: true
        schema:
          type: integer
      - description: |
          data to remove. You can specify multiple of them (separated by a ,): *image* (image files), *url* (url requested), *metadata* (time added, time finished, post data, cookie and referer used for the screenshot), *all* (all data and files)
        in: query
        name: data
        schema:
          default: image
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ScreenshotShort'
                type: array
          description: list of screenshot information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenshotError'
          description: Screenshot not found
      summary: Delete screenshot data
      tags:
      - Screenshot
      x-ms-trigger: none
      x-openapi-router-controller: openapi_server.controllers.screenshot_controller
  /screenshot/host:
    get:
      description: You can host screenshots and thumbnails on your own S3 account
        or on Browshot.
      operationId: host_screenshot
      parameters:
      - description: screenshot ID
        in: query
        name: id
        required: true
        schema:
          type: integer
      - description: "hosting option: s3 or browshot"
        in: query
        name: hosting
        required: true
        schema:
          enum:
          - s3
          - browshot
          type: string
      - description: width of the thumbnail
        in: query
        name: width
        schema:
          maximum: 2000
          minimum: 1
          type: integer
      - description: height of the thumbnail
        in: query
        name: height
        schema:
          maximum: 15000
          minimum: 1
          type: integer
      - description: scale of the thumbnail
        in: query
        name: scale
        schema:
          default: 1.0
          format: double
          type: number
      - description: S3 bucket to upload the screenshot or thumbnail - required with
          hosting=s3
        in: query
        name: bucket
        schema:
          type: string
      - description: "file name to use - optional, used with hosting=s3"
        in: query
        name: file
        schema:
          type: string
      - description: "HTTP headers to add to your S3 object - optional, used with\
          \ hosting=s3"
        in: query
        name: headers
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ScreenshotHost'
                type: array
          description: list of screenshot information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenshotInfoError'
          description: Screenshot not found
      summary: Host thumbnails on your own S3 account or on Browshot.
      tags:
      - Screenshot
      x-ms-trigger: none
      x-openapi-router-controller: openapi_server.controllers.screenshot_controller
  /screenshot/html:
    get:
      description: |
        Retrieve the HTML code of the rendered page. This API call should be used when html=1 was specified in the screenshot request.
      operationId: get_html
      parameters:
      - description: screenshot ID
        in: query
        name: id
        required: true
        schema:
          type: integer
      responses:
        default:
          content: {}
          description: HTML code
      summary: Get the HTML code
      tags:
      - Screenshot
      x-openapi-router-controller: openapi_server.controllers.screenshot_controller
  /screenshot/info:
    get:
      description: "Once a screenshot has been requested, its status must be checked\
        \ until it is either \"error\" or \"finished\"."
      operationId: get_screenshot_info
      parameters:
      - description: screenshot ID received from /api/v1/screenshot/create
        in: query
        name: id
        required: true
        schema:
          type: integer
      - description: level of details about the screenshot and the page
        in: query
        name: details
        schema:
          default: 2
          maximum: 3
          minimum: 0
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Screenshot'
                type: array
          description: Screenshot found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenshotInfoError'
          description: Screenshot not found
      summary: Query screenshot status
      tags:
      - Screenshot
      x-openapi-router-controller: openapi_server.controllers.screenshot_controller
  /screenshot/list:
    get:
      description: Get information about the last 100 screenshots requested.
      operationId: get_multiple_screenshots_info
      parameters:
      - description: maximum number of screenshots' information to return
        in: query
        name: limit
        schema:
          default: 100
          maximum: 100
          minimum: 1
          type: integer
      - description: "get list of screenshot in a given status (error, finished, in_process)"
        in: query
        name: status
        schema:
          enum:
          - error
          - finished
          - in_process
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ScreenshotList'
                type: array
          description: list of screenshot information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenshotError'
          description: Screenshot not found
      summary: Get information about screenshots
      tags:
      - Screenshot
      x-ms-visibility: none
      x-openapi-router-controller: openapi_server.controllers.screenshot_controller
  /screenshot/multiple:
    get:
      description: |
        Request multiple screenshots in one API call. The API call accepts all the parameters supported by screenshot/create.
        You can specify up to 10 URLs and 10 instances for a total of 100 screenshots in one API call.
      operationId: create_multiple_screenshots
      parameters:
      - description: URL of the page to get a screenshot for. You can specify multiple
          url parameters (up to 10).
        in: query
        name: url
        required: true
        schema:
          type: string
      - description: instance ID to use. You can specify multiple instance_id parameters
          (up to 10).
        in: query
        name: instance_id
        required: true
        schema:
          type: integer
      - description: screenshot size - "screen" (default) or "page"
        in: query
        name: size
        schema:
          default: screen
          enum:
          - screen
          - page
          type: string
      - description: "use a previous screenshot (same URL, same instance) if it was\
          \ done within <cache_value> seconds. The default value is 24hours. Specify\
          \ cache=0 if you want a new screenshot."
        in: query
        name: cache
        schema:
          default: 86400
          type: integer
      - description: number of seconds to wait after the page has loaded. This is
          used to let JavaScript run longer before taking the screenshot. Use delay=0
          to take screenshots faster.
        in: query
        name: delay
        schema:
          default: 5
          maximum: 60
          minimum: 0
          type: integer
      - description: number of seconds to wait after the page has loaded if Flash
          elements are present. Use flash_delay=0 to take screenshots faster.
        in: query
        name: flash_delay
        schema:
          default: 10
          maximum: 30
          minimum: 0
          type: integer
      - description: width of the browser window. For desktop browsers only.
        in: query
        name: screen_width
        schema:
          default: 1024
          maximum: 2000
          minimum: 1
          type: integer
      - description: "height of the browser window. For desktop browsers only. (Note:\
          \ full-page screenshots can have a height of up to 15,000px)"
        in: query
        name: screen_height
        schema:
          default: 768
          maximum: 2000
          minimum: 1
          type: integer
      - description: assign priority to the screenshot (for private instances only)
        in: query
        name: priority
        schema:
          maximum: 3
          minimum: 1
          type: integer
      - description: use a custom referrer header - paid screenshots only
        in: query
        name: referer
        schema:
          type: string
      - description: "send a POST requests with post_data, useful for filling out\
          \ forms - paid screenshots only"
        in: query
        name: post_data
        schema:
          type: string
      - description: "set a cookie for the URL requested (see Custom POST Data, Referer\
          \ and Cookie) Cookies should be separated by a ; - paid screenshots only"
        in: query
        name: cookie
        schema:
          type: string
      - description: URL of javascript file to execute after the page load event
        in: query
        name: script
        schema:
          type: string
      - description: level of information available with screenshot/info
        in: query
        name: details
        schema:
          default: 2
          maximum: 3
          minimum: 1
          type: integer
      - description: saves the HTML of the rendered page which can be retrieved by
          the API call screenshot/html. This feature costs *1 credit* per screenshot.
        in: query
        name: html
        schema:
          default: 0
          maximum: 1
          minimum: 0
          type: integer
      - description: "maximum number of seconds to wait before triggering the PageLoad\
          \ event. Note that delay will still be used. (default: 0 = disabled)"
        in: query
        name: max_wait
        schema:
          default: 0
          maximum: 60
          minimum: 0
          type: integer
      - description: any custom HTTP headers. (Not supported with Internet Explorer)
        in: query
        name: headers
        schema:
          type: string
      - description: hosting option - s3 or browshot
        in: query
        name: hosting
        schema:
          enum:
          - s3
          - browshot
          type: string
      - description: maximum height of the thumbnail to host
        in: query
        name: hosting_height
        schema:
          maximum: 15000
          minimum: 1
          type: integer
      - description: maximum height of the thumbnail to host
        in: query
        name: hosting_width
        schema:
          maximum: 2000
          minimum: 1
          type: integer
      - description: scale of the thumbnail to host
        in: query
        name: hosting_scale
        schema:
          default: 1.0
          format: float
          type: number
      - description: S3 bucket to upload the screenshot or thumbnail (required for
          S3)
        in: query
        name: hosting_bucket
        schema:
          type: string
      - description: file name to use (for S3 only)
        in: query
        name: hosting_file
        schema:
          type: string
      - description: list of headers to add to the S3 object (for S3 only)
        in: query
        name: hosting_headers
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenshotList'
          description: Request accepted
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenshotError'
          description: Error
      summary: Request multiple screenshots
      tags:
      - Screenshot
      x-ms-trigger: none
      x-openapi-router-controller: openapi_server.controllers.screenshot_controller
  /screenshot/search:
    get:
      description: Search for screenshots of a specific URL.
      operationId: search_screenshot
      parameters:
      - description: look for a string matching the URL requested
        in: query
        name: url
        required: true
        schema:
          type: string
      - description: maximum number of screenshots' information to return
        in: query
        name: limit
        schema:
          default: 50
          maximum: 100
          minimum: 1
          type: integer
      - description: "get list of screenshot in a given status (error, finished, in_process)"
        in: query
        name: status
        schema:
          enum:
          - error
          - finished
          - in_process
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ScreenshotList'
                type: array
          description: list of screenshot information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenshotError'
          description: Screenshot not found
      summary: Search for screenshots
      tags:
      - Screenshot
      x-ms-visibility: none
      x-openapi-router-controller: openapi_server.controllers.screenshot_controller
  /screenshot/share:
    get:
      description: |
        You can make your screenshots public, add notes, and share it with your friends and colleagues. Only screenshots which are successfully completed can be shared.n the thumbnail. You can take a 1024x768 screenshot, crop it to 768x768, and get it scaled down to 300x300.
      operationId: share_screenshot
      parameters:
      - description: screenshot ID
        in: query
        name: id
        required: true
        schema:
          type: integer
      - description: note to add on the sharing page
        in: query
        name: note
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ScreenshotHost'
                type: array
          description: list of screenshot information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenshotInfoError'
          description: Screenshot not found
      summary: Share a screenshot
      tags:
      - Screenshot
      x-ms-trigger: none
      x-openapi-router-controller: openapi_server.controllers.screenshot_controller
  /screenshot/thumbnail:
    get:
      description: |
        Unlike the other API calls, this API sends back the thumbnail as a PNG file, not JSON. The HTTP response code indicates whether the screenshot was successful (200), or incomplete (404) or failed (404). If the screenshot failed or is not finished, a default image "Not found" is sent.

        You can crop your screenshots. The crop is done first, then the thumbnail. You can take a 1024x768 screenshot, crop it to 768x768, and get it scaled down to 300x300.
      operationId: get_thumbnail
      parameters:
      - description: screenshot ID
        in: query
        name: id
        required: true
        schema:
          type: integer
      - description: width of the thumbnail
        in: query
        name: width
        schema:
          maximum: 2000
          minimum: 1
          type: integer
      - description: height of the thumbnail
        in: query
        name: height
        schema:
          maximum: 15000
          minimum: 1
          type: integer
      - description: scale of the thumbnail
        in: query
        name: scale
        schema:
          default: 1.0
          format: double
          type: number
      - description: zoom 1 to 100 percent
        in: query
        name: zoom
        schema:
          default: 100
          maximum: 100
          minimum: 1
          type: integer
      - description: "Use fit to keep the original page ration, and fill to get a\
          \ thumbnail for the exact width and height.  specified. If you provide both\
          \ width and height, you need to specify the ratio: fit to keep the original\
          \ width/height ratio (the thumbnail might be smaller than the specified\
          \ width and height), or fill to crop the image if necessary."
        in: query
        name: ratio
        schema:
          default: fit
          enum:
          - fit
          - fill
          type: string
      - description: left edge of the area to be cropped
        in: query
        name: left
        schema:
          default: 0
          minimum: 0
          type: integer
      - description: right edge of the area to be cropped
        in: query
        name: right
        schema:
          default: 0
          minimum: 0
          type: integer
      - description: top edge of the area to be cropped
        in: query
        name: top
        schema:
          default: 0
          minimum: 0
          type: integer
      - description: bottom edge of the area to be cropped
        in: query
        name: bottom
        schema:
          type: integer
      - description: image as PNG or JPEG
        in: query
        name: format
        schema:
          default: png
          enum:
          - png
          - jpeg
          type: string
      - description: get the second or third screenshot if multiple screenshots were
          requested
        in: query
        name: shot
        schema:
          default: 1
          maximum: 10
          minimum: 1
          type: integer
      - description: JPEG quality factor (for JPEG thumbnails only)
        in: query
        name: quality
        schema:
          default: 100
          maximum: 100
          minimum: 1
          type: integer
      responses:
        "200":
          content: {}
          description: thumbnail
        "404":
          content: {}
          description: Screenshot not found
      summary: Retrieve a thumbnail image
      tags:
      - Screenshot
      x-ms-trigger: none
      x-openapi-router-controller: openapi_server.controllers.screenshot_controller
components:
  schemas:
    Account:
      example:
        free_screenshots_left: 2
        balance: 0
        instances:
        - country: country
          screenshot_cost: 4
          load: 2.027123
          browser:
            mobile: 0
            name: name
            id: 1
            javascript: 0
            flash: 0
          width: 7
          id: 3
          type: public
          height: 9
        - country: country
          screenshot_cost: 4
          load: 2.027123
          browser:
            mobile: 0
            name: name
            id: 1
            javascript: 0
            flash: 0
          width: 7
          id: 3
          type: public
          height: 9
        hosting_browshot: 0
        private_instances: 0
        browsers:
        - mobile: 0
          name: name
          id: 1
          javascript: 0
          flash: 0
        - mobile: 0
          name: name
          id: 1
          javascript: 0
          flash: 0
        screenshots:
        - referer: referer
          cost: 1
          cookie: cookie
          scale: 9.369310271410669
          error: error
          priority: 2
          script: script
          url: url
          flash_delay: 7
          post_data: post_data
          delay: 1
          instance_id: 5
          final_url: final_url
          size: screen
          width: 6
          details: 2
          id: 4
          screenshot_url: "{}"
          height: 1
          shared_url: shared_url
          status: in_queue
        - referer: referer
          cost: 1
          cookie: cookie
          scale: 9.369310271410669
          error: error
          priority: 2
          script: script
          url: url
          flash_delay: 7
          post_data: post_data
          delay: 1
          instance_id: 5
          final_url: final_url
          size: screen
          width: 6
          details: 2
          id: 4
          screenshot_url: "{}"
          height: 1
          shared_url: shared_url
          status: in_queue
      properties:
        balance:
          description: number of credits left on your account
          title: balance
          type: integer
        browsers:
          description: list of custom browsers as returned by /api/v1/browser/list
          items:
            $ref: '#/components/schemas/Browser'
          title: browsers
          type: array
        free_screenshots_left:
          description: number of free screenshots available for the current month
          title: free_screenshots_left
          type: integer
        hosting_browshot:
          description: "1 is your account is authorized to request hosting on Browshot,\
            \ 0 otherwise (default)"
          maximum: 1
          minimum: 0
          title: hosting_browshot
          type: integer
        instances:
          description: list of private instances as returned by /api/v1/instance/list
          items:
            $ref: '#/components/schemas/Instance'
          title: instances
          type: array
        private_instances:
          description: "1 is your account is authorized to create and use private\
            \ instances, 0 otherwise (default)"
          maximum: 1
          minimum: 0
          title: private_instances
          type: integer
        screenshots:
          description: list of 10 latest screenshots requests as returned by /api/v1/screenshot/list
          items:
            $ref: '#/components/schemas/Screenshot'
          title: screenshots
          type: array
      required:
      - balance
      - free_screenshots_left
      - hosting_browshot
      - private_instances
      title: Account
      type: object
    AccountError:
      example:
        error: error
        status: status
      properties:
        error:
          description: description of the problem that occurred
          title: error
          type: string
        status:
          description: status of the request - error
          title: status
          type: string
      title: AccountError
      type: object
    Batch:
      example:
        processed: 5
        urls:
        - urls
        - urls
        count: 0
        finished: 1
        started: 2
        failed: 6
        id: 5
        status: in_queue
      properties:
        count:
          description: number of unique URLs in the batch
          title: count
          type: integer
        failed:
          description: number of screenshots failed
          title: failed
          type: integer
        finished:
          description: time of batch completed (UNIX timestamp)
          title: finished
          type: integer
        id:
          description: batch ID
          title: id
          type: integer
        processed:
          description: number of screenshots finishe
          title: processed
          type: integer
        started:
          description: time of processing (UNIX timestamp)
          title: started
          type: integer
        status:
          description: "status of the request - \"in_queue\", \"processing\", \"finished\"\
            , \"error\""
          enum:
          - in_queue
          - processing
          - finished
          - error
          title: status
          type: string
        urls:
          description: URLs to download the batch
          items:
            type: string
          title: urls
          type: array
      title: Batch
      type: object
    BatchError:
      example:
        error: error
        status: status
      properties:
        error:
          description: description of the problem that occurred
          title: error
          type: string
        status:
          description: "status of the request - \"in_queue\", \"processing\", \"finished\"\
            , \"error\""
          title: status
          type: string
      title: BatchError
      type: object
    Browser:
      example:
        mobile: 0
        name: name
        id: 1
        javascript: 0
        flash: 0
      properties:
        flash:
          description: "Flash support: 1 if enabled, 0 if disabled"
          maximum: 1
          minimum: 0
          title: flash
          type: integer
        id:
          description: browser ID
          title: id
          type: integer
        javascript:
          description: "JavaScript support: 1 if enabled, 0 if disabled"
          maximum: 1
          minimum: 0
          title: javascript
          type: integer
        mobile:
          description: "Mobile browser: 1 if true, 0 if false"
          maximum: 1
          minimum: 0
          title: mobile
          type: integer
        name:
          description: "browser name and version: Firefox 45, etc."
          title: name
          type: string
      title: Browser
      type: object
    BrowserError:
      example:
        error: error
        status: status
      properties:
        error:
          description: description of the problem that occurred
          title: error
          type: string
        status:
          description: status of the request - error
          title: status
          type: string
      title: BrowserError
      type: object
    BrowserList:
      additionalProperties:
        $ref: '#/components/schemas/Browser'
      example:
        default: 0
      properties:
        default:
          type: integer
      title: BrowserList
      type: object
    Instance:
      example:
        country: country
        screenshot_cost: 4
        load: 2.027123
        browser:
          mobile: 0
          name: name
          id: 1
          javascript: 0
          flash: 0
        width: 7
        id: 3
        type: public
        height: 9
      properties:
        browser:
          $ref: '#/components/schemas/Browser'
        country:
          description: instance's country of origin
          title: country
          type: string
        height:
          description: screen height in pixels
          title: height
          type: integer
        id:
          description: instance ID (required to requests screenshots)
          title: id
          type: integer
        load:
          description: "instance load: \n< 1: new screenshot requests will be processed\
            \ immediately, \n1-2: new screenshot requests will be processed in about\
            \ two minutes, \n2-3: new screenshot requests will be processed in about\
            \ four minutes, \n3-4: new screenshot requests will be processed in about\
            \ six minutes, \netc.\n"
          format: float
          title: load
          type: number
        screenshot_cost:
          description: number of credits for each screenshot
          title: screenshot_cost
          type: integer
        type:
          description: "public, shared or private"
          enum:
          - public
          - shared
          - private
          title: type
          type: string
        width:
          description: screen width in pixels
          title: width
          type: integer
      title: Instance
      type: object
    InstanceError:
      example:
        error: error
        status: status
      properties:
        error:
          description: description of the problem that occurred
          title: error
          type: string
        status:
          description: status of the request - error
          title: status
          type: string
      title: InstanceError
      type: object
    InstanceList:
      example:
        shared:
        - country: country
          screenshot_cost: 4
          load: 2.027123
          browser:
            mobile: 0
            name: name
            id: 1
            javascript: 0
            flash: 0
          width: 7
          id: 3
          type: public
          height: 9
        - country: country
          screenshot_cost: 4
          load: 2.027123
          browser:
            mobile: 0
            name: name
            id: 1
            javascript: 0
            flash: 0
          width: 7
          id: 3
          type: public
          height: 9
        private:
        - country: country
          screenshot_cost: 4
          load: 2.027123
          browser:
            mobile: 0
            name: name
            id: 1
            javascript: 0
            flash: 0
          width: 7
          id: 3
          type: public
          height: 9
        - country: country
          screenshot_cost: 4
          load: 2.027123
          browser:
            mobile: 0
            name: name
            id: 1
            javascript: 0
            flash: 0
          width: 7
          id: 3
          type: public
          height: 9
        free:
        - country: country
          screenshot_cost: 4
          load: 2.027123
          browser:
            mobile: 0
            name: name
            id: 1
            javascript: 0
            flash: 0
          width: 7
          id: 3
          type: public
          height: 9
        - country: country
          screenshot_cost: 4
          load: 2.027123
          browser:
            mobile: 0
            name: name
            id: 1
            javascript: 0
            flash: 0
          width: 7
          id: 3
          type: public
          height: 9
      properties:
        free:
          items:
            $ref: '#/components/schemas/Instance'
          title: free
          type: array
        private:
          items:
            $ref: '#/components/schemas/Instance'
          title: private
          type: array
        shared:
          items:
            $ref: '#/components/schemas/Instance'
          title: shared
          type: array
      title: InstanceList
      type: object
    Screenshot:
      example:
        referer: referer
        cost: 1
        cookie: cookie
        scale: 9.369310271410669
        error: error
        priority: 2
        script: script
        url: url
        flash_delay: 7
        post_data: post_data
        delay: 1
        instance_id: 5
        final_url: final_url
        size: screen
        width: 6
        details: 2
        id: 4
        screenshot_url: "{}"
        height: 1
        shared_url: shared_url
        status: in_queue
      properties:
        cookie:
          description: "custom cookie used (see Custom POST Data, Referer and Cookie)"
          title: cookie
          type: string
        cost:
          description: number of credits spent for the screenshot
          title: cost
          type: integer
        delay:
          description: number of seconds to wait after page load
          title: delay
          type: integer
        details:
          description: level of details about the screenshot and the page
          maximum: 3
          minimum: 0
          title: details
          type: integer
        error:
          description: description of the problem that occurred
          title: error
          type: string
        final_url:
          description: URL of the screenshot (redirections can occur)
          title: final_url
          type: string
        flash_delay:
          description: number of seconds to wait after page load if Flash elements
            are present
          title: flash_delay
          type: integer
        height:
          description: screenshot height
          title: height
          type: integer
        id:
          description: screenshot ID
          title: id
          type: integer
        instance_id:
          description: instance ID used for the screenshot
          title: instance_id
          type: integer
        post_data:
          description: "POST data sent (see Custom POST Data, Referer and Cookie)"
          title: post_data
          type: string
        priority:
          description: "priority given to the screenshot: high (1) to low (3)"
          maximum: 3
          minimum: 1
          title: priority
          type: integer
        referer:
          description: "custom referrer used (see Custom POST Data, Referer and Cookie)"
          title: referer
          type: string
        scale:
          description: image scale. Always 1 for desktop browsers; mobiles may change
            the scale (zoom in or zoom out) to fit the page on the screen
          format: double
          title: scale
          type: number
        screenshot_url:
          description: URL to download the screenshot
          format: string
          title: screenshot_url
          type: object
        script:
          description: URL of optional javascript file executed after the page load
            event
          title: script
          type: string
        shared_url:
          description: "if the screenshot was shared, show the public URL"
          title: shared_url
          type: string
        size:
          description: screenshot size requested
          enum:
          - screen
          - page
          title: size
          type: string
        status:
          description: |
            status of the request: "in_queue", "processing", "finished", "error"
          enum:
          - in_queue
          - processing
          - finished
          - error
          title: status
          type: string
        url:
          description: original URL requested
          title: url
          type: string
        width:
          description: screenshot width
          title: width
          type: integer
      required:
      - id
      - instance_id
      - status
      - url
      title: Screenshot
      type: object
    ScreenshotError:
      example:
        cost: 0.8008281904610115
        error: error
        priority: 6.027456183070403
        status: status
      properties:
        cost:
          description: number of credits taken
          title: cost
          type: number
        error:
          description: description of the problem that occurred
          title: error
          type: string
        priority:
          description: priority given to the screenshot - high (1) to low (3)
          title: priority
          type: number
        status:
          description: "status of the request - \"in_queue\", \"processing\", \"finished\"\
            , \"error\""
          title: status
          type: string
      title: ScreenshotError
      type: object
    ScreenshotHost:
      example:
        id: 0
        url: url
        status: error
      properties:
        id:
          description: screenshot ID
          title: id
          type: integer
        status:
          description: |
            status of the request: "error", "ok" or "in_queue"
          enum:
          - error
          - ok
          - in_queue
          title: status
          type: string
        url:
          description: URL to the hosted screenshot or thumbnail
          title: url
          type: string
      title: ScreenshotHost
      type: object
    ScreenshotInfoError:
      example:
        id: 6
        error: error
        status: status
      properties:
        error:
          description: description of the problem that occurred
          title: error
          type: string
        id:
          description: screenshot ID
          title: id
          type: integer
        status:
          description: "status of the request - \"in_queue\", \"processing\", \"finished\"\
            , \"error\""
          title: status
          type: string
      title: ScreenshotInfoError
      type: object
    ScreenshotList:
      additionalProperties:
        $ref: '#/components/schemas/Screenshot'
      example:
        default: 0.8008281904610115
      properties:
        default:
          type: number
      title: ScreenshotList
      type: object
    ScreenshotShort:
      example:
        id: 0
        status: ok
      properties:
        id:
          description: screenshot ID
          title: id
          type: integer
        status:
          description: |
            status of the request
          enum:
          - ok
          - error
          title: status
          type: string
      title: ScreenshotShort
      type: object
    CreateBatch_request:
      properties:
        instance_id:
          description: instance ID to use
          format: int32
          type: integer
        file:
          description: text file to use
          format: binary
          type: string
        size:
          default: screen
          description: screenshots size - "screen" (default) or "page"
          enum:
          - screen
          - page
          type: string
        name:
          description: name of the batch
          type: string
        width:
          default: 1024
          description: thumbnail width.
          format: int32
          maximum: 2000
          minimum: 1
          type: integer
        height:
          description: thumbnail height
          format: int32
          maximum: 15000
          minimum: 1
          type: integer
        delay:
          default: 5
          description: number of seconds to wait after the page has loaded. This is
            used to let JavaScript run longer before taking the screenshot. Use delay=0
            to take screenshots faster.
          format: int32
          maximum: 60
          minimum: 0
          type: integer
        flash_delay:
          default: 10
          description: number of seconds to wait after the page has loaded if Flash
            elements are present. Use flash_delay=0 to take screenshots faster.
          format: int32
          maximum: 30
          minimum: 0
          type: integer
        screen_width:
          default: 1024
          description: width of the browser window. For desktop browsers only.
          format: int32
          maximum: 2000
          minimum: 1
          type: integer
        screen_height:
          default: 768
          description: "height of the browser window. For desktop browsers only. (Note:\
            \ full-page screenshots can have a height of up to 15,000px)"
          format: int32
          maximum: 2000
          minimum: 1
          type: integer
        priority:
          description: assign priority to the screenshot (for private instances only)
          format: int32
          maximum: 3
          minimum: 1
          type: integer
        referer:
          description: use a custom referrer header - paid screenshots only
          type: string
        post_data:
          description: "send a POST requests with post_data, useful for filling out\
            \ forms - paid screenshots only"
          type: string
        cookie:
          description: "set a cookie for the URL requested (see Custom POST Data,\
            \ Referer and Cookie) Cookies should be separated by a ; - paid screenshots\
            \ only"
          type: string
        script:
          description: URL of javascript file to execute after the page load event
          type: string
        details:
          default: 2
          description: level of information available with screenshot/info
          format: int32
          maximum: 3
          minimum: 1
          type: integer
        html:
          default: 0
          description: saves the HTML of the rendered page which can be retrieved
            by the API call screenshot/html. This feature costs *1 credit* per screenshot.
          format: int32
          maximum: 1
          minimum: 0
          type: integer
        max_wait:
          default: 0
          description: "maximum number of seconds to wait before triggering the PageLoad\
            \ event. Note that delay will still be used. (default: 0 = disabled)"
          format: int32
          maximum: 60
          minimum: 0
          type: integer
        headers:
          description: any custom HTTP headers. (Not supported with Internet Explorer)
          type: string
        format:
          default: png
          description: image as PNG or JPEG
          enum:
          - png
          - jpeg
          type: string
      required:
      - instance_id
      type: object
  securitySchemes:
    apiKeyQuery:
      in: query
      name: key
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_apiKeyQuery
x-original-swagger-version: "2.0"
