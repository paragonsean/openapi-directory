/**
 * Browshot API
 * Take screenshots of any website in real time
 *
 * The version of the OpenAPI document: 1.17.0
 * Contact: support@browshot.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BrowshotApi);
  }
}(this, function(expect, BrowshotApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BrowshotApi.Screenshot();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Screenshot', function() {
    it('should create an instance of Screenshot', function() {
      // uncomment below and update the code to test Screenshot
      //var instance = new BrowshotApi.Screenshot();
      //expect(instance).to.be.a(BrowshotApi.Screenshot);
    });

    it('should have the property cookie (base name: "cookie")', function() {
      // uncomment below and update the code to test the property cookie
      //var instance = new BrowshotApi.Screenshot();
      //expect(instance).to.be();
    });

    it('should have the property cost (base name: "cost")', function() {
      // uncomment below and update the code to test the property cost
      //var instance = new BrowshotApi.Screenshot();
      //expect(instance).to.be();
    });

    it('should have the property delay (base name: "delay")', function() {
      // uncomment below and update the code to test the property delay
      //var instance = new BrowshotApi.Screenshot();
      //expect(instance).to.be();
    });

    it('should have the property details (base name: "details")', function() {
      // uncomment below and update the code to test the property details
      //var instance = new BrowshotApi.Screenshot();
      //expect(instance).to.be();
    });

    it('should have the property error (base name: "error")', function() {
      // uncomment below and update the code to test the property error
      //var instance = new BrowshotApi.Screenshot();
      //expect(instance).to.be();
    });

    it('should have the property finalUrl (base name: "final_url")', function() {
      // uncomment below and update the code to test the property finalUrl
      //var instance = new BrowshotApi.Screenshot();
      //expect(instance).to.be();
    });

    it('should have the property flashDelay (base name: "flash_delay")', function() {
      // uncomment below and update the code to test the property flashDelay
      //var instance = new BrowshotApi.Screenshot();
      //expect(instance).to.be();
    });

    it('should have the property height (base name: "height")', function() {
      // uncomment below and update the code to test the property height
      //var instance = new BrowshotApi.Screenshot();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new BrowshotApi.Screenshot();
      //expect(instance).to.be();
    });

    it('should have the property instanceId (base name: "instance_id")', function() {
      // uncomment below and update the code to test the property instanceId
      //var instance = new BrowshotApi.Screenshot();
      //expect(instance).to.be();
    });

    it('should have the property postData (base name: "post_data")', function() {
      // uncomment below and update the code to test the property postData
      //var instance = new BrowshotApi.Screenshot();
      //expect(instance).to.be();
    });

    it('should have the property priority (base name: "priority")', function() {
      // uncomment below and update the code to test the property priority
      //var instance = new BrowshotApi.Screenshot();
      //expect(instance).to.be();
    });

    it('should have the property referer (base name: "referer")', function() {
      // uncomment below and update the code to test the property referer
      //var instance = new BrowshotApi.Screenshot();
      //expect(instance).to.be();
    });

    it('should have the property scale (base name: "scale")', function() {
      // uncomment below and update the code to test the property scale
      //var instance = new BrowshotApi.Screenshot();
      //expect(instance).to.be();
    });

    it('should have the property screenshotUrl (base name: "screenshot_url")', function() {
      // uncomment below and update the code to test the property screenshotUrl
      //var instance = new BrowshotApi.Screenshot();
      //expect(instance).to.be();
    });

    it('should have the property script (base name: "script")', function() {
      // uncomment below and update the code to test the property script
      //var instance = new BrowshotApi.Screenshot();
      //expect(instance).to.be();
    });

    it('should have the property sharedUrl (base name: "shared_url")', function() {
      // uncomment below and update the code to test the property sharedUrl
      //var instance = new BrowshotApi.Screenshot();
      //expect(instance).to.be();
    });

    it('should have the property size (base name: "size")', function() {
      // uncomment below and update the code to test the property size
      //var instance = new BrowshotApi.Screenshot();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new BrowshotApi.Screenshot();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new BrowshotApi.Screenshot();
      //expect(instance).to.be();
    });

    it('should have the property width (base name: "width")', function() {
      // uncomment below and update the code to test the property width
      //var instance = new BrowshotApi.Screenshot();
      //expect(instance).to.be();
    });

  });

}));
