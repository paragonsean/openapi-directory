/**
 * Browshot API
 * Take screenshots of any website in real time
 *
 * The version of the OpenAPI document: 1.17.0
 * Contact: support@browshot.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Instance from '../model/Instance';
import InstanceError from '../model/InstanceError';
import InstanceList from '../model/InstanceList';

/**
* Instance service.
* @module api/InstanceApi
* @version 1.17.0
*/
export default class InstanceApi {

    /**
    * Constructs a new InstanceApi. 
    * @alias module:api/InstanceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getInstanceInfo operation.
     * @callback module:api/InstanceApi~getInstanceInfoCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Instance} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get information about an instance
     * Get information about an instance.
     * @param {Number} id instance ID
     * @param {module:api/InstanceApi~getInstanceInfoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Instance}
     */
    getInstanceInfo(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getInstanceInfo");
      }

      let pathParams = {
      };
      let queryParams = {
        'id': id
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKeyQuery'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Instance;
      return this.apiClient.callApi(
        '/instance/info', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getInstancesInfo operation.
     * @callback module:api/InstanceApi~getInstancesInfoCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InstanceList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all instances
     * Get all instances.
     * @param {module:api/InstanceApi~getInstancesInfoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InstanceList}
     */
    getInstancesInfo(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKeyQuery'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InstanceList;
      return this.apiClient.callApi(
        '/instance/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
