/**
 * Browshot API
 * Take screenshots of any website in real time
 *
 * The version of the OpenAPI document: 1.17.0
 * Contact: support@browshot.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Account from './model/Account';
import AccountError from './model/AccountError';
import Batch from './model/Batch';
import BatchError from './model/BatchError';
import Browser from './model/Browser';
import BrowserError from './model/BrowserError';
import BrowserList from './model/BrowserList';
import Instance from './model/Instance';
import InstanceError from './model/InstanceError';
import InstanceList from './model/InstanceList';
import Screenshot from './model/Screenshot';
import ScreenshotError from './model/ScreenshotError';
import ScreenshotHost from './model/ScreenshotHost';
import ScreenshotInfoError from './model/ScreenshotInfoError';
import ScreenshotList from './model/ScreenshotList';
import ScreenshotShort from './model/ScreenshotShort';
import AccountApi from './api/AccountApi';
import BatchApi from './api/BatchApi';
import BrowserApi from './api/BrowserApi';
import InstanceApi from './api/InstanceApi';
import ScreenshotApi from './api/ScreenshotApi';


/**
* Take screenshots of any website in real time.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var BrowshotApi = require('index'); // See note below*.
* var xxxSvc = new BrowshotApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new BrowshotApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new BrowshotApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new BrowshotApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.17.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Account model constructor.
     * @property {module:model/Account}
     */
    Account,

    /**
     * The AccountError model constructor.
     * @property {module:model/AccountError}
     */
    AccountError,

    /**
     * The Batch model constructor.
     * @property {module:model/Batch}
     */
    Batch,

    /**
     * The BatchError model constructor.
     * @property {module:model/BatchError}
     */
    BatchError,

    /**
     * The Browser model constructor.
     * @property {module:model/Browser}
     */
    Browser,

    /**
     * The BrowserError model constructor.
     * @property {module:model/BrowserError}
     */
    BrowserError,

    /**
     * The BrowserList model constructor.
     * @property {module:model/BrowserList}
     */
    BrowserList,

    /**
     * The Instance model constructor.
     * @property {module:model/Instance}
     */
    Instance,

    /**
     * The InstanceError model constructor.
     * @property {module:model/InstanceError}
     */
    InstanceError,

    /**
     * The InstanceList model constructor.
     * @property {module:model/InstanceList}
     */
    InstanceList,

    /**
     * The Screenshot model constructor.
     * @property {module:model/Screenshot}
     */
    Screenshot,

    /**
     * The ScreenshotError model constructor.
     * @property {module:model/ScreenshotError}
     */
    ScreenshotError,

    /**
     * The ScreenshotHost model constructor.
     * @property {module:model/ScreenshotHost}
     */
    ScreenshotHost,

    /**
     * The ScreenshotInfoError model constructor.
     * @property {module:model/ScreenshotInfoError}
     */
    ScreenshotInfoError,

    /**
     * The ScreenshotList model constructor.
     * @property {module:model/ScreenshotList}
     */
    ScreenshotList,

    /**
     * The ScreenshotShort model constructor.
     * @property {module:model/ScreenshotShort}
     */
    ScreenshotShort,

    /**
    * The AccountApi service constructor.
    * @property {module:api/AccountApi}
    */
    AccountApi,

    /**
    * The BatchApi service constructor.
    * @property {module:api/BatchApi}
    */
    BatchApi,

    /**
    * The BrowserApi service constructor.
    * @property {module:api/BrowserApi}
    */
    BrowserApi,

    /**
    * The InstanceApi service constructor.
    * @property {module:api/InstanceApi}
    */
    InstanceApi,

    /**
    * The ScreenshotApi service constructor.
    * @property {module:api/ScreenshotApi}
    */
    ScreenshotApi
};
