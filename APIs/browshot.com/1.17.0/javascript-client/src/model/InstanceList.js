/**
 * Browshot API
 * Take screenshots of any website in real time
 *
 * The version of the OpenAPI document: 1.17.0
 * Contact: support@browshot.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Instance from './Instance';

/**
 * The InstanceList model module.
 * @module model/InstanceList
 * @version 1.17.0
 */
class InstanceList {
    /**
     * Constructs a new <code>InstanceList</code>.
     * @alias module:model/InstanceList
     */
    constructor() { 
        
        InstanceList.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InstanceList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstanceList} obj Optional instance to populate.
     * @return {module:model/InstanceList} The populated <code>InstanceList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstanceList();

            if (data.hasOwnProperty('free')) {
                obj['free'] = ApiClient.convertToType(data['free'], [Instance]);
            }
            if (data.hasOwnProperty('private')) {
                obj['private'] = ApiClient.convertToType(data['private'], [Instance]);
            }
            if (data.hasOwnProperty('shared')) {
                obj['shared'] = ApiClient.convertToType(data['shared'], [Instance]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InstanceList</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InstanceList</code>.
     */
    static validateJSON(data) {
        if (data['free']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['free'])) {
                throw new Error("Expected the field `free` to be an array in the JSON data but got " + data['free']);
            }
            // validate the optional field `free` (array)
            for (const item of data['free']) {
                Instance.validateJSON(item);
            };
        }
        if (data['private']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['private'])) {
                throw new Error("Expected the field `private` to be an array in the JSON data but got " + data['private']);
            }
            // validate the optional field `private` (array)
            for (const item of data['private']) {
                Instance.validateJSON(item);
            };
        }
        if (data['shared']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['shared'])) {
                throw new Error("Expected the field `shared` to be an array in the JSON data but got " + data['shared']);
            }
            // validate the optional field `shared` (array)
            for (const item of data['shared']) {
                Instance.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/Instance>} free
 */
InstanceList.prototype['free'] = undefined;

/**
 * @member {Array.<module:model/Instance>} private
 */
InstanceList.prototype['private'] = undefined;

/**
 * @member {Array.<module:model/Instance>} shared
 */
InstanceList.prototype['shared'] = undefined;






export default InstanceList;

