/**
 * Browshot API
 * Take screenshots of any website in real time
 *
 * The version of the OpenAPI document: 1.17.0
 * Contact: support@browshot.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Batch model module.
 * @module model/Batch
 * @version 1.17.0
 */
class Batch {
    /**
     * Constructs a new <code>Batch</code>.
     * @alias module:model/Batch
     */
    constructor() { 
        
        Batch.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Batch</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Batch} obj Optional instance to populate.
     * @return {module:model/Batch} The populated <code>Batch</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Batch();

            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('failed')) {
                obj['failed'] = ApiClient.convertToType(data['failed'], 'Number');
            }
            if (data.hasOwnProperty('finished')) {
                obj['finished'] = ApiClient.convertToType(data['finished'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('processed')) {
                obj['processed'] = ApiClient.convertToType(data['processed'], 'Number');
            }
            if (data.hasOwnProperty('started')) {
                obj['started'] = ApiClient.convertToType(data['started'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('urls')) {
                obj['urls'] = ApiClient.convertToType(data['urls'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Batch</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Batch</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['urls'])) {
            throw new Error("Expected the field `urls` to be an array in the JSON data but got " + data['urls']);
        }

        return true;
    }


}



/**
 * number of unique URLs in the batch
 * @member {Number} count
 */
Batch.prototype['count'] = undefined;

/**
 * number of screenshots failed
 * @member {Number} failed
 */
Batch.prototype['failed'] = undefined;

/**
 * time of batch completed (UNIX timestamp)
 * @member {Number} finished
 */
Batch.prototype['finished'] = undefined;

/**
 * batch ID
 * @member {Number} id
 */
Batch.prototype['id'] = undefined;

/**
 * number of screenshots finishe
 * @member {Number} processed
 */
Batch.prototype['processed'] = undefined;

/**
 * time of processing (UNIX timestamp)
 * @member {Number} started
 */
Batch.prototype['started'] = undefined;

/**
 * status of the request - \"in_queue\", \"processing\", \"finished\", \"error\"
 * @member {module:model/Batch.StatusEnum} status
 */
Batch.prototype['status'] = undefined;

/**
 * URLs to download the batch
 * @member {Array.<String>} urls
 */
Batch.prototype['urls'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
Batch['StatusEnum'] = {

    /**
     * value: "in_queue"
     * @const
     */
    "in_queue": "in_queue",

    /**
     * value: "processing"
     * @const
     */
    "processing": "processing",

    /**
     * value: "finished"
     * @const
     */
    "finished": "finished",

    /**
     * value: "error"
     * @const
     */
    "error": "error"
};



export default Batch;

