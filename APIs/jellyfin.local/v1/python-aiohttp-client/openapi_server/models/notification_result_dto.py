# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.notification_dto import NotificationDto
from openapi_server import util


class NotificationResultDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, notifications: List[NotificationDto]=None, total_record_count: int=None):
        """NotificationResultDto - a model defined in OpenAPI

        :param notifications: The notifications of this NotificationResultDto.
        :param total_record_count: The total_record_count of this NotificationResultDto.
        """
        self.openapi_types = {
            'notifications': List[NotificationDto],
            'total_record_count': int
        }

        self.attribute_map = {
            'notifications': 'Notifications',
            'total_record_count': 'TotalRecordCount'
        }

        self._notifications = notifications
        self._total_record_count = total_record_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NotificationResultDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NotificationResultDto of this NotificationResultDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def notifications(self):
        """Gets the notifications of this NotificationResultDto.

        Gets or sets the current page of notifications.

        :return: The notifications of this NotificationResultDto.
        :rtype: List[NotificationDto]
        """
        return self._notifications

    @notifications.setter
    def notifications(self, notifications):
        """Sets the notifications of this NotificationResultDto.

        Gets or sets the current page of notifications.

        :param notifications: The notifications of this NotificationResultDto.
        :type notifications: List[NotificationDto]
        """

        self._notifications = notifications

    @property
    def total_record_count(self):
        """Gets the total_record_count of this NotificationResultDto.

        Gets or sets the total number of notifications.

        :return: The total_record_count of this NotificationResultDto.
        :rtype: int
        """
        return self._total_record_count

    @total_record_count.setter
    def total_record_count(self, total_record_count):
        """Sets the total_record_count of this NotificationResultDto.

        Gets or sets the total number of notifications.

        :param total_record_count: The total_record_count of this NotificationResultDto.
        :type total_record_count: int
        """

        self._total_record_count = total_record_count
