# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.base_item_person_image_blur_hashes import BaseItemPersonImageBlurHashes
from openapi_server import util


class BaseItemPerson(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, image_blur_hashes: BaseItemPersonImageBlurHashes=None, name: str=None, primary_image_tag: str=None, role: str=None, type: str=None):
        """BaseItemPerson - a model defined in OpenAPI

        :param id: The id of this BaseItemPerson.
        :param image_blur_hashes: The image_blur_hashes of this BaseItemPerson.
        :param name: The name of this BaseItemPerson.
        :param primary_image_tag: The primary_image_tag of this BaseItemPerson.
        :param role: The role of this BaseItemPerson.
        :param type: The type of this BaseItemPerson.
        """
        self.openapi_types = {
            'id': str,
            'image_blur_hashes': BaseItemPersonImageBlurHashes,
            'name': str,
            'primary_image_tag': str,
            'role': str,
            'type': str
        }

        self.attribute_map = {
            'id': 'Id',
            'image_blur_hashes': 'ImageBlurHashes',
            'name': 'Name',
            'primary_image_tag': 'PrimaryImageTag',
            'role': 'Role',
            'type': 'Type'
        }

        self._id = id
        self._image_blur_hashes = image_blur_hashes
        self._name = name
        self._primary_image_tag = primary_image_tag
        self._role = role
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BaseItemPerson':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BaseItemPerson of this BaseItemPerson.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this BaseItemPerson.

        Gets or sets the identifier.

        :return: The id of this BaseItemPerson.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BaseItemPerson.

        Gets or sets the identifier.

        :param id: The id of this BaseItemPerson.
        :type id: str
        """

        self._id = id

    @property
    def image_blur_hashes(self):
        """Gets the image_blur_hashes of this BaseItemPerson.


        :return: The image_blur_hashes of this BaseItemPerson.
        :rtype: BaseItemPersonImageBlurHashes
        """
        return self._image_blur_hashes

    @image_blur_hashes.setter
    def image_blur_hashes(self, image_blur_hashes):
        """Sets the image_blur_hashes of this BaseItemPerson.


        :param image_blur_hashes: The image_blur_hashes of this BaseItemPerson.
        :type image_blur_hashes: BaseItemPersonImageBlurHashes
        """

        self._image_blur_hashes = image_blur_hashes

    @property
    def name(self):
        """Gets the name of this BaseItemPerson.

        Gets or sets the name.

        :return: The name of this BaseItemPerson.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BaseItemPerson.

        Gets or sets the name.

        :param name: The name of this BaseItemPerson.
        :type name: str
        """

        self._name = name

    @property
    def primary_image_tag(self):
        """Gets the primary_image_tag of this BaseItemPerson.

        Gets or sets the primary image tag.

        :return: The primary_image_tag of this BaseItemPerson.
        :rtype: str
        """
        return self._primary_image_tag

    @primary_image_tag.setter
    def primary_image_tag(self, primary_image_tag):
        """Sets the primary_image_tag of this BaseItemPerson.

        Gets or sets the primary image tag.

        :param primary_image_tag: The primary_image_tag of this BaseItemPerson.
        :type primary_image_tag: str
        """

        self._primary_image_tag = primary_image_tag

    @property
    def role(self):
        """Gets the role of this BaseItemPerson.

        Gets or sets the role.

        :return: The role of this BaseItemPerson.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role):
        """Sets the role of this BaseItemPerson.

        Gets or sets the role.

        :param role: The role of this BaseItemPerson.
        :type role: str
        """

        self._role = role

    @property
    def type(self):
        """Gets the type of this BaseItemPerson.

        Gets or sets the type.

        :return: The type of this BaseItemPerson.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this BaseItemPerson.

        Gets or sets the type.

        :param type: The type of this BaseItemPerson.
        :type type: str
        """

        self._type = type
