# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.base_item_dto import BaseItemDto
from openapi_server.models.queue_item import QueueItem
from openapi_server import util


class PlaybackStopInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, failed: bool=None, item: BaseItemDto=None, item_id: str=None, live_stream_id: str=None, media_source_id: str=None, next_media_type: str=None, now_playing_queue: List[QueueItem]=None, play_session_id: str=None, playlist_item_id: str=None, position_ticks: int=None, session_id: str=None):
        """PlaybackStopInfo - a model defined in OpenAPI

        :param failed: The failed of this PlaybackStopInfo.
        :param item: The item of this PlaybackStopInfo.
        :param item_id: The item_id of this PlaybackStopInfo.
        :param live_stream_id: The live_stream_id of this PlaybackStopInfo.
        :param media_source_id: The media_source_id of this PlaybackStopInfo.
        :param next_media_type: The next_media_type of this PlaybackStopInfo.
        :param now_playing_queue: The now_playing_queue of this PlaybackStopInfo.
        :param play_session_id: The play_session_id of this PlaybackStopInfo.
        :param playlist_item_id: The playlist_item_id of this PlaybackStopInfo.
        :param position_ticks: The position_ticks of this PlaybackStopInfo.
        :param session_id: The session_id of this PlaybackStopInfo.
        """
        self.openapi_types = {
            'failed': bool,
            'item': BaseItemDto,
            'item_id': str,
            'live_stream_id': str,
            'media_source_id': str,
            'next_media_type': str,
            'now_playing_queue': List[QueueItem],
            'play_session_id': str,
            'playlist_item_id': str,
            'position_ticks': int,
            'session_id': str
        }

        self.attribute_map = {
            'failed': 'Failed',
            'item': 'Item',
            'item_id': 'ItemId',
            'live_stream_id': 'LiveStreamId',
            'media_source_id': 'MediaSourceId',
            'next_media_type': 'NextMediaType',
            'now_playing_queue': 'NowPlayingQueue',
            'play_session_id': 'PlaySessionId',
            'playlist_item_id': 'PlaylistItemId',
            'position_ticks': 'PositionTicks',
            'session_id': 'SessionId'
        }

        self._failed = failed
        self._item = item
        self._item_id = item_id
        self._live_stream_id = live_stream_id
        self._media_source_id = media_source_id
        self._next_media_type = next_media_type
        self._now_playing_queue = now_playing_queue
        self._play_session_id = play_session_id
        self._playlist_item_id = playlist_item_id
        self._position_ticks = position_ticks
        self._session_id = session_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlaybackStopInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlaybackStopInfo of this PlaybackStopInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def failed(self):
        """Gets the failed of this PlaybackStopInfo.

        Gets or sets a value indicating whether this MediaBrowser.Model.Session.PlaybackStopInfo is failed.

        :return: The failed of this PlaybackStopInfo.
        :rtype: bool
        """
        return self._failed

    @failed.setter
    def failed(self, failed):
        """Sets the failed of this PlaybackStopInfo.

        Gets or sets a value indicating whether this MediaBrowser.Model.Session.PlaybackStopInfo is failed.

        :param failed: The failed of this PlaybackStopInfo.
        :type failed: bool
        """

        self._failed = failed

    @property
    def item(self):
        """Gets the item of this PlaybackStopInfo.


        :return: The item of this PlaybackStopInfo.
        :rtype: BaseItemDto
        """
        return self._item

    @item.setter
    def item(self, item):
        """Sets the item of this PlaybackStopInfo.


        :param item: The item of this PlaybackStopInfo.
        :type item: BaseItemDto
        """

        self._item = item

    @property
    def item_id(self):
        """Gets the item_id of this PlaybackStopInfo.

        Gets or sets the item identifier.

        :return: The item_id of this PlaybackStopInfo.
        :rtype: str
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id):
        """Sets the item_id of this PlaybackStopInfo.

        Gets or sets the item identifier.

        :param item_id: The item_id of this PlaybackStopInfo.
        :type item_id: str
        """

        self._item_id = item_id

    @property
    def live_stream_id(self):
        """Gets the live_stream_id of this PlaybackStopInfo.

        Gets or sets the live stream identifier.

        :return: The live_stream_id of this PlaybackStopInfo.
        :rtype: str
        """
        return self._live_stream_id

    @live_stream_id.setter
    def live_stream_id(self, live_stream_id):
        """Sets the live_stream_id of this PlaybackStopInfo.

        Gets or sets the live stream identifier.

        :param live_stream_id: The live_stream_id of this PlaybackStopInfo.
        :type live_stream_id: str
        """

        self._live_stream_id = live_stream_id

    @property
    def media_source_id(self):
        """Gets the media_source_id of this PlaybackStopInfo.

        Gets or sets the media version identifier.

        :return: The media_source_id of this PlaybackStopInfo.
        :rtype: str
        """
        return self._media_source_id

    @media_source_id.setter
    def media_source_id(self, media_source_id):
        """Sets the media_source_id of this PlaybackStopInfo.

        Gets or sets the media version identifier.

        :param media_source_id: The media_source_id of this PlaybackStopInfo.
        :type media_source_id: str
        """

        self._media_source_id = media_source_id

    @property
    def next_media_type(self):
        """Gets the next_media_type of this PlaybackStopInfo.


        :return: The next_media_type of this PlaybackStopInfo.
        :rtype: str
        """
        return self._next_media_type

    @next_media_type.setter
    def next_media_type(self, next_media_type):
        """Sets the next_media_type of this PlaybackStopInfo.


        :param next_media_type: The next_media_type of this PlaybackStopInfo.
        :type next_media_type: str
        """

        self._next_media_type = next_media_type

    @property
    def now_playing_queue(self):
        """Gets the now_playing_queue of this PlaybackStopInfo.


        :return: The now_playing_queue of this PlaybackStopInfo.
        :rtype: List[QueueItem]
        """
        return self._now_playing_queue

    @now_playing_queue.setter
    def now_playing_queue(self, now_playing_queue):
        """Sets the now_playing_queue of this PlaybackStopInfo.


        :param now_playing_queue: The now_playing_queue of this PlaybackStopInfo.
        :type now_playing_queue: List[QueueItem]
        """

        self._now_playing_queue = now_playing_queue

    @property
    def play_session_id(self):
        """Gets the play_session_id of this PlaybackStopInfo.

        Gets or sets the play session identifier.

        :return: The play_session_id of this PlaybackStopInfo.
        :rtype: str
        """
        return self._play_session_id

    @play_session_id.setter
    def play_session_id(self, play_session_id):
        """Sets the play_session_id of this PlaybackStopInfo.

        Gets or sets the play session identifier.

        :param play_session_id: The play_session_id of this PlaybackStopInfo.
        :type play_session_id: str
        """

        self._play_session_id = play_session_id

    @property
    def playlist_item_id(self):
        """Gets the playlist_item_id of this PlaybackStopInfo.


        :return: The playlist_item_id of this PlaybackStopInfo.
        :rtype: str
        """
        return self._playlist_item_id

    @playlist_item_id.setter
    def playlist_item_id(self, playlist_item_id):
        """Sets the playlist_item_id of this PlaybackStopInfo.


        :param playlist_item_id: The playlist_item_id of this PlaybackStopInfo.
        :type playlist_item_id: str
        """

        self._playlist_item_id = playlist_item_id

    @property
    def position_ticks(self):
        """Gets the position_ticks of this PlaybackStopInfo.

        Gets or sets the position ticks.

        :return: The position_ticks of this PlaybackStopInfo.
        :rtype: int
        """
        return self._position_ticks

    @position_ticks.setter
    def position_ticks(self, position_ticks):
        """Sets the position_ticks of this PlaybackStopInfo.

        Gets or sets the position ticks.

        :param position_ticks: The position_ticks of this PlaybackStopInfo.
        :type position_ticks: int
        """

        self._position_ticks = position_ticks

    @property
    def session_id(self):
        """Gets the session_id of this PlaybackStopInfo.

        Gets or sets the session id.

        :return: The session_id of this PlaybackStopInfo.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id):
        """Sets the session_id of this PlaybackStopInfo.

        Gets or sets the session id.

        :param session_id: The session_id of this PlaybackStopInfo.
        :type session_id: str
        """

        self._session_id = session_id
