# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.send_command_type import SendCommandType
from openapi_server import util


class SendCommand(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, command: SendCommandType=None, emitted_at: datetime=None, group_id: str=None, playlist_item_id: str=None, position_ticks: int=None, when: datetime=None):
        """SendCommand - a model defined in OpenAPI

        :param command: The command of this SendCommand.
        :param emitted_at: The emitted_at of this SendCommand.
        :param group_id: The group_id of this SendCommand.
        :param playlist_item_id: The playlist_item_id of this SendCommand.
        :param position_ticks: The position_ticks of this SendCommand.
        :param when: The when of this SendCommand.
        """
        self.openapi_types = {
            'command': SendCommandType,
            'emitted_at': datetime,
            'group_id': str,
            'playlist_item_id': str,
            'position_ticks': int,
            'when': datetime
        }

        self.attribute_map = {
            'command': 'Command',
            'emitted_at': 'EmittedAt',
            'group_id': 'GroupId',
            'playlist_item_id': 'PlaylistItemId',
            'position_ticks': 'PositionTicks',
            'when': 'When'
        }

        self._command = command
        self._emitted_at = emitted_at
        self._group_id = group_id
        self._playlist_item_id = playlist_item_id
        self._position_ticks = position_ticks
        self._when = when

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SendCommand':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SendCommand of this SendCommand.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def command(self):
        """Gets the command of this SendCommand.


        :return: The command of this SendCommand.
        :rtype: SendCommandType
        """
        return self._command

    @command.setter
    def command(self, command):
        """Sets the command of this SendCommand.


        :param command: The command of this SendCommand.
        :type command: SendCommandType
        """

        self._command = command

    @property
    def emitted_at(self):
        """Gets the emitted_at of this SendCommand.

        Gets the UTC time when this command has been emitted.

        :return: The emitted_at of this SendCommand.
        :rtype: datetime
        """
        return self._emitted_at

    @emitted_at.setter
    def emitted_at(self, emitted_at):
        """Sets the emitted_at of this SendCommand.

        Gets the UTC time when this command has been emitted.

        :param emitted_at: The emitted_at of this SendCommand.
        :type emitted_at: datetime
        """

        self._emitted_at = emitted_at

    @property
    def group_id(self):
        """Gets the group_id of this SendCommand.

        Gets the group identifier.

        :return: The group_id of this SendCommand.
        :rtype: str
        """
        return self._group_id

    @group_id.setter
    def group_id(self, group_id):
        """Sets the group_id of this SendCommand.

        Gets the group identifier.

        :param group_id: The group_id of this SendCommand.
        :type group_id: str
        """

        self._group_id = group_id

    @property
    def playlist_item_id(self):
        """Gets the playlist_item_id of this SendCommand.

        Gets the playlist identifier of the playing item.

        :return: The playlist_item_id of this SendCommand.
        :rtype: str
        """
        return self._playlist_item_id

    @playlist_item_id.setter
    def playlist_item_id(self, playlist_item_id):
        """Sets the playlist_item_id of this SendCommand.

        Gets the playlist identifier of the playing item.

        :param playlist_item_id: The playlist_item_id of this SendCommand.
        :type playlist_item_id: str
        """

        self._playlist_item_id = playlist_item_id

    @property
    def position_ticks(self):
        """Gets the position_ticks of this SendCommand.

        Gets the position ticks.

        :return: The position_ticks of this SendCommand.
        :rtype: int
        """
        return self._position_ticks

    @position_ticks.setter
    def position_ticks(self, position_ticks):
        """Sets the position_ticks of this SendCommand.

        Gets the position ticks.

        :param position_ticks: The position_ticks of this SendCommand.
        :type position_ticks: int
        """

        self._position_ticks = position_ticks

    @property
    def when(self):
        """Gets the when of this SendCommand.

        Gets or sets the UTC time when to execute the command.

        :return: The when of this SendCommand.
        :rtype: datetime
        """
        return self._when

    @when.setter
    def when(self, when):
        """Sets the when of this SendCommand.

        Gets or sets the UTC time when to execute the command.

        :param when: The when of this SendCommand.
        :type when: datetime
        """

        self._when = when
