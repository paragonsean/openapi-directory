# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.task_completion_status import TaskCompletionStatus
from openapi_server import util


class TaskResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_time_utc: datetime=None, error_message: str=None, id: str=None, key: str=None, long_error_message: str=None, name: str=None, start_time_utc: datetime=None, status: TaskCompletionStatus=None):
        """TaskResult - a model defined in OpenAPI

        :param end_time_utc: The end_time_utc of this TaskResult.
        :param error_message: The error_message of this TaskResult.
        :param id: The id of this TaskResult.
        :param key: The key of this TaskResult.
        :param long_error_message: The long_error_message of this TaskResult.
        :param name: The name of this TaskResult.
        :param start_time_utc: The start_time_utc of this TaskResult.
        :param status: The status of this TaskResult.
        """
        self.openapi_types = {
            'end_time_utc': datetime,
            'error_message': str,
            'id': str,
            'key': str,
            'long_error_message': str,
            'name': str,
            'start_time_utc': datetime,
            'status': TaskCompletionStatus
        }

        self.attribute_map = {
            'end_time_utc': 'EndTimeUtc',
            'error_message': 'ErrorMessage',
            'id': 'Id',
            'key': 'Key',
            'long_error_message': 'LongErrorMessage',
            'name': 'Name',
            'start_time_utc': 'StartTimeUtc',
            'status': 'Status'
        }

        self._end_time_utc = end_time_utc
        self._error_message = error_message
        self._id = id
        self._key = key
        self._long_error_message = long_error_message
        self._name = name
        self._start_time_utc = start_time_utc
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TaskResult of this TaskResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_time_utc(self):
        """Gets the end_time_utc of this TaskResult.

        Gets or sets the end time UTC.

        :return: The end_time_utc of this TaskResult.
        :rtype: datetime
        """
        return self._end_time_utc

    @end_time_utc.setter
    def end_time_utc(self, end_time_utc):
        """Sets the end_time_utc of this TaskResult.

        Gets or sets the end time UTC.

        :param end_time_utc: The end_time_utc of this TaskResult.
        :type end_time_utc: datetime
        """

        self._end_time_utc = end_time_utc

    @property
    def error_message(self):
        """Gets the error_message of this TaskResult.

        Gets or sets the error message.

        :return: The error_message of this TaskResult.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this TaskResult.

        Gets or sets the error message.

        :param error_message: The error_message of this TaskResult.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def id(self):
        """Gets the id of this TaskResult.

        Gets or sets the id.

        :return: The id of this TaskResult.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TaskResult.

        Gets or sets the id.

        :param id: The id of this TaskResult.
        :type id: str
        """

        self._id = id

    @property
    def key(self):
        """Gets the key of this TaskResult.

        Gets or sets the key.

        :return: The key of this TaskResult.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this TaskResult.

        Gets or sets the key.

        :param key: The key of this TaskResult.
        :type key: str
        """

        self._key = key

    @property
    def long_error_message(self):
        """Gets the long_error_message of this TaskResult.

        Gets or sets the long error message.

        :return: The long_error_message of this TaskResult.
        :rtype: str
        """
        return self._long_error_message

    @long_error_message.setter
    def long_error_message(self, long_error_message):
        """Sets the long_error_message of this TaskResult.

        Gets or sets the long error message.

        :param long_error_message: The long_error_message of this TaskResult.
        :type long_error_message: str
        """

        self._long_error_message = long_error_message

    @property
    def name(self):
        """Gets the name of this TaskResult.

        Gets or sets the name.

        :return: The name of this TaskResult.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TaskResult.

        Gets or sets the name.

        :param name: The name of this TaskResult.
        :type name: str
        """

        self._name = name

    @property
    def start_time_utc(self):
        """Gets the start_time_utc of this TaskResult.

        Gets or sets the start time UTC.

        :return: The start_time_utc of this TaskResult.
        :rtype: datetime
        """
        return self._start_time_utc

    @start_time_utc.setter
    def start_time_utc(self, start_time_utc):
        """Sets the start_time_utc of this TaskResult.

        Gets or sets the start time UTC.

        :param start_time_utc: The start_time_utc of this TaskResult.
        :type start_time_utc: datetime
        """

        self._start_time_utc = start_time_utc

    @property
    def status(self):
        """Gets the status of this TaskResult.


        :return: The status of this TaskResult.
        :rtype: TaskCompletionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this TaskResult.


        :param status: The status of this TaskResult.
        :type status: TaskCompletionStatus
        """

        self._status = status
