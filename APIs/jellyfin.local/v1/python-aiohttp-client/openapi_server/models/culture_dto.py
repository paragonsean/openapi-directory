# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CultureDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, name: str=None, three_letter_iso_language_name: str=None, three_letter_iso_language_names: List[str]=None, two_letter_iso_language_name: str=None):
        """CultureDto - a model defined in OpenAPI

        :param display_name: The display_name of this CultureDto.
        :param name: The name of this CultureDto.
        :param three_letter_iso_language_name: The three_letter_iso_language_name of this CultureDto.
        :param three_letter_iso_language_names: The three_letter_iso_language_names of this CultureDto.
        :param two_letter_iso_language_name: The two_letter_iso_language_name of this CultureDto.
        """
        self.openapi_types = {
            'display_name': str,
            'name': str,
            'three_letter_iso_language_name': str,
            'three_letter_iso_language_names': List[str],
            'two_letter_iso_language_name': str
        }

        self.attribute_map = {
            'display_name': 'DisplayName',
            'name': 'Name',
            'three_letter_iso_language_name': 'ThreeLetterISOLanguageName',
            'three_letter_iso_language_names': 'ThreeLetterISOLanguageNames',
            'two_letter_iso_language_name': 'TwoLetterISOLanguageName'
        }

        self._display_name = display_name
        self._name = name
        self._three_letter_iso_language_name = three_letter_iso_language_name
        self._three_letter_iso_language_names = three_letter_iso_language_names
        self._two_letter_iso_language_name = two_letter_iso_language_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CultureDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CultureDto of this CultureDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this CultureDto.

        Gets or sets the display name.

        :return: The display_name of this CultureDto.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this CultureDto.

        Gets or sets the display name.

        :param display_name: The display_name of this CultureDto.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def name(self):
        """Gets the name of this CultureDto.

        Gets or sets the name.

        :return: The name of this CultureDto.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CultureDto.

        Gets or sets the name.

        :param name: The name of this CultureDto.
        :type name: str
        """

        self._name = name

    @property
    def three_letter_iso_language_name(self):
        """Gets the three_letter_iso_language_name of this CultureDto.

        Gets or sets the name of the three letter ISO language.

        :return: The three_letter_iso_language_name of this CultureDto.
        :rtype: str
        """
        return self._three_letter_iso_language_name

    @three_letter_iso_language_name.setter
    def three_letter_iso_language_name(self, three_letter_iso_language_name):
        """Sets the three_letter_iso_language_name of this CultureDto.

        Gets or sets the name of the three letter ISO language.

        :param three_letter_iso_language_name: The three_letter_iso_language_name of this CultureDto.
        :type three_letter_iso_language_name: str
        """

        self._three_letter_iso_language_name = three_letter_iso_language_name

    @property
    def three_letter_iso_language_names(self):
        """Gets the three_letter_iso_language_names of this CultureDto.


        :return: The three_letter_iso_language_names of this CultureDto.
        :rtype: List[str]
        """
        return self._three_letter_iso_language_names

    @three_letter_iso_language_names.setter
    def three_letter_iso_language_names(self, three_letter_iso_language_names):
        """Sets the three_letter_iso_language_names of this CultureDto.


        :param three_letter_iso_language_names: The three_letter_iso_language_names of this CultureDto.
        :type three_letter_iso_language_names: List[str]
        """

        self._three_letter_iso_language_names = three_letter_iso_language_names

    @property
    def two_letter_iso_language_name(self):
        """Gets the two_letter_iso_language_name of this CultureDto.

        Gets or sets the name of the two letter ISO language.

        :return: The two_letter_iso_language_name of this CultureDto.
        :rtype: str
        """
        return self._two_letter_iso_language_name

    @two_letter_iso_language_name.setter
    def two_letter_iso_language_name(self, two_letter_iso_language_name):
        """Sets the two_letter_iso_language_name of this CultureDto.

        Gets or sets the name of the two letter ISO language.

        :param two_letter_iso_language_name: The two_letter_iso_language_name of this CultureDto.
        :type two_letter_iso_language_name: str
        """

        self._two_letter_iso_language_name = two_letter_iso_language_name
