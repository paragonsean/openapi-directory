# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.base_item_dto import BaseItemDto
from openapi_server.models.recommendation_type import RecommendationType
from openapi_server import util


class RecommendationDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, baseline_item_name: str=None, category_id: str=None, items: List[BaseItemDto]=None, recommendation_type: RecommendationType=None):
        """RecommendationDto - a model defined in OpenAPI

        :param baseline_item_name: The baseline_item_name of this RecommendationDto.
        :param category_id: The category_id of this RecommendationDto.
        :param items: The items of this RecommendationDto.
        :param recommendation_type: The recommendation_type of this RecommendationDto.
        """
        self.openapi_types = {
            'baseline_item_name': str,
            'category_id': str,
            'items': List[BaseItemDto],
            'recommendation_type': RecommendationType
        }

        self.attribute_map = {
            'baseline_item_name': 'BaselineItemName',
            'category_id': 'CategoryId',
            'items': 'Items',
            'recommendation_type': 'RecommendationType'
        }

        self._baseline_item_name = baseline_item_name
        self._category_id = category_id
        self._items = items
        self._recommendation_type = recommendation_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecommendationDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecommendationDto of this RecommendationDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def baseline_item_name(self):
        """Gets the baseline_item_name of this RecommendationDto.


        :return: The baseline_item_name of this RecommendationDto.
        :rtype: str
        """
        return self._baseline_item_name

    @baseline_item_name.setter
    def baseline_item_name(self, baseline_item_name):
        """Sets the baseline_item_name of this RecommendationDto.


        :param baseline_item_name: The baseline_item_name of this RecommendationDto.
        :type baseline_item_name: str
        """

        self._baseline_item_name = baseline_item_name

    @property
    def category_id(self):
        """Gets the category_id of this RecommendationDto.


        :return: The category_id of this RecommendationDto.
        :rtype: str
        """
        return self._category_id

    @category_id.setter
    def category_id(self, category_id):
        """Sets the category_id of this RecommendationDto.


        :param category_id: The category_id of this RecommendationDto.
        :type category_id: str
        """

        self._category_id = category_id

    @property
    def items(self):
        """Gets the items of this RecommendationDto.


        :return: The items of this RecommendationDto.
        :rtype: List[BaseItemDto]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this RecommendationDto.


        :param items: The items of this RecommendationDto.
        :type items: List[BaseItemDto]
        """

        self._items = items

    @property
    def recommendation_type(self):
        """Gets the recommendation_type of this RecommendationDto.


        :return: The recommendation_type of this RecommendationDto.
        :rtype: RecommendationType
        """
        return self._recommendation_type

    @recommendation_type.setter
    def recommendation_type(self, recommendation_type):
        """Sets the recommendation_type of this RecommendationDto.


        :param recommendation_type: The recommendation_type of this RecommendationDto.
        :type recommendation_type: RecommendationType
        """

        self._recommendation_type = recommendation_type
