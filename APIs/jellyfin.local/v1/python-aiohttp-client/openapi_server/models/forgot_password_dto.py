# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ForgotPasswordDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entered_username: str=None):
        """ForgotPasswordDto - a model defined in OpenAPI

        :param entered_username: The entered_username of this ForgotPasswordDto.
        """
        self.openapi_types = {
            'entered_username': str
        }

        self.attribute_map = {
            'entered_username': 'EnteredUsername'
        }

        self._entered_username = entered_username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ForgotPasswordDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ForgotPasswordDto of this ForgotPasswordDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entered_username(self):
        """Gets the entered_username of this ForgotPasswordDto.

        Gets or sets the entered username to have its password reset.

        :return: The entered_username of this ForgotPasswordDto.
        :rtype: str
        """
        return self._entered_username

    @entered_username.setter
    def entered_username(self, entered_username):
        """Sets the entered_username of this ForgotPasswordDto.

        Gets or sets the entered username to have its password reset.

        :param entered_username: The entered_username of this ForgotPasswordDto.
        :type entered_username: str
        """
        if entered_username is None:
            raise ValueError("Invalid value for `entered_username`, must not be `None`")

        self._entered_username = entered_username
