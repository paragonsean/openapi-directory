# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.session_info import SessionInfo
from openapi_server.models.user_dto import UserDto
from openapi_server import util


class AuthenticationResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_token: str=None, server_id: str=None, session_info: SessionInfo=None, user: UserDto=None):
        """AuthenticationResult - a model defined in OpenAPI

        :param access_token: The access_token of this AuthenticationResult.
        :param server_id: The server_id of this AuthenticationResult.
        :param session_info: The session_info of this AuthenticationResult.
        :param user: The user of this AuthenticationResult.
        """
        self.openapi_types = {
            'access_token': str,
            'server_id': str,
            'session_info': SessionInfo,
            'user': UserDto
        }

        self.attribute_map = {
            'access_token': 'AccessToken',
            'server_id': 'ServerId',
            'session_info': 'SessionInfo',
            'user': 'User'
        }

        self._access_token = access_token
        self._server_id = server_id
        self._session_info = session_info
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AuthenticationResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AuthenticationResult of this AuthenticationResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_token(self):
        """Gets the access_token of this AuthenticationResult.


        :return: The access_token of this AuthenticationResult.
        :rtype: str
        """
        return self._access_token

    @access_token.setter
    def access_token(self, access_token):
        """Sets the access_token of this AuthenticationResult.


        :param access_token: The access_token of this AuthenticationResult.
        :type access_token: str
        """

        self._access_token = access_token

    @property
    def server_id(self):
        """Gets the server_id of this AuthenticationResult.


        :return: The server_id of this AuthenticationResult.
        :rtype: str
        """
        return self._server_id

    @server_id.setter
    def server_id(self, server_id):
        """Sets the server_id of this AuthenticationResult.


        :param server_id: The server_id of this AuthenticationResult.
        :type server_id: str
        """

        self._server_id = server_id

    @property
    def session_info(self):
        """Gets the session_info of this AuthenticationResult.


        :return: The session_info of this AuthenticationResult.
        :rtype: SessionInfo
        """
        return self._session_info

    @session_info.setter
    def session_info(self, session_info):
        """Sets the session_info of this AuthenticationResult.


        :param session_info: The session_info of this AuthenticationResult.
        :type session_info: SessionInfo
        """

        self._session_info = session_info

    @property
    def user(self):
        """Gets the user of this AuthenticationResult.


        :return: The user of this AuthenticationResult.
        :rtype: UserDto
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this AuthenticationResult.


        :param user: The user of this AuthenticationResult.
        :type user: UserDto
        """

        self._user = user
