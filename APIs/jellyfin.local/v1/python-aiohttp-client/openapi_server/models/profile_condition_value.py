# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProfileConditionValue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    AUDIOCHANNELS = 'AudioChannels'
    AUDIOBITRATE = 'AudioBitrate'
    AUDIOPROFILE = 'AudioProfile'
    WIDTH = 'Width'
    HEIGHT = 'Height'
    HAS64BITOFFSETS = 'Has64BitOffsets'
    PACKETLENGTH = 'PacketLength'
    VIDEOBITDEPTH = 'VideoBitDepth'
    VIDEOBITRATE = 'VideoBitrate'
    VIDEOFRAMERATE = 'VideoFramerate'
    VIDEOLEVEL = 'VideoLevel'
    VIDEOPROFILE = 'VideoProfile'
    VIDEOTIMESTAMP = 'VideoTimestamp'
    ISANAMORPHIC = 'IsAnamorphic'
    REFFRAMES = 'RefFrames'
    NUMAUDIOSTREAMS = 'NumAudioStreams'
    NUMVIDEOSTREAMS = 'NumVideoStreams'
    ISSECONDARYAUDIO = 'IsSecondaryAudio'
    VIDEOCODECTAG = 'VideoCodecTag'
    ISAVC = 'IsAvc'
    ISINTERLACED = 'IsInterlaced'
    AUDIOSAMPLERATE = 'AudioSampleRate'
    AUDIOBITDEPTH = 'AudioBitDepth'

    def __init__(self):
        """ProfileConditionValue - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProfileConditionValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProfileConditionValue of this ProfileConditionValue.
        """
        return util.deserialize_model(dikt, cls)
