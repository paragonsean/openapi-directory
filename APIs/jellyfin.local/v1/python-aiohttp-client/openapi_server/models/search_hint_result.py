# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.search_hint import SearchHint
from openapi_server import util


class SearchHintResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, search_hints: List[SearchHint]=None, total_record_count: int=None):
        """SearchHintResult - a model defined in OpenAPI

        :param search_hints: The search_hints of this SearchHintResult.
        :param total_record_count: The total_record_count of this SearchHintResult.
        """
        self.openapi_types = {
            'search_hints': List[SearchHint],
            'total_record_count': int
        }

        self.attribute_map = {
            'search_hints': 'SearchHints',
            'total_record_count': 'TotalRecordCount'
        }

        self._search_hints = search_hints
        self._total_record_count = total_record_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchHintResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchHintResult of this SearchHintResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def search_hints(self):
        """Gets the search_hints of this SearchHintResult.

        Gets or sets the search hints.

        :return: The search_hints of this SearchHintResult.
        :rtype: List[SearchHint]
        """
        return self._search_hints

    @search_hints.setter
    def search_hints(self, search_hints):
        """Sets the search_hints of this SearchHintResult.

        Gets or sets the search hints.

        :param search_hints: The search_hints of this SearchHintResult.
        :type search_hints: List[SearchHint]
        """

        self._search_hints = search_hints

    @property
    def total_record_count(self):
        """Gets the total_record_count of this SearchHintResult.

        Gets or sets the total record count.

        :return: The total_record_count of this SearchHintResult.
        :rtype: int
        """
        return self._total_record_count

    @total_record_count.setter
    def total_record_count(self, total_record_count):
        """Sets the total_record_count of this SearchHintResult.

        Gets or sets the total record count.

        :param total_record_count: The total_record_count of this SearchHintResult.
        :type total_record_count: int
        """

        self._total_record_count = total_record_count
