# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.timer_info_dto import TimerInfoDto
from openapi_server import util


class TimerInfoDtoQueryResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, items: List[TimerInfoDto]=None, start_index: int=None, total_record_count: int=None):
        """TimerInfoDtoQueryResult - a model defined in OpenAPI

        :param items: The items of this TimerInfoDtoQueryResult.
        :param start_index: The start_index of this TimerInfoDtoQueryResult.
        :param total_record_count: The total_record_count of this TimerInfoDtoQueryResult.
        """
        self.openapi_types = {
            'items': List[TimerInfoDto],
            'start_index': int,
            'total_record_count': int
        }

        self.attribute_map = {
            'items': 'Items',
            'start_index': 'StartIndex',
            'total_record_count': 'TotalRecordCount'
        }

        self._items = items
        self._start_index = start_index
        self._total_record_count = total_record_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TimerInfoDtoQueryResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TimerInfoDtoQueryResult of this TimerInfoDtoQueryResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def items(self):
        """Gets the items of this TimerInfoDtoQueryResult.

        Gets or sets the items.

        :return: The items of this TimerInfoDtoQueryResult.
        :rtype: List[TimerInfoDto]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this TimerInfoDtoQueryResult.

        Gets or sets the items.

        :param items: The items of this TimerInfoDtoQueryResult.
        :type items: List[TimerInfoDto]
        """

        self._items = items

    @property
    def start_index(self):
        """Gets the start_index of this TimerInfoDtoQueryResult.

        The index of the first record in Items.

        :return: The start_index of this TimerInfoDtoQueryResult.
        :rtype: int
        """
        return self._start_index

    @start_index.setter
    def start_index(self, start_index):
        """Sets the start_index of this TimerInfoDtoQueryResult.

        The index of the first record in Items.

        :param start_index: The start_index of this TimerInfoDtoQueryResult.
        :type start_index: int
        """

        self._start_index = start_index

    @property
    def total_record_count(self):
        """Gets the total_record_count of this TimerInfoDtoQueryResult.

        The total number of records available.

        :return: The total_record_count of this TimerInfoDtoQueryResult.
        :rtype: int
        """
        return self._total_record_count

    @total_record_count.setter
    def total_record_count(self, total_record_count):
        """Sets the total_record_count of this TimerInfoDtoQueryResult.

        The total number of records available.

        :param total_record_count: The total_record_count of this TimerInfoDtoQueryResult.
        :type total_record_count: int
        """

        self._total_record_count = total_record_count
