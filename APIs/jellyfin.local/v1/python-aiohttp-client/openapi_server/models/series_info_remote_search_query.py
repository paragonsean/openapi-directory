# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.series_info import SeriesInfo
from openapi_server import util


class SeriesInfoRemoteSearchQuery(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, include_disabled_providers: bool=None, item_id: str=None, search_info: SeriesInfo=None, search_provider_name: str=None):
        """SeriesInfoRemoteSearchQuery - a model defined in OpenAPI

        :param include_disabled_providers: The include_disabled_providers of this SeriesInfoRemoteSearchQuery.
        :param item_id: The item_id of this SeriesInfoRemoteSearchQuery.
        :param search_info: The search_info of this SeriesInfoRemoteSearchQuery.
        :param search_provider_name: The search_provider_name of this SeriesInfoRemoteSearchQuery.
        """
        self.openapi_types = {
            'include_disabled_providers': bool,
            'item_id': str,
            'search_info': SeriesInfo,
            'search_provider_name': str
        }

        self.attribute_map = {
            'include_disabled_providers': 'IncludeDisabledProviders',
            'item_id': 'ItemId',
            'search_info': 'SearchInfo',
            'search_provider_name': 'SearchProviderName'
        }

        self._include_disabled_providers = include_disabled_providers
        self._item_id = item_id
        self._search_info = search_info
        self._search_provider_name = search_provider_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SeriesInfoRemoteSearchQuery':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SeriesInfoRemoteSearchQuery of this SeriesInfoRemoteSearchQuery.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def include_disabled_providers(self):
        """Gets the include_disabled_providers of this SeriesInfoRemoteSearchQuery.

        Gets or sets a value indicating whether disabled providers should be included.

        :return: The include_disabled_providers of this SeriesInfoRemoteSearchQuery.
        :rtype: bool
        """
        return self._include_disabled_providers

    @include_disabled_providers.setter
    def include_disabled_providers(self, include_disabled_providers):
        """Sets the include_disabled_providers of this SeriesInfoRemoteSearchQuery.

        Gets or sets a value indicating whether disabled providers should be included.

        :param include_disabled_providers: The include_disabled_providers of this SeriesInfoRemoteSearchQuery.
        :type include_disabled_providers: bool
        """

        self._include_disabled_providers = include_disabled_providers

    @property
    def item_id(self):
        """Gets the item_id of this SeriesInfoRemoteSearchQuery.


        :return: The item_id of this SeriesInfoRemoteSearchQuery.
        :rtype: str
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id):
        """Sets the item_id of this SeriesInfoRemoteSearchQuery.


        :param item_id: The item_id of this SeriesInfoRemoteSearchQuery.
        :type item_id: str
        """

        self._item_id = item_id

    @property
    def search_info(self):
        """Gets the search_info of this SeriesInfoRemoteSearchQuery.


        :return: The search_info of this SeriesInfoRemoteSearchQuery.
        :rtype: SeriesInfo
        """
        return self._search_info

    @search_info.setter
    def search_info(self, search_info):
        """Sets the search_info of this SeriesInfoRemoteSearchQuery.


        :param search_info: The search_info of this SeriesInfoRemoteSearchQuery.
        :type search_info: SeriesInfo
        """

        self._search_info = search_info

    @property
    def search_provider_name(self):
        """Gets the search_provider_name of this SeriesInfoRemoteSearchQuery.

        Will only search within the given provider when set.

        :return: The search_provider_name of this SeriesInfoRemoteSearchQuery.
        :rtype: str
        """
        return self._search_provider_name

    @search_provider_name.setter
    def search_provider_name(self, search_provider_name):
        """Sets the search_provider_name of this SeriesInfoRemoteSearchQuery.

        Will only search within the given provider when set.

        :param search_provider_name: The search_provider_name of this SeriesInfoRemoteSearchQuery.
        :type search_provider_name: str
        """

        self._search_provider_name = search_provider_name
