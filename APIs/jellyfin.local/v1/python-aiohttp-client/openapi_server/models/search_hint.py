# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SearchHint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, album: str=None, album_artist: str=None, album_id: str=None, artists: List[str]=None, backdrop_image_item_id: str=None, backdrop_image_tag: str=None, channel_id: str=None, channel_name: str=None, end_date: datetime=None, episode_count: int=None, id: str=None, index_number: int=None, is_folder: bool=None, item_id: str=None, matched_term: str=None, media_type: str=None, name: str=None, parent_index_number: int=None, primary_image_aspect_ratio: float=None, primary_image_tag: str=None, production_year: int=None, run_time_ticks: int=None, series: str=None, song_count: int=None, start_date: datetime=None, status: str=None, thumb_image_item_id: str=None, thumb_image_tag: str=None, type: str=None):
        """SearchHint - a model defined in OpenAPI

        :param album: The album of this SearchHint.
        :param album_artist: The album_artist of this SearchHint.
        :param album_id: The album_id of this SearchHint.
        :param artists: The artists of this SearchHint.
        :param backdrop_image_item_id: The backdrop_image_item_id of this SearchHint.
        :param backdrop_image_tag: The backdrop_image_tag of this SearchHint.
        :param channel_id: The channel_id of this SearchHint.
        :param channel_name: The channel_name of this SearchHint.
        :param end_date: The end_date of this SearchHint.
        :param episode_count: The episode_count of this SearchHint.
        :param id: The id of this SearchHint.
        :param index_number: The index_number of this SearchHint.
        :param is_folder: The is_folder of this SearchHint.
        :param item_id: The item_id of this SearchHint.
        :param matched_term: The matched_term of this SearchHint.
        :param media_type: The media_type of this SearchHint.
        :param name: The name of this SearchHint.
        :param parent_index_number: The parent_index_number of this SearchHint.
        :param primary_image_aspect_ratio: The primary_image_aspect_ratio of this SearchHint.
        :param primary_image_tag: The primary_image_tag of this SearchHint.
        :param production_year: The production_year of this SearchHint.
        :param run_time_ticks: The run_time_ticks of this SearchHint.
        :param series: The series of this SearchHint.
        :param song_count: The song_count of this SearchHint.
        :param start_date: The start_date of this SearchHint.
        :param status: The status of this SearchHint.
        :param thumb_image_item_id: The thumb_image_item_id of this SearchHint.
        :param thumb_image_tag: The thumb_image_tag of this SearchHint.
        :param type: The type of this SearchHint.
        """
        self.openapi_types = {
            'album': str,
            'album_artist': str,
            'album_id': str,
            'artists': List[str],
            'backdrop_image_item_id': str,
            'backdrop_image_tag': str,
            'channel_id': str,
            'channel_name': str,
            'end_date': datetime,
            'episode_count': int,
            'id': str,
            'index_number': int,
            'is_folder': bool,
            'item_id': str,
            'matched_term': str,
            'media_type': str,
            'name': str,
            'parent_index_number': int,
            'primary_image_aspect_ratio': float,
            'primary_image_tag': str,
            'production_year': int,
            'run_time_ticks': int,
            'series': str,
            'song_count': int,
            'start_date': datetime,
            'status': str,
            'thumb_image_item_id': str,
            'thumb_image_tag': str,
            'type': str
        }

        self.attribute_map = {
            'album': 'Album',
            'album_artist': 'AlbumArtist',
            'album_id': 'AlbumId',
            'artists': 'Artists',
            'backdrop_image_item_id': 'BackdropImageItemId',
            'backdrop_image_tag': 'BackdropImageTag',
            'channel_id': 'ChannelId',
            'channel_name': 'ChannelName',
            'end_date': 'EndDate',
            'episode_count': 'EpisodeCount',
            'id': 'Id',
            'index_number': 'IndexNumber',
            'is_folder': 'IsFolder',
            'item_id': 'ItemId',
            'matched_term': 'MatchedTerm',
            'media_type': 'MediaType',
            'name': 'Name',
            'parent_index_number': 'ParentIndexNumber',
            'primary_image_aspect_ratio': 'PrimaryImageAspectRatio',
            'primary_image_tag': 'PrimaryImageTag',
            'production_year': 'ProductionYear',
            'run_time_ticks': 'RunTimeTicks',
            'series': 'Series',
            'song_count': 'SongCount',
            'start_date': 'StartDate',
            'status': 'Status',
            'thumb_image_item_id': 'ThumbImageItemId',
            'thumb_image_tag': 'ThumbImageTag',
            'type': 'Type'
        }

        self._album = album
        self._album_artist = album_artist
        self._album_id = album_id
        self._artists = artists
        self._backdrop_image_item_id = backdrop_image_item_id
        self._backdrop_image_tag = backdrop_image_tag
        self._channel_id = channel_id
        self._channel_name = channel_name
        self._end_date = end_date
        self._episode_count = episode_count
        self._id = id
        self._index_number = index_number
        self._is_folder = is_folder
        self._item_id = item_id
        self._matched_term = matched_term
        self._media_type = media_type
        self._name = name
        self._parent_index_number = parent_index_number
        self._primary_image_aspect_ratio = primary_image_aspect_ratio
        self._primary_image_tag = primary_image_tag
        self._production_year = production_year
        self._run_time_ticks = run_time_ticks
        self._series = series
        self._song_count = song_count
        self._start_date = start_date
        self._status = status
        self._thumb_image_item_id = thumb_image_item_id
        self._thumb_image_tag = thumb_image_tag
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchHint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchHint of this SearchHint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def album(self):
        """Gets the album of this SearchHint.

        Gets or sets the album.

        :return: The album of this SearchHint.
        :rtype: str
        """
        return self._album

    @album.setter
    def album(self, album):
        """Sets the album of this SearchHint.

        Gets or sets the album.

        :param album: The album of this SearchHint.
        :type album: str
        """

        self._album = album

    @property
    def album_artist(self):
        """Gets the album_artist of this SearchHint.

        Gets or sets the album artist.

        :return: The album_artist of this SearchHint.
        :rtype: str
        """
        return self._album_artist

    @album_artist.setter
    def album_artist(self, album_artist):
        """Sets the album_artist of this SearchHint.

        Gets or sets the album artist.

        :param album_artist: The album_artist of this SearchHint.
        :type album_artist: str
        """

        self._album_artist = album_artist

    @property
    def album_id(self):
        """Gets the album_id of this SearchHint.


        :return: The album_id of this SearchHint.
        :rtype: str
        """
        return self._album_id

    @album_id.setter
    def album_id(self, album_id):
        """Sets the album_id of this SearchHint.


        :param album_id: The album_id of this SearchHint.
        :type album_id: str
        """

        self._album_id = album_id

    @property
    def artists(self):
        """Gets the artists of this SearchHint.

        Gets or sets the artists.

        :return: The artists of this SearchHint.
        :rtype: List[str]
        """
        return self._artists

    @artists.setter
    def artists(self, artists):
        """Sets the artists of this SearchHint.

        Gets or sets the artists.

        :param artists: The artists of this SearchHint.
        :type artists: List[str]
        """

        self._artists = artists

    @property
    def backdrop_image_item_id(self):
        """Gets the backdrop_image_item_id of this SearchHint.

        Gets or sets the backdrop image item identifier.

        :return: The backdrop_image_item_id of this SearchHint.
        :rtype: str
        """
        return self._backdrop_image_item_id

    @backdrop_image_item_id.setter
    def backdrop_image_item_id(self, backdrop_image_item_id):
        """Sets the backdrop_image_item_id of this SearchHint.

        Gets or sets the backdrop image item identifier.

        :param backdrop_image_item_id: The backdrop_image_item_id of this SearchHint.
        :type backdrop_image_item_id: str
        """

        self._backdrop_image_item_id = backdrop_image_item_id

    @property
    def backdrop_image_tag(self):
        """Gets the backdrop_image_tag of this SearchHint.

        Gets or sets the backdrop image tag.

        :return: The backdrop_image_tag of this SearchHint.
        :rtype: str
        """
        return self._backdrop_image_tag

    @backdrop_image_tag.setter
    def backdrop_image_tag(self, backdrop_image_tag):
        """Sets the backdrop_image_tag of this SearchHint.

        Gets or sets the backdrop image tag.

        :param backdrop_image_tag: The backdrop_image_tag of this SearchHint.
        :type backdrop_image_tag: str
        """

        self._backdrop_image_tag = backdrop_image_tag

    @property
    def channel_id(self):
        """Gets the channel_id of this SearchHint.

        Gets or sets the channel identifier.

        :return: The channel_id of this SearchHint.
        :rtype: str
        """
        return self._channel_id

    @channel_id.setter
    def channel_id(self, channel_id):
        """Sets the channel_id of this SearchHint.

        Gets or sets the channel identifier.

        :param channel_id: The channel_id of this SearchHint.
        :type channel_id: str
        """

        self._channel_id = channel_id

    @property
    def channel_name(self):
        """Gets the channel_name of this SearchHint.

        Gets or sets the name of the channel.

        :return: The channel_name of this SearchHint.
        :rtype: str
        """
        return self._channel_name

    @channel_name.setter
    def channel_name(self, channel_name):
        """Sets the channel_name of this SearchHint.

        Gets or sets the name of the channel.

        :param channel_name: The channel_name of this SearchHint.
        :type channel_name: str
        """

        self._channel_name = channel_name

    @property
    def end_date(self):
        """Gets the end_date of this SearchHint.


        :return: The end_date of this SearchHint.
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this SearchHint.


        :param end_date: The end_date of this SearchHint.
        :type end_date: datetime
        """

        self._end_date = end_date

    @property
    def episode_count(self):
        """Gets the episode_count of this SearchHint.

        Gets or sets the episode count.

        :return: The episode_count of this SearchHint.
        :rtype: int
        """
        return self._episode_count

    @episode_count.setter
    def episode_count(self, episode_count):
        """Sets the episode_count of this SearchHint.

        Gets or sets the episode count.

        :param episode_count: The episode_count of this SearchHint.
        :type episode_count: int
        """

        self._episode_count = episode_count

    @property
    def id(self):
        """Gets the id of this SearchHint.


        :return: The id of this SearchHint.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SearchHint.


        :param id: The id of this SearchHint.
        :type id: str
        """

        self._id = id

    @property
    def index_number(self):
        """Gets the index_number of this SearchHint.

        Gets or sets the index number.

        :return: The index_number of this SearchHint.
        :rtype: int
        """
        return self._index_number

    @index_number.setter
    def index_number(self, index_number):
        """Sets the index_number of this SearchHint.

        Gets or sets the index number.

        :param index_number: The index_number of this SearchHint.
        :type index_number: int
        """

        self._index_number = index_number

    @property
    def is_folder(self):
        """Gets the is_folder of this SearchHint.


        :return: The is_folder of this SearchHint.
        :rtype: bool
        """
        return self._is_folder

    @is_folder.setter
    def is_folder(self, is_folder):
        """Sets the is_folder of this SearchHint.


        :param is_folder: The is_folder of this SearchHint.
        :type is_folder: bool
        """

        self._is_folder = is_folder

    @property
    def item_id(self):
        """Gets the item_id of this SearchHint.

        Gets or sets the item id.

        :return: The item_id of this SearchHint.
        :rtype: str
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id):
        """Sets the item_id of this SearchHint.

        Gets or sets the item id.

        :param item_id: The item_id of this SearchHint.
        :type item_id: str
        """

        self._item_id = item_id

    @property
    def matched_term(self):
        """Gets the matched_term of this SearchHint.

        Gets or sets the matched term.

        :return: The matched_term of this SearchHint.
        :rtype: str
        """
        return self._matched_term

    @matched_term.setter
    def matched_term(self, matched_term):
        """Sets the matched_term of this SearchHint.

        Gets or sets the matched term.

        :param matched_term: The matched_term of this SearchHint.
        :type matched_term: str
        """

        self._matched_term = matched_term

    @property
    def media_type(self):
        """Gets the media_type of this SearchHint.

        Gets or sets the type of the media.

        :return: The media_type of this SearchHint.
        :rtype: str
        """
        return self._media_type

    @media_type.setter
    def media_type(self, media_type):
        """Sets the media_type of this SearchHint.

        Gets or sets the type of the media.

        :param media_type: The media_type of this SearchHint.
        :type media_type: str
        """

        self._media_type = media_type

    @property
    def name(self):
        """Gets the name of this SearchHint.

        Gets or sets the name.

        :return: The name of this SearchHint.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SearchHint.

        Gets or sets the name.

        :param name: The name of this SearchHint.
        :type name: str
        """

        self._name = name

    @property
    def parent_index_number(self):
        """Gets the parent_index_number of this SearchHint.

        Gets or sets the parent index number.

        :return: The parent_index_number of this SearchHint.
        :rtype: int
        """
        return self._parent_index_number

    @parent_index_number.setter
    def parent_index_number(self, parent_index_number):
        """Sets the parent_index_number of this SearchHint.

        Gets or sets the parent index number.

        :param parent_index_number: The parent_index_number of this SearchHint.
        :type parent_index_number: int
        """

        self._parent_index_number = parent_index_number

    @property
    def primary_image_aspect_ratio(self):
        """Gets the primary_image_aspect_ratio of this SearchHint.

        Gets or sets the primary image aspect ratio.

        :return: The primary_image_aspect_ratio of this SearchHint.
        :rtype: float
        """
        return self._primary_image_aspect_ratio

    @primary_image_aspect_ratio.setter
    def primary_image_aspect_ratio(self, primary_image_aspect_ratio):
        """Sets the primary_image_aspect_ratio of this SearchHint.

        Gets or sets the primary image aspect ratio.

        :param primary_image_aspect_ratio: The primary_image_aspect_ratio of this SearchHint.
        :type primary_image_aspect_ratio: float
        """

        self._primary_image_aspect_ratio = primary_image_aspect_ratio

    @property
    def primary_image_tag(self):
        """Gets the primary_image_tag of this SearchHint.

        Gets or sets the image tag.

        :return: The primary_image_tag of this SearchHint.
        :rtype: str
        """
        return self._primary_image_tag

    @primary_image_tag.setter
    def primary_image_tag(self, primary_image_tag):
        """Sets the primary_image_tag of this SearchHint.

        Gets or sets the image tag.

        :param primary_image_tag: The primary_image_tag of this SearchHint.
        :type primary_image_tag: str
        """

        self._primary_image_tag = primary_image_tag

    @property
    def production_year(self):
        """Gets the production_year of this SearchHint.

        Gets or sets the production year.

        :return: The production_year of this SearchHint.
        :rtype: int
        """
        return self._production_year

    @production_year.setter
    def production_year(self, production_year):
        """Sets the production_year of this SearchHint.

        Gets or sets the production year.

        :param production_year: The production_year of this SearchHint.
        :type production_year: int
        """

        self._production_year = production_year

    @property
    def run_time_ticks(self):
        """Gets the run_time_ticks of this SearchHint.

        Gets or sets the run time ticks.

        :return: The run_time_ticks of this SearchHint.
        :rtype: int
        """
        return self._run_time_ticks

    @run_time_ticks.setter
    def run_time_ticks(self, run_time_ticks):
        """Sets the run_time_ticks of this SearchHint.

        Gets or sets the run time ticks.

        :param run_time_ticks: The run_time_ticks of this SearchHint.
        :type run_time_ticks: int
        """

        self._run_time_ticks = run_time_ticks

    @property
    def series(self):
        """Gets the series of this SearchHint.

        Gets or sets the series.

        :return: The series of this SearchHint.
        :rtype: str
        """
        return self._series

    @series.setter
    def series(self, series):
        """Sets the series of this SearchHint.

        Gets or sets the series.

        :param series: The series of this SearchHint.
        :type series: str
        """

        self._series = series

    @property
    def song_count(self):
        """Gets the song_count of this SearchHint.

        Gets or sets the song count.

        :return: The song_count of this SearchHint.
        :rtype: int
        """
        return self._song_count

    @song_count.setter
    def song_count(self, song_count):
        """Sets the song_count of this SearchHint.

        Gets or sets the song count.

        :param song_count: The song_count of this SearchHint.
        :type song_count: int
        """

        self._song_count = song_count

    @property
    def start_date(self):
        """Gets the start_date of this SearchHint.


        :return: The start_date of this SearchHint.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this SearchHint.


        :param start_date: The start_date of this SearchHint.
        :type start_date: datetime
        """

        self._start_date = start_date

    @property
    def status(self):
        """Gets the status of this SearchHint.


        :return: The status of this SearchHint.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SearchHint.


        :param status: The status of this SearchHint.
        :type status: str
        """

        self._status = status

    @property
    def thumb_image_item_id(self):
        """Gets the thumb_image_item_id of this SearchHint.

        Gets or sets the thumb image item identifier.

        :return: The thumb_image_item_id of this SearchHint.
        :rtype: str
        """
        return self._thumb_image_item_id

    @thumb_image_item_id.setter
    def thumb_image_item_id(self, thumb_image_item_id):
        """Sets the thumb_image_item_id of this SearchHint.

        Gets or sets the thumb image item identifier.

        :param thumb_image_item_id: The thumb_image_item_id of this SearchHint.
        :type thumb_image_item_id: str
        """

        self._thumb_image_item_id = thumb_image_item_id

    @property
    def thumb_image_tag(self):
        """Gets the thumb_image_tag of this SearchHint.

        Gets or sets the thumb image tag.

        :return: The thumb_image_tag of this SearchHint.
        :rtype: str
        """
        return self._thumb_image_tag

    @thumb_image_tag.setter
    def thumb_image_tag(self, thumb_image_tag):
        """Sets the thumb_image_tag of this SearchHint.

        Gets or sets the thumb image tag.

        :param thumb_image_tag: The thumb_image_tag of this SearchHint.
        :type thumb_image_tag: str
        """

        self._thumb_image_tag = thumb_image_tag

    @property
    def type(self):
        """Gets the type of this SearchHint.

        Gets or sets the type.

        :return: The type of this SearchHint.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this SearchHint.

        Gets or sets the type.

        :param type: The type of this SearchHint.
        :type type: str
        """

        self._type = type
