/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SearchHint model module.
 * @module model/SearchHint
 * @version v1
 */
class SearchHint {
    /**
     * Constructs a new <code>SearchHint</code>.
     * Class SearchHintResult.
     * @alias module:model/SearchHint
     */
    constructor() { 
        
        SearchHint.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SearchHint</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchHint} obj Optional instance to populate.
     * @return {module:model/SearchHint} The populated <code>SearchHint</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchHint();

            if (data.hasOwnProperty('Album')) {
                obj['Album'] = ApiClient.convertToType(data['Album'], 'String');
            }
            if (data.hasOwnProperty('AlbumArtist')) {
                obj['AlbumArtist'] = ApiClient.convertToType(data['AlbumArtist'], 'String');
            }
            if (data.hasOwnProperty('AlbumId')) {
                obj['AlbumId'] = ApiClient.convertToType(data['AlbumId'], 'String');
            }
            if (data.hasOwnProperty('Artists')) {
                obj['Artists'] = ApiClient.convertToType(data['Artists'], ['String']);
            }
            if (data.hasOwnProperty('BackdropImageItemId')) {
                obj['BackdropImageItemId'] = ApiClient.convertToType(data['BackdropImageItemId'], 'String');
            }
            if (data.hasOwnProperty('BackdropImageTag')) {
                obj['BackdropImageTag'] = ApiClient.convertToType(data['BackdropImageTag'], 'String');
            }
            if (data.hasOwnProperty('ChannelId')) {
                obj['ChannelId'] = ApiClient.convertToType(data['ChannelId'], 'String');
            }
            if (data.hasOwnProperty('ChannelName')) {
                obj['ChannelName'] = ApiClient.convertToType(data['ChannelName'], 'String');
            }
            if (data.hasOwnProperty('EndDate')) {
                obj['EndDate'] = ApiClient.convertToType(data['EndDate'], 'Date');
            }
            if (data.hasOwnProperty('EpisodeCount')) {
                obj['EpisodeCount'] = ApiClient.convertToType(data['EpisodeCount'], 'Number');
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('IndexNumber')) {
                obj['IndexNumber'] = ApiClient.convertToType(data['IndexNumber'], 'Number');
            }
            if (data.hasOwnProperty('IsFolder')) {
                obj['IsFolder'] = ApiClient.convertToType(data['IsFolder'], 'Boolean');
            }
            if (data.hasOwnProperty('ItemId')) {
                obj['ItemId'] = ApiClient.convertToType(data['ItemId'], 'String');
            }
            if (data.hasOwnProperty('MatchedTerm')) {
                obj['MatchedTerm'] = ApiClient.convertToType(data['MatchedTerm'], 'String');
            }
            if (data.hasOwnProperty('MediaType')) {
                obj['MediaType'] = ApiClient.convertToType(data['MediaType'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('ParentIndexNumber')) {
                obj['ParentIndexNumber'] = ApiClient.convertToType(data['ParentIndexNumber'], 'Number');
            }
            if (data.hasOwnProperty('PrimaryImageAspectRatio')) {
                obj['PrimaryImageAspectRatio'] = ApiClient.convertToType(data['PrimaryImageAspectRatio'], 'Number');
            }
            if (data.hasOwnProperty('PrimaryImageTag')) {
                obj['PrimaryImageTag'] = ApiClient.convertToType(data['PrimaryImageTag'], 'String');
            }
            if (data.hasOwnProperty('ProductionYear')) {
                obj['ProductionYear'] = ApiClient.convertToType(data['ProductionYear'], 'Number');
            }
            if (data.hasOwnProperty('RunTimeTicks')) {
                obj['RunTimeTicks'] = ApiClient.convertToType(data['RunTimeTicks'], 'Number');
            }
            if (data.hasOwnProperty('Series')) {
                obj['Series'] = ApiClient.convertToType(data['Series'], 'String');
            }
            if (data.hasOwnProperty('SongCount')) {
                obj['SongCount'] = ApiClient.convertToType(data['SongCount'], 'Number');
            }
            if (data.hasOwnProperty('StartDate')) {
                obj['StartDate'] = ApiClient.convertToType(data['StartDate'], 'Date');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
            if (data.hasOwnProperty('ThumbImageItemId')) {
                obj['ThumbImageItemId'] = ApiClient.convertToType(data['ThumbImageItemId'], 'String');
            }
            if (data.hasOwnProperty('ThumbImageTag')) {
                obj['ThumbImageTag'] = ApiClient.convertToType(data['ThumbImageTag'], 'String');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchHint</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchHint</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Album'] && !(typeof data['Album'] === 'string' || data['Album'] instanceof String)) {
            throw new Error("Expected the field `Album` to be a primitive type in the JSON string but got " + data['Album']);
        }
        // ensure the json data is a string
        if (data['AlbumArtist'] && !(typeof data['AlbumArtist'] === 'string' || data['AlbumArtist'] instanceof String)) {
            throw new Error("Expected the field `AlbumArtist` to be a primitive type in the JSON string but got " + data['AlbumArtist']);
        }
        // ensure the json data is a string
        if (data['AlbumId'] && !(typeof data['AlbumId'] === 'string' || data['AlbumId'] instanceof String)) {
            throw new Error("Expected the field `AlbumId` to be a primitive type in the JSON string but got " + data['AlbumId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Artists'])) {
            throw new Error("Expected the field `Artists` to be an array in the JSON data but got " + data['Artists']);
        }
        // ensure the json data is a string
        if (data['BackdropImageItemId'] && !(typeof data['BackdropImageItemId'] === 'string' || data['BackdropImageItemId'] instanceof String)) {
            throw new Error("Expected the field `BackdropImageItemId` to be a primitive type in the JSON string but got " + data['BackdropImageItemId']);
        }
        // ensure the json data is a string
        if (data['BackdropImageTag'] && !(typeof data['BackdropImageTag'] === 'string' || data['BackdropImageTag'] instanceof String)) {
            throw new Error("Expected the field `BackdropImageTag` to be a primitive type in the JSON string but got " + data['BackdropImageTag']);
        }
        // ensure the json data is a string
        if (data['ChannelId'] && !(typeof data['ChannelId'] === 'string' || data['ChannelId'] instanceof String)) {
            throw new Error("Expected the field `ChannelId` to be a primitive type in the JSON string but got " + data['ChannelId']);
        }
        // ensure the json data is a string
        if (data['ChannelName'] && !(typeof data['ChannelName'] === 'string' || data['ChannelName'] instanceof String)) {
            throw new Error("Expected the field `ChannelName` to be a primitive type in the JSON string but got " + data['ChannelName']);
        }
        // ensure the json data is a string
        if (data['Id'] && !(typeof data['Id'] === 'string' || data['Id'] instanceof String)) {
            throw new Error("Expected the field `Id` to be a primitive type in the JSON string but got " + data['Id']);
        }
        // ensure the json data is a string
        if (data['ItemId'] && !(typeof data['ItemId'] === 'string' || data['ItemId'] instanceof String)) {
            throw new Error("Expected the field `ItemId` to be a primitive type in the JSON string but got " + data['ItemId']);
        }
        // ensure the json data is a string
        if (data['MatchedTerm'] && !(typeof data['MatchedTerm'] === 'string' || data['MatchedTerm'] instanceof String)) {
            throw new Error("Expected the field `MatchedTerm` to be a primitive type in the JSON string but got " + data['MatchedTerm']);
        }
        // ensure the json data is a string
        if (data['MediaType'] && !(typeof data['MediaType'] === 'string' || data['MediaType'] instanceof String)) {
            throw new Error("Expected the field `MediaType` to be a primitive type in the JSON string but got " + data['MediaType']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['PrimaryImageTag'] && !(typeof data['PrimaryImageTag'] === 'string' || data['PrimaryImageTag'] instanceof String)) {
            throw new Error("Expected the field `PrimaryImageTag` to be a primitive type in the JSON string but got " + data['PrimaryImageTag']);
        }
        // ensure the json data is a string
        if (data['Series'] && !(typeof data['Series'] === 'string' || data['Series'] instanceof String)) {
            throw new Error("Expected the field `Series` to be a primitive type in the JSON string but got " + data['Series']);
        }
        // ensure the json data is a string
        if (data['Status'] && !(typeof data['Status'] === 'string' || data['Status'] instanceof String)) {
            throw new Error("Expected the field `Status` to be a primitive type in the JSON string but got " + data['Status']);
        }
        // ensure the json data is a string
        if (data['ThumbImageItemId'] && !(typeof data['ThumbImageItemId'] === 'string' || data['ThumbImageItemId'] instanceof String)) {
            throw new Error("Expected the field `ThumbImageItemId` to be a primitive type in the JSON string but got " + data['ThumbImageItemId']);
        }
        // ensure the json data is a string
        if (data['ThumbImageTag'] && !(typeof data['ThumbImageTag'] === 'string' || data['ThumbImageTag'] instanceof String)) {
            throw new Error("Expected the field `ThumbImageTag` to be a primitive type in the JSON string but got " + data['ThumbImageTag']);
        }
        // ensure the json data is a string
        if (data['Type'] && !(typeof data['Type'] === 'string' || data['Type'] instanceof String)) {
            throw new Error("Expected the field `Type` to be a primitive type in the JSON string but got " + data['Type']);
        }

        return true;
    }


}



/**
 * Gets or sets the album.
 * @member {String} Album
 */
SearchHint.prototype['Album'] = undefined;

/**
 * Gets or sets the album artist.
 * @member {String} AlbumArtist
 */
SearchHint.prototype['AlbumArtist'] = undefined;

/**
 * @member {String} AlbumId
 */
SearchHint.prototype['AlbumId'] = undefined;

/**
 * Gets or sets the artists.
 * @member {Array.<String>} Artists
 */
SearchHint.prototype['Artists'] = undefined;

/**
 * Gets or sets the backdrop image item identifier.
 * @member {String} BackdropImageItemId
 */
SearchHint.prototype['BackdropImageItemId'] = undefined;

/**
 * Gets or sets the backdrop image tag.
 * @member {String} BackdropImageTag
 */
SearchHint.prototype['BackdropImageTag'] = undefined;

/**
 * Gets or sets the channel identifier.
 * @member {String} ChannelId
 */
SearchHint.prototype['ChannelId'] = undefined;

/**
 * Gets or sets the name of the channel.
 * @member {String} ChannelName
 */
SearchHint.prototype['ChannelName'] = undefined;

/**
 * @member {Date} EndDate
 */
SearchHint.prototype['EndDate'] = undefined;

/**
 * Gets or sets the episode count.
 * @member {Number} EpisodeCount
 */
SearchHint.prototype['EpisodeCount'] = undefined;

/**
 * @member {String} Id
 */
SearchHint.prototype['Id'] = undefined;

/**
 * Gets or sets the index number.
 * @member {Number} IndexNumber
 */
SearchHint.prototype['IndexNumber'] = undefined;

/**
 * @member {Boolean} IsFolder
 */
SearchHint.prototype['IsFolder'] = undefined;

/**
 * Gets or sets the item id.
 * @member {String} ItemId
 */
SearchHint.prototype['ItemId'] = undefined;

/**
 * Gets or sets the matched term.
 * @member {String} MatchedTerm
 */
SearchHint.prototype['MatchedTerm'] = undefined;

/**
 * Gets or sets the type of the media.
 * @member {String} MediaType
 */
SearchHint.prototype['MediaType'] = undefined;

/**
 * Gets or sets the name.
 * @member {String} Name
 */
SearchHint.prototype['Name'] = undefined;

/**
 * Gets or sets the parent index number.
 * @member {Number} ParentIndexNumber
 */
SearchHint.prototype['ParentIndexNumber'] = undefined;

/**
 * Gets or sets the primary image aspect ratio.
 * @member {Number} PrimaryImageAspectRatio
 */
SearchHint.prototype['PrimaryImageAspectRatio'] = undefined;

/**
 * Gets or sets the image tag.
 * @member {String} PrimaryImageTag
 */
SearchHint.prototype['PrimaryImageTag'] = undefined;

/**
 * Gets or sets the production year.
 * @member {Number} ProductionYear
 */
SearchHint.prototype['ProductionYear'] = undefined;

/**
 * Gets or sets the run time ticks.
 * @member {Number} RunTimeTicks
 */
SearchHint.prototype['RunTimeTicks'] = undefined;

/**
 * Gets or sets the series.
 * @member {String} Series
 */
SearchHint.prototype['Series'] = undefined;

/**
 * Gets or sets the song count.
 * @member {Number} SongCount
 */
SearchHint.prototype['SongCount'] = undefined;

/**
 * @member {Date} StartDate
 */
SearchHint.prototype['StartDate'] = undefined;

/**
 * @member {String} Status
 */
SearchHint.prototype['Status'] = undefined;

/**
 * Gets or sets the thumb image item identifier.
 * @member {String} ThumbImageItemId
 */
SearchHint.prototype['ThumbImageItemId'] = undefined;

/**
 * Gets or sets the thumb image tag.
 * @member {String} ThumbImageTag
 */
SearchHint.prototype['ThumbImageTag'] = undefined;

/**
 * Gets or sets the type.
 * @member {String} Type
 */
SearchHint.prototype['Type'] = undefined;






export default SearchHint;

