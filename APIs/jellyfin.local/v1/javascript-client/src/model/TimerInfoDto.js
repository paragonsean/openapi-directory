/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BaseItemDto from './BaseItemDto';
import KeepUntil from './KeepUntil';
import RecordingStatus from './RecordingStatus';

/**
 * The TimerInfoDto model module.
 * @module model/TimerInfoDto
 * @version v1
 */
class TimerInfoDto {
    /**
     * Constructs a new <code>TimerInfoDto</code>.
     * @alias module:model/TimerInfoDto
     */
    constructor() { 
        
        TimerInfoDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TimerInfoDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TimerInfoDto} obj Optional instance to populate.
     * @return {module:model/TimerInfoDto} The populated <code>TimerInfoDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TimerInfoDto();

            if (data.hasOwnProperty('ChannelId')) {
                obj['ChannelId'] = ApiClient.convertToType(data['ChannelId'], 'String');
            }
            if (data.hasOwnProperty('ChannelName')) {
                obj['ChannelName'] = ApiClient.convertToType(data['ChannelName'], 'String');
            }
            if (data.hasOwnProperty('ChannelPrimaryImageTag')) {
                obj['ChannelPrimaryImageTag'] = ApiClient.convertToType(data['ChannelPrimaryImageTag'], 'String');
            }
            if (data.hasOwnProperty('EndDate')) {
                obj['EndDate'] = ApiClient.convertToType(data['EndDate'], 'Date');
            }
            if (data.hasOwnProperty('ExternalChannelId')) {
                obj['ExternalChannelId'] = ApiClient.convertToType(data['ExternalChannelId'], 'String');
            }
            if (data.hasOwnProperty('ExternalId')) {
                obj['ExternalId'] = ApiClient.convertToType(data['ExternalId'], 'String');
            }
            if (data.hasOwnProperty('ExternalProgramId')) {
                obj['ExternalProgramId'] = ApiClient.convertToType(data['ExternalProgramId'], 'String');
            }
            if (data.hasOwnProperty('ExternalSeriesTimerId')) {
                obj['ExternalSeriesTimerId'] = ApiClient.convertToType(data['ExternalSeriesTimerId'], 'String');
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('IsPostPaddingRequired')) {
                obj['IsPostPaddingRequired'] = ApiClient.convertToType(data['IsPostPaddingRequired'], 'Boolean');
            }
            if (data.hasOwnProperty('IsPrePaddingRequired')) {
                obj['IsPrePaddingRequired'] = ApiClient.convertToType(data['IsPrePaddingRequired'], 'Boolean');
            }
            if (data.hasOwnProperty('KeepUntil')) {
                obj['KeepUntil'] = KeepUntil.constructFromObject(data['KeepUntil']);
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Overview')) {
                obj['Overview'] = ApiClient.convertToType(data['Overview'], 'String');
            }
            if (data.hasOwnProperty('ParentBackdropImageTags')) {
                obj['ParentBackdropImageTags'] = ApiClient.convertToType(data['ParentBackdropImageTags'], ['String']);
            }
            if (data.hasOwnProperty('ParentBackdropItemId')) {
                obj['ParentBackdropItemId'] = ApiClient.convertToType(data['ParentBackdropItemId'], 'String');
            }
            if (data.hasOwnProperty('PostPaddingSeconds')) {
                obj['PostPaddingSeconds'] = ApiClient.convertToType(data['PostPaddingSeconds'], 'Number');
            }
            if (data.hasOwnProperty('PrePaddingSeconds')) {
                obj['PrePaddingSeconds'] = ApiClient.convertToType(data['PrePaddingSeconds'], 'Number');
            }
            if (data.hasOwnProperty('Priority')) {
                obj['Priority'] = ApiClient.convertToType(data['Priority'], 'Number');
            }
            if (data.hasOwnProperty('ProgramId')) {
                obj['ProgramId'] = ApiClient.convertToType(data['ProgramId'], 'String');
            }
            if (data.hasOwnProperty('ProgramInfo')) {
                obj['ProgramInfo'] = BaseItemDto.constructFromObject(data['ProgramInfo']);
            }
            if (data.hasOwnProperty('RunTimeTicks')) {
                obj['RunTimeTicks'] = ApiClient.convertToType(data['RunTimeTicks'], 'Number');
            }
            if (data.hasOwnProperty('SeriesTimerId')) {
                obj['SeriesTimerId'] = ApiClient.convertToType(data['SeriesTimerId'], 'String');
            }
            if (data.hasOwnProperty('ServerId')) {
                obj['ServerId'] = ApiClient.convertToType(data['ServerId'], 'String');
            }
            if (data.hasOwnProperty('ServiceName')) {
                obj['ServiceName'] = ApiClient.convertToType(data['ServiceName'], 'String');
            }
            if (data.hasOwnProperty('StartDate')) {
                obj['StartDate'] = ApiClient.convertToType(data['StartDate'], 'Date');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = RecordingStatus.constructFromObject(data['Status']);
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TimerInfoDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TimerInfoDto</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ChannelId'] && !(typeof data['ChannelId'] === 'string' || data['ChannelId'] instanceof String)) {
            throw new Error("Expected the field `ChannelId` to be a primitive type in the JSON string but got " + data['ChannelId']);
        }
        // ensure the json data is a string
        if (data['ChannelName'] && !(typeof data['ChannelName'] === 'string' || data['ChannelName'] instanceof String)) {
            throw new Error("Expected the field `ChannelName` to be a primitive type in the JSON string but got " + data['ChannelName']);
        }
        // ensure the json data is a string
        if (data['ChannelPrimaryImageTag'] && !(typeof data['ChannelPrimaryImageTag'] === 'string' || data['ChannelPrimaryImageTag'] instanceof String)) {
            throw new Error("Expected the field `ChannelPrimaryImageTag` to be a primitive type in the JSON string but got " + data['ChannelPrimaryImageTag']);
        }
        // ensure the json data is a string
        if (data['ExternalChannelId'] && !(typeof data['ExternalChannelId'] === 'string' || data['ExternalChannelId'] instanceof String)) {
            throw new Error("Expected the field `ExternalChannelId` to be a primitive type in the JSON string but got " + data['ExternalChannelId']);
        }
        // ensure the json data is a string
        if (data['ExternalId'] && !(typeof data['ExternalId'] === 'string' || data['ExternalId'] instanceof String)) {
            throw new Error("Expected the field `ExternalId` to be a primitive type in the JSON string but got " + data['ExternalId']);
        }
        // ensure the json data is a string
        if (data['ExternalProgramId'] && !(typeof data['ExternalProgramId'] === 'string' || data['ExternalProgramId'] instanceof String)) {
            throw new Error("Expected the field `ExternalProgramId` to be a primitive type in the JSON string but got " + data['ExternalProgramId']);
        }
        // ensure the json data is a string
        if (data['ExternalSeriesTimerId'] && !(typeof data['ExternalSeriesTimerId'] === 'string' || data['ExternalSeriesTimerId'] instanceof String)) {
            throw new Error("Expected the field `ExternalSeriesTimerId` to be a primitive type in the JSON string but got " + data['ExternalSeriesTimerId']);
        }
        // ensure the json data is a string
        if (data['Id'] && !(typeof data['Id'] === 'string' || data['Id'] instanceof String)) {
            throw new Error("Expected the field `Id` to be a primitive type in the JSON string but got " + data['Id']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['Overview'] && !(typeof data['Overview'] === 'string' || data['Overview'] instanceof String)) {
            throw new Error("Expected the field `Overview` to be a primitive type in the JSON string but got " + data['Overview']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ParentBackdropImageTags'])) {
            throw new Error("Expected the field `ParentBackdropImageTags` to be an array in the JSON data but got " + data['ParentBackdropImageTags']);
        }
        // ensure the json data is a string
        if (data['ParentBackdropItemId'] && !(typeof data['ParentBackdropItemId'] === 'string' || data['ParentBackdropItemId'] instanceof String)) {
            throw new Error("Expected the field `ParentBackdropItemId` to be a primitive type in the JSON string but got " + data['ParentBackdropItemId']);
        }
        // ensure the json data is a string
        if (data['ProgramId'] && !(typeof data['ProgramId'] === 'string' || data['ProgramId'] instanceof String)) {
            throw new Error("Expected the field `ProgramId` to be a primitive type in the JSON string but got " + data['ProgramId']);
        }
        // validate the optional field `ProgramInfo`
        if (data['ProgramInfo']) { // data not null
          BaseItemDto.validateJSON(data['ProgramInfo']);
        }
        // ensure the json data is a string
        if (data['SeriesTimerId'] && !(typeof data['SeriesTimerId'] === 'string' || data['SeriesTimerId'] instanceof String)) {
            throw new Error("Expected the field `SeriesTimerId` to be a primitive type in the JSON string but got " + data['SeriesTimerId']);
        }
        // ensure the json data is a string
        if (data['ServerId'] && !(typeof data['ServerId'] === 'string' || data['ServerId'] instanceof String)) {
            throw new Error("Expected the field `ServerId` to be a primitive type in the JSON string but got " + data['ServerId']);
        }
        // ensure the json data is a string
        if (data['ServiceName'] && !(typeof data['ServiceName'] === 'string' || data['ServiceName'] instanceof String)) {
            throw new Error("Expected the field `ServiceName` to be a primitive type in the JSON string but got " + data['ServiceName']);
        }
        // ensure the json data is a string
        if (data['Type'] && !(typeof data['Type'] === 'string' || data['Type'] instanceof String)) {
            throw new Error("Expected the field `Type` to be a primitive type in the JSON string but got " + data['Type']);
        }

        return true;
    }


}



/**
 * ChannelId of the recording.
 * @member {String} ChannelId
 */
TimerInfoDto.prototype['ChannelId'] = undefined;

/**
 * ChannelName of the recording.
 * @member {String} ChannelName
 */
TimerInfoDto.prototype['ChannelName'] = undefined;

/**
 * @member {String} ChannelPrimaryImageTag
 */
TimerInfoDto.prototype['ChannelPrimaryImageTag'] = undefined;

/**
 * The end date of the recording, in UTC.
 * @member {Date} EndDate
 */
TimerInfoDto.prototype['EndDate'] = undefined;

/**
 * Gets or sets the external channel identifier.
 * @member {String} ExternalChannelId
 */
TimerInfoDto.prototype['ExternalChannelId'] = undefined;

/**
 * Gets or sets the external identifier.
 * @member {String} ExternalId
 */
TimerInfoDto.prototype['ExternalId'] = undefined;

/**
 * Gets or sets the external program identifier.
 * @member {String} ExternalProgramId
 */
TimerInfoDto.prototype['ExternalProgramId'] = undefined;

/**
 * Gets or sets the external series timer identifier.
 * @member {String} ExternalSeriesTimerId
 */
TimerInfoDto.prototype['ExternalSeriesTimerId'] = undefined;

/**
 * Id of the recording.
 * @member {String} Id
 */
TimerInfoDto.prototype['Id'] = undefined;

/**
 * Gets or sets a value indicating whether this instance is post padding required.
 * @member {Boolean} IsPostPaddingRequired
 */
TimerInfoDto.prototype['IsPostPaddingRequired'] = undefined;

/**
 * Gets or sets a value indicating whether this instance is pre padding required.
 * @member {Boolean} IsPrePaddingRequired
 */
TimerInfoDto.prototype['IsPrePaddingRequired'] = undefined;

/**
 * @member {module:model/KeepUntil} KeepUntil
 */
TimerInfoDto.prototype['KeepUntil'] = undefined;

/**
 * Name of the recording.
 * @member {String} Name
 */
TimerInfoDto.prototype['Name'] = undefined;

/**
 * Description of the recording.
 * @member {String} Overview
 */
TimerInfoDto.prototype['Overview'] = undefined;

/**
 * Gets or sets the parent backdrop image tags.
 * @member {Array.<String>} ParentBackdropImageTags
 */
TimerInfoDto.prototype['ParentBackdropImageTags'] = undefined;

/**
 * If the item does not have any backdrops, this will hold the Id of the Parent that has one.
 * @member {String} ParentBackdropItemId
 */
TimerInfoDto.prototype['ParentBackdropItemId'] = undefined;

/**
 * Gets or sets the post padding seconds.
 * @member {Number} PostPaddingSeconds
 */
TimerInfoDto.prototype['PostPaddingSeconds'] = undefined;

/**
 * Gets or sets the pre padding seconds.
 * @member {Number} PrePaddingSeconds
 */
TimerInfoDto.prototype['PrePaddingSeconds'] = undefined;

/**
 * Gets or sets the priority.
 * @member {Number} Priority
 */
TimerInfoDto.prototype['Priority'] = undefined;

/**
 * Gets or sets the program identifier.
 * @member {String} ProgramId
 */
TimerInfoDto.prototype['ProgramId'] = undefined;

/**
 * @member {module:model/BaseItemDto} ProgramInfo
 */
TimerInfoDto.prototype['ProgramInfo'] = undefined;

/**
 * Gets or sets the run time ticks.
 * @member {Number} RunTimeTicks
 */
TimerInfoDto.prototype['RunTimeTicks'] = undefined;

/**
 * Gets or sets the series timer identifier.
 * @member {String} SeriesTimerId
 */
TimerInfoDto.prototype['SeriesTimerId'] = undefined;

/**
 * Gets or sets the server identifier.
 * @member {String} ServerId
 */
TimerInfoDto.prototype['ServerId'] = undefined;

/**
 * Gets or sets the name of the service.
 * @member {String} ServiceName
 */
TimerInfoDto.prototype['ServiceName'] = undefined;

/**
 * The start date of the recording, in UTC.
 * @member {Date} StartDate
 */
TimerInfoDto.prototype['StartDate'] = undefined;

/**
 * @member {module:model/RecordingStatus} Status
 */
TimerInfoDto.prototype['Status'] = undefined;

/**
 * @member {String} Type
 */
TimerInfoDto.prototype['Type'] = undefined;






export default TimerInfoDto;

