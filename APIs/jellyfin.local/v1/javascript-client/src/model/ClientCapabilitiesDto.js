/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DeviceProfile from './DeviceProfile';
import GeneralCommandType from './GeneralCommandType';

/**
 * The ClientCapabilitiesDto model module.
 * @module model/ClientCapabilitiesDto
 * @version v1
 */
class ClientCapabilitiesDto {
    /**
     * Constructs a new <code>ClientCapabilitiesDto</code>.
     * Client capabilities dto.
     * @alias module:model/ClientCapabilitiesDto
     */
    constructor() { 
        
        ClientCapabilitiesDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClientCapabilitiesDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClientCapabilitiesDto} obj Optional instance to populate.
     * @return {module:model/ClientCapabilitiesDto} The populated <code>ClientCapabilitiesDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClientCapabilitiesDto();

            if (data.hasOwnProperty('AppStoreUrl')) {
                obj['AppStoreUrl'] = ApiClient.convertToType(data['AppStoreUrl'], 'String');
            }
            if (data.hasOwnProperty('DeviceProfile')) {
                obj['DeviceProfile'] = DeviceProfile.constructFromObject(data['DeviceProfile']);
            }
            if (data.hasOwnProperty('IconUrl')) {
                obj['IconUrl'] = ApiClient.convertToType(data['IconUrl'], 'String');
            }
            if (data.hasOwnProperty('MessageCallbackUrl')) {
                obj['MessageCallbackUrl'] = ApiClient.convertToType(data['MessageCallbackUrl'], 'String');
            }
            if (data.hasOwnProperty('PlayableMediaTypes')) {
                obj['PlayableMediaTypes'] = ApiClient.convertToType(data['PlayableMediaTypes'], ['String']);
            }
            if (data.hasOwnProperty('SupportedCommands')) {
                obj['SupportedCommands'] = ApiClient.convertToType(data['SupportedCommands'], [GeneralCommandType]);
            }
            if (data.hasOwnProperty('SupportsContentUploading')) {
                obj['SupportsContentUploading'] = ApiClient.convertToType(data['SupportsContentUploading'], 'Boolean');
            }
            if (data.hasOwnProperty('SupportsMediaControl')) {
                obj['SupportsMediaControl'] = ApiClient.convertToType(data['SupportsMediaControl'], 'Boolean');
            }
            if (data.hasOwnProperty('SupportsPersistentIdentifier')) {
                obj['SupportsPersistentIdentifier'] = ApiClient.convertToType(data['SupportsPersistentIdentifier'], 'Boolean');
            }
            if (data.hasOwnProperty('SupportsSync')) {
                obj['SupportsSync'] = ApiClient.convertToType(data['SupportsSync'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClientCapabilitiesDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClientCapabilitiesDto</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['AppStoreUrl'] && !(typeof data['AppStoreUrl'] === 'string' || data['AppStoreUrl'] instanceof String)) {
            throw new Error("Expected the field `AppStoreUrl` to be a primitive type in the JSON string but got " + data['AppStoreUrl']);
        }
        // validate the optional field `DeviceProfile`
        if (data['DeviceProfile']) { // data not null
          DeviceProfile.validateJSON(data['DeviceProfile']);
        }
        // ensure the json data is a string
        if (data['IconUrl'] && !(typeof data['IconUrl'] === 'string' || data['IconUrl'] instanceof String)) {
            throw new Error("Expected the field `IconUrl` to be a primitive type in the JSON string but got " + data['IconUrl']);
        }
        // ensure the json data is a string
        if (data['MessageCallbackUrl'] && !(typeof data['MessageCallbackUrl'] === 'string' || data['MessageCallbackUrl'] instanceof String)) {
            throw new Error("Expected the field `MessageCallbackUrl` to be a primitive type in the JSON string but got " + data['MessageCallbackUrl']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['PlayableMediaTypes'])) {
            throw new Error("Expected the field `PlayableMediaTypes` to be an array in the JSON data but got " + data['PlayableMediaTypes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['SupportedCommands'])) {
            throw new Error("Expected the field `SupportedCommands` to be an array in the JSON data but got " + data['SupportedCommands']);
        }

        return true;
    }


}



/**
 * Gets or sets the app store url.
 * @member {String} AppStoreUrl
 */
ClientCapabilitiesDto.prototype['AppStoreUrl'] = undefined;

/**
 * @member {module:model/DeviceProfile} DeviceProfile
 */
ClientCapabilitiesDto.prototype['DeviceProfile'] = undefined;

/**
 * Gets or sets the icon url.
 * @member {String} IconUrl
 */
ClientCapabilitiesDto.prototype['IconUrl'] = undefined;

/**
 * Gets or sets the message callback url.
 * @member {String} MessageCallbackUrl
 */
ClientCapabilitiesDto.prototype['MessageCallbackUrl'] = undefined;

/**
 * Gets or sets the list of playable media types.
 * @member {Array.<String>} PlayableMediaTypes
 */
ClientCapabilitiesDto.prototype['PlayableMediaTypes'] = undefined;

/**
 * Gets or sets the list of supported commands.
 * @member {Array.<module:model/GeneralCommandType>} SupportedCommands
 */
ClientCapabilitiesDto.prototype['SupportedCommands'] = undefined;

/**
 * Gets or sets a value indicating whether session supports content uploading.
 * @member {Boolean} SupportsContentUploading
 */
ClientCapabilitiesDto.prototype['SupportsContentUploading'] = undefined;

/**
 * Gets or sets a value indicating whether session supports media control.
 * @member {Boolean} SupportsMediaControl
 */
ClientCapabilitiesDto.prototype['SupportsMediaControl'] = undefined;

/**
 * Gets or sets a value indicating whether session supports a persistent identifier.
 * @member {Boolean} SupportsPersistentIdentifier
 */
ClientCapabilitiesDto.prototype['SupportsPersistentIdentifier'] = undefined;

/**
 * Gets or sets a value indicating whether session supports sync.
 * @member {Boolean} SupportsSync
 */
ClientCapabilitiesDto.prototype['SupportsSync'] = undefined;






export default ClientCapabilitiesDto;

