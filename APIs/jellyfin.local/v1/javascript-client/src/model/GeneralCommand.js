/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GeneralCommandType from './GeneralCommandType';

/**
 * The GeneralCommand model module.
 * @module model/GeneralCommand
 * @version v1
 */
class GeneralCommand {
    /**
     * Constructs a new <code>GeneralCommand</code>.
     * @alias module:model/GeneralCommand
     */
    constructor() { 
        
        GeneralCommand.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GeneralCommand</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GeneralCommand} obj Optional instance to populate.
     * @return {module:model/GeneralCommand} The populated <code>GeneralCommand</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GeneralCommand();

            if (data.hasOwnProperty('Arguments')) {
                obj['Arguments'] = ApiClient.convertToType(data['Arguments'], {'String': 'String'});
            }
            if (data.hasOwnProperty('ControllingUserId')) {
                obj['ControllingUserId'] = ApiClient.convertToType(data['ControllingUserId'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = GeneralCommandType.constructFromObject(data['Name']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GeneralCommand</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GeneralCommand</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ControllingUserId'] && !(typeof data['ControllingUserId'] === 'string' || data['ControllingUserId'] instanceof String)) {
            throw new Error("Expected the field `ControllingUserId` to be a primitive type in the JSON string but got " + data['ControllingUserId']);
        }

        return true;
    }


}



/**
 * @member {Object.<String, String>} Arguments
 */
GeneralCommand.prototype['Arguments'] = undefined;

/**
 * @member {String} ControllingUserId
 */
GeneralCommand.prototype['ControllingUserId'] = undefined;

/**
 * @member {module:model/GeneralCommandType} Name
 */
GeneralCommand.prototype['Name'] = undefined;






export default GeneralCommand;

