/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DayOfWeek from './DayOfWeek';
import DayPattern from './DayPattern';
import KeepUntil from './KeepUntil';

/**
 * The SeriesTimerInfoDto model module.
 * @module model/SeriesTimerInfoDto
 * @version v1
 */
class SeriesTimerInfoDto {
    /**
     * Constructs a new <code>SeriesTimerInfoDto</code>.
     * Class SeriesTimerInfoDto.
     * @alias module:model/SeriesTimerInfoDto
     */
    constructor() { 
        
        SeriesTimerInfoDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SeriesTimerInfoDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SeriesTimerInfoDto} obj Optional instance to populate.
     * @return {module:model/SeriesTimerInfoDto} The populated <code>SeriesTimerInfoDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SeriesTimerInfoDto();

            if (data.hasOwnProperty('ChannelId')) {
                obj['ChannelId'] = ApiClient.convertToType(data['ChannelId'], 'String');
            }
            if (data.hasOwnProperty('ChannelName')) {
                obj['ChannelName'] = ApiClient.convertToType(data['ChannelName'], 'String');
            }
            if (data.hasOwnProperty('ChannelPrimaryImageTag')) {
                obj['ChannelPrimaryImageTag'] = ApiClient.convertToType(data['ChannelPrimaryImageTag'], 'String');
            }
            if (data.hasOwnProperty('DayPattern')) {
                obj['DayPattern'] = DayPattern.constructFromObject(data['DayPattern']);
            }
            if (data.hasOwnProperty('Days')) {
                obj['Days'] = ApiClient.convertToType(data['Days'], [DayOfWeek]);
            }
            if (data.hasOwnProperty('EndDate')) {
                obj['EndDate'] = ApiClient.convertToType(data['EndDate'], 'Date');
            }
            if (data.hasOwnProperty('ExternalChannelId')) {
                obj['ExternalChannelId'] = ApiClient.convertToType(data['ExternalChannelId'], 'String');
            }
            if (data.hasOwnProperty('ExternalId')) {
                obj['ExternalId'] = ApiClient.convertToType(data['ExternalId'], 'String');
            }
            if (data.hasOwnProperty('ExternalProgramId')) {
                obj['ExternalProgramId'] = ApiClient.convertToType(data['ExternalProgramId'], 'String');
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('ImageTags')) {
                obj['ImageTags'] = ApiClient.convertToType(data['ImageTags'], {'String': 'String'});
            }
            if (data.hasOwnProperty('IsPostPaddingRequired')) {
                obj['IsPostPaddingRequired'] = ApiClient.convertToType(data['IsPostPaddingRequired'], 'Boolean');
            }
            if (data.hasOwnProperty('IsPrePaddingRequired')) {
                obj['IsPrePaddingRequired'] = ApiClient.convertToType(data['IsPrePaddingRequired'], 'Boolean');
            }
            if (data.hasOwnProperty('KeepUntil')) {
                obj['KeepUntil'] = KeepUntil.constructFromObject(data['KeepUntil']);
            }
            if (data.hasOwnProperty('KeepUpTo')) {
                obj['KeepUpTo'] = ApiClient.convertToType(data['KeepUpTo'], 'Number');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Overview')) {
                obj['Overview'] = ApiClient.convertToType(data['Overview'], 'String');
            }
            if (data.hasOwnProperty('ParentBackdropImageTags')) {
                obj['ParentBackdropImageTags'] = ApiClient.convertToType(data['ParentBackdropImageTags'], ['String']);
            }
            if (data.hasOwnProperty('ParentBackdropItemId')) {
                obj['ParentBackdropItemId'] = ApiClient.convertToType(data['ParentBackdropItemId'], 'String');
            }
            if (data.hasOwnProperty('ParentPrimaryImageItemId')) {
                obj['ParentPrimaryImageItemId'] = ApiClient.convertToType(data['ParentPrimaryImageItemId'], 'String');
            }
            if (data.hasOwnProperty('ParentPrimaryImageTag')) {
                obj['ParentPrimaryImageTag'] = ApiClient.convertToType(data['ParentPrimaryImageTag'], 'String');
            }
            if (data.hasOwnProperty('ParentThumbImageTag')) {
                obj['ParentThumbImageTag'] = ApiClient.convertToType(data['ParentThumbImageTag'], 'String');
            }
            if (data.hasOwnProperty('ParentThumbItemId')) {
                obj['ParentThumbItemId'] = ApiClient.convertToType(data['ParentThumbItemId'], 'String');
            }
            if (data.hasOwnProperty('PostPaddingSeconds')) {
                obj['PostPaddingSeconds'] = ApiClient.convertToType(data['PostPaddingSeconds'], 'Number');
            }
            if (data.hasOwnProperty('PrePaddingSeconds')) {
                obj['PrePaddingSeconds'] = ApiClient.convertToType(data['PrePaddingSeconds'], 'Number');
            }
            if (data.hasOwnProperty('Priority')) {
                obj['Priority'] = ApiClient.convertToType(data['Priority'], 'Number');
            }
            if (data.hasOwnProperty('ProgramId')) {
                obj['ProgramId'] = ApiClient.convertToType(data['ProgramId'], 'String');
            }
            if (data.hasOwnProperty('RecordAnyChannel')) {
                obj['RecordAnyChannel'] = ApiClient.convertToType(data['RecordAnyChannel'], 'Boolean');
            }
            if (data.hasOwnProperty('RecordAnyTime')) {
                obj['RecordAnyTime'] = ApiClient.convertToType(data['RecordAnyTime'], 'Boolean');
            }
            if (data.hasOwnProperty('RecordNewOnly')) {
                obj['RecordNewOnly'] = ApiClient.convertToType(data['RecordNewOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('ServerId')) {
                obj['ServerId'] = ApiClient.convertToType(data['ServerId'], 'String');
            }
            if (data.hasOwnProperty('ServiceName')) {
                obj['ServiceName'] = ApiClient.convertToType(data['ServiceName'], 'String');
            }
            if (data.hasOwnProperty('SkipEpisodesInLibrary')) {
                obj['SkipEpisodesInLibrary'] = ApiClient.convertToType(data['SkipEpisodesInLibrary'], 'Boolean');
            }
            if (data.hasOwnProperty('StartDate')) {
                obj['StartDate'] = ApiClient.convertToType(data['StartDate'], 'Date');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SeriesTimerInfoDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SeriesTimerInfoDto</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ChannelId'] && !(typeof data['ChannelId'] === 'string' || data['ChannelId'] instanceof String)) {
            throw new Error("Expected the field `ChannelId` to be a primitive type in the JSON string but got " + data['ChannelId']);
        }
        // ensure the json data is a string
        if (data['ChannelName'] && !(typeof data['ChannelName'] === 'string' || data['ChannelName'] instanceof String)) {
            throw new Error("Expected the field `ChannelName` to be a primitive type in the JSON string but got " + data['ChannelName']);
        }
        // ensure the json data is a string
        if (data['ChannelPrimaryImageTag'] && !(typeof data['ChannelPrimaryImageTag'] === 'string' || data['ChannelPrimaryImageTag'] instanceof String)) {
            throw new Error("Expected the field `ChannelPrimaryImageTag` to be a primitive type in the JSON string but got " + data['ChannelPrimaryImageTag']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Days'])) {
            throw new Error("Expected the field `Days` to be an array in the JSON data but got " + data['Days']);
        }
        // ensure the json data is a string
        if (data['ExternalChannelId'] && !(typeof data['ExternalChannelId'] === 'string' || data['ExternalChannelId'] instanceof String)) {
            throw new Error("Expected the field `ExternalChannelId` to be a primitive type in the JSON string but got " + data['ExternalChannelId']);
        }
        // ensure the json data is a string
        if (data['ExternalId'] && !(typeof data['ExternalId'] === 'string' || data['ExternalId'] instanceof String)) {
            throw new Error("Expected the field `ExternalId` to be a primitive type in the JSON string but got " + data['ExternalId']);
        }
        // ensure the json data is a string
        if (data['ExternalProgramId'] && !(typeof data['ExternalProgramId'] === 'string' || data['ExternalProgramId'] instanceof String)) {
            throw new Error("Expected the field `ExternalProgramId` to be a primitive type in the JSON string but got " + data['ExternalProgramId']);
        }
        // ensure the json data is a string
        if (data['Id'] && !(typeof data['Id'] === 'string' || data['Id'] instanceof String)) {
            throw new Error("Expected the field `Id` to be a primitive type in the JSON string but got " + data['Id']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['Overview'] && !(typeof data['Overview'] === 'string' || data['Overview'] instanceof String)) {
            throw new Error("Expected the field `Overview` to be a primitive type in the JSON string but got " + data['Overview']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ParentBackdropImageTags'])) {
            throw new Error("Expected the field `ParentBackdropImageTags` to be an array in the JSON data but got " + data['ParentBackdropImageTags']);
        }
        // ensure the json data is a string
        if (data['ParentBackdropItemId'] && !(typeof data['ParentBackdropItemId'] === 'string' || data['ParentBackdropItemId'] instanceof String)) {
            throw new Error("Expected the field `ParentBackdropItemId` to be a primitive type in the JSON string but got " + data['ParentBackdropItemId']);
        }
        // ensure the json data is a string
        if (data['ParentPrimaryImageItemId'] && !(typeof data['ParentPrimaryImageItemId'] === 'string' || data['ParentPrimaryImageItemId'] instanceof String)) {
            throw new Error("Expected the field `ParentPrimaryImageItemId` to be a primitive type in the JSON string but got " + data['ParentPrimaryImageItemId']);
        }
        // ensure the json data is a string
        if (data['ParentPrimaryImageTag'] && !(typeof data['ParentPrimaryImageTag'] === 'string' || data['ParentPrimaryImageTag'] instanceof String)) {
            throw new Error("Expected the field `ParentPrimaryImageTag` to be a primitive type in the JSON string but got " + data['ParentPrimaryImageTag']);
        }
        // ensure the json data is a string
        if (data['ParentThumbImageTag'] && !(typeof data['ParentThumbImageTag'] === 'string' || data['ParentThumbImageTag'] instanceof String)) {
            throw new Error("Expected the field `ParentThumbImageTag` to be a primitive type in the JSON string but got " + data['ParentThumbImageTag']);
        }
        // ensure the json data is a string
        if (data['ParentThumbItemId'] && !(typeof data['ParentThumbItemId'] === 'string' || data['ParentThumbItemId'] instanceof String)) {
            throw new Error("Expected the field `ParentThumbItemId` to be a primitive type in the JSON string but got " + data['ParentThumbItemId']);
        }
        // ensure the json data is a string
        if (data['ProgramId'] && !(typeof data['ProgramId'] === 'string' || data['ProgramId'] instanceof String)) {
            throw new Error("Expected the field `ProgramId` to be a primitive type in the JSON string but got " + data['ProgramId']);
        }
        // ensure the json data is a string
        if (data['ServerId'] && !(typeof data['ServerId'] === 'string' || data['ServerId'] instanceof String)) {
            throw new Error("Expected the field `ServerId` to be a primitive type in the JSON string but got " + data['ServerId']);
        }
        // ensure the json data is a string
        if (data['ServiceName'] && !(typeof data['ServiceName'] === 'string' || data['ServiceName'] instanceof String)) {
            throw new Error("Expected the field `ServiceName` to be a primitive type in the JSON string but got " + data['ServiceName']);
        }
        // ensure the json data is a string
        if (data['Type'] && !(typeof data['Type'] === 'string' || data['Type'] instanceof String)) {
            throw new Error("Expected the field `Type` to be a primitive type in the JSON string but got " + data['Type']);
        }

        return true;
    }


}



/**
 * ChannelId of the recording.
 * @member {String} ChannelId
 */
SeriesTimerInfoDto.prototype['ChannelId'] = undefined;

/**
 * ChannelName of the recording.
 * @member {String} ChannelName
 */
SeriesTimerInfoDto.prototype['ChannelName'] = undefined;

/**
 * @member {String} ChannelPrimaryImageTag
 */
SeriesTimerInfoDto.prototype['ChannelPrimaryImageTag'] = undefined;

/**
 * @member {module:model/DayPattern} DayPattern
 */
SeriesTimerInfoDto.prototype['DayPattern'] = undefined;

/**
 * Gets or sets the days.
 * @member {Array.<module:model/DayOfWeek>} Days
 */
SeriesTimerInfoDto.prototype['Days'] = undefined;

/**
 * The end date of the recording, in UTC.
 * @member {Date} EndDate
 */
SeriesTimerInfoDto.prototype['EndDate'] = undefined;

/**
 * Gets or sets the external channel identifier.
 * @member {String} ExternalChannelId
 */
SeriesTimerInfoDto.prototype['ExternalChannelId'] = undefined;

/**
 * Gets or sets the external identifier.
 * @member {String} ExternalId
 */
SeriesTimerInfoDto.prototype['ExternalId'] = undefined;

/**
 * Gets or sets the external program identifier.
 * @member {String} ExternalProgramId
 */
SeriesTimerInfoDto.prototype['ExternalProgramId'] = undefined;

/**
 * Id of the recording.
 * @member {String} Id
 */
SeriesTimerInfoDto.prototype['Id'] = undefined;

/**
 * Gets or sets the image tags.
 * @member {Object.<String, String>} ImageTags
 */
SeriesTimerInfoDto.prototype['ImageTags'] = undefined;

/**
 * Gets or sets a value indicating whether this instance is post padding required.
 * @member {Boolean} IsPostPaddingRequired
 */
SeriesTimerInfoDto.prototype['IsPostPaddingRequired'] = undefined;

/**
 * Gets or sets a value indicating whether this instance is pre padding required.
 * @member {Boolean} IsPrePaddingRequired
 */
SeriesTimerInfoDto.prototype['IsPrePaddingRequired'] = undefined;

/**
 * @member {module:model/KeepUntil} KeepUntil
 */
SeriesTimerInfoDto.prototype['KeepUntil'] = undefined;

/**
 * @member {Number} KeepUpTo
 */
SeriesTimerInfoDto.prototype['KeepUpTo'] = undefined;

/**
 * Name of the recording.
 * @member {String} Name
 */
SeriesTimerInfoDto.prototype['Name'] = undefined;

/**
 * Description of the recording.
 * @member {String} Overview
 */
SeriesTimerInfoDto.prototype['Overview'] = undefined;

/**
 * Gets or sets the parent backdrop image tags.
 * @member {Array.<String>} ParentBackdropImageTags
 */
SeriesTimerInfoDto.prototype['ParentBackdropImageTags'] = undefined;

/**
 * If the item does not have any backdrops, this will hold the Id of the Parent that has one.
 * @member {String} ParentBackdropItemId
 */
SeriesTimerInfoDto.prototype['ParentBackdropItemId'] = undefined;

/**
 * Gets or sets the parent primary image item identifier.
 * @member {String} ParentPrimaryImageItemId
 */
SeriesTimerInfoDto.prototype['ParentPrimaryImageItemId'] = undefined;

/**
 * Gets or sets the parent primary image tag.
 * @member {String} ParentPrimaryImageTag
 */
SeriesTimerInfoDto.prototype['ParentPrimaryImageTag'] = undefined;

/**
 * Gets or sets the parent thumb image tag.
 * @member {String} ParentThumbImageTag
 */
SeriesTimerInfoDto.prototype['ParentThumbImageTag'] = undefined;

/**
 * Gets or sets the parent thumb item id.
 * @member {String} ParentThumbItemId
 */
SeriesTimerInfoDto.prototype['ParentThumbItemId'] = undefined;

/**
 * Gets or sets the post padding seconds.
 * @member {Number} PostPaddingSeconds
 */
SeriesTimerInfoDto.prototype['PostPaddingSeconds'] = undefined;

/**
 * Gets or sets the pre padding seconds.
 * @member {Number} PrePaddingSeconds
 */
SeriesTimerInfoDto.prototype['PrePaddingSeconds'] = undefined;

/**
 * Gets or sets the priority.
 * @member {Number} Priority
 */
SeriesTimerInfoDto.prototype['Priority'] = undefined;

/**
 * Gets or sets the program identifier.
 * @member {String} ProgramId
 */
SeriesTimerInfoDto.prototype['ProgramId'] = undefined;

/**
 * Gets or sets a value indicating whether [record any channel].
 * @member {Boolean} RecordAnyChannel
 */
SeriesTimerInfoDto.prototype['RecordAnyChannel'] = undefined;

/**
 * Gets or sets a value indicating whether [record any time].
 * @member {Boolean} RecordAnyTime
 */
SeriesTimerInfoDto.prototype['RecordAnyTime'] = undefined;

/**
 * Gets or sets a value indicating whether [record new only].
 * @member {Boolean} RecordNewOnly
 */
SeriesTimerInfoDto.prototype['RecordNewOnly'] = undefined;

/**
 * Gets or sets the server identifier.
 * @member {String} ServerId
 */
SeriesTimerInfoDto.prototype['ServerId'] = undefined;

/**
 * Gets or sets the name of the service.
 * @member {String} ServiceName
 */
SeriesTimerInfoDto.prototype['ServiceName'] = undefined;

/**
 * @member {Boolean} SkipEpisodesInLibrary
 */
SeriesTimerInfoDto.prototype['SkipEpisodesInLibrary'] = undefined;

/**
 * The start date of the recording, in UTC.
 * @member {Date} StartDate
 */
SeriesTimerInfoDto.prototype['StartDate'] = undefined;

/**
 * @member {String} Type
 */
SeriesTimerInfoDto.prototype['Type'] = undefined;






export default SeriesTimerInfoDto;

