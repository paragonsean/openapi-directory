/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BaseItemDtoImageBlurHashes from './BaseItemDtoImageBlurHashes';
import BaseItemPerson from './BaseItemPerson';
import ChannelType from './ChannelType';
import ChapterInfo from './ChapterInfo';
import DayOfWeek from './DayOfWeek';
import ExternalUrl from './ExternalUrl';
import ImageOrientation from './ImageOrientation';
import IsoType from './IsoType';
import LocationType from './LocationType';
import MediaSourceInfo from './MediaSourceInfo';
import MediaStream from './MediaStream';
import MediaUrl from './MediaUrl';
import MetadataField from './MetadataField';
import NameGuidPair from './NameGuidPair';
import PlayAccess from './PlayAccess';
import ProgramAudio from './ProgramAudio';
import UserItemDataDto from './UserItemDataDto';
import Video3DFormat from './Video3DFormat';
import VideoType from './VideoType';

/**
 * The BaseItemDto model module.
 * @module model/BaseItemDto
 * @version v1
 */
class BaseItemDto {
    /**
     * Constructs a new <code>BaseItemDto</code>.
     * This is strictly used as a data transfer object from the api layer.  This holds information about a BaseItem in a format that is convenient for the client.
     * @alias module:model/BaseItemDto
     */
    constructor() { 
        
        BaseItemDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BaseItemDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BaseItemDto} obj Optional instance to populate.
     * @return {module:model/BaseItemDto} The populated <code>BaseItemDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BaseItemDto();

            if (data.hasOwnProperty('AirDays')) {
                obj['AirDays'] = ApiClient.convertToType(data['AirDays'], [DayOfWeek]);
            }
            if (data.hasOwnProperty('AirTime')) {
                obj['AirTime'] = ApiClient.convertToType(data['AirTime'], 'String');
            }
            if (data.hasOwnProperty('AirsAfterSeasonNumber')) {
                obj['AirsAfterSeasonNumber'] = ApiClient.convertToType(data['AirsAfterSeasonNumber'], 'Number');
            }
            if (data.hasOwnProperty('AirsBeforeEpisodeNumber')) {
                obj['AirsBeforeEpisodeNumber'] = ApiClient.convertToType(data['AirsBeforeEpisodeNumber'], 'Number');
            }
            if (data.hasOwnProperty('AirsBeforeSeasonNumber')) {
                obj['AirsBeforeSeasonNumber'] = ApiClient.convertToType(data['AirsBeforeSeasonNumber'], 'Number');
            }
            if (data.hasOwnProperty('Album')) {
                obj['Album'] = ApiClient.convertToType(data['Album'], 'String');
            }
            if (data.hasOwnProperty('AlbumArtist')) {
                obj['AlbumArtist'] = ApiClient.convertToType(data['AlbumArtist'], 'String');
            }
            if (data.hasOwnProperty('AlbumArtists')) {
                obj['AlbumArtists'] = ApiClient.convertToType(data['AlbumArtists'], [NameGuidPair]);
            }
            if (data.hasOwnProperty('AlbumCount')) {
                obj['AlbumCount'] = ApiClient.convertToType(data['AlbumCount'], 'Number');
            }
            if (data.hasOwnProperty('AlbumId')) {
                obj['AlbumId'] = ApiClient.convertToType(data['AlbumId'], 'String');
            }
            if (data.hasOwnProperty('AlbumPrimaryImageTag')) {
                obj['AlbumPrimaryImageTag'] = ApiClient.convertToType(data['AlbumPrimaryImageTag'], 'String');
            }
            if (data.hasOwnProperty('Altitude')) {
                obj['Altitude'] = ApiClient.convertToType(data['Altitude'], 'Number');
            }
            if (data.hasOwnProperty('Aperture')) {
                obj['Aperture'] = ApiClient.convertToType(data['Aperture'], 'Number');
            }
            if (data.hasOwnProperty('ArtistCount')) {
                obj['ArtistCount'] = ApiClient.convertToType(data['ArtistCount'], 'Number');
            }
            if (data.hasOwnProperty('ArtistItems')) {
                obj['ArtistItems'] = ApiClient.convertToType(data['ArtistItems'], [NameGuidPair]);
            }
            if (data.hasOwnProperty('Artists')) {
                obj['Artists'] = ApiClient.convertToType(data['Artists'], ['String']);
            }
            if (data.hasOwnProperty('AspectRatio')) {
                obj['AspectRatio'] = ApiClient.convertToType(data['AspectRatio'], 'String');
            }
            if (data.hasOwnProperty('Audio')) {
                obj['Audio'] = ProgramAudio.constructFromObject(data['Audio']);
            }
            if (data.hasOwnProperty('BackdropImageTags')) {
                obj['BackdropImageTags'] = ApiClient.convertToType(data['BackdropImageTags'], ['String']);
            }
            if (data.hasOwnProperty('CameraMake')) {
                obj['CameraMake'] = ApiClient.convertToType(data['CameraMake'], 'String');
            }
            if (data.hasOwnProperty('CameraModel')) {
                obj['CameraModel'] = ApiClient.convertToType(data['CameraModel'], 'String');
            }
            if (data.hasOwnProperty('CanDelete')) {
                obj['CanDelete'] = ApiClient.convertToType(data['CanDelete'], 'Boolean');
            }
            if (data.hasOwnProperty('CanDownload')) {
                obj['CanDownload'] = ApiClient.convertToType(data['CanDownload'], 'Boolean');
            }
            if (data.hasOwnProperty('ChannelId')) {
                obj['ChannelId'] = ApiClient.convertToType(data['ChannelId'], 'String');
            }
            if (data.hasOwnProperty('ChannelName')) {
                obj['ChannelName'] = ApiClient.convertToType(data['ChannelName'], 'String');
            }
            if (data.hasOwnProperty('ChannelNumber')) {
                obj['ChannelNumber'] = ApiClient.convertToType(data['ChannelNumber'], 'String');
            }
            if (data.hasOwnProperty('ChannelPrimaryImageTag')) {
                obj['ChannelPrimaryImageTag'] = ApiClient.convertToType(data['ChannelPrimaryImageTag'], 'String');
            }
            if (data.hasOwnProperty('ChannelType')) {
                obj['ChannelType'] = ChannelType.constructFromObject(data['ChannelType']);
            }
            if (data.hasOwnProperty('Chapters')) {
                obj['Chapters'] = ApiClient.convertToType(data['Chapters'], [ChapterInfo]);
            }
            if (data.hasOwnProperty('ChildCount')) {
                obj['ChildCount'] = ApiClient.convertToType(data['ChildCount'], 'Number');
            }
            if (data.hasOwnProperty('CollectionType')) {
                obj['CollectionType'] = ApiClient.convertToType(data['CollectionType'], 'String');
            }
            if (data.hasOwnProperty('CommunityRating')) {
                obj['CommunityRating'] = ApiClient.convertToType(data['CommunityRating'], 'Number');
            }
            if (data.hasOwnProperty('CompletionPercentage')) {
                obj['CompletionPercentage'] = ApiClient.convertToType(data['CompletionPercentage'], 'Number');
            }
            if (data.hasOwnProperty('Container')) {
                obj['Container'] = ApiClient.convertToType(data['Container'], 'String');
            }
            if (data.hasOwnProperty('CriticRating')) {
                obj['CriticRating'] = ApiClient.convertToType(data['CriticRating'], 'Number');
            }
            if (data.hasOwnProperty('CumulativeRunTimeTicks')) {
                obj['CumulativeRunTimeTicks'] = ApiClient.convertToType(data['CumulativeRunTimeTicks'], 'Number');
            }
            if (data.hasOwnProperty('CurrentProgram')) {
                obj['CurrentProgram'] = BaseItemDto.constructFromObject(data['CurrentProgram']);
            }
            if (data.hasOwnProperty('CustomRating')) {
                obj['CustomRating'] = ApiClient.convertToType(data['CustomRating'], 'String');
            }
            if (data.hasOwnProperty('DateCreated')) {
                obj['DateCreated'] = ApiClient.convertToType(data['DateCreated'], 'Date');
            }
            if (data.hasOwnProperty('DateLastMediaAdded')) {
                obj['DateLastMediaAdded'] = ApiClient.convertToType(data['DateLastMediaAdded'], 'Date');
            }
            if (data.hasOwnProperty('DisplayOrder')) {
                obj['DisplayOrder'] = ApiClient.convertToType(data['DisplayOrder'], 'String');
            }
            if (data.hasOwnProperty('DisplayPreferencesId')) {
                obj['DisplayPreferencesId'] = ApiClient.convertToType(data['DisplayPreferencesId'], 'String');
            }
            if (data.hasOwnProperty('EnableMediaSourceDisplay')) {
                obj['EnableMediaSourceDisplay'] = ApiClient.convertToType(data['EnableMediaSourceDisplay'], 'Boolean');
            }
            if (data.hasOwnProperty('EndDate')) {
                obj['EndDate'] = ApiClient.convertToType(data['EndDate'], 'Date');
            }
            if (data.hasOwnProperty('EpisodeCount')) {
                obj['EpisodeCount'] = ApiClient.convertToType(data['EpisodeCount'], 'Number');
            }
            if (data.hasOwnProperty('EpisodeTitle')) {
                obj['EpisodeTitle'] = ApiClient.convertToType(data['EpisodeTitle'], 'String');
            }
            if (data.hasOwnProperty('Etag')) {
                obj['Etag'] = ApiClient.convertToType(data['Etag'], 'String');
            }
            if (data.hasOwnProperty('ExposureTime')) {
                obj['ExposureTime'] = ApiClient.convertToType(data['ExposureTime'], 'Number');
            }
            if (data.hasOwnProperty('ExternalUrls')) {
                obj['ExternalUrls'] = ApiClient.convertToType(data['ExternalUrls'], [ExternalUrl]);
            }
            if (data.hasOwnProperty('ExtraType')) {
                obj['ExtraType'] = ApiClient.convertToType(data['ExtraType'], 'String');
            }
            if (data.hasOwnProperty('FocalLength')) {
                obj['FocalLength'] = ApiClient.convertToType(data['FocalLength'], 'Number');
            }
            if (data.hasOwnProperty('ForcedSortName')) {
                obj['ForcedSortName'] = ApiClient.convertToType(data['ForcedSortName'], 'String');
            }
            if (data.hasOwnProperty('GenreItems')) {
                obj['GenreItems'] = ApiClient.convertToType(data['GenreItems'], [NameGuidPair]);
            }
            if (data.hasOwnProperty('Genres')) {
                obj['Genres'] = ApiClient.convertToType(data['Genres'], ['String']);
            }
            if (data.hasOwnProperty('HasSubtitles')) {
                obj['HasSubtitles'] = ApiClient.convertToType(data['HasSubtitles'], 'Boolean');
            }
            if (data.hasOwnProperty('Height')) {
                obj['Height'] = ApiClient.convertToType(data['Height'], 'Number');
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('ImageBlurHashes')) {
                obj['ImageBlurHashes'] = BaseItemDtoImageBlurHashes.constructFromObject(data['ImageBlurHashes']);
            }
            if (data.hasOwnProperty('ImageOrientation')) {
                obj['ImageOrientation'] = ImageOrientation.constructFromObject(data['ImageOrientation']);
            }
            if (data.hasOwnProperty('ImageTags')) {
                obj['ImageTags'] = ApiClient.convertToType(data['ImageTags'], {'String': 'String'});
            }
            if (data.hasOwnProperty('IndexNumber')) {
                obj['IndexNumber'] = ApiClient.convertToType(data['IndexNumber'], 'Number');
            }
            if (data.hasOwnProperty('IndexNumberEnd')) {
                obj['IndexNumberEnd'] = ApiClient.convertToType(data['IndexNumberEnd'], 'Number');
            }
            if (data.hasOwnProperty('IsFolder')) {
                obj['IsFolder'] = ApiClient.convertToType(data['IsFolder'], 'Boolean');
            }
            if (data.hasOwnProperty('IsHD')) {
                obj['IsHD'] = ApiClient.convertToType(data['IsHD'], 'Boolean');
            }
            if (data.hasOwnProperty('IsKids')) {
                obj['IsKids'] = ApiClient.convertToType(data['IsKids'], 'Boolean');
            }
            if (data.hasOwnProperty('IsLive')) {
                obj['IsLive'] = ApiClient.convertToType(data['IsLive'], 'Boolean');
            }
            if (data.hasOwnProperty('IsMovie')) {
                obj['IsMovie'] = ApiClient.convertToType(data['IsMovie'], 'Boolean');
            }
            if (data.hasOwnProperty('IsNews')) {
                obj['IsNews'] = ApiClient.convertToType(data['IsNews'], 'Boolean');
            }
            if (data.hasOwnProperty('IsPlaceHolder')) {
                obj['IsPlaceHolder'] = ApiClient.convertToType(data['IsPlaceHolder'], 'Boolean');
            }
            if (data.hasOwnProperty('IsPremiere')) {
                obj['IsPremiere'] = ApiClient.convertToType(data['IsPremiere'], 'Boolean');
            }
            if (data.hasOwnProperty('IsRepeat')) {
                obj['IsRepeat'] = ApiClient.convertToType(data['IsRepeat'], 'Boolean');
            }
            if (data.hasOwnProperty('IsSeries')) {
                obj['IsSeries'] = ApiClient.convertToType(data['IsSeries'], 'Boolean');
            }
            if (data.hasOwnProperty('IsSports')) {
                obj['IsSports'] = ApiClient.convertToType(data['IsSports'], 'Boolean');
            }
            if (data.hasOwnProperty('IsoSpeedRating')) {
                obj['IsoSpeedRating'] = ApiClient.convertToType(data['IsoSpeedRating'], 'Number');
            }
            if (data.hasOwnProperty('IsoType')) {
                obj['IsoType'] = IsoType.constructFromObject(data['IsoType']);
            }
            if (data.hasOwnProperty('Latitude')) {
                obj['Latitude'] = ApiClient.convertToType(data['Latitude'], 'Number');
            }
            if (data.hasOwnProperty('LocalTrailerCount')) {
                obj['LocalTrailerCount'] = ApiClient.convertToType(data['LocalTrailerCount'], 'Number');
            }
            if (data.hasOwnProperty('LocationType')) {
                obj['LocationType'] = LocationType.constructFromObject(data['LocationType']);
            }
            if (data.hasOwnProperty('LockData')) {
                obj['LockData'] = ApiClient.convertToType(data['LockData'], 'Boolean');
            }
            if (data.hasOwnProperty('LockedFields')) {
                obj['LockedFields'] = ApiClient.convertToType(data['LockedFields'], [MetadataField]);
            }
            if (data.hasOwnProperty('Longitude')) {
                obj['Longitude'] = ApiClient.convertToType(data['Longitude'], 'Number');
            }
            if (data.hasOwnProperty('MediaSourceCount')) {
                obj['MediaSourceCount'] = ApiClient.convertToType(data['MediaSourceCount'], 'Number');
            }
            if (data.hasOwnProperty('MediaSources')) {
                obj['MediaSources'] = ApiClient.convertToType(data['MediaSources'], [MediaSourceInfo]);
            }
            if (data.hasOwnProperty('MediaStreams')) {
                obj['MediaStreams'] = ApiClient.convertToType(data['MediaStreams'], [MediaStream]);
            }
            if (data.hasOwnProperty('MediaType')) {
                obj['MediaType'] = ApiClient.convertToType(data['MediaType'], 'String');
            }
            if (data.hasOwnProperty('MovieCount')) {
                obj['MovieCount'] = ApiClient.convertToType(data['MovieCount'], 'Number');
            }
            if (data.hasOwnProperty('MusicVideoCount')) {
                obj['MusicVideoCount'] = ApiClient.convertToType(data['MusicVideoCount'], 'Number');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Number')) {
                obj['Number'] = ApiClient.convertToType(data['Number'], 'String');
            }
            if (data.hasOwnProperty('OfficialRating')) {
                obj['OfficialRating'] = ApiClient.convertToType(data['OfficialRating'], 'String');
            }
            if (data.hasOwnProperty('OriginalTitle')) {
                obj['OriginalTitle'] = ApiClient.convertToType(data['OriginalTitle'], 'String');
            }
            if (data.hasOwnProperty('Overview')) {
                obj['Overview'] = ApiClient.convertToType(data['Overview'], 'String');
            }
            if (data.hasOwnProperty('ParentArtImageTag')) {
                obj['ParentArtImageTag'] = ApiClient.convertToType(data['ParentArtImageTag'], 'String');
            }
            if (data.hasOwnProperty('ParentArtItemId')) {
                obj['ParentArtItemId'] = ApiClient.convertToType(data['ParentArtItemId'], 'String');
            }
            if (data.hasOwnProperty('ParentBackdropImageTags')) {
                obj['ParentBackdropImageTags'] = ApiClient.convertToType(data['ParentBackdropImageTags'], ['String']);
            }
            if (data.hasOwnProperty('ParentBackdropItemId')) {
                obj['ParentBackdropItemId'] = ApiClient.convertToType(data['ParentBackdropItemId'], 'String');
            }
            if (data.hasOwnProperty('ParentId')) {
                obj['ParentId'] = ApiClient.convertToType(data['ParentId'], 'String');
            }
            if (data.hasOwnProperty('ParentIndexNumber')) {
                obj['ParentIndexNumber'] = ApiClient.convertToType(data['ParentIndexNumber'], 'Number');
            }
            if (data.hasOwnProperty('ParentLogoImageTag')) {
                obj['ParentLogoImageTag'] = ApiClient.convertToType(data['ParentLogoImageTag'], 'String');
            }
            if (data.hasOwnProperty('ParentLogoItemId')) {
                obj['ParentLogoItemId'] = ApiClient.convertToType(data['ParentLogoItemId'], 'String');
            }
            if (data.hasOwnProperty('ParentPrimaryImageItemId')) {
                obj['ParentPrimaryImageItemId'] = ApiClient.convertToType(data['ParentPrimaryImageItemId'], 'String');
            }
            if (data.hasOwnProperty('ParentPrimaryImageTag')) {
                obj['ParentPrimaryImageTag'] = ApiClient.convertToType(data['ParentPrimaryImageTag'], 'String');
            }
            if (data.hasOwnProperty('ParentThumbImageTag')) {
                obj['ParentThumbImageTag'] = ApiClient.convertToType(data['ParentThumbImageTag'], 'String');
            }
            if (data.hasOwnProperty('ParentThumbItemId')) {
                obj['ParentThumbItemId'] = ApiClient.convertToType(data['ParentThumbItemId'], 'String');
            }
            if (data.hasOwnProperty('PartCount')) {
                obj['PartCount'] = ApiClient.convertToType(data['PartCount'], 'Number');
            }
            if (data.hasOwnProperty('Path')) {
                obj['Path'] = ApiClient.convertToType(data['Path'], 'String');
            }
            if (data.hasOwnProperty('People')) {
                obj['People'] = ApiClient.convertToType(data['People'], [BaseItemPerson]);
            }
            if (data.hasOwnProperty('PlayAccess')) {
                obj['PlayAccess'] = PlayAccess.constructFromObject(data['PlayAccess']);
            }
            if (data.hasOwnProperty('PlaylistItemId')) {
                obj['PlaylistItemId'] = ApiClient.convertToType(data['PlaylistItemId'], 'String');
            }
            if (data.hasOwnProperty('PreferredMetadataCountryCode')) {
                obj['PreferredMetadataCountryCode'] = ApiClient.convertToType(data['PreferredMetadataCountryCode'], 'String');
            }
            if (data.hasOwnProperty('PreferredMetadataLanguage')) {
                obj['PreferredMetadataLanguage'] = ApiClient.convertToType(data['PreferredMetadataLanguage'], 'String');
            }
            if (data.hasOwnProperty('PremiereDate')) {
                obj['PremiereDate'] = ApiClient.convertToType(data['PremiereDate'], 'Date');
            }
            if (data.hasOwnProperty('PrimaryImageAspectRatio')) {
                obj['PrimaryImageAspectRatio'] = ApiClient.convertToType(data['PrimaryImageAspectRatio'], 'Number');
            }
            if (data.hasOwnProperty('ProductionLocations')) {
                obj['ProductionLocations'] = ApiClient.convertToType(data['ProductionLocations'], ['String']);
            }
            if (data.hasOwnProperty('ProductionYear')) {
                obj['ProductionYear'] = ApiClient.convertToType(data['ProductionYear'], 'Number');
            }
            if (data.hasOwnProperty('ProgramCount')) {
                obj['ProgramCount'] = ApiClient.convertToType(data['ProgramCount'], 'Number');
            }
            if (data.hasOwnProperty('ProgramId')) {
                obj['ProgramId'] = ApiClient.convertToType(data['ProgramId'], 'String');
            }
            if (data.hasOwnProperty('ProviderIds')) {
                obj['ProviderIds'] = ApiClient.convertToType(data['ProviderIds'], {'String': 'String'});
            }
            if (data.hasOwnProperty('RecursiveItemCount')) {
                obj['RecursiveItemCount'] = ApiClient.convertToType(data['RecursiveItemCount'], 'Number');
            }
            if (data.hasOwnProperty('RemoteTrailers')) {
                obj['RemoteTrailers'] = ApiClient.convertToType(data['RemoteTrailers'], [MediaUrl]);
            }
            if (data.hasOwnProperty('RunTimeTicks')) {
                obj['RunTimeTicks'] = ApiClient.convertToType(data['RunTimeTicks'], 'Number');
            }
            if (data.hasOwnProperty('ScreenshotImageTags')) {
                obj['ScreenshotImageTags'] = ApiClient.convertToType(data['ScreenshotImageTags'], ['String']);
            }
            if (data.hasOwnProperty('SeasonId')) {
                obj['SeasonId'] = ApiClient.convertToType(data['SeasonId'], 'String');
            }
            if (data.hasOwnProperty('SeasonName')) {
                obj['SeasonName'] = ApiClient.convertToType(data['SeasonName'], 'String');
            }
            if (data.hasOwnProperty('SeriesCount')) {
                obj['SeriesCount'] = ApiClient.convertToType(data['SeriesCount'], 'Number');
            }
            if (data.hasOwnProperty('SeriesId')) {
                obj['SeriesId'] = ApiClient.convertToType(data['SeriesId'], 'String');
            }
            if (data.hasOwnProperty('SeriesName')) {
                obj['SeriesName'] = ApiClient.convertToType(data['SeriesName'], 'String');
            }
            if (data.hasOwnProperty('SeriesPrimaryImageTag')) {
                obj['SeriesPrimaryImageTag'] = ApiClient.convertToType(data['SeriesPrimaryImageTag'], 'String');
            }
            if (data.hasOwnProperty('SeriesStudio')) {
                obj['SeriesStudio'] = ApiClient.convertToType(data['SeriesStudio'], 'String');
            }
            if (data.hasOwnProperty('SeriesThumbImageTag')) {
                obj['SeriesThumbImageTag'] = ApiClient.convertToType(data['SeriesThumbImageTag'], 'String');
            }
            if (data.hasOwnProperty('SeriesTimerId')) {
                obj['SeriesTimerId'] = ApiClient.convertToType(data['SeriesTimerId'], 'String');
            }
            if (data.hasOwnProperty('ServerId')) {
                obj['ServerId'] = ApiClient.convertToType(data['ServerId'], 'String');
            }
            if (data.hasOwnProperty('ShutterSpeed')) {
                obj['ShutterSpeed'] = ApiClient.convertToType(data['ShutterSpeed'], 'Number');
            }
            if (data.hasOwnProperty('Software')) {
                obj['Software'] = ApiClient.convertToType(data['Software'], 'String');
            }
            if (data.hasOwnProperty('SongCount')) {
                obj['SongCount'] = ApiClient.convertToType(data['SongCount'], 'Number');
            }
            if (data.hasOwnProperty('SortName')) {
                obj['SortName'] = ApiClient.convertToType(data['SortName'], 'String');
            }
            if (data.hasOwnProperty('SourceType')) {
                obj['SourceType'] = ApiClient.convertToType(data['SourceType'], 'String');
            }
            if (data.hasOwnProperty('SpecialFeatureCount')) {
                obj['SpecialFeatureCount'] = ApiClient.convertToType(data['SpecialFeatureCount'], 'Number');
            }
            if (data.hasOwnProperty('StartDate')) {
                obj['StartDate'] = ApiClient.convertToType(data['StartDate'], 'Date');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
            if (data.hasOwnProperty('Studios')) {
                obj['Studios'] = ApiClient.convertToType(data['Studios'], [NameGuidPair]);
            }
            if (data.hasOwnProperty('SupportsSync')) {
                obj['SupportsSync'] = ApiClient.convertToType(data['SupportsSync'], 'Boolean');
            }
            if (data.hasOwnProperty('Taglines')) {
                obj['Taglines'] = ApiClient.convertToType(data['Taglines'], ['String']);
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], ['String']);
            }
            if (data.hasOwnProperty('TimerId')) {
                obj['TimerId'] = ApiClient.convertToType(data['TimerId'], 'String');
            }
            if (data.hasOwnProperty('TrailerCount')) {
                obj['TrailerCount'] = ApiClient.convertToType(data['TrailerCount'], 'Number');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], 'String');
            }
            if (data.hasOwnProperty('UserData')) {
                obj['UserData'] = UserItemDataDto.constructFromObject(data['UserData']);
            }
            if (data.hasOwnProperty('Video3DFormat')) {
                obj['Video3DFormat'] = Video3DFormat.constructFromObject(data['Video3DFormat']);
            }
            if (data.hasOwnProperty('VideoType')) {
                obj['VideoType'] = VideoType.constructFromObject(data['VideoType']);
            }
            if (data.hasOwnProperty('Width')) {
                obj['Width'] = ApiClient.convertToType(data['Width'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BaseItemDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BaseItemDto</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['AirDays'])) {
            throw new Error("Expected the field `AirDays` to be an array in the JSON data but got " + data['AirDays']);
        }
        // ensure the json data is a string
        if (data['AirTime'] && !(typeof data['AirTime'] === 'string' || data['AirTime'] instanceof String)) {
            throw new Error("Expected the field `AirTime` to be a primitive type in the JSON string but got " + data['AirTime']);
        }
        // ensure the json data is a string
        if (data['Album'] && !(typeof data['Album'] === 'string' || data['Album'] instanceof String)) {
            throw new Error("Expected the field `Album` to be a primitive type in the JSON string but got " + data['Album']);
        }
        // ensure the json data is a string
        if (data['AlbumArtist'] && !(typeof data['AlbumArtist'] === 'string' || data['AlbumArtist'] instanceof String)) {
            throw new Error("Expected the field `AlbumArtist` to be a primitive type in the JSON string but got " + data['AlbumArtist']);
        }
        if (data['AlbumArtists']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['AlbumArtists'])) {
                throw new Error("Expected the field `AlbumArtists` to be an array in the JSON data but got " + data['AlbumArtists']);
            }
            // validate the optional field `AlbumArtists` (array)
            for (const item of data['AlbumArtists']) {
                NameGuidPair.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['AlbumId'] && !(typeof data['AlbumId'] === 'string' || data['AlbumId'] instanceof String)) {
            throw new Error("Expected the field `AlbumId` to be a primitive type in the JSON string but got " + data['AlbumId']);
        }
        // ensure the json data is a string
        if (data['AlbumPrimaryImageTag'] && !(typeof data['AlbumPrimaryImageTag'] === 'string' || data['AlbumPrimaryImageTag'] instanceof String)) {
            throw new Error("Expected the field `AlbumPrimaryImageTag` to be a primitive type in the JSON string but got " + data['AlbumPrimaryImageTag']);
        }
        if (data['ArtistItems']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ArtistItems'])) {
                throw new Error("Expected the field `ArtistItems` to be an array in the JSON data but got " + data['ArtistItems']);
            }
            // validate the optional field `ArtistItems` (array)
            for (const item of data['ArtistItems']) {
                NameGuidPair.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Artists'])) {
            throw new Error("Expected the field `Artists` to be an array in the JSON data but got " + data['Artists']);
        }
        // ensure the json data is a string
        if (data['AspectRatio'] && !(typeof data['AspectRatio'] === 'string' || data['AspectRatio'] instanceof String)) {
            throw new Error("Expected the field `AspectRatio` to be a primitive type in the JSON string but got " + data['AspectRatio']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['BackdropImageTags'])) {
            throw new Error("Expected the field `BackdropImageTags` to be an array in the JSON data but got " + data['BackdropImageTags']);
        }
        // ensure the json data is a string
        if (data['CameraMake'] && !(typeof data['CameraMake'] === 'string' || data['CameraMake'] instanceof String)) {
            throw new Error("Expected the field `CameraMake` to be a primitive type in the JSON string but got " + data['CameraMake']);
        }
        // ensure the json data is a string
        if (data['CameraModel'] && !(typeof data['CameraModel'] === 'string' || data['CameraModel'] instanceof String)) {
            throw new Error("Expected the field `CameraModel` to be a primitive type in the JSON string but got " + data['CameraModel']);
        }
        // ensure the json data is a string
        if (data['ChannelId'] && !(typeof data['ChannelId'] === 'string' || data['ChannelId'] instanceof String)) {
            throw new Error("Expected the field `ChannelId` to be a primitive type in the JSON string but got " + data['ChannelId']);
        }
        // ensure the json data is a string
        if (data['ChannelName'] && !(typeof data['ChannelName'] === 'string' || data['ChannelName'] instanceof String)) {
            throw new Error("Expected the field `ChannelName` to be a primitive type in the JSON string but got " + data['ChannelName']);
        }
        // ensure the json data is a string
        if (data['ChannelNumber'] && !(typeof data['ChannelNumber'] === 'string' || data['ChannelNumber'] instanceof String)) {
            throw new Error("Expected the field `ChannelNumber` to be a primitive type in the JSON string but got " + data['ChannelNumber']);
        }
        // ensure the json data is a string
        if (data['ChannelPrimaryImageTag'] && !(typeof data['ChannelPrimaryImageTag'] === 'string' || data['ChannelPrimaryImageTag'] instanceof String)) {
            throw new Error("Expected the field `ChannelPrimaryImageTag` to be a primitive type in the JSON string but got " + data['ChannelPrimaryImageTag']);
        }
        if (data['Chapters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Chapters'])) {
                throw new Error("Expected the field `Chapters` to be an array in the JSON data but got " + data['Chapters']);
            }
            // validate the optional field `Chapters` (array)
            for (const item of data['Chapters']) {
                ChapterInfo.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['CollectionType'] && !(typeof data['CollectionType'] === 'string' || data['CollectionType'] instanceof String)) {
            throw new Error("Expected the field `CollectionType` to be a primitive type in the JSON string but got " + data['CollectionType']);
        }
        // ensure the json data is a string
        if (data['Container'] && !(typeof data['Container'] === 'string' || data['Container'] instanceof String)) {
            throw new Error("Expected the field `Container` to be a primitive type in the JSON string but got " + data['Container']);
        }
        // validate the optional field `CurrentProgram`
        if (data['CurrentProgram']) { // data not null
          BaseItemDto.validateJSON(data['CurrentProgram']);
        }
        // ensure the json data is a string
        if (data['CustomRating'] && !(typeof data['CustomRating'] === 'string' || data['CustomRating'] instanceof String)) {
            throw new Error("Expected the field `CustomRating` to be a primitive type in the JSON string but got " + data['CustomRating']);
        }
        // ensure the json data is a string
        if (data['DisplayOrder'] && !(typeof data['DisplayOrder'] === 'string' || data['DisplayOrder'] instanceof String)) {
            throw new Error("Expected the field `DisplayOrder` to be a primitive type in the JSON string but got " + data['DisplayOrder']);
        }
        // ensure the json data is a string
        if (data['DisplayPreferencesId'] && !(typeof data['DisplayPreferencesId'] === 'string' || data['DisplayPreferencesId'] instanceof String)) {
            throw new Error("Expected the field `DisplayPreferencesId` to be a primitive type in the JSON string but got " + data['DisplayPreferencesId']);
        }
        // ensure the json data is a string
        if (data['EpisodeTitle'] && !(typeof data['EpisodeTitle'] === 'string' || data['EpisodeTitle'] instanceof String)) {
            throw new Error("Expected the field `EpisodeTitle` to be a primitive type in the JSON string but got " + data['EpisodeTitle']);
        }
        // ensure the json data is a string
        if (data['Etag'] && !(typeof data['Etag'] === 'string' || data['Etag'] instanceof String)) {
            throw new Error("Expected the field `Etag` to be a primitive type in the JSON string but got " + data['Etag']);
        }
        if (data['ExternalUrls']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ExternalUrls'])) {
                throw new Error("Expected the field `ExternalUrls` to be an array in the JSON data but got " + data['ExternalUrls']);
            }
            // validate the optional field `ExternalUrls` (array)
            for (const item of data['ExternalUrls']) {
                ExternalUrl.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['ExtraType'] && !(typeof data['ExtraType'] === 'string' || data['ExtraType'] instanceof String)) {
            throw new Error("Expected the field `ExtraType` to be a primitive type in the JSON string but got " + data['ExtraType']);
        }
        // ensure the json data is a string
        if (data['ForcedSortName'] && !(typeof data['ForcedSortName'] === 'string' || data['ForcedSortName'] instanceof String)) {
            throw new Error("Expected the field `ForcedSortName` to be a primitive type in the JSON string but got " + data['ForcedSortName']);
        }
        if (data['GenreItems']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['GenreItems'])) {
                throw new Error("Expected the field `GenreItems` to be an array in the JSON data but got " + data['GenreItems']);
            }
            // validate the optional field `GenreItems` (array)
            for (const item of data['GenreItems']) {
                NameGuidPair.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Genres'])) {
            throw new Error("Expected the field `Genres` to be an array in the JSON data but got " + data['Genres']);
        }
        // ensure the json data is a string
        if (data['Id'] && !(typeof data['Id'] === 'string' || data['Id'] instanceof String)) {
            throw new Error("Expected the field `Id` to be a primitive type in the JSON string but got " + data['Id']);
        }
        // validate the optional field `ImageBlurHashes`
        if (data['ImageBlurHashes']) { // data not null
          BaseItemDtoImageBlurHashes.validateJSON(data['ImageBlurHashes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['LockedFields'])) {
            throw new Error("Expected the field `LockedFields` to be an array in the JSON data but got " + data['LockedFields']);
        }
        if (data['MediaSources']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['MediaSources'])) {
                throw new Error("Expected the field `MediaSources` to be an array in the JSON data but got " + data['MediaSources']);
            }
            // validate the optional field `MediaSources` (array)
            for (const item of data['MediaSources']) {
                MediaSourceInfo.validateJSON(item);
            };
        }
        if (data['MediaStreams']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['MediaStreams'])) {
                throw new Error("Expected the field `MediaStreams` to be an array in the JSON data but got " + data['MediaStreams']);
            }
            // validate the optional field `MediaStreams` (array)
            for (const item of data['MediaStreams']) {
                MediaStream.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['MediaType'] && !(typeof data['MediaType'] === 'string' || data['MediaType'] instanceof String)) {
            throw new Error("Expected the field `MediaType` to be a primitive type in the JSON string but got " + data['MediaType']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['Number'] && !(typeof data['Number'] === 'string' || data['Number'] instanceof String)) {
            throw new Error("Expected the field `Number` to be a primitive type in the JSON string but got " + data['Number']);
        }
        // ensure the json data is a string
        if (data['OfficialRating'] && !(typeof data['OfficialRating'] === 'string' || data['OfficialRating'] instanceof String)) {
            throw new Error("Expected the field `OfficialRating` to be a primitive type in the JSON string but got " + data['OfficialRating']);
        }
        // ensure the json data is a string
        if (data['OriginalTitle'] && !(typeof data['OriginalTitle'] === 'string' || data['OriginalTitle'] instanceof String)) {
            throw new Error("Expected the field `OriginalTitle` to be a primitive type in the JSON string but got " + data['OriginalTitle']);
        }
        // ensure the json data is a string
        if (data['Overview'] && !(typeof data['Overview'] === 'string' || data['Overview'] instanceof String)) {
            throw new Error("Expected the field `Overview` to be a primitive type in the JSON string but got " + data['Overview']);
        }
        // ensure the json data is a string
        if (data['ParentArtImageTag'] && !(typeof data['ParentArtImageTag'] === 'string' || data['ParentArtImageTag'] instanceof String)) {
            throw new Error("Expected the field `ParentArtImageTag` to be a primitive type in the JSON string but got " + data['ParentArtImageTag']);
        }
        // ensure the json data is a string
        if (data['ParentArtItemId'] && !(typeof data['ParentArtItemId'] === 'string' || data['ParentArtItemId'] instanceof String)) {
            throw new Error("Expected the field `ParentArtItemId` to be a primitive type in the JSON string but got " + data['ParentArtItemId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ParentBackdropImageTags'])) {
            throw new Error("Expected the field `ParentBackdropImageTags` to be an array in the JSON data but got " + data['ParentBackdropImageTags']);
        }
        // ensure the json data is a string
        if (data['ParentBackdropItemId'] && !(typeof data['ParentBackdropItemId'] === 'string' || data['ParentBackdropItemId'] instanceof String)) {
            throw new Error("Expected the field `ParentBackdropItemId` to be a primitive type in the JSON string but got " + data['ParentBackdropItemId']);
        }
        // ensure the json data is a string
        if (data['ParentId'] && !(typeof data['ParentId'] === 'string' || data['ParentId'] instanceof String)) {
            throw new Error("Expected the field `ParentId` to be a primitive type in the JSON string but got " + data['ParentId']);
        }
        // ensure the json data is a string
        if (data['ParentLogoImageTag'] && !(typeof data['ParentLogoImageTag'] === 'string' || data['ParentLogoImageTag'] instanceof String)) {
            throw new Error("Expected the field `ParentLogoImageTag` to be a primitive type in the JSON string but got " + data['ParentLogoImageTag']);
        }
        // ensure the json data is a string
        if (data['ParentLogoItemId'] && !(typeof data['ParentLogoItemId'] === 'string' || data['ParentLogoItemId'] instanceof String)) {
            throw new Error("Expected the field `ParentLogoItemId` to be a primitive type in the JSON string but got " + data['ParentLogoItemId']);
        }
        // ensure the json data is a string
        if (data['ParentPrimaryImageItemId'] && !(typeof data['ParentPrimaryImageItemId'] === 'string' || data['ParentPrimaryImageItemId'] instanceof String)) {
            throw new Error("Expected the field `ParentPrimaryImageItemId` to be a primitive type in the JSON string but got " + data['ParentPrimaryImageItemId']);
        }
        // ensure the json data is a string
        if (data['ParentPrimaryImageTag'] && !(typeof data['ParentPrimaryImageTag'] === 'string' || data['ParentPrimaryImageTag'] instanceof String)) {
            throw new Error("Expected the field `ParentPrimaryImageTag` to be a primitive type in the JSON string but got " + data['ParentPrimaryImageTag']);
        }
        // ensure the json data is a string
        if (data['ParentThumbImageTag'] && !(typeof data['ParentThumbImageTag'] === 'string' || data['ParentThumbImageTag'] instanceof String)) {
            throw new Error("Expected the field `ParentThumbImageTag` to be a primitive type in the JSON string but got " + data['ParentThumbImageTag']);
        }
        // ensure the json data is a string
        if (data['ParentThumbItemId'] && !(typeof data['ParentThumbItemId'] === 'string' || data['ParentThumbItemId'] instanceof String)) {
            throw new Error("Expected the field `ParentThumbItemId` to be a primitive type in the JSON string but got " + data['ParentThumbItemId']);
        }
        // ensure the json data is a string
        if (data['Path'] && !(typeof data['Path'] === 'string' || data['Path'] instanceof String)) {
            throw new Error("Expected the field `Path` to be a primitive type in the JSON string but got " + data['Path']);
        }
        if (data['People']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['People'])) {
                throw new Error("Expected the field `People` to be an array in the JSON data but got " + data['People']);
            }
            // validate the optional field `People` (array)
            for (const item of data['People']) {
                BaseItemPerson.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['PlaylistItemId'] && !(typeof data['PlaylistItemId'] === 'string' || data['PlaylistItemId'] instanceof String)) {
            throw new Error("Expected the field `PlaylistItemId` to be a primitive type in the JSON string but got " + data['PlaylistItemId']);
        }
        // ensure the json data is a string
        if (data['PreferredMetadataCountryCode'] && !(typeof data['PreferredMetadataCountryCode'] === 'string' || data['PreferredMetadataCountryCode'] instanceof String)) {
            throw new Error("Expected the field `PreferredMetadataCountryCode` to be a primitive type in the JSON string but got " + data['PreferredMetadataCountryCode']);
        }
        // ensure the json data is a string
        if (data['PreferredMetadataLanguage'] && !(typeof data['PreferredMetadataLanguage'] === 'string' || data['PreferredMetadataLanguage'] instanceof String)) {
            throw new Error("Expected the field `PreferredMetadataLanguage` to be a primitive type in the JSON string but got " + data['PreferredMetadataLanguage']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ProductionLocations'])) {
            throw new Error("Expected the field `ProductionLocations` to be an array in the JSON data but got " + data['ProductionLocations']);
        }
        // ensure the json data is a string
        if (data['ProgramId'] && !(typeof data['ProgramId'] === 'string' || data['ProgramId'] instanceof String)) {
            throw new Error("Expected the field `ProgramId` to be a primitive type in the JSON string but got " + data['ProgramId']);
        }
        if (data['RemoteTrailers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['RemoteTrailers'])) {
                throw new Error("Expected the field `RemoteTrailers` to be an array in the JSON data but got " + data['RemoteTrailers']);
            }
            // validate the optional field `RemoteTrailers` (array)
            for (const item of data['RemoteTrailers']) {
                MediaUrl.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ScreenshotImageTags'])) {
            throw new Error("Expected the field `ScreenshotImageTags` to be an array in the JSON data but got " + data['ScreenshotImageTags']);
        }
        // ensure the json data is a string
        if (data['SeasonId'] && !(typeof data['SeasonId'] === 'string' || data['SeasonId'] instanceof String)) {
            throw new Error("Expected the field `SeasonId` to be a primitive type in the JSON string but got " + data['SeasonId']);
        }
        // ensure the json data is a string
        if (data['SeasonName'] && !(typeof data['SeasonName'] === 'string' || data['SeasonName'] instanceof String)) {
            throw new Error("Expected the field `SeasonName` to be a primitive type in the JSON string but got " + data['SeasonName']);
        }
        // ensure the json data is a string
        if (data['SeriesId'] && !(typeof data['SeriesId'] === 'string' || data['SeriesId'] instanceof String)) {
            throw new Error("Expected the field `SeriesId` to be a primitive type in the JSON string but got " + data['SeriesId']);
        }
        // ensure the json data is a string
        if (data['SeriesName'] && !(typeof data['SeriesName'] === 'string' || data['SeriesName'] instanceof String)) {
            throw new Error("Expected the field `SeriesName` to be a primitive type in the JSON string but got " + data['SeriesName']);
        }
        // ensure the json data is a string
        if (data['SeriesPrimaryImageTag'] && !(typeof data['SeriesPrimaryImageTag'] === 'string' || data['SeriesPrimaryImageTag'] instanceof String)) {
            throw new Error("Expected the field `SeriesPrimaryImageTag` to be a primitive type in the JSON string but got " + data['SeriesPrimaryImageTag']);
        }
        // ensure the json data is a string
        if (data['SeriesStudio'] && !(typeof data['SeriesStudio'] === 'string' || data['SeriesStudio'] instanceof String)) {
            throw new Error("Expected the field `SeriesStudio` to be a primitive type in the JSON string but got " + data['SeriesStudio']);
        }
        // ensure the json data is a string
        if (data['SeriesThumbImageTag'] && !(typeof data['SeriesThumbImageTag'] === 'string' || data['SeriesThumbImageTag'] instanceof String)) {
            throw new Error("Expected the field `SeriesThumbImageTag` to be a primitive type in the JSON string but got " + data['SeriesThumbImageTag']);
        }
        // ensure the json data is a string
        if (data['SeriesTimerId'] && !(typeof data['SeriesTimerId'] === 'string' || data['SeriesTimerId'] instanceof String)) {
            throw new Error("Expected the field `SeriesTimerId` to be a primitive type in the JSON string but got " + data['SeriesTimerId']);
        }
        // ensure the json data is a string
        if (data['ServerId'] && !(typeof data['ServerId'] === 'string' || data['ServerId'] instanceof String)) {
            throw new Error("Expected the field `ServerId` to be a primitive type in the JSON string but got " + data['ServerId']);
        }
        // ensure the json data is a string
        if (data['Software'] && !(typeof data['Software'] === 'string' || data['Software'] instanceof String)) {
            throw new Error("Expected the field `Software` to be a primitive type in the JSON string but got " + data['Software']);
        }
        // ensure the json data is a string
        if (data['SortName'] && !(typeof data['SortName'] === 'string' || data['SortName'] instanceof String)) {
            throw new Error("Expected the field `SortName` to be a primitive type in the JSON string but got " + data['SortName']);
        }
        // ensure the json data is a string
        if (data['SourceType'] && !(typeof data['SourceType'] === 'string' || data['SourceType'] instanceof String)) {
            throw new Error("Expected the field `SourceType` to be a primitive type in the JSON string but got " + data['SourceType']);
        }
        // ensure the json data is a string
        if (data['Status'] && !(typeof data['Status'] === 'string' || data['Status'] instanceof String)) {
            throw new Error("Expected the field `Status` to be a primitive type in the JSON string but got " + data['Status']);
        }
        if (data['Studios']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Studios'])) {
                throw new Error("Expected the field `Studios` to be an array in the JSON data but got " + data['Studios']);
            }
            // validate the optional field `Studios` (array)
            for (const item of data['Studios']) {
                NameGuidPair.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Taglines'])) {
            throw new Error("Expected the field `Taglines` to be an array in the JSON data but got " + data['Taglines']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Tags'])) {
            throw new Error("Expected the field `Tags` to be an array in the JSON data but got " + data['Tags']);
        }
        // ensure the json data is a string
        if (data['TimerId'] && !(typeof data['TimerId'] === 'string' || data['TimerId'] instanceof String)) {
            throw new Error("Expected the field `TimerId` to be a primitive type in the JSON string but got " + data['TimerId']);
        }
        // ensure the json data is a string
        if (data['Type'] && !(typeof data['Type'] === 'string' || data['Type'] instanceof String)) {
            throw new Error("Expected the field `Type` to be a primitive type in the JSON string but got " + data['Type']);
        }
        // validate the optional field `UserData`
        if (data['UserData']) { // data not null
          UserItemDataDto.validateJSON(data['UserData']);
        }

        return true;
    }


}



/**
 * Gets or sets the air days.
 * @member {Array.<module:model/DayOfWeek>} AirDays
 */
BaseItemDto.prototype['AirDays'] = undefined;

/**
 * Gets or sets the air time.
 * @member {String} AirTime
 */
BaseItemDto.prototype['AirTime'] = undefined;

/**
 * @member {Number} AirsAfterSeasonNumber
 */
BaseItemDto.prototype['AirsAfterSeasonNumber'] = undefined;

/**
 * @member {Number} AirsBeforeEpisodeNumber
 */
BaseItemDto.prototype['AirsBeforeEpisodeNumber'] = undefined;

/**
 * @member {Number} AirsBeforeSeasonNumber
 */
BaseItemDto.prototype['AirsBeforeSeasonNumber'] = undefined;

/**
 * Gets or sets the album.
 * @member {String} Album
 */
BaseItemDto.prototype['Album'] = undefined;

/**
 * Gets or sets the album artist.
 * @member {String} AlbumArtist
 */
BaseItemDto.prototype['AlbumArtist'] = undefined;

/**
 * Gets or sets the album artists.
 * @member {Array.<module:model/NameGuidPair>} AlbumArtists
 */
BaseItemDto.prototype['AlbumArtists'] = undefined;

/**
 * Gets or sets the album count.
 * @member {Number} AlbumCount
 */
BaseItemDto.prototype['AlbumCount'] = undefined;

/**
 * Gets or sets the album id.
 * @member {String} AlbumId
 */
BaseItemDto.prototype['AlbumId'] = undefined;

/**
 * Gets or sets the album image tag.
 * @member {String} AlbumPrimaryImageTag
 */
BaseItemDto.prototype['AlbumPrimaryImageTag'] = undefined;

/**
 * @member {Number} Altitude
 */
BaseItemDto.prototype['Altitude'] = undefined;

/**
 * @member {Number} Aperture
 */
BaseItemDto.prototype['Aperture'] = undefined;

/**
 * @member {Number} ArtistCount
 */
BaseItemDto.prototype['ArtistCount'] = undefined;

/**
 * Gets or sets the artist items.
 * @member {Array.<module:model/NameGuidPair>} ArtistItems
 */
BaseItemDto.prototype['ArtistItems'] = undefined;

/**
 * Gets or sets the artists.
 * @member {Array.<String>} Artists
 */
BaseItemDto.prototype['Artists'] = undefined;

/**
 * Gets or sets the aspect ratio.
 * @member {String} AspectRatio
 */
BaseItemDto.prototype['AspectRatio'] = undefined;

/**
 * @member {module:model/ProgramAudio} Audio
 */
BaseItemDto.prototype['Audio'] = undefined;

/**
 * Gets or sets the backdrop image tags.
 * @member {Array.<String>} BackdropImageTags
 */
BaseItemDto.prototype['BackdropImageTags'] = undefined;

/**
 * @member {String} CameraMake
 */
BaseItemDto.prototype['CameraMake'] = undefined;

/**
 * @member {String} CameraModel
 */
BaseItemDto.prototype['CameraModel'] = undefined;

/**
 * @member {Boolean} CanDelete
 */
BaseItemDto.prototype['CanDelete'] = undefined;

/**
 * @member {Boolean} CanDownload
 */
BaseItemDto.prototype['CanDownload'] = undefined;

/**
 * Gets or sets the channel identifier.
 * @member {String} ChannelId
 */
BaseItemDto.prototype['ChannelId'] = undefined;

/**
 * @member {String} ChannelName
 */
BaseItemDto.prototype['ChannelName'] = undefined;

/**
 * @member {String} ChannelNumber
 */
BaseItemDto.prototype['ChannelNumber'] = undefined;

/**
 * Gets or sets the channel primary image tag.
 * @member {String} ChannelPrimaryImageTag
 */
BaseItemDto.prototype['ChannelPrimaryImageTag'] = undefined;

/**
 * @member {module:model/ChannelType} ChannelType
 */
BaseItemDto.prototype['ChannelType'] = undefined;

/**
 * Gets or sets the chapters.
 * @member {Array.<module:model/ChapterInfo>} Chapters
 */
BaseItemDto.prototype['Chapters'] = undefined;

/**
 * Gets or sets the child count.
 * @member {Number} ChildCount
 */
BaseItemDto.prototype['ChildCount'] = undefined;

/**
 * Gets or sets the type of the collection.
 * @member {String} CollectionType
 */
BaseItemDto.prototype['CollectionType'] = undefined;

/**
 * Gets or sets the community rating.
 * @member {Number} CommunityRating
 */
BaseItemDto.prototype['CommunityRating'] = undefined;

/**
 * Gets or sets the completion percentage.
 * @member {Number} CompletionPercentage
 */
BaseItemDto.prototype['CompletionPercentage'] = undefined;

/**
 * @member {String} Container
 */
BaseItemDto.prototype['Container'] = undefined;

/**
 * Gets or sets the critic rating.
 * @member {Number} CriticRating
 */
BaseItemDto.prototype['CriticRating'] = undefined;

/**
 * Gets or sets the cumulative run time ticks.
 * @member {Number} CumulativeRunTimeTicks
 */
BaseItemDto.prototype['CumulativeRunTimeTicks'] = undefined;

/**
 * @member {module:model/BaseItemDto} CurrentProgram
 */
BaseItemDto.prototype['CurrentProgram'] = undefined;

/**
 * Gets or sets the custom rating.
 * @member {String} CustomRating
 */
BaseItemDto.prototype['CustomRating'] = undefined;

/**
 * Gets or sets the date created.
 * @member {Date} DateCreated
 */
BaseItemDto.prototype['DateCreated'] = undefined;

/**
 * @member {Date} DateLastMediaAdded
 */
BaseItemDto.prototype['DateLastMediaAdded'] = undefined;

/**
 * Gets or sets the display order.
 * @member {String} DisplayOrder
 */
BaseItemDto.prototype['DisplayOrder'] = undefined;

/**
 * Gets or sets the display preferences id.
 * @member {String} DisplayPreferencesId
 */
BaseItemDto.prototype['DisplayPreferencesId'] = undefined;

/**
 * @member {Boolean} EnableMediaSourceDisplay
 */
BaseItemDto.prototype['EnableMediaSourceDisplay'] = undefined;

/**
 * Gets or sets the end date.
 * @member {Date} EndDate
 */
BaseItemDto.prototype['EndDate'] = undefined;

/**
 * Gets or sets the episode count.
 * @member {Number} EpisodeCount
 */
BaseItemDto.prototype['EpisodeCount'] = undefined;

/**
 * Gets or sets the episode title.
 * @member {String} EpisodeTitle
 */
BaseItemDto.prototype['EpisodeTitle'] = undefined;

/**
 * Gets or sets the etag.
 * @member {String} Etag
 */
BaseItemDto.prototype['Etag'] = undefined;

/**
 * @member {Number} ExposureTime
 */
BaseItemDto.prototype['ExposureTime'] = undefined;

/**
 * Gets or sets the external urls.
 * @member {Array.<module:model/ExternalUrl>} ExternalUrls
 */
BaseItemDto.prototype['ExternalUrls'] = undefined;

/**
 * @member {String} ExtraType
 */
BaseItemDto.prototype['ExtraType'] = undefined;

/**
 * @member {Number} FocalLength
 */
BaseItemDto.prototype['FocalLength'] = undefined;

/**
 * @member {String} ForcedSortName
 */
BaseItemDto.prototype['ForcedSortName'] = undefined;

/**
 * @member {Array.<module:model/NameGuidPair>} GenreItems
 */
BaseItemDto.prototype['GenreItems'] = undefined;

/**
 * Gets or sets the genres.
 * @member {Array.<String>} Genres
 */
BaseItemDto.prototype['Genres'] = undefined;

/**
 * @member {Boolean} HasSubtitles
 */
BaseItemDto.prototype['HasSubtitles'] = undefined;

/**
 * @member {Number} Height
 */
BaseItemDto.prototype['Height'] = undefined;

/**
 * Gets or sets the id.
 * @member {String} Id
 */
BaseItemDto.prototype['Id'] = undefined;

/**
 * @member {module:model/BaseItemDtoImageBlurHashes} ImageBlurHashes
 */
BaseItemDto.prototype['ImageBlurHashes'] = undefined;

/**
 * @member {module:model/ImageOrientation} ImageOrientation
 */
BaseItemDto.prototype['ImageOrientation'] = undefined;

/**
 * Gets or sets the image tags.
 * @member {Object.<String, String>} ImageTags
 */
BaseItemDto.prototype['ImageTags'] = undefined;

/**
 * Gets or sets the index number.
 * @member {Number} IndexNumber
 */
BaseItemDto.prototype['IndexNumber'] = undefined;

/**
 * Gets or sets the index number end.
 * @member {Number} IndexNumberEnd
 */
BaseItemDto.prototype['IndexNumberEnd'] = undefined;

/**
 * Gets or sets a value indicating whether this instance is folder.
 * @member {Boolean} IsFolder
 */
BaseItemDto.prototype['IsFolder'] = undefined;

/**
 * Gets or sets a value indicating whether this instance is HD.
 * @member {Boolean} IsHD
 */
BaseItemDto.prototype['IsHD'] = undefined;

/**
 * Gets or sets a value indicating whether this instance is kids.
 * @member {Boolean} IsKids
 */
BaseItemDto.prototype['IsKids'] = undefined;

/**
 * Gets or sets a value indicating whether this instance is live.
 * @member {Boolean} IsLive
 */
BaseItemDto.prototype['IsLive'] = undefined;

/**
 * Gets or sets a value indicating whether this instance is movie.
 * @member {Boolean} IsMovie
 */
BaseItemDto.prototype['IsMovie'] = undefined;

/**
 * Gets or sets a value indicating whether this instance is news.
 * @member {Boolean} IsNews
 */
BaseItemDto.prototype['IsNews'] = undefined;

/**
 * Gets or sets a value indicating whether this instance is place holder.
 * @member {Boolean} IsPlaceHolder
 */
BaseItemDto.prototype['IsPlaceHolder'] = undefined;

/**
 * Gets or sets a value indicating whether this instance is premiere.
 * @member {Boolean} IsPremiere
 */
BaseItemDto.prototype['IsPremiere'] = undefined;

/**
 * Gets or sets a value indicating whether this instance is repeat.
 * @member {Boolean} IsRepeat
 */
BaseItemDto.prototype['IsRepeat'] = undefined;

/**
 * Gets or sets a value indicating whether this instance is series.
 * @member {Boolean} IsSeries
 */
BaseItemDto.prototype['IsSeries'] = undefined;

/**
 * Gets or sets a value indicating whether this instance is sports.
 * @member {Boolean} IsSports
 */
BaseItemDto.prototype['IsSports'] = undefined;

/**
 * @member {Number} IsoSpeedRating
 */
BaseItemDto.prototype['IsoSpeedRating'] = undefined;

/**
 * @member {module:model/IsoType} IsoType
 */
BaseItemDto.prototype['IsoType'] = undefined;

/**
 * @member {Number} Latitude
 */
BaseItemDto.prototype['Latitude'] = undefined;

/**
 * Gets or sets the local trailer count.
 * @member {Number} LocalTrailerCount
 */
BaseItemDto.prototype['LocalTrailerCount'] = undefined;

/**
 * @member {module:model/LocationType} LocationType
 */
BaseItemDto.prototype['LocationType'] = undefined;

/**
 * Gets or sets a value indicating whether [enable internet providers].
 * @member {Boolean} LockData
 */
BaseItemDto.prototype['LockData'] = undefined;

/**
 * Gets or sets the locked fields.
 * @member {Array.<module:model/MetadataField>} LockedFields
 */
BaseItemDto.prototype['LockedFields'] = undefined;

/**
 * @member {Number} Longitude
 */
BaseItemDto.prototype['Longitude'] = undefined;

/**
 * @member {Number} MediaSourceCount
 */
BaseItemDto.prototype['MediaSourceCount'] = undefined;

/**
 * Gets or sets the media versions.
 * @member {Array.<module:model/MediaSourceInfo>} MediaSources
 */
BaseItemDto.prototype['MediaSources'] = undefined;

/**
 * Gets or sets the media streams.
 * @member {Array.<module:model/MediaStream>} MediaStreams
 */
BaseItemDto.prototype['MediaStreams'] = undefined;

/**
 * Gets or sets the type of the media.
 * @member {String} MediaType
 */
BaseItemDto.prototype['MediaType'] = undefined;

/**
 * Gets or sets the movie count.
 * @member {Number} MovieCount
 */
BaseItemDto.prototype['MovieCount'] = undefined;

/**
 * Gets or sets the music video count.
 * @member {Number} MusicVideoCount
 */
BaseItemDto.prototype['MusicVideoCount'] = undefined;

/**
 * Gets or sets the name.
 * @member {String} Name
 */
BaseItemDto.prototype['Name'] = undefined;

/**
 * Gets or sets the number.
 * @member {String} Number
 */
BaseItemDto.prototype['Number'] = undefined;

/**
 * Gets or sets the official rating.
 * @member {String} OfficialRating
 */
BaseItemDto.prototype['OfficialRating'] = undefined;

/**
 * @member {String} OriginalTitle
 */
BaseItemDto.prototype['OriginalTitle'] = undefined;

/**
 * Gets or sets the overview.
 * @member {String} Overview
 */
BaseItemDto.prototype['Overview'] = undefined;

/**
 * Gets or sets the parent art image tag.
 * @member {String} ParentArtImageTag
 */
BaseItemDto.prototype['ParentArtImageTag'] = undefined;

/**
 * If the item does not have a art, this will hold the Id of the Parent that has one.
 * @member {String} ParentArtItemId
 */
BaseItemDto.prototype['ParentArtItemId'] = undefined;

/**
 * Gets or sets the parent backdrop image tags.
 * @member {Array.<String>} ParentBackdropImageTags
 */
BaseItemDto.prototype['ParentBackdropImageTags'] = undefined;

/**
 * If the item does not have any backdrops, this will hold the Id of the Parent that has one.
 * @member {String} ParentBackdropItemId
 */
BaseItemDto.prototype['ParentBackdropItemId'] = undefined;

/**
 * Gets or sets the parent id.
 * @member {String} ParentId
 */
BaseItemDto.prototype['ParentId'] = undefined;

/**
 * Gets or sets the parent index number.
 * @member {Number} ParentIndexNumber
 */
BaseItemDto.prototype['ParentIndexNumber'] = undefined;

/**
 * Gets or sets the parent logo image tag.
 * @member {String} ParentLogoImageTag
 */
BaseItemDto.prototype['ParentLogoImageTag'] = undefined;

/**
 * If the item does not have a logo, this will hold the Id of the Parent that has one.
 * @member {String} ParentLogoItemId
 */
BaseItemDto.prototype['ParentLogoItemId'] = undefined;

/**
 * Gets or sets the parent primary image item identifier.
 * @member {String} ParentPrimaryImageItemId
 */
BaseItemDto.prototype['ParentPrimaryImageItemId'] = undefined;

/**
 * Gets or sets the parent primary image tag.
 * @member {String} ParentPrimaryImageTag
 */
BaseItemDto.prototype['ParentPrimaryImageTag'] = undefined;

/**
 * Gets or sets the parent thumb image tag.
 * @member {String} ParentThumbImageTag
 */
BaseItemDto.prototype['ParentThumbImageTag'] = undefined;

/**
 * Gets or sets the parent thumb item id.
 * @member {String} ParentThumbItemId
 */
BaseItemDto.prototype['ParentThumbItemId'] = undefined;

/**
 * Gets or sets the part count.
 * @member {Number} PartCount
 */
BaseItemDto.prototype['PartCount'] = undefined;

/**
 * Gets or sets the path.
 * @member {String} Path
 */
BaseItemDto.prototype['Path'] = undefined;

/**
 * Gets or sets the people.
 * @member {Array.<module:model/BaseItemPerson>} People
 */
BaseItemDto.prototype['People'] = undefined;

/**
 * @member {module:model/PlayAccess} PlayAccess
 */
BaseItemDto.prototype['PlayAccess'] = undefined;

/**
 * Gets or sets the playlist item identifier.
 * @member {String} PlaylistItemId
 */
BaseItemDto.prototype['PlaylistItemId'] = undefined;

/**
 * @member {String} PreferredMetadataCountryCode
 */
BaseItemDto.prototype['PreferredMetadataCountryCode'] = undefined;

/**
 * @member {String} PreferredMetadataLanguage
 */
BaseItemDto.prototype['PreferredMetadataLanguage'] = undefined;

/**
 * Gets or sets the premiere date.
 * @member {Date} PremiereDate
 */
BaseItemDto.prototype['PremiereDate'] = undefined;

/**
 * Gets or sets the primary image aspect ratio, after image enhancements.
 * @member {Number} PrimaryImageAspectRatio
 */
BaseItemDto.prototype['PrimaryImageAspectRatio'] = undefined;

/**
 * @member {Array.<String>} ProductionLocations
 */
BaseItemDto.prototype['ProductionLocations'] = undefined;

/**
 * Gets or sets the production year.
 * @member {Number} ProductionYear
 */
BaseItemDto.prototype['ProductionYear'] = undefined;

/**
 * @member {Number} ProgramCount
 */
BaseItemDto.prototype['ProgramCount'] = undefined;

/**
 * Gets or sets the program identifier.
 * @member {String} ProgramId
 */
BaseItemDto.prototype['ProgramId'] = undefined;

/**
 * Gets or sets the provider ids.
 * @member {Object.<String, String>} ProviderIds
 */
BaseItemDto.prototype['ProviderIds'] = undefined;

/**
 * Gets or sets the recursive item count.
 * @member {Number} RecursiveItemCount
 */
BaseItemDto.prototype['RecursiveItemCount'] = undefined;

/**
 * Gets or sets the trailer urls.
 * @member {Array.<module:model/MediaUrl>} RemoteTrailers
 */
BaseItemDto.prototype['RemoteTrailers'] = undefined;

/**
 * Gets or sets the run time ticks.
 * @member {Number} RunTimeTicks
 */
BaseItemDto.prototype['RunTimeTicks'] = undefined;

/**
 * Gets or sets the screenshot image tags.
 * @member {Array.<String>} ScreenshotImageTags
 */
BaseItemDto.prototype['ScreenshotImageTags'] = undefined;

/**
 * Gets or sets the season identifier.
 * @member {String} SeasonId
 */
BaseItemDto.prototype['SeasonId'] = undefined;

/**
 * Gets or sets the name of the season.
 * @member {String} SeasonName
 */
BaseItemDto.prototype['SeasonName'] = undefined;

/**
 * Gets or sets the series count.
 * @member {Number} SeriesCount
 */
BaseItemDto.prototype['SeriesCount'] = undefined;

/**
 * Gets or sets the series id.
 * @member {String} SeriesId
 */
BaseItemDto.prototype['SeriesId'] = undefined;

/**
 * Gets or sets the name of the series.
 * @member {String} SeriesName
 */
BaseItemDto.prototype['SeriesName'] = undefined;

/**
 * Gets or sets the series primary image tag.
 * @member {String} SeriesPrimaryImageTag
 */
BaseItemDto.prototype['SeriesPrimaryImageTag'] = undefined;

/**
 * Gets or sets the series studio.
 * @member {String} SeriesStudio
 */
BaseItemDto.prototype['SeriesStudio'] = undefined;

/**
 * Gets or sets the series thumb image tag.
 * @member {String} SeriesThumbImageTag
 */
BaseItemDto.prototype['SeriesThumbImageTag'] = undefined;

/**
 * Gets or sets the series timer identifier.
 * @member {String} SeriesTimerId
 */
BaseItemDto.prototype['SeriesTimerId'] = undefined;

/**
 * Gets or sets the server identifier.
 * @member {String} ServerId
 */
BaseItemDto.prototype['ServerId'] = undefined;

/**
 * @member {Number} ShutterSpeed
 */
BaseItemDto.prototype['ShutterSpeed'] = undefined;

/**
 * @member {String} Software
 */
BaseItemDto.prototype['Software'] = undefined;

/**
 * Gets or sets the song count.
 * @member {Number} SongCount
 */
BaseItemDto.prototype['SongCount'] = undefined;

/**
 * Gets or sets the name of the sort.
 * @member {String} SortName
 */
BaseItemDto.prototype['SortName'] = undefined;

/**
 * Gets or sets the type of the source.
 * @member {String} SourceType
 */
BaseItemDto.prototype['SourceType'] = undefined;

/**
 * Gets or sets the special feature count.
 * @member {Number} SpecialFeatureCount
 */
BaseItemDto.prototype['SpecialFeatureCount'] = undefined;

/**
 * The start date of the recording, in UTC.
 * @member {Date} StartDate
 */
BaseItemDto.prototype['StartDate'] = undefined;

/**
 * Gets or sets the status.
 * @member {String} Status
 */
BaseItemDto.prototype['Status'] = undefined;

/**
 * Gets or sets the studios.
 * @member {Array.<module:model/NameGuidPair>} Studios
 */
BaseItemDto.prototype['Studios'] = undefined;

/**
 * Gets or sets a value indicating whether [supports synchronize].
 * @member {Boolean} SupportsSync
 */
BaseItemDto.prototype['SupportsSync'] = undefined;

/**
 * Gets or sets the taglines.
 * @member {Array.<String>} Taglines
 */
BaseItemDto.prototype['Taglines'] = undefined;

/**
 * Gets or sets the tags.
 * @member {Array.<String>} Tags
 */
BaseItemDto.prototype['Tags'] = undefined;

/**
 * Gets or sets the timer identifier.
 * @member {String} TimerId
 */
BaseItemDto.prototype['TimerId'] = undefined;

/**
 * Gets or sets the trailer count.
 * @member {Number} TrailerCount
 */
BaseItemDto.prototype['TrailerCount'] = undefined;

/**
 * Gets or sets the type.
 * @member {String} Type
 */
BaseItemDto.prototype['Type'] = undefined;

/**
 * @member {module:model/UserItemDataDto} UserData
 */
BaseItemDto.prototype['UserData'] = undefined;

/**
 * @member {module:model/Video3DFormat} Video3DFormat
 */
BaseItemDto.prototype['Video3DFormat'] = undefined;

/**
 * @member {module:model/VideoType} VideoType
 */
BaseItemDto.prototype['VideoType'] = undefined;

/**
 * @member {Number} Width
 */
BaseItemDto.prototype['Width'] = undefined;






export default BaseItemDto;

