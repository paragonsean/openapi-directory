/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The QuickConnectResult model module.
 * @module model/QuickConnectResult
 * @version v1
 */
class QuickConnectResult {
    /**
     * Constructs a new <code>QuickConnectResult</code>.
     * Stores the result of an incoming quick connect request.
     * @alias module:model/QuickConnectResult
     */
    constructor() { 
        
        QuickConnectResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QuickConnectResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QuickConnectResult} obj Optional instance to populate.
     * @return {module:model/QuickConnectResult} The populated <code>QuickConnectResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QuickConnectResult();

            if (data.hasOwnProperty('Authenticated')) {
                obj['Authenticated'] = ApiClient.convertToType(data['Authenticated'], 'Boolean');
            }
            if (data.hasOwnProperty('Authentication')) {
                obj['Authentication'] = ApiClient.convertToType(data['Authentication'], 'String');
            }
            if (data.hasOwnProperty('Code')) {
                obj['Code'] = ApiClient.convertToType(data['Code'], 'String');
            }
            if (data.hasOwnProperty('DateAdded')) {
                obj['DateAdded'] = ApiClient.convertToType(data['DateAdded'], 'Date');
            }
            if (data.hasOwnProperty('Error')) {
                obj['Error'] = ApiClient.convertToType(data['Error'], 'String');
            }
            if (data.hasOwnProperty('Secret')) {
                obj['Secret'] = ApiClient.convertToType(data['Secret'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QuickConnectResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QuickConnectResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Authentication'] && !(typeof data['Authentication'] === 'string' || data['Authentication'] instanceof String)) {
            throw new Error("Expected the field `Authentication` to be a primitive type in the JSON string but got " + data['Authentication']);
        }
        // ensure the json data is a string
        if (data['Code'] && !(typeof data['Code'] === 'string' || data['Code'] instanceof String)) {
            throw new Error("Expected the field `Code` to be a primitive type in the JSON string but got " + data['Code']);
        }
        // ensure the json data is a string
        if (data['Error'] && !(typeof data['Error'] === 'string' || data['Error'] instanceof String)) {
            throw new Error("Expected the field `Error` to be a primitive type in the JSON string but got " + data['Error']);
        }
        // ensure the json data is a string
        if (data['Secret'] && !(typeof data['Secret'] === 'string' || data['Secret'] instanceof String)) {
            throw new Error("Expected the field `Secret` to be a primitive type in the JSON string but got " + data['Secret']);
        }

        return true;
    }


}



/**
 * Gets a value indicating whether this request is authorized.
 * @member {Boolean} Authenticated
 */
QuickConnectResult.prototype['Authenticated'] = undefined;

/**
 * Gets or sets the private access token.
 * @member {String} Authentication
 */
QuickConnectResult.prototype['Authentication'] = undefined;

/**
 * Gets or sets the user facing code used so the user can quickly differentiate this request from others.
 * @member {String} Code
 */
QuickConnectResult.prototype['Code'] = undefined;

/**
 * Gets or sets the DateTime that this request was created.
 * @member {Date} DateAdded
 */
QuickConnectResult.prototype['DateAdded'] = undefined;

/**
 * Gets or sets an error message.
 * @member {String} Error
 */
QuickConnectResult.prototype['Error'] = undefined;

/**
 * Gets or sets the secret value used to uniquely identify this request. Can be used to retrieve authentication information.
 * @member {String} Secret
 */
QuickConnectResult.prototype['Secret'] = undefined;






export default QuickConnectResult;

