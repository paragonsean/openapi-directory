/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NotificationDto from './NotificationDto';

/**
 * The NotificationResultDto model module.
 * @module model/NotificationResultDto
 * @version v1
 */
class NotificationResultDto {
    /**
     * Constructs a new <code>NotificationResultDto</code>.
     * A list of notifications with the total record count for pagination.
     * @alias module:model/NotificationResultDto
     */
    constructor() { 
        
        NotificationResultDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NotificationResultDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NotificationResultDto} obj Optional instance to populate.
     * @return {module:model/NotificationResultDto} The populated <code>NotificationResultDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NotificationResultDto();

            if (data.hasOwnProperty('Notifications')) {
                obj['Notifications'] = ApiClient.convertToType(data['Notifications'], [NotificationDto]);
            }
            if (data.hasOwnProperty('TotalRecordCount')) {
                obj['TotalRecordCount'] = ApiClient.convertToType(data['TotalRecordCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NotificationResultDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NotificationResultDto</code>.
     */
    static validateJSON(data) {
        if (data['Notifications']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Notifications'])) {
                throw new Error("Expected the field `Notifications` to be an array in the JSON data but got " + data['Notifications']);
            }
            // validate the optional field `Notifications` (array)
            for (const item of data['Notifications']) {
                NotificationDto.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Gets or sets the current page of notifications.
 * @member {Array.<module:model/NotificationDto>} Notifications
 */
NotificationResultDto.prototype['Notifications'] = undefined;

/**
 * Gets or sets the total number of notifications.
 * @member {Number} TotalRecordCount
 */
NotificationResultDto.prototype['TotalRecordCount'] = undefined;






export default NotificationResultDto;

