/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StartupConfigurationDto model module.
 * @module model/StartupConfigurationDto
 * @version v1
 */
class StartupConfigurationDto {
    /**
     * Constructs a new <code>StartupConfigurationDto</code>.
     * The startup configuration DTO.
     * @alias module:model/StartupConfigurationDto
     */
    constructor() { 
        
        StartupConfigurationDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StartupConfigurationDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StartupConfigurationDto} obj Optional instance to populate.
     * @return {module:model/StartupConfigurationDto} The populated <code>StartupConfigurationDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StartupConfigurationDto();

            if (data.hasOwnProperty('MetadataCountryCode')) {
                obj['MetadataCountryCode'] = ApiClient.convertToType(data['MetadataCountryCode'], 'String');
            }
            if (data.hasOwnProperty('PreferredMetadataLanguage')) {
                obj['PreferredMetadataLanguage'] = ApiClient.convertToType(data['PreferredMetadataLanguage'], 'String');
            }
            if (data.hasOwnProperty('UICulture')) {
                obj['UICulture'] = ApiClient.convertToType(data['UICulture'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StartupConfigurationDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StartupConfigurationDto</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['MetadataCountryCode'] && !(typeof data['MetadataCountryCode'] === 'string' || data['MetadataCountryCode'] instanceof String)) {
            throw new Error("Expected the field `MetadataCountryCode` to be a primitive type in the JSON string but got " + data['MetadataCountryCode']);
        }
        // ensure the json data is a string
        if (data['PreferredMetadataLanguage'] && !(typeof data['PreferredMetadataLanguage'] === 'string' || data['PreferredMetadataLanguage'] instanceof String)) {
            throw new Error("Expected the field `PreferredMetadataLanguage` to be a primitive type in the JSON string but got " + data['PreferredMetadataLanguage']);
        }
        // ensure the json data is a string
        if (data['UICulture'] && !(typeof data['UICulture'] === 'string' || data['UICulture'] instanceof String)) {
            throw new Error("Expected the field `UICulture` to be a primitive type in the JSON string but got " + data['UICulture']);
        }

        return true;
    }


}



/**
 * Gets or sets the metadata country code.
 * @member {String} MetadataCountryCode
 */
StartupConfigurationDto.prototype['MetadataCountryCode'] = undefined;

/**
 * Gets or sets the preferred language for the metadata.
 * @member {String} PreferredMetadataLanguage
 */
StartupConfigurationDto.prototype['PreferredMetadataLanguage'] = undefined;

/**
 * Gets or sets UI language culture.
 * @member {String} UICulture
 */
StartupConfigurationDto.prototype['UICulture'] = undefined;






export default StartupConfigurationDto;

