/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChannelItemSortField from './ChannelItemSortField';
import ChannelMediaContentType from './ChannelMediaContentType';
import ChannelMediaType from './ChannelMediaType';

/**
 * The ChannelFeatures model module.
 * @module model/ChannelFeatures
 * @version v1
 */
class ChannelFeatures {
    /**
     * Constructs a new <code>ChannelFeatures</code>.
     * @alias module:model/ChannelFeatures
     */
    constructor() { 
        
        ChannelFeatures.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChannelFeatures</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChannelFeatures} obj Optional instance to populate.
     * @return {module:model/ChannelFeatures} The populated <code>ChannelFeatures</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChannelFeatures();

            if (data.hasOwnProperty('AutoRefreshLevels')) {
                obj['AutoRefreshLevels'] = ApiClient.convertToType(data['AutoRefreshLevels'], 'Number');
            }
            if (data.hasOwnProperty('CanFilter')) {
                obj['CanFilter'] = ApiClient.convertToType(data['CanFilter'], 'Boolean');
            }
            if (data.hasOwnProperty('CanSearch')) {
                obj['CanSearch'] = ApiClient.convertToType(data['CanSearch'], 'Boolean');
            }
            if (data.hasOwnProperty('ContentTypes')) {
                obj['ContentTypes'] = ApiClient.convertToType(data['ContentTypes'], [ChannelMediaContentType]);
            }
            if (data.hasOwnProperty('DefaultSortFields')) {
                obj['DefaultSortFields'] = ApiClient.convertToType(data['DefaultSortFields'], [ChannelItemSortField]);
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('MaxPageSize')) {
                obj['MaxPageSize'] = ApiClient.convertToType(data['MaxPageSize'], 'Number');
            }
            if (data.hasOwnProperty('MediaTypes')) {
                obj['MediaTypes'] = ApiClient.convertToType(data['MediaTypes'], [ChannelMediaType]);
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('SupportsContentDownloading')) {
                obj['SupportsContentDownloading'] = ApiClient.convertToType(data['SupportsContentDownloading'], 'Boolean');
            }
            if (data.hasOwnProperty('SupportsLatestMedia')) {
                obj['SupportsLatestMedia'] = ApiClient.convertToType(data['SupportsLatestMedia'], 'Boolean');
            }
            if (data.hasOwnProperty('SupportsSortOrderToggle')) {
                obj['SupportsSortOrderToggle'] = ApiClient.convertToType(data['SupportsSortOrderToggle'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChannelFeatures</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChannelFeatures</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['ContentTypes'])) {
            throw new Error("Expected the field `ContentTypes` to be an array in the JSON data but got " + data['ContentTypes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['DefaultSortFields'])) {
            throw new Error("Expected the field `DefaultSortFields` to be an array in the JSON data but got " + data['DefaultSortFields']);
        }
        // ensure the json data is a string
        if (data['Id'] && !(typeof data['Id'] === 'string' || data['Id'] instanceof String)) {
            throw new Error("Expected the field `Id` to be a primitive type in the JSON string but got " + data['Id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['MediaTypes'])) {
            throw new Error("Expected the field `MediaTypes` to be an array in the JSON data but got " + data['MediaTypes']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }

        return true;
    }


}



/**
 * Gets or sets the automatic refresh levels.
 * @member {Number} AutoRefreshLevels
 */
ChannelFeatures.prototype['AutoRefreshLevels'] = undefined;

/**
 * Gets or sets a value indicating whether this instance can filter.
 * @member {Boolean} CanFilter
 */
ChannelFeatures.prototype['CanFilter'] = undefined;

/**
 * Gets or sets a value indicating whether this instance can search.
 * @member {Boolean} CanSearch
 */
ChannelFeatures.prototype['CanSearch'] = undefined;

/**
 * Gets or sets the content types.
 * @member {Array.<module:model/ChannelMediaContentType>} ContentTypes
 */
ChannelFeatures.prototype['ContentTypes'] = undefined;

/**
 * Gets or sets the default sort orders.
 * @member {Array.<module:model/ChannelItemSortField>} DefaultSortFields
 */
ChannelFeatures.prototype['DefaultSortFields'] = undefined;

/**
 * Gets or sets the identifier.
 * @member {String} Id
 */
ChannelFeatures.prototype['Id'] = undefined;

/**
 * Represents the maximum number of records the channel allows retrieving at a time.
 * @member {Number} MaxPageSize
 */
ChannelFeatures.prototype['MaxPageSize'] = undefined;

/**
 * Gets or sets the media types.
 * @member {Array.<module:model/ChannelMediaType>} MediaTypes
 */
ChannelFeatures.prototype['MediaTypes'] = undefined;

/**
 * Gets or sets the name.
 * @member {String} Name
 */
ChannelFeatures.prototype['Name'] = undefined;

/**
 * Gets or sets a value indicating whether [supports content downloading].
 * @member {Boolean} SupportsContentDownloading
 */
ChannelFeatures.prototype['SupportsContentDownloading'] = undefined;

/**
 * Gets or sets a value indicating whether [supports latest media].
 * @member {Boolean} SupportsLatestMedia
 */
ChannelFeatures.prototype['SupportsLatestMedia'] = undefined;

/**
 * Indicates if a sort ascending/descending toggle is supported or not.
 * @member {Boolean} SupportsSortOrderToggle
 */
ChannelFeatures.prototype['SupportsSortOrderToggle'] = undefined;






export default ChannelFeatures;

