/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AuthenticationInfo model module.
 * @module model/AuthenticationInfo
 * @version v1
 */
class AuthenticationInfo {
    /**
     * Constructs a new <code>AuthenticationInfo</code>.
     * @alias module:model/AuthenticationInfo
     */
    constructor() { 
        
        AuthenticationInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AuthenticationInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuthenticationInfo} obj Optional instance to populate.
     * @return {module:model/AuthenticationInfo} The populated <code>AuthenticationInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuthenticationInfo();

            if (data.hasOwnProperty('AccessToken')) {
                obj['AccessToken'] = ApiClient.convertToType(data['AccessToken'], 'String');
            }
            if (data.hasOwnProperty('AppName')) {
                obj['AppName'] = ApiClient.convertToType(data['AppName'], 'String');
            }
            if (data.hasOwnProperty('AppVersion')) {
                obj['AppVersion'] = ApiClient.convertToType(data['AppVersion'], 'String');
            }
            if (data.hasOwnProperty('DateCreated')) {
                obj['DateCreated'] = ApiClient.convertToType(data['DateCreated'], 'Date');
            }
            if (data.hasOwnProperty('DateLastActivity')) {
                obj['DateLastActivity'] = ApiClient.convertToType(data['DateLastActivity'], 'Date');
            }
            if (data.hasOwnProperty('DateRevoked')) {
                obj['DateRevoked'] = ApiClient.convertToType(data['DateRevoked'], 'Date');
            }
            if (data.hasOwnProperty('DeviceId')) {
                obj['DeviceId'] = ApiClient.convertToType(data['DeviceId'], 'String');
            }
            if (data.hasOwnProperty('DeviceName')) {
                obj['DeviceName'] = ApiClient.convertToType(data['DeviceName'], 'String');
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'Number');
            }
            if (data.hasOwnProperty('IsActive')) {
                obj['IsActive'] = ApiClient.convertToType(data['IsActive'], 'Boolean');
            }
            if (data.hasOwnProperty('UserId')) {
                obj['UserId'] = ApiClient.convertToType(data['UserId'], 'String');
            }
            if (data.hasOwnProperty('UserName')) {
                obj['UserName'] = ApiClient.convertToType(data['UserName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuthenticationInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuthenticationInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['AccessToken'] && !(typeof data['AccessToken'] === 'string' || data['AccessToken'] instanceof String)) {
            throw new Error("Expected the field `AccessToken` to be a primitive type in the JSON string but got " + data['AccessToken']);
        }
        // ensure the json data is a string
        if (data['AppName'] && !(typeof data['AppName'] === 'string' || data['AppName'] instanceof String)) {
            throw new Error("Expected the field `AppName` to be a primitive type in the JSON string but got " + data['AppName']);
        }
        // ensure the json data is a string
        if (data['AppVersion'] && !(typeof data['AppVersion'] === 'string' || data['AppVersion'] instanceof String)) {
            throw new Error("Expected the field `AppVersion` to be a primitive type in the JSON string but got " + data['AppVersion']);
        }
        // ensure the json data is a string
        if (data['DeviceId'] && !(typeof data['DeviceId'] === 'string' || data['DeviceId'] instanceof String)) {
            throw new Error("Expected the field `DeviceId` to be a primitive type in the JSON string but got " + data['DeviceId']);
        }
        // ensure the json data is a string
        if (data['DeviceName'] && !(typeof data['DeviceName'] === 'string' || data['DeviceName'] instanceof String)) {
            throw new Error("Expected the field `DeviceName` to be a primitive type in the JSON string but got " + data['DeviceName']);
        }
        // ensure the json data is a string
        if (data['UserId'] && !(typeof data['UserId'] === 'string' || data['UserId'] instanceof String)) {
            throw new Error("Expected the field `UserId` to be a primitive type in the JSON string but got " + data['UserId']);
        }
        // ensure the json data is a string
        if (data['UserName'] && !(typeof data['UserName'] === 'string' || data['UserName'] instanceof String)) {
            throw new Error("Expected the field `UserName` to be a primitive type in the JSON string but got " + data['UserName']);
        }

        return true;
    }


}



/**
 * Gets or sets the access token.
 * @member {String} AccessToken
 */
AuthenticationInfo.prototype['AccessToken'] = undefined;

/**
 * Gets or sets the name of the application.
 * @member {String} AppName
 */
AuthenticationInfo.prototype['AppName'] = undefined;

/**
 * Gets or sets the application version.
 * @member {String} AppVersion
 */
AuthenticationInfo.prototype['AppVersion'] = undefined;

/**
 * Gets or sets the date created.
 * @member {Date} DateCreated
 */
AuthenticationInfo.prototype['DateCreated'] = undefined;

/**
 * @member {Date} DateLastActivity
 */
AuthenticationInfo.prototype['DateLastActivity'] = undefined;

/**
 * Gets or sets the date revoked.
 * @member {Date} DateRevoked
 */
AuthenticationInfo.prototype['DateRevoked'] = undefined;

/**
 * Gets or sets the device identifier.
 * @member {String} DeviceId
 */
AuthenticationInfo.prototype['DeviceId'] = undefined;

/**
 * Gets or sets the name of the device.
 * @member {String} DeviceName
 */
AuthenticationInfo.prototype['DeviceName'] = undefined;

/**
 * Gets or sets the identifier.
 * @member {Number} Id
 */
AuthenticationInfo.prototype['Id'] = undefined;

/**
 * Gets or sets a value indicating whether this instance is active.
 * @member {Boolean} IsActive
 */
AuthenticationInfo.prototype['IsActive'] = undefined;

/**
 * Gets or sets the user identifier.
 * @member {String} UserId
 */
AuthenticationInfo.prototype['UserId'] = undefined;

/**
 * @member {String} UserName
 */
AuthenticationInfo.prototype['UserName'] = undefined;






export default AuthenticationInfo;

