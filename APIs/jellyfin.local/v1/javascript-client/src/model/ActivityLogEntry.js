/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LogLevel from './LogLevel';

/**
 * The ActivityLogEntry model module.
 * @module model/ActivityLogEntry
 * @version v1
 */
class ActivityLogEntry {
    /**
     * Constructs a new <code>ActivityLogEntry</code>.
     * @alias module:model/ActivityLogEntry
     */
    constructor() { 
        
        ActivityLogEntry.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ActivityLogEntry</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActivityLogEntry} obj Optional instance to populate.
     * @return {module:model/ActivityLogEntry} The populated <code>ActivityLogEntry</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActivityLogEntry();

            if (data.hasOwnProperty('Date')) {
                obj['Date'] = ApiClient.convertToType(data['Date'], 'Date');
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'Number');
            }
            if (data.hasOwnProperty('ItemId')) {
                obj['ItemId'] = ApiClient.convertToType(data['ItemId'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Overview')) {
                obj['Overview'] = ApiClient.convertToType(data['Overview'], 'String');
            }
            if (data.hasOwnProperty('Severity')) {
                obj['Severity'] = LogLevel.constructFromObject(data['Severity']);
            }
            if (data.hasOwnProperty('ShortOverview')) {
                obj['ShortOverview'] = ApiClient.convertToType(data['ShortOverview'], 'String');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], 'String');
            }
            if (data.hasOwnProperty('UserId')) {
                obj['UserId'] = ApiClient.convertToType(data['UserId'], 'String');
            }
            if (data.hasOwnProperty('UserPrimaryImageTag')) {
                obj['UserPrimaryImageTag'] = ApiClient.convertToType(data['UserPrimaryImageTag'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActivityLogEntry</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActivityLogEntry</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ItemId'] && !(typeof data['ItemId'] === 'string' || data['ItemId'] instanceof String)) {
            throw new Error("Expected the field `ItemId` to be a primitive type in the JSON string but got " + data['ItemId']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['Overview'] && !(typeof data['Overview'] === 'string' || data['Overview'] instanceof String)) {
            throw new Error("Expected the field `Overview` to be a primitive type in the JSON string but got " + data['Overview']);
        }
        // ensure the json data is a string
        if (data['ShortOverview'] && !(typeof data['ShortOverview'] === 'string' || data['ShortOverview'] instanceof String)) {
            throw new Error("Expected the field `ShortOverview` to be a primitive type in the JSON string but got " + data['ShortOverview']);
        }
        // ensure the json data is a string
        if (data['Type'] && !(typeof data['Type'] === 'string' || data['Type'] instanceof String)) {
            throw new Error("Expected the field `Type` to be a primitive type in the JSON string but got " + data['Type']);
        }
        // ensure the json data is a string
        if (data['UserId'] && !(typeof data['UserId'] === 'string' || data['UserId'] instanceof String)) {
            throw new Error("Expected the field `UserId` to be a primitive type in the JSON string but got " + data['UserId']);
        }
        // ensure the json data is a string
        if (data['UserPrimaryImageTag'] && !(typeof data['UserPrimaryImageTag'] === 'string' || data['UserPrimaryImageTag'] instanceof String)) {
            throw new Error("Expected the field `UserPrimaryImageTag` to be a primitive type in the JSON string but got " + data['UserPrimaryImageTag']);
        }

        return true;
    }


}



/**
 * Gets or sets the date.
 * @member {Date} Date
 */
ActivityLogEntry.prototype['Date'] = undefined;

/**
 * Gets or sets the identifier.
 * @member {Number} Id
 */
ActivityLogEntry.prototype['Id'] = undefined;

/**
 * Gets or sets the item identifier.
 * @member {String} ItemId
 */
ActivityLogEntry.prototype['ItemId'] = undefined;

/**
 * Gets or sets the name.
 * @member {String} Name
 */
ActivityLogEntry.prototype['Name'] = undefined;

/**
 * Gets or sets the overview.
 * @member {String} Overview
 */
ActivityLogEntry.prototype['Overview'] = undefined;

/**
 * @member {module:model/LogLevel} Severity
 */
ActivityLogEntry.prototype['Severity'] = undefined;

/**
 * Gets or sets the short overview.
 * @member {String} ShortOverview
 */
ActivityLogEntry.prototype['ShortOverview'] = undefined;

/**
 * Gets or sets the type.
 * @member {String} Type
 */
ActivityLogEntry.prototype['Type'] = undefined;

/**
 * Gets or sets the user identifier.
 * @member {String} UserId
 */
ActivityLogEntry.prototype['UserId'] = undefined;

/**
 * Gets or sets the user primary image tag.
 * @member {String} UserPrimaryImageTag
 */
ActivityLogEntry.prototype['UserPrimaryImageTag'] = undefined;






export default ActivityLogEntry;

