/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TunerHostInfo model module.
 * @module model/TunerHostInfo
 * @version v1
 */
class TunerHostInfo {
    /**
     * Constructs a new <code>TunerHostInfo</code>.
     * @alias module:model/TunerHostInfo
     */
    constructor() { 
        
        TunerHostInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TunerHostInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TunerHostInfo} obj Optional instance to populate.
     * @return {module:model/TunerHostInfo} The populated <code>TunerHostInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TunerHostInfo();

            if (data.hasOwnProperty('AllowHWTranscoding')) {
                obj['AllowHWTranscoding'] = ApiClient.convertToType(data['AllowHWTranscoding'], 'Boolean');
            }
            if (data.hasOwnProperty('DeviceId')) {
                obj['DeviceId'] = ApiClient.convertToType(data['DeviceId'], 'String');
            }
            if (data.hasOwnProperty('EnableStreamLooping')) {
                obj['EnableStreamLooping'] = ApiClient.convertToType(data['EnableStreamLooping'], 'Boolean');
            }
            if (data.hasOwnProperty('FriendlyName')) {
                obj['FriendlyName'] = ApiClient.convertToType(data['FriendlyName'], 'String');
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('ImportFavoritesOnly')) {
                obj['ImportFavoritesOnly'] = ApiClient.convertToType(data['ImportFavoritesOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('Source')) {
                obj['Source'] = ApiClient.convertToType(data['Source'], 'String');
            }
            if (data.hasOwnProperty('TunerCount')) {
                obj['TunerCount'] = ApiClient.convertToType(data['TunerCount'], 'Number');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], 'String');
            }
            if (data.hasOwnProperty('Url')) {
                obj['Url'] = ApiClient.convertToType(data['Url'], 'String');
            }
            if (data.hasOwnProperty('UserAgent')) {
                obj['UserAgent'] = ApiClient.convertToType(data['UserAgent'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TunerHostInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TunerHostInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['DeviceId'] && !(typeof data['DeviceId'] === 'string' || data['DeviceId'] instanceof String)) {
            throw new Error("Expected the field `DeviceId` to be a primitive type in the JSON string but got " + data['DeviceId']);
        }
        // ensure the json data is a string
        if (data['FriendlyName'] && !(typeof data['FriendlyName'] === 'string' || data['FriendlyName'] instanceof String)) {
            throw new Error("Expected the field `FriendlyName` to be a primitive type in the JSON string but got " + data['FriendlyName']);
        }
        // ensure the json data is a string
        if (data['Id'] && !(typeof data['Id'] === 'string' || data['Id'] instanceof String)) {
            throw new Error("Expected the field `Id` to be a primitive type in the JSON string but got " + data['Id']);
        }
        // ensure the json data is a string
        if (data['Source'] && !(typeof data['Source'] === 'string' || data['Source'] instanceof String)) {
            throw new Error("Expected the field `Source` to be a primitive type in the JSON string but got " + data['Source']);
        }
        // ensure the json data is a string
        if (data['Type'] && !(typeof data['Type'] === 'string' || data['Type'] instanceof String)) {
            throw new Error("Expected the field `Type` to be a primitive type in the JSON string but got " + data['Type']);
        }
        // ensure the json data is a string
        if (data['Url'] && !(typeof data['Url'] === 'string' || data['Url'] instanceof String)) {
            throw new Error("Expected the field `Url` to be a primitive type in the JSON string but got " + data['Url']);
        }
        // ensure the json data is a string
        if (data['UserAgent'] && !(typeof data['UserAgent'] === 'string' || data['UserAgent'] instanceof String)) {
            throw new Error("Expected the field `UserAgent` to be a primitive type in the JSON string but got " + data['UserAgent']);
        }

        return true;
    }


}



/**
 * @member {Boolean} AllowHWTranscoding
 */
TunerHostInfo.prototype['AllowHWTranscoding'] = undefined;

/**
 * @member {String} DeviceId
 */
TunerHostInfo.prototype['DeviceId'] = undefined;

/**
 * @member {Boolean} EnableStreamLooping
 */
TunerHostInfo.prototype['EnableStreamLooping'] = undefined;

/**
 * @member {String} FriendlyName
 */
TunerHostInfo.prototype['FriendlyName'] = undefined;

/**
 * @member {String} Id
 */
TunerHostInfo.prototype['Id'] = undefined;

/**
 * @member {Boolean} ImportFavoritesOnly
 */
TunerHostInfo.prototype['ImportFavoritesOnly'] = undefined;

/**
 * @member {String} Source
 */
TunerHostInfo.prototype['Source'] = undefined;

/**
 * @member {Number} TunerCount
 */
TunerHostInfo.prototype['TunerCount'] = undefined;

/**
 * @member {String} Type
 */
TunerHostInfo.prototype['Type'] = undefined;

/**
 * @member {String} Url
 */
TunerHostInfo.prototype['Url'] = undefined;

/**
 * @member {String} UserAgent
 */
TunerHostInfo.prototype['UserAgent'] = undefined;






export default TunerHostInfo;

