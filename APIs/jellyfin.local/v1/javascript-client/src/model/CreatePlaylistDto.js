/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreatePlaylistDto model module.
 * @module model/CreatePlaylistDto
 * @version v1
 */
class CreatePlaylistDto {
    /**
     * Constructs a new <code>CreatePlaylistDto</code>.
     * Create new playlist dto.
     * @alias module:model/CreatePlaylistDto
     */
    constructor() { 
        
        CreatePlaylistDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreatePlaylistDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreatePlaylistDto} obj Optional instance to populate.
     * @return {module:model/CreatePlaylistDto} The populated <code>CreatePlaylistDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreatePlaylistDto();

            if (data.hasOwnProperty('Ids')) {
                obj['Ids'] = ApiClient.convertToType(data['Ids'], ['String']);
            }
            if (data.hasOwnProperty('MediaType')) {
                obj['MediaType'] = ApiClient.convertToType(data['MediaType'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('UserId')) {
                obj['UserId'] = ApiClient.convertToType(data['UserId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreatePlaylistDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreatePlaylistDto</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['Ids'])) {
            throw new Error("Expected the field `Ids` to be an array in the JSON data but got " + data['Ids']);
        }
        // ensure the json data is a string
        if (data['MediaType'] && !(typeof data['MediaType'] === 'string' || data['MediaType'] instanceof String)) {
            throw new Error("Expected the field `MediaType` to be a primitive type in the JSON string but got " + data['MediaType']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['UserId'] && !(typeof data['UserId'] === 'string' || data['UserId'] instanceof String)) {
            throw new Error("Expected the field `UserId` to be a primitive type in the JSON string but got " + data['UserId']);
        }

        return true;
    }


}



/**
 * Gets or sets item ids to add to the playlist.
 * @member {Array.<String>} Ids
 */
CreatePlaylistDto.prototype['Ids'] = undefined;

/**
 * Gets or sets the media type.
 * @member {String} MediaType
 */
CreatePlaylistDto.prototype['MediaType'] = undefined;

/**
 * Gets or sets the name of the new playlist.
 * @member {String} Name
 */
CreatePlaylistDto.prototype['Name'] = undefined;

/**
 * Gets or sets the user id.
 * @member {String} UserId
 */
CreatePlaylistDto.prototype['UserId'] = undefined;






export default CreatePlaylistDto;

