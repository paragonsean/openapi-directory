/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LiveTvServiceInfo from './LiveTvServiceInfo';

/**
 * The LiveTvInfo model module.
 * @module model/LiveTvInfo
 * @version v1
 */
class LiveTvInfo {
    /**
     * Constructs a new <code>LiveTvInfo</code>.
     * @alias module:model/LiveTvInfo
     */
    constructor() { 
        
        LiveTvInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LiveTvInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LiveTvInfo} obj Optional instance to populate.
     * @return {module:model/LiveTvInfo} The populated <code>LiveTvInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LiveTvInfo();

            if (data.hasOwnProperty('EnabledUsers')) {
                obj['EnabledUsers'] = ApiClient.convertToType(data['EnabledUsers'], ['String']);
            }
            if (data.hasOwnProperty('IsEnabled')) {
                obj['IsEnabled'] = ApiClient.convertToType(data['IsEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('Services')) {
                obj['Services'] = ApiClient.convertToType(data['Services'], [LiveTvServiceInfo]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LiveTvInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LiveTvInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['EnabledUsers'])) {
            throw new Error("Expected the field `EnabledUsers` to be an array in the JSON data but got " + data['EnabledUsers']);
        }
        if (data['Services']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Services'])) {
                throw new Error("Expected the field `Services` to be an array in the JSON data but got " + data['Services']);
            }
            // validate the optional field `Services` (array)
            for (const item of data['Services']) {
                LiveTvServiceInfo.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Gets or sets the enabled users.
 * @member {Array.<String>} EnabledUsers
 */
LiveTvInfo.prototype['EnabledUsers'] = undefined;

/**
 * Gets or sets a value indicating whether this instance is enabled.
 * @member {Boolean} IsEnabled
 */
LiveTvInfo.prototype['IsEnabled'] = undefined;

/**
 * Gets or sets the services.
 * @member {Array.<module:model/LiveTvServiceInfo>} Services
 */
LiveTvInfo.prototype['Services'] = undefined;






export default LiveTvInfo;

