/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LiveTvServiceStatus from './LiveTvServiceStatus';

/**
 * The LiveTvServiceInfo model module.
 * @module model/LiveTvServiceInfo
 * @version v1
 */
class LiveTvServiceInfo {
    /**
     * Constructs a new <code>LiveTvServiceInfo</code>.
     * Class ServiceInfo.
     * @alias module:model/LiveTvServiceInfo
     */
    constructor() { 
        
        LiveTvServiceInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LiveTvServiceInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LiveTvServiceInfo} obj Optional instance to populate.
     * @return {module:model/LiveTvServiceInfo} The populated <code>LiveTvServiceInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LiveTvServiceInfo();

            if (data.hasOwnProperty('HasUpdateAvailable')) {
                obj['HasUpdateAvailable'] = ApiClient.convertToType(data['HasUpdateAvailable'], 'Boolean');
            }
            if (data.hasOwnProperty('HomePageUrl')) {
                obj['HomePageUrl'] = ApiClient.convertToType(data['HomePageUrl'], 'String');
            }
            if (data.hasOwnProperty('IsVisible')) {
                obj['IsVisible'] = ApiClient.convertToType(data['IsVisible'], 'Boolean');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = LiveTvServiceStatus.constructFromObject(data['Status']);
            }
            if (data.hasOwnProperty('StatusMessage')) {
                obj['StatusMessage'] = ApiClient.convertToType(data['StatusMessage'], 'String');
            }
            if (data.hasOwnProperty('Tuners')) {
                obj['Tuners'] = ApiClient.convertToType(data['Tuners'], ['String']);
            }
            if (data.hasOwnProperty('Version')) {
                obj['Version'] = ApiClient.convertToType(data['Version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LiveTvServiceInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LiveTvServiceInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['HomePageUrl'] && !(typeof data['HomePageUrl'] === 'string' || data['HomePageUrl'] instanceof String)) {
            throw new Error("Expected the field `HomePageUrl` to be a primitive type in the JSON string but got " + data['HomePageUrl']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['StatusMessage'] && !(typeof data['StatusMessage'] === 'string' || data['StatusMessage'] instanceof String)) {
            throw new Error("Expected the field `StatusMessage` to be a primitive type in the JSON string but got " + data['StatusMessage']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Tuners'])) {
            throw new Error("Expected the field `Tuners` to be an array in the JSON data but got " + data['Tuners']);
        }
        // ensure the json data is a string
        if (data['Version'] && !(typeof data['Version'] === 'string' || data['Version'] instanceof String)) {
            throw new Error("Expected the field `Version` to be a primitive type in the JSON string but got " + data['Version']);
        }

        return true;
    }


}



/**
 * Gets or sets a value indicating whether this instance has update available.
 * @member {Boolean} HasUpdateAvailable
 */
LiveTvServiceInfo.prototype['HasUpdateAvailable'] = undefined;

/**
 * Gets or sets the home page URL.
 * @member {String} HomePageUrl
 */
LiveTvServiceInfo.prototype['HomePageUrl'] = undefined;

/**
 * Gets or sets a value indicating whether this instance is visible.
 * @member {Boolean} IsVisible
 */
LiveTvServiceInfo.prototype['IsVisible'] = undefined;

/**
 * Gets or sets the name.
 * @member {String} Name
 */
LiveTvServiceInfo.prototype['Name'] = undefined;

/**
 * @member {module:model/LiveTvServiceStatus} Status
 */
LiveTvServiceInfo.prototype['Status'] = undefined;

/**
 * Gets or sets the status message.
 * @member {String} StatusMessage
 */
LiveTvServiceInfo.prototype['StatusMessage'] = undefined;

/**
 * @member {Array.<String>} Tuners
 */
LiveTvServiceInfo.prototype['Tuners'] = undefined;

/**
 * Gets or sets the version.
 * @member {String} Version
 */
LiveTvServiceInfo.prototype['Version'] = undefined;






export default LiveTvServiceInfo;

