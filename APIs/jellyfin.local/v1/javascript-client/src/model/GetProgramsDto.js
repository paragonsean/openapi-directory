/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ImageType from './ImageType';
import ItemFields from './ItemFields';

/**
 * The GetProgramsDto model module.
 * @module model/GetProgramsDto
 * @version v1
 */
class GetProgramsDto {
    /**
     * Constructs a new <code>GetProgramsDto</code>.
     * Get programs dto.
     * @alias module:model/GetProgramsDto
     */
    constructor() { 
        
        GetProgramsDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetProgramsDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetProgramsDto} obj Optional instance to populate.
     * @return {module:model/GetProgramsDto} The populated <code>GetProgramsDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetProgramsDto();

            if (data.hasOwnProperty('ChannelIds')) {
                obj['ChannelIds'] = ApiClient.convertToType(data['ChannelIds'], ['String']);
            }
            if (data.hasOwnProperty('EnableImageTypes')) {
                obj['EnableImageTypes'] = ApiClient.convertToType(data['EnableImageTypes'], [ImageType]);
            }
            if (data.hasOwnProperty('EnableImages')) {
                obj['EnableImages'] = ApiClient.convertToType(data['EnableImages'], 'Boolean');
            }
            if (data.hasOwnProperty('EnableTotalRecordCount')) {
                obj['EnableTotalRecordCount'] = ApiClient.convertToType(data['EnableTotalRecordCount'], 'Boolean');
            }
            if (data.hasOwnProperty('EnableUserData')) {
                obj['EnableUserData'] = ApiClient.convertToType(data['EnableUserData'], 'Boolean');
            }
            if (data.hasOwnProperty('Fields')) {
                obj['Fields'] = ApiClient.convertToType(data['Fields'], [ItemFields]);
            }
            if (data.hasOwnProperty('GenreIds')) {
                obj['GenreIds'] = ApiClient.convertToType(data['GenreIds'], ['String']);
            }
            if (data.hasOwnProperty('Genres')) {
                obj['Genres'] = ApiClient.convertToType(data['Genres'], ['String']);
            }
            if (data.hasOwnProperty('HasAired')) {
                obj['HasAired'] = ApiClient.convertToType(data['HasAired'], 'Boolean');
            }
            if (data.hasOwnProperty('ImageTypeLimit')) {
                obj['ImageTypeLimit'] = ApiClient.convertToType(data['ImageTypeLimit'], 'Number');
            }
            if (data.hasOwnProperty('IsAiring')) {
                obj['IsAiring'] = ApiClient.convertToType(data['IsAiring'], 'Boolean');
            }
            if (data.hasOwnProperty('IsKids')) {
                obj['IsKids'] = ApiClient.convertToType(data['IsKids'], 'Boolean');
            }
            if (data.hasOwnProperty('IsMovie')) {
                obj['IsMovie'] = ApiClient.convertToType(data['IsMovie'], 'Boolean');
            }
            if (data.hasOwnProperty('IsNews')) {
                obj['IsNews'] = ApiClient.convertToType(data['IsNews'], 'Boolean');
            }
            if (data.hasOwnProperty('IsSeries')) {
                obj['IsSeries'] = ApiClient.convertToType(data['IsSeries'], 'Boolean');
            }
            if (data.hasOwnProperty('IsSports')) {
                obj['IsSports'] = ApiClient.convertToType(data['IsSports'], 'Boolean');
            }
            if (data.hasOwnProperty('LibrarySeriesId')) {
                obj['LibrarySeriesId'] = ApiClient.convertToType(data['LibrarySeriesId'], 'String');
            }
            if (data.hasOwnProperty('Limit')) {
                obj['Limit'] = ApiClient.convertToType(data['Limit'], 'Number');
            }
            if (data.hasOwnProperty('MaxEndDate')) {
                obj['MaxEndDate'] = ApiClient.convertToType(data['MaxEndDate'], 'Date');
            }
            if (data.hasOwnProperty('MaxStartDate')) {
                obj['MaxStartDate'] = ApiClient.convertToType(data['MaxStartDate'], 'Date');
            }
            if (data.hasOwnProperty('MinEndDate')) {
                obj['MinEndDate'] = ApiClient.convertToType(data['MinEndDate'], 'Date');
            }
            if (data.hasOwnProperty('MinStartDate')) {
                obj['MinStartDate'] = ApiClient.convertToType(data['MinStartDate'], 'Date');
            }
            if (data.hasOwnProperty('SeriesTimerId')) {
                obj['SeriesTimerId'] = ApiClient.convertToType(data['SeriesTimerId'], 'String');
            }
            if (data.hasOwnProperty('SortBy')) {
                obj['SortBy'] = ApiClient.convertToType(data['SortBy'], 'String');
            }
            if (data.hasOwnProperty('SortOrder')) {
                obj['SortOrder'] = ApiClient.convertToType(data['SortOrder'], 'String');
            }
            if (data.hasOwnProperty('StartIndex')) {
                obj['StartIndex'] = ApiClient.convertToType(data['StartIndex'], 'Number');
            }
            if (data.hasOwnProperty('UserId')) {
                obj['UserId'] = ApiClient.convertToType(data['UserId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetProgramsDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetProgramsDto</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['ChannelIds'])) {
            throw new Error("Expected the field `ChannelIds` to be an array in the JSON data but got " + data['ChannelIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['EnableImageTypes'])) {
            throw new Error("Expected the field `EnableImageTypes` to be an array in the JSON data but got " + data['EnableImageTypes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Fields'])) {
            throw new Error("Expected the field `Fields` to be an array in the JSON data but got " + data['Fields']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['GenreIds'])) {
            throw new Error("Expected the field `GenreIds` to be an array in the JSON data but got " + data['GenreIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Genres'])) {
            throw new Error("Expected the field `Genres` to be an array in the JSON data but got " + data['Genres']);
        }
        // ensure the json data is a string
        if (data['LibrarySeriesId'] && !(typeof data['LibrarySeriesId'] === 'string' || data['LibrarySeriesId'] instanceof String)) {
            throw new Error("Expected the field `LibrarySeriesId` to be a primitive type in the JSON string but got " + data['LibrarySeriesId']);
        }
        // ensure the json data is a string
        if (data['SeriesTimerId'] && !(typeof data['SeriesTimerId'] === 'string' || data['SeriesTimerId'] instanceof String)) {
            throw new Error("Expected the field `SeriesTimerId` to be a primitive type in the JSON string but got " + data['SeriesTimerId']);
        }
        // ensure the json data is a string
        if (data['SortBy'] && !(typeof data['SortBy'] === 'string' || data['SortBy'] instanceof String)) {
            throw new Error("Expected the field `SortBy` to be a primitive type in the JSON string but got " + data['SortBy']);
        }
        // ensure the json data is a string
        if (data['SortOrder'] && !(typeof data['SortOrder'] === 'string' || data['SortOrder'] instanceof String)) {
            throw new Error("Expected the field `SortOrder` to be a primitive type in the JSON string but got " + data['SortOrder']);
        }
        // ensure the json data is a string
        if (data['UserId'] && !(typeof data['UserId'] === 'string' || data['UserId'] instanceof String)) {
            throw new Error("Expected the field `UserId` to be a primitive type in the JSON string but got " + data['UserId']);
        }

        return true;
    }


}



/**
 * Gets or sets the channels to return guide information for.
 * @member {Array.<String>} ChannelIds
 */
GetProgramsDto.prototype['ChannelIds'] = undefined;

/**
 * Gets or sets the image types to include in the output.  Optional.
 * @member {Array.<module:model/ImageType>} EnableImageTypes
 */
GetProgramsDto.prototype['EnableImageTypes'] = undefined;

/**
 * Gets or sets include image information in output.  Optional.
 * @member {Boolean} EnableImages
 */
GetProgramsDto.prototype['EnableImages'] = undefined;

/**
 * Gets or sets a value indicating whether retrieve total record count.
 * @member {Boolean} EnableTotalRecordCount
 */
GetProgramsDto.prototype['EnableTotalRecordCount'] = undefined;

/**
 * Gets or sets include user data.  Optional.
 * @member {Boolean} EnableUserData
 */
GetProgramsDto.prototype['EnableUserData'] = undefined;

/**
 * Gets or sets specify additional fields of information to return in the output. This allows multiple, comma delimited. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines.  Optional.
 * @member {Array.<module:model/ItemFields>} Fields
 */
GetProgramsDto.prototype['Fields'] = undefined;

/**
 * Gets or sets the genre ids to return guide information for.
 * @member {Array.<String>} GenreIds
 */
GetProgramsDto.prototype['GenreIds'] = undefined;

/**
 * Gets or sets the genres to return guide information for.
 * @member {Array.<String>} Genres
 */
GetProgramsDto.prototype['Genres'] = undefined;

/**
 * Gets or sets filter by programs that have completed airing, or not.  Optional.
 * @member {Boolean} HasAired
 */
GetProgramsDto.prototype['HasAired'] = undefined;

/**
 * Gets or sets the max number of images to return, per image type.  Optional.
 * @member {Number} ImageTypeLimit
 */
GetProgramsDto.prototype['ImageTypeLimit'] = undefined;

/**
 * Gets or sets filter by programs that are currently airing, or not.  Optional.
 * @member {Boolean} IsAiring
 */
GetProgramsDto.prototype['IsAiring'] = undefined;

/**
 * Gets or sets filter for kids.  Optional.
 * @member {Boolean} IsKids
 */
GetProgramsDto.prototype['IsKids'] = undefined;

/**
 * Gets or sets filter for movies.  Optional.
 * @member {Boolean} IsMovie
 */
GetProgramsDto.prototype['IsMovie'] = undefined;

/**
 * Gets or sets filter for news.  Optional.
 * @member {Boolean} IsNews
 */
GetProgramsDto.prototype['IsNews'] = undefined;

/**
 * Gets or sets filter for series.  Optional.
 * @member {Boolean} IsSeries
 */
GetProgramsDto.prototype['IsSeries'] = undefined;

/**
 * Gets or sets filter for sports.  Optional.
 * @member {Boolean} IsSports
 */
GetProgramsDto.prototype['IsSports'] = undefined;

/**
 * Gets or sets filter by library series id.  Optional.
 * @member {String} LibrarySeriesId
 */
GetProgramsDto.prototype['LibrarySeriesId'] = undefined;

/**
 * Gets or sets the maximum number of records to return.  Optional.
 * @member {Number} Limit
 */
GetProgramsDto.prototype['Limit'] = undefined;

/**
 * Gets or sets the maximum premiere end date.  Optional.
 * @member {Date} MaxEndDate
 */
GetProgramsDto.prototype['MaxEndDate'] = undefined;

/**
 * Gets or sets the maximum premiere start date.  Optional.
 * @member {Date} MaxStartDate
 */
GetProgramsDto.prototype['MaxStartDate'] = undefined;

/**
 * Gets or sets the minimum premiere end date.  Optional.
 * @member {Date} MinEndDate
 */
GetProgramsDto.prototype['MinEndDate'] = undefined;

/**
 * Gets or sets the minimum premiere start date.  Optional.
 * @member {Date} MinStartDate
 */
GetProgramsDto.prototype['MinStartDate'] = undefined;

/**
 * Gets or sets filter by series timer id.  Optional.
 * @member {String} SeriesTimerId
 */
GetProgramsDto.prototype['SeriesTimerId'] = undefined;

/**
 * Gets or sets specify one or more sort orders, comma delimited. Options: Name, StartDate.  Optional.
 * @member {String} SortBy
 */
GetProgramsDto.prototype['SortBy'] = undefined;

/**
 * Gets or sets sort Order - Ascending,Descending.
 * @member {String} SortOrder
 */
GetProgramsDto.prototype['SortOrder'] = undefined;

/**
 * Gets or sets the record index to start at. All items with a lower index will be dropped from the results.  Optional.
 * @member {Number} StartIndex
 */
GetProgramsDto.prototype['StartIndex'] = undefined;

/**
 * Gets or sets optional. Filter by user id.
 * @member {String} UserId
 */
GetProgramsDto.prototype['UserId'] = undefined;






export default GetProgramsDto;

