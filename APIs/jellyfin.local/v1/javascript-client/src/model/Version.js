/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Version model module.
 * @module model/Version
 * @version v1
 */
class Version {
    /**
     * Constructs a new <code>Version</code>.
     * @alias module:model/Version
     */
    constructor() { 
        
        Version.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Version</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Version} obj Optional instance to populate.
     * @return {module:model/Version} The populated <code>Version</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Version();

            if (data.hasOwnProperty('Build')) {
                obj['Build'] = ApiClient.convertToType(data['Build'], 'Number');
            }
            if (data.hasOwnProperty('Major')) {
                obj['Major'] = ApiClient.convertToType(data['Major'], 'Number');
            }
            if (data.hasOwnProperty('MajorRevision')) {
                obj['MajorRevision'] = ApiClient.convertToType(data['MajorRevision'], 'Number');
            }
            if (data.hasOwnProperty('Minor')) {
                obj['Minor'] = ApiClient.convertToType(data['Minor'], 'Number');
            }
            if (data.hasOwnProperty('MinorRevision')) {
                obj['MinorRevision'] = ApiClient.convertToType(data['MinorRevision'], 'Number');
            }
            if (data.hasOwnProperty('Revision')) {
                obj['Revision'] = ApiClient.convertToType(data['Revision'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Version</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Version</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Number} Build
 */
Version.prototype['Build'] = undefined;

/**
 * @member {Number} Major
 */
Version.prototype['Major'] = undefined;

/**
 * @member {Number} MajorRevision
 */
Version.prototype['MajorRevision'] = undefined;

/**
 * @member {Number} Minor
 */
Version.prototype['Minor'] = undefined;

/**
 * @member {Number} MinorRevision
 */
Version.prototype['MinorRevision'] = undefined;

/**
 * @member {Number} Revision
 */
Version.prototype['Revision'] = undefined;






export default Version;

