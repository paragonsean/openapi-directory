/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DynamicDayOfWeek from './DynamicDayOfWeek';

/**
 * The AccessSchedule model module.
 * @module model/AccessSchedule
 * @version v1
 */
class AccessSchedule {
    /**
     * Constructs a new <code>AccessSchedule</code>.
     * An entity representing a user&#39;s access schedule.
     * @alias module:model/AccessSchedule
     * @param dayOfWeek {module:model/DynamicDayOfWeek} 
     * @param endHour {Number} Gets or sets the end hour.
     * @param id {Number} Gets or sets the id of this instance.
     * @param startHour {Number} Gets or sets the start hour.
     * @param userId {String} Gets or sets the id of the associated user.
     */
    constructor(dayOfWeek, endHour, id, startHour, userId) { 
        
        AccessSchedule.initialize(this, dayOfWeek, endHour, id, startHour, userId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dayOfWeek, endHour, id, startHour, userId) { 
        obj['DayOfWeek'] = dayOfWeek;
        obj['EndHour'] = endHour;
        obj['Id'] = id;
        obj['StartHour'] = startHour;
        obj['UserId'] = userId;
    }

    /**
     * Constructs a <code>AccessSchedule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccessSchedule} obj Optional instance to populate.
     * @return {module:model/AccessSchedule} The populated <code>AccessSchedule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccessSchedule();

            if (data.hasOwnProperty('DayOfWeek')) {
                obj['DayOfWeek'] = DynamicDayOfWeek.constructFromObject(data['DayOfWeek']);
            }
            if (data.hasOwnProperty('EndHour')) {
                obj['EndHour'] = ApiClient.convertToType(data['EndHour'], 'Number');
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'Number');
            }
            if (data.hasOwnProperty('StartHour')) {
                obj['StartHour'] = ApiClient.convertToType(data['StartHour'], 'Number');
            }
            if (data.hasOwnProperty('UserId')) {
                obj['UserId'] = ApiClient.convertToType(data['UserId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccessSchedule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccessSchedule</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AccessSchedule.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['UserId'] && !(typeof data['UserId'] === 'string' || data['UserId'] instanceof String)) {
            throw new Error("Expected the field `UserId` to be a primitive type in the JSON string but got " + data['UserId']);
        }

        return true;
    }


}

AccessSchedule.RequiredProperties = ["DayOfWeek", "EndHour", "Id", "StartHour", "UserId"];

/**
 * @member {module:model/DynamicDayOfWeek} DayOfWeek
 */
AccessSchedule.prototype['DayOfWeek'] = undefined;

/**
 * Gets or sets the end hour.
 * @member {Number} EndHour
 */
AccessSchedule.prototype['EndHour'] = undefined;

/**
 * Gets or sets the id of this instance.
 * @member {Number} Id
 */
AccessSchedule.prototype['Id'] = undefined;

/**
 * Gets or sets the start hour.
 * @member {Number} StartHour
 */
AccessSchedule.prototype['StartHour'] = undefined;

/**
 * Gets or sets the id of the associated user.
 * @member {String} UserId
 */
AccessSchedule.prototype['UserId'] = undefined;






export default AccessSchedule;

