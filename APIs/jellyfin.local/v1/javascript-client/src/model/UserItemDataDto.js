/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UserItemDataDto model module.
 * @module model/UserItemDataDto
 * @version v1
 */
class UserItemDataDto {
    /**
     * Constructs a new <code>UserItemDataDto</code>.
     * Class UserItemDataDto.
     * @alias module:model/UserItemDataDto
     */
    constructor() { 
        
        UserItemDataDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserItemDataDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserItemDataDto} obj Optional instance to populate.
     * @return {module:model/UserItemDataDto} The populated <code>UserItemDataDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserItemDataDto();

            if (data.hasOwnProperty('IsFavorite')) {
                obj['IsFavorite'] = ApiClient.convertToType(data['IsFavorite'], 'Boolean');
            }
            if (data.hasOwnProperty('ItemId')) {
                obj['ItemId'] = ApiClient.convertToType(data['ItemId'], 'String');
            }
            if (data.hasOwnProperty('Key')) {
                obj['Key'] = ApiClient.convertToType(data['Key'], 'String');
            }
            if (data.hasOwnProperty('LastPlayedDate')) {
                obj['LastPlayedDate'] = ApiClient.convertToType(data['LastPlayedDate'], 'Date');
            }
            if (data.hasOwnProperty('Likes')) {
                obj['Likes'] = ApiClient.convertToType(data['Likes'], 'Boolean');
            }
            if (data.hasOwnProperty('PlayCount')) {
                obj['PlayCount'] = ApiClient.convertToType(data['PlayCount'], 'Number');
            }
            if (data.hasOwnProperty('PlaybackPositionTicks')) {
                obj['PlaybackPositionTicks'] = ApiClient.convertToType(data['PlaybackPositionTicks'], 'Number');
            }
            if (data.hasOwnProperty('Played')) {
                obj['Played'] = ApiClient.convertToType(data['Played'], 'Boolean');
            }
            if (data.hasOwnProperty('PlayedPercentage')) {
                obj['PlayedPercentage'] = ApiClient.convertToType(data['PlayedPercentage'], 'Number');
            }
            if (data.hasOwnProperty('Rating')) {
                obj['Rating'] = ApiClient.convertToType(data['Rating'], 'Number');
            }
            if (data.hasOwnProperty('UnplayedItemCount')) {
                obj['UnplayedItemCount'] = ApiClient.convertToType(data['UnplayedItemCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserItemDataDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserItemDataDto</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ItemId'] && !(typeof data['ItemId'] === 'string' || data['ItemId'] instanceof String)) {
            throw new Error("Expected the field `ItemId` to be a primitive type in the JSON string but got " + data['ItemId']);
        }
        // ensure the json data is a string
        if (data['Key'] && !(typeof data['Key'] === 'string' || data['Key'] instanceof String)) {
            throw new Error("Expected the field `Key` to be a primitive type in the JSON string but got " + data['Key']);
        }

        return true;
    }


}



/**
 * Gets or sets a value indicating whether this instance is favorite.
 * @member {Boolean} IsFavorite
 */
UserItemDataDto.prototype['IsFavorite'] = undefined;

/**
 * Gets or sets the item identifier.
 * @member {String} ItemId
 */
UserItemDataDto.prototype['ItemId'] = undefined;

/**
 * Gets or sets the key.
 * @member {String} Key
 */
UserItemDataDto.prototype['Key'] = undefined;

/**
 * Gets or sets the last played date.
 * @member {Date} LastPlayedDate
 */
UserItemDataDto.prototype['LastPlayedDate'] = undefined;

/**
 * Gets or sets a value indicating whether this MediaBrowser.Model.Dto.UserItemDataDto is likes.
 * @member {Boolean} Likes
 */
UserItemDataDto.prototype['Likes'] = undefined;

/**
 * Gets or sets the play count.
 * @member {Number} PlayCount
 */
UserItemDataDto.prototype['PlayCount'] = undefined;

/**
 * Gets or sets the playback position ticks.
 * @member {Number} PlaybackPositionTicks
 */
UserItemDataDto.prototype['PlaybackPositionTicks'] = undefined;

/**
 * Gets or sets a value indicating whether this MediaBrowser.Model.Dto.UserItemDataDto is played.
 * @member {Boolean} Played
 */
UserItemDataDto.prototype['Played'] = undefined;

/**
 * Gets or sets the played percentage.
 * @member {Number} PlayedPercentage
 */
UserItemDataDto.prototype['PlayedPercentage'] = undefined;

/**
 * Gets or sets the rating.
 * @member {Number} Rating
 */
UserItemDataDto.prototype['Rating'] = undefined;

/**
 * Gets or sets the unplayed item count.
 * @member {Number} UnplayedItemCount
 */
UserItemDataDto.prototype['UnplayedItemCount'] = undefined;






export default UserItemDataDto;

