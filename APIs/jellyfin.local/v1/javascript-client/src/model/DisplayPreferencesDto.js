/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ScrollDirection from './ScrollDirection';
import SortOrder from './SortOrder';

/**
 * The DisplayPreferencesDto model module.
 * @module model/DisplayPreferencesDto
 * @version v1
 */
class DisplayPreferencesDto {
    /**
     * Constructs a new <code>DisplayPreferencesDto</code>.
     * Defines the display preferences for any item that supports them (usually Folders).
     * @alias module:model/DisplayPreferencesDto
     */
    constructor() { 
        
        DisplayPreferencesDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DisplayPreferencesDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DisplayPreferencesDto} obj Optional instance to populate.
     * @return {module:model/DisplayPreferencesDto} The populated <code>DisplayPreferencesDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DisplayPreferencesDto();

            if (data.hasOwnProperty('Client')) {
                obj['Client'] = ApiClient.convertToType(data['Client'], 'String');
            }
            if (data.hasOwnProperty('CustomPrefs')) {
                obj['CustomPrefs'] = ApiClient.convertToType(data['CustomPrefs'], {'String': 'String'});
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('IndexBy')) {
                obj['IndexBy'] = ApiClient.convertToType(data['IndexBy'], 'String');
            }
            if (data.hasOwnProperty('PrimaryImageHeight')) {
                obj['PrimaryImageHeight'] = ApiClient.convertToType(data['PrimaryImageHeight'], 'Number');
            }
            if (data.hasOwnProperty('PrimaryImageWidth')) {
                obj['PrimaryImageWidth'] = ApiClient.convertToType(data['PrimaryImageWidth'], 'Number');
            }
            if (data.hasOwnProperty('RememberIndexing')) {
                obj['RememberIndexing'] = ApiClient.convertToType(data['RememberIndexing'], 'Boolean');
            }
            if (data.hasOwnProperty('RememberSorting')) {
                obj['RememberSorting'] = ApiClient.convertToType(data['RememberSorting'], 'Boolean');
            }
            if (data.hasOwnProperty('ScrollDirection')) {
                obj['ScrollDirection'] = ScrollDirection.constructFromObject(data['ScrollDirection']);
            }
            if (data.hasOwnProperty('ShowBackdrop')) {
                obj['ShowBackdrop'] = ApiClient.convertToType(data['ShowBackdrop'], 'Boolean');
            }
            if (data.hasOwnProperty('ShowSidebar')) {
                obj['ShowSidebar'] = ApiClient.convertToType(data['ShowSidebar'], 'Boolean');
            }
            if (data.hasOwnProperty('SortBy')) {
                obj['SortBy'] = ApiClient.convertToType(data['SortBy'], 'String');
            }
            if (data.hasOwnProperty('SortOrder')) {
                obj['SortOrder'] = SortOrder.constructFromObject(data['SortOrder']);
            }
            if (data.hasOwnProperty('ViewType')) {
                obj['ViewType'] = ApiClient.convertToType(data['ViewType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DisplayPreferencesDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DisplayPreferencesDto</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Client'] && !(typeof data['Client'] === 'string' || data['Client'] instanceof String)) {
            throw new Error("Expected the field `Client` to be a primitive type in the JSON string but got " + data['Client']);
        }
        // ensure the json data is a string
        if (data['Id'] && !(typeof data['Id'] === 'string' || data['Id'] instanceof String)) {
            throw new Error("Expected the field `Id` to be a primitive type in the JSON string but got " + data['Id']);
        }
        // ensure the json data is a string
        if (data['IndexBy'] && !(typeof data['IndexBy'] === 'string' || data['IndexBy'] instanceof String)) {
            throw new Error("Expected the field `IndexBy` to be a primitive type in the JSON string but got " + data['IndexBy']);
        }
        // ensure the json data is a string
        if (data['SortBy'] && !(typeof data['SortBy'] === 'string' || data['SortBy'] instanceof String)) {
            throw new Error("Expected the field `SortBy` to be a primitive type in the JSON string but got " + data['SortBy']);
        }
        // ensure the json data is a string
        if (data['ViewType'] && !(typeof data['ViewType'] === 'string' || data['ViewType'] instanceof String)) {
            throw new Error("Expected the field `ViewType` to be a primitive type in the JSON string but got " + data['ViewType']);
        }

        return true;
    }


}



/**
 * Gets or sets the client.
 * @member {String} Client
 */
DisplayPreferencesDto.prototype['Client'] = undefined;

/**
 * Gets or sets the custom prefs.
 * @member {Object.<String, String>} CustomPrefs
 */
DisplayPreferencesDto.prototype['CustomPrefs'] = undefined;

/**
 * Gets or sets the user id.
 * @member {String} Id
 */
DisplayPreferencesDto.prototype['Id'] = undefined;

/**
 * Gets or sets the index by.
 * @member {String} IndexBy
 */
DisplayPreferencesDto.prototype['IndexBy'] = undefined;

/**
 * Gets or sets the height of the primary image.
 * @member {Number} PrimaryImageHeight
 */
DisplayPreferencesDto.prototype['PrimaryImageHeight'] = undefined;

/**
 * Gets or sets the width of the primary image.
 * @member {Number} PrimaryImageWidth
 */
DisplayPreferencesDto.prototype['PrimaryImageWidth'] = undefined;

/**
 * Gets or sets a value indicating whether [remember indexing].
 * @member {Boolean} RememberIndexing
 */
DisplayPreferencesDto.prototype['RememberIndexing'] = undefined;

/**
 * Gets or sets a value indicating whether [remember sorting].
 * @member {Boolean} RememberSorting
 */
DisplayPreferencesDto.prototype['RememberSorting'] = undefined;

/**
 * @member {module:model/ScrollDirection} ScrollDirection
 */
DisplayPreferencesDto.prototype['ScrollDirection'] = undefined;

/**
 * Gets or sets a value indicating whether to show backdrops on this item.
 * @member {Boolean} ShowBackdrop
 */
DisplayPreferencesDto.prototype['ShowBackdrop'] = undefined;

/**
 * Gets or sets a value indicating whether [show sidebar].
 * @member {Boolean} ShowSidebar
 */
DisplayPreferencesDto.prototype['ShowSidebar'] = undefined;

/**
 * Gets or sets the sort by.
 * @member {String} SortBy
 */
DisplayPreferencesDto.prototype['SortBy'] = undefined;

/**
 * @member {module:model/SortOrder} SortOrder
 */
DisplayPreferencesDto.prototype['SortOrder'] = undefined;

/**
 * Gets or sets the type of the view.
 * @member {String} ViewType
 */
DisplayPreferencesDto.prototype['ViewType'] = undefined;






export default DisplayPreferencesDto;

