/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DayOfWeek from './DayOfWeek';

/**
 * The TaskTriggerInfo model module.
 * @module model/TaskTriggerInfo
 * @version v1
 */
class TaskTriggerInfo {
    /**
     * Constructs a new <code>TaskTriggerInfo</code>.
     * Class TaskTriggerInfo.
     * @alias module:model/TaskTriggerInfo
     */
    constructor() { 
        
        TaskTriggerInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TaskTriggerInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TaskTriggerInfo} obj Optional instance to populate.
     * @return {module:model/TaskTriggerInfo} The populated <code>TaskTriggerInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TaskTriggerInfo();

            if (data.hasOwnProperty('DayOfWeek')) {
                obj['DayOfWeek'] = DayOfWeek.constructFromObject(data['DayOfWeek']);
            }
            if (data.hasOwnProperty('IntervalTicks')) {
                obj['IntervalTicks'] = ApiClient.convertToType(data['IntervalTicks'], 'Number');
            }
            if (data.hasOwnProperty('MaxRuntimeTicks')) {
                obj['MaxRuntimeTicks'] = ApiClient.convertToType(data['MaxRuntimeTicks'], 'Number');
            }
            if (data.hasOwnProperty('TimeOfDayTicks')) {
                obj['TimeOfDayTicks'] = ApiClient.convertToType(data['TimeOfDayTicks'], 'Number');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TaskTriggerInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TaskTriggerInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Type'] && !(typeof data['Type'] === 'string' || data['Type'] instanceof String)) {
            throw new Error("Expected the field `Type` to be a primitive type in the JSON string but got " + data['Type']);
        }

        return true;
    }


}



/**
 * @member {module:model/DayOfWeek} DayOfWeek
 */
TaskTriggerInfo.prototype['DayOfWeek'] = undefined;

/**
 * Gets or sets the interval.
 * @member {Number} IntervalTicks
 */
TaskTriggerInfo.prototype['IntervalTicks'] = undefined;

/**
 * Gets or sets the maximum runtime ticks.
 * @member {Number} MaxRuntimeTicks
 */
TaskTriggerInfo.prototype['MaxRuntimeTicks'] = undefined;

/**
 * Gets or sets the time of day.
 * @member {Number} TimeOfDayTicks
 */
TaskTriggerInfo.prototype['TimeOfDayTicks'] = undefined;

/**
 * Gets or sets the type.
 * @member {String} Type
 */
TaskTriggerInfo.prototype['Type'] = undefined;






export default TaskTriggerInfo;

