/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PlayCommand from './PlayCommand';

/**
 * The PlayRequest model module.
 * @module model/PlayRequest
 * @version v1
 */
class PlayRequest {
    /**
     * Constructs a new <code>PlayRequest</code>.
     * Class PlayRequest.
     * @alias module:model/PlayRequest
     */
    constructor() { 
        
        PlayRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PlayRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PlayRequest} obj Optional instance to populate.
     * @return {module:model/PlayRequest} The populated <code>PlayRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PlayRequest();

            if (data.hasOwnProperty('AudioStreamIndex')) {
                obj['AudioStreamIndex'] = ApiClient.convertToType(data['AudioStreamIndex'], 'Number');
            }
            if (data.hasOwnProperty('ControllingUserId')) {
                obj['ControllingUserId'] = ApiClient.convertToType(data['ControllingUserId'], 'String');
            }
            if (data.hasOwnProperty('ItemIds')) {
                obj['ItemIds'] = ApiClient.convertToType(data['ItemIds'], ['String']);
            }
            if (data.hasOwnProperty('MediaSourceId')) {
                obj['MediaSourceId'] = ApiClient.convertToType(data['MediaSourceId'], 'String');
            }
            if (data.hasOwnProperty('PlayCommand')) {
                obj['PlayCommand'] = PlayCommand.constructFromObject(data['PlayCommand']);
            }
            if (data.hasOwnProperty('StartIndex')) {
                obj['StartIndex'] = ApiClient.convertToType(data['StartIndex'], 'Number');
            }
            if (data.hasOwnProperty('StartPositionTicks')) {
                obj['StartPositionTicks'] = ApiClient.convertToType(data['StartPositionTicks'], 'Number');
            }
            if (data.hasOwnProperty('SubtitleStreamIndex')) {
                obj['SubtitleStreamIndex'] = ApiClient.convertToType(data['SubtitleStreamIndex'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PlayRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PlayRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ControllingUserId'] && !(typeof data['ControllingUserId'] === 'string' || data['ControllingUserId'] instanceof String)) {
            throw new Error("Expected the field `ControllingUserId` to be a primitive type in the JSON string but got " + data['ControllingUserId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ItemIds'])) {
            throw new Error("Expected the field `ItemIds` to be an array in the JSON data but got " + data['ItemIds']);
        }
        // ensure the json data is a string
        if (data['MediaSourceId'] && !(typeof data['MediaSourceId'] === 'string' || data['MediaSourceId'] instanceof String)) {
            throw new Error("Expected the field `MediaSourceId` to be a primitive type in the JSON string but got " + data['MediaSourceId']);
        }

        return true;
    }


}



/**
 * @member {Number} AudioStreamIndex
 */
PlayRequest.prototype['AudioStreamIndex'] = undefined;

/**
 * Gets or sets the controlling user identifier.
 * @member {String} ControllingUserId
 */
PlayRequest.prototype['ControllingUserId'] = undefined;

/**
 * Gets or sets the item ids.
 * @member {Array.<String>} ItemIds
 */
PlayRequest.prototype['ItemIds'] = undefined;

/**
 * @member {String} MediaSourceId
 */
PlayRequest.prototype['MediaSourceId'] = undefined;

/**
 * @member {module:model/PlayCommand} PlayCommand
 */
PlayRequest.prototype['PlayCommand'] = undefined;

/**
 * @member {Number} StartIndex
 */
PlayRequest.prototype['StartIndex'] = undefined;

/**
 * Gets or sets the start position ticks that the first item should be played at.
 * @member {Number} StartPositionTicks
 */
PlayRequest.prototype['StartPositionTicks'] = undefined;

/**
 * @member {Number} SubtitleStreamIndex
 */
PlayRequest.prototype['SubtitleStreamIndex'] = undefined;






export default PlayRequest;

