/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RemoteSearchResult model module.
 * @module model/RemoteSearchResult
 * @version v1
 */
class RemoteSearchResult {
    /**
     * Constructs a new <code>RemoteSearchResult</code>.
     * @alias module:model/RemoteSearchResult
     */
    constructor() { 
        
        RemoteSearchResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RemoteSearchResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RemoteSearchResult} obj Optional instance to populate.
     * @return {module:model/RemoteSearchResult} The populated <code>RemoteSearchResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RemoteSearchResult();

            if (data.hasOwnProperty('AlbumArtist')) {
                obj['AlbumArtist'] = RemoteSearchResult.constructFromObject(data['AlbumArtist']);
            }
            if (data.hasOwnProperty('Artists')) {
                obj['Artists'] = ApiClient.convertToType(data['Artists'], [RemoteSearchResult]);
            }
            if (data.hasOwnProperty('ImageUrl')) {
                obj['ImageUrl'] = ApiClient.convertToType(data['ImageUrl'], 'String');
            }
            if (data.hasOwnProperty('IndexNumber')) {
                obj['IndexNumber'] = ApiClient.convertToType(data['IndexNumber'], 'Number');
            }
            if (data.hasOwnProperty('IndexNumberEnd')) {
                obj['IndexNumberEnd'] = ApiClient.convertToType(data['IndexNumberEnd'], 'Number');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Overview')) {
                obj['Overview'] = ApiClient.convertToType(data['Overview'], 'String');
            }
            if (data.hasOwnProperty('ParentIndexNumber')) {
                obj['ParentIndexNumber'] = ApiClient.convertToType(data['ParentIndexNumber'], 'Number');
            }
            if (data.hasOwnProperty('PremiereDate')) {
                obj['PremiereDate'] = ApiClient.convertToType(data['PremiereDate'], 'Date');
            }
            if (data.hasOwnProperty('ProductionYear')) {
                obj['ProductionYear'] = ApiClient.convertToType(data['ProductionYear'], 'Number');
            }
            if (data.hasOwnProperty('ProviderIds')) {
                obj['ProviderIds'] = ApiClient.convertToType(data['ProviderIds'], {'String': 'String'});
            }
            if (data.hasOwnProperty('SearchProviderName')) {
                obj['SearchProviderName'] = ApiClient.convertToType(data['SearchProviderName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RemoteSearchResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RemoteSearchResult</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AlbumArtist`
        if (data['AlbumArtist']) { // data not null
          RemoteSearchResult.validateJSON(data['AlbumArtist']);
        }
        if (data['Artists']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Artists'])) {
                throw new Error("Expected the field `Artists` to be an array in the JSON data but got " + data['Artists']);
            }
            // validate the optional field `Artists` (array)
            for (const item of data['Artists']) {
                RemoteSearchResult.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['ImageUrl'] && !(typeof data['ImageUrl'] === 'string' || data['ImageUrl'] instanceof String)) {
            throw new Error("Expected the field `ImageUrl` to be a primitive type in the JSON string but got " + data['ImageUrl']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['Overview'] && !(typeof data['Overview'] === 'string' || data['Overview'] instanceof String)) {
            throw new Error("Expected the field `Overview` to be a primitive type in the JSON string but got " + data['Overview']);
        }
        // ensure the json data is a string
        if (data['SearchProviderName'] && !(typeof data['SearchProviderName'] === 'string' || data['SearchProviderName'] instanceof String)) {
            throw new Error("Expected the field `SearchProviderName` to be a primitive type in the JSON string but got " + data['SearchProviderName']);
        }

        return true;
    }


}



/**
 * @member {module:model/RemoteSearchResult} AlbumArtist
 */
RemoteSearchResult.prototype['AlbumArtist'] = undefined;

/**
 * @member {Array.<module:model/RemoteSearchResult>} Artists
 */
RemoteSearchResult.prototype['Artists'] = undefined;

/**
 * @member {String} ImageUrl
 */
RemoteSearchResult.prototype['ImageUrl'] = undefined;

/**
 * @member {Number} IndexNumber
 */
RemoteSearchResult.prototype['IndexNumber'] = undefined;

/**
 * @member {Number} IndexNumberEnd
 */
RemoteSearchResult.prototype['IndexNumberEnd'] = undefined;

/**
 * Gets or sets the name.
 * @member {String} Name
 */
RemoteSearchResult.prototype['Name'] = undefined;

/**
 * @member {String} Overview
 */
RemoteSearchResult.prototype['Overview'] = undefined;

/**
 * @member {Number} ParentIndexNumber
 */
RemoteSearchResult.prototype['ParentIndexNumber'] = undefined;

/**
 * @member {Date} PremiereDate
 */
RemoteSearchResult.prototype['PremiereDate'] = undefined;

/**
 * Gets or sets the year.
 * @member {Number} ProductionYear
 */
RemoteSearchResult.prototype['ProductionYear'] = undefined;

/**
 * Gets or sets the provider ids.
 * @member {Object.<String, String>} ProviderIds
 */
RemoteSearchResult.prototype['ProviderIds'] = undefined;

/**
 * @member {String} SearchProviderName
 */
RemoteSearchResult.prototype['SearchProviderName'] = undefined;






export default RemoteSearchResult;

