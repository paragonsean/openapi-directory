/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MediaUrl from './MediaUrl';

/**
 * The BaseItem model module.
 * @module model/BaseItem
 * @version v1
 */
class BaseItem {
    /**
     * Constructs a new <code>BaseItem</code>.
     * Class BaseItem.
     * @alias module:model/BaseItem
     */
    constructor() { 
        
        BaseItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BaseItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BaseItem} obj Optional instance to populate.
     * @return {module:model/BaseItem} The populated <code>BaseItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BaseItem();

            if (data.hasOwnProperty('Container')) {
                obj['Container'] = ApiClient.convertToType(data['Container'], 'String');
            }
            if (data.hasOwnProperty('DateLastSaved')) {
                obj['DateLastSaved'] = ApiClient.convertToType(data['DateLastSaved'], 'Date');
            }
            if (data.hasOwnProperty('ExtraIds')) {
                obj['ExtraIds'] = ApiClient.convertToType(data['ExtraIds'], ['String']);
            }
            if (data.hasOwnProperty('Height')) {
                obj['Height'] = ApiClient.convertToType(data['Height'], 'Number');
            }
            if (data.hasOwnProperty('IsHD')) {
                obj['IsHD'] = ApiClient.convertToType(data['IsHD'], 'Boolean');
            }
            if (data.hasOwnProperty('IsShortcut')) {
                obj['IsShortcut'] = ApiClient.convertToType(data['IsShortcut'], 'Boolean');
            }
            if (data.hasOwnProperty('RemoteTrailers')) {
                obj['RemoteTrailers'] = ApiClient.convertToType(data['RemoteTrailers'], [MediaUrl]);
            }
            if (data.hasOwnProperty('ShortcutPath')) {
                obj['ShortcutPath'] = ApiClient.convertToType(data['ShortcutPath'], 'String');
            }
            if (data.hasOwnProperty('Size')) {
                obj['Size'] = ApiClient.convertToType(data['Size'], 'Number');
            }
            if (data.hasOwnProperty('SupportsExternalTransfer')) {
                obj['SupportsExternalTransfer'] = ApiClient.convertToType(data['SupportsExternalTransfer'], 'Boolean');
            }
            if (data.hasOwnProperty('Width')) {
                obj['Width'] = ApiClient.convertToType(data['Width'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BaseItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BaseItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Container'] && !(typeof data['Container'] === 'string' || data['Container'] instanceof String)) {
            throw new Error("Expected the field `Container` to be a primitive type in the JSON string but got " + data['Container']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ExtraIds'])) {
            throw new Error("Expected the field `ExtraIds` to be an array in the JSON data but got " + data['ExtraIds']);
        }
        if (data['RemoteTrailers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['RemoteTrailers'])) {
                throw new Error("Expected the field `RemoteTrailers` to be an array in the JSON data but got " + data['RemoteTrailers']);
            }
            // validate the optional field `RemoteTrailers` (array)
            for (const item of data['RemoteTrailers']) {
                MediaUrl.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['ShortcutPath'] && !(typeof data['ShortcutPath'] === 'string' || data['ShortcutPath'] instanceof String)) {
            throw new Error("Expected the field `ShortcutPath` to be a primitive type in the JSON string but got " + data['ShortcutPath']);
        }

        return true;
    }


}



/**
 * @member {String} Container
 */
BaseItem.prototype['Container'] = undefined;

/**
 * @member {Date} DateLastSaved
 */
BaseItem.prototype['DateLastSaved'] = undefined;

/**
 * @member {Array.<String>} ExtraIds
 */
BaseItem.prototype['ExtraIds'] = undefined;

/**
 * @member {Number} Height
 */
BaseItem.prototype['Height'] = undefined;

/**
 * @member {Boolean} IsHD
 */
BaseItem.prototype['IsHD'] = undefined;

/**
 * @member {Boolean} IsShortcut
 */
BaseItem.prototype['IsShortcut'] = undefined;

/**
 * Gets or sets the remote trailers.
 * @member {Array.<module:model/MediaUrl>} RemoteTrailers
 */
BaseItem.prototype['RemoteTrailers'] = undefined;

/**
 * @member {String} ShortcutPath
 */
BaseItem.prototype['ShortcutPath'] = undefined;

/**
 * @member {Number} Size
 */
BaseItem.prototype['Size'] = undefined;

/**
 * @member {Boolean} SupportsExternalTransfer
 */
BaseItem.prototype['SupportsExternalTransfer'] = undefined;

/**
 * @member {Number} Width
 */
BaseItem.prototype['Width'] = undefined;






export default BaseItem;

