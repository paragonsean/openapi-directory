/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CountryInfo from '../model/CountryInfo';
import CultureDto from '../model/CultureDto';
import LocalizationOption from '../model/LocalizationOption';
import ParentalRating from '../model/ParentalRating';

/**
* Localization service.
* @module api/LocalizationApi
* @version v1
*/
export default class LocalizationApi {

    /**
    * Constructs a new LocalizationApi. 
    * @alias module:api/LocalizationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getCountries operation.
     * @callback module:api/LocalizationApi~getCountriesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/CountryInfo>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets known countries.
     * @param {module:api/LocalizationApi~getCountriesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/CountryInfo>}
     */
    getCountries(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['CustomAuthentication'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/json; profile=CamelCase', 'application/json; profile=PascalCase'];
      let returnType = [CountryInfo];
      return this.apiClient.callApi(
        '/Localization/Countries', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCultures operation.
     * @callback module:api/LocalizationApi~getCulturesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/CultureDto>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets known cultures.
     * @param {module:api/LocalizationApi~getCulturesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/CultureDto>}
     */
    getCultures(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['CustomAuthentication'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/json; profile=CamelCase', 'application/json; profile=PascalCase'];
      let returnType = [CultureDto];
      return this.apiClient.callApi(
        '/Localization/Cultures', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getLocalizationOptions operation.
     * @callback module:api/LocalizationApi~getLocalizationOptionsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/LocalizationOption>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets localization options.
     * @param {module:api/LocalizationApi~getLocalizationOptionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/LocalizationOption>}
     */
    getLocalizationOptions(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['CustomAuthentication'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/json; profile=CamelCase', 'application/json; profile=PascalCase'];
      let returnType = [LocalizationOption];
      return this.apiClient.callApi(
        '/Localization/Options', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getParentalRatings operation.
     * @callback module:api/LocalizationApi~getParentalRatingsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ParentalRating>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets known parental ratings.
     * @param {module:api/LocalizationApi~getParentalRatingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ParentalRating>}
     */
    getParentalRatings(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['CustomAuthentication'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/json; profile=CamelCase', 'application/json; profile=PascalCase'];
      let returnType = [ParentalRating];
      return this.apiClient.callApi(
        '/Localization/ParentalRatings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
