/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JellyfinApi);
  }
}(this, function(expect, JellyfinApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JellyfinApi.MediaStream();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MediaStream', function() {
    it('should create an instance of MediaStream', function() {
      // uncomment below and update the code to test MediaStream
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be.a(JellyfinApi.MediaStream);
    });

    it('should have the property aspectRatio (base name: "AspectRatio")', function() {
      // uncomment below and update the code to test the property aspectRatio
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property averageFrameRate (base name: "AverageFrameRate")', function() {
      // uncomment below and update the code to test the property averageFrameRate
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property bitDepth (base name: "BitDepth")', function() {
      // uncomment below and update the code to test the property bitDepth
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property bitRate (base name: "BitRate")', function() {
      // uncomment below and update the code to test the property bitRate
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property channelLayout (base name: "ChannelLayout")', function() {
      // uncomment below and update the code to test the property channelLayout
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property channels (base name: "Channels")', function() {
      // uncomment below and update the code to test the property channels
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property codec (base name: "Codec")', function() {
      // uncomment below and update the code to test the property codec
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property codecTag (base name: "CodecTag")', function() {
      // uncomment below and update the code to test the property codecTag
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property codecTimeBase (base name: "CodecTimeBase")', function() {
      // uncomment below and update the code to test the property codecTimeBase
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property colorPrimaries (base name: "ColorPrimaries")', function() {
      // uncomment below and update the code to test the property colorPrimaries
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property colorRange (base name: "ColorRange")', function() {
      // uncomment below and update the code to test the property colorRange
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property colorSpace (base name: "ColorSpace")', function() {
      // uncomment below and update the code to test the property colorSpace
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property colorTransfer (base name: "ColorTransfer")', function() {
      // uncomment below and update the code to test the property colorTransfer
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property comment (base name: "Comment")', function() {
      // uncomment below and update the code to test the property comment
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property deliveryMethod (base name: "DeliveryMethod")', function() {
      // uncomment below and update the code to test the property deliveryMethod
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property deliveryUrl (base name: "DeliveryUrl")', function() {
      // uncomment below and update the code to test the property deliveryUrl
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property displayTitle (base name: "DisplayTitle")', function() {
      // uncomment below and update the code to test the property displayTitle
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property height (base name: "Height")', function() {
      // uncomment below and update the code to test the property height
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property index (base name: "Index")', function() {
      // uncomment below and update the code to test the property index
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property isAVC (base name: "IsAVC")', function() {
      // uncomment below and update the code to test the property isAVC
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property isAnamorphic (base name: "IsAnamorphic")', function() {
      // uncomment below and update the code to test the property isAnamorphic
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property isDefault (base name: "IsDefault")', function() {
      // uncomment below and update the code to test the property isDefault
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property isExternal (base name: "IsExternal")', function() {
      // uncomment below and update the code to test the property isExternal
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property isExternalUrl (base name: "IsExternalUrl")', function() {
      // uncomment below and update the code to test the property isExternalUrl
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property isForced (base name: "IsForced")', function() {
      // uncomment below and update the code to test the property isForced
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property isInterlaced (base name: "IsInterlaced")', function() {
      // uncomment below and update the code to test the property isInterlaced
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property isTextSubtitleStream (base name: "IsTextSubtitleStream")', function() {
      // uncomment below and update the code to test the property isTextSubtitleStream
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property language (base name: "Language")', function() {
      // uncomment below and update the code to test the property language
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property level (base name: "Level")', function() {
      // uncomment below and update the code to test the property level
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property nalLengthSize (base name: "NalLengthSize")', function() {
      // uncomment below and update the code to test the property nalLengthSize
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property packetLength (base name: "PacketLength")', function() {
      // uncomment below and update the code to test the property packetLength
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property path (base name: "Path")', function() {
      // uncomment below and update the code to test the property path
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property pixelFormat (base name: "PixelFormat")', function() {
      // uncomment below and update the code to test the property pixelFormat
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property profile (base name: "Profile")', function() {
      // uncomment below and update the code to test the property profile
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property realFrameRate (base name: "RealFrameRate")', function() {
      // uncomment below and update the code to test the property realFrameRate
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property refFrames (base name: "RefFrames")', function() {
      // uncomment below and update the code to test the property refFrames
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property sampleRate (base name: "SampleRate")', function() {
      // uncomment below and update the code to test the property sampleRate
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property score (base name: "Score")', function() {
      // uncomment below and update the code to test the property score
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property supportsExternalStream (base name: "SupportsExternalStream")', function() {
      // uncomment below and update the code to test the property supportsExternalStream
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property timeBase (base name: "TimeBase")', function() {
      // uncomment below and update the code to test the property timeBase
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "Title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "Type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property videoRange (base name: "VideoRange")', function() {
      // uncomment below and update the code to test the property videoRange
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property width (base name: "Width")', function() {
      // uncomment below and update the code to test the property width
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property localizedDefault (base name: "localizedDefault")', function() {
      // uncomment below and update the code to test the property localizedDefault
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property localizedForced (base name: "localizedForced")', function() {
      // uncomment below and update the code to test the property localizedForced
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

    it('should have the property localizedUndefined (base name: "localizedUndefined")', function() {
      // uncomment below and update the code to test the property localizedUndefined
      //var instance = new JellyfinApi.MediaStream();
      //expect(instance).to.be();
    });

  });

}));
