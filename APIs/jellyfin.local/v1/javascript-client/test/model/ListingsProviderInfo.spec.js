/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JellyfinApi);
  }
}(this, function(expect, JellyfinApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JellyfinApi.ListingsProviderInfo();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ListingsProviderInfo', function() {
    it('should create an instance of ListingsProviderInfo', function() {
      // uncomment below and update the code to test ListingsProviderInfo
      //var instance = new JellyfinApi.ListingsProviderInfo();
      //expect(instance).to.be.a(JellyfinApi.ListingsProviderInfo);
    });

    it('should have the property channelMappings (base name: "ChannelMappings")', function() {
      // uncomment below and update the code to test the property channelMappings
      //var instance = new JellyfinApi.ListingsProviderInfo();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "Country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new JellyfinApi.ListingsProviderInfo();
      //expect(instance).to.be();
    });

    it('should have the property enableAllTuners (base name: "EnableAllTuners")', function() {
      // uncomment below and update the code to test the property enableAllTuners
      //var instance = new JellyfinApi.ListingsProviderInfo();
      //expect(instance).to.be();
    });

    it('should have the property enabledTuners (base name: "EnabledTuners")', function() {
      // uncomment below and update the code to test the property enabledTuners
      //var instance = new JellyfinApi.ListingsProviderInfo();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "Id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new JellyfinApi.ListingsProviderInfo();
      //expect(instance).to.be();
    });

    it('should have the property kidsCategories (base name: "KidsCategories")', function() {
      // uncomment below and update the code to test the property kidsCategories
      //var instance = new JellyfinApi.ListingsProviderInfo();
      //expect(instance).to.be();
    });

    it('should have the property listingsId (base name: "ListingsId")', function() {
      // uncomment below and update the code to test the property listingsId
      //var instance = new JellyfinApi.ListingsProviderInfo();
      //expect(instance).to.be();
    });

    it('should have the property movieCategories (base name: "MovieCategories")', function() {
      // uncomment below and update the code to test the property movieCategories
      //var instance = new JellyfinApi.ListingsProviderInfo();
      //expect(instance).to.be();
    });

    it('should have the property moviePrefix (base name: "MoviePrefix")', function() {
      // uncomment below and update the code to test the property moviePrefix
      //var instance = new JellyfinApi.ListingsProviderInfo();
      //expect(instance).to.be();
    });

    it('should have the property newsCategories (base name: "NewsCategories")', function() {
      // uncomment below and update the code to test the property newsCategories
      //var instance = new JellyfinApi.ListingsProviderInfo();
      //expect(instance).to.be();
    });

    it('should have the property password (base name: "Password")', function() {
      // uncomment below and update the code to test the property password
      //var instance = new JellyfinApi.ListingsProviderInfo();
      //expect(instance).to.be();
    });

    it('should have the property path (base name: "Path")', function() {
      // uncomment below and update the code to test the property path
      //var instance = new JellyfinApi.ListingsProviderInfo();
      //expect(instance).to.be();
    });

    it('should have the property preferredLanguage (base name: "PreferredLanguage")', function() {
      // uncomment below and update the code to test the property preferredLanguage
      //var instance = new JellyfinApi.ListingsProviderInfo();
      //expect(instance).to.be();
    });

    it('should have the property sportsCategories (base name: "SportsCategories")', function() {
      // uncomment below and update the code to test the property sportsCategories
      //var instance = new JellyfinApi.ListingsProviderInfo();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "Type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new JellyfinApi.ListingsProviderInfo();
      //expect(instance).to.be();
    });

    it('should have the property userAgent (base name: "UserAgent")', function() {
      // uncomment below and update the code to test the property userAgent
      //var instance = new JellyfinApi.ListingsProviderInfo();
      //expect(instance).to.be();
    });

    it('should have the property username (base name: "Username")', function() {
      // uncomment below and update the code to test the property username
      //var instance = new JellyfinApi.ListingsProviderInfo();
      //expect(instance).to.be();
    });

    it('should have the property zipCode (base name: "ZipCode")', function() {
      // uncomment below and update the code to test the property zipCode
      //var instance = new JellyfinApi.ListingsProviderInfo();
      //expect(instance).to.be();
    });

  });

}));
