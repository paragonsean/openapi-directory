/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JellyfinApi);
  }
}(this, function(expect, JellyfinApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JellyfinApi.GetProgramsDto();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetProgramsDto', function() {
    it('should create an instance of GetProgramsDto', function() {
      // uncomment below and update the code to test GetProgramsDto
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be.a(JellyfinApi.GetProgramsDto);
    });

    it('should have the property channelIds (base name: "ChannelIds")', function() {
      // uncomment below and update the code to test the property channelIds
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

    it('should have the property enableImageTypes (base name: "EnableImageTypes")', function() {
      // uncomment below and update the code to test the property enableImageTypes
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

    it('should have the property enableImages (base name: "EnableImages")', function() {
      // uncomment below and update the code to test the property enableImages
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

    it('should have the property enableTotalRecordCount (base name: "EnableTotalRecordCount")', function() {
      // uncomment below and update the code to test the property enableTotalRecordCount
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

    it('should have the property enableUserData (base name: "EnableUserData")', function() {
      // uncomment below and update the code to test the property enableUserData
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

    it('should have the property fields (base name: "Fields")', function() {
      // uncomment below and update the code to test the property fields
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

    it('should have the property genreIds (base name: "GenreIds")', function() {
      // uncomment below and update the code to test the property genreIds
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

    it('should have the property genres (base name: "Genres")', function() {
      // uncomment below and update the code to test the property genres
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

    it('should have the property hasAired (base name: "HasAired")', function() {
      // uncomment below and update the code to test the property hasAired
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

    it('should have the property imageTypeLimit (base name: "ImageTypeLimit")', function() {
      // uncomment below and update the code to test the property imageTypeLimit
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

    it('should have the property isAiring (base name: "IsAiring")', function() {
      // uncomment below and update the code to test the property isAiring
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

    it('should have the property isKids (base name: "IsKids")', function() {
      // uncomment below and update the code to test the property isKids
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

    it('should have the property isMovie (base name: "IsMovie")', function() {
      // uncomment below and update the code to test the property isMovie
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

    it('should have the property isNews (base name: "IsNews")', function() {
      // uncomment below and update the code to test the property isNews
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

    it('should have the property isSeries (base name: "IsSeries")', function() {
      // uncomment below and update the code to test the property isSeries
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

    it('should have the property isSports (base name: "IsSports")', function() {
      // uncomment below and update the code to test the property isSports
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

    it('should have the property librarySeriesId (base name: "LibrarySeriesId")', function() {
      // uncomment below and update the code to test the property librarySeriesId
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

    it('should have the property limit (base name: "Limit")', function() {
      // uncomment below and update the code to test the property limit
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

    it('should have the property maxEndDate (base name: "MaxEndDate")', function() {
      // uncomment below and update the code to test the property maxEndDate
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

    it('should have the property maxStartDate (base name: "MaxStartDate")', function() {
      // uncomment below and update the code to test the property maxStartDate
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

    it('should have the property minEndDate (base name: "MinEndDate")', function() {
      // uncomment below and update the code to test the property minEndDate
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

    it('should have the property minStartDate (base name: "MinStartDate")', function() {
      // uncomment below and update the code to test the property minStartDate
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

    it('should have the property seriesTimerId (base name: "SeriesTimerId")', function() {
      // uncomment below and update the code to test the property seriesTimerId
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

    it('should have the property sortBy (base name: "SortBy")', function() {
      // uncomment below and update the code to test the property sortBy
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

    it('should have the property sortOrder (base name: "SortOrder")', function() {
      // uncomment below and update the code to test the property sortOrder
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

    it('should have the property startIndex (base name: "StartIndex")', function() {
      // uncomment below and update the code to test the property startIndex
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

    it('should have the property userId (base name: "UserId")', function() {
      // uncomment below and update the code to test the property userId
      //var instance = new JellyfinApi.GetProgramsDto();
      //expect(instance).to.be();
    });

  });

}));
