/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JellyfinApi);
  }
}(this, function(expect, JellyfinApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JellyfinApi.DisplayPreferencesDto();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DisplayPreferencesDto', function() {
    it('should create an instance of DisplayPreferencesDto', function() {
      // uncomment below and update the code to test DisplayPreferencesDto
      //var instance = new JellyfinApi.DisplayPreferencesDto();
      //expect(instance).to.be.a(JellyfinApi.DisplayPreferencesDto);
    });

    it('should have the property client (base name: "Client")', function() {
      // uncomment below and update the code to test the property client
      //var instance = new JellyfinApi.DisplayPreferencesDto();
      //expect(instance).to.be();
    });

    it('should have the property customPrefs (base name: "CustomPrefs")', function() {
      // uncomment below and update the code to test the property customPrefs
      //var instance = new JellyfinApi.DisplayPreferencesDto();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "Id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new JellyfinApi.DisplayPreferencesDto();
      //expect(instance).to.be();
    });

    it('should have the property indexBy (base name: "IndexBy")', function() {
      // uncomment below and update the code to test the property indexBy
      //var instance = new JellyfinApi.DisplayPreferencesDto();
      //expect(instance).to.be();
    });

    it('should have the property primaryImageHeight (base name: "PrimaryImageHeight")', function() {
      // uncomment below and update the code to test the property primaryImageHeight
      //var instance = new JellyfinApi.DisplayPreferencesDto();
      //expect(instance).to.be();
    });

    it('should have the property primaryImageWidth (base name: "PrimaryImageWidth")', function() {
      // uncomment below and update the code to test the property primaryImageWidth
      //var instance = new JellyfinApi.DisplayPreferencesDto();
      //expect(instance).to.be();
    });

    it('should have the property rememberIndexing (base name: "RememberIndexing")', function() {
      // uncomment below and update the code to test the property rememberIndexing
      //var instance = new JellyfinApi.DisplayPreferencesDto();
      //expect(instance).to.be();
    });

    it('should have the property rememberSorting (base name: "RememberSorting")', function() {
      // uncomment below and update the code to test the property rememberSorting
      //var instance = new JellyfinApi.DisplayPreferencesDto();
      //expect(instance).to.be();
    });

    it('should have the property scrollDirection (base name: "ScrollDirection")', function() {
      // uncomment below and update the code to test the property scrollDirection
      //var instance = new JellyfinApi.DisplayPreferencesDto();
      //expect(instance).to.be();
    });

    it('should have the property showBackdrop (base name: "ShowBackdrop")', function() {
      // uncomment below and update the code to test the property showBackdrop
      //var instance = new JellyfinApi.DisplayPreferencesDto();
      //expect(instance).to.be();
    });

    it('should have the property showSidebar (base name: "ShowSidebar")', function() {
      // uncomment below and update the code to test the property showSidebar
      //var instance = new JellyfinApi.DisplayPreferencesDto();
      //expect(instance).to.be();
    });

    it('should have the property sortBy (base name: "SortBy")', function() {
      // uncomment below and update the code to test the property sortBy
      //var instance = new JellyfinApi.DisplayPreferencesDto();
      //expect(instance).to.be();
    });

    it('should have the property sortOrder (base name: "SortOrder")', function() {
      // uncomment below and update the code to test the property sortOrder
      //var instance = new JellyfinApi.DisplayPreferencesDto();
      //expect(instance).to.be();
    });

    it('should have the property viewType (base name: "ViewType")', function() {
      // uncomment below and update the code to test the property viewType
      //var instance = new JellyfinApi.DisplayPreferencesDto();
      //expect(instance).to.be();
    });

  });

}));
