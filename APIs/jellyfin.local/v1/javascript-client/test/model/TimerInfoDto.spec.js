/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JellyfinApi);
  }
}(this, function(expect, JellyfinApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JellyfinApi.TimerInfoDto();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TimerInfoDto', function() {
    it('should create an instance of TimerInfoDto', function() {
      // uncomment below and update the code to test TimerInfoDto
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be.a(JellyfinApi.TimerInfoDto);
    });

    it('should have the property channelId (base name: "ChannelId")', function() {
      // uncomment below and update the code to test the property channelId
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property channelName (base name: "ChannelName")', function() {
      // uncomment below and update the code to test the property channelName
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property channelPrimaryImageTag (base name: "ChannelPrimaryImageTag")', function() {
      // uncomment below and update the code to test the property channelPrimaryImageTag
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property endDate (base name: "EndDate")', function() {
      // uncomment below and update the code to test the property endDate
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property externalChannelId (base name: "ExternalChannelId")', function() {
      // uncomment below and update the code to test the property externalChannelId
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property externalId (base name: "ExternalId")', function() {
      // uncomment below and update the code to test the property externalId
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property externalProgramId (base name: "ExternalProgramId")', function() {
      // uncomment below and update the code to test the property externalProgramId
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property externalSeriesTimerId (base name: "ExternalSeriesTimerId")', function() {
      // uncomment below and update the code to test the property externalSeriesTimerId
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "Id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property isPostPaddingRequired (base name: "IsPostPaddingRequired")', function() {
      // uncomment below and update the code to test the property isPostPaddingRequired
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property isPrePaddingRequired (base name: "IsPrePaddingRequired")', function() {
      // uncomment below and update the code to test the property isPrePaddingRequired
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property keepUntil (base name: "KeepUntil")', function() {
      // uncomment below and update the code to test the property keepUntil
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property overview (base name: "Overview")', function() {
      // uncomment below and update the code to test the property overview
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property parentBackdropImageTags (base name: "ParentBackdropImageTags")', function() {
      // uncomment below and update the code to test the property parentBackdropImageTags
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property parentBackdropItemId (base name: "ParentBackdropItemId")', function() {
      // uncomment below and update the code to test the property parentBackdropItemId
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property postPaddingSeconds (base name: "PostPaddingSeconds")', function() {
      // uncomment below and update the code to test the property postPaddingSeconds
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property prePaddingSeconds (base name: "PrePaddingSeconds")', function() {
      // uncomment below and update the code to test the property prePaddingSeconds
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property priority (base name: "Priority")', function() {
      // uncomment below and update the code to test the property priority
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property programId (base name: "ProgramId")', function() {
      // uncomment below and update the code to test the property programId
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property programInfo (base name: "ProgramInfo")', function() {
      // uncomment below and update the code to test the property programInfo
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property runTimeTicks (base name: "RunTimeTicks")', function() {
      // uncomment below and update the code to test the property runTimeTicks
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property seriesTimerId (base name: "SeriesTimerId")', function() {
      // uncomment below and update the code to test the property seriesTimerId
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property serverId (base name: "ServerId")', function() {
      // uncomment below and update the code to test the property serverId
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property serviceName (base name: "ServiceName")', function() {
      // uncomment below and update the code to test the property serviceName
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property startDate (base name: "StartDate")', function() {
      // uncomment below and update the code to test the property startDate
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "Type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new JellyfinApi.TimerInfoDto();
      //expect(instance).to.be();
    });

  });

}));
