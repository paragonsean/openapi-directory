/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JellyfinApi);
  }
}(this, function(expect, JellyfinApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JellyfinApi.PlaybackInfoDto();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PlaybackInfoDto', function() {
    it('should create an instance of PlaybackInfoDto', function() {
      // uncomment below and update the code to test PlaybackInfoDto
      //var instance = new JellyfinApi.PlaybackInfoDto();
      //expect(instance).to.be.a(JellyfinApi.PlaybackInfoDto);
    });

    it('should have the property allowAudioStreamCopy (base name: "AllowAudioStreamCopy")', function() {
      // uncomment below and update the code to test the property allowAudioStreamCopy
      //var instance = new JellyfinApi.PlaybackInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property allowVideoStreamCopy (base name: "AllowVideoStreamCopy")', function() {
      // uncomment below and update the code to test the property allowVideoStreamCopy
      //var instance = new JellyfinApi.PlaybackInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property audioStreamIndex (base name: "AudioStreamIndex")', function() {
      // uncomment below and update the code to test the property audioStreamIndex
      //var instance = new JellyfinApi.PlaybackInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property autoOpenLiveStream (base name: "AutoOpenLiveStream")', function() {
      // uncomment below and update the code to test the property autoOpenLiveStream
      //var instance = new JellyfinApi.PlaybackInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property deviceProfile (base name: "DeviceProfile")', function() {
      // uncomment below and update the code to test the property deviceProfile
      //var instance = new JellyfinApi.PlaybackInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property enableDirectPlay (base name: "EnableDirectPlay")', function() {
      // uncomment below and update the code to test the property enableDirectPlay
      //var instance = new JellyfinApi.PlaybackInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property enableDirectStream (base name: "EnableDirectStream")', function() {
      // uncomment below and update the code to test the property enableDirectStream
      //var instance = new JellyfinApi.PlaybackInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property enableTranscoding (base name: "EnableTranscoding")', function() {
      // uncomment below and update the code to test the property enableTranscoding
      //var instance = new JellyfinApi.PlaybackInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property liveStreamId (base name: "LiveStreamId")', function() {
      // uncomment below and update the code to test the property liveStreamId
      //var instance = new JellyfinApi.PlaybackInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property maxAudioChannels (base name: "MaxAudioChannels")', function() {
      // uncomment below and update the code to test the property maxAudioChannels
      //var instance = new JellyfinApi.PlaybackInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property maxStreamingBitrate (base name: "MaxStreamingBitrate")', function() {
      // uncomment below and update the code to test the property maxStreamingBitrate
      //var instance = new JellyfinApi.PlaybackInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property mediaSourceId (base name: "MediaSourceId")', function() {
      // uncomment below and update the code to test the property mediaSourceId
      //var instance = new JellyfinApi.PlaybackInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property startTimeTicks (base name: "StartTimeTicks")', function() {
      // uncomment below and update the code to test the property startTimeTicks
      //var instance = new JellyfinApi.PlaybackInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property subtitleStreamIndex (base name: "SubtitleStreamIndex")', function() {
      // uncomment below and update the code to test the property subtitleStreamIndex
      //var instance = new JellyfinApi.PlaybackInfoDto();
      //expect(instance).to.be();
    });

    it('should have the property userId (base name: "UserId")', function() {
      // uncomment below and update the code to test the property userId
      //var instance = new JellyfinApi.PlaybackInfoDto();
      //expect(instance).to.be();
    });

  });

}));
