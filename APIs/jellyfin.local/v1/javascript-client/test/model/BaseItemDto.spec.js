/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JellyfinApi);
  }
}(this, function(expect, JellyfinApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JellyfinApi.BaseItemDto();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BaseItemDto', function() {
    it('should create an instance of BaseItemDto', function() {
      // uncomment below and update the code to test BaseItemDto
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be.a(JellyfinApi.BaseItemDto);
    });

    it('should have the property airDays (base name: "AirDays")', function() {
      // uncomment below and update the code to test the property airDays
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property airTime (base name: "AirTime")', function() {
      // uncomment below and update the code to test the property airTime
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property airsAfterSeasonNumber (base name: "AirsAfterSeasonNumber")', function() {
      // uncomment below and update the code to test the property airsAfterSeasonNumber
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property airsBeforeEpisodeNumber (base name: "AirsBeforeEpisodeNumber")', function() {
      // uncomment below and update the code to test the property airsBeforeEpisodeNumber
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property airsBeforeSeasonNumber (base name: "AirsBeforeSeasonNumber")', function() {
      // uncomment below and update the code to test the property airsBeforeSeasonNumber
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property album (base name: "Album")', function() {
      // uncomment below and update the code to test the property album
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property albumArtist (base name: "AlbumArtist")', function() {
      // uncomment below and update the code to test the property albumArtist
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property albumArtists (base name: "AlbumArtists")', function() {
      // uncomment below and update the code to test the property albumArtists
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property albumCount (base name: "AlbumCount")', function() {
      // uncomment below and update the code to test the property albumCount
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property albumId (base name: "AlbumId")', function() {
      // uncomment below and update the code to test the property albumId
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property albumPrimaryImageTag (base name: "AlbumPrimaryImageTag")', function() {
      // uncomment below and update the code to test the property albumPrimaryImageTag
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property altitude (base name: "Altitude")', function() {
      // uncomment below and update the code to test the property altitude
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property aperture (base name: "Aperture")', function() {
      // uncomment below and update the code to test the property aperture
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property artistCount (base name: "ArtistCount")', function() {
      // uncomment below and update the code to test the property artistCount
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property artistItems (base name: "ArtistItems")', function() {
      // uncomment below and update the code to test the property artistItems
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property artists (base name: "Artists")', function() {
      // uncomment below and update the code to test the property artists
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property aspectRatio (base name: "AspectRatio")', function() {
      // uncomment below and update the code to test the property aspectRatio
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property audio (base name: "Audio")', function() {
      // uncomment below and update the code to test the property audio
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property backdropImageTags (base name: "BackdropImageTags")', function() {
      // uncomment below and update the code to test the property backdropImageTags
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property cameraMake (base name: "CameraMake")', function() {
      // uncomment below and update the code to test the property cameraMake
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property cameraModel (base name: "CameraModel")', function() {
      // uncomment below and update the code to test the property cameraModel
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property canDelete (base name: "CanDelete")', function() {
      // uncomment below and update the code to test the property canDelete
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property canDownload (base name: "CanDownload")', function() {
      // uncomment below and update the code to test the property canDownload
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property channelId (base name: "ChannelId")', function() {
      // uncomment below and update the code to test the property channelId
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property channelName (base name: "ChannelName")', function() {
      // uncomment below and update the code to test the property channelName
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property channelNumber (base name: "ChannelNumber")', function() {
      // uncomment below and update the code to test the property channelNumber
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property channelPrimaryImageTag (base name: "ChannelPrimaryImageTag")', function() {
      // uncomment below and update the code to test the property channelPrimaryImageTag
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property channelType (base name: "ChannelType")', function() {
      // uncomment below and update the code to test the property channelType
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property chapters (base name: "Chapters")', function() {
      // uncomment below and update the code to test the property chapters
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property childCount (base name: "ChildCount")', function() {
      // uncomment below and update the code to test the property childCount
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property collectionType (base name: "CollectionType")', function() {
      // uncomment below and update the code to test the property collectionType
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property communityRating (base name: "CommunityRating")', function() {
      // uncomment below and update the code to test the property communityRating
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property completionPercentage (base name: "CompletionPercentage")', function() {
      // uncomment below and update the code to test the property completionPercentage
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property container (base name: "Container")', function() {
      // uncomment below and update the code to test the property container
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property criticRating (base name: "CriticRating")', function() {
      // uncomment below and update the code to test the property criticRating
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property cumulativeRunTimeTicks (base name: "CumulativeRunTimeTicks")', function() {
      // uncomment below and update the code to test the property cumulativeRunTimeTicks
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property currentProgram (base name: "CurrentProgram")', function() {
      // uncomment below and update the code to test the property currentProgram
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property customRating (base name: "CustomRating")', function() {
      // uncomment below and update the code to test the property customRating
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property dateCreated (base name: "DateCreated")', function() {
      // uncomment below and update the code to test the property dateCreated
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property dateLastMediaAdded (base name: "DateLastMediaAdded")', function() {
      // uncomment below and update the code to test the property dateLastMediaAdded
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property displayOrder (base name: "DisplayOrder")', function() {
      // uncomment below and update the code to test the property displayOrder
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property displayPreferencesId (base name: "DisplayPreferencesId")', function() {
      // uncomment below and update the code to test the property displayPreferencesId
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property enableMediaSourceDisplay (base name: "EnableMediaSourceDisplay")', function() {
      // uncomment below and update the code to test the property enableMediaSourceDisplay
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property endDate (base name: "EndDate")', function() {
      // uncomment below and update the code to test the property endDate
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property episodeCount (base name: "EpisodeCount")', function() {
      // uncomment below and update the code to test the property episodeCount
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property episodeTitle (base name: "EpisodeTitle")', function() {
      // uncomment below and update the code to test the property episodeTitle
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property etag (base name: "Etag")', function() {
      // uncomment below and update the code to test the property etag
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property exposureTime (base name: "ExposureTime")', function() {
      // uncomment below and update the code to test the property exposureTime
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property externalUrls (base name: "ExternalUrls")', function() {
      // uncomment below and update the code to test the property externalUrls
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property extraType (base name: "ExtraType")', function() {
      // uncomment below and update the code to test the property extraType
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property focalLength (base name: "FocalLength")', function() {
      // uncomment below and update the code to test the property focalLength
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property forcedSortName (base name: "ForcedSortName")', function() {
      // uncomment below and update the code to test the property forcedSortName
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property genreItems (base name: "GenreItems")', function() {
      // uncomment below and update the code to test the property genreItems
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property genres (base name: "Genres")', function() {
      // uncomment below and update the code to test the property genres
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property hasSubtitles (base name: "HasSubtitles")', function() {
      // uncomment below and update the code to test the property hasSubtitles
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property height (base name: "Height")', function() {
      // uncomment below and update the code to test the property height
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "Id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property imageBlurHashes (base name: "ImageBlurHashes")', function() {
      // uncomment below and update the code to test the property imageBlurHashes
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property imageOrientation (base name: "ImageOrientation")', function() {
      // uncomment below and update the code to test the property imageOrientation
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property imageTags (base name: "ImageTags")', function() {
      // uncomment below and update the code to test the property imageTags
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property indexNumber (base name: "IndexNumber")', function() {
      // uncomment below and update the code to test the property indexNumber
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property indexNumberEnd (base name: "IndexNumberEnd")', function() {
      // uncomment below and update the code to test the property indexNumberEnd
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property isFolder (base name: "IsFolder")', function() {
      // uncomment below and update the code to test the property isFolder
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property isHD (base name: "IsHD")', function() {
      // uncomment below and update the code to test the property isHD
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property isKids (base name: "IsKids")', function() {
      // uncomment below and update the code to test the property isKids
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property isLive (base name: "IsLive")', function() {
      // uncomment below and update the code to test the property isLive
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property isMovie (base name: "IsMovie")', function() {
      // uncomment below and update the code to test the property isMovie
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property isNews (base name: "IsNews")', function() {
      // uncomment below and update the code to test the property isNews
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property isPlaceHolder (base name: "IsPlaceHolder")', function() {
      // uncomment below and update the code to test the property isPlaceHolder
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property isPremiere (base name: "IsPremiere")', function() {
      // uncomment below and update the code to test the property isPremiere
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property isRepeat (base name: "IsRepeat")', function() {
      // uncomment below and update the code to test the property isRepeat
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property isSeries (base name: "IsSeries")', function() {
      // uncomment below and update the code to test the property isSeries
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property isSports (base name: "IsSports")', function() {
      // uncomment below and update the code to test the property isSports
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property isoSpeedRating (base name: "IsoSpeedRating")', function() {
      // uncomment below and update the code to test the property isoSpeedRating
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property isoType (base name: "IsoType")', function() {
      // uncomment below and update the code to test the property isoType
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property latitude (base name: "Latitude")', function() {
      // uncomment below and update the code to test the property latitude
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property localTrailerCount (base name: "LocalTrailerCount")', function() {
      // uncomment below and update the code to test the property localTrailerCount
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property locationType (base name: "LocationType")', function() {
      // uncomment below and update the code to test the property locationType
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property lockData (base name: "LockData")', function() {
      // uncomment below and update the code to test the property lockData
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property lockedFields (base name: "LockedFields")', function() {
      // uncomment below and update the code to test the property lockedFields
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property longitude (base name: "Longitude")', function() {
      // uncomment below and update the code to test the property longitude
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property mediaSourceCount (base name: "MediaSourceCount")', function() {
      // uncomment below and update the code to test the property mediaSourceCount
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property mediaSources (base name: "MediaSources")', function() {
      // uncomment below and update the code to test the property mediaSources
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property mediaStreams (base name: "MediaStreams")', function() {
      // uncomment below and update the code to test the property mediaStreams
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property mediaType (base name: "MediaType")', function() {
      // uncomment below and update the code to test the property mediaType
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property movieCount (base name: "MovieCount")', function() {
      // uncomment below and update the code to test the property movieCount
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property musicVideoCount (base name: "MusicVideoCount")', function() {
      // uncomment below and update the code to test the property musicVideoCount
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property number (base name: "Number")', function() {
      // uncomment below and update the code to test the property number
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property officialRating (base name: "OfficialRating")', function() {
      // uncomment below and update the code to test the property officialRating
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property originalTitle (base name: "OriginalTitle")', function() {
      // uncomment below and update the code to test the property originalTitle
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property overview (base name: "Overview")', function() {
      // uncomment below and update the code to test the property overview
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property parentArtImageTag (base name: "ParentArtImageTag")', function() {
      // uncomment below and update the code to test the property parentArtImageTag
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property parentArtItemId (base name: "ParentArtItemId")', function() {
      // uncomment below and update the code to test the property parentArtItemId
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property parentBackdropImageTags (base name: "ParentBackdropImageTags")', function() {
      // uncomment below and update the code to test the property parentBackdropImageTags
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property parentBackdropItemId (base name: "ParentBackdropItemId")', function() {
      // uncomment below and update the code to test the property parentBackdropItemId
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property parentId (base name: "ParentId")', function() {
      // uncomment below and update the code to test the property parentId
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property parentIndexNumber (base name: "ParentIndexNumber")', function() {
      // uncomment below and update the code to test the property parentIndexNumber
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property parentLogoImageTag (base name: "ParentLogoImageTag")', function() {
      // uncomment below and update the code to test the property parentLogoImageTag
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property parentLogoItemId (base name: "ParentLogoItemId")', function() {
      // uncomment below and update the code to test the property parentLogoItemId
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property parentPrimaryImageItemId (base name: "ParentPrimaryImageItemId")', function() {
      // uncomment below and update the code to test the property parentPrimaryImageItemId
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property parentPrimaryImageTag (base name: "ParentPrimaryImageTag")', function() {
      // uncomment below and update the code to test the property parentPrimaryImageTag
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property parentThumbImageTag (base name: "ParentThumbImageTag")', function() {
      // uncomment below and update the code to test the property parentThumbImageTag
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property parentThumbItemId (base name: "ParentThumbItemId")', function() {
      // uncomment below and update the code to test the property parentThumbItemId
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property partCount (base name: "PartCount")', function() {
      // uncomment below and update the code to test the property partCount
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property path (base name: "Path")', function() {
      // uncomment below and update the code to test the property path
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property people (base name: "People")', function() {
      // uncomment below and update the code to test the property people
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property playAccess (base name: "PlayAccess")', function() {
      // uncomment below and update the code to test the property playAccess
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property playlistItemId (base name: "PlaylistItemId")', function() {
      // uncomment below and update the code to test the property playlistItemId
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property preferredMetadataCountryCode (base name: "PreferredMetadataCountryCode")', function() {
      // uncomment below and update the code to test the property preferredMetadataCountryCode
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property preferredMetadataLanguage (base name: "PreferredMetadataLanguage")', function() {
      // uncomment below and update the code to test the property preferredMetadataLanguage
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property premiereDate (base name: "PremiereDate")', function() {
      // uncomment below and update the code to test the property premiereDate
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property primaryImageAspectRatio (base name: "PrimaryImageAspectRatio")', function() {
      // uncomment below and update the code to test the property primaryImageAspectRatio
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property productionLocations (base name: "ProductionLocations")', function() {
      // uncomment below and update the code to test the property productionLocations
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property productionYear (base name: "ProductionYear")', function() {
      // uncomment below and update the code to test the property productionYear
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property programCount (base name: "ProgramCount")', function() {
      // uncomment below and update the code to test the property programCount
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property programId (base name: "ProgramId")', function() {
      // uncomment below and update the code to test the property programId
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property providerIds (base name: "ProviderIds")', function() {
      // uncomment below and update the code to test the property providerIds
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property recursiveItemCount (base name: "RecursiveItemCount")', function() {
      // uncomment below and update the code to test the property recursiveItemCount
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property remoteTrailers (base name: "RemoteTrailers")', function() {
      // uncomment below and update the code to test the property remoteTrailers
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property runTimeTicks (base name: "RunTimeTicks")', function() {
      // uncomment below and update the code to test the property runTimeTicks
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property screenshotImageTags (base name: "ScreenshotImageTags")', function() {
      // uncomment below and update the code to test the property screenshotImageTags
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property seasonId (base name: "SeasonId")', function() {
      // uncomment below and update the code to test the property seasonId
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property seasonName (base name: "SeasonName")', function() {
      // uncomment below and update the code to test the property seasonName
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property seriesCount (base name: "SeriesCount")', function() {
      // uncomment below and update the code to test the property seriesCount
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property seriesId (base name: "SeriesId")', function() {
      // uncomment below and update the code to test the property seriesId
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property seriesName (base name: "SeriesName")', function() {
      // uncomment below and update the code to test the property seriesName
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property seriesPrimaryImageTag (base name: "SeriesPrimaryImageTag")', function() {
      // uncomment below and update the code to test the property seriesPrimaryImageTag
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property seriesStudio (base name: "SeriesStudio")', function() {
      // uncomment below and update the code to test the property seriesStudio
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property seriesThumbImageTag (base name: "SeriesThumbImageTag")', function() {
      // uncomment below and update the code to test the property seriesThumbImageTag
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property seriesTimerId (base name: "SeriesTimerId")', function() {
      // uncomment below and update the code to test the property seriesTimerId
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property serverId (base name: "ServerId")', function() {
      // uncomment below and update the code to test the property serverId
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property shutterSpeed (base name: "ShutterSpeed")', function() {
      // uncomment below and update the code to test the property shutterSpeed
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property software (base name: "Software")', function() {
      // uncomment below and update the code to test the property software
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property songCount (base name: "SongCount")', function() {
      // uncomment below and update the code to test the property songCount
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property sortName (base name: "SortName")', function() {
      // uncomment below and update the code to test the property sortName
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property sourceType (base name: "SourceType")', function() {
      // uncomment below and update the code to test the property sourceType
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property specialFeatureCount (base name: "SpecialFeatureCount")', function() {
      // uncomment below and update the code to test the property specialFeatureCount
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property startDate (base name: "StartDate")', function() {
      // uncomment below and update the code to test the property startDate
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property studios (base name: "Studios")', function() {
      // uncomment below and update the code to test the property studios
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property supportsSync (base name: "SupportsSync")', function() {
      // uncomment below and update the code to test the property supportsSync
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property taglines (base name: "Taglines")', function() {
      // uncomment below and update the code to test the property taglines
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "Tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property timerId (base name: "TimerId")', function() {
      // uncomment below and update the code to test the property timerId
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property trailerCount (base name: "TrailerCount")', function() {
      // uncomment below and update the code to test the property trailerCount
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "Type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property userData (base name: "UserData")', function() {
      // uncomment below and update the code to test the property userData
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property video3DFormat (base name: "Video3DFormat")', function() {
      // uncomment below and update the code to test the property video3DFormat
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property videoType (base name: "VideoType")', function() {
      // uncomment below and update the code to test the property videoType
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

    it('should have the property width (base name: "Width")', function() {
      // uncomment below and update the code to test the property width
      //var instance = new JellyfinApi.BaseItemDto();
      //expect(instance).to.be();
    });

  });

}));
