/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JellyfinApi);
  }
}(this, function(expect, JellyfinApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JellyfinApi.LiveTvApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LiveTvApi', function() {
    describe('addListingProvider', function() {
      it('should call addListingProvider successfully', function(done) {
        //uncomment below and update the code to test addListingProvider
        //instance.addListingProvider(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addTunerHost', function() {
      it('should call addTunerHost successfully', function(done) {
        //uncomment below and update the code to test addTunerHost
        //instance.addTunerHost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cancelSeriesTimer', function() {
      it('should call cancelSeriesTimer successfully', function(done) {
        //uncomment below and update the code to test cancelSeriesTimer
        //instance.cancelSeriesTimer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cancelTimer', function() {
      it('should call cancelTimer successfully', function(done) {
        //uncomment below and update the code to test cancelTimer
        //instance.cancelTimer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSeriesTimer', function() {
      it('should call createSeriesTimer successfully', function(done) {
        //uncomment below and update the code to test createSeriesTimer
        //instance.createSeriesTimer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createTimer', function() {
      it('should call createTimer successfully', function(done) {
        //uncomment below and update the code to test createTimer
        //instance.createTimer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteListingProvider', function() {
      it('should call deleteListingProvider successfully', function(done) {
        //uncomment below and update the code to test deleteListingProvider
        //instance.deleteListingProvider(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRecording', function() {
      it('should call deleteRecording successfully', function(done) {
        //uncomment below and update the code to test deleteRecording
        //instance.deleteRecording(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTunerHost', function() {
      it('should call deleteTunerHost successfully', function(done) {
        //uncomment below and update the code to test deleteTunerHost
        //instance.deleteTunerHost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoverTuners', function() {
      it('should call discoverTuners successfully', function(done) {
        //uncomment below and update the code to test discoverTuners
        //instance.discoverTuners(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discvoverTuners', function() {
      it('should call discvoverTuners successfully', function(done) {
        //uncomment below and update the code to test discvoverTuners
        //instance.discvoverTuners(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getChannel', function() {
      it('should call getChannel successfully', function(done) {
        //uncomment below and update the code to test getChannel
        //instance.getChannel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getChannelMappingOptions', function() {
      it('should call getChannelMappingOptions successfully', function(done) {
        //uncomment below and update the code to test getChannelMappingOptions
        //instance.getChannelMappingOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDefaultListingProvider', function() {
      it('should call getDefaultListingProvider successfully', function(done) {
        //uncomment below and update the code to test getDefaultListingProvider
        //instance.getDefaultListingProvider(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDefaultTimer', function() {
      it('should call getDefaultTimer successfully', function(done) {
        //uncomment below and update the code to test getDefaultTimer
        //instance.getDefaultTimer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGuideInfo', function() {
      it('should call getGuideInfo successfully', function(done) {
        //uncomment below and update the code to test getGuideInfo
        //instance.getGuideInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLineups', function() {
      it('should call getLineups successfully', function(done) {
        //uncomment below and update the code to test getLineups
        //instance.getLineups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLiveRecordingFile', function() {
      it('should call getLiveRecordingFile successfully', function(done) {
        //uncomment below and update the code to test getLiveRecordingFile
        //instance.getLiveRecordingFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLiveStreamFile', function() {
      it('should call getLiveStreamFile successfully', function(done) {
        //uncomment below and update the code to test getLiveStreamFile
        //instance.getLiveStreamFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLiveTvChannels', function() {
      it('should call getLiveTvChannels successfully', function(done) {
        //uncomment below and update the code to test getLiveTvChannels
        //instance.getLiveTvChannels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLiveTvInfo', function() {
      it('should call getLiveTvInfo successfully', function(done) {
        //uncomment below and update the code to test getLiveTvInfo
        //instance.getLiveTvInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLiveTvPrograms', function() {
      it('should call getLiveTvPrograms successfully', function(done) {
        //uncomment below and update the code to test getLiveTvPrograms
        //instance.getLiveTvPrograms(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProgram', function() {
      it('should call getProgram successfully', function(done) {
        //uncomment below and update the code to test getProgram
        //instance.getProgram(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPrograms', function() {
      it('should call getPrograms successfully', function(done) {
        //uncomment below and update the code to test getPrograms
        //instance.getPrograms(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRecommendedPrograms', function() {
      it('should call getRecommendedPrograms successfully', function(done) {
        //uncomment below and update the code to test getRecommendedPrograms
        //instance.getRecommendedPrograms(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRecording', function() {
      it('should call getRecording successfully', function(done) {
        //uncomment below and update the code to test getRecording
        //instance.getRecording(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRecordingFolders', function() {
      it('should call getRecordingFolders successfully', function(done) {
        //uncomment below and update the code to test getRecordingFolders
        //instance.getRecordingFolders(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRecordingGroup', function() {
      it('should call getRecordingGroup successfully', function(done) {
        //uncomment below and update the code to test getRecordingGroup
        //instance.getRecordingGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRecordingGroups', function() {
      it('should call getRecordingGroups successfully', function(done) {
        //uncomment below and update the code to test getRecordingGroups
        //instance.getRecordingGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRecordings', function() {
      it('should call getRecordings successfully', function(done) {
        //uncomment below and update the code to test getRecordings
        //instance.getRecordings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRecordingsSeries', function() {
      it('should call getRecordingsSeries successfully', function(done) {
        //uncomment below and update the code to test getRecordingsSeries
        //instance.getRecordingsSeries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSchedulesDirectCountries', function() {
      it('should call getSchedulesDirectCountries successfully', function(done) {
        //uncomment below and update the code to test getSchedulesDirectCountries
        //instance.getSchedulesDirectCountries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSeriesTimer', function() {
      it('should call getSeriesTimer successfully', function(done) {
        //uncomment below and update the code to test getSeriesTimer
        //instance.getSeriesTimer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSeriesTimers', function() {
      it('should call getSeriesTimers successfully', function(done) {
        //uncomment below and update the code to test getSeriesTimers
        //instance.getSeriesTimers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTimer', function() {
      it('should call getTimer successfully', function(done) {
        //uncomment below and update the code to test getTimer
        //instance.getTimer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTimers', function() {
      it('should call getTimers successfully', function(done) {
        //uncomment below and update the code to test getTimers
        //instance.getTimers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTunerHostTypes', function() {
      it('should call getTunerHostTypes successfully', function(done) {
        //uncomment below and update the code to test getTunerHostTypes
        //instance.getTunerHostTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resetTuner', function() {
      it('should call resetTuner successfully', function(done) {
        //uncomment below and update the code to test resetTuner
        //instance.resetTuner(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setChannelMapping', function() {
      it('should call setChannelMapping successfully', function(done) {
        //uncomment below and update the code to test setChannelMapping
        //instance.setChannelMapping(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSeriesTimer', function() {
      it('should call updateSeriesTimer successfully', function(done) {
        //uncomment below and update the code to test updateSeriesTimer
        //instance.updateSeriesTimer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTimer', function() {
      it('should call updateTimer successfully', function(done) {
        //uncomment below and update the code to test updateTimer
        //instance.updateTimer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
