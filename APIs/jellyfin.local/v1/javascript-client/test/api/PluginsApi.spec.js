/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JellyfinApi);
  }
}(this, function(expect, JellyfinApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JellyfinApi.PluginsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PluginsApi', function() {
    describe('disablePlugin', function() {
      it('should call disablePlugin successfully', function(done) {
        //uncomment below and update the code to test disablePlugin
        //instance.disablePlugin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('enablePlugin', function() {
      it('should call enablePlugin successfully', function(done) {
        //uncomment below and update the code to test enablePlugin
        //instance.enablePlugin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPluginConfiguration', function() {
      it('should call getPluginConfiguration successfully', function(done) {
        //uncomment below and update the code to test getPluginConfiguration
        //instance.getPluginConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPluginImage', function() {
      it('should call getPluginImage successfully', function(done) {
        //uncomment below and update the code to test getPluginImage
        //instance.getPluginImage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPluginManifest', function() {
      it('should call getPluginManifest successfully', function(done) {
        //uncomment below and update the code to test getPluginManifest
        //instance.getPluginManifest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPlugins', function() {
      it('should call getPlugins successfully', function(done) {
        //uncomment below and update the code to test getPlugins
        //instance.getPlugins(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uninstallPlugin', function() {
      it('should call uninstallPlugin successfully', function(done) {
        //uncomment below and update the code to test uninstallPlugin
        //instance.uninstallPlugin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uninstallPluginByVersion', function() {
      it('should call uninstallPluginByVersion successfully', function(done) {
        //uncomment below and update the code to test uninstallPluginByVersion
        //instance.uninstallPluginByVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePluginConfiguration', function() {
      it('should call updatePluginConfiguration successfully', function(done) {
        //uncomment below and update the code to test updatePluginConfiguration
        //instance.updatePluginConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePluginSecurityInfo', function() {
      it('should call updatePluginSecurityInfo successfully', function(done) {
        //uncomment below and update the code to test updatePluginSecurityInfo
        //instance.updatePluginSecurityInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
