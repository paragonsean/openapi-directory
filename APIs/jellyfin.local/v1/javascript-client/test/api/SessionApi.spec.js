/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JellyfinApi);
  }
}(this, function(expect, JellyfinApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JellyfinApi.SessionApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SessionApi', function() {
    describe('addUserToSession', function() {
      it('should call addUserToSession successfully', function(done) {
        //uncomment below and update the code to test addUserToSession
        //instance.addUserToSession(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('displayContent', function() {
      it('should call displayContent successfully', function(done) {
        //uncomment below and update the code to test displayContent
        //instance.displayContent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAuthProviders', function() {
      it('should call getAuthProviders successfully', function(done) {
        //uncomment below and update the code to test getAuthProviders
        //instance.getAuthProviders(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPasswordResetProviders', function() {
      it('should call getPasswordResetProviders successfully', function(done) {
        //uncomment below and update the code to test getPasswordResetProviders
        //instance.getPasswordResetProviders(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSessions', function() {
      it('should call getSessions successfully', function(done) {
        //uncomment below and update the code to test getSessions
        //instance.getSessions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('play', function() {
      it('should call play successfully', function(done) {
        //uncomment below and update the code to test play
        //instance.play(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postCapabilities', function() {
      it('should call postCapabilities successfully', function(done) {
        //uncomment below and update the code to test postCapabilities
        //instance.postCapabilities(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postFullCapabilities', function() {
      it('should call postFullCapabilities successfully', function(done) {
        //uncomment below and update the code to test postFullCapabilities
        //instance.postFullCapabilities(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeUserFromSession', function() {
      it('should call removeUserFromSession successfully', function(done) {
        //uncomment below and update the code to test removeUserFromSession
        //instance.removeUserFromSession(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportSessionEnded', function() {
      it('should call reportSessionEnded successfully', function(done) {
        //uncomment below and update the code to test reportSessionEnded
        //instance.reportSessionEnded(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportViewing', function() {
      it('should call reportViewing successfully', function(done) {
        //uncomment below and update the code to test reportViewing
        //instance.reportViewing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendFullGeneralCommand', function() {
      it('should call sendFullGeneralCommand successfully', function(done) {
        //uncomment below and update the code to test sendFullGeneralCommand
        //instance.sendFullGeneralCommand(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendGeneralCommand', function() {
      it('should call sendGeneralCommand successfully', function(done) {
        //uncomment below and update the code to test sendGeneralCommand
        //instance.sendGeneralCommand(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendMessageCommand', function() {
      it('should call sendMessageCommand successfully', function(done) {
        //uncomment below and update the code to test sendMessageCommand
        //instance.sendMessageCommand(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendPlaystateCommand', function() {
      it('should call sendPlaystateCommand successfully', function(done) {
        //uncomment below and update the code to test sendPlaystateCommand
        //instance.sendPlaystateCommand(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendSystemCommand', function() {
      it('should call sendSystemCommand successfully', function(done) {
        //uncomment below and update the code to test sendSystemCommand
        //instance.sendSystemCommand(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
