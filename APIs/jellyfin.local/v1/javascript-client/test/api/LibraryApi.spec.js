/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JellyfinApi);
  }
}(this, function(expect, JellyfinApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JellyfinApi.LibraryApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LibraryApi', function() {
    describe('deleteItem', function() {
      it('should call deleteItem successfully', function(done) {
        //uncomment below and update the code to test deleteItem
        //instance.deleteItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteItems', function() {
      it('should call deleteItems successfully', function(done) {
        //uncomment below and update the code to test deleteItems
        //instance.deleteItems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAncestors', function() {
      it('should call getAncestors successfully', function(done) {
        //uncomment below and update the code to test getAncestors
        //instance.getAncestors(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCriticReviews', function() {
      it('should call getCriticReviews successfully', function(done) {
        //uncomment below and update the code to test getCriticReviews
        //instance.getCriticReviews(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDownload', function() {
      it('should call getDownload successfully', function(done) {
        //uncomment below and update the code to test getDownload
        //instance.getDownload(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFile', function() {
      it('should call getFile successfully', function(done) {
        //uncomment below and update the code to test getFile
        //instance.getFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getItemCounts', function() {
      it('should call getItemCounts successfully', function(done) {
        //uncomment below and update the code to test getItemCounts
        //instance.getItemCounts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLibraryOptionsInfo', function() {
      it('should call getLibraryOptionsInfo successfully', function(done) {
        //uncomment below and update the code to test getLibraryOptionsInfo
        //instance.getLibraryOptionsInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMediaFolders', function() {
      it('should call getMediaFolders successfully', function(done) {
        //uncomment below and update the code to test getMediaFolders
        //instance.getMediaFolders(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPhysicalPaths', function() {
      it('should call getPhysicalPaths successfully', function(done) {
        //uncomment below and update the code to test getPhysicalPaths
        //instance.getPhysicalPaths(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSimilarAlbums', function() {
      it('should call getSimilarAlbums successfully', function(done) {
        //uncomment below and update the code to test getSimilarAlbums
        //instance.getSimilarAlbums(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSimilarArtists', function() {
      it('should call getSimilarArtists successfully', function(done) {
        //uncomment below and update the code to test getSimilarArtists
        //instance.getSimilarArtists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSimilarItems', function() {
      it('should call getSimilarItems successfully', function(done) {
        //uncomment below and update the code to test getSimilarItems
        //instance.getSimilarItems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSimilarMovies', function() {
      it('should call getSimilarMovies successfully', function(done) {
        //uncomment below and update the code to test getSimilarMovies
        //instance.getSimilarMovies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSimilarShows', function() {
      it('should call getSimilarShows successfully', function(done) {
        //uncomment below and update the code to test getSimilarShows
        //instance.getSimilarShows(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSimilarTrailers', function() {
      it('should call getSimilarTrailers successfully', function(done) {
        //uncomment below and update the code to test getSimilarTrailers
        //instance.getSimilarTrailers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getThemeMedia', function() {
      it('should call getThemeMedia successfully', function(done) {
        //uncomment below and update the code to test getThemeMedia
        //instance.getThemeMedia(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getThemeSongs', function() {
      it('should call getThemeSongs successfully', function(done) {
        //uncomment below and update the code to test getThemeSongs
        //instance.getThemeSongs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getThemeVideos', function() {
      it('should call getThemeVideos successfully', function(done) {
        //uncomment below and update the code to test getThemeVideos
        //instance.getThemeVideos(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postAddedMovies', function() {
      it('should call postAddedMovies successfully', function(done) {
        //uncomment below and update the code to test postAddedMovies
        //instance.postAddedMovies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postAddedSeries', function() {
      it('should call postAddedSeries successfully', function(done) {
        //uncomment below and update the code to test postAddedSeries
        //instance.postAddedSeries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postUpdatedMedia', function() {
      it('should call postUpdatedMedia successfully', function(done) {
        //uncomment below and update the code to test postUpdatedMedia
        //instance.postUpdatedMedia(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postUpdatedMovies', function() {
      it('should call postUpdatedMovies successfully', function(done) {
        //uncomment below and update the code to test postUpdatedMovies
        //instance.postUpdatedMovies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postUpdatedSeries', function() {
      it('should call postUpdatedSeries successfully', function(done) {
        //uncomment below and update the code to test postUpdatedSeries
        //instance.postUpdatedSeries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('refreshLibrary', function() {
      it('should call refreshLibrary successfully', function(done) {
        //uncomment below and update the code to test refreshLibrary
        //instance.refreshLibrary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
