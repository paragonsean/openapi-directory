/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPluginSecurityInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPluginSecurityInfo::OAIPluginSecurityInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPluginSecurityInfo::OAIPluginSecurityInfo() {
    this->initializeModel();
}

OAIPluginSecurityInfo::~OAIPluginSecurityInfo() {}

void OAIPluginSecurityInfo::initializeModel() {

    m_is_mb_supporter_isSet = false;
    m_is_mb_supporter_isValid = false;

    m_supporter_key_isSet = false;
    m_supporter_key_isValid = false;
}

void OAIPluginSecurityInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPluginSecurityInfo::fromJsonObject(QJsonObject json) {

    m_is_mb_supporter_isValid = ::OpenAPI::fromJsonValue(m_is_mb_supporter, json[QString("IsMbSupporter")]);
    m_is_mb_supporter_isSet = !json[QString("IsMbSupporter")].isNull() && m_is_mb_supporter_isValid;

    m_supporter_key_isValid = ::OpenAPI::fromJsonValue(m_supporter_key, json[QString("SupporterKey")]);
    m_supporter_key_isSet = !json[QString("SupporterKey")].isNull() && m_supporter_key_isValid;
}

QString OAIPluginSecurityInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPluginSecurityInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_is_mb_supporter_isSet) {
        obj.insert(QString("IsMbSupporter"), ::OpenAPI::toJsonValue(m_is_mb_supporter));
    }
    if (m_supporter_key_isSet) {
        obj.insert(QString("SupporterKey"), ::OpenAPI::toJsonValue(m_supporter_key));
    }
    return obj;
}

bool OAIPluginSecurityInfo::isIsMbSupporter() const {
    return m_is_mb_supporter;
}
void OAIPluginSecurityInfo::setIsMbSupporter(const bool &is_mb_supporter) {
    m_is_mb_supporter = is_mb_supporter;
    m_is_mb_supporter_isSet = true;
}

bool OAIPluginSecurityInfo::is_is_mb_supporter_Set() const{
    return m_is_mb_supporter_isSet;
}

bool OAIPluginSecurityInfo::is_is_mb_supporter_Valid() const{
    return m_is_mb_supporter_isValid;
}

QString OAIPluginSecurityInfo::getSupporterKey() const {
    return m_supporter_key;
}
void OAIPluginSecurityInfo::setSupporterKey(const QString &supporter_key) {
    m_supporter_key = supporter_key;
    m_supporter_key_isSet = true;
}

bool OAIPluginSecurityInfo::is_supporter_key_Set() const{
    return m_supporter_key_isSet;
}

bool OAIPluginSecurityInfo::is_supporter_key_Valid() const{
    return m_supporter_key_isValid;
}

bool OAIPluginSecurityInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_mb_supporter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_supporter_key_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPluginSecurityInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
