/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISetRepeatModeRequestDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISetRepeatModeRequestDto::OAISetRepeatModeRequestDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISetRepeatModeRequestDto::OAISetRepeatModeRequestDto() {
    this->initializeModel();
}

OAISetRepeatModeRequestDto::~OAISetRepeatModeRequestDto() {}

void OAISetRepeatModeRequestDto::initializeModel() {

    m_mode_isSet = false;
    m_mode_isValid = false;
}

void OAISetRepeatModeRequestDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISetRepeatModeRequestDto::fromJsonObject(QJsonObject json) {

    m_mode_isValid = ::OpenAPI::fromJsonValue(m_mode, json[QString("Mode")]);
    m_mode_isSet = !json[QString("Mode")].isNull() && m_mode_isValid;
}

QString OAISetRepeatModeRequestDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISetRepeatModeRequestDto::asJsonObject() const {
    QJsonObject obj;
    if (m_mode.isSet()) {
        obj.insert(QString("Mode"), ::OpenAPI::toJsonValue(m_mode));
    }
    return obj;
}

OAIGroupRepeatMode OAISetRepeatModeRequestDto::getMode() const {
    return m_mode;
}
void OAISetRepeatModeRequestDto::setMode(const OAIGroupRepeatMode &mode) {
    m_mode = mode;
    m_mode_isSet = true;
}

bool OAISetRepeatModeRequestDto::is_mode_Set() const{
    return m_mode_isSet;
}

bool OAISetRepeatModeRequestDto::is_mode_Valid() const{
    return m_mode_isValid;
}

bool OAISetRepeatModeRequestDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_mode.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISetRepeatModeRequestDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
