/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMediaSourceInfo.h
 *
 * 
 */

#ifndef OAIMediaSourceInfo_H
#define OAIMediaSourceInfo_H

#include <QJsonObject>

#include "OAIIsoType.h"
#include "OAIMediaAttachment.h"
#include "OAIMediaProtocol.h"
#include "OAIMediaSourceType.h"
#include "OAIMediaStream.h"
#include "OAITransportStreamTimestamp.h"
#include "OAIVideo3DFormat.h"
#include "OAIVideoType.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMediaAttachment;
class OAIMediaStream;

class OAIMediaSourceInfo : public OAIObject {
public:
    OAIMediaSourceInfo();
    OAIMediaSourceInfo(QString json);
    ~OAIMediaSourceInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAnalyzeDurationMs() const;
    void setAnalyzeDurationMs(const qint32 &analyze_duration_ms);
    bool is_analyze_duration_ms_Set() const;
    bool is_analyze_duration_ms_Valid() const;

    qint32 getBitrate() const;
    void setBitrate(const qint32 &bitrate);
    bool is_bitrate_Set() const;
    bool is_bitrate_Valid() const;

    qint32 getBufferMs() const;
    void setBufferMs(const qint32 &buffer_ms);
    bool is_buffer_ms_Set() const;
    bool is_buffer_ms_Valid() const;

    QString getContainer() const;
    void setContainer(const QString &container);
    bool is_container_Set() const;
    bool is_container_Valid() const;

    qint32 getDefaultAudioStreamIndex() const;
    void setDefaultAudioStreamIndex(const qint32 &default_audio_stream_index);
    bool is_default_audio_stream_index_Set() const;
    bool is_default_audio_stream_index_Valid() const;

    qint32 getDefaultSubtitleStreamIndex() const;
    void setDefaultSubtitleStreamIndex(const qint32 &default_subtitle_stream_index);
    bool is_default_subtitle_stream_index_Set() const;
    bool is_default_subtitle_stream_index_Valid() const;

    QString getETag() const;
    void setETag(const QString &e_tag);
    bool is_e_tag_Set() const;
    bool is_e_tag_Valid() const;

    QString getEncoderPath() const;
    void setEncoderPath(const QString &encoder_path);
    bool is_encoder_path_Set() const;
    bool is_encoder_path_Valid() const;

    OAIMediaProtocol getEncoderProtocol() const;
    void setEncoderProtocol(const OAIMediaProtocol &encoder_protocol);
    bool is_encoder_protocol_Set() const;
    bool is_encoder_protocol_Valid() const;

    QList<QString> getFormats() const;
    void setFormats(const QList<QString> &formats);
    bool is_formats_Set() const;
    bool is_formats_Valid() const;

    bool isGenPtsInput() const;
    void setGenPtsInput(const bool &gen_pts_input);
    bool is_gen_pts_input_Set() const;
    bool is_gen_pts_input_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIgnoreDts() const;
    void setIgnoreDts(const bool &ignore_dts);
    bool is_ignore_dts_Set() const;
    bool is_ignore_dts_Valid() const;

    bool isIgnoreIndex() const;
    void setIgnoreIndex(const bool &ignore_index);
    bool is_ignore_index_Set() const;
    bool is_ignore_index_Valid() const;

    bool isIsInfiniteStream() const;
    void setIsInfiniteStream(const bool &is_infinite_stream);
    bool is_is_infinite_stream_Set() const;
    bool is_is_infinite_stream_Valid() const;

    bool isIsRemote() const;
    void setIsRemote(const bool &is_remote);
    bool is_is_remote_Set() const;
    bool is_is_remote_Valid() const;

    OAIIsoType getIsoType() const;
    void setIsoType(const OAIIsoType &iso_type);
    bool is_iso_type_Set() const;
    bool is_iso_type_Valid() const;

    QString getLiveStreamId() const;
    void setLiveStreamId(const QString &live_stream_id);
    bool is_live_stream_id_Set() const;
    bool is_live_stream_id_Valid() const;

    QList<OAIMediaAttachment> getMediaAttachments() const;
    void setMediaAttachments(const QList<OAIMediaAttachment> &media_attachments);
    bool is_media_attachments_Set() const;
    bool is_media_attachments_Valid() const;

    QList<OAIMediaStream> getMediaStreams() const;
    void setMediaStreams(const QList<OAIMediaStream> &media_streams);
    bool is_media_streams_Set() const;
    bool is_media_streams_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOpenToken() const;
    void setOpenToken(const QString &open_token);
    bool is_open_token_Set() const;
    bool is_open_token_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    OAIMediaProtocol getProtocol() const;
    void setProtocol(const OAIMediaProtocol &protocol);
    bool is_protocol_Set() const;
    bool is_protocol_Valid() const;

    bool isReadAtNativeFramerate() const;
    void setReadAtNativeFramerate(const bool &read_at_native_framerate);
    bool is_read_at_native_framerate_Set() const;
    bool is_read_at_native_framerate_Valid() const;

    QMap<QString, QString> getRequiredHttpHeaders() const;
    void setRequiredHttpHeaders(const QMap<QString, QString> &required_http_headers);
    bool is_required_http_headers_Set() const;
    bool is_required_http_headers_Valid() const;

    bool isRequiresClosing() const;
    void setRequiresClosing(const bool &requires_closing);
    bool is_requires_closing_Set() const;
    bool is_requires_closing_Valid() const;

    bool isRequiresLooping() const;
    void setRequiresLooping(const bool &requires_looping);
    bool is_requires_looping_Set() const;
    bool is_requires_looping_Valid() const;

    bool isRequiresOpening() const;
    void setRequiresOpening(const bool &requires_opening);
    bool is_requires_opening_Set() const;
    bool is_requires_opening_Valid() const;

    qint64 getRunTimeTicks() const;
    void setRunTimeTicks(const qint64 &run_time_ticks);
    bool is_run_time_ticks_Set() const;
    bool is_run_time_ticks_Valid() const;

    qint64 getSize() const;
    void setSize(const qint64 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    bool isSupportsDirectPlay() const;
    void setSupportsDirectPlay(const bool &supports_direct_play);
    bool is_supports_direct_play_Set() const;
    bool is_supports_direct_play_Valid() const;

    bool isSupportsDirectStream() const;
    void setSupportsDirectStream(const bool &supports_direct_stream);
    bool is_supports_direct_stream_Set() const;
    bool is_supports_direct_stream_Valid() const;

    bool isSupportsProbing() const;
    void setSupportsProbing(const bool &supports_probing);
    bool is_supports_probing_Set() const;
    bool is_supports_probing_Valid() const;

    bool isSupportsTranscoding() const;
    void setSupportsTranscoding(const bool &supports_transcoding);
    bool is_supports_transcoding_Set() const;
    bool is_supports_transcoding_Valid() const;

    OAITransportStreamTimestamp getTimestamp() const;
    void setTimestamp(const OAITransportStreamTimestamp &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    QString getTranscodingContainer() const;
    void setTranscodingContainer(const QString &transcoding_container);
    bool is_transcoding_container_Set() const;
    bool is_transcoding_container_Valid() const;

    QString getTranscodingSubProtocol() const;
    void setTranscodingSubProtocol(const QString &transcoding_sub_protocol);
    bool is_transcoding_sub_protocol_Set() const;
    bool is_transcoding_sub_protocol_Valid() const;

    QString getTranscodingUrl() const;
    void setTranscodingUrl(const QString &transcoding_url);
    bool is_transcoding_url_Set() const;
    bool is_transcoding_url_Valid() const;

    OAIMediaSourceType getType() const;
    void setType(const OAIMediaSourceType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIVideo3DFormat getVideo3DFormat() const;
    void setVideo3DFormat(const OAIVideo3DFormat &video3_d_format);
    bool is_video3_d_format_Set() const;
    bool is_video3_d_format_Valid() const;

    OAIVideoType getVideoType() const;
    void setVideoType(const OAIVideoType &video_type);
    bool is_video_type_Set() const;
    bool is_video_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_analyze_duration_ms;
    bool m_analyze_duration_ms_isSet;
    bool m_analyze_duration_ms_isValid;

    qint32 m_bitrate;
    bool m_bitrate_isSet;
    bool m_bitrate_isValid;

    qint32 m_buffer_ms;
    bool m_buffer_ms_isSet;
    bool m_buffer_ms_isValid;

    QString m_container;
    bool m_container_isSet;
    bool m_container_isValid;

    qint32 m_default_audio_stream_index;
    bool m_default_audio_stream_index_isSet;
    bool m_default_audio_stream_index_isValid;

    qint32 m_default_subtitle_stream_index;
    bool m_default_subtitle_stream_index_isSet;
    bool m_default_subtitle_stream_index_isValid;

    QString m_e_tag;
    bool m_e_tag_isSet;
    bool m_e_tag_isValid;

    QString m_encoder_path;
    bool m_encoder_path_isSet;
    bool m_encoder_path_isValid;

    OAIMediaProtocol m_encoder_protocol;
    bool m_encoder_protocol_isSet;
    bool m_encoder_protocol_isValid;

    QList<QString> m_formats;
    bool m_formats_isSet;
    bool m_formats_isValid;

    bool m_gen_pts_input;
    bool m_gen_pts_input_isSet;
    bool m_gen_pts_input_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_ignore_dts;
    bool m_ignore_dts_isSet;
    bool m_ignore_dts_isValid;

    bool m_ignore_index;
    bool m_ignore_index_isSet;
    bool m_ignore_index_isValid;

    bool m_is_infinite_stream;
    bool m_is_infinite_stream_isSet;
    bool m_is_infinite_stream_isValid;

    bool m_is_remote;
    bool m_is_remote_isSet;
    bool m_is_remote_isValid;

    OAIIsoType m_iso_type;
    bool m_iso_type_isSet;
    bool m_iso_type_isValid;

    QString m_live_stream_id;
    bool m_live_stream_id_isSet;
    bool m_live_stream_id_isValid;

    QList<OAIMediaAttachment> m_media_attachments;
    bool m_media_attachments_isSet;
    bool m_media_attachments_isValid;

    QList<OAIMediaStream> m_media_streams;
    bool m_media_streams_isSet;
    bool m_media_streams_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_open_token;
    bool m_open_token_isSet;
    bool m_open_token_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    OAIMediaProtocol m_protocol;
    bool m_protocol_isSet;
    bool m_protocol_isValid;

    bool m_read_at_native_framerate;
    bool m_read_at_native_framerate_isSet;
    bool m_read_at_native_framerate_isValid;

    QMap<QString, QString> m_required_http_headers;
    bool m_required_http_headers_isSet;
    bool m_required_http_headers_isValid;

    bool m_requires_closing;
    bool m_requires_closing_isSet;
    bool m_requires_closing_isValid;

    bool m_requires_looping;
    bool m_requires_looping_isSet;
    bool m_requires_looping_isValid;

    bool m_requires_opening;
    bool m_requires_opening_isSet;
    bool m_requires_opening_isValid;

    qint64 m_run_time_ticks;
    bool m_run_time_ticks_isSet;
    bool m_run_time_ticks_isValid;

    qint64 m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    bool m_supports_direct_play;
    bool m_supports_direct_play_isSet;
    bool m_supports_direct_play_isValid;

    bool m_supports_direct_stream;
    bool m_supports_direct_stream_isSet;
    bool m_supports_direct_stream_isValid;

    bool m_supports_probing;
    bool m_supports_probing_isSet;
    bool m_supports_probing_isValid;

    bool m_supports_transcoding;
    bool m_supports_transcoding_isSet;
    bool m_supports_transcoding_isValid;

    OAITransportStreamTimestamp m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    QString m_transcoding_container;
    bool m_transcoding_container_isSet;
    bool m_transcoding_container_isValid;

    QString m_transcoding_sub_protocol;
    bool m_transcoding_sub_protocol_isSet;
    bool m_transcoding_sub_protocol_isValid;

    QString m_transcoding_url;
    bool m_transcoding_url_isSet;
    bool m_transcoding_url_isValid;

    OAIMediaSourceType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIVideo3DFormat m_video3_d_format;
    bool m_video3_d_format_isSet;
    bool m_video3_d_format_isValid;

    OAIVideoType m_video_type;
    bool m_video_type_isSet;
    bool m_video_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMediaSourceInfo)

#endif // OAIMediaSourceInfo_H
