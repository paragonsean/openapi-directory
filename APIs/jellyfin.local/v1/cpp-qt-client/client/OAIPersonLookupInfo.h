/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPersonLookupInfo.h
 *
 * 
 */

#ifndef OAIPersonLookupInfo_H
#define OAIPersonLookupInfo_H

#include <QJsonObject>

#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPersonLookupInfo : public OAIObject {
public:
    OAIPersonLookupInfo();
    OAIPersonLookupInfo(QString json);
    ~OAIPersonLookupInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getIndexNumber() const;
    void setIndexNumber(const qint32 &index_number);
    bool is_index_number_Set() const;
    bool is_index_number_Valid() const;

    bool isIsAutomated() const;
    void setIsAutomated(const bool &is_automated);
    bool is_is_automated_Set() const;
    bool is_is_automated_Valid() const;

    QString getMetadataCountryCode() const;
    void setMetadataCountryCode(const QString &metadata_country_code);
    bool is_metadata_country_code_Set() const;
    bool is_metadata_country_code_Valid() const;

    QString getMetadataLanguage() const;
    void setMetadataLanguage(const QString &metadata_language);
    bool is_metadata_language_Set() const;
    bool is_metadata_language_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getParentIndexNumber() const;
    void setParentIndexNumber(const qint32 &parent_index_number);
    bool is_parent_index_number_Set() const;
    bool is_parent_index_number_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QDateTime getPremiereDate() const;
    void setPremiereDate(const QDateTime &premiere_date);
    bool is_premiere_date_Set() const;
    bool is_premiere_date_Valid() const;

    QMap<QString, QString> getProviderIds() const;
    void setProviderIds(const QMap<QString, QString> &provider_ids);
    bool is_provider_ids_Set() const;
    bool is_provider_ids_Valid() const;

    qint32 getYear() const;
    void setYear(const qint32 &year);
    bool is_year_Set() const;
    bool is_year_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_index_number;
    bool m_index_number_isSet;
    bool m_index_number_isValid;

    bool m_is_automated;
    bool m_is_automated_isSet;
    bool m_is_automated_isValid;

    QString m_metadata_country_code;
    bool m_metadata_country_code_isSet;
    bool m_metadata_country_code_isValid;

    QString m_metadata_language;
    bool m_metadata_language_isSet;
    bool m_metadata_language_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_parent_index_number;
    bool m_parent_index_number_isSet;
    bool m_parent_index_number_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QDateTime m_premiere_date;
    bool m_premiere_date_isSet;
    bool m_premiere_date_isValid;

    QMap<QString, QString> m_provider_ids;
    bool m_provider_ids_isSet;
    bool m_provider_ids_isValid;

    qint32 m_year;
    bool m_year_isSet;
    bool m_year_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPersonLookupInfo)

#endif // OAIPersonLookupInfo_H
