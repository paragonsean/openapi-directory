/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFileSystemEntryType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFileSystemEntryType::OAIFileSystemEntryType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFileSystemEntryType::OAIFileSystemEntryType() {
    this->initializeModel();
}

OAIFileSystemEntryType::~OAIFileSystemEntryType() {}

void OAIFileSystemEntryType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIFileSystemEntryType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIFileSystemEntryType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("File", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFileSystemEntryType::FILE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Directory", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFileSystemEntryType::DIRECTORY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NetworkComputer", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFileSystemEntryType::NETWORKCOMPUTER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NetworkShare", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFileSystemEntryType::NETWORKSHARE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIFileSystemEntryType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIFileSystemEntryType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIFileSystemEntryType::FILE:
            val = "File";
            break;
        case eOAIFileSystemEntryType::DIRECTORY:
            val = "Directory";
            break;
        case eOAIFileSystemEntryType::NETWORKCOMPUTER:
            val = "NetworkComputer";
            break;
        case eOAIFileSystemEntryType::NETWORKSHARE:
            val = "NetworkShare";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIFileSystemEntryType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIFileSystemEntryType::eOAIFileSystemEntryType OAIFileSystemEntryType::getValue() const {
    return m_value;
}

void OAIFileSystemEntryType::setValue(const OAIFileSystemEntryType::eOAIFileSystemEntryType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIFileSystemEntryType::isSet() const {
    
    return m_value_isSet;
}

bool OAIFileSystemEntryType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
