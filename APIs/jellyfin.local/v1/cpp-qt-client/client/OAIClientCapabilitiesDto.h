/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIClientCapabilitiesDto.h
 *
 * Client capabilities dto.
 */

#ifndef OAIClientCapabilitiesDto_H
#define OAIClientCapabilitiesDto_H

#include <QJsonObject>

#include "OAIDeviceProfile.h"
#include "OAIGeneralCommandType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDeviceProfile;

class OAIClientCapabilitiesDto : public OAIObject {
public:
    OAIClientCapabilitiesDto();
    OAIClientCapabilitiesDto(QString json);
    ~OAIClientCapabilitiesDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppStoreUrl() const;
    void setAppStoreUrl(const QString &app_store_url);
    bool is_app_store_url_Set() const;
    bool is_app_store_url_Valid() const;

    OAIDeviceProfile getDeviceProfile() const;
    void setDeviceProfile(const OAIDeviceProfile &device_profile);
    bool is_device_profile_Set() const;
    bool is_device_profile_Valid() const;

    QString getIconUrl() const;
    void setIconUrl(const QString &icon_url);
    bool is_icon_url_Set() const;
    bool is_icon_url_Valid() const;

    QString getMessageCallbackUrl() const;
    void setMessageCallbackUrl(const QString &message_callback_url);
    bool is_message_callback_url_Set() const;
    bool is_message_callback_url_Valid() const;

    QList<QString> getPlayableMediaTypes() const;
    void setPlayableMediaTypes(const QList<QString> &playable_media_types);
    bool is_playable_media_types_Set() const;
    bool is_playable_media_types_Valid() const;

    QList<OAIGeneralCommandType> getSupportedCommands() const;
    void setSupportedCommands(const QList<OAIGeneralCommandType> &supported_commands);
    bool is_supported_commands_Set() const;
    bool is_supported_commands_Valid() const;

    bool isSupportsContentUploading() const;
    void setSupportsContentUploading(const bool &supports_content_uploading);
    bool is_supports_content_uploading_Set() const;
    bool is_supports_content_uploading_Valid() const;

    bool isSupportsMediaControl() const;
    void setSupportsMediaControl(const bool &supports_media_control);
    bool is_supports_media_control_Set() const;
    bool is_supports_media_control_Valid() const;

    bool isSupportsPersistentIdentifier() const;
    void setSupportsPersistentIdentifier(const bool &supports_persistent_identifier);
    bool is_supports_persistent_identifier_Set() const;
    bool is_supports_persistent_identifier_Valid() const;

    bool isSupportsSync() const;
    void setSupportsSync(const bool &supports_sync);
    bool is_supports_sync_Set() const;
    bool is_supports_sync_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_app_store_url;
    bool m_app_store_url_isSet;
    bool m_app_store_url_isValid;

    OAIDeviceProfile m_device_profile;
    bool m_device_profile_isSet;
    bool m_device_profile_isValid;

    QString m_icon_url;
    bool m_icon_url_isSet;
    bool m_icon_url_isValid;

    QString m_message_callback_url;
    bool m_message_callback_url_isSet;
    bool m_message_callback_url_isValid;

    QList<QString> m_playable_media_types;
    bool m_playable_media_types_isSet;
    bool m_playable_media_types_isValid;

    QList<OAIGeneralCommandType> m_supported_commands;
    bool m_supported_commands_isSet;
    bool m_supported_commands_isValid;

    bool m_supports_content_uploading;
    bool m_supports_content_uploading_isSet;
    bool m_supports_content_uploading_isValid;

    bool m_supports_media_control;
    bool m_supports_media_control_isSet;
    bool m_supports_media_control_isValid;

    bool m_supports_persistent_identifier;
    bool m_supports_persistent_identifier_isSet;
    bool m_supports_persistent_identifier_isValid;

    bool m_supports_sync;
    bool m_supports_sync_isSet;
    bool m_supports_sync_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIClientCapabilitiesDto)

#endif // OAIClientCapabilitiesDto_H
