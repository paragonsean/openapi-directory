/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecommendationType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecommendationType::OAIRecommendationType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecommendationType::OAIRecommendationType() {
    this->initializeModel();
}

OAIRecommendationType::~OAIRecommendationType() {}

void OAIRecommendationType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRecommendationType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRecommendationType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("SimilarToRecentlyPlayed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecommendationType::SIMILARTORECENTLYPLAYED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SimilarToLikedItem", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecommendationType::SIMILARTOLIKEDITEM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HasDirectorFromRecentlyPlayed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecommendationType::HASDIRECTORFROMRECENTLYPLAYED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HasActorFromRecentlyPlayed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecommendationType::HASACTORFROMRECENTLYPLAYED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HasLikedDirector", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecommendationType::HASLIKEDDIRECTOR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HasLikedActor", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecommendationType::HASLIKEDACTOR;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRecommendationType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRecommendationType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRecommendationType::SIMILARTORECENTLYPLAYED:
            val = "SimilarToRecentlyPlayed";
            break;
        case eOAIRecommendationType::SIMILARTOLIKEDITEM:
            val = "SimilarToLikedItem";
            break;
        case eOAIRecommendationType::HASDIRECTORFROMRECENTLYPLAYED:
            val = "HasDirectorFromRecentlyPlayed";
            break;
        case eOAIRecommendationType::HASACTORFROMRECENTLYPLAYED:
            val = "HasActorFromRecentlyPlayed";
            break;
        case eOAIRecommendationType::HASLIKEDDIRECTOR:
            val = "HasLikedDirector";
            break;
        case eOAIRecommendationType::HASLIKEDACTOR:
            val = "HasLikedActor";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRecommendationType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRecommendationType::eOAIRecommendationType OAIRecommendationType::getValue() const {
    return m_value;
}

void OAIRecommendationType::setValue(const OAIRecommendationType::eOAIRecommendationType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRecommendationType::isSet() const {
    
    return m_value_isSet;
}

bool OAIRecommendationType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
