/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICountryInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICountryInfo::OAICountryInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICountryInfo::OAICountryInfo() {
    this->initializeModel();
}

OAICountryInfo::~OAICountryInfo() {}

void OAICountryInfo::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_three_letter_iso_region_name_isSet = false;
    m_three_letter_iso_region_name_isValid = false;

    m_two_letter_iso_region_name_isSet = false;
    m_two_letter_iso_region_name_isValid = false;
}

void OAICountryInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICountryInfo::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("DisplayName")]);
    m_display_name_isSet = !json[QString("DisplayName")].isNull() && m_display_name_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_three_letter_iso_region_name_isValid = ::OpenAPI::fromJsonValue(m_three_letter_iso_region_name, json[QString("ThreeLetterISORegionName")]);
    m_three_letter_iso_region_name_isSet = !json[QString("ThreeLetterISORegionName")].isNull() && m_three_letter_iso_region_name_isValid;

    m_two_letter_iso_region_name_isValid = ::OpenAPI::fromJsonValue(m_two_letter_iso_region_name, json[QString("TwoLetterISORegionName")]);
    m_two_letter_iso_region_name_isSet = !json[QString("TwoLetterISORegionName")].isNull() && m_two_letter_iso_region_name_isValid;
}

QString OAICountryInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICountryInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("DisplayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_three_letter_iso_region_name_isSet) {
        obj.insert(QString("ThreeLetterISORegionName"), ::OpenAPI::toJsonValue(m_three_letter_iso_region_name));
    }
    if (m_two_letter_iso_region_name_isSet) {
        obj.insert(QString("TwoLetterISORegionName"), ::OpenAPI::toJsonValue(m_two_letter_iso_region_name));
    }
    return obj;
}

QString OAICountryInfo::getDisplayName() const {
    return m_display_name;
}
void OAICountryInfo::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAICountryInfo::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAICountryInfo::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAICountryInfo::getName() const {
    return m_name;
}
void OAICountryInfo::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICountryInfo::is_name_Set() const{
    return m_name_isSet;
}

bool OAICountryInfo::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICountryInfo::getThreeLetterIsoRegionName() const {
    return m_three_letter_iso_region_name;
}
void OAICountryInfo::setThreeLetterIsoRegionName(const QString &three_letter_iso_region_name) {
    m_three_letter_iso_region_name = three_letter_iso_region_name;
    m_three_letter_iso_region_name_isSet = true;
}

bool OAICountryInfo::is_three_letter_iso_region_name_Set() const{
    return m_three_letter_iso_region_name_isSet;
}

bool OAICountryInfo::is_three_letter_iso_region_name_Valid() const{
    return m_three_letter_iso_region_name_isValid;
}

QString OAICountryInfo::getTwoLetterIsoRegionName() const {
    return m_two_letter_iso_region_name;
}
void OAICountryInfo::setTwoLetterIsoRegionName(const QString &two_letter_iso_region_name) {
    m_two_letter_iso_region_name = two_letter_iso_region_name;
    m_two_letter_iso_region_name_isSet = true;
}

bool OAICountryInfo::is_two_letter_iso_region_name_Set() const{
    return m_two_letter_iso_region_name_isSet;
}

bool OAICountryInfo::is_two_letter_iso_region_name_Valid() const{
    return m_two_letter_iso_region_name_isValid;
}

bool OAICountryInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_three_letter_iso_region_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_two_letter_iso_region_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICountryInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
