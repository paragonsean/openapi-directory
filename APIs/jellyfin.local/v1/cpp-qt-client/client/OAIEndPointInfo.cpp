/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEndPointInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEndPointInfo::OAIEndPointInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEndPointInfo::OAIEndPointInfo() {
    this->initializeModel();
}

OAIEndPointInfo::~OAIEndPointInfo() {}

void OAIEndPointInfo::initializeModel() {

    m_is_in_network_isSet = false;
    m_is_in_network_isValid = false;

    m_is_local_isSet = false;
    m_is_local_isValid = false;
}

void OAIEndPointInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEndPointInfo::fromJsonObject(QJsonObject json) {

    m_is_in_network_isValid = ::OpenAPI::fromJsonValue(m_is_in_network, json[QString("IsInNetwork")]);
    m_is_in_network_isSet = !json[QString("IsInNetwork")].isNull() && m_is_in_network_isValid;

    m_is_local_isValid = ::OpenAPI::fromJsonValue(m_is_local, json[QString("IsLocal")]);
    m_is_local_isSet = !json[QString("IsLocal")].isNull() && m_is_local_isValid;
}

QString OAIEndPointInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEndPointInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_is_in_network_isSet) {
        obj.insert(QString("IsInNetwork"), ::OpenAPI::toJsonValue(m_is_in_network));
    }
    if (m_is_local_isSet) {
        obj.insert(QString("IsLocal"), ::OpenAPI::toJsonValue(m_is_local));
    }
    return obj;
}

bool OAIEndPointInfo::isIsInNetwork() const {
    return m_is_in_network;
}
void OAIEndPointInfo::setIsInNetwork(const bool &is_in_network) {
    m_is_in_network = is_in_network;
    m_is_in_network_isSet = true;
}

bool OAIEndPointInfo::is_is_in_network_Set() const{
    return m_is_in_network_isSet;
}

bool OAIEndPointInfo::is_is_in_network_Valid() const{
    return m_is_in_network_isValid;
}

bool OAIEndPointInfo::isIsLocal() const {
    return m_is_local;
}
void OAIEndPointInfo::setIsLocal(const bool &is_local) {
    m_is_local = is_local;
    m_is_local_isSet = true;
}

bool OAIEndPointInfo::is_is_local_Set() const{
    return m_is_local_isSet;
}

bool OAIEndPointInfo::is_is_local_Valid() const{
    return m_is_local_isValid;
}

bool OAIEndPointInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_in_network_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_local_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEndPointInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
