/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChannelMediaContentType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChannelMediaContentType::OAIChannelMediaContentType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChannelMediaContentType::OAIChannelMediaContentType() {
    this->initializeModel();
}

OAIChannelMediaContentType::~OAIChannelMediaContentType() {}

void OAIChannelMediaContentType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIChannelMediaContentType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIChannelMediaContentType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Clip", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelMediaContentType::CLIP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Podcast", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelMediaContentType::PODCAST;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Trailer", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelMediaContentType::TRAILER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Movie", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelMediaContentType::MOVIE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Episode", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelMediaContentType::EPISODE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Song", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelMediaContentType::SONG;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MovieExtra", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelMediaContentType::MOVIEEXTRA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TvExtra", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelMediaContentType::TVEXTRA;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIChannelMediaContentType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIChannelMediaContentType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIChannelMediaContentType::CLIP:
            val = "Clip";
            break;
        case eOAIChannelMediaContentType::PODCAST:
            val = "Podcast";
            break;
        case eOAIChannelMediaContentType::TRAILER:
            val = "Trailer";
            break;
        case eOAIChannelMediaContentType::MOVIE:
            val = "Movie";
            break;
        case eOAIChannelMediaContentType::EPISODE:
            val = "Episode";
            break;
        case eOAIChannelMediaContentType::SONG:
            val = "Song";
            break;
        case eOAIChannelMediaContentType::MOVIEEXTRA:
            val = "MovieExtra";
            break;
        case eOAIChannelMediaContentType::TVEXTRA:
            val = "TvExtra";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIChannelMediaContentType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIChannelMediaContentType::eOAIChannelMediaContentType OAIChannelMediaContentType::getValue() const {
    return m_value;
}

void OAIChannelMediaContentType::setValue(const OAIChannelMediaContentType::eOAIChannelMediaContentType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIChannelMediaContentType::isSet() const {
    
    return m_value_isSet;
}

bool OAIChannelMediaContentType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
