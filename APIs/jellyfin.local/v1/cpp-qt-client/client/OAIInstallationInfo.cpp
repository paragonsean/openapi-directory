/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInstallationInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInstallationInfo::OAIInstallationInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInstallationInfo::OAIInstallationInfo() {
    this->initializeModel();
}

OAIInstallationInfo::~OAIInstallationInfo() {}

void OAIInstallationInfo::initializeModel() {

    m_changelog_isSet = false;
    m_changelog_isValid = false;

    m_checksum_isSet = false;
    m_checksum_isValid = false;

    m_guid_isSet = false;
    m_guid_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_source_url_isSet = false;
    m_source_url_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAIInstallationInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInstallationInfo::fromJsonObject(QJsonObject json) {

    m_changelog_isValid = ::OpenAPI::fromJsonValue(m_changelog, json[QString("Changelog")]);
    m_changelog_isSet = !json[QString("Changelog")].isNull() && m_changelog_isValid;

    m_checksum_isValid = ::OpenAPI::fromJsonValue(m_checksum, json[QString("Checksum")]);
    m_checksum_isSet = !json[QString("Checksum")].isNull() && m_checksum_isValid;

    m_guid_isValid = ::OpenAPI::fromJsonValue(m_guid, json[QString("Guid")]);
    m_guid_isSet = !json[QString("Guid")].isNull() && m_guid_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_source_url_isValid = ::OpenAPI::fromJsonValue(m_source_url, json[QString("SourceUrl")]);
    m_source_url_isSet = !json[QString("SourceUrl")].isNull() && m_source_url_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("Version")]);
    m_version_isSet = !json[QString("Version")].isNull() && m_version_isValid;
}

QString OAIInstallationInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInstallationInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_changelog_isSet) {
        obj.insert(QString("Changelog"), ::OpenAPI::toJsonValue(m_changelog));
    }
    if (m_checksum_isSet) {
        obj.insert(QString("Checksum"), ::OpenAPI::toJsonValue(m_checksum));
    }
    if (m_guid_isSet) {
        obj.insert(QString("Guid"), ::OpenAPI::toJsonValue(m_guid));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_source_url_isSet) {
        obj.insert(QString("SourceUrl"), ::OpenAPI::toJsonValue(m_source_url));
    }
    if (m_version.isSet()) {
        obj.insert(QString("Version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

QString OAIInstallationInfo::getChangelog() const {
    return m_changelog;
}
void OAIInstallationInfo::setChangelog(const QString &changelog) {
    m_changelog = changelog;
    m_changelog_isSet = true;
}

bool OAIInstallationInfo::is_changelog_Set() const{
    return m_changelog_isSet;
}

bool OAIInstallationInfo::is_changelog_Valid() const{
    return m_changelog_isValid;
}

QString OAIInstallationInfo::getChecksum() const {
    return m_checksum;
}
void OAIInstallationInfo::setChecksum(const QString &checksum) {
    m_checksum = checksum;
    m_checksum_isSet = true;
}

bool OAIInstallationInfo::is_checksum_Set() const{
    return m_checksum_isSet;
}

bool OAIInstallationInfo::is_checksum_Valid() const{
    return m_checksum_isValid;
}

QString OAIInstallationInfo::getGuid() const {
    return m_guid;
}
void OAIInstallationInfo::setGuid(const QString &guid) {
    m_guid = guid;
    m_guid_isSet = true;
}

bool OAIInstallationInfo::is_guid_Set() const{
    return m_guid_isSet;
}

bool OAIInstallationInfo::is_guid_Valid() const{
    return m_guid_isValid;
}

QString OAIInstallationInfo::getName() const {
    return m_name;
}
void OAIInstallationInfo::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIInstallationInfo::is_name_Set() const{
    return m_name_isSet;
}

bool OAIInstallationInfo::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIInstallationInfo::getSourceUrl() const {
    return m_source_url;
}
void OAIInstallationInfo::setSourceUrl(const QString &source_url) {
    m_source_url = source_url;
    m_source_url_isSet = true;
}

bool OAIInstallationInfo::is_source_url_Set() const{
    return m_source_url_isSet;
}

bool OAIInstallationInfo::is_source_url_Valid() const{
    return m_source_url_isValid;
}

OAIVersion OAIInstallationInfo::getVersion() const {
    return m_version;
}
void OAIInstallationInfo::setVersion(const OAIVersion &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIInstallationInfo::is_version_Set() const{
    return m_version_isSet;
}

bool OAIInstallationInfo::is_version_Valid() const{
    return m_version_isValid;
}

bool OAIInstallationInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_changelog_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_checksum_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_guid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInstallationInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
