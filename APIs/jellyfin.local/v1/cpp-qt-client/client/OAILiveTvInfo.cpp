/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILiveTvInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILiveTvInfo::OAILiveTvInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILiveTvInfo::OAILiveTvInfo() {
    this->initializeModel();
}

OAILiveTvInfo::~OAILiveTvInfo() {}

void OAILiveTvInfo::initializeModel() {

    m_enabled_users_isSet = false;
    m_enabled_users_isValid = false;

    m_is_enabled_isSet = false;
    m_is_enabled_isValid = false;

    m_services_isSet = false;
    m_services_isValid = false;
}

void OAILiveTvInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILiveTvInfo::fromJsonObject(QJsonObject json) {

    m_enabled_users_isValid = ::OpenAPI::fromJsonValue(m_enabled_users, json[QString("EnabledUsers")]);
    m_enabled_users_isSet = !json[QString("EnabledUsers")].isNull() && m_enabled_users_isValid;

    m_is_enabled_isValid = ::OpenAPI::fromJsonValue(m_is_enabled, json[QString("IsEnabled")]);
    m_is_enabled_isSet = !json[QString("IsEnabled")].isNull() && m_is_enabled_isValid;

    m_services_isValid = ::OpenAPI::fromJsonValue(m_services, json[QString("Services")]);
    m_services_isSet = !json[QString("Services")].isNull() && m_services_isValid;
}

QString OAILiveTvInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILiveTvInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_enabled_users.size() > 0) {
        obj.insert(QString("EnabledUsers"), ::OpenAPI::toJsonValue(m_enabled_users));
    }
    if (m_is_enabled_isSet) {
        obj.insert(QString("IsEnabled"), ::OpenAPI::toJsonValue(m_is_enabled));
    }
    if (m_services.size() > 0) {
        obj.insert(QString("Services"), ::OpenAPI::toJsonValue(m_services));
    }
    return obj;
}

QList<QString> OAILiveTvInfo::getEnabledUsers() const {
    return m_enabled_users;
}
void OAILiveTvInfo::setEnabledUsers(const QList<QString> &enabled_users) {
    m_enabled_users = enabled_users;
    m_enabled_users_isSet = true;
}

bool OAILiveTvInfo::is_enabled_users_Set() const{
    return m_enabled_users_isSet;
}

bool OAILiveTvInfo::is_enabled_users_Valid() const{
    return m_enabled_users_isValid;
}

bool OAILiveTvInfo::isIsEnabled() const {
    return m_is_enabled;
}
void OAILiveTvInfo::setIsEnabled(const bool &is_enabled) {
    m_is_enabled = is_enabled;
    m_is_enabled_isSet = true;
}

bool OAILiveTvInfo::is_is_enabled_Set() const{
    return m_is_enabled_isSet;
}

bool OAILiveTvInfo::is_is_enabled_Valid() const{
    return m_is_enabled_isValid;
}

QList<OAILiveTvServiceInfo> OAILiveTvInfo::getServices() const {
    return m_services;
}
void OAILiveTvInfo::setServices(const QList<OAILiveTvServiceInfo> &services) {
    m_services = services;
    m_services_isSet = true;
}

bool OAILiveTvInfo::is_services_Set() const{
    return m_services_isSet;
}

bool OAILiveTvInfo::is_services_Valid() const{
    return m_services_isValid;
}

bool OAILiveTvInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enabled_users.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_services.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILiveTvInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
