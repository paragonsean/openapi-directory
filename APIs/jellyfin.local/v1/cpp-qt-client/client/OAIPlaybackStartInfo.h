/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlaybackStartInfo.h
 *
 * Class PlaybackStartInfo.
 */

#ifndef OAIPlaybackStartInfo_H
#define OAIPlaybackStartInfo_H

#include <QJsonObject>

#include "OAIBaseItemDto.h"
#include "OAIPlayMethod.h"
#include "OAIQueueItem.h"
#include "OAIRepeatMode.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBaseItemDto;
class OAIQueueItem;

class OAIPlaybackStartInfo : public OAIObject {
public:
    OAIPlaybackStartInfo();
    OAIPlaybackStartInfo(QString json);
    ~OAIPlaybackStartInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAspectRatio() const;
    void setAspectRatio(const QString &aspect_ratio);
    bool is_aspect_ratio_Set() const;
    bool is_aspect_ratio_Valid() const;

    qint32 getAudioStreamIndex() const;
    void setAudioStreamIndex(const qint32 &audio_stream_index);
    bool is_audio_stream_index_Set() const;
    bool is_audio_stream_index_Valid() const;

    qint32 getBrightness() const;
    void setBrightness(const qint32 &brightness);
    bool is_brightness_Set() const;
    bool is_brightness_Valid() const;

    bool isCanSeek() const;
    void setCanSeek(const bool &can_seek);
    bool is_can_seek_Set() const;
    bool is_can_seek_Valid() const;

    bool isIsMuted() const;
    void setIsMuted(const bool &is_muted);
    bool is_is_muted_Set() const;
    bool is_is_muted_Valid() const;

    bool isIsPaused() const;
    void setIsPaused(const bool &is_paused);
    bool is_is_paused_Set() const;
    bool is_is_paused_Valid() const;

    OAIBaseItemDto getItem() const;
    void setItem(const OAIBaseItemDto &item);
    bool is_item_Set() const;
    bool is_item_Valid() const;

    QString getItemId() const;
    void setItemId(const QString &item_id);
    bool is_item_id_Set() const;
    bool is_item_id_Valid() const;

    QString getLiveStreamId() const;
    void setLiveStreamId(const QString &live_stream_id);
    bool is_live_stream_id_Set() const;
    bool is_live_stream_id_Valid() const;

    QString getMediaSourceId() const;
    void setMediaSourceId(const QString &media_source_id);
    bool is_media_source_id_Set() const;
    bool is_media_source_id_Valid() const;

    QList<OAIQueueItem> getNowPlayingQueue() const;
    void setNowPlayingQueue(const QList<OAIQueueItem> &now_playing_queue);
    bool is_now_playing_queue_Set() const;
    bool is_now_playing_queue_Valid() const;

    OAIPlayMethod getPlayMethod() const;
    void setPlayMethod(const OAIPlayMethod &play_method);
    bool is_play_method_Set() const;
    bool is_play_method_Valid() const;

    QString getPlaySessionId() const;
    void setPlaySessionId(const QString &play_session_id);
    bool is_play_session_id_Set() const;
    bool is_play_session_id_Valid() const;

    qint64 getPlaybackStartTimeTicks() const;
    void setPlaybackStartTimeTicks(const qint64 &playback_start_time_ticks);
    bool is_playback_start_time_ticks_Set() const;
    bool is_playback_start_time_ticks_Valid() const;

    QString getPlaylistItemId() const;
    void setPlaylistItemId(const QString &playlist_item_id);
    bool is_playlist_item_id_Set() const;
    bool is_playlist_item_id_Valid() const;

    qint64 getPositionTicks() const;
    void setPositionTicks(const qint64 &position_ticks);
    bool is_position_ticks_Set() const;
    bool is_position_ticks_Valid() const;

    OAIRepeatMode getRepeatMode() const;
    void setRepeatMode(const OAIRepeatMode &repeat_mode);
    bool is_repeat_mode_Set() const;
    bool is_repeat_mode_Valid() const;

    QString getSessionId() const;
    void setSessionId(const QString &session_id);
    bool is_session_id_Set() const;
    bool is_session_id_Valid() const;

    qint32 getSubtitleStreamIndex() const;
    void setSubtitleStreamIndex(const qint32 &subtitle_stream_index);
    bool is_subtitle_stream_index_Set() const;
    bool is_subtitle_stream_index_Valid() const;

    qint32 getVolumeLevel() const;
    void setVolumeLevel(const qint32 &volume_level);
    bool is_volume_level_Set() const;
    bool is_volume_level_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_aspect_ratio;
    bool m_aspect_ratio_isSet;
    bool m_aspect_ratio_isValid;

    qint32 m_audio_stream_index;
    bool m_audio_stream_index_isSet;
    bool m_audio_stream_index_isValid;

    qint32 m_brightness;
    bool m_brightness_isSet;
    bool m_brightness_isValid;

    bool m_can_seek;
    bool m_can_seek_isSet;
    bool m_can_seek_isValid;

    bool m_is_muted;
    bool m_is_muted_isSet;
    bool m_is_muted_isValid;

    bool m_is_paused;
    bool m_is_paused_isSet;
    bool m_is_paused_isValid;

    OAIBaseItemDto m_item;
    bool m_item_isSet;
    bool m_item_isValid;

    QString m_item_id;
    bool m_item_id_isSet;
    bool m_item_id_isValid;

    QString m_live_stream_id;
    bool m_live_stream_id_isSet;
    bool m_live_stream_id_isValid;

    QString m_media_source_id;
    bool m_media_source_id_isSet;
    bool m_media_source_id_isValid;

    QList<OAIQueueItem> m_now_playing_queue;
    bool m_now_playing_queue_isSet;
    bool m_now_playing_queue_isValid;

    OAIPlayMethod m_play_method;
    bool m_play_method_isSet;
    bool m_play_method_isValid;

    QString m_play_session_id;
    bool m_play_session_id_isSet;
    bool m_play_session_id_isValid;

    qint64 m_playback_start_time_ticks;
    bool m_playback_start_time_ticks_isSet;
    bool m_playback_start_time_ticks_isValid;

    QString m_playlist_item_id;
    bool m_playlist_item_id_isSet;
    bool m_playlist_item_id_isValid;

    qint64 m_position_ticks;
    bool m_position_ticks_isSet;
    bool m_position_ticks_isValid;

    OAIRepeatMode m_repeat_mode;
    bool m_repeat_mode_isSet;
    bool m_repeat_mode_isValid;

    QString m_session_id;
    bool m_session_id_isSet;
    bool m_session_id_isValid;

    qint32 m_subtitle_stream_index;
    bool m_subtitle_stream_index_isSet;
    bool m_subtitle_stream_index_isValid;

    qint32 m_volume_level;
    bool m_volume_level_isSet;
    bool m_volume_level_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlaybackStartInfo)

#endif // OAIPlaybackStartInfo_H
