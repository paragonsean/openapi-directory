/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUtcTimeResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUtcTimeResponse::OAIUtcTimeResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUtcTimeResponse::OAIUtcTimeResponse() {
    this->initializeModel();
}

OAIUtcTimeResponse::~OAIUtcTimeResponse() {}

void OAIUtcTimeResponse::initializeModel() {

    m_request_reception_time_isSet = false;
    m_request_reception_time_isValid = false;

    m_response_transmission_time_isSet = false;
    m_response_transmission_time_isValid = false;
}

void OAIUtcTimeResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUtcTimeResponse::fromJsonObject(QJsonObject json) {

    m_request_reception_time_isValid = ::OpenAPI::fromJsonValue(m_request_reception_time, json[QString("RequestReceptionTime")]);
    m_request_reception_time_isSet = !json[QString("RequestReceptionTime")].isNull() && m_request_reception_time_isValid;

    m_response_transmission_time_isValid = ::OpenAPI::fromJsonValue(m_response_transmission_time, json[QString("ResponseTransmissionTime")]);
    m_response_transmission_time_isSet = !json[QString("ResponseTransmissionTime")].isNull() && m_response_transmission_time_isValid;
}

QString OAIUtcTimeResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUtcTimeResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_request_reception_time_isSet) {
        obj.insert(QString("RequestReceptionTime"), ::OpenAPI::toJsonValue(m_request_reception_time));
    }
    if (m_response_transmission_time_isSet) {
        obj.insert(QString("ResponseTransmissionTime"), ::OpenAPI::toJsonValue(m_response_transmission_time));
    }
    return obj;
}

QDateTime OAIUtcTimeResponse::getRequestReceptionTime() const {
    return m_request_reception_time;
}
void OAIUtcTimeResponse::setRequestReceptionTime(const QDateTime &request_reception_time) {
    m_request_reception_time = request_reception_time;
    m_request_reception_time_isSet = true;
}

bool OAIUtcTimeResponse::is_request_reception_time_Set() const{
    return m_request_reception_time_isSet;
}

bool OAIUtcTimeResponse::is_request_reception_time_Valid() const{
    return m_request_reception_time_isValid;
}

QDateTime OAIUtcTimeResponse::getResponseTransmissionTime() const {
    return m_response_transmission_time;
}
void OAIUtcTimeResponse::setResponseTransmissionTime(const QDateTime &response_transmission_time) {
    m_response_transmission_time = response_transmission_time;
    m_response_transmission_time_isSet = true;
}

bool OAIUtcTimeResponse::is_response_transmission_time_Set() const{
    return m_response_transmission_time_isSet;
}

bool OAIUtcTimeResponse::is_response_transmission_time_Valid() const{
    return m_response_transmission_time_isValid;
}

bool OAIUtcTimeResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_request_reception_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_transmission_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUtcTimeResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
