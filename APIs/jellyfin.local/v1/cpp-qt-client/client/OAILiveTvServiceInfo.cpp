/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILiveTvServiceInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILiveTvServiceInfo::OAILiveTvServiceInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILiveTvServiceInfo::OAILiveTvServiceInfo() {
    this->initializeModel();
}

OAILiveTvServiceInfo::~OAILiveTvServiceInfo() {}

void OAILiveTvServiceInfo::initializeModel() {

    m_has_update_available_isSet = false;
    m_has_update_available_isValid = false;

    m_home_page_url_isSet = false;
    m_home_page_url_isValid = false;

    m_is_visible_isSet = false;
    m_is_visible_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_status_message_isSet = false;
    m_status_message_isValid = false;

    m_tuners_isSet = false;
    m_tuners_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAILiveTvServiceInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILiveTvServiceInfo::fromJsonObject(QJsonObject json) {

    m_has_update_available_isValid = ::OpenAPI::fromJsonValue(m_has_update_available, json[QString("HasUpdateAvailable")]);
    m_has_update_available_isSet = !json[QString("HasUpdateAvailable")].isNull() && m_has_update_available_isValid;

    m_home_page_url_isValid = ::OpenAPI::fromJsonValue(m_home_page_url, json[QString("HomePageUrl")]);
    m_home_page_url_isSet = !json[QString("HomePageUrl")].isNull() && m_home_page_url_isValid;

    m_is_visible_isValid = ::OpenAPI::fromJsonValue(m_is_visible, json[QString("IsVisible")]);
    m_is_visible_isSet = !json[QString("IsVisible")].isNull() && m_is_visible_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_status_message_isValid = ::OpenAPI::fromJsonValue(m_status_message, json[QString("StatusMessage")]);
    m_status_message_isSet = !json[QString("StatusMessage")].isNull() && m_status_message_isValid;

    m_tuners_isValid = ::OpenAPI::fromJsonValue(m_tuners, json[QString("Tuners")]);
    m_tuners_isSet = !json[QString("Tuners")].isNull() && m_tuners_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("Version")]);
    m_version_isSet = !json[QString("Version")].isNull() && m_version_isValid;
}

QString OAILiveTvServiceInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILiveTvServiceInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_has_update_available_isSet) {
        obj.insert(QString("HasUpdateAvailable"), ::OpenAPI::toJsonValue(m_has_update_available));
    }
    if (m_home_page_url_isSet) {
        obj.insert(QString("HomePageUrl"), ::OpenAPI::toJsonValue(m_home_page_url));
    }
    if (m_is_visible_isSet) {
        obj.insert(QString("IsVisible"), ::OpenAPI::toJsonValue(m_is_visible));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_status_message_isSet) {
        obj.insert(QString("StatusMessage"), ::OpenAPI::toJsonValue(m_status_message));
    }
    if (m_tuners.size() > 0) {
        obj.insert(QString("Tuners"), ::OpenAPI::toJsonValue(m_tuners));
    }
    if (m_version_isSet) {
        obj.insert(QString("Version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

bool OAILiveTvServiceInfo::isHasUpdateAvailable() const {
    return m_has_update_available;
}
void OAILiveTvServiceInfo::setHasUpdateAvailable(const bool &has_update_available) {
    m_has_update_available = has_update_available;
    m_has_update_available_isSet = true;
}

bool OAILiveTvServiceInfo::is_has_update_available_Set() const{
    return m_has_update_available_isSet;
}

bool OAILiveTvServiceInfo::is_has_update_available_Valid() const{
    return m_has_update_available_isValid;
}

QString OAILiveTvServiceInfo::getHomePageUrl() const {
    return m_home_page_url;
}
void OAILiveTvServiceInfo::setHomePageUrl(const QString &home_page_url) {
    m_home_page_url = home_page_url;
    m_home_page_url_isSet = true;
}

bool OAILiveTvServiceInfo::is_home_page_url_Set() const{
    return m_home_page_url_isSet;
}

bool OAILiveTvServiceInfo::is_home_page_url_Valid() const{
    return m_home_page_url_isValid;
}

bool OAILiveTvServiceInfo::isIsVisible() const {
    return m_is_visible;
}
void OAILiveTvServiceInfo::setIsVisible(const bool &is_visible) {
    m_is_visible = is_visible;
    m_is_visible_isSet = true;
}

bool OAILiveTvServiceInfo::is_is_visible_Set() const{
    return m_is_visible_isSet;
}

bool OAILiveTvServiceInfo::is_is_visible_Valid() const{
    return m_is_visible_isValid;
}

QString OAILiveTvServiceInfo::getName() const {
    return m_name;
}
void OAILiveTvServiceInfo::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAILiveTvServiceInfo::is_name_Set() const{
    return m_name_isSet;
}

bool OAILiveTvServiceInfo::is_name_Valid() const{
    return m_name_isValid;
}

OAILiveTvServiceStatus OAILiveTvServiceInfo::getStatus() const {
    return m_status;
}
void OAILiveTvServiceInfo::setStatus(const OAILiveTvServiceStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAILiveTvServiceInfo::is_status_Set() const{
    return m_status_isSet;
}

bool OAILiveTvServiceInfo::is_status_Valid() const{
    return m_status_isValid;
}

QString OAILiveTvServiceInfo::getStatusMessage() const {
    return m_status_message;
}
void OAILiveTvServiceInfo::setStatusMessage(const QString &status_message) {
    m_status_message = status_message;
    m_status_message_isSet = true;
}

bool OAILiveTvServiceInfo::is_status_message_Set() const{
    return m_status_message_isSet;
}

bool OAILiveTvServiceInfo::is_status_message_Valid() const{
    return m_status_message_isValid;
}

QList<QString> OAILiveTvServiceInfo::getTuners() const {
    return m_tuners;
}
void OAILiveTvServiceInfo::setTuners(const QList<QString> &tuners) {
    m_tuners = tuners;
    m_tuners_isSet = true;
}

bool OAILiveTvServiceInfo::is_tuners_Set() const{
    return m_tuners_isSet;
}

bool OAILiveTvServiceInfo::is_tuners_Valid() const{
    return m_tuners_isValid;
}

QString OAILiveTvServiceInfo::getVersion() const {
    return m_version;
}
void OAILiveTvServiceInfo::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAILiveTvServiceInfo::is_version_Set() const{
    return m_version_isSet;
}

bool OAILiveTvServiceInfo::is_version_Valid() const{
    return m_version_isValid;
}

bool OAILiveTvServiceInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_has_update_available_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_page_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_visible_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tuners.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILiveTvServiceInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
