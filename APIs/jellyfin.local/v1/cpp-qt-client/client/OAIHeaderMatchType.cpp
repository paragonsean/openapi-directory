/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHeaderMatchType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHeaderMatchType::OAIHeaderMatchType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHeaderMatchType::OAIHeaderMatchType() {
    this->initializeModel();
}

OAIHeaderMatchType::~OAIHeaderMatchType() {}

void OAIHeaderMatchType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIHeaderMatchType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIHeaderMatchType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Equals", Qt::CaseInsensitive) == 0) {
        m_value = eOAIHeaderMatchType::EQUALS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Regex", Qt::CaseInsensitive) == 0) {
        m_value = eOAIHeaderMatchType::REGEX;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Substring", Qt::CaseInsensitive) == 0) {
        m_value = eOAIHeaderMatchType::SUBSTRING;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIHeaderMatchType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIHeaderMatchType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIHeaderMatchType::EQUALS:
            val = "Equals";
            break;
        case eOAIHeaderMatchType::REGEX:
            val = "Regex";
            break;
        case eOAIHeaderMatchType::SUBSTRING:
            val = "Substring";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIHeaderMatchType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIHeaderMatchType::eOAIHeaderMatchType OAIHeaderMatchType::getValue() const {
    return m_value;
}

void OAIHeaderMatchType::setValue(const OAIHeaderMatchType::eOAIHeaderMatchType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIHeaderMatchType::isSet() const {
    
    return m_value_isSet;
}

bool OAIHeaderMatchType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
