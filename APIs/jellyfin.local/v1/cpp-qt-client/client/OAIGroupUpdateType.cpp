/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGroupUpdateType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGroupUpdateType::OAIGroupUpdateType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGroupUpdateType::OAIGroupUpdateType() {
    this->initializeModel();
}

OAIGroupUpdateType::~OAIGroupUpdateType() {}

void OAIGroupUpdateType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIGroupUpdateType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIGroupUpdateType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("UserJoined", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGroupUpdateType::USERJOINED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UserLeft", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGroupUpdateType::USERLEFT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GroupJoined", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGroupUpdateType::GROUPJOINED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GroupLeft", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGroupUpdateType::GROUPLEFT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("StateUpdate", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGroupUpdateType::STATEUPDATE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PlayQueue", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGroupUpdateType::PLAYQUEUE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NotInGroup", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGroupUpdateType::NOTINGROUP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GroupDoesNotExist", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGroupUpdateType::GROUPDOESNOTEXIST;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CreateGroupDenied", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGroupUpdateType::CREATEGROUPDENIED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("JoinGroupDenied", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGroupUpdateType::JOINGROUPDENIED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LibraryAccessDenied", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGroupUpdateType::LIBRARYACCESSDENIED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIGroupUpdateType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIGroupUpdateType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIGroupUpdateType::USERJOINED:
            val = "UserJoined";
            break;
        case eOAIGroupUpdateType::USERLEFT:
            val = "UserLeft";
            break;
        case eOAIGroupUpdateType::GROUPJOINED:
            val = "GroupJoined";
            break;
        case eOAIGroupUpdateType::GROUPLEFT:
            val = "GroupLeft";
            break;
        case eOAIGroupUpdateType::STATEUPDATE:
            val = "StateUpdate";
            break;
        case eOAIGroupUpdateType::PLAYQUEUE:
            val = "PlayQueue";
            break;
        case eOAIGroupUpdateType::NOTINGROUP:
            val = "NotInGroup";
            break;
        case eOAIGroupUpdateType::GROUPDOESNOTEXIST:
            val = "GroupDoesNotExist";
            break;
        case eOAIGroupUpdateType::CREATEGROUPDENIED:
            val = "CreateGroupDenied";
            break;
        case eOAIGroupUpdateType::JOINGROUPDENIED:
            val = "JoinGroupDenied";
            break;
        case eOAIGroupUpdateType::LIBRARYACCESSDENIED:
            val = "LibraryAccessDenied";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIGroupUpdateType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIGroupUpdateType::eOAIGroupUpdateType OAIGroupUpdateType::getValue() const {
    return m_value;
}

void OAIGroupUpdateType::setValue(const OAIGroupUpdateType::eOAIGroupUpdateType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIGroupUpdateType::isSet() const {
    
    return m_value_isSet;
}

bool OAIGroupUpdateType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
