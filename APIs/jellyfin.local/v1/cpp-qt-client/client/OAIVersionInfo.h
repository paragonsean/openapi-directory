/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVersionInfo.h
 *
 * Defines the MediaBrowser.Model.Updates.VersionInfo class.
 */

#ifndef OAIVersionInfo_H
#define OAIVersionInfo_H

#include <QJsonObject>

#include "OAIVersion.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVersion;

class OAIVersionInfo : public OAIObject {
public:
    OAIVersionInfo();
    OAIVersionInfo(QString json);
    ~OAIVersionInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIVersion getVersionNumber() const;
    void setVersionNumber(const OAIVersion &version_number);
    bool is_version_number_Set() const;
    bool is_version_number_Valid() const;

    QString getChangelog() const;
    void setChangelog(const QString &changelog);
    bool is_changelog_Set() const;
    bool is_changelog_Valid() const;

    QString getChecksum() const;
    void setChecksum(const QString &checksum);
    bool is_checksum_Set() const;
    bool is_checksum_Valid() const;

    QString getRepositoryName() const;
    void setRepositoryName(const QString &repository_name);
    bool is_repository_name_Set() const;
    bool is_repository_name_Valid() const;

    QString getRepositoryUrl() const;
    void setRepositoryUrl(const QString &repository_url);
    bool is_repository_url_Set() const;
    bool is_repository_url_Valid() const;

    QString getSourceUrl() const;
    void setSourceUrl(const QString &source_url);
    bool is_source_url_Set() const;
    bool is_source_url_Valid() const;

    QString getTargetAbi() const;
    void setTargetAbi(const QString &target_abi);
    bool is_target_abi_Set() const;
    bool is_target_abi_Valid() const;

    QString getTimestamp() const;
    void setTimestamp(const QString &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIVersion m_version_number;
    bool m_version_number_isSet;
    bool m_version_number_isValid;

    QString m_changelog;
    bool m_changelog_isSet;
    bool m_changelog_isValid;

    QString m_checksum;
    bool m_checksum_isSet;
    bool m_checksum_isValid;

    QString m_repository_name;
    bool m_repository_name_isSet;
    bool m_repository_name_isValid;

    QString m_repository_url;
    bool m_repository_url_isSet;
    bool m_repository_url_isValid;

    QString m_source_url;
    bool m_source_url_isSet;
    bool m_source_url_isValid;

    QString m_target_abi;
    bool m_target_abi_isSet;
    bool m_target_abi_isValid;

    QString m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVersionInfo)

#endif // OAIVersionInfo_H
