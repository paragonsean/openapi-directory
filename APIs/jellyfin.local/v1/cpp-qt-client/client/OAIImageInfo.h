/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImageInfo.h
 *
 * Class ImageInfo.
 */

#ifndef OAIImageInfo_H
#define OAIImageInfo_H

#include <QJsonObject>

#include "OAIImageType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIImageInfo : public OAIObject {
public:
    OAIImageInfo();
    OAIImageInfo(QString json);
    ~OAIImageInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBlurHash() const;
    void setBlurHash(const QString &blur_hash);
    bool is_blur_hash_Set() const;
    bool is_blur_hash_Valid() const;

    qint32 getHeight() const;
    void setHeight(const qint32 &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    qint32 getImageIndex() const;
    void setImageIndex(const qint32 &image_index);
    bool is_image_index_Set() const;
    bool is_image_index_Valid() const;

    QString getImageTag() const;
    void setImageTag(const QString &image_tag);
    bool is_image_tag_Set() const;
    bool is_image_tag_Valid() const;

    OAIImageType getImageType() const;
    void setImageType(const OAIImageType &image_type);
    bool is_image_type_Set() const;
    bool is_image_type_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    qint64 getSize() const;
    void setSize(const qint64 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    qint32 getWidth() const;
    void setWidth(const qint32 &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_blur_hash;
    bool m_blur_hash_isSet;
    bool m_blur_hash_isValid;

    qint32 m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    qint32 m_image_index;
    bool m_image_index_isSet;
    bool m_image_index_isValid;

    QString m_image_tag;
    bool m_image_tag_isSet;
    bool m_image_tag_isValid;

    OAIImageType m_image_type;
    bool m_image_type_isSet;
    bool m_image_type_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    qint64 m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    qint32 m_width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImageInfo)

#endif // OAIImageInfo_H
