/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProgramAudio.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProgramAudio::OAIProgramAudio(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProgramAudio::OAIProgramAudio() {
    this->initializeModel();
}

OAIProgramAudio::~OAIProgramAudio() {}

void OAIProgramAudio::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIProgramAudio::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIProgramAudio::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Mono", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProgramAudio::MONO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Stereo", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProgramAudio::STEREO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Dolby", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProgramAudio::DOLBY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DolbyDigital", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProgramAudio::DOLBYDIGITAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Thx", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProgramAudio::THX;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Atmos", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProgramAudio::ATMOS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIProgramAudio::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIProgramAudio::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIProgramAudio::MONO:
            val = "Mono";
            break;
        case eOAIProgramAudio::STEREO:
            val = "Stereo";
            break;
        case eOAIProgramAudio::DOLBY:
            val = "Dolby";
            break;
        case eOAIProgramAudio::DOLBYDIGITAL:
            val = "DolbyDigital";
            break;
        case eOAIProgramAudio::THX:
            val = "Thx";
            break;
        case eOAIProgramAudio::ATMOS:
            val = "Atmos";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIProgramAudio::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIProgramAudio::eOAIProgramAudio OAIProgramAudio::getValue() const {
    return m_value;
}

void OAIProgramAudio::setValue(const OAIProgramAudio::eOAIProgramAudio& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIProgramAudio::isSet() const {
    
    return m_value_isSet;
}

bool OAIProgramAudio::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
