/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListingsProviderInfo.h
 *
 * 
 */

#ifndef OAIListingsProviderInfo_H
#define OAIListingsProviderInfo_H

#include <QJsonObject>

#include "OAINameValuePair.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINameValuePair;

class OAIListingsProviderInfo : public OAIObject {
public:
    OAIListingsProviderInfo();
    OAIListingsProviderInfo(QString json);
    ~OAIListingsProviderInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAINameValuePair> getChannelMappings() const;
    void setChannelMappings(const QList<OAINameValuePair> &channel_mappings);
    bool is_channel_mappings_Set() const;
    bool is_channel_mappings_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    bool isEnableAllTuners() const;
    void setEnableAllTuners(const bool &enable_all_tuners);
    bool is_enable_all_tuners_Set() const;
    bool is_enable_all_tuners_Valid() const;

    QList<QString> getEnabledTuners() const;
    void setEnabledTuners(const QList<QString> &enabled_tuners);
    bool is_enabled_tuners_Set() const;
    bool is_enabled_tuners_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<QString> getKidsCategories() const;
    void setKidsCategories(const QList<QString> &kids_categories);
    bool is_kids_categories_Set() const;
    bool is_kids_categories_Valid() const;

    QString getListingsId() const;
    void setListingsId(const QString &listings_id);
    bool is_listings_id_Set() const;
    bool is_listings_id_Valid() const;

    QList<QString> getMovieCategories() const;
    void setMovieCategories(const QList<QString> &movie_categories);
    bool is_movie_categories_Set() const;
    bool is_movie_categories_Valid() const;

    QString getMoviePrefix() const;
    void setMoviePrefix(const QString &movie_prefix);
    bool is_movie_prefix_Set() const;
    bool is_movie_prefix_Valid() const;

    QList<QString> getNewsCategories() const;
    void setNewsCategories(const QList<QString> &news_categories);
    bool is_news_categories_Set() const;
    bool is_news_categories_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QString getPreferredLanguage() const;
    void setPreferredLanguage(const QString &preferred_language);
    bool is_preferred_language_Set() const;
    bool is_preferred_language_Valid() const;

    QList<QString> getSportsCategories() const;
    void setSportsCategories(const QList<QString> &sports_categories);
    bool is_sports_categories_Set() const;
    bool is_sports_categories_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUserAgent() const;
    void setUserAgent(const QString &user_agent);
    bool is_user_agent_Set() const;
    bool is_user_agent_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    QString getZipCode() const;
    void setZipCode(const QString &zip_code);
    bool is_zip_code_Set() const;
    bool is_zip_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAINameValuePair> m_channel_mappings;
    bool m_channel_mappings_isSet;
    bool m_channel_mappings_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    bool m_enable_all_tuners;
    bool m_enable_all_tuners_isSet;
    bool m_enable_all_tuners_isValid;

    QList<QString> m_enabled_tuners;
    bool m_enabled_tuners_isSet;
    bool m_enabled_tuners_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<QString> m_kids_categories;
    bool m_kids_categories_isSet;
    bool m_kids_categories_isValid;

    QString m_listings_id;
    bool m_listings_id_isSet;
    bool m_listings_id_isValid;

    QList<QString> m_movie_categories;
    bool m_movie_categories_isSet;
    bool m_movie_categories_isValid;

    QString m_movie_prefix;
    bool m_movie_prefix_isSet;
    bool m_movie_prefix_isValid;

    QList<QString> m_news_categories;
    bool m_news_categories_isSet;
    bool m_news_categories_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QString m_preferred_language;
    bool m_preferred_language_isSet;
    bool m_preferred_language_isValid;

    QList<QString> m_sports_categories;
    bool m_sports_categories_isSet;
    bool m_sports_categories_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_user_agent;
    bool m_user_agent_isSet;
    bool m_user_agent_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;

    QString m_zip_code;
    bool m_zip_code_isSet;
    bool m_zip_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListingsProviderInfo)

#endif // OAIListingsProviderInfo_H
