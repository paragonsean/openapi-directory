/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChannelFeatures.h
 *
 * 
 */

#ifndef OAIChannelFeatures_H
#define OAIChannelFeatures_H

#include <QJsonObject>

#include "OAIChannelItemSortField.h"
#include "OAIChannelMediaContentType.h"
#include "OAIChannelMediaType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIChannelFeatures : public OAIObject {
public:
    OAIChannelFeatures();
    OAIChannelFeatures(QString json);
    ~OAIChannelFeatures() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAutoRefreshLevels() const;
    void setAutoRefreshLevels(const qint32 &auto_refresh_levels);
    bool is_auto_refresh_levels_Set() const;
    bool is_auto_refresh_levels_Valid() const;

    bool isCanFilter() const;
    void setCanFilter(const bool &can_filter);
    bool is_can_filter_Set() const;
    bool is_can_filter_Valid() const;

    bool isCanSearch() const;
    void setCanSearch(const bool &can_search);
    bool is_can_search_Set() const;
    bool is_can_search_Valid() const;

    QList<OAIChannelMediaContentType> getContentTypes() const;
    void setContentTypes(const QList<OAIChannelMediaContentType> &content_types);
    bool is_content_types_Set() const;
    bool is_content_types_Valid() const;

    QList<OAIChannelItemSortField> getDefaultSortFields() const;
    void setDefaultSortFields(const QList<OAIChannelItemSortField> &default_sort_fields);
    bool is_default_sort_fields_Set() const;
    bool is_default_sort_fields_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getMaxPageSize() const;
    void setMaxPageSize(const qint32 &max_page_size);
    bool is_max_page_size_Set() const;
    bool is_max_page_size_Valid() const;

    QList<OAIChannelMediaType> getMediaTypes() const;
    void setMediaTypes(const QList<OAIChannelMediaType> &media_types);
    bool is_media_types_Set() const;
    bool is_media_types_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isSupportsContentDownloading() const;
    void setSupportsContentDownloading(const bool &supports_content_downloading);
    bool is_supports_content_downloading_Set() const;
    bool is_supports_content_downloading_Valid() const;

    bool isSupportsLatestMedia() const;
    void setSupportsLatestMedia(const bool &supports_latest_media);
    bool is_supports_latest_media_Set() const;
    bool is_supports_latest_media_Valid() const;

    bool isSupportsSortOrderToggle() const;
    void setSupportsSortOrderToggle(const bool &supports_sort_order_toggle);
    bool is_supports_sort_order_toggle_Set() const;
    bool is_supports_sort_order_toggle_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_auto_refresh_levels;
    bool m_auto_refresh_levels_isSet;
    bool m_auto_refresh_levels_isValid;

    bool m_can_filter;
    bool m_can_filter_isSet;
    bool m_can_filter_isValid;

    bool m_can_search;
    bool m_can_search_isSet;
    bool m_can_search_isValid;

    QList<OAIChannelMediaContentType> m_content_types;
    bool m_content_types_isSet;
    bool m_content_types_isValid;

    QList<OAIChannelItemSortField> m_default_sort_fields;
    bool m_default_sort_fields_isSet;
    bool m_default_sort_fields_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_max_page_size;
    bool m_max_page_size_isSet;
    bool m_max_page_size_isValid;

    QList<OAIChannelMediaType> m_media_types;
    bool m_media_types_isSet;
    bool m_media_types_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_supports_content_downloading;
    bool m_supports_content_downloading_isSet;
    bool m_supports_content_downloading_isValid;

    bool m_supports_latest_media;
    bool m_supports_latest_media_isSet;
    bool m_supports_latest_media_isValid;

    bool m_supports_sort_order_toggle;
    bool m_supports_sort_order_toggle_isSet;
    bool m_supports_sort_order_toggle_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChannelFeatures)

#endif // OAIChannelFeatures_H
