/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPluginInfo.h
 *
 * This is a serializable stub class that is used by the api to provide information about installed plugins.
 */

#ifndef OAIPluginInfo_H
#define OAIPluginInfo_H

#include <QJsonObject>

#include "OAIPluginStatus.h"
#include "OAIVersion.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVersion;

class OAIPluginInfo : public OAIObject {
public:
    OAIPluginInfo();
    OAIPluginInfo(QString json);
    ~OAIPluginInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCanUninstall() const;
    void setCanUninstall(const bool &can_uninstall);
    bool is_can_uninstall_Set() const;
    bool is_can_uninstall_Valid() const;

    QString getConfigurationFileName() const;
    void setConfigurationFileName(const QString &configuration_file_name);
    bool is_configuration_file_name_Set() const;
    bool is_configuration_file_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isHasImage() const;
    void setHasImage(const bool &has_image);
    bool is_has_image_Set() const;
    bool is_has_image_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIPluginStatus getStatus() const;
    void setStatus(const OAIPluginStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIVersion getVersion() const;
    void setVersion(const OAIVersion &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_can_uninstall;
    bool m_can_uninstall_isSet;
    bool m_can_uninstall_isValid;

    QString m_configuration_file_name;
    bool m_configuration_file_name_isSet;
    bool m_configuration_file_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_has_image;
    bool m_has_image_isSet;
    bool m_has_image_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIPluginStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIVersion m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPluginInfo)

#endif // OAIPluginInfo_H
