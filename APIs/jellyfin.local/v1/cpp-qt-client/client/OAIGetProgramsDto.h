/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetProgramsDto.h
 *
 * Get programs dto.
 */

#ifndef OAIGetProgramsDto_H
#define OAIGetProgramsDto_H

#include <QJsonObject>

#include "OAIImageType.h"
#include "OAIItemFields.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetProgramsDto : public OAIObject {
public:
    OAIGetProgramsDto();
    OAIGetProgramsDto(QString json);
    ~OAIGetProgramsDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getChannelIds() const;
    void setChannelIds(const QList<QString> &channel_ids);
    bool is_channel_ids_Set() const;
    bool is_channel_ids_Valid() const;

    QList<OAIImageType> getEnableImageTypes() const;
    void setEnableImageTypes(const QList<OAIImageType> &enable_image_types);
    bool is_enable_image_types_Set() const;
    bool is_enable_image_types_Valid() const;

    bool isEnableImages() const;
    void setEnableImages(const bool &enable_images);
    bool is_enable_images_Set() const;
    bool is_enable_images_Valid() const;

    bool isEnableTotalRecordCount() const;
    void setEnableTotalRecordCount(const bool &enable_total_record_count);
    bool is_enable_total_record_count_Set() const;
    bool is_enable_total_record_count_Valid() const;

    bool isEnableUserData() const;
    void setEnableUserData(const bool &enable_user_data);
    bool is_enable_user_data_Set() const;
    bool is_enable_user_data_Valid() const;

    QList<OAIItemFields> getFields() const;
    void setFields(const QList<OAIItemFields> &fields);
    bool is_fields_Set() const;
    bool is_fields_Valid() const;

    QList<QString> getGenreIds() const;
    void setGenreIds(const QList<QString> &genre_ids);
    bool is_genre_ids_Set() const;
    bool is_genre_ids_Valid() const;

    QList<QString> getGenres() const;
    void setGenres(const QList<QString> &genres);
    bool is_genres_Set() const;
    bool is_genres_Valid() const;

    bool isHasAired() const;
    void setHasAired(const bool &has_aired);
    bool is_has_aired_Set() const;
    bool is_has_aired_Valid() const;

    qint32 getImageTypeLimit() const;
    void setImageTypeLimit(const qint32 &image_type_limit);
    bool is_image_type_limit_Set() const;
    bool is_image_type_limit_Valid() const;

    bool isIsAiring() const;
    void setIsAiring(const bool &is_airing);
    bool is_is_airing_Set() const;
    bool is_is_airing_Valid() const;

    bool isIsKids() const;
    void setIsKids(const bool &is_kids);
    bool is_is_kids_Set() const;
    bool is_is_kids_Valid() const;

    bool isIsMovie() const;
    void setIsMovie(const bool &is_movie);
    bool is_is_movie_Set() const;
    bool is_is_movie_Valid() const;

    bool isIsNews() const;
    void setIsNews(const bool &is_news);
    bool is_is_news_Set() const;
    bool is_is_news_Valid() const;

    bool isIsSeries() const;
    void setIsSeries(const bool &is_series);
    bool is_is_series_Set() const;
    bool is_is_series_Valid() const;

    bool isIsSports() const;
    void setIsSports(const bool &is_sports);
    bool is_is_sports_Set() const;
    bool is_is_sports_Valid() const;

    QString getLibrarySeriesId() const;
    void setLibrarySeriesId(const QString &library_series_id);
    bool is_library_series_id_Set() const;
    bool is_library_series_id_Valid() const;

    qint32 getLimit() const;
    void setLimit(const qint32 &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    QDateTime getMaxEndDate() const;
    void setMaxEndDate(const QDateTime &max_end_date);
    bool is_max_end_date_Set() const;
    bool is_max_end_date_Valid() const;

    QDateTime getMaxStartDate() const;
    void setMaxStartDate(const QDateTime &max_start_date);
    bool is_max_start_date_Set() const;
    bool is_max_start_date_Valid() const;

    QDateTime getMinEndDate() const;
    void setMinEndDate(const QDateTime &min_end_date);
    bool is_min_end_date_Set() const;
    bool is_min_end_date_Valid() const;

    QDateTime getMinStartDate() const;
    void setMinStartDate(const QDateTime &min_start_date);
    bool is_min_start_date_Set() const;
    bool is_min_start_date_Valid() const;

    QString getSeriesTimerId() const;
    void setSeriesTimerId(const QString &series_timer_id);
    bool is_series_timer_id_Set() const;
    bool is_series_timer_id_Valid() const;

    QString getSortBy() const;
    void setSortBy(const QString &sort_by);
    bool is_sort_by_Set() const;
    bool is_sort_by_Valid() const;

    QString getSortOrder() const;
    void setSortOrder(const QString &sort_order);
    bool is_sort_order_Set() const;
    bool is_sort_order_Valid() const;

    qint32 getStartIndex() const;
    void setStartIndex(const qint32 &start_index);
    bool is_start_index_Set() const;
    bool is_start_index_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_channel_ids;
    bool m_channel_ids_isSet;
    bool m_channel_ids_isValid;

    QList<OAIImageType> m_enable_image_types;
    bool m_enable_image_types_isSet;
    bool m_enable_image_types_isValid;

    bool m_enable_images;
    bool m_enable_images_isSet;
    bool m_enable_images_isValid;

    bool m_enable_total_record_count;
    bool m_enable_total_record_count_isSet;
    bool m_enable_total_record_count_isValid;

    bool m_enable_user_data;
    bool m_enable_user_data_isSet;
    bool m_enable_user_data_isValid;

    QList<OAIItemFields> m_fields;
    bool m_fields_isSet;
    bool m_fields_isValid;

    QList<QString> m_genre_ids;
    bool m_genre_ids_isSet;
    bool m_genre_ids_isValid;

    QList<QString> m_genres;
    bool m_genres_isSet;
    bool m_genres_isValid;

    bool m_has_aired;
    bool m_has_aired_isSet;
    bool m_has_aired_isValid;

    qint32 m_image_type_limit;
    bool m_image_type_limit_isSet;
    bool m_image_type_limit_isValid;

    bool m_is_airing;
    bool m_is_airing_isSet;
    bool m_is_airing_isValid;

    bool m_is_kids;
    bool m_is_kids_isSet;
    bool m_is_kids_isValid;

    bool m_is_movie;
    bool m_is_movie_isSet;
    bool m_is_movie_isValid;

    bool m_is_news;
    bool m_is_news_isSet;
    bool m_is_news_isValid;

    bool m_is_series;
    bool m_is_series_isSet;
    bool m_is_series_isValid;

    bool m_is_sports;
    bool m_is_sports_isSet;
    bool m_is_sports_isValid;

    QString m_library_series_id;
    bool m_library_series_id_isSet;
    bool m_library_series_id_isValid;

    qint32 m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;

    QDateTime m_max_end_date;
    bool m_max_end_date_isSet;
    bool m_max_end_date_isValid;

    QDateTime m_max_start_date;
    bool m_max_start_date_isSet;
    bool m_max_start_date_isValid;

    QDateTime m_min_end_date;
    bool m_min_end_date_isSet;
    bool m_min_end_date_isValid;

    QDateTime m_min_start_date;
    bool m_min_start_date_isSet;
    bool m_min_start_date_isValid;

    QString m_series_timer_id;
    bool m_series_timer_id_isSet;
    bool m_series_timer_id_isValid;

    QString m_sort_by;
    bool m_sort_by_isSet;
    bool m_sort_by_isValid;

    QString m_sort_order;
    bool m_sort_order_isSet;
    bool m_sort_order_isValid;

    qint32 m_start_index;
    bool m_start_index_isSet;
    bool m_start_index_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetProgramsDto)

#endif // OAIGetProgramsDto_H
