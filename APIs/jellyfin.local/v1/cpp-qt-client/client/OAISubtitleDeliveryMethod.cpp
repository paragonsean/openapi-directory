/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubtitleDeliveryMethod.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubtitleDeliveryMethod::OAISubtitleDeliveryMethod(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubtitleDeliveryMethod::OAISubtitleDeliveryMethod() {
    this->initializeModel();
}

OAISubtitleDeliveryMethod::~OAISubtitleDeliveryMethod() {}

void OAISubtitleDeliveryMethod::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISubtitleDeliveryMethod::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISubtitleDeliveryMethod::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Encode", Qt::CaseInsensitive) == 0) {
        m_value = eOAISubtitleDeliveryMethod::ENCODE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Embed", Qt::CaseInsensitive) == 0) {
        m_value = eOAISubtitleDeliveryMethod::EMBED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("External", Qt::CaseInsensitive) == 0) {
        m_value = eOAISubtitleDeliveryMethod::EXTERNAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Hls", Qt::CaseInsensitive) == 0) {
        m_value = eOAISubtitleDeliveryMethod::HLS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISubtitleDeliveryMethod::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISubtitleDeliveryMethod::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISubtitleDeliveryMethod::ENCODE:
            val = "Encode";
            break;
        case eOAISubtitleDeliveryMethod::EMBED:
            val = "Embed";
            break;
        case eOAISubtitleDeliveryMethod::EXTERNAL:
            val = "External";
            break;
        case eOAISubtitleDeliveryMethod::HLS:
            val = "Hls";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISubtitleDeliveryMethod::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISubtitleDeliveryMethod::eOAISubtitleDeliveryMethod OAISubtitleDeliveryMethod::getValue() const {
    return m_value;
}

void OAISubtitleDeliveryMethod::setValue(const OAISubtitleDeliveryMethod::eOAISubtitleDeliveryMethod& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISubtitleDeliveryMethod::isSet() const {
    
    return m_value_isSet;
}

bool OAISubtitleDeliveryMethod::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
