/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContainerProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContainerProfile::OAIContainerProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContainerProfile::OAIContainerProfile() {
    this->initializeModel();
}

OAIContainerProfile::~OAIContainerProfile() {}

void OAIContainerProfile::initializeModel() {

    m_conditions_isSet = false;
    m_conditions_isValid = false;

    m_container_isSet = false;
    m_container_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIContainerProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContainerProfile::fromJsonObject(QJsonObject json) {

    m_conditions_isValid = ::OpenAPI::fromJsonValue(m_conditions, json[QString("Conditions")]);
    m_conditions_isSet = !json[QString("Conditions")].isNull() && m_conditions_isValid;

    m_container_isValid = ::OpenAPI::fromJsonValue(m_container, json[QString("Container")]);
    m_container_isSet = !json[QString("Container")].isNull() && m_container_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("Type")]);
    m_type_isSet = !json[QString("Type")].isNull() && m_type_isValid;
}

QString OAIContainerProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContainerProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_conditions.size() > 0) {
        obj.insert(QString("Conditions"), ::OpenAPI::toJsonValue(m_conditions));
    }
    if (m_container_isSet) {
        obj.insert(QString("Container"), ::OpenAPI::toJsonValue(m_container));
    }
    if (m_type.isSet()) {
        obj.insert(QString("Type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QList<OAIProfileCondition> OAIContainerProfile::getConditions() const {
    return m_conditions;
}
void OAIContainerProfile::setConditions(const QList<OAIProfileCondition> &conditions) {
    m_conditions = conditions;
    m_conditions_isSet = true;
}

bool OAIContainerProfile::is_conditions_Set() const{
    return m_conditions_isSet;
}

bool OAIContainerProfile::is_conditions_Valid() const{
    return m_conditions_isValid;
}

QString OAIContainerProfile::getContainer() const {
    return m_container;
}
void OAIContainerProfile::setContainer(const QString &container) {
    m_container = container;
    m_container_isSet = true;
}

bool OAIContainerProfile::is_container_Set() const{
    return m_container_isSet;
}

bool OAIContainerProfile::is_container_Valid() const{
    return m_container_isValid;
}

OAIDlnaProfileType OAIContainerProfile::getType() const {
    return m_type;
}
void OAIContainerProfile::setType(const OAIDlnaProfileType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIContainerProfile::is_type_Set() const{
    return m_type_isSet;
}

bool OAIContainerProfile::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIContainerProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_conditions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_container_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContainerProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
