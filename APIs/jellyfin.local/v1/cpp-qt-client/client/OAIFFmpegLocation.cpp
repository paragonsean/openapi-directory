/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFFmpegLocation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFFmpegLocation::OAIFFmpegLocation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFFmpegLocation::OAIFFmpegLocation() {
    this->initializeModel();
}

OAIFFmpegLocation::~OAIFFmpegLocation() {}

void OAIFFmpegLocation::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIFFmpegLocation::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIFFmpegLocation::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NotFound", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFFmpegLocation::NOTFOUND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SetByArgument", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFFmpegLocation::SETBYARGUMENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Custom", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFFmpegLocation::CUSTOM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("System", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFFmpegLocation::SYSTEM;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIFFmpegLocation::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIFFmpegLocation::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIFFmpegLocation::NOTFOUND:
            val = "NotFound";
            break;
        case eOAIFFmpegLocation::SETBYARGUMENT:
            val = "SetByArgument";
            break;
        case eOAIFFmpegLocation::CUSTOM:
            val = "Custom";
            break;
        case eOAIFFmpegLocation::SYSTEM:
            val = "System";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIFFmpegLocation::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIFFmpegLocation::eOAIFFmpegLocation OAIFFmpegLocation::getValue() const {
    return m_value;
}

void OAIFFmpegLocation::setValue(const OAIFFmpegLocation::eOAIFFmpegLocation& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIFFmpegLocation::isSet() const {
    
    return m_value_isSet;
}

bool OAIFFmpegLocation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
