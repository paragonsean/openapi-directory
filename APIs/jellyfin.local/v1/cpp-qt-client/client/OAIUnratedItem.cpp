/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUnratedItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUnratedItem::OAIUnratedItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUnratedItem::OAIUnratedItem() {
    this->initializeModel();
}

OAIUnratedItem::~OAIUnratedItem() {}

void OAIUnratedItem::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIUnratedItem::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIUnratedItem::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Movie", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUnratedItem::MOVIE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Trailer", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUnratedItem::TRAILER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Series", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUnratedItem::SERIES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Music", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUnratedItem::MUSIC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Book", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUnratedItem::BOOK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LiveTvChannel", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUnratedItem::LIVETVCHANNEL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LiveTvProgram", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUnratedItem::LIVETVPROGRAM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ChannelContent", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUnratedItem::CHANNELCONTENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Other", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUnratedItem::OTHER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIUnratedItem::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIUnratedItem::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIUnratedItem::MOVIE:
            val = "Movie";
            break;
        case eOAIUnratedItem::TRAILER:
            val = "Trailer";
            break;
        case eOAIUnratedItem::SERIES:
            val = "Series";
            break;
        case eOAIUnratedItem::MUSIC:
            val = "Music";
            break;
        case eOAIUnratedItem::BOOK:
            val = "Book";
            break;
        case eOAIUnratedItem::LIVETVCHANNEL:
            val = "LiveTvChannel";
            break;
        case eOAIUnratedItem::LIVETVPROGRAM:
            val = "LiveTvProgram";
            break;
        case eOAIUnratedItem::CHANNELCONTENT:
            val = "ChannelContent";
            break;
        case eOAIUnratedItem::OTHER:
            val = "Other";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIUnratedItem::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIUnratedItem::eOAIUnratedItem OAIUnratedItem::getValue() const {
    return m_value;
}

void OAIUnratedItem::setValue(const OAIUnratedItem::eOAIUnratedItem& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIUnratedItem::isSet() const {
    
    return m_value_isSet;
}

bool OAIUnratedItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
