/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIItemCounts.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIItemCounts::OAIItemCounts(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIItemCounts::OAIItemCounts() {
    this->initializeModel();
}

OAIItemCounts::~OAIItemCounts() {}

void OAIItemCounts::initializeModel() {

    m_album_count_isSet = false;
    m_album_count_isValid = false;

    m_artist_count_isSet = false;
    m_artist_count_isValid = false;

    m_book_count_isSet = false;
    m_book_count_isValid = false;

    m_box_set_count_isSet = false;
    m_box_set_count_isValid = false;

    m_episode_count_isSet = false;
    m_episode_count_isValid = false;

    m_item_count_isSet = false;
    m_item_count_isValid = false;

    m_movie_count_isSet = false;
    m_movie_count_isValid = false;

    m_music_video_count_isSet = false;
    m_music_video_count_isValid = false;

    m_program_count_isSet = false;
    m_program_count_isValid = false;

    m_series_count_isSet = false;
    m_series_count_isValid = false;

    m_song_count_isSet = false;
    m_song_count_isValid = false;

    m_trailer_count_isSet = false;
    m_trailer_count_isValid = false;
}

void OAIItemCounts::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIItemCounts::fromJsonObject(QJsonObject json) {

    m_album_count_isValid = ::OpenAPI::fromJsonValue(m_album_count, json[QString("AlbumCount")]);
    m_album_count_isSet = !json[QString("AlbumCount")].isNull() && m_album_count_isValid;

    m_artist_count_isValid = ::OpenAPI::fromJsonValue(m_artist_count, json[QString("ArtistCount")]);
    m_artist_count_isSet = !json[QString("ArtistCount")].isNull() && m_artist_count_isValid;

    m_book_count_isValid = ::OpenAPI::fromJsonValue(m_book_count, json[QString("BookCount")]);
    m_book_count_isSet = !json[QString("BookCount")].isNull() && m_book_count_isValid;

    m_box_set_count_isValid = ::OpenAPI::fromJsonValue(m_box_set_count, json[QString("BoxSetCount")]);
    m_box_set_count_isSet = !json[QString("BoxSetCount")].isNull() && m_box_set_count_isValid;

    m_episode_count_isValid = ::OpenAPI::fromJsonValue(m_episode_count, json[QString("EpisodeCount")]);
    m_episode_count_isSet = !json[QString("EpisodeCount")].isNull() && m_episode_count_isValid;

    m_item_count_isValid = ::OpenAPI::fromJsonValue(m_item_count, json[QString("ItemCount")]);
    m_item_count_isSet = !json[QString("ItemCount")].isNull() && m_item_count_isValid;

    m_movie_count_isValid = ::OpenAPI::fromJsonValue(m_movie_count, json[QString("MovieCount")]);
    m_movie_count_isSet = !json[QString("MovieCount")].isNull() && m_movie_count_isValid;

    m_music_video_count_isValid = ::OpenAPI::fromJsonValue(m_music_video_count, json[QString("MusicVideoCount")]);
    m_music_video_count_isSet = !json[QString("MusicVideoCount")].isNull() && m_music_video_count_isValid;

    m_program_count_isValid = ::OpenAPI::fromJsonValue(m_program_count, json[QString("ProgramCount")]);
    m_program_count_isSet = !json[QString("ProgramCount")].isNull() && m_program_count_isValid;

    m_series_count_isValid = ::OpenAPI::fromJsonValue(m_series_count, json[QString("SeriesCount")]);
    m_series_count_isSet = !json[QString("SeriesCount")].isNull() && m_series_count_isValid;

    m_song_count_isValid = ::OpenAPI::fromJsonValue(m_song_count, json[QString("SongCount")]);
    m_song_count_isSet = !json[QString("SongCount")].isNull() && m_song_count_isValid;

    m_trailer_count_isValid = ::OpenAPI::fromJsonValue(m_trailer_count, json[QString("TrailerCount")]);
    m_trailer_count_isSet = !json[QString("TrailerCount")].isNull() && m_trailer_count_isValid;
}

QString OAIItemCounts::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIItemCounts::asJsonObject() const {
    QJsonObject obj;
    if (m_album_count_isSet) {
        obj.insert(QString("AlbumCount"), ::OpenAPI::toJsonValue(m_album_count));
    }
    if (m_artist_count_isSet) {
        obj.insert(QString("ArtistCount"), ::OpenAPI::toJsonValue(m_artist_count));
    }
    if (m_book_count_isSet) {
        obj.insert(QString("BookCount"), ::OpenAPI::toJsonValue(m_book_count));
    }
    if (m_box_set_count_isSet) {
        obj.insert(QString("BoxSetCount"), ::OpenAPI::toJsonValue(m_box_set_count));
    }
    if (m_episode_count_isSet) {
        obj.insert(QString("EpisodeCount"), ::OpenAPI::toJsonValue(m_episode_count));
    }
    if (m_item_count_isSet) {
        obj.insert(QString("ItemCount"), ::OpenAPI::toJsonValue(m_item_count));
    }
    if (m_movie_count_isSet) {
        obj.insert(QString("MovieCount"), ::OpenAPI::toJsonValue(m_movie_count));
    }
    if (m_music_video_count_isSet) {
        obj.insert(QString("MusicVideoCount"), ::OpenAPI::toJsonValue(m_music_video_count));
    }
    if (m_program_count_isSet) {
        obj.insert(QString("ProgramCount"), ::OpenAPI::toJsonValue(m_program_count));
    }
    if (m_series_count_isSet) {
        obj.insert(QString("SeriesCount"), ::OpenAPI::toJsonValue(m_series_count));
    }
    if (m_song_count_isSet) {
        obj.insert(QString("SongCount"), ::OpenAPI::toJsonValue(m_song_count));
    }
    if (m_trailer_count_isSet) {
        obj.insert(QString("TrailerCount"), ::OpenAPI::toJsonValue(m_trailer_count));
    }
    return obj;
}

qint32 OAIItemCounts::getAlbumCount() const {
    return m_album_count;
}
void OAIItemCounts::setAlbumCount(const qint32 &album_count) {
    m_album_count = album_count;
    m_album_count_isSet = true;
}

bool OAIItemCounts::is_album_count_Set() const{
    return m_album_count_isSet;
}

bool OAIItemCounts::is_album_count_Valid() const{
    return m_album_count_isValid;
}

qint32 OAIItemCounts::getArtistCount() const {
    return m_artist_count;
}
void OAIItemCounts::setArtistCount(const qint32 &artist_count) {
    m_artist_count = artist_count;
    m_artist_count_isSet = true;
}

bool OAIItemCounts::is_artist_count_Set() const{
    return m_artist_count_isSet;
}

bool OAIItemCounts::is_artist_count_Valid() const{
    return m_artist_count_isValid;
}

qint32 OAIItemCounts::getBookCount() const {
    return m_book_count;
}
void OAIItemCounts::setBookCount(const qint32 &book_count) {
    m_book_count = book_count;
    m_book_count_isSet = true;
}

bool OAIItemCounts::is_book_count_Set() const{
    return m_book_count_isSet;
}

bool OAIItemCounts::is_book_count_Valid() const{
    return m_book_count_isValid;
}

qint32 OAIItemCounts::getBoxSetCount() const {
    return m_box_set_count;
}
void OAIItemCounts::setBoxSetCount(const qint32 &box_set_count) {
    m_box_set_count = box_set_count;
    m_box_set_count_isSet = true;
}

bool OAIItemCounts::is_box_set_count_Set() const{
    return m_box_set_count_isSet;
}

bool OAIItemCounts::is_box_set_count_Valid() const{
    return m_box_set_count_isValid;
}

qint32 OAIItemCounts::getEpisodeCount() const {
    return m_episode_count;
}
void OAIItemCounts::setEpisodeCount(const qint32 &episode_count) {
    m_episode_count = episode_count;
    m_episode_count_isSet = true;
}

bool OAIItemCounts::is_episode_count_Set() const{
    return m_episode_count_isSet;
}

bool OAIItemCounts::is_episode_count_Valid() const{
    return m_episode_count_isValid;
}

qint32 OAIItemCounts::getItemCount() const {
    return m_item_count;
}
void OAIItemCounts::setItemCount(const qint32 &item_count) {
    m_item_count = item_count;
    m_item_count_isSet = true;
}

bool OAIItemCounts::is_item_count_Set() const{
    return m_item_count_isSet;
}

bool OAIItemCounts::is_item_count_Valid() const{
    return m_item_count_isValid;
}

qint32 OAIItemCounts::getMovieCount() const {
    return m_movie_count;
}
void OAIItemCounts::setMovieCount(const qint32 &movie_count) {
    m_movie_count = movie_count;
    m_movie_count_isSet = true;
}

bool OAIItemCounts::is_movie_count_Set() const{
    return m_movie_count_isSet;
}

bool OAIItemCounts::is_movie_count_Valid() const{
    return m_movie_count_isValid;
}

qint32 OAIItemCounts::getMusicVideoCount() const {
    return m_music_video_count;
}
void OAIItemCounts::setMusicVideoCount(const qint32 &music_video_count) {
    m_music_video_count = music_video_count;
    m_music_video_count_isSet = true;
}

bool OAIItemCounts::is_music_video_count_Set() const{
    return m_music_video_count_isSet;
}

bool OAIItemCounts::is_music_video_count_Valid() const{
    return m_music_video_count_isValid;
}

qint32 OAIItemCounts::getProgramCount() const {
    return m_program_count;
}
void OAIItemCounts::setProgramCount(const qint32 &program_count) {
    m_program_count = program_count;
    m_program_count_isSet = true;
}

bool OAIItemCounts::is_program_count_Set() const{
    return m_program_count_isSet;
}

bool OAIItemCounts::is_program_count_Valid() const{
    return m_program_count_isValid;
}

qint32 OAIItemCounts::getSeriesCount() const {
    return m_series_count;
}
void OAIItemCounts::setSeriesCount(const qint32 &series_count) {
    m_series_count = series_count;
    m_series_count_isSet = true;
}

bool OAIItemCounts::is_series_count_Set() const{
    return m_series_count_isSet;
}

bool OAIItemCounts::is_series_count_Valid() const{
    return m_series_count_isValid;
}

qint32 OAIItemCounts::getSongCount() const {
    return m_song_count;
}
void OAIItemCounts::setSongCount(const qint32 &song_count) {
    m_song_count = song_count;
    m_song_count_isSet = true;
}

bool OAIItemCounts::is_song_count_Set() const{
    return m_song_count_isSet;
}

bool OAIItemCounts::is_song_count_Valid() const{
    return m_song_count_isValid;
}

qint32 OAIItemCounts::getTrailerCount() const {
    return m_trailer_count;
}
void OAIItemCounts::setTrailerCount(const qint32 &trailer_count) {
    m_trailer_count = trailer_count;
    m_trailer_count_isSet = true;
}

bool OAIItemCounts::is_trailer_count_Set() const{
    return m_trailer_count_isSet;
}

bool OAIItemCounts::is_trailer_count_Valid() const{
    return m_trailer_count_isValid;
}

bool OAIItemCounts::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_album_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_artist_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_book_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_box_set_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_episode_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_movie_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_music_video_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_program_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_series_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_song_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trailer_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIItemCounts::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
