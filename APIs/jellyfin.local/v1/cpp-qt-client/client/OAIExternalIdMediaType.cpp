/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExternalIdMediaType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExternalIdMediaType::OAIExternalIdMediaType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExternalIdMediaType::OAIExternalIdMediaType() {
    this->initializeModel();
}

OAIExternalIdMediaType::~OAIExternalIdMediaType() {}

void OAIExternalIdMediaType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIExternalIdMediaType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIExternalIdMediaType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Album", Qt::CaseInsensitive) == 0) {
        m_value = eOAIExternalIdMediaType::ALBUM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AlbumArtist", Qt::CaseInsensitive) == 0) {
        m_value = eOAIExternalIdMediaType::ALBUMARTIST;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Artist", Qt::CaseInsensitive) == 0) {
        m_value = eOAIExternalIdMediaType::ARTIST;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BoxSet", Qt::CaseInsensitive) == 0) {
        m_value = eOAIExternalIdMediaType::BOXSET;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Episode", Qt::CaseInsensitive) == 0) {
        m_value = eOAIExternalIdMediaType::EPISODE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Movie", Qt::CaseInsensitive) == 0) {
        m_value = eOAIExternalIdMediaType::MOVIE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("OtherArtist", Qt::CaseInsensitive) == 0) {
        m_value = eOAIExternalIdMediaType::OTHERARTIST;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Person", Qt::CaseInsensitive) == 0) {
        m_value = eOAIExternalIdMediaType::PERSON;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ReleaseGroup", Qt::CaseInsensitive) == 0) {
        m_value = eOAIExternalIdMediaType::RELEASEGROUP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Season", Qt::CaseInsensitive) == 0) {
        m_value = eOAIExternalIdMediaType::SEASON;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Series", Qt::CaseInsensitive) == 0) {
        m_value = eOAIExternalIdMediaType::SERIES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Track", Qt::CaseInsensitive) == 0) {
        m_value = eOAIExternalIdMediaType::TRACK;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIExternalIdMediaType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIExternalIdMediaType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIExternalIdMediaType::ALBUM:
            val = "Album";
            break;
        case eOAIExternalIdMediaType::ALBUMARTIST:
            val = "AlbumArtist";
            break;
        case eOAIExternalIdMediaType::ARTIST:
            val = "Artist";
            break;
        case eOAIExternalIdMediaType::BOXSET:
            val = "BoxSet";
            break;
        case eOAIExternalIdMediaType::EPISODE:
            val = "Episode";
            break;
        case eOAIExternalIdMediaType::MOVIE:
            val = "Movie";
            break;
        case eOAIExternalIdMediaType::OTHERARTIST:
            val = "OtherArtist";
            break;
        case eOAIExternalIdMediaType::PERSON:
            val = "Person";
            break;
        case eOAIExternalIdMediaType::RELEASEGROUP:
            val = "ReleaseGroup";
            break;
        case eOAIExternalIdMediaType::SEASON:
            val = "Season";
            break;
        case eOAIExternalIdMediaType::SERIES:
            val = "Series";
            break;
        case eOAIExternalIdMediaType::TRACK:
            val = "Track";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIExternalIdMediaType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIExternalIdMediaType::eOAIExternalIdMediaType OAIExternalIdMediaType::getValue() const {
    return m_value;
}

void OAIExternalIdMediaType::setValue(const OAIExternalIdMediaType::eOAIExternalIdMediaType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIExternalIdMediaType::isSet() const {
    
    return m_value_isSet;
}

bool OAIExternalIdMediaType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
