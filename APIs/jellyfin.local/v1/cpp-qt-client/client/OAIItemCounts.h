/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItemCounts.h
 *
 * Class LibrarySummary.
 */

#ifndef OAIItemCounts_H
#define OAIItemCounts_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIItemCounts : public OAIObject {
public:
    OAIItemCounts();
    OAIItemCounts(QString json);
    ~OAIItemCounts() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAlbumCount() const;
    void setAlbumCount(const qint32 &album_count);
    bool is_album_count_Set() const;
    bool is_album_count_Valid() const;

    qint32 getArtistCount() const;
    void setArtistCount(const qint32 &artist_count);
    bool is_artist_count_Set() const;
    bool is_artist_count_Valid() const;

    qint32 getBookCount() const;
    void setBookCount(const qint32 &book_count);
    bool is_book_count_Set() const;
    bool is_book_count_Valid() const;

    qint32 getBoxSetCount() const;
    void setBoxSetCount(const qint32 &box_set_count);
    bool is_box_set_count_Set() const;
    bool is_box_set_count_Valid() const;

    qint32 getEpisodeCount() const;
    void setEpisodeCount(const qint32 &episode_count);
    bool is_episode_count_Set() const;
    bool is_episode_count_Valid() const;

    qint32 getItemCount() const;
    void setItemCount(const qint32 &item_count);
    bool is_item_count_Set() const;
    bool is_item_count_Valid() const;

    qint32 getMovieCount() const;
    void setMovieCount(const qint32 &movie_count);
    bool is_movie_count_Set() const;
    bool is_movie_count_Valid() const;

    qint32 getMusicVideoCount() const;
    void setMusicVideoCount(const qint32 &music_video_count);
    bool is_music_video_count_Set() const;
    bool is_music_video_count_Valid() const;

    qint32 getProgramCount() const;
    void setProgramCount(const qint32 &program_count);
    bool is_program_count_Set() const;
    bool is_program_count_Valid() const;

    qint32 getSeriesCount() const;
    void setSeriesCount(const qint32 &series_count);
    bool is_series_count_Set() const;
    bool is_series_count_Valid() const;

    qint32 getSongCount() const;
    void setSongCount(const qint32 &song_count);
    bool is_song_count_Set() const;
    bool is_song_count_Valid() const;

    qint32 getTrailerCount() const;
    void setTrailerCount(const qint32 &trailer_count);
    bool is_trailer_count_Set() const;
    bool is_trailer_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_album_count;
    bool m_album_count_isSet;
    bool m_album_count_isValid;

    qint32 m_artist_count;
    bool m_artist_count_isSet;
    bool m_artist_count_isValid;

    qint32 m_book_count;
    bool m_book_count_isSet;
    bool m_book_count_isValid;

    qint32 m_box_set_count;
    bool m_box_set_count_isSet;
    bool m_box_set_count_isValid;

    qint32 m_episode_count;
    bool m_episode_count_isSet;
    bool m_episode_count_isValid;

    qint32 m_item_count;
    bool m_item_count_isSet;
    bool m_item_count_isValid;

    qint32 m_movie_count;
    bool m_movie_count_isSet;
    bool m_movie_count_isValid;

    qint32 m_music_video_count;
    bool m_music_video_count_isSet;
    bool m_music_video_count_isValid;

    qint32 m_program_count;
    bool m_program_count_isSet;
    bool m_program_count_isValid;

    qint32 m_series_count;
    bool m_series_count_isSet;
    bool m_series_count_isValid;

    qint32 m_song_count;
    bool m_song_count_isSet;
    bool m_song_count_isValid;

    qint32 m_trailer_count;
    bool m_trailer_count_isSet;
    bool m_trailer_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItemCounts)

#endif // OAIItemCounts_H
