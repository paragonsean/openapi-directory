/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserDto.h
 *
 * Class UserDto.
 */

#ifndef OAIUserDto_H
#define OAIUserDto_H

#include <QJsonObject>

#include "OAIUserConfiguration.h"
#include "OAIUserPolicy.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserConfiguration;
class OAIUserPolicy;

class OAIUserDto : public OAIObject {
public:
    OAIUserDto();
    OAIUserDto(QString json);
    ~OAIUserDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUserConfiguration getConfiguration() const;
    void setConfiguration(const OAIUserConfiguration &configuration);
    bool is_configuration_Set() const;
    bool is_configuration_Valid() const;

    bool isEnableAutoLogin() const;
    void setEnableAutoLogin(const bool &enable_auto_login);
    bool is_enable_auto_login_Set() const;
    bool is_enable_auto_login_Valid() const;

    bool isHasConfiguredEasyPassword() const;
    void setHasConfiguredEasyPassword(const bool &has_configured_easy_password);
    bool is_has_configured_easy_password_Set() const;
    bool is_has_configured_easy_password_Valid() const;

    bool isHasConfiguredPassword() const;
    void setHasConfiguredPassword(const bool &has_configured_password);
    bool is_has_configured_password_Set() const;
    bool is_has_configured_password_Valid() const;

    bool isHasPassword() const;
    void setHasPassword(const bool &has_password);
    bool is_has_password_Set() const;
    bool is_has_password_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getLastActivityDate() const;
    void setLastActivityDate(const QDateTime &last_activity_date);
    bool is_last_activity_date_Set() const;
    bool is_last_activity_date_Valid() const;

    QDateTime getLastLoginDate() const;
    void setLastLoginDate(const QDateTime &last_login_date);
    bool is_last_login_date_Set() const;
    bool is_last_login_date_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIUserPolicy getPolicy() const;
    void setPolicy(const OAIUserPolicy &policy);
    bool is_policy_Set() const;
    bool is_policy_Valid() const;

    double getPrimaryImageAspectRatio() const;
    void setPrimaryImageAspectRatio(const double &primary_image_aspect_ratio);
    bool is_primary_image_aspect_ratio_Set() const;
    bool is_primary_image_aspect_ratio_Valid() const;

    QString getPrimaryImageTag() const;
    void setPrimaryImageTag(const QString &primary_image_tag);
    bool is_primary_image_tag_Set() const;
    bool is_primary_image_tag_Valid() const;

    QString getServerId() const;
    void setServerId(const QString &server_id);
    bool is_server_id_Set() const;
    bool is_server_id_Valid() const;

    QString getServerName() const;
    void setServerName(const QString &server_name);
    bool is_server_name_Set() const;
    bool is_server_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUserConfiguration m_configuration;
    bool m_configuration_isSet;
    bool m_configuration_isValid;

    bool m_enable_auto_login;
    bool m_enable_auto_login_isSet;
    bool m_enable_auto_login_isValid;

    bool m_has_configured_easy_password;
    bool m_has_configured_easy_password_isSet;
    bool m_has_configured_easy_password_isValid;

    bool m_has_configured_password;
    bool m_has_configured_password_isSet;
    bool m_has_configured_password_isValid;

    bool m_has_password;
    bool m_has_password_isSet;
    bool m_has_password_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_last_activity_date;
    bool m_last_activity_date_isSet;
    bool m_last_activity_date_isValid;

    QDateTime m_last_login_date;
    bool m_last_login_date_isSet;
    bool m_last_login_date_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIUserPolicy m_policy;
    bool m_policy_isSet;
    bool m_policy_isValid;

    double m_primary_image_aspect_ratio;
    bool m_primary_image_aspect_ratio_isSet;
    bool m_primary_image_aspect_ratio_isValid;

    QString m_primary_image_tag;
    bool m_primary_image_tag_isSet;
    bool m_primary_image_tag_isValid;

    QString m_server_id;
    bool m_server_id_isSet;
    bool m_server_id_isValid;

    QString m_server_name;
    bool m_server_name_isSet;
    bool m_server_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserDto)

#endif // OAIUserDto_H
