/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIImageSavingConvention.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIImageSavingConvention::OAIImageSavingConvention(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIImageSavingConvention::OAIImageSavingConvention() {
    this->initializeModel();
}

OAIImageSavingConvention::~OAIImageSavingConvention() {}

void OAIImageSavingConvention::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIImageSavingConvention::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIImageSavingConvention::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Legacy", Qt::CaseInsensitive) == 0) {
        m_value = eOAIImageSavingConvention::LEGACY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Compatible", Qt::CaseInsensitive) == 0) {
        m_value = eOAIImageSavingConvention::COMPATIBLE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIImageSavingConvention::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIImageSavingConvention::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIImageSavingConvention::LEGACY:
            val = "Legacy";
            break;
        case eOAIImageSavingConvention::COMPATIBLE:
            val = "Compatible";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIImageSavingConvention::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIImageSavingConvention::eOAIImageSavingConvention OAIImageSavingConvention::getValue() const {
    return m_value;
}

void OAIImageSavingConvention::setValue(const OAIImageSavingConvention::eOAIImageSavingConvention& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIImageSavingConvention::isSet() const {
    
    return m_value_isSet;
}

bool OAIImageSavingConvention::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
