/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeviceIdentification.h
 *
 * 
 */

#ifndef OAIDeviceIdentification_H
#define OAIDeviceIdentification_H

#include <QJsonObject>

#include "OAIHttpHeaderInfo.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHttpHeaderInfo;

class OAIDeviceIdentification : public OAIObject {
public:
    OAIDeviceIdentification();
    OAIDeviceIdentification(QString json);
    ~OAIDeviceIdentification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFriendlyName() const;
    void setFriendlyName(const QString &friendly_name);
    bool is_friendly_name_Set() const;
    bool is_friendly_name_Valid() const;

    QList<OAIHttpHeaderInfo> getHeaders() const;
    void setHeaders(const QList<OAIHttpHeaderInfo> &headers);
    bool is_headers_Set() const;
    bool is_headers_Valid() const;

    QString getManufacturer() const;
    void setManufacturer(const QString &manufacturer);
    bool is_manufacturer_Set() const;
    bool is_manufacturer_Valid() const;

    QString getManufacturerUrl() const;
    void setManufacturerUrl(const QString &manufacturer_url);
    bool is_manufacturer_url_Set() const;
    bool is_manufacturer_url_Valid() const;

    QString getModelDescription() const;
    void setModelDescription(const QString &model_description);
    bool is_model_description_Set() const;
    bool is_model_description_Valid() const;

    QString getModelName() const;
    void setModelName(const QString &model_name);
    bool is_model_name_Set() const;
    bool is_model_name_Valid() const;

    QString getModelNumber() const;
    void setModelNumber(const QString &model_number);
    bool is_model_number_Set() const;
    bool is_model_number_Valid() const;

    QString getModelUrl() const;
    void setModelUrl(const QString &model_url);
    bool is_model_url_Set() const;
    bool is_model_url_Valid() const;

    QString getSerialNumber() const;
    void setSerialNumber(const QString &serial_number);
    bool is_serial_number_Set() const;
    bool is_serial_number_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_friendly_name;
    bool m_friendly_name_isSet;
    bool m_friendly_name_isValid;

    QList<OAIHttpHeaderInfo> m_headers;
    bool m_headers_isSet;
    bool m_headers_isValid;

    QString m_manufacturer;
    bool m_manufacturer_isSet;
    bool m_manufacturer_isValid;

    QString m_manufacturer_url;
    bool m_manufacturer_url_isSet;
    bool m_manufacturer_url_isValid;

    QString m_model_description;
    bool m_model_description_isSet;
    bool m_model_description_isValid;

    QString m_model_name;
    bool m_model_name_isSet;
    bool m_model_name_isValid;

    QString m_model_number;
    bool m_model_number_isSet;
    bool m_model_number_isValid;

    QString m_model_url;
    bool m_model_url_isSet;
    bool m_model_url_isValid;

    QString m_serial_number;
    bool m_serial_number_isSet;
    bool m_serial_number_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeviceIdentification)

#endif // OAIDeviceIdentification_H
