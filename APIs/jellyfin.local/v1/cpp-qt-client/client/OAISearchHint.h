/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchHint.h
 *
 * Class SearchHintResult.
 */

#ifndef OAISearchHint_H
#define OAISearchHint_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISearchHint : public OAIObject {
public:
    OAISearchHint();
    OAISearchHint(QString json);
    ~OAISearchHint() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlbum() const;
    void setAlbum(const QString &album);
    bool is_album_Set() const;
    bool is_album_Valid() const;

    QString getAlbumArtist() const;
    void setAlbumArtist(const QString &album_artist);
    bool is_album_artist_Set() const;
    bool is_album_artist_Valid() const;

    QString getAlbumId() const;
    void setAlbumId(const QString &album_id);
    bool is_album_id_Set() const;
    bool is_album_id_Valid() const;

    QList<QString> getArtists() const;
    void setArtists(const QList<QString> &artists);
    bool is_artists_Set() const;
    bool is_artists_Valid() const;

    QString getBackdropImageItemId() const;
    void setBackdropImageItemId(const QString &backdrop_image_item_id);
    bool is_backdrop_image_item_id_Set() const;
    bool is_backdrop_image_item_id_Valid() const;

    QString getBackdropImageTag() const;
    void setBackdropImageTag(const QString &backdrop_image_tag);
    bool is_backdrop_image_tag_Set() const;
    bool is_backdrop_image_tag_Valid() const;

    QString getChannelId() const;
    void setChannelId(const QString &channel_id);
    bool is_channel_id_Set() const;
    bool is_channel_id_Valid() const;

    QString getChannelName() const;
    void setChannelName(const QString &channel_name);
    bool is_channel_name_Set() const;
    bool is_channel_name_Valid() const;

    QDateTime getEndDate() const;
    void setEndDate(const QDateTime &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    qint32 getEpisodeCount() const;
    void setEpisodeCount(const qint32 &episode_count);
    bool is_episode_count_Set() const;
    bool is_episode_count_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getIndexNumber() const;
    void setIndexNumber(const qint32 &index_number);
    bool is_index_number_Set() const;
    bool is_index_number_Valid() const;

    bool isIsFolder() const;
    void setIsFolder(const bool &is_folder);
    bool is_is_folder_Set() const;
    bool is_is_folder_Valid() const;

    QString getItemId() const;
    void setItemId(const QString &item_id);
    bool is_item_id_Set() const;
    bool is_item_id_Valid() const;

    QString getMatchedTerm() const;
    void setMatchedTerm(const QString &matched_term);
    bool is_matched_term_Set() const;
    bool is_matched_term_Valid() const;

    QString getMediaType() const;
    void setMediaType(const QString &media_type);
    bool is_media_type_Set() const;
    bool is_media_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getParentIndexNumber() const;
    void setParentIndexNumber(const qint32 &parent_index_number);
    bool is_parent_index_number_Set() const;
    bool is_parent_index_number_Valid() const;

    double getPrimaryImageAspectRatio() const;
    void setPrimaryImageAspectRatio(const double &primary_image_aspect_ratio);
    bool is_primary_image_aspect_ratio_Set() const;
    bool is_primary_image_aspect_ratio_Valid() const;

    QString getPrimaryImageTag() const;
    void setPrimaryImageTag(const QString &primary_image_tag);
    bool is_primary_image_tag_Set() const;
    bool is_primary_image_tag_Valid() const;

    qint32 getProductionYear() const;
    void setProductionYear(const qint32 &production_year);
    bool is_production_year_Set() const;
    bool is_production_year_Valid() const;

    qint64 getRunTimeTicks() const;
    void setRunTimeTicks(const qint64 &run_time_ticks);
    bool is_run_time_ticks_Set() const;
    bool is_run_time_ticks_Valid() const;

    QString getSeries() const;
    void setSeries(const QString &series);
    bool is_series_Set() const;
    bool is_series_Valid() const;

    qint32 getSongCount() const;
    void setSongCount(const qint32 &song_count);
    bool is_song_count_Set() const;
    bool is_song_count_Valid() const;

    QDateTime getStartDate() const;
    void setStartDate(const QDateTime &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getThumbImageItemId() const;
    void setThumbImageItemId(const QString &thumb_image_item_id);
    bool is_thumb_image_item_id_Set() const;
    bool is_thumb_image_item_id_Valid() const;

    QString getThumbImageTag() const;
    void setThumbImageTag(const QString &thumb_image_tag);
    bool is_thumb_image_tag_Set() const;
    bool is_thumb_image_tag_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_album;
    bool m_album_isSet;
    bool m_album_isValid;

    QString m_album_artist;
    bool m_album_artist_isSet;
    bool m_album_artist_isValid;

    QString m_album_id;
    bool m_album_id_isSet;
    bool m_album_id_isValid;

    QList<QString> m_artists;
    bool m_artists_isSet;
    bool m_artists_isValid;

    QString m_backdrop_image_item_id;
    bool m_backdrop_image_item_id_isSet;
    bool m_backdrop_image_item_id_isValid;

    QString m_backdrop_image_tag;
    bool m_backdrop_image_tag_isSet;
    bool m_backdrop_image_tag_isValid;

    QString m_channel_id;
    bool m_channel_id_isSet;
    bool m_channel_id_isValid;

    QString m_channel_name;
    bool m_channel_name_isSet;
    bool m_channel_name_isValid;

    QDateTime m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    qint32 m_episode_count;
    bool m_episode_count_isSet;
    bool m_episode_count_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_index_number;
    bool m_index_number_isSet;
    bool m_index_number_isValid;

    bool m_is_folder;
    bool m_is_folder_isSet;
    bool m_is_folder_isValid;

    QString m_item_id;
    bool m_item_id_isSet;
    bool m_item_id_isValid;

    QString m_matched_term;
    bool m_matched_term_isSet;
    bool m_matched_term_isValid;

    QString m_media_type;
    bool m_media_type_isSet;
    bool m_media_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_parent_index_number;
    bool m_parent_index_number_isSet;
    bool m_parent_index_number_isValid;

    double m_primary_image_aspect_ratio;
    bool m_primary_image_aspect_ratio_isSet;
    bool m_primary_image_aspect_ratio_isValid;

    QString m_primary_image_tag;
    bool m_primary_image_tag_isSet;
    bool m_primary_image_tag_isValid;

    qint32 m_production_year;
    bool m_production_year_isSet;
    bool m_production_year_isValid;

    qint64 m_run_time_ticks;
    bool m_run_time_ticks_isSet;
    bool m_run_time_ticks_isValid;

    QString m_series;
    bool m_series_isSet;
    bool m_series_isValid;

    qint32 m_song_count;
    bool m_song_count_isSet;
    bool m_song_count_isValid;

    QDateTime m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_thumb_image_item_id;
    bool m_thumb_image_item_id_isSet;
    bool m_thumb_image_item_id_isValid;

    QString m_thumb_image_tag;
    bool m_thumb_image_tag_isSet;
    bool m_thumb_image_tag_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchHint)

#endif // OAISearchHint_H
