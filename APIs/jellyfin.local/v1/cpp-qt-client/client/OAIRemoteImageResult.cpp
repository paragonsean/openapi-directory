/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRemoteImageResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRemoteImageResult::OAIRemoteImageResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRemoteImageResult::OAIRemoteImageResult() {
    this->initializeModel();
}

OAIRemoteImageResult::~OAIRemoteImageResult() {}

void OAIRemoteImageResult::initializeModel() {

    m_images_isSet = false;
    m_images_isValid = false;

    m_providers_isSet = false;
    m_providers_isValid = false;

    m_total_record_count_isSet = false;
    m_total_record_count_isValid = false;
}

void OAIRemoteImageResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRemoteImageResult::fromJsonObject(QJsonObject json) {

    m_images_isValid = ::OpenAPI::fromJsonValue(m_images, json[QString("Images")]);
    m_images_isSet = !json[QString("Images")].isNull() && m_images_isValid;

    m_providers_isValid = ::OpenAPI::fromJsonValue(m_providers, json[QString("Providers")]);
    m_providers_isSet = !json[QString("Providers")].isNull() && m_providers_isValid;

    m_total_record_count_isValid = ::OpenAPI::fromJsonValue(m_total_record_count, json[QString("TotalRecordCount")]);
    m_total_record_count_isSet = !json[QString("TotalRecordCount")].isNull() && m_total_record_count_isValid;
}

QString OAIRemoteImageResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRemoteImageResult::asJsonObject() const {
    QJsonObject obj;
    if (m_images.size() > 0) {
        obj.insert(QString("Images"), ::OpenAPI::toJsonValue(m_images));
    }
    if (m_providers.size() > 0) {
        obj.insert(QString("Providers"), ::OpenAPI::toJsonValue(m_providers));
    }
    if (m_total_record_count_isSet) {
        obj.insert(QString("TotalRecordCount"), ::OpenAPI::toJsonValue(m_total_record_count));
    }
    return obj;
}

QList<OAIRemoteImageInfo> OAIRemoteImageResult::getImages() const {
    return m_images;
}
void OAIRemoteImageResult::setImages(const QList<OAIRemoteImageInfo> &images) {
    m_images = images;
    m_images_isSet = true;
}

bool OAIRemoteImageResult::is_images_Set() const{
    return m_images_isSet;
}

bool OAIRemoteImageResult::is_images_Valid() const{
    return m_images_isValid;
}

QList<QString> OAIRemoteImageResult::getProviders() const {
    return m_providers;
}
void OAIRemoteImageResult::setProviders(const QList<QString> &providers) {
    m_providers = providers;
    m_providers_isSet = true;
}

bool OAIRemoteImageResult::is_providers_Set() const{
    return m_providers_isSet;
}

bool OAIRemoteImageResult::is_providers_Valid() const{
    return m_providers_isValid;
}

qint32 OAIRemoteImageResult::getTotalRecordCount() const {
    return m_total_record_count;
}
void OAIRemoteImageResult::setTotalRecordCount(const qint32 &total_record_count) {
    m_total_record_count = total_record_count;
    m_total_record_count_isSet = true;
}

bool OAIRemoteImageResult::is_total_record_count_Set() const{
    return m_total_record_count_isSet;
}

bool OAIRemoteImageResult::is_total_record_count_Valid() const{
    return m_total_record_count_isValid;
}

bool OAIRemoteImageResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_images.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_providers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_record_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRemoteImageResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
