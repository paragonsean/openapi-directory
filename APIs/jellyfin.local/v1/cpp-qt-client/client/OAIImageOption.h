/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImageOption.h
 *
 * 
 */

#ifndef OAIImageOption_H
#define OAIImageOption_H

#include <QJsonObject>

#include "OAIImageType.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIImageOption : public OAIObject {
public:
    OAIImageOption();
    OAIImageOption(QString json);
    ~OAIImageOption() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getLimit() const;
    void setLimit(const qint32 &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    qint32 getMinWidth() const;
    void setMinWidth(const qint32 &min_width);
    bool is_min_width_Set() const;
    bool is_min_width_Valid() const;

    OAIImageType getType() const;
    void setType(const OAIImageType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;

    qint32 m_min_width;
    bool m_min_width_isSet;
    bool m_min_width_isValid;

    OAIImageType m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImageOption)

#endif // OAIImageOption_H
