/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBaseItem.h
 *
 * Class BaseItem.
 */

#ifndef OAIBaseItem_H
#define OAIBaseItem_H

#include <QJsonObject>

#include "OAIMediaUrl.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMediaUrl;

class OAIBaseItem : public OAIObject {
public:
    OAIBaseItem();
    OAIBaseItem(QString json);
    ~OAIBaseItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContainer() const;
    void setContainer(const QString &container);
    bool is_container_Set() const;
    bool is_container_Valid() const;

    QDateTime getDateLastSaved() const;
    void setDateLastSaved(const QDateTime &date_last_saved);
    bool is_date_last_saved_Set() const;
    bool is_date_last_saved_Valid() const;

    QList<QString> getExtraIds() const;
    void setExtraIds(const QList<QString> &extra_ids);
    bool is_extra_ids_Set() const;
    bool is_extra_ids_Valid() const;

    qint32 getHeight() const;
    void setHeight(const qint32 &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    bool isIsHd() const;
    void setIsHd(const bool &is_hd);
    bool is_is_hd_Set() const;
    bool is_is_hd_Valid() const;

    bool isIsShortcut() const;
    void setIsShortcut(const bool &is_shortcut);
    bool is_is_shortcut_Set() const;
    bool is_is_shortcut_Valid() const;

    QList<OAIMediaUrl> getRemoteTrailers() const;
    void setRemoteTrailers(const QList<OAIMediaUrl> &remote_trailers);
    bool is_remote_trailers_Set() const;
    bool is_remote_trailers_Valid() const;

    QString getShortcutPath() const;
    void setShortcutPath(const QString &shortcut_path);
    bool is_shortcut_path_Set() const;
    bool is_shortcut_path_Valid() const;

    qint64 getSize() const;
    void setSize(const qint64 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    bool isSupportsExternalTransfer() const;
    void setSupportsExternalTransfer(const bool &supports_external_transfer);
    bool is_supports_external_transfer_Set() const;
    bool is_supports_external_transfer_Valid() const;

    qint32 getWidth() const;
    void setWidth(const qint32 &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_container;
    bool m_container_isSet;
    bool m_container_isValid;

    QDateTime m_date_last_saved;
    bool m_date_last_saved_isSet;
    bool m_date_last_saved_isValid;

    QList<QString> m_extra_ids;
    bool m_extra_ids_isSet;
    bool m_extra_ids_isValid;

    qint32 m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    bool m_is_hd;
    bool m_is_hd_isSet;
    bool m_is_hd_isValid;

    bool m_is_shortcut;
    bool m_is_shortcut_isSet;
    bool m_is_shortcut_isValid;

    QList<OAIMediaUrl> m_remote_trailers;
    bool m_remote_trailers_isSet;
    bool m_remote_trailers_isValid;

    QString m_shortcut_path;
    bool m_shortcut_path_isSet;
    bool m_shortcut_path_isValid;

    qint64 m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    bool m_supports_external_transfer;
    bool m_supports_external_transfer_isSet;
    bool m_supports_external_transfer_isValid;

    qint32 m_width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBaseItem)

#endif // OAIBaseItem_H
