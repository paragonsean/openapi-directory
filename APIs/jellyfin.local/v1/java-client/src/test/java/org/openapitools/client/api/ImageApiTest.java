/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.io.File;
import org.openapitools.client.model.ImageFormat;
import org.openapitools.client.model.ImageInfo;
import org.openapitools.client.model.ImageType;
import org.openapitools.client.model.ProblemDetails;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ImageApi
 */
@Disabled
public class ImageApiTest {

    private final ImageApi api = new ImageApi();

    /**
     * Delete an item&#39;s image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteItemImageTest() throws ApiException {
        UUID itemId = null;
        ImageType imageType = null;
        Integer imageIndex = null;
        api.deleteItemImage(itemId, imageType, imageIndex);
        // TODO: test validations
    }

    /**
     * Delete an item&#39;s image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteItemImageByIndexTest() throws ApiException {
        UUID itemId = null;
        ImageType imageType = null;
        Integer imageIndex = null;
        api.deleteItemImageByIndex(itemId, imageType, imageIndex);
        // TODO: test validations
    }

    /**
     * Delete the user&#39;s image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteUserImageTest() throws ApiException {
        UUID userId = null;
        ImageType imageType = null;
        Integer index = null;
        api.deleteUserImage(userId, imageType, index);
        // TODO: test validations
    }

    /**
     * Delete the user&#39;s image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteUserImageByIndexTest() throws ApiException {
        UUID userId = null;
        ImageType imageType = null;
        Integer index = null;
        api.deleteUserImageByIndex(userId, imageType, index);
        // TODO: test validations
    }

    /**
     * Get artist image by name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getArtistImageTest() throws ApiException {
        String name = null;
        ImageType imageType = null;
        Integer imageIndex = null;
        String tag = null;
        ImageFormat format = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        Boolean cropWhitespace = null;
        Boolean addPlayedIndicator = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        File response = api.getArtistImage(name, imageType, imageIndex, tag, format, maxWidth, maxHeight, percentPlayed, unplayedCount, width, height, quality, cropWhitespace, addPlayedIndicator, blur, backgroundColor, foregroundLayer);
        // TODO: test validations
    }

    /**
     * Get genre image by name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGenreImageTest() throws ApiException {
        String name = null;
        ImageType imageType = null;
        String tag = null;
        ImageFormat format = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        Boolean cropWhitespace = null;
        Boolean addPlayedIndicator = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        Integer imageIndex = null;
        File response = api.getGenreImage(name, imageType, tag, format, maxWidth, maxHeight, percentPlayed, unplayedCount, width, height, quality, cropWhitespace, addPlayedIndicator, blur, backgroundColor, foregroundLayer, imageIndex);
        // TODO: test validations
    }

    /**
     * Get genre image by name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGenreImageByIndexTest() throws ApiException {
        String name = null;
        ImageType imageType = null;
        Integer imageIndex = null;
        String tag = null;
        ImageFormat format = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        Boolean cropWhitespace = null;
        Boolean addPlayedIndicator = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        File response = api.getGenreImageByIndex(name, imageType, imageIndex, tag, format, maxWidth, maxHeight, percentPlayed, unplayedCount, width, height, quality, cropWhitespace, addPlayedIndicator, blur, backgroundColor, foregroundLayer);
        // TODO: test validations
    }

    /**
     * Gets the item&#39;s image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getItemImageTest() throws ApiException {
        UUID itemId = null;
        ImageType imageType = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        String tag = null;
        Boolean cropWhitespace = null;
        ImageFormat format = null;
        Boolean addPlayedIndicator = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        Integer imageIndex = null;
        File response = api.getItemImage(itemId, imageType, maxWidth, maxHeight, width, height, quality, tag, cropWhitespace, format, addPlayedIndicator, percentPlayed, unplayedCount, blur, backgroundColor, foregroundLayer, imageIndex);
        // TODO: test validations
    }

    /**
     * Gets the item&#39;s image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getItemImage2Test() throws ApiException {
        UUID itemId = null;
        ImageType imageType = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        String tag = null;
        ImageFormat format = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer imageIndex = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        Boolean cropWhitespace = null;
        Boolean addPlayedIndicator = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        File response = api.getItemImage2(itemId, imageType, maxWidth, maxHeight, tag, format, percentPlayed, unplayedCount, imageIndex, width, height, quality, cropWhitespace, addPlayedIndicator, blur, backgroundColor, foregroundLayer);
        // TODO: test validations
    }

    /**
     * Gets the item&#39;s image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getItemImageByIndexTest() throws ApiException {
        UUID itemId = null;
        ImageType imageType = null;
        Integer imageIndex = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        String tag = null;
        Boolean cropWhitespace = null;
        ImageFormat format = null;
        Boolean addPlayedIndicator = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        File response = api.getItemImageByIndex(itemId, imageType, imageIndex, maxWidth, maxHeight, width, height, quality, tag, cropWhitespace, format, addPlayedIndicator, percentPlayed, unplayedCount, blur, backgroundColor, foregroundLayer);
        // TODO: test validations
    }

    /**
     * Get item image infos.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getItemImageInfosTest() throws ApiException {
        UUID itemId = null;
        List<ImageInfo> response = api.getItemImageInfos(itemId);
        // TODO: test validations
    }

    /**
     * Get music genre image by name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMusicGenreImageTest() throws ApiException {
        String name = null;
        ImageType imageType = null;
        String tag = null;
        ImageFormat format = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        Boolean cropWhitespace = null;
        Boolean addPlayedIndicator = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        Integer imageIndex = null;
        File response = api.getMusicGenreImage(name, imageType, tag, format, maxWidth, maxHeight, percentPlayed, unplayedCount, width, height, quality, cropWhitespace, addPlayedIndicator, blur, backgroundColor, foregroundLayer, imageIndex);
        // TODO: test validations
    }

    /**
     * Get music genre image by name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMusicGenreImageByIndexTest() throws ApiException {
        String name = null;
        ImageType imageType = null;
        Integer imageIndex = null;
        String tag = null;
        ImageFormat format = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        Boolean cropWhitespace = null;
        Boolean addPlayedIndicator = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        File response = api.getMusicGenreImageByIndex(name, imageType, imageIndex, tag, format, maxWidth, maxHeight, percentPlayed, unplayedCount, width, height, quality, cropWhitespace, addPlayedIndicator, blur, backgroundColor, foregroundLayer);
        // TODO: test validations
    }

    /**
     * Get person image by name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPersonImageTest() throws ApiException {
        String name = null;
        ImageType imageType = null;
        String tag = null;
        ImageFormat format = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        Boolean cropWhitespace = null;
        Boolean addPlayedIndicator = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        Integer imageIndex = null;
        File response = api.getPersonImage(name, imageType, tag, format, maxWidth, maxHeight, percentPlayed, unplayedCount, width, height, quality, cropWhitespace, addPlayedIndicator, blur, backgroundColor, foregroundLayer, imageIndex);
        // TODO: test validations
    }

    /**
     * Get person image by name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPersonImageByIndexTest() throws ApiException {
        String name = null;
        ImageType imageType = null;
        Integer imageIndex = null;
        String tag = null;
        ImageFormat format = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        Boolean cropWhitespace = null;
        Boolean addPlayedIndicator = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        File response = api.getPersonImageByIndex(name, imageType, imageIndex, tag, format, maxWidth, maxHeight, percentPlayed, unplayedCount, width, height, quality, cropWhitespace, addPlayedIndicator, blur, backgroundColor, foregroundLayer);
        // TODO: test validations
    }

    /**
     * Get studio image by name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStudioImageTest() throws ApiException {
        String name = null;
        ImageType imageType = null;
        String tag = null;
        ImageFormat format = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        Boolean cropWhitespace = null;
        Boolean addPlayedIndicator = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        Integer imageIndex = null;
        File response = api.getStudioImage(name, imageType, tag, format, maxWidth, maxHeight, percentPlayed, unplayedCount, width, height, quality, cropWhitespace, addPlayedIndicator, blur, backgroundColor, foregroundLayer, imageIndex);
        // TODO: test validations
    }

    /**
     * Get studio image by name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStudioImageByIndexTest() throws ApiException {
        String name = null;
        ImageType imageType = null;
        Integer imageIndex = null;
        String tag = null;
        ImageFormat format = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        Boolean cropWhitespace = null;
        Boolean addPlayedIndicator = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        File response = api.getStudioImageByIndex(name, imageType, imageIndex, tag, format, maxWidth, maxHeight, percentPlayed, unplayedCount, width, height, quality, cropWhitespace, addPlayedIndicator, blur, backgroundColor, foregroundLayer);
        // TODO: test validations
    }

    /**
     * Get user profile image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserImageTest() throws ApiException {
        UUID userId = null;
        ImageType imageType = null;
        String tag = null;
        ImageFormat format = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        Boolean cropWhitespace = null;
        Boolean addPlayedIndicator = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        Integer imageIndex = null;
        File response = api.getUserImage(userId, imageType, tag, format, maxWidth, maxHeight, percentPlayed, unplayedCount, width, height, quality, cropWhitespace, addPlayedIndicator, blur, backgroundColor, foregroundLayer, imageIndex);
        // TODO: test validations
    }

    /**
     * Get user profile image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserImageByIndexTest() throws ApiException {
        UUID userId = null;
        ImageType imageType = null;
        Integer imageIndex = null;
        String tag = null;
        ImageFormat format = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        Boolean cropWhitespace = null;
        Boolean addPlayedIndicator = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        File response = api.getUserImageByIndex(userId, imageType, imageIndex, tag, format, maxWidth, maxHeight, percentPlayed, unplayedCount, width, height, quality, cropWhitespace, addPlayedIndicator, blur, backgroundColor, foregroundLayer);
        // TODO: test validations
    }

    /**
     * Get artist image by name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void headArtistImageTest() throws ApiException {
        String name = null;
        ImageType imageType = null;
        Integer imageIndex = null;
        String tag = null;
        ImageFormat format = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        Boolean cropWhitespace = null;
        Boolean addPlayedIndicator = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        File response = api.headArtistImage(name, imageType, imageIndex, tag, format, maxWidth, maxHeight, percentPlayed, unplayedCount, width, height, quality, cropWhitespace, addPlayedIndicator, blur, backgroundColor, foregroundLayer);
        // TODO: test validations
    }

    /**
     * Get genre image by name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void headGenreImageTest() throws ApiException {
        String name = null;
        ImageType imageType = null;
        String tag = null;
        ImageFormat format = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        Boolean cropWhitespace = null;
        Boolean addPlayedIndicator = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        Integer imageIndex = null;
        File response = api.headGenreImage(name, imageType, tag, format, maxWidth, maxHeight, percentPlayed, unplayedCount, width, height, quality, cropWhitespace, addPlayedIndicator, blur, backgroundColor, foregroundLayer, imageIndex);
        // TODO: test validations
    }

    /**
     * Get genre image by name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void headGenreImageByIndexTest() throws ApiException {
        String name = null;
        ImageType imageType = null;
        Integer imageIndex = null;
        String tag = null;
        ImageFormat format = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        Boolean cropWhitespace = null;
        Boolean addPlayedIndicator = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        File response = api.headGenreImageByIndex(name, imageType, imageIndex, tag, format, maxWidth, maxHeight, percentPlayed, unplayedCount, width, height, quality, cropWhitespace, addPlayedIndicator, blur, backgroundColor, foregroundLayer);
        // TODO: test validations
    }

    /**
     * Gets the item&#39;s image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void headItemImageTest() throws ApiException {
        UUID itemId = null;
        ImageType imageType = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        String tag = null;
        Boolean cropWhitespace = null;
        ImageFormat format = null;
        Boolean addPlayedIndicator = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        Integer imageIndex = null;
        File response = api.headItemImage(itemId, imageType, maxWidth, maxHeight, width, height, quality, tag, cropWhitespace, format, addPlayedIndicator, percentPlayed, unplayedCount, blur, backgroundColor, foregroundLayer, imageIndex);
        // TODO: test validations
    }

    /**
     * Gets the item&#39;s image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void headItemImage2Test() throws ApiException {
        UUID itemId = null;
        ImageType imageType = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        String tag = null;
        ImageFormat format = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer imageIndex = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        Boolean cropWhitespace = null;
        Boolean addPlayedIndicator = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        File response = api.headItemImage2(itemId, imageType, maxWidth, maxHeight, tag, format, percentPlayed, unplayedCount, imageIndex, width, height, quality, cropWhitespace, addPlayedIndicator, blur, backgroundColor, foregroundLayer);
        // TODO: test validations
    }

    /**
     * Gets the item&#39;s image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void headItemImageByIndexTest() throws ApiException {
        UUID itemId = null;
        ImageType imageType = null;
        Integer imageIndex = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        String tag = null;
        Boolean cropWhitespace = null;
        ImageFormat format = null;
        Boolean addPlayedIndicator = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        File response = api.headItemImageByIndex(itemId, imageType, imageIndex, maxWidth, maxHeight, width, height, quality, tag, cropWhitespace, format, addPlayedIndicator, percentPlayed, unplayedCount, blur, backgroundColor, foregroundLayer);
        // TODO: test validations
    }

    /**
     * Get music genre image by name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void headMusicGenreImageTest() throws ApiException {
        String name = null;
        ImageType imageType = null;
        String tag = null;
        ImageFormat format = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        Boolean cropWhitespace = null;
        Boolean addPlayedIndicator = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        Integer imageIndex = null;
        File response = api.headMusicGenreImage(name, imageType, tag, format, maxWidth, maxHeight, percentPlayed, unplayedCount, width, height, quality, cropWhitespace, addPlayedIndicator, blur, backgroundColor, foregroundLayer, imageIndex);
        // TODO: test validations
    }

    /**
     * Get music genre image by name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void headMusicGenreImageByIndexTest() throws ApiException {
        String name = null;
        ImageType imageType = null;
        Integer imageIndex = null;
        String tag = null;
        ImageFormat format = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        Boolean cropWhitespace = null;
        Boolean addPlayedIndicator = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        File response = api.headMusicGenreImageByIndex(name, imageType, imageIndex, tag, format, maxWidth, maxHeight, percentPlayed, unplayedCount, width, height, quality, cropWhitespace, addPlayedIndicator, blur, backgroundColor, foregroundLayer);
        // TODO: test validations
    }

    /**
     * Get person image by name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void headPersonImageTest() throws ApiException {
        String name = null;
        ImageType imageType = null;
        String tag = null;
        ImageFormat format = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        Boolean cropWhitespace = null;
        Boolean addPlayedIndicator = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        Integer imageIndex = null;
        File response = api.headPersonImage(name, imageType, tag, format, maxWidth, maxHeight, percentPlayed, unplayedCount, width, height, quality, cropWhitespace, addPlayedIndicator, blur, backgroundColor, foregroundLayer, imageIndex);
        // TODO: test validations
    }

    /**
     * Get person image by name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void headPersonImageByIndexTest() throws ApiException {
        String name = null;
        ImageType imageType = null;
        Integer imageIndex = null;
        String tag = null;
        ImageFormat format = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        Boolean cropWhitespace = null;
        Boolean addPlayedIndicator = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        File response = api.headPersonImageByIndex(name, imageType, imageIndex, tag, format, maxWidth, maxHeight, percentPlayed, unplayedCount, width, height, quality, cropWhitespace, addPlayedIndicator, blur, backgroundColor, foregroundLayer);
        // TODO: test validations
    }

    /**
     * Get studio image by name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void headStudioImageTest() throws ApiException {
        String name = null;
        ImageType imageType = null;
        String tag = null;
        ImageFormat format = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        Boolean cropWhitespace = null;
        Boolean addPlayedIndicator = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        Integer imageIndex = null;
        File response = api.headStudioImage(name, imageType, tag, format, maxWidth, maxHeight, percentPlayed, unplayedCount, width, height, quality, cropWhitespace, addPlayedIndicator, blur, backgroundColor, foregroundLayer, imageIndex);
        // TODO: test validations
    }

    /**
     * Get studio image by name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void headStudioImageByIndexTest() throws ApiException {
        String name = null;
        ImageType imageType = null;
        Integer imageIndex = null;
        String tag = null;
        ImageFormat format = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        Boolean cropWhitespace = null;
        Boolean addPlayedIndicator = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        File response = api.headStudioImageByIndex(name, imageType, imageIndex, tag, format, maxWidth, maxHeight, percentPlayed, unplayedCount, width, height, quality, cropWhitespace, addPlayedIndicator, blur, backgroundColor, foregroundLayer);
        // TODO: test validations
    }

    /**
     * Get user profile image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void headUserImageTest() throws ApiException {
        UUID userId = null;
        ImageType imageType = null;
        String tag = null;
        ImageFormat format = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        Boolean cropWhitespace = null;
        Boolean addPlayedIndicator = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        Integer imageIndex = null;
        File response = api.headUserImage(userId, imageType, tag, format, maxWidth, maxHeight, percentPlayed, unplayedCount, width, height, quality, cropWhitespace, addPlayedIndicator, blur, backgroundColor, foregroundLayer, imageIndex);
        // TODO: test validations
    }

    /**
     * Get user profile image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void headUserImageByIndexTest() throws ApiException {
        UUID userId = null;
        ImageType imageType = null;
        Integer imageIndex = null;
        String tag = null;
        ImageFormat format = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        Double percentPlayed = null;
        Integer unplayedCount = null;
        Integer width = null;
        Integer height = null;
        Integer quality = null;
        Boolean cropWhitespace = null;
        Boolean addPlayedIndicator = null;
        Integer blur = null;
        String backgroundColor = null;
        String foregroundLayer = null;
        File response = api.headUserImageByIndex(userId, imageType, imageIndex, tag, format, maxWidth, maxHeight, percentPlayed, unplayedCount, width, height, quality, cropWhitespace, addPlayedIndicator, blur, backgroundColor, foregroundLayer);
        // TODO: test validations
    }

    /**
     * Sets the user image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postUserImageTest() throws ApiException {
        UUID userId = null;
        ImageType imageType = null;
        Integer index = null;
        api.postUserImage(userId, imageType, index);
        // TODO: test validations
    }

    /**
     * Sets the user image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postUserImageByIndexTest() throws ApiException {
        UUID userId = null;
        ImageType imageType = null;
        Integer index = null;
        api.postUserImageByIndex(userId, imageType, index);
        // TODO: test validations
    }

    /**
     * Set item image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setItemImageTest() throws ApiException {
        UUID itemId = null;
        ImageType imageType = null;
        api.setItemImage(itemId, imageType);
        // TODO: test validations
    }

    /**
     * Set item image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setItemImageByIndexTest() throws ApiException {
        UUID itemId = null;
        ImageType imageType = null;
        Integer imageIndex = null;
        api.setItemImageByIndex(itemId, imageType, imageIndex);
        // TODO: test validations
    }

    /**
     * Updates the index for an item image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateItemImageIndexTest() throws ApiException {
        UUID itemId = null;
        ImageType imageType = null;
        Integer imageIndex = null;
        Integer newIndex = null;
        api.updateItemImageIndex(itemId, imageType, imageIndex, newIndex);
        // TODO: test validations
    }

}
