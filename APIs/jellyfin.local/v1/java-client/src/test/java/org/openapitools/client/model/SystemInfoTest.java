/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Architecture;
import org.openapitools.client.model.FFmpegLocation;
import org.openapitools.client.model.InstallationInfo;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for SystemInfo
 */
public class SystemInfoTest {
    private final SystemInfo model = new SystemInfo();

    /**
     * Model tests for SystemInfo
     */
    @Test
    public void testSystemInfo() {
        // TODO: test SystemInfo
    }

    /**
     * Test the property 'cachePath'
     */
    @Test
    public void cachePathTest() {
        // TODO: test cachePath
    }

    /**
     * Test the property 'canLaunchWebBrowser'
     */
    @Test
    public void canLaunchWebBrowserTest() {
        // TODO: test canLaunchWebBrowser
    }

    /**
     * Test the property 'canSelfRestart'
     */
    @Test
    public void canSelfRestartTest() {
        // TODO: test canSelfRestart
    }

    /**
     * Test the property 'completedInstallations'
     */
    @Test
    public void completedInstallationsTest() {
        // TODO: test completedInstallations
    }

    /**
     * Test the property 'encoderLocation'
     */
    @Test
    public void encoderLocationTest() {
        // TODO: test encoderLocation
    }

    /**
     * Test the property 'hasPendingRestart'
     */
    @Test
    public void hasPendingRestartTest() {
        // TODO: test hasPendingRestart
    }

    /**
     * Test the property 'hasUpdateAvailable'
     */
    @Test
    public void hasUpdateAvailableTest() {
        // TODO: test hasUpdateAvailable
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'internalMetadataPath'
     */
    @Test
    public void internalMetadataPathTest() {
        // TODO: test internalMetadataPath
    }

    /**
     * Test the property 'isShuttingDown'
     */
    @Test
    public void isShuttingDownTest() {
        // TODO: test isShuttingDown
    }

    /**
     * Test the property 'itemsByNamePath'
     */
    @Test
    public void itemsByNamePathTest() {
        // TODO: test itemsByNamePath
    }

    /**
     * Test the property 'localAddress'
     */
    @Test
    public void localAddressTest() {
        // TODO: test localAddress
    }

    /**
     * Test the property 'logPath'
     */
    @Test
    public void logPathTest() {
        // TODO: test logPath
    }

    /**
     * Test the property 'operatingSystem'
     */
    @Test
    public void operatingSystemTest() {
        // TODO: test operatingSystem
    }

    /**
     * Test the property 'operatingSystemDisplayName'
     */
    @Test
    public void operatingSystemDisplayNameTest() {
        // TODO: test operatingSystemDisplayName
    }

    /**
     * Test the property 'packageName'
     */
    @Test
    public void packageNameTest() {
        // TODO: test packageName
    }

    /**
     * Test the property 'productName'
     */
    @Test
    public void productNameTest() {
        // TODO: test productName
    }

    /**
     * Test the property 'programDataPath'
     */
    @Test
    public void programDataPathTest() {
        // TODO: test programDataPath
    }

    /**
     * Test the property 'serverName'
     */
    @Test
    public void serverNameTest() {
        // TODO: test serverName
    }

    /**
     * Test the property 'startupWizardCompleted'
     */
    @Test
    public void startupWizardCompletedTest() {
        // TODO: test startupWizardCompleted
    }

    /**
     * Test the property 'supportsLibraryMonitor'
     */
    @Test
    public void supportsLibraryMonitorTest() {
        // TODO: test supportsLibraryMonitor
    }

    /**
     * Test the property 'systemArchitecture'
     */
    @Test
    public void systemArchitectureTest() {
        // TODO: test systemArchitecture
    }

    /**
     * Test the property 'transcodingTempPath'
     */
    @Test
    public void transcodingTempPathTest() {
        // TODO: test transcodingTempPath
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'webPath'
     */
    @Test
    public void webPathTest() {
        // TODO: test webPath
    }

    /**
     * Test the property 'webSocketPortNumber'
     */
    @Test
    public void webSocketPortNumberTest() {
        // TODO: test webSocketPortNumber
    }

}
