/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BaseItemDtoQueryResult;
import org.openapitools.client.model.ImageType;
import org.openapitools.client.model.ItemFields;
import org.openapitools.client.model.ProblemDetails;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TvShowsApi
 */
@Disabled
public class TvShowsApiTest {

    private final TvShowsApi api = new TvShowsApi();

    /**
     * Gets episodes for a tv season.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEpisodesTest() throws ApiException {
        UUID seriesId = null;
        UUID userId = null;
        List<ItemFields> fields = null;
        Integer season = null;
        UUID seasonId = null;
        Boolean isMissing = null;
        String adjacentTo = null;
        UUID startItemId = null;
        Integer startIndex = null;
        Integer limit = null;
        Boolean enableImages = null;
        Integer imageTypeLimit = null;
        List<ImageType> enableImageTypes = null;
        Boolean enableUserData = null;
        String sortBy = null;
        BaseItemDtoQueryResult response = api.getEpisodes(seriesId, userId, fields, season, seasonId, isMissing, adjacentTo, startItemId, startIndex, limit, enableImages, imageTypeLimit, enableImageTypes, enableUserData, sortBy);
        // TODO: test validations
    }

    /**
     * Gets a list of next up episodes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNextUpTest() throws ApiException {
        UUID userId = null;
        Integer startIndex = null;
        Integer limit = null;
        List<ItemFields> fields = null;
        String seriesId = null;
        UUID parentId = null;
        Boolean enableImges = null;
        Integer imageTypeLimit = null;
        List<ImageType> enableImageTypes = null;
        Boolean enableUserData = null;
        Boolean enableTotalRecordCount = null;
        BaseItemDtoQueryResult response = api.getNextUp(userId, startIndex, limit, fields, seriesId, parentId, enableImges, imageTypeLimit, enableImageTypes, enableUserData, enableTotalRecordCount);
        // TODO: test validations
    }

    /**
     * Gets seasons for a tv series.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSeasonsTest() throws ApiException {
        UUID seriesId = null;
        UUID userId = null;
        List<ItemFields> fields = null;
        Boolean isSpecialSeason = null;
        Boolean isMissing = null;
        String adjacentTo = null;
        Boolean enableImages = null;
        Integer imageTypeLimit = null;
        List<ImageType> enableImageTypes = null;
        Boolean enableUserData = null;
        BaseItemDtoQueryResult response = api.getSeasons(seriesId, userId, fields, isSpecialSeason, isMissing, adjacentTo, enableImages, imageTypeLimit, enableImageTypes, enableUserData);
        // TODO: test validations
    }

    /**
     * Gets a list of upcoming episodes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUpcomingEpisodesTest() throws ApiException {
        UUID userId = null;
        Integer startIndex = null;
        Integer limit = null;
        List<ItemFields> fields = null;
        UUID parentId = null;
        Boolean enableImges = null;
        Integer imageTypeLimit = null;
        List<ImageType> enableImageTypes = null;
        Boolean enableUserData = null;
        BaseItemDtoQueryResult response = api.getUpcomingEpisodes(userId, startIndex, limit, fields, parentId, enableImges, imageTypeLimit, enableImageTypes, enableUserData);
        // TODO: test validations
    }

}
