/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.io.File;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UniversalAudioApi
 */
@Disabled
public class UniversalAudioApiTest {

    private final UniversalAudioApi api = new UniversalAudioApi();

    /**
     * Gets an audio stream.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUniversalAudioStreamTest() throws ApiException {
        UUID itemId = null;
        List<String> container = null;
        String mediaSourceId = null;
        String deviceId = null;
        UUID userId = null;
        String audioCodec = null;
        Integer maxAudioChannels = null;
        Integer transcodingAudioChannels = null;
        Integer maxStreamingBitrate = null;
        Integer audioBitRate = null;
        Long startTimeTicks = null;
        String transcodingContainer = null;
        String transcodingProtocol = null;
        Integer maxAudioSampleRate = null;
        Integer maxAudioBitDepth = null;
        Boolean enableRemoteMedia = null;
        Boolean breakOnNonKeyFrames = null;
        Boolean enableRedirection = null;
        File response = api.getUniversalAudioStream(itemId, container, mediaSourceId, deviceId, userId, audioCodec, maxAudioChannels, transcodingAudioChannels, maxStreamingBitrate, audioBitRate, startTimeTicks, transcodingContainer, transcodingProtocol, maxAudioSampleRate, maxAudioBitDepth, enableRemoteMedia, breakOnNonKeyFrames, enableRedirection);
        // TODO: test validations
    }

    /**
     * Gets an audio stream.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void headUniversalAudioStreamTest() throws ApiException {
        UUID itemId = null;
        List<String> container = null;
        String mediaSourceId = null;
        String deviceId = null;
        UUID userId = null;
        String audioCodec = null;
        Integer maxAudioChannels = null;
        Integer transcodingAudioChannels = null;
        Integer maxStreamingBitrate = null;
        Integer audioBitRate = null;
        Long startTimeTicks = null;
        String transcodingContainer = null;
        String transcodingProtocol = null;
        Integer maxAudioSampleRate = null;
        Integer maxAudioBitDepth = null;
        Boolean enableRemoteMedia = null;
        Boolean breakOnNonKeyFrames = null;
        Boolean enableRedirection = null;
        File response = api.headUniversalAudioStream(itemId, container, mediaSourceId, deviceId, userId, audioCodec, maxAudioChannels, transcodingAudioChannels, maxStreamingBitrate, audioBitRate, startTimeTicks, transcodingContainer, transcodingProtocol, maxAudioSampleRate, maxAudioBitDepth, enableRemoteMedia, breakOnNonKeyFrames, enableRedirection);
        // TODO: test validations
    }

}
