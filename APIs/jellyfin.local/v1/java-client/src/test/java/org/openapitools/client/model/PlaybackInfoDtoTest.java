/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.UUID;
import org.openapitools.client.model.DeviceProfile;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PlaybackInfoDto
 */
public class PlaybackInfoDtoTest {
    private final PlaybackInfoDto model = new PlaybackInfoDto();

    /**
     * Model tests for PlaybackInfoDto
     */
    @Test
    public void testPlaybackInfoDto() {
        // TODO: test PlaybackInfoDto
    }

    /**
     * Test the property 'allowAudioStreamCopy'
     */
    @Test
    public void allowAudioStreamCopyTest() {
        // TODO: test allowAudioStreamCopy
    }

    /**
     * Test the property 'allowVideoStreamCopy'
     */
    @Test
    public void allowVideoStreamCopyTest() {
        // TODO: test allowVideoStreamCopy
    }

    /**
     * Test the property 'audioStreamIndex'
     */
    @Test
    public void audioStreamIndexTest() {
        // TODO: test audioStreamIndex
    }

    /**
     * Test the property 'autoOpenLiveStream'
     */
    @Test
    public void autoOpenLiveStreamTest() {
        // TODO: test autoOpenLiveStream
    }

    /**
     * Test the property 'deviceProfile'
     */
    @Test
    public void deviceProfileTest() {
        // TODO: test deviceProfile
    }

    /**
     * Test the property 'enableDirectPlay'
     */
    @Test
    public void enableDirectPlayTest() {
        // TODO: test enableDirectPlay
    }

    /**
     * Test the property 'enableDirectStream'
     */
    @Test
    public void enableDirectStreamTest() {
        // TODO: test enableDirectStream
    }

    /**
     * Test the property 'enableTranscoding'
     */
    @Test
    public void enableTranscodingTest() {
        // TODO: test enableTranscoding
    }

    /**
     * Test the property 'liveStreamId'
     */
    @Test
    public void liveStreamIdTest() {
        // TODO: test liveStreamId
    }

    /**
     * Test the property 'maxAudioChannels'
     */
    @Test
    public void maxAudioChannelsTest() {
        // TODO: test maxAudioChannels
    }

    /**
     * Test the property 'maxStreamingBitrate'
     */
    @Test
    public void maxStreamingBitrateTest() {
        // TODO: test maxStreamingBitrate
    }

    /**
     * Test the property 'mediaSourceId'
     */
    @Test
    public void mediaSourceIdTest() {
        // TODO: test mediaSourceId
    }

    /**
     * Test the property 'startTimeTicks'
     */
    @Test
    public void startTimeTicksTest() {
        // TODO: test startTimeTicks
    }

    /**
     * Test the property 'subtitleStreamIndex'
     */
    @Test
    public void subtitleStreamIndexTest() {
        // TODO: test subtitleStreamIndex
    }

    /**
     * Test the property 'userId'
     */
    @Test
    public void userIdTest() {
        // TODO: test userId
    }

}
