/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.AccessSchedule;
import org.openapitools.client.model.SyncPlayUserAccessType;
import org.openapitools.client.model.UnratedItem;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UserPolicy
 */
public class UserPolicyTest {
    private final UserPolicy model = new UserPolicy();

    /**
     * Model tests for UserPolicy
     */
    @Test
    public void testUserPolicy() {
        // TODO: test UserPolicy
    }

    /**
     * Test the property 'accessSchedules'
     */
    @Test
    public void accessSchedulesTest() {
        // TODO: test accessSchedules
    }

    /**
     * Test the property 'authenticationProviderId'
     */
    @Test
    public void authenticationProviderIdTest() {
        // TODO: test authenticationProviderId
    }

    /**
     * Test the property 'blockUnratedItems'
     */
    @Test
    public void blockUnratedItemsTest() {
        // TODO: test blockUnratedItems
    }

    /**
     * Test the property 'blockedChannels'
     */
    @Test
    public void blockedChannelsTest() {
        // TODO: test blockedChannels
    }

    /**
     * Test the property 'blockedMediaFolders'
     */
    @Test
    public void blockedMediaFoldersTest() {
        // TODO: test blockedMediaFolders
    }

    /**
     * Test the property 'blockedTags'
     */
    @Test
    public void blockedTagsTest() {
        // TODO: test blockedTags
    }

    /**
     * Test the property 'enableAllChannels'
     */
    @Test
    public void enableAllChannelsTest() {
        // TODO: test enableAllChannels
    }

    /**
     * Test the property 'enableAllDevices'
     */
    @Test
    public void enableAllDevicesTest() {
        // TODO: test enableAllDevices
    }

    /**
     * Test the property 'enableAllFolders'
     */
    @Test
    public void enableAllFoldersTest() {
        // TODO: test enableAllFolders
    }

    /**
     * Test the property 'enableAudioPlaybackTranscoding'
     */
    @Test
    public void enableAudioPlaybackTranscodingTest() {
        // TODO: test enableAudioPlaybackTranscoding
    }

    /**
     * Test the property 'enableContentDeletion'
     */
    @Test
    public void enableContentDeletionTest() {
        // TODO: test enableContentDeletion
    }

    /**
     * Test the property 'enableContentDeletionFromFolders'
     */
    @Test
    public void enableContentDeletionFromFoldersTest() {
        // TODO: test enableContentDeletionFromFolders
    }

    /**
     * Test the property 'enableContentDownloading'
     */
    @Test
    public void enableContentDownloadingTest() {
        // TODO: test enableContentDownloading
    }

    /**
     * Test the property 'enableLiveTvAccess'
     */
    @Test
    public void enableLiveTvAccessTest() {
        // TODO: test enableLiveTvAccess
    }

    /**
     * Test the property 'enableLiveTvManagement'
     */
    @Test
    public void enableLiveTvManagementTest() {
        // TODO: test enableLiveTvManagement
    }

    /**
     * Test the property 'enableMediaConversion'
     */
    @Test
    public void enableMediaConversionTest() {
        // TODO: test enableMediaConversion
    }

    /**
     * Test the property 'enableMediaPlayback'
     */
    @Test
    public void enableMediaPlaybackTest() {
        // TODO: test enableMediaPlayback
    }

    /**
     * Test the property 'enablePlaybackRemuxing'
     */
    @Test
    public void enablePlaybackRemuxingTest() {
        // TODO: test enablePlaybackRemuxing
    }

    /**
     * Test the property 'enablePublicSharing'
     */
    @Test
    public void enablePublicSharingTest() {
        // TODO: test enablePublicSharing
    }

    /**
     * Test the property 'enableRemoteAccess'
     */
    @Test
    public void enableRemoteAccessTest() {
        // TODO: test enableRemoteAccess
    }

    /**
     * Test the property 'enableRemoteControlOfOtherUsers'
     */
    @Test
    public void enableRemoteControlOfOtherUsersTest() {
        // TODO: test enableRemoteControlOfOtherUsers
    }

    /**
     * Test the property 'enableSharedDeviceControl'
     */
    @Test
    public void enableSharedDeviceControlTest() {
        // TODO: test enableSharedDeviceControl
    }

    /**
     * Test the property 'enableSyncTranscoding'
     */
    @Test
    public void enableSyncTranscodingTest() {
        // TODO: test enableSyncTranscoding
    }

    /**
     * Test the property 'enableUserPreferenceAccess'
     */
    @Test
    public void enableUserPreferenceAccessTest() {
        // TODO: test enableUserPreferenceAccess
    }

    /**
     * Test the property 'enableVideoPlaybackTranscoding'
     */
    @Test
    public void enableVideoPlaybackTranscodingTest() {
        // TODO: test enableVideoPlaybackTranscoding
    }

    /**
     * Test the property 'enabledChannels'
     */
    @Test
    public void enabledChannelsTest() {
        // TODO: test enabledChannels
    }

    /**
     * Test the property 'enabledDevices'
     */
    @Test
    public void enabledDevicesTest() {
        // TODO: test enabledDevices
    }

    /**
     * Test the property 'enabledFolders'
     */
    @Test
    public void enabledFoldersTest() {
        // TODO: test enabledFolders
    }

    /**
     * Test the property 'forceRemoteSourceTranscoding'
     */
    @Test
    public void forceRemoteSourceTranscodingTest() {
        // TODO: test forceRemoteSourceTranscoding
    }

    /**
     * Test the property 'invalidLoginAttemptCount'
     */
    @Test
    public void invalidLoginAttemptCountTest() {
        // TODO: test invalidLoginAttemptCount
    }

    /**
     * Test the property 'isAdministrator'
     */
    @Test
    public void isAdministratorTest() {
        // TODO: test isAdministrator
    }

    /**
     * Test the property 'isDisabled'
     */
    @Test
    public void isDisabledTest() {
        // TODO: test isDisabled
    }

    /**
     * Test the property 'isHidden'
     */
    @Test
    public void isHiddenTest() {
        // TODO: test isHidden
    }

    /**
     * Test the property 'loginAttemptsBeforeLockout'
     */
    @Test
    public void loginAttemptsBeforeLockoutTest() {
        // TODO: test loginAttemptsBeforeLockout
    }

    /**
     * Test the property 'maxActiveSessions'
     */
    @Test
    public void maxActiveSessionsTest() {
        // TODO: test maxActiveSessions
    }

    /**
     * Test the property 'maxParentalRating'
     */
    @Test
    public void maxParentalRatingTest() {
        // TODO: test maxParentalRating
    }

    /**
     * Test the property 'passwordResetProviderId'
     */
    @Test
    public void passwordResetProviderIdTest() {
        // TODO: test passwordResetProviderId
    }

    /**
     * Test the property 'remoteClientBitrateLimit'
     */
    @Test
    public void remoteClientBitrateLimitTest() {
        // TODO: test remoteClientBitrateLimit
    }

    /**
     * Test the property 'syncPlayAccess'
     */
    @Test
    public void syncPlayAccessTest() {
        // TODO: test syncPlayAccess
    }

}
