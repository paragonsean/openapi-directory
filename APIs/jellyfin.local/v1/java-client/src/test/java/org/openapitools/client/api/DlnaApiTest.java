/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DeviceProfile;
import org.openapitools.client.model.DeviceProfileInfo;
import org.openapitools.client.model.ProblemDetails;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DlnaApi
 */
@Disabled
public class DlnaApiTest {

    private final DlnaApi api = new DlnaApi();

    /**
     * Creates a profile.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createProfileTest() throws ApiException {
        DeviceProfile deviceProfile = null;
        api.createProfile(deviceProfile);
        // TODO: test validations
    }

    /**
     * Deletes a profile.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteProfileTest() throws ApiException {
        String profileId = null;
        api.deleteProfile(profileId);
        // TODO: test validations
    }

    /**
     * Gets the default profile.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDefaultProfileTest() throws ApiException {
        DeviceProfile response = api.getDefaultProfile();
        // TODO: test validations
    }

    /**
     * Gets a single profile.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProfileTest() throws ApiException {
        String profileId = null;
        DeviceProfile response = api.getProfile(profileId);
        // TODO: test validations
    }

    /**
     * Get profile infos.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProfileInfosTest() throws ApiException {
        List<DeviceProfileInfo> response = api.getProfileInfos();
        // TODO: test validations
    }

    /**
     * Updates a profile.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateProfileTest() throws ApiException {
        String profileId = null;
        DeviceProfile deviceProfile = null;
        api.updateProfile(profileId, deviceProfile);
        // TODO: test validations
    }

}
