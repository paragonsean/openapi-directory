/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BaseItemDtoQueryResult;
import org.openapitools.client.model.ChannelFeatures;
import org.openapitools.client.model.ItemFields;
import org.openapitools.client.model.ItemFilter;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChannelsApi
 */
@Disabled
public class ChannelsApiTest {

    private final ChannelsApi api = new ChannelsApi();

    /**
     * Get all channel features.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllChannelFeaturesTest() throws ApiException {
        List<ChannelFeatures> response = api.getAllChannelFeatures();
        // TODO: test validations
    }

    /**
     * Get channel features.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChannelFeaturesTest() throws ApiException {
        UUID channelId = null;
        ChannelFeatures response = api.getChannelFeatures(channelId);
        // TODO: test validations
    }

    /**
     * Get channel items.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChannelItemsTest() throws ApiException {
        UUID channelId = null;
        UUID folderId = null;
        UUID userId = null;
        Integer startIndex = null;
        Integer limit = null;
        String sortOrder = null;
        List<ItemFilter> filters = null;
        String sortBy = null;
        List<ItemFields> fields = null;
        BaseItemDtoQueryResult response = api.getChannelItems(channelId, folderId, userId, startIndex, limit, sortOrder, filters, sortBy, fields);
        // TODO: test validations
    }

    /**
     * Gets available channels.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChannelsTest() throws ApiException {
        UUID userId = null;
        Integer startIndex = null;
        Integer limit = null;
        Boolean supportsLatestItems = null;
        Boolean supportsMediaDeletion = null;
        Boolean isFavorite = null;
        BaseItemDtoQueryResult response = api.getChannels(userId, startIndex, limit, supportsLatestItems, supportsMediaDeletion, isFavorite);
        // TODO: test validations
    }

    /**
     * Gets latest channel items.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLatestChannelItemsTest() throws ApiException {
        UUID userId = null;
        Integer startIndex = null;
        Integer limit = null;
        List<ItemFilter> filters = null;
        List<ItemFields> fields = null;
        List<UUID> channelIds = null;
        BaseItemDtoQueryResult response = api.getLatestChannelItems(userId, startIndex, limit, filters, fields, channelIds);
        // TODO: test validations
    }

}
