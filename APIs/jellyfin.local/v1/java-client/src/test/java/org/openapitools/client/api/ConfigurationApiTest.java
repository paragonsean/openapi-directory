/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.io.File;
import org.openapitools.client.model.MediaEncoderPathDto;
import org.openapitools.client.model.MetadataOptions;
import org.openapitools.client.model.ServerConfiguration;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ConfigurationApi
 */
@Disabled
public class ConfigurationApiTest {

    private final ConfigurationApi api = new ConfigurationApi();

    /**
     * Gets application configuration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getConfigurationTest() throws ApiException {
        ServerConfiguration response = api.getConfiguration();
        // TODO: test validations
    }

    /**
     * Gets a default MetadataOptions object.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDefaultMetadataOptionsTest() throws ApiException {
        MetadataOptions response = api.getDefaultMetadataOptions();
        // TODO: test validations
    }

    /**
     * Gets a named configuration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNamedConfigurationTest() throws ApiException {
        String key = null;
        File response = api.getNamedConfiguration(key);
        // TODO: test validations
    }

    /**
     * Updates application configuration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateConfigurationTest() throws ApiException {
        ServerConfiguration serverConfiguration = null;
        api.updateConfiguration(serverConfiguration);
        // TODO: test validations
    }

    /**
     * Updates the path to the media encoder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMediaEncoderPathTest() throws ApiException {
        MediaEncoderPathDto mediaEncoderPathDto = null;
        api.updateMediaEncoderPath(mediaEncoderPathDto);
        // TODO: test validations
    }

    /**
     * Updates named configuration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateNamedConfigurationTest() throws ApiException {
        String key = null;
        api.updateNamedConfiguration(key);
        // TODO: test validations
    }

}
