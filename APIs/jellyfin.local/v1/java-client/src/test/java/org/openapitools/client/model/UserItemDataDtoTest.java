/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UserItemDataDto
 */
public class UserItemDataDtoTest {
    private final UserItemDataDto model = new UserItemDataDto();

    /**
     * Model tests for UserItemDataDto
     */
    @Test
    public void testUserItemDataDto() {
        // TODO: test UserItemDataDto
    }

    /**
     * Test the property 'isFavorite'
     */
    @Test
    public void isFavoriteTest() {
        // TODO: test isFavorite
    }

    /**
     * Test the property 'itemId'
     */
    @Test
    public void itemIdTest() {
        // TODO: test itemId
    }

    /**
     * Test the property 'key'
     */
    @Test
    public void keyTest() {
        // TODO: test key
    }

    /**
     * Test the property 'lastPlayedDate'
     */
    @Test
    public void lastPlayedDateTest() {
        // TODO: test lastPlayedDate
    }

    /**
     * Test the property 'likes'
     */
    @Test
    public void likesTest() {
        // TODO: test likes
    }

    /**
     * Test the property 'playCount'
     */
    @Test
    public void playCountTest() {
        // TODO: test playCount
    }

    /**
     * Test the property 'playbackPositionTicks'
     */
    @Test
    public void playbackPositionTicksTest() {
        // TODO: test playbackPositionTicks
    }

    /**
     * Test the property 'played'
     */
    @Test
    public void playedTest() {
        // TODO: test played
    }

    /**
     * Test the property 'playedPercentage'
     */
    @Test
    public void playedPercentageTest() {
        // TODO: test playedPercentage
    }

    /**
     * Test the property 'rating'
     */
    @Test
    public void ratingTest() {
        // TODO: test rating
    }

    /**
     * Test the property 'unplayedItemCount'
     */
    @Test
    public void unplayedItemCountTest() {
        // TODO: test unplayedItemCount
    }

}
