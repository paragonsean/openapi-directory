/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DefaultDirectoryBrowserInfoDto;
import org.openapitools.client.model.FileSystemEntryInfo;
import org.openapitools.client.model.ProblemDetails;
import org.openapitools.client.model.ValidatePathDto;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EnvironmentApi
 */
@Disabled
public class EnvironmentApiTest {

    private final EnvironmentApi api = new EnvironmentApi();

    /**
     * Get Default directory browser.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDefaultDirectoryBrowserTest() throws ApiException {
        DefaultDirectoryBrowserInfoDto response = api.getDefaultDirectoryBrowser();
        // TODO: test validations
    }

    /**
     * Gets the contents of a given directory in the file system.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDirectoryContentsTest() throws ApiException {
        String path = null;
        Boolean includeFiles = null;
        Boolean includeDirectories = null;
        List<FileSystemEntryInfo> response = api.getDirectoryContents(path, includeFiles, includeDirectories);
        // TODO: test validations
    }

    /**
     * Gets available drives from the server&#39;s file system.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDrivesTest() throws ApiException {
        List<FileSystemEntryInfo> response = api.getDrives();
        // TODO: test validations
    }

    /**
     * Gets network paths.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkSharesTest() throws ApiException {
        List<FileSystemEntryInfo> response = api.getNetworkShares();
        // TODO: test validations
    }

    /**
     * Gets the parent path of a given path.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getParentPathTest() throws ApiException {
        String path = null;
        String response = api.getParentPath(path);
        // TODO: test validations
    }

    /**
     * Validates path.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void validatePathTest() throws ApiException {
        ValidatePathDto validatePathDto = null;
        api.validatePath(validatePathDto);
        // TODO: test validations
    }

}
