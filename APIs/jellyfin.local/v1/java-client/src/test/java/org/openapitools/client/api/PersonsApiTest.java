/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BaseItemDto;
import org.openapitools.client.model.BaseItemDtoQueryResult;
import org.openapitools.client.model.ImageType;
import org.openapitools.client.model.ItemFields;
import org.openapitools.client.model.ItemFilter;
import org.openapitools.client.model.ProblemDetails;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PersonsApi
 */
@Disabled
public class PersonsApiTest {

    private final PersonsApi api = new PersonsApi();

    /**
     * Get person by name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPersonTest() throws ApiException {
        String name = null;
        UUID userId = null;
        BaseItemDto response = api.getPerson(name, userId);
        // TODO: test validations
    }

    /**
     * Gets all persons.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPersonsTest() throws ApiException {
        Integer limit = null;
        String searchTerm = null;
        List<ItemFields> fields = null;
        List<ItemFilter> filters = null;
        Boolean isFavorite = null;
        Boolean enableUserData = null;
        Integer imageTypeLimit = null;
        List<ImageType> enableImageTypes = null;
        List<String> excludePersonTypes = null;
        List<String> personTypes = null;
        UUID appearsInItemId = null;
        UUID userId = null;
        Boolean enableImages = null;
        BaseItemDtoQueryResult response = api.getPersons(limit, searchTerm, fields, filters, isFavorite, enableUserData, imageTypeLimit, enableImageTypes, excludePersonTypes, personTypes, appearsInItemId, userId, enableImages);
        // TODO: test validations
    }

}
