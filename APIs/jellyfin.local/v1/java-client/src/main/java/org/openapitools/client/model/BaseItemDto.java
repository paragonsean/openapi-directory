/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.openapitools.client.model.BaseItemDtoImageBlurHashes;
import org.openapitools.client.model.BaseItemPerson;
import org.openapitools.client.model.ChannelType;
import org.openapitools.client.model.ChapterInfo;
import org.openapitools.client.model.DayOfWeek;
import org.openapitools.client.model.ExternalUrl;
import org.openapitools.client.model.ImageOrientation;
import org.openapitools.client.model.IsoType;
import org.openapitools.client.model.LocationType;
import org.openapitools.client.model.MediaSourceInfo;
import org.openapitools.client.model.MediaStream;
import org.openapitools.client.model.MediaUrl;
import org.openapitools.client.model.MetadataField;
import org.openapitools.client.model.NameGuidPair;
import org.openapitools.client.model.PlayAccess;
import org.openapitools.client.model.ProgramAudio;
import org.openapitools.client.model.UserItemDataDto;
import org.openapitools.client.model.Video3DFormat;
import org.openapitools.client.model.VideoType;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * This is strictly used as a data transfer object from the api layer.  This holds information about a BaseItem in a format that is convenient for the client.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:21:15.226132-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BaseItemDto {
  public static final String SERIALIZED_NAME_AIR_DAYS = "AirDays";
  @SerializedName(SERIALIZED_NAME_AIR_DAYS)
  private List<DayOfWeek> airDays;

  public static final String SERIALIZED_NAME_AIR_TIME = "AirTime";
  @SerializedName(SERIALIZED_NAME_AIR_TIME)
  private String airTime;

  public static final String SERIALIZED_NAME_AIRS_AFTER_SEASON_NUMBER = "AirsAfterSeasonNumber";
  @SerializedName(SERIALIZED_NAME_AIRS_AFTER_SEASON_NUMBER)
  private Integer airsAfterSeasonNumber;

  public static final String SERIALIZED_NAME_AIRS_BEFORE_EPISODE_NUMBER = "AirsBeforeEpisodeNumber";
  @SerializedName(SERIALIZED_NAME_AIRS_BEFORE_EPISODE_NUMBER)
  private Integer airsBeforeEpisodeNumber;

  public static final String SERIALIZED_NAME_AIRS_BEFORE_SEASON_NUMBER = "AirsBeforeSeasonNumber";
  @SerializedName(SERIALIZED_NAME_AIRS_BEFORE_SEASON_NUMBER)
  private Integer airsBeforeSeasonNumber;

  public static final String SERIALIZED_NAME_ALBUM = "Album";
  @SerializedName(SERIALIZED_NAME_ALBUM)
  private String album;

  public static final String SERIALIZED_NAME_ALBUM_ARTIST = "AlbumArtist";
  @SerializedName(SERIALIZED_NAME_ALBUM_ARTIST)
  private String albumArtist;

  public static final String SERIALIZED_NAME_ALBUM_ARTISTS = "AlbumArtists";
  @SerializedName(SERIALIZED_NAME_ALBUM_ARTISTS)
  private List<NameGuidPair> albumArtists;

  public static final String SERIALIZED_NAME_ALBUM_COUNT = "AlbumCount";
  @SerializedName(SERIALIZED_NAME_ALBUM_COUNT)
  private Integer albumCount;

  public static final String SERIALIZED_NAME_ALBUM_ID = "AlbumId";
  @SerializedName(SERIALIZED_NAME_ALBUM_ID)
  private UUID albumId;

  public static final String SERIALIZED_NAME_ALBUM_PRIMARY_IMAGE_TAG = "AlbumPrimaryImageTag";
  @SerializedName(SERIALIZED_NAME_ALBUM_PRIMARY_IMAGE_TAG)
  private String albumPrimaryImageTag;

  public static final String SERIALIZED_NAME_ALTITUDE = "Altitude";
  @SerializedName(SERIALIZED_NAME_ALTITUDE)
  private Double altitude;

  public static final String SERIALIZED_NAME_APERTURE = "Aperture";
  @SerializedName(SERIALIZED_NAME_APERTURE)
  private Double aperture;

  public static final String SERIALIZED_NAME_ARTIST_COUNT = "ArtistCount";
  @SerializedName(SERIALIZED_NAME_ARTIST_COUNT)
  private Integer artistCount;

  public static final String SERIALIZED_NAME_ARTIST_ITEMS = "ArtistItems";
  @SerializedName(SERIALIZED_NAME_ARTIST_ITEMS)
  private List<NameGuidPair> artistItems;

  public static final String SERIALIZED_NAME_ARTISTS = "Artists";
  @SerializedName(SERIALIZED_NAME_ARTISTS)
  private List<String> artists;

  public static final String SERIALIZED_NAME_ASPECT_RATIO = "AspectRatio";
  @SerializedName(SERIALIZED_NAME_ASPECT_RATIO)
  private String aspectRatio;

  public static final String SERIALIZED_NAME_AUDIO = "Audio";
  @SerializedName(SERIALIZED_NAME_AUDIO)
  private ProgramAudio audio;

  public static final String SERIALIZED_NAME_BACKDROP_IMAGE_TAGS = "BackdropImageTags";
  @SerializedName(SERIALIZED_NAME_BACKDROP_IMAGE_TAGS)
  private List<String> backdropImageTags;

  public static final String SERIALIZED_NAME_CAMERA_MAKE = "CameraMake";
  @SerializedName(SERIALIZED_NAME_CAMERA_MAKE)
  private String cameraMake;

  public static final String SERIALIZED_NAME_CAMERA_MODEL = "CameraModel";
  @SerializedName(SERIALIZED_NAME_CAMERA_MODEL)
  private String cameraModel;

  public static final String SERIALIZED_NAME_CAN_DELETE = "CanDelete";
  @SerializedName(SERIALIZED_NAME_CAN_DELETE)
  private Boolean canDelete;

  public static final String SERIALIZED_NAME_CAN_DOWNLOAD = "CanDownload";
  @SerializedName(SERIALIZED_NAME_CAN_DOWNLOAD)
  private Boolean canDownload;

  public static final String SERIALIZED_NAME_CHANNEL_ID = "ChannelId";
  @SerializedName(SERIALIZED_NAME_CHANNEL_ID)
  private UUID channelId;

  public static final String SERIALIZED_NAME_CHANNEL_NAME = "ChannelName";
  @SerializedName(SERIALIZED_NAME_CHANNEL_NAME)
  private String channelName;

  public static final String SERIALIZED_NAME_CHANNEL_NUMBER = "ChannelNumber";
  @SerializedName(SERIALIZED_NAME_CHANNEL_NUMBER)
  private String channelNumber;

  public static final String SERIALIZED_NAME_CHANNEL_PRIMARY_IMAGE_TAG = "ChannelPrimaryImageTag";
  @SerializedName(SERIALIZED_NAME_CHANNEL_PRIMARY_IMAGE_TAG)
  private String channelPrimaryImageTag;

  public static final String SERIALIZED_NAME_CHANNEL_TYPE = "ChannelType";
  @SerializedName(SERIALIZED_NAME_CHANNEL_TYPE)
  private ChannelType channelType;

  public static final String SERIALIZED_NAME_CHAPTERS = "Chapters";
  @SerializedName(SERIALIZED_NAME_CHAPTERS)
  private List<ChapterInfo> chapters;

  public static final String SERIALIZED_NAME_CHILD_COUNT = "ChildCount";
  @SerializedName(SERIALIZED_NAME_CHILD_COUNT)
  private Integer childCount;

  public static final String SERIALIZED_NAME_COLLECTION_TYPE = "CollectionType";
  @SerializedName(SERIALIZED_NAME_COLLECTION_TYPE)
  private String collectionType;

  public static final String SERIALIZED_NAME_COMMUNITY_RATING = "CommunityRating";
  @SerializedName(SERIALIZED_NAME_COMMUNITY_RATING)
  private Float communityRating;

  public static final String SERIALIZED_NAME_COMPLETION_PERCENTAGE = "CompletionPercentage";
  @SerializedName(SERIALIZED_NAME_COMPLETION_PERCENTAGE)
  private Double completionPercentage;

  public static final String SERIALIZED_NAME_CONTAINER = "Container";
  @SerializedName(SERIALIZED_NAME_CONTAINER)
  private String container;

  public static final String SERIALIZED_NAME_CRITIC_RATING = "CriticRating";
  @SerializedName(SERIALIZED_NAME_CRITIC_RATING)
  private Float criticRating;

  public static final String SERIALIZED_NAME_CUMULATIVE_RUN_TIME_TICKS = "CumulativeRunTimeTicks";
  @SerializedName(SERIALIZED_NAME_CUMULATIVE_RUN_TIME_TICKS)
  private Long cumulativeRunTimeTicks;

  public static final String SERIALIZED_NAME_CURRENT_PROGRAM = "CurrentProgram";
  @SerializedName(SERIALIZED_NAME_CURRENT_PROGRAM)
  private BaseItemDto currentProgram;

  public static final String SERIALIZED_NAME_CUSTOM_RATING = "CustomRating";
  @SerializedName(SERIALIZED_NAME_CUSTOM_RATING)
  private String customRating;

  public static final String SERIALIZED_NAME_DATE_CREATED = "DateCreated";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_LAST_MEDIA_ADDED = "DateLastMediaAdded";
  @SerializedName(SERIALIZED_NAME_DATE_LAST_MEDIA_ADDED)
  private OffsetDateTime dateLastMediaAdded;

  public static final String SERIALIZED_NAME_DISPLAY_ORDER = "DisplayOrder";
  @SerializedName(SERIALIZED_NAME_DISPLAY_ORDER)
  private String displayOrder;

  public static final String SERIALIZED_NAME_DISPLAY_PREFERENCES_ID = "DisplayPreferencesId";
  @SerializedName(SERIALIZED_NAME_DISPLAY_PREFERENCES_ID)
  private String displayPreferencesId;

  public static final String SERIALIZED_NAME_ENABLE_MEDIA_SOURCE_DISPLAY = "EnableMediaSourceDisplay";
  @SerializedName(SERIALIZED_NAME_ENABLE_MEDIA_SOURCE_DISPLAY)
  private Boolean enableMediaSourceDisplay;

  public static final String SERIALIZED_NAME_END_DATE = "EndDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private OffsetDateTime endDate;

  public static final String SERIALIZED_NAME_EPISODE_COUNT = "EpisodeCount";
  @SerializedName(SERIALIZED_NAME_EPISODE_COUNT)
  private Integer episodeCount;

  public static final String SERIALIZED_NAME_EPISODE_TITLE = "EpisodeTitle";
  @SerializedName(SERIALIZED_NAME_EPISODE_TITLE)
  private String episodeTitle;

  public static final String SERIALIZED_NAME_ETAG = "Etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public static final String SERIALIZED_NAME_EXPOSURE_TIME = "ExposureTime";
  @SerializedName(SERIALIZED_NAME_EXPOSURE_TIME)
  private Double exposureTime;

  public static final String SERIALIZED_NAME_EXTERNAL_URLS = "ExternalUrls";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_URLS)
  private List<ExternalUrl> externalUrls;

  public static final String SERIALIZED_NAME_EXTRA_TYPE = "ExtraType";
  @SerializedName(SERIALIZED_NAME_EXTRA_TYPE)
  private String extraType;

  public static final String SERIALIZED_NAME_FOCAL_LENGTH = "FocalLength";
  @SerializedName(SERIALIZED_NAME_FOCAL_LENGTH)
  private Double focalLength;

  public static final String SERIALIZED_NAME_FORCED_SORT_NAME = "ForcedSortName";
  @SerializedName(SERIALIZED_NAME_FORCED_SORT_NAME)
  private String forcedSortName;

  public static final String SERIALIZED_NAME_GENRE_ITEMS = "GenreItems";
  @SerializedName(SERIALIZED_NAME_GENRE_ITEMS)
  private List<NameGuidPair> genreItems;

  public static final String SERIALIZED_NAME_GENRES = "Genres";
  @SerializedName(SERIALIZED_NAME_GENRES)
  private List<String> genres;

  public static final String SERIALIZED_NAME_HAS_SUBTITLES = "HasSubtitles";
  @SerializedName(SERIALIZED_NAME_HAS_SUBTITLES)
  private Boolean hasSubtitles;

  public static final String SERIALIZED_NAME_HEIGHT = "Height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private Integer height;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_IMAGE_BLUR_HASHES = "ImageBlurHashes";
  @SerializedName(SERIALIZED_NAME_IMAGE_BLUR_HASHES)
  private BaseItemDtoImageBlurHashes imageBlurHashes;

  public static final String SERIALIZED_NAME_IMAGE_ORIENTATION = "ImageOrientation";
  @SerializedName(SERIALIZED_NAME_IMAGE_ORIENTATION)
  private ImageOrientation imageOrientation;

  public static final String SERIALIZED_NAME_IMAGE_TAGS = "ImageTags";
  @SerializedName(SERIALIZED_NAME_IMAGE_TAGS)
  private Map<String, String> imageTags;

  public static final String SERIALIZED_NAME_INDEX_NUMBER = "IndexNumber";
  @SerializedName(SERIALIZED_NAME_INDEX_NUMBER)
  private Integer indexNumber;

  public static final String SERIALIZED_NAME_INDEX_NUMBER_END = "IndexNumberEnd";
  @SerializedName(SERIALIZED_NAME_INDEX_NUMBER_END)
  private Integer indexNumberEnd;

  public static final String SERIALIZED_NAME_IS_FOLDER = "IsFolder";
  @SerializedName(SERIALIZED_NAME_IS_FOLDER)
  private Boolean isFolder;

  public static final String SERIALIZED_NAME_IS_H_D = "IsHD";
  @SerializedName(SERIALIZED_NAME_IS_H_D)
  private Boolean isHD;

  public static final String SERIALIZED_NAME_IS_KIDS = "IsKids";
  @SerializedName(SERIALIZED_NAME_IS_KIDS)
  private Boolean isKids;

  public static final String SERIALIZED_NAME_IS_LIVE = "IsLive";
  @SerializedName(SERIALIZED_NAME_IS_LIVE)
  private Boolean isLive;

  public static final String SERIALIZED_NAME_IS_MOVIE = "IsMovie";
  @SerializedName(SERIALIZED_NAME_IS_MOVIE)
  private Boolean isMovie;

  public static final String SERIALIZED_NAME_IS_NEWS = "IsNews";
  @SerializedName(SERIALIZED_NAME_IS_NEWS)
  private Boolean isNews;

  public static final String SERIALIZED_NAME_IS_PLACE_HOLDER = "IsPlaceHolder";
  @SerializedName(SERIALIZED_NAME_IS_PLACE_HOLDER)
  private Boolean isPlaceHolder;

  public static final String SERIALIZED_NAME_IS_PREMIERE = "IsPremiere";
  @SerializedName(SERIALIZED_NAME_IS_PREMIERE)
  private Boolean isPremiere;

  public static final String SERIALIZED_NAME_IS_REPEAT = "IsRepeat";
  @SerializedName(SERIALIZED_NAME_IS_REPEAT)
  private Boolean isRepeat;

  public static final String SERIALIZED_NAME_IS_SERIES = "IsSeries";
  @SerializedName(SERIALIZED_NAME_IS_SERIES)
  private Boolean isSeries;

  public static final String SERIALIZED_NAME_IS_SPORTS = "IsSports";
  @SerializedName(SERIALIZED_NAME_IS_SPORTS)
  private Boolean isSports;

  public static final String SERIALIZED_NAME_ISO_SPEED_RATING = "IsoSpeedRating";
  @SerializedName(SERIALIZED_NAME_ISO_SPEED_RATING)
  private Integer isoSpeedRating;

  public static final String SERIALIZED_NAME_ISO_TYPE = "IsoType";
  @SerializedName(SERIALIZED_NAME_ISO_TYPE)
  private IsoType isoType;

  public static final String SERIALIZED_NAME_LATITUDE = "Latitude";
  @SerializedName(SERIALIZED_NAME_LATITUDE)
  private Double latitude;

  public static final String SERIALIZED_NAME_LOCAL_TRAILER_COUNT = "LocalTrailerCount";
  @SerializedName(SERIALIZED_NAME_LOCAL_TRAILER_COUNT)
  private Integer localTrailerCount;

  public static final String SERIALIZED_NAME_LOCATION_TYPE = "LocationType";
  @SerializedName(SERIALIZED_NAME_LOCATION_TYPE)
  private LocationType locationType;

  public static final String SERIALIZED_NAME_LOCK_DATA = "LockData";
  @SerializedName(SERIALIZED_NAME_LOCK_DATA)
  private Boolean lockData;

  public static final String SERIALIZED_NAME_LOCKED_FIELDS = "LockedFields";
  @SerializedName(SERIALIZED_NAME_LOCKED_FIELDS)
  private List<MetadataField> lockedFields;

  public static final String SERIALIZED_NAME_LONGITUDE = "Longitude";
  @SerializedName(SERIALIZED_NAME_LONGITUDE)
  private Double longitude;

  public static final String SERIALIZED_NAME_MEDIA_SOURCE_COUNT = "MediaSourceCount";
  @SerializedName(SERIALIZED_NAME_MEDIA_SOURCE_COUNT)
  private Integer mediaSourceCount;

  public static final String SERIALIZED_NAME_MEDIA_SOURCES = "MediaSources";
  @SerializedName(SERIALIZED_NAME_MEDIA_SOURCES)
  private List<MediaSourceInfo> mediaSources;

  public static final String SERIALIZED_NAME_MEDIA_STREAMS = "MediaStreams";
  @SerializedName(SERIALIZED_NAME_MEDIA_STREAMS)
  private List<MediaStream> mediaStreams;

  public static final String SERIALIZED_NAME_MEDIA_TYPE = "MediaType";
  @SerializedName(SERIALIZED_NAME_MEDIA_TYPE)
  private String mediaType;

  public static final String SERIALIZED_NAME_MOVIE_COUNT = "MovieCount";
  @SerializedName(SERIALIZED_NAME_MOVIE_COUNT)
  private Integer movieCount;

  public static final String SERIALIZED_NAME_MUSIC_VIDEO_COUNT = "MusicVideoCount";
  @SerializedName(SERIALIZED_NAME_MUSIC_VIDEO_COUNT)
  private Integer musicVideoCount;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NUMBER = "Number";
  @SerializedName(SERIALIZED_NAME_NUMBER)
  private String number;

  public static final String SERIALIZED_NAME_OFFICIAL_RATING = "OfficialRating";
  @SerializedName(SERIALIZED_NAME_OFFICIAL_RATING)
  private String officialRating;

  public static final String SERIALIZED_NAME_ORIGINAL_TITLE = "OriginalTitle";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_TITLE)
  private String originalTitle;

  public static final String SERIALIZED_NAME_OVERVIEW = "Overview";
  @SerializedName(SERIALIZED_NAME_OVERVIEW)
  private String overview;

  public static final String SERIALIZED_NAME_PARENT_ART_IMAGE_TAG = "ParentArtImageTag";
  @SerializedName(SERIALIZED_NAME_PARENT_ART_IMAGE_TAG)
  private String parentArtImageTag;

  public static final String SERIALIZED_NAME_PARENT_ART_ITEM_ID = "ParentArtItemId";
  @SerializedName(SERIALIZED_NAME_PARENT_ART_ITEM_ID)
  private String parentArtItemId;

  public static final String SERIALIZED_NAME_PARENT_BACKDROP_IMAGE_TAGS = "ParentBackdropImageTags";
  @SerializedName(SERIALIZED_NAME_PARENT_BACKDROP_IMAGE_TAGS)
  private List<String> parentBackdropImageTags;

  public static final String SERIALIZED_NAME_PARENT_BACKDROP_ITEM_ID = "ParentBackdropItemId";
  @SerializedName(SERIALIZED_NAME_PARENT_BACKDROP_ITEM_ID)
  private String parentBackdropItemId;

  public static final String SERIALIZED_NAME_PARENT_ID = "ParentId";
  @SerializedName(SERIALIZED_NAME_PARENT_ID)
  private UUID parentId;

  public static final String SERIALIZED_NAME_PARENT_INDEX_NUMBER = "ParentIndexNumber";
  @SerializedName(SERIALIZED_NAME_PARENT_INDEX_NUMBER)
  private Integer parentIndexNumber;

  public static final String SERIALIZED_NAME_PARENT_LOGO_IMAGE_TAG = "ParentLogoImageTag";
  @SerializedName(SERIALIZED_NAME_PARENT_LOGO_IMAGE_TAG)
  private String parentLogoImageTag;

  public static final String SERIALIZED_NAME_PARENT_LOGO_ITEM_ID = "ParentLogoItemId";
  @SerializedName(SERIALIZED_NAME_PARENT_LOGO_ITEM_ID)
  private String parentLogoItemId;

  public static final String SERIALIZED_NAME_PARENT_PRIMARY_IMAGE_ITEM_ID = "ParentPrimaryImageItemId";
  @SerializedName(SERIALIZED_NAME_PARENT_PRIMARY_IMAGE_ITEM_ID)
  private String parentPrimaryImageItemId;

  public static final String SERIALIZED_NAME_PARENT_PRIMARY_IMAGE_TAG = "ParentPrimaryImageTag";
  @SerializedName(SERIALIZED_NAME_PARENT_PRIMARY_IMAGE_TAG)
  private String parentPrimaryImageTag;

  public static final String SERIALIZED_NAME_PARENT_THUMB_IMAGE_TAG = "ParentThumbImageTag";
  @SerializedName(SERIALIZED_NAME_PARENT_THUMB_IMAGE_TAG)
  private String parentThumbImageTag;

  public static final String SERIALIZED_NAME_PARENT_THUMB_ITEM_ID = "ParentThumbItemId";
  @SerializedName(SERIALIZED_NAME_PARENT_THUMB_ITEM_ID)
  private String parentThumbItemId;

  public static final String SERIALIZED_NAME_PART_COUNT = "PartCount";
  @SerializedName(SERIALIZED_NAME_PART_COUNT)
  private Integer partCount;

  public static final String SERIALIZED_NAME_PATH = "Path";
  @SerializedName(SERIALIZED_NAME_PATH)
  private String path;

  public static final String SERIALIZED_NAME_PEOPLE = "People";
  @SerializedName(SERIALIZED_NAME_PEOPLE)
  private List<BaseItemPerson> people;

  public static final String SERIALIZED_NAME_PLAY_ACCESS = "PlayAccess";
  @SerializedName(SERIALIZED_NAME_PLAY_ACCESS)
  private PlayAccess playAccess;

  public static final String SERIALIZED_NAME_PLAYLIST_ITEM_ID = "PlaylistItemId";
  @SerializedName(SERIALIZED_NAME_PLAYLIST_ITEM_ID)
  private String playlistItemId;

  public static final String SERIALIZED_NAME_PREFERRED_METADATA_COUNTRY_CODE = "PreferredMetadataCountryCode";
  @SerializedName(SERIALIZED_NAME_PREFERRED_METADATA_COUNTRY_CODE)
  private String preferredMetadataCountryCode;

  public static final String SERIALIZED_NAME_PREFERRED_METADATA_LANGUAGE = "PreferredMetadataLanguage";
  @SerializedName(SERIALIZED_NAME_PREFERRED_METADATA_LANGUAGE)
  private String preferredMetadataLanguage;

  public static final String SERIALIZED_NAME_PREMIERE_DATE = "PremiereDate";
  @SerializedName(SERIALIZED_NAME_PREMIERE_DATE)
  private OffsetDateTime premiereDate;

  public static final String SERIALIZED_NAME_PRIMARY_IMAGE_ASPECT_RATIO = "PrimaryImageAspectRatio";
  @SerializedName(SERIALIZED_NAME_PRIMARY_IMAGE_ASPECT_RATIO)
  private Double primaryImageAspectRatio;

  public static final String SERIALIZED_NAME_PRODUCTION_LOCATIONS = "ProductionLocations";
  @SerializedName(SERIALIZED_NAME_PRODUCTION_LOCATIONS)
  private List<String> productionLocations;

  public static final String SERIALIZED_NAME_PRODUCTION_YEAR = "ProductionYear";
  @SerializedName(SERIALIZED_NAME_PRODUCTION_YEAR)
  private Integer productionYear;

  public static final String SERIALIZED_NAME_PROGRAM_COUNT = "ProgramCount";
  @SerializedName(SERIALIZED_NAME_PROGRAM_COUNT)
  private Integer programCount;

  public static final String SERIALIZED_NAME_PROGRAM_ID = "ProgramId";
  @SerializedName(SERIALIZED_NAME_PROGRAM_ID)
  private String programId;

  public static final String SERIALIZED_NAME_PROVIDER_IDS = "ProviderIds";
  @SerializedName(SERIALIZED_NAME_PROVIDER_IDS)
  private Map<String, String> providerIds;

  public static final String SERIALIZED_NAME_RECURSIVE_ITEM_COUNT = "RecursiveItemCount";
  @SerializedName(SERIALIZED_NAME_RECURSIVE_ITEM_COUNT)
  private Integer recursiveItemCount;

  public static final String SERIALIZED_NAME_REMOTE_TRAILERS = "RemoteTrailers";
  @SerializedName(SERIALIZED_NAME_REMOTE_TRAILERS)
  private List<MediaUrl> remoteTrailers;

  public static final String SERIALIZED_NAME_RUN_TIME_TICKS = "RunTimeTicks";
  @SerializedName(SERIALIZED_NAME_RUN_TIME_TICKS)
  private Long runTimeTicks;

  public static final String SERIALIZED_NAME_SCREENSHOT_IMAGE_TAGS = "ScreenshotImageTags";
  @SerializedName(SERIALIZED_NAME_SCREENSHOT_IMAGE_TAGS)
  private List<String> screenshotImageTags;

  public static final String SERIALIZED_NAME_SEASON_ID = "SeasonId";
  @SerializedName(SERIALIZED_NAME_SEASON_ID)
  private UUID seasonId;

  public static final String SERIALIZED_NAME_SEASON_NAME = "SeasonName";
  @SerializedName(SERIALIZED_NAME_SEASON_NAME)
  private String seasonName;

  public static final String SERIALIZED_NAME_SERIES_COUNT = "SeriesCount";
  @SerializedName(SERIALIZED_NAME_SERIES_COUNT)
  private Integer seriesCount;

  public static final String SERIALIZED_NAME_SERIES_ID = "SeriesId";
  @SerializedName(SERIALIZED_NAME_SERIES_ID)
  private UUID seriesId;

  public static final String SERIALIZED_NAME_SERIES_NAME = "SeriesName";
  @SerializedName(SERIALIZED_NAME_SERIES_NAME)
  private String seriesName;

  public static final String SERIALIZED_NAME_SERIES_PRIMARY_IMAGE_TAG = "SeriesPrimaryImageTag";
  @SerializedName(SERIALIZED_NAME_SERIES_PRIMARY_IMAGE_TAG)
  private String seriesPrimaryImageTag;

  public static final String SERIALIZED_NAME_SERIES_STUDIO = "SeriesStudio";
  @SerializedName(SERIALIZED_NAME_SERIES_STUDIO)
  private String seriesStudio;

  public static final String SERIALIZED_NAME_SERIES_THUMB_IMAGE_TAG = "SeriesThumbImageTag";
  @SerializedName(SERIALIZED_NAME_SERIES_THUMB_IMAGE_TAG)
  private String seriesThumbImageTag;

  public static final String SERIALIZED_NAME_SERIES_TIMER_ID = "SeriesTimerId";
  @SerializedName(SERIALIZED_NAME_SERIES_TIMER_ID)
  private String seriesTimerId;

  public static final String SERIALIZED_NAME_SERVER_ID = "ServerId";
  @SerializedName(SERIALIZED_NAME_SERVER_ID)
  private String serverId;

  public static final String SERIALIZED_NAME_SHUTTER_SPEED = "ShutterSpeed";
  @SerializedName(SERIALIZED_NAME_SHUTTER_SPEED)
  private Double shutterSpeed;

  public static final String SERIALIZED_NAME_SOFTWARE = "Software";
  @SerializedName(SERIALIZED_NAME_SOFTWARE)
  private String software;

  public static final String SERIALIZED_NAME_SONG_COUNT = "SongCount";
  @SerializedName(SERIALIZED_NAME_SONG_COUNT)
  private Integer songCount;

  public static final String SERIALIZED_NAME_SORT_NAME = "SortName";
  @SerializedName(SERIALIZED_NAME_SORT_NAME)
  private String sortName;

  public static final String SERIALIZED_NAME_SOURCE_TYPE = "SourceType";
  @SerializedName(SERIALIZED_NAME_SOURCE_TYPE)
  private String sourceType;

  public static final String SERIALIZED_NAME_SPECIAL_FEATURE_COUNT = "SpecialFeatureCount";
  @SerializedName(SERIALIZED_NAME_SPECIAL_FEATURE_COUNT)
  private Integer specialFeatureCount;

  public static final String SERIALIZED_NAME_START_DATE = "StartDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STUDIOS = "Studios";
  @SerializedName(SERIALIZED_NAME_STUDIOS)
  private List<NameGuidPair> studios;

  public static final String SERIALIZED_NAME_SUPPORTS_SYNC = "SupportsSync";
  @SerializedName(SERIALIZED_NAME_SUPPORTS_SYNC)
  private Boolean supportsSync;

  public static final String SERIALIZED_NAME_TAGLINES = "Taglines";
  @SerializedName(SERIALIZED_NAME_TAGLINES)
  private List<String> taglines;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags;

  public static final String SERIALIZED_NAME_TIMER_ID = "TimerId";
  @SerializedName(SERIALIZED_NAME_TIMER_ID)
  private String timerId;

  public static final String SERIALIZED_NAME_TRAILER_COUNT = "TrailerCount";
  @SerializedName(SERIALIZED_NAME_TRAILER_COUNT)
  private Integer trailerCount;

  public static final String SERIALIZED_NAME_TYPE = "Type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_USER_DATA = "UserData";
  @SerializedName(SERIALIZED_NAME_USER_DATA)
  private UserItemDataDto userData;

  public static final String SERIALIZED_NAME_VIDEO3_D_FORMAT = "Video3DFormat";
  @SerializedName(SERIALIZED_NAME_VIDEO3_D_FORMAT)
  private Video3DFormat video3DFormat;

  public static final String SERIALIZED_NAME_VIDEO_TYPE = "VideoType";
  @SerializedName(SERIALIZED_NAME_VIDEO_TYPE)
  private VideoType videoType;

  public static final String SERIALIZED_NAME_WIDTH = "Width";
  @SerializedName(SERIALIZED_NAME_WIDTH)
  private Integer width;

  public BaseItemDto() {
  }

  public BaseItemDto airDays(List<DayOfWeek> airDays) {
    this.airDays = airDays;
    return this;
  }

  public BaseItemDto addAirDaysItem(DayOfWeek airDaysItem) {
    if (this.airDays == null) {
      this.airDays = new ArrayList<>();
    }
    this.airDays.add(airDaysItem);
    return this;
  }

  /**
   * Gets or sets the air days.
   * @return airDays
   */
  @javax.annotation.Nullable
  public List<DayOfWeek> getAirDays() {
    return airDays;
  }

  public void setAirDays(List<DayOfWeek> airDays) {
    this.airDays = airDays;
  }


  public BaseItemDto airTime(String airTime) {
    this.airTime = airTime;
    return this;
  }

  /**
   * Gets or sets the air time.
   * @return airTime
   */
  @javax.annotation.Nullable
  public String getAirTime() {
    return airTime;
  }

  public void setAirTime(String airTime) {
    this.airTime = airTime;
  }


  public BaseItemDto airsAfterSeasonNumber(Integer airsAfterSeasonNumber) {
    this.airsAfterSeasonNumber = airsAfterSeasonNumber;
    return this;
  }

  /**
   * Get airsAfterSeasonNumber
   * @return airsAfterSeasonNumber
   */
  @javax.annotation.Nullable
  public Integer getAirsAfterSeasonNumber() {
    return airsAfterSeasonNumber;
  }

  public void setAirsAfterSeasonNumber(Integer airsAfterSeasonNumber) {
    this.airsAfterSeasonNumber = airsAfterSeasonNumber;
  }


  public BaseItemDto airsBeforeEpisodeNumber(Integer airsBeforeEpisodeNumber) {
    this.airsBeforeEpisodeNumber = airsBeforeEpisodeNumber;
    return this;
  }

  /**
   * Get airsBeforeEpisodeNumber
   * @return airsBeforeEpisodeNumber
   */
  @javax.annotation.Nullable
  public Integer getAirsBeforeEpisodeNumber() {
    return airsBeforeEpisodeNumber;
  }

  public void setAirsBeforeEpisodeNumber(Integer airsBeforeEpisodeNumber) {
    this.airsBeforeEpisodeNumber = airsBeforeEpisodeNumber;
  }


  public BaseItemDto airsBeforeSeasonNumber(Integer airsBeforeSeasonNumber) {
    this.airsBeforeSeasonNumber = airsBeforeSeasonNumber;
    return this;
  }

  /**
   * Get airsBeforeSeasonNumber
   * @return airsBeforeSeasonNumber
   */
  @javax.annotation.Nullable
  public Integer getAirsBeforeSeasonNumber() {
    return airsBeforeSeasonNumber;
  }

  public void setAirsBeforeSeasonNumber(Integer airsBeforeSeasonNumber) {
    this.airsBeforeSeasonNumber = airsBeforeSeasonNumber;
  }


  public BaseItemDto album(String album) {
    this.album = album;
    return this;
  }

  /**
   * Gets or sets the album.
   * @return album
   */
  @javax.annotation.Nullable
  public String getAlbum() {
    return album;
  }

  public void setAlbum(String album) {
    this.album = album;
  }


  public BaseItemDto albumArtist(String albumArtist) {
    this.albumArtist = albumArtist;
    return this;
  }

  /**
   * Gets or sets the album artist.
   * @return albumArtist
   */
  @javax.annotation.Nullable
  public String getAlbumArtist() {
    return albumArtist;
  }

  public void setAlbumArtist(String albumArtist) {
    this.albumArtist = albumArtist;
  }


  public BaseItemDto albumArtists(List<NameGuidPair> albumArtists) {
    this.albumArtists = albumArtists;
    return this;
  }

  public BaseItemDto addAlbumArtistsItem(NameGuidPair albumArtistsItem) {
    if (this.albumArtists == null) {
      this.albumArtists = new ArrayList<>();
    }
    this.albumArtists.add(albumArtistsItem);
    return this;
  }

  /**
   * Gets or sets the album artists.
   * @return albumArtists
   */
  @javax.annotation.Nullable
  public List<NameGuidPair> getAlbumArtists() {
    return albumArtists;
  }

  public void setAlbumArtists(List<NameGuidPair> albumArtists) {
    this.albumArtists = albumArtists;
  }


  public BaseItemDto albumCount(Integer albumCount) {
    this.albumCount = albumCount;
    return this;
  }

  /**
   * Gets or sets the album count.
   * @return albumCount
   */
  @javax.annotation.Nullable
  public Integer getAlbumCount() {
    return albumCount;
  }

  public void setAlbumCount(Integer albumCount) {
    this.albumCount = albumCount;
  }


  public BaseItemDto albumId(UUID albumId) {
    this.albumId = albumId;
    return this;
  }

  /**
   * Gets or sets the album id.
   * @return albumId
   */
  @javax.annotation.Nullable
  public UUID getAlbumId() {
    return albumId;
  }

  public void setAlbumId(UUID albumId) {
    this.albumId = albumId;
  }


  public BaseItemDto albumPrimaryImageTag(String albumPrimaryImageTag) {
    this.albumPrimaryImageTag = albumPrimaryImageTag;
    return this;
  }

  /**
   * Gets or sets the album image tag.
   * @return albumPrimaryImageTag
   */
  @javax.annotation.Nullable
  public String getAlbumPrimaryImageTag() {
    return albumPrimaryImageTag;
  }

  public void setAlbumPrimaryImageTag(String albumPrimaryImageTag) {
    this.albumPrimaryImageTag = albumPrimaryImageTag;
  }


  public BaseItemDto altitude(Double altitude) {
    this.altitude = altitude;
    return this;
  }

  /**
   * Get altitude
   * @return altitude
   */
  @javax.annotation.Nullable
  public Double getAltitude() {
    return altitude;
  }

  public void setAltitude(Double altitude) {
    this.altitude = altitude;
  }


  public BaseItemDto aperture(Double aperture) {
    this.aperture = aperture;
    return this;
  }

  /**
   * Get aperture
   * @return aperture
   */
  @javax.annotation.Nullable
  public Double getAperture() {
    return aperture;
  }

  public void setAperture(Double aperture) {
    this.aperture = aperture;
  }


  public BaseItemDto artistCount(Integer artistCount) {
    this.artistCount = artistCount;
    return this;
  }

  /**
   * Get artistCount
   * @return artistCount
   */
  @javax.annotation.Nullable
  public Integer getArtistCount() {
    return artistCount;
  }

  public void setArtistCount(Integer artistCount) {
    this.artistCount = artistCount;
  }


  public BaseItemDto artistItems(List<NameGuidPair> artistItems) {
    this.artistItems = artistItems;
    return this;
  }

  public BaseItemDto addArtistItemsItem(NameGuidPair artistItemsItem) {
    if (this.artistItems == null) {
      this.artistItems = new ArrayList<>();
    }
    this.artistItems.add(artistItemsItem);
    return this;
  }

  /**
   * Gets or sets the artist items.
   * @return artistItems
   */
  @javax.annotation.Nullable
  public List<NameGuidPair> getArtistItems() {
    return artistItems;
  }

  public void setArtistItems(List<NameGuidPair> artistItems) {
    this.artistItems = artistItems;
  }


  public BaseItemDto artists(List<String> artists) {
    this.artists = artists;
    return this;
  }

  public BaseItemDto addArtistsItem(String artistsItem) {
    if (this.artists == null) {
      this.artists = new ArrayList<>();
    }
    this.artists.add(artistsItem);
    return this;
  }

  /**
   * Gets or sets the artists.
   * @return artists
   */
  @javax.annotation.Nullable
  public List<String> getArtists() {
    return artists;
  }

  public void setArtists(List<String> artists) {
    this.artists = artists;
  }


  public BaseItemDto aspectRatio(String aspectRatio) {
    this.aspectRatio = aspectRatio;
    return this;
  }

  /**
   * Gets or sets the aspect ratio.
   * @return aspectRatio
   */
  @javax.annotation.Nullable
  public String getAspectRatio() {
    return aspectRatio;
  }

  public void setAspectRatio(String aspectRatio) {
    this.aspectRatio = aspectRatio;
  }


  public BaseItemDto audio(ProgramAudio audio) {
    this.audio = audio;
    return this;
  }

  /**
   * Get audio
   * @return audio
   */
  @javax.annotation.Nullable
  public ProgramAudio getAudio() {
    return audio;
  }

  public void setAudio(ProgramAudio audio) {
    this.audio = audio;
  }


  public BaseItemDto backdropImageTags(List<String> backdropImageTags) {
    this.backdropImageTags = backdropImageTags;
    return this;
  }

  public BaseItemDto addBackdropImageTagsItem(String backdropImageTagsItem) {
    if (this.backdropImageTags == null) {
      this.backdropImageTags = new ArrayList<>();
    }
    this.backdropImageTags.add(backdropImageTagsItem);
    return this;
  }

  /**
   * Gets or sets the backdrop image tags.
   * @return backdropImageTags
   */
  @javax.annotation.Nullable
  public List<String> getBackdropImageTags() {
    return backdropImageTags;
  }

  public void setBackdropImageTags(List<String> backdropImageTags) {
    this.backdropImageTags = backdropImageTags;
  }


  public BaseItemDto cameraMake(String cameraMake) {
    this.cameraMake = cameraMake;
    return this;
  }

  /**
   * Get cameraMake
   * @return cameraMake
   */
  @javax.annotation.Nullable
  public String getCameraMake() {
    return cameraMake;
  }

  public void setCameraMake(String cameraMake) {
    this.cameraMake = cameraMake;
  }


  public BaseItemDto cameraModel(String cameraModel) {
    this.cameraModel = cameraModel;
    return this;
  }

  /**
   * Get cameraModel
   * @return cameraModel
   */
  @javax.annotation.Nullable
  public String getCameraModel() {
    return cameraModel;
  }

  public void setCameraModel(String cameraModel) {
    this.cameraModel = cameraModel;
  }


  public BaseItemDto canDelete(Boolean canDelete) {
    this.canDelete = canDelete;
    return this;
  }

  /**
   * Get canDelete
   * @return canDelete
   */
  @javax.annotation.Nullable
  public Boolean getCanDelete() {
    return canDelete;
  }

  public void setCanDelete(Boolean canDelete) {
    this.canDelete = canDelete;
  }


  public BaseItemDto canDownload(Boolean canDownload) {
    this.canDownload = canDownload;
    return this;
  }

  /**
   * Get canDownload
   * @return canDownload
   */
  @javax.annotation.Nullable
  public Boolean getCanDownload() {
    return canDownload;
  }

  public void setCanDownload(Boolean canDownload) {
    this.canDownload = canDownload;
  }


  public BaseItemDto channelId(UUID channelId) {
    this.channelId = channelId;
    return this;
  }

  /**
   * Gets or sets the channel identifier.
   * @return channelId
   */
  @javax.annotation.Nullable
  public UUID getChannelId() {
    return channelId;
  }

  public void setChannelId(UUID channelId) {
    this.channelId = channelId;
  }


  public BaseItemDto channelName(String channelName) {
    this.channelName = channelName;
    return this;
  }

  /**
   * Get channelName
   * @return channelName
   */
  @javax.annotation.Nullable
  public String getChannelName() {
    return channelName;
  }

  public void setChannelName(String channelName) {
    this.channelName = channelName;
  }


  public BaseItemDto channelNumber(String channelNumber) {
    this.channelNumber = channelNumber;
    return this;
  }

  /**
   * Get channelNumber
   * @return channelNumber
   */
  @javax.annotation.Nullable
  public String getChannelNumber() {
    return channelNumber;
  }

  public void setChannelNumber(String channelNumber) {
    this.channelNumber = channelNumber;
  }


  public BaseItemDto channelPrimaryImageTag(String channelPrimaryImageTag) {
    this.channelPrimaryImageTag = channelPrimaryImageTag;
    return this;
  }

  /**
   * Gets or sets the channel primary image tag.
   * @return channelPrimaryImageTag
   */
  @javax.annotation.Nullable
  public String getChannelPrimaryImageTag() {
    return channelPrimaryImageTag;
  }

  public void setChannelPrimaryImageTag(String channelPrimaryImageTag) {
    this.channelPrimaryImageTag = channelPrimaryImageTag;
  }


  public BaseItemDto channelType(ChannelType channelType) {
    this.channelType = channelType;
    return this;
  }

  /**
   * Get channelType
   * @return channelType
   */
  @javax.annotation.Nullable
  public ChannelType getChannelType() {
    return channelType;
  }

  public void setChannelType(ChannelType channelType) {
    this.channelType = channelType;
  }


  public BaseItemDto chapters(List<ChapterInfo> chapters) {
    this.chapters = chapters;
    return this;
  }

  public BaseItemDto addChaptersItem(ChapterInfo chaptersItem) {
    if (this.chapters == null) {
      this.chapters = new ArrayList<>();
    }
    this.chapters.add(chaptersItem);
    return this;
  }

  /**
   * Gets or sets the chapters.
   * @return chapters
   */
  @javax.annotation.Nullable
  public List<ChapterInfo> getChapters() {
    return chapters;
  }

  public void setChapters(List<ChapterInfo> chapters) {
    this.chapters = chapters;
  }


  public BaseItemDto childCount(Integer childCount) {
    this.childCount = childCount;
    return this;
  }

  /**
   * Gets or sets the child count.
   * @return childCount
   */
  @javax.annotation.Nullable
  public Integer getChildCount() {
    return childCount;
  }

  public void setChildCount(Integer childCount) {
    this.childCount = childCount;
  }


  public BaseItemDto collectionType(String collectionType) {
    this.collectionType = collectionType;
    return this;
  }

  /**
   * Gets or sets the type of the collection.
   * @return collectionType
   */
  @javax.annotation.Nullable
  public String getCollectionType() {
    return collectionType;
  }

  public void setCollectionType(String collectionType) {
    this.collectionType = collectionType;
  }


  public BaseItemDto communityRating(Float communityRating) {
    this.communityRating = communityRating;
    return this;
  }

  /**
   * Gets or sets the community rating.
   * @return communityRating
   */
  @javax.annotation.Nullable
  public Float getCommunityRating() {
    return communityRating;
  }

  public void setCommunityRating(Float communityRating) {
    this.communityRating = communityRating;
  }


  public BaseItemDto completionPercentage(Double completionPercentage) {
    this.completionPercentage = completionPercentage;
    return this;
  }

  /**
   * Gets or sets the completion percentage.
   * @return completionPercentage
   */
  @javax.annotation.Nullable
  public Double getCompletionPercentage() {
    return completionPercentage;
  }

  public void setCompletionPercentage(Double completionPercentage) {
    this.completionPercentage = completionPercentage;
  }


  public BaseItemDto container(String container) {
    this.container = container;
    return this;
  }

  /**
   * Get container
   * @return container
   */
  @javax.annotation.Nullable
  public String getContainer() {
    return container;
  }

  public void setContainer(String container) {
    this.container = container;
  }


  public BaseItemDto criticRating(Float criticRating) {
    this.criticRating = criticRating;
    return this;
  }

  /**
   * Gets or sets the critic rating.
   * @return criticRating
   */
  @javax.annotation.Nullable
  public Float getCriticRating() {
    return criticRating;
  }

  public void setCriticRating(Float criticRating) {
    this.criticRating = criticRating;
  }


  public BaseItemDto cumulativeRunTimeTicks(Long cumulativeRunTimeTicks) {
    this.cumulativeRunTimeTicks = cumulativeRunTimeTicks;
    return this;
  }

  /**
   * Gets or sets the cumulative run time ticks.
   * @return cumulativeRunTimeTicks
   */
  @javax.annotation.Nullable
  public Long getCumulativeRunTimeTicks() {
    return cumulativeRunTimeTicks;
  }

  public void setCumulativeRunTimeTicks(Long cumulativeRunTimeTicks) {
    this.cumulativeRunTimeTicks = cumulativeRunTimeTicks;
  }


  public BaseItemDto currentProgram(BaseItemDto currentProgram) {
    this.currentProgram = currentProgram;
    return this;
  }

  /**
   * Get currentProgram
   * @return currentProgram
   */
  @javax.annotation.Nullable
  public BaseItemDto getCurrentProgram() {
    return currentProgram;
  }

  public void setCurrentProgram(BaseItemDto currentProgram) {
    this.currentProgram = currentProgram;
  }


  public BaseItemDto customRating(String customRating) {
    this.customRating = customRating;
    return this;
  }

  /**
   * Gets or sets the custom rating.
   * @return customRating
   */
  @javax.annotation.Nullable
  public String getCustomRating() {
    return customRating;
  }

  public void setCustomRating(String customRating) {
    this.customRating = customRating;
  }


  public BaseItemDto dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * Gets or sets the date created.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public BaseItemDto dateLastMediaAdded(OffsetDateTime dateLastMediaAdded) {
    this.dateLastMediaAdded = dateLastMediaAdded;
    return this;
  }

  /**
   * Get dateLastMediaAdded
   * @return dateLastMediaAdded
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateLastMediaAdded() {
    return dateLastMediaAdded;
  }

  public void setDateLastMediaAdded(OffsetDateTime dateLastMediaAdded) {
    this.dateLastMediaAdded = dateLastMediaAdded;
  }


  public BaseItemDto displayOrder(String displayOrder) {
    this.displayOrder = displayOrder;
    return this;
  }

  /**
   * Gets or sets the display order.
   * @return displayOrder
   */
  @javax.annotation.Nullable
  public String getDisplayOrder() {
    return displayOrder;
  }

  public void setDisplayOrder(String displayOrder) {
    this.displayOrder = displayOrder;
  }


  public BaseItemDto displayPreferencesId(String displayPreferencesId) {
    this.displayPreferencesId = displayPreferencesId;
    return this;
  }

  /**
   * Gets or sets the display preferences id.
   * @return displayPreferencesId
   */
  @javax.annotation.Nullable
  public String getDisplayPreferencesId() {
    return displayPreferencesId;
  }

  public void setDisplayPreferencesId(String displayPreferencesId) {
    this.displayPreferencesId = displayPreferencesId;
  }


  public BaseItemDto enableMediaSourceDisplay(Boolean enableMediaSourceDisplay) {
    this.enableMediaSourceDisplay = enableMediaSourceDisplay;
    return this;
  }

  /**
   * Get enableMediaSourceDisplay
   * @return enableMediaSourceDisplay
   */
  @javax.annotation.Nullable
  public Boolean getEnableMediaSourceDisplay() {
    return enableMediaSourceDisplay;
  }

  public void setEnableMediaSourceDisplay(Boolean enableMediaSourceDisplay) {
    this.enableMediaSourceDisplay = enableMediaSourceDisplay;
  }


  public BaseItemDto endDate(OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

  /**
   * Gets or sets the end date.
   * @return endDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }


  public BaseItemDto episodeCount(Integer episodeCount) {
    this.episodeCount = episodeCount;
    return this;
  }

  /**
   * Gets or sets the episode count.
   * @return episodeCount
   */
  @javax.annotation.Nullable
  public Integer getEpisodeCount() {
    return episodeCount;
  }

  public void setEpisodeCount(Integer episodeCount) {
    this.episodeCount = episodeCount;
  }


  public BaseItemDto episodeTitle(String episodeTitle) {
    this.episodeTitle = episodeTitle;
    return this;
  }

  /**
   * Gets or sets the episode title.
   * @return episodeTitle
   */
  @javax.annotation.Nullable
  public String getEpisodeTitle() {
    return episodeTitle;
  }

  public void setEpisodeTitle(String episodeTitle) {
    this.episodeTitle = episodeTitle;
  }


  public BaseItemDto etag(String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Gets or sets the etag.
   * @return etag
   */
  @javax.annotation.Nullable
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  public BaseItemDto exposureTime(Double exposureTime) {
    this.exposureTime = exposureTime;
    return this;
  }

  /**
   * Get exposureTime
   * @return exposureTime
   */
  @javax.annotation.Nullable
  public Double getExposureTime() {
    return exposureTime;
  }

  public void setExposureTime(Double exposureTime) {
    this.exposureTime = exposureTime;
  }


  public BaseItemDto externalUrls(List<ExternalUrl> externalUrls) {
    this.externalUrls = externalUrls;
    return this;
  }

  public BaseItemDto addExternalUrlsItem(ExternalUrl externalUrlsItem) {
    if (this.externalUrls == null) {
      this.externalUrls = new ArrayList<>();
    }
    this.externalUrls.add(externalUrlsItem);
    return this;
  }

  /**
   * Gets or sets the external urls.
   * @return externalUrls
   */
  @javax.annotation.Nullable
  public List<ExternalUrl> getExternalUrls() {
    return externalUrls;
  }

  public void setExternalUrls(List<ExternalUrl> externalUrls) {
    this.externalUrls = externalUrls;
  }


  public BaseItemDto extraType(String extraType) {
    this.extraType = extraType;
    return this;
  }

  /**
   * Get extraType
   * @return extraType
   */
  @javax.annotation.Nullable
  public String getExtraType() {
    return extraType;
  }

  public void setExtraType(String extraType) {
    this.extraType = extraType;
  }


  public BaseItemDto focalLength(Double focalLength) {
    this.focalLength = focalLength;
    return this;
  }

  /**
   * Get focalLength
   * @return focalLength
   */
  @javax.annotation.Nullable
  public Double getFocalLength() {
    return focalLength;
  }

  public void setFocalLength(Double focalLength) {
    this.focalLength = focalLength;
  }


  public BaseItemDto forcedSortName(String forcedSortName) {
    this.forcedSortName = forcedSortName;
    return this;
  }

  /**
   * Get forcedSortName
   * @return forcedSortName
   */
  @javax.annotation.Nullable
  public String getForcedSortName() {
    return forcedSortName;
  }

  public void setForcedSortName(String forcedSortName) {
    this.forcedSortName = forcedSortName;
  }


  public BaseItemDto genreItems(List<NameGuidPair> genreItems) {
    this.genreItems = genreItems;
    return this;
  }

  public BaseItemDto addGenreItemsItem(NameGuidPair genreItemsItem) {
    if (this.genreItems == null) {
      this.genreItems = new ArrayList<>();
    }
    this.genreItems.add(genreItemsItem);
    return this;
  }

  /**
   * Get genreItems
   * @return genreItems
   */
  @javax.annotation.Nullable
  public List<NameGuidPair> getGenreItems() {
    return genreItems;
  }

  public void setGenreItems(List<NameGuidPair> genreItems) {
    this.genreItems = genreItems;
  }


  public BaseItemDto genres(List<String> genres) {
    this.genres = genres;
    return this;
  }

  public BaseItemDto addGenresItem(String genresItem) {
    if (this.genres == null) {
      this.genres = new ArrayList<>();
    }
    this.genres.add(genresItem);
    return this;
  }

  /**
   * Gets or sets the genres.
   * @return genres
   */
  @javax.annotation.Nullable
  public List<String> getGenres() {
    return genres;
  }

  public void setGenres(List<String> genres) {
    this.genres = genres;
  }


  public BaseItemDto hasSubtitles(Boolean hasSubtitles) {
    this.hasSubtitles = hasSubtitles;
    return this;
  }

  /**
   * Get hasSubtitles
   * @return hasSubtitles
   */
  @javax.annotation.Nullable
  public Boolean getHasSubtitles() {
    return hasSubtitles;
  }

  public void setHasSubtitles(Boolean hasSubtitles) {
    this.hasSubtitles = hasSubtitles;
  }


  public BaseItemDto height(Integer height) {
    this.height = height;
    return this;
  }

  /**
   * Get height
   * @return height
   */
  @javax.annotation.Nullable
  public Integer getHeight() {
    return height;
  }

  public void setHeight(Integer height) {
    this.height = height;
  }


  public BaseItemDto id(UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Gets or sets the id.
   * @return id
   */
  @javax.annotation.Nullable
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }


  public BaseItemDto imageBlurHashes(BaseItemDtoImageBlurHashes imageBlurHashes) {
    this.imageBlurHashes = imageBlurHashes;
    return this;
  }

  /**
   * Get imageBlurHashes
   * @return imageBlurHashes
   */
  @javax.annotation.Nullable
  public BaseItemDtoImageBlurHashes getImageBlurHashes() {
    return imageBlurHashes;
  }

  public void setImageBlurHashes(BaseItemDtoImageBlurHashes imageBlurHashes) {
    this.imageBlurHashes = imageBlurHashes;
  }


  public BaseItemDto imageOrientation(ImageOrientation imageOrientation) {
    this.imageOrientation = imageOrientation;
    return this;
  }

  /**
   * Get imageOrientation
   * @return imageOrientation
   */
  @javax.annotation.Nullable
  public ImageOrientation getImageOrientation() {
    return imageOrientation;
  }

  public void setImageOrientation(ImageOrientation imageOrientation) {
    this.imageOrientation = imageOrientation;
  }


  public BaseItemDto imageTags(Map<String, String> imageTags) {
    this.imageTags = imageTags;
    return this;
  }

  public BaseItemDto putImageTagsItem(String key, String imageTagsItem) {
    if (this.imageTags == null) {
      this.imageTags = new HashMap<>();
    }
    this.imageTags.put(key, imageTagsItem);
    return this;
  }

  /**
   * Gets or sets the image tags.
   * @return imageTags
   */
  @javax.annotation.Nullable
  public Map<String, String> getImageTags() {
    return imageTags;
  }

  public void setImageTags(Map<String, String> imageTags) {
    this.imageTags = imageTags;
  }


  public BaseItemDto indexNumber(Integer indexNumber) {
    this.indexNumber = indexNumber;
    return this;
  }

  /**
   * Gets or sets the index number.
   * @return indexNumber
   */
  @javax.annotation.Nullable
  public Integer getIndexNumber() {
    return indexNumber;
  }

  public void setIndexNumber(Integer indexNumber) {
    this.indexNumber = indexNumber;
  }


  public BaseItemDto indexNumberEnd(Integer indexNumberEnd) {
    this.indexNumberEnd = indexNumberEnd;
    return this;
  }

  /**
   * Gets or sets the index number end.
   * @return indexNumberEnd
   */
  @javax.annotation.Nullable
  public Integer getIndexNumberEnd() {
    return indexNumberEnd;
  }

  public void setIndexNumberEnd(Integer indexNumberEnd) {
    this.indexNumberEnd = indexNumberEnd;
  }


  public BaseItemDto isFolder(Boolean isFolder) {
    this.isFolder = isFolder;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this instance is folder.
   * @return isFolder
   */
  @javax.annotation.Nullable
  public Boolean getIsFolder() {
    return isFolder;
  }

  public void setIsFolder(Boolean isFolder) {
    this.isFolder = isFolder;
  }


  public BaseItemDto isHD(Boolean isHD) {
    this.isHD = isHD;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this instance is HD.
   * @return isHD
   */
  @javax.annotation.Nullable
  public Boolean getIsHD() {
    return isHD;
  }

  public void setIsHD(Boolean isHD) {
    this.isHD = isHD;
  }


  public BaseItemDto isKids(Boolean isKids) {
    this.isKids = isKids;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this instance is kids.
   * @return isKids
   */
  @javax.annotation.Nullable
  public Boolean getIsKids() {
    return isKids;
  }

  public void setIsKids(Boolean isKids) {
    this.isKids = isKids;
  }


  public BaseItemDto isLive(Boolean isLive) {
    this.isLive = isLive;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this instance is live.
   * @return isLive
   */
  @javax.annotation.Nullable
  public Boolean getIsLive() {
    return isLive;
  }

  public void setIsLive(Boolean isLive) {
    this.isLive = isLive;
  }


  public BaseItemDto isMovie(Boolean isMovie) {
    this.isMovie = isMovie;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this instance is movie.
   * @return isMovie
   */
  @javax.annotation.Nullable
  public Boolean getIsMovie() {
    return isMovie;
  }

  public void setIsMovie(Boolean isMovie) {
    this.isMovie = isMovie;
  }


  public BaseItemDto isNews(Boolean isNews) {
    this.isNews = isNews;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this instance is news.
   * @return isNews
   */
  @javax.annotation.Nullable
  public Boolean getIsNews() {
    return isNews;
  }

  public void setIsNews(Boolean isNews) {
    this.isNews = isNews;
  }


  public BaseItemDto isPlaceHolder(Boolean isPlaceHolder) {
    this.isPlaceHolder = isPlaceHolder;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this instance is place holder.
   * @return isPlaceHolder
   */
  @javax.annotation.Nullable
  public Boolean getIsPlaceHolder() {
    return isPlaceHolder;
  }

  public void setIsPlaceHolder(Boolean isPlaceHolder) {
    this.isPlaceHolder = isPlaceHolder;
  }


  public BaseItemDto isPremiere(Boolean isPremiere) {
    this.isPremiere = isPremiere;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this instance is premiere.
   * @return isPremiere
   */
  @javax.annotation.Nullable
  public Boolean getIsPremiere() {
    return isPremiere;
  }

  public void setIsPremiere(Boolean isPremiere) {
    this.isPremiere = isPremiere;
  }


  public BaseItemDto isRepeat(Boolean isRepeat) {
    this.isRepeat = isRepeat;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this instance is repeat.
   * @return isRepeat
   */
  @javax.annotation.Nullable
  public Boolean getIsRepeat() {
    return isRepeat;
  }

  public void setIsRepeat(Boolean isRepeat) {
    this.isRepeat = isRepeat;
  }


  public BaseItemDto isSeries(Boolean isSeries) {
    this.isSeries = isSeries;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this instance is series.
   * @return isSeries
   */
  @javax.annotation.Nullable
  public Boolean getIsSeries() {
    return isSeries;
  }

  public void setIsSeries(Boolean isSeries) {
    this.isSeries = isSeries;
  }


  public BaseItemDto isSports(Boolean isSports) {
    this.isSports = isSports;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this instance is sports.
   * @return isSports
   */
  @javax.annotation.Nullable
  public Boolean getIsSports() {
    return isSports;
  }

  public void setIsSports(Boolean isSports) {
    this.isSports = isSports;
  }


  public BaseItemDto isoSpeedRating(Integer isoSpeedRating) {
    this.isoSpeedRating = isoSpeedRating;
    return this;
  }

  /**
   * Get isoSpeedRating
   * @return isoSpeedRating
   */
  @javax.annotation.Nullable
  public Integer getIsoSpeedRating() {
    return isoSpeedRating;
  }

  public void setIsoSpeedRating(Integer isoSpeedRating) {
    this.isoSpeedRating = isoSpeedRating;
  }


  public BaseItemDto isoType(IsoType isoType) {
    this.isoType = isoType;
    return this;
  }

  /**
   * Get isoType
   * @return isoType
   */
  @javax.annotation.Nullable
  public IsoType getIsoType() {
    return isoType;
  }

  public void setIsoType(IsoType isoType) {
    this.isoType = isoType;
  }


  public BaseItemDto latitude(Double latitude) {
    this.latitude = latitude;
    return this;
  }

  /**
   * Get latitude
   * @return latitude
   */
  @javax.annotation.Nullable
  public Double getLatitude() {
    return latitude;
  }

  public void setLatitude(Double latitude) {
    this.latitude = latitude;
  }


  public BaseItemDto localTrailerCount(Integer localTrailerCount) {
    this.localTrailerCount = localTrailerCount;
    return this;
  }

  /**
   * Gets or sets the local trailer count.
   * @return localTrailerCount
   */
  @javax.annotation.Nullable
  public Integer getLocalTrailerCount() {
    return localTrailerCount;
  }

  public void setLocalTrailerCount(Integer localTrailerCount) {
    this.localTrailerCount = localTrailerCount;
  }


  public BaseItemDto locationType(LocationType locationType) {
    this.locationType = locationType;
    return this;
  }

  /**
   * Get locationType
   * @return locationType
   */
  @javax.annotation.Nullable
  public LocationType getLocationType() {
    return locationType;
  }

  public void setLocationType(LocationType locationType) {
    this.locationType = locationType;
  }


  public BaseItemDto lockData(Boolean lockData) {
    this.lockData = lockData;
    return this;
  }

  /**
   * Gets or sets a value indicating whether [enable internet providers].
   * @return lockData
   */
  @javax.annotation.Nullable
  public Boolean getLockData() {
    return lockData;
  }

  public void setLockData(Boolean lockData) {
    this.lockData = lockData;
  }


  public BaseItemDto lockedFields(List<MetadataField> lockedFields) {
    this.lockedFields = lockedFields;
    return this;
  }

  public BaseItemDto addLockedFieldsItem(MetadataField lockedFieldsItem) {
    if (this.lockedFields == null) {
      this.lockedFields = new ArrayList<>();
    }
    this.lockedFields.add(lockedFieldsItem);
    return this;
  }

  /**
   * Gets or sets the locked fields.
   * @return lockedFields
   */
  @javax.annotation.Nullable
  public List<MetadataField> getLockedFields() {
    return lockedFields;
  }

  public void setLockedFields(List<MetadataField> lockedFields) {
    this.lockedFields = lockedFields;
  }


  public BaseItemDto longitude(Double longitude) {
    this.longitude = longitude;
    return this;
  }

  /**
   * Get longitude
   * @return longitude
   */
  @javax.annotation.Nullable
  public Double getLongitude() {
    return longitude;
  }

  public void setLongitude(Double longitude) {
    this.longitude = longitude;
  }


  public BaseItemDto mediaSourceCount(Integer mediaSourceCount) {
    this.mediaSourceCount = mediaSourceCount;
    return this;
  }

  /**
   * Get mediaSourceCount
   * @return mediaSourceCount
   */
  @javax.annotation.Nullable
  public Integer getMediaSourceCount() {
    return mediaSourceCount;
  }

  public void setMediaSourceCount(Integer mediaSourceCount) {
    this.mediaSourceCount = mediaSourceCount;
  }


  public BaseItemDto mediaSources(List<MediaSourceInfo> mediaSources) {
    this.mediaSources = mediaSources;
    return this;
  }

  public BaseItemDto addMediaSourcesItem(MediaSourceInfo mediaSourcesItem) {
    if (this.mediaSources == null) {
      this.mediaSources = new ArrayList<>();
    }
    this.mediaSources.add(mediaSourcesItem);
    return this;
  }

  /**
   * Gets or sets the media versions.
   * @return mediaSources
   */
  @javax.annotation.Nullable
  public List<MediaSourceInfo> getMediaSources() {
    return mediaSources;
  }

  public void setMediaSources(List<MediaSourceInfo> mediaSources) {
    this.mediaSources = mediaSources;
  }


  public BaseItemDto mediaStreams(List<MediaStream> mediaStreams) {
    this.mediaStreams = mediaStreams;
    return this;
  }

  public BaseItemDto addMediaStreamsItem(MediaStream mediaStreamsItem) {
    if (this.mediaStreams == null) {
      this.mediaStreams = new ArrayList<>();
    }
    this.mediaStreams.add(mediaStreamsItem);
    return this;
  }

  /**
   * Gets or sets the media streams.
   * @return mediaStreams
   */
  @javax.annotation.Nullable
  public List<MediaStream> getMediaStreams() {
    return mediaStreams;
  }

  public void setMediaStreams(List<MediaStream> mediaStreams) {
    this.mediaStreams = mediaStreams;
  }


  public BaseItemDto mediaType(String mediaType) {
    this.mediaType = mediaType;
    return this;
  }

  /**
   * Gets or sets the type of the media.
   * @return mediaType
   */
  @javax.annotation.Nullable
  public String getMediaType() {
    return mediaType;
  }

  public void setMediaType(String mediaType) {
    this.mediaType = mediaType;
  }


  public BaseItemDto movieCount(Integer movieCount) {
    this.movieCount = movieCount;
    return this;
  }

  /**
   * Gets or sets the movie count.
   * @return movieCount
   */
  @javax.annotation.Nullable
  public Integer getMovieCount() {
    return movieCount;
  }

  public void setMovieCount(Integer movieCount) {
    this.movieCount = movieCount;
  }


  public BaseItemDto musicVideoCount(Integer musicVideoCount) {
    this.musicVideoCount = musicVideoCount;
    return this;
  }

  /**
   * Gets or sets the music video count.
   * @return musicVideoCount
   */
  @javax.annotation.Nullable
  public Integer getMusicVideoCount() {
    return musicVideoCount;
  }

  public void setMusicVideoCount(Integer musicVideoCount) {
    this.musicVideoCount = musicVideoCount;
  }


  public BaseItemDto name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Gets or sets the name.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public BaseItemDto number(String number) {
    this.number = number;
    return this;
  }

  /**
   * Gets or sets the number.
   * @return number
   */
  @javax.annotation.Nullable
  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }


  public BaseItemDto officialRating(String officialRating) {
    this.officialRating = officialRating;
    return this;
  }

  /**
   * Gets or sets the official rating.
   * @return officialRating
   */
  @javax.annotation.Nullable
  public String getOfficialRating() {
    return officialRating;
  }

  public void setOfficialRating(String officialRating) {
    this.officialRating = officialRating;
  }


  public BaseItemDto originalTitle(String originalTitle) {
    this.originalTitle = originalTitle;
    return this;
  }

  /**
   * Get originalTitle
   * @return originalTitle
   */
  @javax.annotation.Nullable
  public String getOriginalTitle() {
    return originalTitle;
  }

  public void setOriginalTitle(String originalTitle) {
    this.originalTitle = originalTitle;
  }


  public BaseItemDto overview(String overview) {
    this.overview = overview;
    return this;
  }

  /**
   * Gets or sets the overview.
   * @return overview
   */
  @javax.annotation.Nullable
  public String getOverview() {
    return overview;
  }

  public void setOverview(String overview) {
    this.overview = overview;
  }


  public BaseItemDto parentArtImageTag(String parentArtImageTag) {
    this.parentArtImageTag = parentArtImageTag;
    return this;
  }

  /**
   * Gets or sets the parent art image tag.
   * @return parentArtImageTag
   */
  @javax.annotation.Nullable
  public String getParentArtImageTag() {
    return parentArtImageTag;
  }

  public void setParentArtImageTag(String parentArtImageTag) {
    this.parentArtImageTag = parentArtImageTag;
  }


  public BaseItemDto parentArtItemId(String parentArtItemId) {
    this.parentArtItemId = parentArtItemId;
    return this;
  }

  /**
   * If the item does not have a art, this will hold the Id of the Parent that has one.
   * @return parentArtItemId
   */
  @javax.annotation.Nullable
  public String getParentArtItemId() {
    return parentArtItemId;
  }

  public void setParentArtItemId(String parentArtItemId) {
    this.parentArtItemId = parentArtItemId;
  }


  public BaseItemDto parentBackdropImageTags(List<String> parentBackdropImageTags) {
    this.parentBackdropImageTags = parentBackdropImageTags;
    return this;
  }

  public BaseItemDto addParentBackdropImageTagsItem(String parentBackdropImageTagsItem) {
    if (this.parentBackdropImageTags == null) {
      this.parentBackdropImageTags = new ArrayList<>();
    }
    this.parentBackdropImageTags.add(parentBackdropImageTagsItem);
    return this;
  }

  /**
   * Gets or sets the parent backdrop image tags.
   * @return parentBackdropImageTags
   */
  @javax.annotation.Nullable
  public List<String> getParentBackdropImageTags() {
    return parentBackdropImageTags;
  }

  public void setParentBackdropImageTags(List<String> parentBackdropImageTags) {
    this.parentBackdropImageTags = parentBackdropImageTags;
  }


  public BaseItemDto parentBackdropItemId(String parentBackdropItemId) {
    this.parentBackdropItemId = parentBackdropItemId;
    return this;
  }

  /**
   * If the item does not have any backdrops, this will hold the Id of the Parent that has one.
   * @return parentBackdropItemId
   */
  @javax.annotation.Nullable
  public String getParentBackdropItemId() {
    return parentBackdropItemId;
  }

  public void setParentBackdropItemId(String parentBackdropItemId) {
    this.parentBackdropItemId = parentBackdropItemId;
  }


  public BaseItemDto parentId(UUID parentId) {
    this.parentId = parentId;
    return this;
  }

  /**
   * Gets or sets the parent id.
   * @return parentId
   */
  @javax.annotation.Nullable
  public UUID getParentId() {
    return parentId;
  }

  public void setParentId(UUID parentId) {
    this.parentId = parentId;
  }


  public BaseItemDto parentIndexNumber(Integer parentIndexNumber) {
    this.parentIndexNumber = parentIndexNumber;
    return this;
  }

  /**
   * Gets or sets the parent index number.
   * @return parentIndexNumber
   */
  @javax.annotation.Nullable
  public Integer getParentIndexNumber() {
    return parentIndexNumber;
  }

  public void setParentIndexNumber(Integer parentIndexNumber) {
    this.parentIndexNumber = parentIndexNumber;
  }


  public BaseItemDto parentLogoImageTag(String parentLogoImageTag) {
    this.parentLogoImageTag = parentLogoImageTag;
    return this;
  }

  /**
   * Gets or sets the parent logo image tag.
   * @return parentLogoImageTag
   */
  @javax.annotation.Nullable
  public String getParentLogoImageTag() {
    return parentLogoImageTag;
  }

  public void setParentLogoImageTag(String parentLogoImageTag) {
    this.parentLogoImageTag = parentLogoImageTag;
  }


  public BaseItemDto parentLogoItemId(String parentLogoItemId) {
    this.parentLogoItemId = parentLogoItemId;
    return this;
  }

  /**
   * If the item does not have a logo, this will hold the Id of the Parent that has one.
   * @return parentLogoItemId
   */
  @javax.annotation.Nullable
  public String getParentLogoItemId() {
    return parentLogoItemId;
  }

  public void setParentLogoItemId(String parentLogoItemId) {
    this.parentLogoItemId = parentLogoItemId;
  }


  public BaseItemDto parentPrimaryImageItemId(String parentPrimaryImageItemId) {
    this.parentPrimaryImageItemId = parentPrimaryImageItemId;
    return this;
  }

  /**
   * Gets or sets the parent primary image item identifier.
   * @return parentPrimaryImageItemId
   */
  @javax.annotation.Nullable
  public String getParentPrimaryImageItemId() {
    return parentPrimaryImageItemId;
  }

  public void setParentPrimaryImageItemId(String parentPrimaryImageItemId) {
    this.parentPrimaryImageItemId = parentPrimaryImageItemId;
  }


  public BaseItemDto parentPrimaryImageTag(String parentPrimaryImageTag) {
    this.parentPrimaryImageTag = parentPrimaryImageTag;
    return this;
  }

  /**
   * Gets or sets the parent primary image tag.
   * @return parentPrimaryImageTag
   */
  @javax.annotation.Nullable
  public String getParentPrimaryImageTag() {
    return parentPrimaryImageTag;
  }

  public void setParentPrimaryImageTag(String parentPrimaryImageTag) {
    this.parentPrimaryImageTag = parentPrimaryImageTag;
  }


  public BaseItemDto parentThumbImageTag(String parentThumbImageTag) {
    this.parentThumbImageTag = parentThumbImageTag;
    return this;
  }

  /**
   * Gets or sets the parent thumb image tag.
   * @return parentThumbImageTag
   */
  @javax.annotation.Nullable
  public String getParentThumbImageTag() {
    return parentThumbImageTag;
  }

  public void setParentThumbImageTag(String parentThumbImageTag) {
    this.parentThumbImageTag = parentThumbImageTag;
  }


  public BaseItemDto parentThumbItemId(String parentThumbItemId) {
    this.parentThumbItemId = parentThumbItemId;
    return this;
  }

  /**
   * Gets or sets the parent thumb item id.
   * @return parentThumbItemId
   */
  @javax.annotation.Nullable
  public String getParentThumbItemId() {
    return parentThumbItemId;
  }

  public void setParentThumbItemId(String parentThumbItemId) {
    this.parentThumbItemId = parentThumbItemId;
  }


  public BaseItemDto partCount(Integer partCount) {
    this.partCount = partCount;
    return this;
  }

  /**
   * Gets or sets the part count.
   * @return partCount
   */
  @javax.annotation.Nullable
  public Integer getPartCount() {
    return partCount;
  }

  public void setPartCount(Integer partCount) {
    this.partCount = partCount;
  }


  public BaseItemDto path(String path) {
    this.path = path;
    return this;
  }

  /**
   * Gets or sets the path.
   * @return path
   */
  @javax.annotation.Nullable
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }


  public BaseItemDto people(List<BaseItemPerson> people) {
    this.people = people;
    return this;
  }

  public BaseItemDto addPeopleItem(BaseItemPerson peopleItem) {
    if (this.people == null) {
      this.people = new ArrayList<>();
    }
    this.people.add(peopleItem);
    return this;
  }

  /**
   * Gets or sets the people.
   * @return people
   */
  @javax.annotation.Nullable
  public List<BaseItemPerson> getPeople() {
    return people;
  }

  public void setPeople(List<BaseItemPerson> people) {
    this.people = people;
  }


  public BaseItemDto playAccess(PlayAccess playAccess) {
    this.playAccess = playAccess;
    return this;
  }

  /**
   * Get playAccess
   * @return playAccess
   */
  @javax.annotation.Nullable
  public PlayAccess getPlayAccess() {
    return playAccess;
  }

  public void setPlayAccess(PlayAccess playAccess) {
    this.playAccess = playAccess;
  }


  public BaseItemDto playlistItemId(String playlistItemId) {
    this.playlistItemId = playlistItemId;
    return this;
  }

  /**
   * Gets or sets the playlist item identifier.
   * @return playlistItemId
   */
  @javax.annotation.Nullable
  public String getPlaylistItemId() {
    return playlistItemId;
  }

  public void setPlaylistItemId(String playlistItemId) {
    this.playlistItemId = playlistItemId;
  }


  public BaseItemDto preferredMetadataCountryCode(String preferredMetadataCountryCode) {
    this.preferredMetadataCountryCode = preferredMetadataCountryCode;
    return this;
  }

  /**
   * Get preferredMetadataCountryCode
   * @return preferredMetadataCountryCode
   */
  @javax.annotation.Nullable
  public String getPreferredMetadataCountryCode() {
    return preferredMetadataCountryCode;
  }

  public void setPreferredMetadataCountryCode(String preferredMetadataCountryCode) {
    this.preferredMetadataCountryCode = preferredMetadataCountryCode;
  }


  public BaseItemDto preferredMetadataLanguage(String preferredMetadataLanguage) {
    this.preferredMetadataLanguage = preferredMetadataLanguage;
    return this;
  }

  /**
   * Get preferredMetadataLanguage
   * @return preferredMetadataLanguage
   */
  @javax.annotation.Nullable
  public String getPreferredMetadataLanguage() {
    return preferredMetadataLanguage;
  }

  public void setPreferredMetadataLanguage(String preferredMetadataLanguage) {
    this.preferredMetadataLanguage = preferredMetadataLanguage;
  }


  public BaseItemDto premiereDate(OffsetDateTime premiereDate) {
    this.premiereDate = premiereDate;
    return this;
  }

  /**
   * Gets or sets the premiere date.
   * @return premiereDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getPremiereDate() {
    return premiereDate;
  }

  public void setPremiereDate(OffsetDateTime premiereDate) {
    this.premiereDate = premiereDate;
  }


  public BaseItemDto primaryImageAspectRatio(Double primaryImageAspectRatio) {
    this.primaryImageAspectRatio = primaryImageAspectRatio;
    return this;
  }

  /**
   * Gets or sets the primary image aspect ratio, after image enhancements.
   * @return primaryImageAspectRatio
   */
  @javax.annotation.Nullable
  public Double getPrimaryImageAspectRatio() {
    return primaryImageAspectRatio;
  }

  public void setPrimaryImageAspectRatio(Double primaryImageAspectRatio) {
    this.primaryImageAspectRatio = primaryImageAspectRatio;
  }


  public BaseItemDto productionLocations(List<String> productionLocations) {
    this.productionLocations = productionLocations;
    return this;
  }

  public BaseItemDto addProductionLocationsItem(String productionLocationsItem) {
    if (this.productionLocations == null) {
      this.productionLocations = new ArrayList<>();
    }
    this.productionLocations.add(productionLocationsItem);
    return this;
  }

  /**
   * Get productionLocations
   * @return productionLocations
   */
  @javax.annotation.Nullable
  public List<String> getProductionLocations() {
    return productionLocations;
  }

  public void setProductionLocations(List<String> productionLocations) {
    this.productionLocations = productionLocations;
  }


  public BaseItemDto productionYear(Integer productionYear) {
    this.productionYear = productionYear;
    return this;
  }

  /**
   * Gets or sets the production year.
   * @return productionYear
   */
  @javax.annotation.Nullable
  public Integer getProductionYear() {
    return productionYear;
  }

  public void setProductionYear(Integer productionYear) {
    this.productionYear = productionYear;
  }


  public BaseItemDto programCount(Integer programCount) {
    this.programCount = programCount;
    return this;
  }

  /**
   * Get programCount
   * @return programCount
   */
  @javax.annotation.Nullable
  public Integer getProgramCount() {
    return programCount;
  }

  public void setProgramCount(Integer programCount) {
    this.programCount = programCount;
  }


  public BaseItemDto programId(String programId) {
    this.programId = programId;
    return this;
  }

  /**
   * Gets or sets the program identifier.
   * @return programId
   */
  @javax.annotation.Nullable
  public String getProgramId() {
    return programId;
  }

  public void setProgramId(String programId) {
    this.programId = programId;
  }


  public BaseItemDto providerIds(Map<String, String> providerIds) {
    this.providerIds = providerIds;
    return this;
  }

  public BaseItemDto putProviderIdsItem(String key, String providerIdsItem) {
    if (this.providerIds == null) {
      this.providerIds = new HashMap<>();
    }
    this.providerIds.put(key, providerIdsItem);
    return this;
  }

  /**
   * Gets or sets the provider ids.
   * @return providerIds
   */
  @javax.annotation.Nullable
  public Map<String, String> getProviderIds() {
    return providerIds;
  }

  public void setProviderIds(Map<String, String> providerIds) {
    this.providerIds = providerIds;
  }


  public BaseItemDto recursiveItemCount(Integer recursiveItemCount) {
    this.recursiveItemCount = recursiveItemCount;
    return this;
  }

  /**
   * Gets or sets the recursive item count.
   * @return recursiveItemCount
   */
  @javax.annotation.Nullable
  public Integer getRecursiveItemCount() {
    return recursiveItemCount;
  }

  public void setRecursiveItemCount(Integer recursiveItemCount) {
    this.recursiveItemCount = recursiveItemCount;
  }


  public BaseItemDto remoteTrailers(List<MediaUrl> remoteTrailers) {
    this.remoteTrailers = remoteTrailers;
    return this;
  }

  public BaseItemDto addRemoteTrailersItem(MediaUrl remoteTrailersItem) {
    if (this.remoteTrailers == null) {
      this.remoteTrailers = new ArrayList<>();
    }
    this.remoteTrailers.add(remoteTrailersItem);
    return this;
  }

  /**
   * Gets or sets the trailer urls.
   * @return remoteTrailers
   */
  @javax.annotation.Nullable
  public List<MediaUrl> getRemoteTrailers() {
    return remoteTrailers;
  }

  public void setRemoteTrailers(List<MediaUrl> remoteTrailers) {
    this.remoteTrailers = remoteTrailers;
  }


  public BaseItemDto runTimeTicks(Long runTimeTicks) {
    this.runTimeTicks = runTimeTicks;
    return this;
  }

  /**
   * Gets or sets the run time ticks.
   * @return runTimeTicks
   */
  @javax.annotation.Nullable
  public Long getRunTimeTicks() {
    return runTimeTicks;
  }

  public void setRunTimeTicks(Long runTimeTicks) {
    this.runTimeTicks = runTimeTicks;
  }


  public BaseItemDto screenshotImageTags(List<String> screenshotImageTags) {
    this.screenshotImageTags = screenshotImageTags;
    return this;
  }

  public BaseItemDto addScreenshotImageTagsItem(String screenshotImageTagsItem) {
    if (this.screenshotImageTags == null) {
      this.screenshotImageTags = new ArrayList<>();
    }
    this.screenshotImageTags.add(screenshotImageTagsItem);
    return this;
  }

  /**
   * Gets or sets the screenshot image tags.
   * @return screenshotImageTags
   */
  @javax.annotation.Nullable
  public List<String> getScreenshotImageTags() {
    return screenshotImageTags;
  }

  public void setScreenshotImageTags(List<String> screenshotImageTags) {
    this.screenshotImageTags = screenshotImageTags;
  }


  public BaseItemDto seasonId(UUID seasonId) {
    this.seasonId = seasonId;
    return this;
  }

  /**
   * Gets or sets the season identifier.
   * @return seasonId
   */
  @javax.annotation.Nullable
  public UUID getSeasonId() {
    return seasonId;
  }

  public void setSeasonId(UUID seasonId) {
    this.seasonId = seasonId;
  }


  public BaseItemDto seasonName(String seasonName) {
    this.seasonName = seasonName;
    return this;
  }

  /**
   * Gets or sets the name of the season.
   * @return seasonName
   */
  @javax.annotation.Nullable
  public String getSeasonName() {
    return seasonName;
  }

  public void setSeasonName(String seasonName) {
    this.seasonName = seasonName;
  }


  public BaseItemDto seriesCount(Integer seriesCount) {
    this.seriesCount = seriesCount;
    return this;
  }

  /**
   * Gets or sets the series count.
   * @return seriesCount
   */
  @javax.annotation.Nullable
  public Integer getSeriesCount() {
    return seriesCount;
  }

  public void setSeriesCount(Integer seriesCount) {
    this.seriesCount = seriesCount;
  }


  public BaseItemDto seriesId(UUID seriesId) {
    this.seriesId = seriesId;
    return this;
  }

  /**
   * Gets or sets the series id.
   * @return seriesId
   */
  @javax.annotation.Nullable
  public UUID getSeriesId() {
    return seriesId;
  }

  public void setSeriesId(UUID seriesId) {
    this.seriesId = seriesId;
  }


  public BaseItemDto seriesName(String seriesName) {
    this.seriesName = seriesName;
    return this;
  }

  /**
   * Gets or sets the name of the series.
   * @return seriesName
   */
  @javax.annotation.Nullable
  public String getSeriesName() {
    return seriesName;
  }

  public void setSeriesName(String seriesName) {
    this.seriesName = seriesName;
  }


  public BaseItemDto seriesPrimaryImageTag(String seriesPrimaryImageTag) {
    this.seriesPrimaryImageTag = seriesPrimaryImageTag;
    return this;
  }

  /**
   * Gets or sets the series primary image tag.
   * @return seriesPrimaryImageTag
   */
  @javax.annotation.Nullable
  public String getSeriesPrimaryImageTag() {
    return seriesPrimaryImageTag;
  }

  public void setSeriesPrimaryImageTag(String seriesPrimaryImageTag) {
    this.seriesPrimaryImageTag = seriesPrimaryImageTag;
  }


  public BaseItemDto seriesStudio(String seriesStudio) {
    this.seriesStudio = seriesStudio;
    return this;
  }

  /**
   * Gets or sets the series studio.
   * @return seriesStudio
   */
  @javax.annotation.Nullable
  public String getSeriesStudio() {
    return seriesStudio;
  }

  public void setSeriesStudio(String seriesStudio) {
    this.seriesStudio = seriesStudio;
  }


  public BaseItemDto seriesThumbImageTag(String seriesThumbImageTag) {
    this.seriesThumbImageTag = seriesThumbImageTag;
    return this;
  }

  /**
   * Gets or sets the series thumb image tag.
   * @return seriesThumbImageTag
   */
  @javax.annotation.Nullable
  public String getSeriesThumbImageTag() {
    return seriesThumbImageTag;
  }

  public void setSeriesThumbImageTag(String seriesThumbImageTag) {
    this.seriesThumbImageTag = seriesThumbImageTag;
  }


  public BaseItemDto seriesTimerId(String seriesTimerId) {
    this.seriesTimerId = seriesTimerId;
    return this;
  }

  /**
   * Gets or sets the series timer identifier.
   * @return seriesTimerId
   */
  @javax.annotation.Nullable
  public String getSeriesTimerId() {
    return seriesTimerId;
  }

  public void setSeriesTimerId(String seriesTimerId) {
    this.seriesTimerId = seriesTimerId;
  }


  public BaseItemDto serverId(String serverId) {
    this.serverId = serverId;
    return this;
  }

  /**
   * Gets or sets the server identifier.
   * @return serverId
   */
  @javax.annotation.Nullable
  public String getServerId() {
    return serverId;
  }

  public void setServerId(String serverId) {
    this.serverId = serverId;
  }


  public BaseItemDto shutterSpeed(Double shutterSpeed) {
    this.shutterSpeed = shutterSpeed;
    return this;
  }

  /**
   * Get shutterSpeed
   * @return shutterSpeed
   */
  @javax.annotation.Nullable
  public Double getShutterSpeed() {
    return shutterSpeed;
  }

  public void setShutterSpeed(Double shutterSpeed) {
    this.shutterSpeed = shutterSpeed;
  }


  public BaseItemDto software(String software) {
    this.software = software;
    return this;
  }

  /**
   * Get software
   * @return software
   */
  @javax.annotation.Nullable
  public String getSoftware() {
    return software;
  }

  public void setSoftware(String software) {
    this.software = software;
  }


  public BaseItemDto songCount(Integer songCount) {
    this.songCount = songCount;
    return this;
  }

  /**
   * Gets or sets the song count.
   * @return songCount
   */
  @javax.annotation.Nullable
  public Integer getSongCount() {
    return songCount;
  }

  public void setSongCount(Integer songCount) {
    this.songCount = songCount;
  }


  public BaseItemDto sortName(String sortName) {
    this.sortName = sortName;
    return this;
  }

  /**
   * Gets or sets the name of the sort.
   * @return sortName
   */
  @javax.annotation.Nullable
  public String getSortName() {
    return sortName;
  }

  public void setSortName(String sortName) {
    this.sortName = sortName;
  }


  public BaseItemDto sourceType(String sourceType) {
    this.sourceType = sourceType;
    return this;
  }

  /**
   * Gets or sets the type of the source.
   * @return sourceType
   */
  @javax.annotation.Nullable
  public String getSourceType() {
    return sourceType;
  }

  public void setSourceType(String sourceType) {
    this.sourceType = sourceType;
  }


  public BaseItemDto specialFeatureCount(Integer specialFeatureCount) {
    this.specialFeatureCount = specialFeatureCount;
    return this;
  }

  /**
   * Gets or sets the special feature count.
   * @return specialFeatureCount
   */
  @javax.annotation.Nullable
  public Integer getSpecialFeatureCount() {
    return specialFeatureCount;
  }

  public void setSpecialFeatureCount(Integer specialFeatureCount) {
    this.specialFeatureCount = specialFeatureCount;
  }


  public BaseItemDto startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * The start date of the recording, in UTC.
   * @return startDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public BaseItemDto status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Gets or sets the status.
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public BaseItemDto studios(List<NameGuidPair> studios) {
    this.studios = studios;
    return this;
  }

  public BaseItemDto addStudiosItem(NameGuidPair studiosItem) {
    if (this.studios == null) {
      this.studios = new ArrayList<>();
    }
    this.studios.add(studiosItem);
    return this;
  }

  /**
   * Gets or sets the studios.
   * @return studios
   */
  @javax.annotation.Nullable
  public List<NameGuidPair> getStudios() {
    return studios;
  }

  public void setStudios(List<NameGuidPair> studios) {
    this.studios = studios;
  }


  public BaseItemDto supportsSync(Boolean supportsSync) {
    this.supportsSync = supportsSync;
    return this;
  }

  /**
   * Gets or sets a value indicating whether [supports synchronize].
   * @return supportsSync
   */
  @javax.annotation.Nullable
  public Boolean getSupportsSync() {
    return supportsSync;
  }

  public void setSupportsSync(Boolean supportsSync) {
    this.supportsSync = supportsSync;
  }


  public BaseItemDto taglines(List<String> taglines) {
    this.taglines = taglines;
    return this;
  }

  public BaseItemDto addTaglinesItem(String taglinesItem) {
    if (this.taglines == null) {
      this.taglines = new ArrayList<>();
    }
    this.taglines.add(taglinesItem);
    return this;
  }

  /**
   * Gets or sets the taglines.
   * @return taglines
   */
  @javax.annotation.Nullable
  public List<String> getTaglines() {
    return taglines;
  }

  public void setTaglines(List<String> taglines) {
    this.taglines = taglines;
  }


  public BaseItemDto tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public BaseItemDto addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * Gets or sets the tags.
   * @return tags
   */
  @javax.annotation.Nullable
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public BaseItemDto timerId(String timerId) {
    this.timerId = timerId;
    return this;
  }

  /**
   * Gets or sets the timer identifier.
   * @return timerId
   */
  @javax.annotation.Nullable
  public String getTimerId() {
    return timerId;
  }

  public void setTimerId(String timerId) {
    this.timerId = timerId;
  }


  public BaseItemDto trailerCount(Integer trailerCount) {
    this.trailerCount = trailerCount;
    return this;
  }

  /**
   * Gets or sets the trailer count.
   * @return trailerCount
   */
  @javax.annotation.Nullable
  public Integer getTrailerCount() {
    return trailerCount;
  }

  public void setTrailerCount(Integer trailerCount) {
    this.trailerCount = trailerCount;
  }


  public BaseItemDto type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Gets or sets the type.
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public BaseItemDto userData(UserItemDataDto userData) {
    this.userData = userData;
    return this;
  }

  /**
   * Get userData
   * @return userData
   */
  @javax.annotation.Nullable
  public UserItemDataDto getUserData() {
    return userData;
  }

  public void setUserData(UserItemDataDto userData) {
    this.userData = userData;
  }


  public BaseItemDto video3DFormat(Video3DFormat video3DFormat) {
    this.video3DFormat = video3DFormat;
    return this;
  }

  /**
   * Get video3DFormat
   * @return video3DFormat
   */
  @javax.annotation.Nullable
  public Video3DFormat getVideo3DFormat() {
    return video3DFormat;
  }

  public void setVideo3DFormat(Video3DFormat video3DFormat) {
    this.video3DFormat = video3DFormat;
  }


  public BaseItemDto videoType(VideoType videoType) {
    this.videoType = videoType;
    return this;
  }

  /**
   * Get videoType
   * @return videoType
   */
  @javax.annotation.Nullable
  public VideoType getVideoType() {
    return videoType;
  }

  public void setVideoType(VideoType videoType) {
    this.videoType = videoType;
  }


  public BaseItemDto width(Integer width) {
    this.width = width;
    return this;
  }

  /**
   * Get width
   * @return width
   */
  @javax.annotation.Nullable
  public Integer getWidth() {
    return width;
  }

  public void setWidth(Integer width) {
    this.width = width;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BaseItemDto baseItemDto = (BaseItemDto) o;
    return Objects.equals(this.airDays, baseItemDto.airDays) &&
        Objects.equals(this.airTime, baseItemDto.airTime) &&
        Objects.equals(this.airsAfterSeasonNumber, baseItemDto.airsAfterSeasonNumber) &&
        Objects.equals(this.airsBeforeEpisodeNumber, baseItemDto.airsBeforeEpisodeNumber) &&
        Objects.equals(this.airsBeforeSeasonNumber, baseItemDto.airsBeforeSeasonNumber) &&
        Objects.equals(this.album, baseItemDto.album) &&
        Objects.equals(this.albumArtist, baseItemDto.albumArtist) &&
        Objects.equals(this.albumArtists, baseItemDto.albumArtists) &&
        Objects.equals(this.albumCount, baseItemDto.albumCount) &&
        Objects.equals(this.albumId, baseItemDto.albumId) &&
        Objects.equals(this.albumPrimaryImageTag, baseItemDto.albumPrimaryImageTag) &&
        Objects.equals(this.altitude, baseItemDto.altitude) &&
        Objects.equals(this.aperture, baseItemDto.aperture) &&
        Objects.equals(this.artistCount, baseItemDto.artistCount) &&
        Objects.equals(this.artistItems, baseItemDto.artistItems) &&
        Objects.equals(this.artists, baseItemDto.artists) &&
        Objects.equals(this.aspectRatio, baseItemDto.aspectRatio) &&
        Objects.equals(this.audio, baseItemDto.audio) &&
        Objects.equals(this.backdropImageTags, baseItemDto.backdropImageTags) &&
        Objects.equals(this.cameraMake, baseItemDto.cameraMake) &&
        Objects.equals(this.cameraModel, baseItemDto.cameraModel) &&
        Objects.equals(this.canDelete, baseItemDto.canDelete) &&
        Objects.equals(this.canDownload, baseItemDto.canDownload) &&
        Objects.equals(this.channelId, baseItemDto.channelId) &&
        Objects.equals(this.channelName, baseItemDto.channelName) &&
        Objects.equals(this.channelNumber, baseItemDto.channelNumber) &&
        Objects.equals(this.channelPrimaryImageTag, baseItemDto.channelPrimaryImageTag) &&
        Objects.equals(this.channelType, baseItemDto.channelType) &&
        Objects.equals(this.chapters, baseItemDto.chapters) &&
        Objects.equals(this.childCount, baseItemDto.childCount) &&
        Objects.equals(this.collectionType, baseItemDto.collectionType) &&
        Objects.equals(this.communityRating, baseItemDto.communityRating) &&
        Objects.equals(this.completionPercentage, baseItemDto.completionPercentage) &&
        Objects.equals(this.container, baseItemDto.container) &&
        Objects.equals(this.criticRating, baseItemDto.criticRating) &&
        Objects.equals(this.cumulativeRunTimeTicks, baseItemDto.cumulativeRunTimeTicks) &&
        Objects.equals(this.currentProgram, baseItemDto.currentProgram) &&
        Objects.equals(this.customRating, baseItemDto.customRating) &&
        Objects.equals(this.dateCreated, baseItemDto.dateCreated) &&
        Objects.equals(this.dateLastMediaAdded, baseItemDto.dateLastMediaAdded) &&
        Objects.equals(this.displayOrder, baseItemDto.displayOrder) &&
        Objects.equals(this.displayPreferencesId, baseItemDto.displayPreferencesId) &&
        Objects.equals(this.enableMediaSourceDisplay, baseItemDto.enableMediaSourceDisplay) &&
        Objects.equals(this.endDate, baseItemDto.endDate) &&
        Objects.equals(this.episodeCount, baseItemDto.episodeCount) &&
        Objects.equals(this.episodeTitle, baseItemDto.episodeTitle) &&
        Objects.equals(this.etag, baseItemDto.etag) &&
        Objects.equals(this.exposureTime, baseItemDto.exposureTime) &&
        Objects.equals(this.externalUrls, baseItemDto.externalUrls) &&
        Objects.equals(this.extraType, baseItemDto.extraType) &&
        Objects.equals(this.focalLength, baseItemDto.focalLength) &&
        Objects.equals(this.forcedSortName, baseItemDto.forcedSortName) &&
        Objects.equals(this.genreItems, baseItemDto.genreItems) &&
        Objects.equals(this.genres, baseItemDto.genres) &&
        Objects.equals(this.hasSubtitles, baseItemDto.hasSubtitles) &&
        Objects.equals(this.height, baseItemDto.height) &&
        Objects.equals(this.id, baseItemDto.id) &&
        Objects.equals(this.imageBlurHashes, baseItemDto.imageBlurHashes) &&
        Objects.equals(this.imageOrientation, baseItemDto.imageOrientation) &&
        Objects.equals(this.imageTags, baseItemDto.imageTags) &&
        Objects.equals(this.indexNumber, baseItemDto.indexNumber) &&
        Objects.equals(this.indexNumberEnd, baseItemDto.indexNumberEnd) &&
        Objects.equals(this.isFolder, baseItemDto.isFolder) &&
        Objects.equals(this.isHD, baseItemDto.isHD) &&
        Objects.equals(this.isKids, baseItemDto.isKids) &&
        Objects.equals(this.isLive, baseItemDto.isLive) &&
        Objects.equals(this.isMovie, baseItemDto.isMovie) &&
        Objects.equals(this.isNews, baseItemDto.isNews) &&
        Objects.equals(this.isPlaceHolder, baseItemDto.isPlaceHolder) &&
        Objects.equals(this.isPremiere, baseItemDto.isPremiere) &&
        Objects.equals(this.isRepeat, baseItemDto.isRepeat) &&
        Objects.equals(this.isSeries, baseItemDto.isSeries) &&
        Objects.equals(this.isSports, baseItemDto.isSports) &&
        Objects.equals(this.isoSpeedRating, baseItemDto.isoSpeedRating) &&
        Objects.equals(this.isoType, baseItemDto.isoType) &&
        Objects.equals(this.latitude, baseItemDto.latitude) &&
        Objects.equals(this.localTrailerCount, baseItemDto.localTrailerCount) &&
        Objects.equals(this.locationType, baseItemDto.locationType) &&
        Objects.equals(this.lockData, baseItemDto.lockData) &&
        Objects.equals(this.lockedFields, baseItemDto.lockedFields) &&
        Objects.equals(this.longitude, baseItemDto.longitude) &&
        Objects.equals(this.mediaSourceCount, baseItemDto.mediaSourceCount) &&
        Objects.equals(this.mediaSources, baseItemDto.mediaSources) &&
        Objects.equals(this.mediaStreams, baseItemDto.mediaStreams) &&
        Objects.equals(this.mediaType, baseItemDto.mediaType) &&
        Objects.equals(this.movieCount, baseItemDto.movieCount) &&
        Objects.equals(this.musicVideoCount, baseItemDto.musicVideoCount) &&
        Objects.equals(this.name, baseItemDto.name) &&
        Objects.equals(this.number, baseItemDto.number) &&
        Objects.equals(this.officialRating, baseItemDto.officialRating) &&
        Objects.equals(this.originalTitle, baseItemDto.originalTitle) &&
        Objects.equals(this.overview, baseItemDto.overview) &&
        Objects.equals(this.parentArtImageTag, baseItemDto.parentArtImageTag) &&
        Objects.equals(this.parentArtItemId, baseItemDto.parentArtItemId) &&
        Objects.equals(this.parentBackdropImageTags, baseItemDto.parentBackdropImageTags) &&
        Objects.equals(this.parentBackdropItemId, baseItemDto.parentBackdropItemId) &&
        Objects.equals(this.parentId, baseItemDto.parentId) &&
        Objects.equals(this.parentIndexNumber, baseItemDto.parentIndexNumber) &&
        Objects.equals(this.parentLogoImageTag, baseItemDto.parentLogoImageTag) &&
        Objects.equals(this.parentLogoItemId, baseItemDto.parentLogoItemId) &&
        Objects.equals(this.parentPrimaryImageItemId, baseItemDto.parentPrimaryImageItemId) &&
        Objects.equals(this.parentPrimaryImageTag, baseItemDto.parentPrimaryImageTag) &&
        Objects.equals(this.parentThumbImageTag, baseItemDto.parentThumbImageTag) &&
        Objects.equals(this.parentThumbItemId, baseItemDto.parentThumbItemId) &&
        Objects.equals(this.partCount, baseItemDto.partCount) &&
        Objects.equals(this.path, baseItemDto.path) &&
        Objects.equals(this.people, baseItemDto.people) &&
        Objects.equals(this.playAccess, baseItemDto.playAccess) &&
        Objects.equals(this.playlistItemId, baseItemDto.playlistItemId) &&
        Objects.equals(this.preferredMetadataCountryCode, baseItemDto.preferredMetadataCountryCode) &&
        Objects.equals(this.preferredMetadataLanguage, baseItemDto.preferredMetadataLanguage) &&
        Objects.equals(this.premiereDate, baseItemDto.premiereDate) &&
        Objects.equals(this.primaryImageAspectRatio, baseItemDto.primaryImageAspectRatio) &&
        Objects.equals(this.productionLocations, baseItemDto.productionLocations) &&
        Objects.equals(this.productionYear, baseItemDto.productionYear) &&
        Objects.equals(this.programCount, baseItemDto.programCount) &&
        Objects.equals(this.programId, baseItemDto.programId) &&
        Objects.equals(this.providerIds, baseItemDto.providerIds) &&
        Objects.equals(this.recursiveItemCount, baseItemDto.recursiveItemCount) &&
        Objects.equals(this.remoteTrailers, baseItemDto.remoteTrailers) &&
        Objects.equals(this.runTimeTicks, baseItemDto.runTimeTicks) &&
        Objects.equals(this.screenshotImageTags, baseItemDto.screenshotImageTags) &&
        Objects.equals(this.seasonId, baseItemDto.seasonId) &&
        Objects.equals(this.seasonName, baseItemDto.seasonName) &&
        Objects.equals(this.seriesCount, baseItemDto.seriesCount) &&
        Objects.equals(this.seriesId, baseItemDto.seriesId) &&
        Objects.equals(this.seriesName, baseItemDto.seriesName) &&
        Objects.equals(this.seriesPrimaryImageTag, baseItemDto.seriesPrimaryImageTag) &&
        Objects.equals(this.seriesStudio, baseItemDto.seriesStudio) &&
        Objects.equals(this.seriesThumbImageTag, baseItemDto.seriesThumbImageTag) &&
        Objects.equals(this.seriesTimerId, baseItemDto.seriesTimerId) &&
        Objects.equals(this.serverId, baseItemDto.serverId) &&
        Objects.equals(this.shutterSpeed, baseItemDto.shutterSpeed) &&
        Objects.equals(this.software, baseItemDto.software) &&
        Objects.equals(this.songCount, baseItemDto.songCount) &&
        Objects.equals(this.sortName, baseItemDto.sortName) &&
        Objects.equals(this.sourceType, baseItemDto.sourceType) &&
        Objects.equals(this.specialFeatureCount, baseItemDto.specialFeatureCount) &&
        Objects.equals(this.startDate, baseItemDto.startDate) &&
        Objects.equals(this.status, baseItemDto.status) &&
        Objects.equals(this.studios, baseItemDto.studios) &&
        Objects.equals(this.supportsSync, baseItemDto.supportsSync) &&
        Objects.equals(this.taglines, baseItemDto.taglines) &&
        Objects.equals(this.tags, baseItemDto.tags) &&
        Objects.equals(this.timerId, baseItemDto.timerId) &&
        Objects.equals(this.trailerCount, baseItemDto.trailerCount) &&
        Objects.equals(this.type, baseItemDto.type) &&
        Objects.equals(this.userData, baseItemDto.userData) &&
        Objects.equals(this.video3DFormat, baseItemDto.video3DFormat) &&
        Objects.equals(this.videoType, baseItemDto.videoType) &&
        Objects.equals(this.width, baseItemDto.width);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(airDays, airTime, airsAfterSeasonNumber, airsBeforeEpisodeNumber, airsBeforeSeasonNumber, album, albumArtist, albumArtists, albumCount, albumId, albumPrimaryImageTag, altitude, aperture, artistCount, artistItems, artists, aspectRatio, audio, backdropImageTags, cameraMake, cameraModel, canDelete, canDownload, channelId, channelName, channelNumber, channelPrimaryImageTag, channelType, chapters, childCount, collectionType, communityRating, completionPercentage, container, criticRating, cumulativeRunTimeTicks, currentProgram, customRating, dateCreated, dateLastMediaAdded, displayOrder, displayPreferencesId, enableMediaSourceDisplay, endDate, episodeCount, episodeTitle, etag, exposureTime, externalUrls, extraType, focalLength, forcedSortName, genreItems, genres, hasSubtitles, height, id, imageBlurHashes, imageOrientation, imageTags, indexNumber, indexNumberEnd, isFolder, isHD, isKids, isLive, isMovie, isNews, isPlaceHolder, isPremiere, isRepeat, isSeries, isSports, isoSpeedRating, isoType, latitude, localTrailerCount, locationType, lockData, lockedFields, longitude, mediaSourceCount, mediaSources, mediaStreams, mediaType, movieCount, musicVideoCount, name, number, officialRating, originalTitle, overview, parentArtImageTag, parentArtItemId, parentBackdropImageTags, parentBackdropItemId, parentId, parentIndexNumber, parentLogoImageTag, parentLogoItemId, parentPrimaryImageItemId, parentPrimaryImageTag, parentThumbImageTag, parentThumbItemId, partCount, path, people, playAccess, playlistItemId, preferredMetadataCountryCode, preferredMetadataLanguage, premiereDate, primaryImageAspectRatio, productionLocations, productionYear, programCount, programId, providerIds, recursiveItemCount, remoteTrailers, runTimeTicks, screenshotImageTags, seasonId, seasonName, seriesCount, seriesId, seriesName, seriesPrimaryImageTag, seriesStudio, seriesThumbImageTag, seriesTimerId, serverId, shutterSpeed, software, songCount, sortName, sourceType, specialFeatureCount, startDate, status, studios, supportsSync, taglines, tags, timerId, trailerCount, type, userData, video3DFormat, videoType, width);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BaseItemDto {\n");
    sb.append("    airDays: ").append(toIndentedString(airDays)).append("\n");
    sb.append("    airTime: ").append(toIndentedString(airTime)).append("\n");
    sb.append("    airsAfterSeasonNumber: ").append(toIndentedString(airsAfterSeasonNumber)).append("\n");
    sb.append("    airsBeforeEpisodeNumber: ").append(toIndentedString(airsBeforeEpisodeNumber)).append("\n");
    sb.append("    airsBeforeSeasonNumber: ").append(toIndentedString(airsBeforeSeasonNumber)).append("\n");
    sb.append("    album: ").append(toIndentedString(album)).append("\n");
    sb.append("    albumArtist: ").append(toIndentedString(albumArtist)).append("\n");
    sb.append("    albumArtists: ").append(toIndentedString(albumArtists)).append("\n");
    sb.append("    albumCount: ").append(toIndentedString(albumCount)).append("\n");
    sb.append("    albumId: ").append(toIndentedString(albumId)).append("\n");
    sb.append("    albumPrimaryImageTag: ").append(toIndentedString(albumPrimaryImageTag)).append("\n");
    sb.append("    altitude: ").append(toIndentedString(altitude)).append("\n");
    sb.append("    aperture: ").append(toIndentedString(aperture)).append("\n");
    sb.append("    artistCount: ").append(toIndentedString(artistCount)).append("\n");
    sb.append("    artistItems: ").append(toIndentedString(artistItems)).append("\n");
    sb.append("    artists: ").append(toIndentedString(artists)).append("\n");
    sb.append("    aspectRatio: ").append(toIndentedString(aspectRatio)).append("\n");
    sb.append("    audio: ").append(toIndentedString(audio)).append("\n");
    sb.append("    backdropImageTags: ").append(toIndentedString(backdropImageTags)).append("\n");
    sb.append("    cameraMake: ").append(toIndentedString(cameraMake)).append("\n");
    sb.append("    cameraModel: ").append(toIndentedString(cameraModel)).append("\n");
    sb.append("    canDelete: ").append(toIndentedString(canDelete)).append("\n");
    sb.append("    canDownload: ").append(toIndentedString(canDownload)).append("\n");
    sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
    sb.append("    channelName: ").append(toIndentedString(channelName)).append("\n");
    sb.append("    channelNumber: ").append(toIndentedString(channelNumber)).append("\n");
    sb.append("    channelPrimaryImageTag: ").append(toIndentedString(channelPrimaryImageTag)).append("\n");
    sb.append("    channelType: ").append(toIndentedString(channelType)).append("\n");
    sb.append("    chapters: ").append(toIndentedString(chapters)).append("\n");
    sb.append("    childCount: ").append(toIndentedString(childCount)).append("\n");
    sb.append("    collectionType: ").append(toIndentedString(collectionType)).append("\n");
    sb.append("    communityRating: ").append(toIndentedString(communityRating)).append("\n");
    sb.append("    completionPercentage: ").append(toIndentedString(completionPercentage)).append("\n");
    sb.append("    container: ").append(toIndentedString(container)).append("\n");
    sb.append("    criticRating: ").append(toIndentedString(criticRating)).append("\n");
    sb.append("    cumulativeRunTimeTicks: ").append(toIndentedString(cumulativeRunTimeTicks)).append("\n");
    sb.append("    currentProgram: ").append(toIndentedString(currentProgram)).append("\n");
    sb.append("    customRating: ").append(toIndentedString(customRating)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateLastMediaAdded: ").append(toIndentedString(dateLastMediaAdded)).append("\n");
    sb.append("    displayOrder: ").append(toIndentedString(displayOrder)).append("\n");
    sb.append("    displayPreferencesId: ").append(toIndentedString(displayPreferencesId)).append("\n");
    sb.append("    enableMediaSourceDisplay: ").append(toIndentedString(enableMediaSourceDisplay)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    episodeCount: ").append(toIndentedString(episodeCount)).append("\n");
    sb.append("    episodeTitle: ").append(toIndentedString(episodeTitle)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    exposureTime: ").append(toIndentedString(exposureTime)).append("\n");
    sb.append("    externalUrls: ").append(toIndentedString(externalUrls)).append("\n");
    sb.append("    extraType: ").append(toIndentedString(extraType)).append("\n");
    sb.append("    focalLength: ").append(toIndentedString(focalLength)).append("\n");
    sb.append("    forcedSortName: ").append(toIndentedString(forcedSortName)).append("\n");
    sb.append("    genreItems: ").append(toIndentedString(genreItems)).append("\n");
    sb.append("    genres: ").append(toIndentedString(genres)).append("\n");
    sb.append("    hasSubtitles: ").append(toIndentedString(hasSubtitles)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    imageBlurHashes: ").append(toIndentedString(imageBlurHashes)).append("\n");
    sb.append("    imageOrientation: ").append(toIndentedString(imageOrientation)).append("\n");
    sb.append("    imageTags: ").append(toIndentedString(imageTags)).append("\n");
    sb.append("    indexNumber: ").append(toIndentedString(indexNumber)).append("\n");
    sb.append("    indexNumberEnd: ").append(toIndentedString(indexNumberEnd)).append("\n");
    sb.append("    isFolder: ").append(toIndentedString(isFolder)).append("\n");
    sb.append("    isHD: ").append(toIndentedString(isHD)).append("\n");
    sb.append("    isKids: ").append(toIndentedString(isKids)).append("\n");
    sb.append("    isLive: ").append(toIndentedString(isLive)).append("\n");
    sb.append("    isMovie: ").append(toIndentedString(isMovie)).append("\n");
    sb.append("    isNews: ").append(toIndentedString(isNews)).append("\n");
    sb.append("    isPlaceHolder: ").append(toIndentedString(isPlaceHolder)).append("\n");
    sb.append("    isPremiere: ").append(toIndentedString(isPremiere)).append("\n");
    sb.append("    isRepeat: ").append(toIndentedString(isRepeat)).append("\n");
    sb.append("    isSeries: ").append(toIndentedString(isSeries)).append("\n");
    sb.append("    isSports: ").append(toIndentedString(isSports)).append("\n");
    sb.append("    isoSpeedRating: ").append(toIndentedString(isoSpeedRating)).append("\n");
    sb.append("    isoType: ").append(toIndentedString(isoType)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    localTrailerCount: ").append(toIndentedString(localTrailerCount)).append("\n");
    sb.append("    locationType: ").append(toIndentedString(locationType)).append("\n");
    sb.append("    lockData: ").append(toIndentedString(lockData)).append("\n");
    sb.append("    lockedFields: ").append(toIndentedString(lockedFields)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    mediaSourceCount: ").append(toIndentedString(mediaSourceCount)).append("\n");
    sb.append("    mediaSources: ").append(toIndentedString(mediaSources)).append("\n");
    sb.append("    mediaStreams: ").append(toIndentedString(mediaStreams)).append("\n");
    sb.append("    mediaType: ").append(toIndentedString(mediaType)).append("\n");
    sb.append("    movieCount: ").append(toIndentedString(movieCount)).append("\n");
    sb.append("    musicVideoCount: ").append(toIndentedString(musicVideoCount)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    officialRating: ").append(toIndentedString(officialRating)).append("\n");
    sb.append("    originalTitle: ").append(toIndentedString(originalTitle)).append("\n");
    sb.append("    overview: ").append(toIndentedString(overview)).append("\n");
    sb.append("    parentArtImageTag: ").append(toIndentedString(parentArtImageTag)).append("\n");
    sb.append("    parentArtItemId: ").append(toIndentedString(parentArtItemId)).append("\n");
    sb.append("    parentBackdropImageTags: ").append(toIndentedString(parentBackdropImageTags)).append("\n");
    sb.append("    parentBackdropItemId: ").append(toIndentedString(parentBackdropItemId)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    parentIndexNumber: ").append(toIndentedString(parentIndexNumber)).append("\n");
    sb.append("    parentLogoImageTag: ").append(toIndentedString(parentLogoImageTag)).append("\n");
    sb.append("    parentLogoItemId: ").append(toIndentedString(parentLogoItemId)).append("\n");
    sb.append("    parentPrimaryImageItemId: ").append(toIndentedString(parentPrimaryImageItemId)).append("\n");
    sb.append("    parentPrimaryImageTag: ").append(toIndentedString(parentPrimaryImageTag)).append("\n");
    sb.append("    parentThumbImageTag: ").append(toIndentedString(parentThumbImageTag)).append("\n");
    sb.append("    parentThumbItemId: ").append(toIndentedString(parentThumbItemId)).append("\n");
    sb.append("    partCount: ").append(toIndentedString(partCount)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    people: ").append(toIndentedString(people)).append("\n");
    sb.append("    playAccess: ").append(toIndentedString(playAccess)).append("\n");
    sb.append("    playlistItemId: ").append(toIndentedString(playlistItemId)).append("\n");
    sb.append("    preferredMetadataCountryCode: ").append(toIndentedString(preferredMetadataCountryCode)).append("\n");
    sb.append("    preferredMetadataLanguage: ").append(toIndentedString(preferredMetadataLanguage)).append("\n");
    sb.append("    premiereDate: ").append(toIndentedString(premiereDate)).append("\n");
    sb.append("    primaryImageAspectRatio: ").append(toIndentedString(primaryImageAspectRatio)).append("\n");
    sb.append("    productionLocations: ").append(toIndentedString(productionLocations)).append("\n");
    sb.append("    productionYear: ").append(toIndentedString(productionYear)).append("\n");
    sb.append("    programCount: ").append(toIndentedString(programCount)).append("\n");
    sb.append("    programId: ").append(toIndentedString(programId)).append("\n");
    sb.append("    providerIds: ").append(toIndentedString(providerIds)).append("\n");
    sb.append("    recursiveItemCount: ").append(toIndentedString(recursiveItemCount)).append("\n");
    sb.append("    remoteTrailers: ").append(toIndentedString(remoteTrailers)).append("\n");
    sb.append("    runTimeTicks: ").append(toIndentedString(runTimeTicks)).append("\n");
    sb.append("    screenshotImageTags: ").append(toIndentedString(screenshotImageTags)).append("\n");
    sb.append("    seasonId: ").append(toIndentedString(seasonId)).append("\n");
    sb.append("    seasonName: ").append(toIndentedString(seasonName)).append("\n");
    sb.append("    seriesCount: ").append(toIndentedString(seriesCount)).append("\n");
    sb.append("    seriesId: ").append(toIndentedString(seriesId)).append("\n");
    sb.append("    seriesName: ").append(toIndentedString(seriesName)).append("\n");
    sb.append("    seriesPrimaryImageTag: ").append(toIndentedString(seriesPrimaryImageTag)).append("\n");
    sb.append("    seriesStudio: ").append(toIndentedString(seriesStudio)).append("\n");
    sb.append("    seriesThumbImageTag: ").append(toIndentedString(seriesThumbImageTag)).append("\n");
    sb.append("    seriesTimerId: ").append(toIndentedString(seriesTimerId)).append("\n");
    sb.append("    serverId: ").append(toIndentedString(serverId)).append("\n");
    sb.append("    shutterSpeed: ").append(toIndentedString(shutterSpeed)).append("\n");
    sb.append("    software: ").append(toIndentedString(software)).append("\n");
    sb.append("    songCount: ").append(toIndentedString(songCount)).append("\n");
    sb.append("    sortName: ").append(toIndentedString(sortName)).append("\n");
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("    specialFeatureCount: ").append(toIndentedString(specialFeatureCount)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    studios: ").append(toIndentedString(studios)).append("\n");
    sb.append("    supportsSync: ").append(toIndentedString(supportsSync)).append("\n");
    sb.append("    taglines: ").append(toIndentedString(taglines)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    timerId: ").append(toIndentedString(timerId)).append("\n");
    sb.append("    trailerCount: ").append(toIndentedString(trailerCount)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    userData: ").append(toIndentedString(userData)).append("\n");
    sb.append("    video3DFormat: ").append(toIndentedString(video3DFormat)).append("\n");
    sb.append("    videoType: ").append(toIndentedString(videoType)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AirDays");
    openapiFields.add("AirTime");
    openapiFields.add("AirsAfterSeasonNumber");
    openapiFields.add("AirsBeforeEpisodeNumber");
    openapiFields.add("AirsBeforeSeasonNumber");
    openapiFields.add("Album");
    openapiFields.add("AlbumArtist");
    openapiFields.add("AlbumArtists");
    openapiFields.add("AlbumCount");
    openapiFields.add("AlbumId");
    openapiFields.add("AlbumPrimaryImageTag");
    openapiFields.add("Altitude");
    openapiFields.add("Aperture");
    openapiFields.add("ArtistCount");
    openapiFields.add("ArtistItems");
    openapiFields.add("Artists");
    openapiFields.add("AspectRatio");
    openapiFields.add("Audio");
    openapiFields.add("BackdropImageTags");
    openapiFields.add("CameraMake");
    openapiFields.add("CameraModel");
    openapiFields.add("CanDelete");
    openapiFields.add("CanDownload");
    openapiFields.add("ChannelId");
    openapiFields.add("ChannelName");
    openapiFields.add("ChannelNumber");
    openapiFields.add("ChannelPrimaryImageTag");
    openapiFields.add("ChannelType");
    openapiFields.add("Chapters");
    openapiFields.add("ChildCount");
    openapiFields.add("CollectionType");
    openapiFields.add("CommunityRating");
    openapiFields.add("CompletionPercentage");
    openapiFields.add("Container");
    openapiFields.add("CriticRating");
    openapiFields.add("CumulativeRunTimeTicks");
    openapiFields.add("CurrentProgram");
    openapiFields.add("CustomRating");
    openapiFields.add("DateCreated");
    openapiFields.add("DateLastMediaAdded");
    openapiFields.add("DisplayOrder");
    openapiFields.add("DisplayPreferencesId");
    openapiFields.add("EnableMediaSourceDisplay");
    openapiFields.add("EndDate");
    openapiFields.add("EpisodeCount");
    openapiFields.add("EpisodeTitle");
    openapiFields.add("Etag");
    openapiFields.add("ExposureTime");
    openapiFields.add("ExternalUrls");
    openapiFields.add("ExtraType");
    openapiFields.add("FocalLength");
    openapiFields.add("ForcedSortName");
    openapiFields.add("GenreItems");
    openapiFields.add("Genres");
    openapiFields.add("HasSubtitles");
    openapiFields.add("Height");
    openapiFields.add("Id");
    openapiFields.add("ImageBlurHashes");
    openapiFields.add("ImageOrientation");
    openapiFields.add("ImageTags");
    openapiFields.add("IndexNumber");
    openapiFields.add("IndexNumberEnd");
    openapiFields.add("IsFolder");
    openapiFields.add("IsHD");
    openapiFields.add("IsKids");
    openapiFields.add("IsLive");
    openapiFields.add("IsMovie");
    openapiFields.add("IsNews");
    openapiFields.add("IsPlaceHolder");
    openapiFields.add("IsPremiere");
    openapiFields.add("IsRepeat");
    openapiFields.add("IsSeries");
    openapiFields.add("IsSports");
    openapiFields.add("IsoSpeedRating");
    openapiFields.add("IsoType");
    openapiFields.add("Latitude");
    openapiFields.add("LocalTrailerCount");
    openapiFields.add("LocationType");
    openapiFields.add("LockData");
    openapiFields.add("LockedFields");
    openapiFields.add("Longitude");
    openapiFields.add("MediaSourceCount");
    openapiFields.add("MediaSources");
    openapiFields.add("MediaStreams");
    openapiFields.add("MediaType");
    openapiFields.add("MovieCount");
    openapiFields.add("MusicVideoCount");
    openapiFields.add("Name");
    openapiFields.add("Number");
    openapiFields.add("OfficialRating");
    openapiFields.add("OriginalTitle");
    openapiFields.add("Overview");
    openapiFields.add("ParentArtImageTag");
    openapiFields.add("ParentArtItemId");
    openapiFields.add("ParentBackdropImageTags");
    openapiFields.add("ParentBackdropItemId");
    openapiFields.add("ParentId");
    openapiFields.add("ParentIndexNumber");
    openapiFields.add("ParentLogoImageTag");
    openapiFields.add("ParentLogoItemId");
    openapiFields.add("ParentPrimaryImageItemId");
    openapiFields.add("ParentPrimaryImageTag");
    openapiFields.add("ParentThumbImageTag");
    openapiFields.add("ParentThumbItemId");
    openapiFields.add("PartCount");
    openapiFields.add("Path");
    openapiFields.add("People");
    openapiFields.add("PlayAccess");
    openapiFields.add("PlaylistItemId");
    openapiFields.add("PreferredMetadataCountryCode");
    openapiFields.add("PreferredMetadataLanguage");
    openapiFields.add("PremiereDate");
    openapiFields.add("PrimaryImageAspectRatio");
    openapiFields.add("ProductionLocations");
    openapiFields.add("ProductionYear");
    openapiFields.add("ProgramCount");
    openapiFields.add("ProgramId");
    openapiFields.add("ProviderIds");
    openapiFields.add("RecursiveItemCount");
    openapiFields.add("RemoteTrailers");
    openapiFields.add("RunTimeTicks");
    openapiFields.add("ScreenshotImageTags");
    openapiFields.add("SeasonId");
    openapiFields.add("SeasonName");
    openapiFields.add("SeriesCount");
    openapiFields.add("SeriesId");
    openapiFields.add("SeriesName");
    openapiFields.add("SeriesPrimaryImageTag");
    openapiFields.add("SeriesStudio");
    openapiFields.add("SeriesThumbImageTag");
    openapiFields.add("SeriesTimerId");
    openapiFields.add("ServerId");
    openapiFields.add("ShutterSpeed");
    openapiFields.add("Software");
    openapiFields.add("SongCount");
    openapiFields.add("SortName");
    openapiFields.add("SourceType");
    openapiFields.add("SpecialFeatureCount");
    openapiFields.add("StartDate");
    openapiFields.add("Status");
    openapiFields.add("Studios");
    openapiFields.add("SupportsSync");
    openapiFields.add("Taglines");
    openapiFields.add("Tags");
    openapiFields.add("TimerId");
    openapiFields.add("TrailerCount");
    openapiFields.add("Type");
    openapiFields.add("UserData");
    openapiFields.add("Video3DFormat");
    openapiFields.add("VideoType");
    openapiFields.add("Width");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BaseItemDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BaseItemDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BaseItemDto is not found in the empty JSON string", BaseItemDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BaseItemDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BaseItemDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("AirDays") != null && !jsonObj.get("AirDays").isJsonNull() && !jsonObj.get("AirDays").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `AirDays` to be an array in the JSON string but got `%s`", jsonObj.get("AirDays").toString()));
      }
      if ((jsonObj.get("AirTime") != null && !jsonObj.get("AirTime").isJsonNull()) && !jsonObj.get("AirTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AirTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AirTime").toString()));
      }
      if ((jsonObj.get("Album") != null && !jsonObj.get("Album").isJsonNull()) && !jsonObj.get("Album").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Album` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Album").toString()));
      }
      if ((jsonObj.get("AlbumArtist") != null && !jsonObj.get("AlbumArtist").isJsonNull()) && !jsonObj.get("AlbumArtist").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AlbumArtist` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AlbumArtist").toString()));
      }
      if (jsonObj.get("AlbumArtists") != null && !jsonObj.get("AlbumArtists").isJsonNull()) {
        JsonArray jsonArrayalbumArtists = jsonObj.getAsJsonArray("AlbumArtists");
        if (jsonArrayalbumArtists != null) {
          // ensure the json data is an array
          if (!jsonObj.get("AlbumArtists").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `AlbumArtists` to be an array in the JSON string but got `%s`", jsonObj.get("AlbumArtists").toString()));
          }

          // validate the optional field `AlbumArtists` (array)
          for (int i = 0; i < jsonArrayalbumArtists.size(); i++) {
            NameGuidPair.validateJsonElement(jsonArrayalbumArtists.get(i));
          };
        }
      }
      if ((jsonObj.get("AlbumId") != null && !jsonObj.get("AlbumId").isJsonNull()) && !jsonObj.get("AlbumId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AlbumId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AlbumId").toString()));
      }
      if ((jsonObj.get("AlbumPrimaryImageTag") != null && !jsonObj.get("AlbumPrimaryImageTag").isJsonNull()) && !jsonObj.get("AlbumPrimaryImageTag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AlbumPrimaryImageTag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AlbumPrimaryImageTag").toString()));
      }
      if (jsonObj.get("ArtistItems") != null && !jsonObj.get("ArtistItems").isJsonNull()) {
        JsonArray jsonArrayartistItems = jsonObj.getAsJsonArray("ArtistItems");
        if (jsonArrayartistItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ArtistItems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ArtistItems` to be an array in the JSON string but got `%s`", jsonObj.get("ArtistItems").toString()));
          }

          // validate the optional field `ArtistItems` (array)
          for (int i = 0; i < jsonArrayartistItems.size(); i++) {
            NameGuidPair.validateJsonElement(jsonArrayartistItems.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("Artists") != null && !jsonObj.get("Artists").isJsonNull() && !jsonObj.get("Artists").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `Artists` to be an array in the JSON string but got `%s`", jsonObj.get("Artists").toString()));
      }
      if ((jsonObj.get("AspectRatio") != null && !jsonObj.get("AspectRatio").isJsonNull()) && !jsonObj.get("AspectRatio").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AspectRatio` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AspectRatio").toString()));
      }
      // validate the optional field `Audio`
      if (jsonObj.get("Audio") != null && !jsonObj.get("Audio").isJsonNull()) {
        ProgramAudio.validateJsonElement(jsonObj.get("Audio"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("BackdropImageTags") != null && !jsonObj.get("BackdropImageTags").isJsonNull() && !jsonObj.get("BackdropImageTags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `BackdropImageTags` to be an array in the JSON string but got `%s`", jsonObj.get("BackdropImageTags").toString()));
      }
      if ((jsonObj.get("CameraMake") != null && !jsonObj.get("CameraMake").isJsonNull()) && !jsonObj.get("CameraMake").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CameraMake` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CameraMake").toString()));
      }
      if ((jsonObj.get("CameraModel") != null && !jsonObj.get("CameraModel").isJsonNull()) && !jsonObj.get("CameraModel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CameraModel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CameraModel").toString()));
      }
      if ((jsonObj.get("ChannelId") != null && !jsonObj.get("ChannelId").isJsonNull()) && !jsonObj.get("ChannelId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ChannelId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ChannelId").toString()));
      }
      if ((jsonObj.get("ChannelName") != null && !jsonObj.get("ChannelName").isJsonNull()) && !jsonObj.get("ChannelName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ChannelName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ChannelName").toString()));
      }
      if ((jsonObj.get("ChannelNumber") != null && !jsonObj.get("ChannelNumber").isJsonNull()) && !jsonObj.get("ChannelNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ChannelNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ChannelNumber").toString()));
      }
      if ((jsonObj.get("ChannelPrimaryImageTag") != null && !jsonObj.get("ChannelPrimaryImageTag").isJsonNull()) && !jsonObj.get("ChannelPrimaryImageTag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ChannelPrimaryImageTag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ChannelPrimaryImageTag").toString()));
      }
      // validate the optional field `ChannelType`
      if (jsonObj.get("ChannelType") != null && !jsonObj.get("ChannelType").isJsonNull()) {
        ChannelType.validateJsonElement(jsonObj.get("ChannelType"));
      }
      if (jsonObj.get("Chapters") != null && !jsonObj.get("Chapters").isJsonNull()) {
        JsonArray jsonArraychapters = jsonObj.getAsJsonArray("Chapters");
        if (jsonArraychapters != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Chapters").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Chapters` to be an array in the JSON string but got `%s`", jsonObj.get("Chapters").toString()));
          }

          // validate the optional field `Chapters` (array)
          for (int i = 0; i < jsonArraychapters.size(); i++) {
            ChapterInfo.validateJsonElement(jsonArraychapters.get(i));
          };
        }
      }
      if ((jsonObj.get("CollectionType") != null && !jsonObj.get("CollectionType").isJsonNull()) && !jsonObj.get("CollectionType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CollectionType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CollectionType").toString()));
      }
      if ((jsonObj.get("Container") != null && !jsonObj.get("Container").isJsonNull()) && !jsonObj.get("Container").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Container` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Container").toString()));
      }
      // validate the optional field `CurrentProgram`
      if (jsonObj.get("CurrentProgram") != null && !jsonObj.get("CurrentProgram").isJsonNull()) {
        BaseItemDto.validateJsonElement(jsonObj.get("CurrentProgram"));
      }
      if ((jsonObj.get("CustomRating") != null && !jsonObj.get("CustomRating").isJsonNull()) && !jsonObj.get("CustomRating").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CustomRating` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CustomRating").toString()));
      }
      if ((jsonObj.get("DisplayOrder") != null && !jsonObj.get("DisplayOrder").isJsonNull()) && !jsonObj.get("DisplayOrder").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DisplayOrder` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DisplayOrder").toString()));
      }
      if ((jsonObj.get("DisplayPreferencesId") != null && !jsonObj.get("DisplayPreferencesId").isJsonNull()) && !jsonObj.get("DisplayPreferencesId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DisplayPreferencesId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DisplayPreferencesId").toString()));
      }
      if ((jsonObj.get("EpisodeTitle") != null && !jsonObj.get("EpisodeTitle").isJsonNull()) && !jsonObj.get("EpisodeTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EpisodeTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EpisodeTitle").toString()));
      }
      if ((jsonObj.get("Etag") != null && !jsonObj.get("Etag").isJsonNull()) && !jsonObj.get("Etag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Etag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Etag").toString()));
      }
      if (jsonObj.get("ExternalUrls") != null && !jsonObj.get("ExternalUrls").isJsonNull()) {
        JsonArray jsonArrayexternalUrls = jsonObj.getAsJsonArray("ExternalUrls");
        if (jsonArrayexternalUrls != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ExternalUrls").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ExternalUrls` to be an array in the JSON string but got `%s`", jsonObj.get("ExternalUrls").toString()));
          }

          // validate the optional field `ExternalUrls` (array)
          for (int i = 0; i < jsonArrayexternalUrls.size(); i++) {
            ExternalUrl.validateJsonElement(jsonArrayexternalUrls.get(i));
          };
        }
      }
      if ((jsonObj.get("ExtraType") != null && !jsonObj.get("ExtraType").isJsonNull()) && !jsonObj.get("ExtraType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ExtraType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ExtraType").toString()));
      }
      if ((jsonObj.get("ForcedSortName") != null && !jsonObj.get("ForcedSortName").isJsonNull()) && !jsonObj.get("ForcedSortName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ForcedSortName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ForcedSortName").toString()));
      }
      if (jsonObj.get("GenreItems") != null && !jsonObj.get("GenreItems").isJsonNull()) {
        JsonArray jsonArraygenreItems = jsonObj.getAsJsonArray("GenreItems");
        if (jsonArraygenreItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("GenreItems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `GenreItems` to be an array in the JSON string but got `%s`", jsonObj.get("GenreItems").toString()));
          }

          // validate the optional field `GenreItems` (array)
          for (int i = 0; i < jsonArraygenreItems.size(); i++) {
            NameGuidPair.validateJsonElement(jsonArraygenreItems.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("Genres") != null && !jsonObj.get("Genres").isJsonNull() && !jsonObj.get("Genres").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `Genres` to be an array in the JSON string but got `%s`", jsonObj.get("Genres").toString()));
      }
      if ((jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) && !jsonObj.get("Id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Id").toString()));
      }
      // validate the optional field `ImageBlurHashes`
      if (jsonObj.get("ImageBlurHashes") != null && !jsonObj.get("ImageBlurHashes").isJsonNull()) {
        BaseItemDtoImageBlurHashes.validateJsonElement(jsonObj.get("ImageBlurHashes"));
      }
      // validate the optional field `ImageOrientation`
      if (jsonObj.get("ImageOrientation") != null && !jsonObj.get("ImageOrientation").isJsonNull()) {
        ImageOrientation.validateJsonElement(jsonObj.get("ImageOrientation"));
      }
      // validate the optional field `IsoType`
      if (jsonObj.get("IsoType") != null && !jsonObj.get("IsoType").isJsonNull()) {
        IsoType.validateJsonElement(jsonObj.get("IsoType"));
      }
      // validate the optional field `LocationType`
      if (jsonObj.get("LocationType") != null && !jsonObj.get("LocationType").isJsonNull()) {
        LocationType.validateJsonElement(jsonObj.get("LocationType"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("LockedFields") != null && !jsonObj.get("LockedFields").isJsonNull() && !jsonObj.get("LockedFields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `LockedFields` to be an array in the JSON string but got `%s`", jsonObj.get("LockedFields").toString()));
      }
      if (jsonObj.get("MediaSources") != null && !jsonObj.get("MediaSources").isJsonNull()) {
        JsonArray jsonArraymediaSources = jsonObj.getAsJsonArray("MediaSources");
        if (jsonArraymediaSources != null) {
          // ensure the json data is an array
          if (!jsonObj.get("MediaSources").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `MediaSources` to be an array in the JSON string but got `%s`", jsonObj.get("MediaSources").toString()));
          }

          // validate the optional field `MediaSources` (array)
          for (int i = 0; i < jsonArraymediaSources.size(); i++) {
            MediaSourceInfo.validateJsonElement(jsonArraymediaSources.get(i));
          };
        }
      }
      if (jsonObj.get("MediaStreams") != null && !jsonObj.get("MediaStreams").isJsonNull()) {
        JsonArray jsonArraymediaStreams = jsonObj.getAsJsonArray("MediaStreams");
        if (jsonArraymediaStreams != null) {
          // ensure the json data is an array
          if (!jsonObj.get("MediaStreams").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `MediaStreams` to be an array in the JSON string but got `%s`", jsonObj.get("MediaStreams").toString()));
          }

          // validate the optional field `MediaStreams` (array)
          for (int i = 0; i < jsonArraymediaStreams.size(); i++) {
            MediaStream.validateJsonElement(jsonArraymediaStreams.get(i));
          };
        }
      }
      if ((jsonObj.get("MediaType") != null && !jsonObj.get("MediaType").isJsonNull()) && !jsonObj.get("MediaType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MediaType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MediaType").toString()));
      }
      if ((jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) && !jsonObj.get("Name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Name").toString()));
      }
      if ((jsonObj.get("Number") != null && !jsonObj.get("Number").isJsonNull()) && !jsonObj.get("Number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Number").toString()));
      }
      if ((jsonObj.get("OfficialRating") != null && !jsonObj.get("OfficialRating").isJsonNull()) && !jsonObj.get("OfficialRating").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `OfficialRating` to be a primitive type in the JSON string but got `%s`", jsonObj.get("OfficialRating").toString()));
      }
      if ((jsonObj.get("OriginalTitle") != null && !jsonObj.get("OriginalTitle").isJsonNull()) && !jsonObj.get("OriginalTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `OriginalTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("OriginalTitle").toString()));
      }
      if ((jsonObj.get("Overview") != null && !jsonObj.get("Overview").isJsonNull()) && !jsonObj.get("Overview").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Overview` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Overview").toString()));
      }
      if ((jsonObj.get("ParentArtImageTag") != null && !jsonObj.get("ParentArtImageTag").isJsonNull()) && !jsonObj.get("ParentArtImageTag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ParentArtImageTag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ParentArtImageTag").toString()));
      }
      if ((jsonObj.get("ParentArtItemId") != null && !jsonObj.get("ParentArtItemId").isJsonNull()) && !jsonObj.get("ParentArtItemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ParentArtItemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ParentArtItemId").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("ParentBackdropImageTags") != null && !jsonObj.get("ParentBackdropImageTags").isJsonNull() && !jsonObj.get("ParentBackdropImageTags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `ParentBackdropImageTags` to be an array in the JSON string but got `%s`", jsonObj.get("ParentBackdropImageTags").toString()));
      }
      if ((jsonObj.get("ParentBackdropItemId") != null && !jsonObj.get("ParentBackdropItemId").isJsonNull()) && !jsonObj.get("ParentBackdropItemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ParentBackdropItemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ParentBackdropItemId").toString()));
      }
      if ((jsonObj.get("ParentId") != null && !jsonObj.get("ParentId").isJsonNull()) && !jsonObj.get("ParentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ParentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ParentId").toString()));
      }
      if ((jsonObj.get("ParentLogoImageTag") != null && !jsonObj.get("ParentLogoImageTag").isJsonNull()) && !jsonObj.get("ParentLogoImageTag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ParentLogoImageTag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ParentLogoImageTag").toString()));
      }
      if ((jsonObj.get("ParentLogoItemId") != null && !jsonObj.get("ParentLogoItemId").isJsonNull()) && !jsonObj.get("ParentLogoItemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ParentLogoItemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ParentLogoItemId").toString()));
      }
      if ((jsonObj.get("ParentPrimaryImageItemId") != null && !jsonObj.get("ParentPrimaryImageItemId").isJsonNull()) && !jsonObj.get("ParentPrimaryImageItemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ParentPrimaryImageItemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ParentPrimaryImageItemId").toString()));
      }
      if ((jsonObj.get("ParentPrimaryImageTag") != null && !jsonObj.get("ParentPrimaryImageTag").isJsonNull()) && !jsonObj.get("ParentPrimaryImageTag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ParentPrimaryImageTag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ParentPrimaryImageTag").toString()));
      }
      if ((jsonObj.get("ParentThumbImageTag") != null && !jsonObj.get("ParentThumbImageTag").isJsonNull()) && !jsonObj.get("ParentThumbImageTag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ParentThumbImageTag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ParentThumbImageTag").toString()));
      }
      if ((jsonObj.get("ParentThumbItemId") != null && !jsonObj.get("ParentThumbItemId").isJsonNull()) && !jsonObj.get("ParentThumbItemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ParentThumbItemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ParentThumbItemId").toString()));
      }
      if ((jsonObj.get("Path") != null && !jsonObj.get("Path").isJsonNull()) && !jsonObj.get("Path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Path").toString()));
      }
      if (jsonObj.get("People") != null && !jsonObj.get("People").isJsonNull()) {
        JsonArray jsonArraypeople = jsonObj.getAsJsonArray("People");
        if (jsonArraypeople != null) {
          // ensure the json data is an array
          if (!jsonObj.get("People").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `People` to be an array in the JSON string but got `%s`", jsonObj.get("People").toString()));
          }

          // validate the optional field `People` (array)
          for (int i = 0; i < jsonArraypeople.size(); i++) {
            BaseItemPerson.validateJsonElement(jsonArraypeople.get(i));
          };
        }
      }
      // validate the optional field `PlayAccess`
      if (jsonObj.get("PlayAccess") != null && !jsonObj.get("PlayAccess").isJsonNull()) {
        PlayAccess.validateJsonElement(jsonObj.get("PlayAccess"));
      }
      if ((jsonObj.get("PlaylistItemId") != null && !jsonObj.get("PlaylistItemId").isJsonNull()) && !jsonObj.get("PlaylistItemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PlaylistItemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PlaylistItemId").toString()));
      }
      if ((jsonObj.get("PreferredMetadataCountryCode") != null && !jsonObj.get("PreferredMetadataCountryCode").isJsonNull()) && !jsonObj.get("PreferredMetadataCountryCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PreferredMetadataCountryCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PreferredMetadataCountryCode").toString()));
      }
      if ((jsonObj.get("PreferredMetadataLanguage") != null && !jsonObj.get("PreferredMetadataLanguage").isJsonNull()) && !jsonObj.get("PreferredMetadataLanguage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PreferredMetadataLanguage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PreferredMetadataLanguage").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("ProductionLocations") != null && !jsonObj.get("ProductionLocations").isJsonNull() && !jsonObj.get("ProductionLocations").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `ProductionLocations` to be an array in the JSON string but got `%s`", jsonObj.get("ProductionLocations").toString()));
      }
      if ((jsonObj.get("ProgramId") != null && !jsonObj.get("ProgramId").isJsonNull()) && !jsonObj.get("ProgramId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ProgramId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ProgramId").toString()));
      }
      if (jsonObj.get("RemoteTrailers") != null && !jsonObj.get("RemoteTrailers").isJsonNull()) {
        JsonArray jsonArrayremoteTrailers = jsonObj.getAsJsonArray("RemoteTrailers");
        if (jsonArrayremoteTrailers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("RemoteTrailers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `RemoteTrailers` to be an array in the JSON string but got `%s`", jsonObj.get("RemoteTrailers").toString()));
          }

          // validate the optional field `RemoteTrailers` (array)
          for (int i = 0; i < jsonArrayremoteTrailers.size(); i++) {
            MediaUrl.validateJsonElement(jsonArrayremoteTrailers.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("ScreenshotImageTags") != null && !jsonObj.get("ScreenshotImageTags").isJsonNull() && !jsonObj.get("ScreenshotImageTags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `ScreenshotImageTags` to be an array in the JSON string but got `%s`", jsonObj.get("ScreenshotImageTags").toString()));
      }
      if ((jsonObj.get("SeasonId") != null && !jsonObj.get("SeasonId").isJsonNull()) && !jsonObj.get("SeasonId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SeasonId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SeasonId").toString()));
      }
      if ((jsonObj.get("SeasonName") != null && !jsonObj.get("SeasonName").isJsonNull()) && !jsonObj.get("SeasonName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SeasonName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SeasonName").toString()));
      }
      if ((jsonObj.get("SeriesId") != null && !jsonObj.get("SeriesId").isJsonNull()) && !jsonObj.get("SeriesId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SeriesId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SeriesId").toString()));
      }
      if ((jsonObj.get("SeriesName") != null && !jsonObj.get("SeriesName").isJsonNull()) && !jsonObj.get("SeriesName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SeriesName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SeriesName").toString()));
      }
      if ((jsonObj.get("SeriesPrimaryImageTag") != null && !jsonObj.get("SeriesPrimaryImageTag").isJsonNull()) && !jsonObj.get("SeriesPrimaryImageTag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SeriesPrimaryImageTag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SeriesPrimaryImageTag").toString()));
      }
      if ((jsonObj.get("SeriesStudio") != null && !jsonObj.get("SeriesStudio").isJsonNull()) && !jsonObj.get("SeriesStudio").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SeriesStudio` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SeriesStudio").toString()));
      }
      if ((jsonObj.get("SeriesThumbImageTag") != null && !jsonObj.get("SeriesThumbImageTag").isJsonNull()) && !jsonObj.get("SeriesThumbImageTag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SeriesThumbImageTag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SeriesThumbImageTag").toString()));
      }
      if ((jsonObj.get("SeriesTimerId") != null && !jsonObj.get("SeriesTimerId").isJsonNull()) && !jsonObj.get("SeriesTimerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SeriesTimerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SeriesTimerId").toString()));
      }
      if ((jsonObj.get("ServerId") != null && !jsonObj.get("ServerId").isJsonNull()) && !jsonObj.get("ServerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ServerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ServerId").toString()));
      }
      if ((jsonObj.get("Software") != null && !jsonObj.get("Software").isJsonNull()) && !jsonObj.get("Software").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Software` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Software").toString()));
      }
      if ((jsonObj.get("SortName") != null && !jsonObj.get("SortName").isJsonNull()) && !jsonObj.get("SortName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SortName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SortName").toString()));
      }
      if ((jsonObj.get("SourceType") != null && !jsonObj.get("SourceType").isJsonNull()) && !jsonObj.get("SourceType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SourceType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SourceType").toString()));
      }
      if ((jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) && !jsonObj.get("Status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Status").toString()));
      }
      if (jsonObj.get("Studios") != null && !jsonObj.get("Studios").isJsonNull()) {
        JsonArray jsonArraystudios = jsonObj.getAsJsonArray("Studios");
        if (jsonArraystudios != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Studios").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Studios` to be an array in the JSON string but got `%s`", jsonObj.get("Studios").toString()));
          }

          // validate the optional field `Studios` (array)
          for (int i = 0; i < jsonArraystudios.size(); i++) {
            NameGuidPair.validateJsonElement(jsonArraystudios.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("Taglines") != null && !jsonObj.get("Taglines").isJsonNull() && !jsonObj.get("Taglines").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `Taglines` to be an array in the JSON string but got `%s`", jsonObj.get("Taglines").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull() && !jsonObj.get("Tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `Tags` to be an array in the JSON string but got `%s`", jsonObj.get("Tags").toString()));
      }
      if ((jsonObj.get("TimerId") != null && !jsonObj.get("TimerId").isJsonNull()) && !jsonObj.get("TimerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TimerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TimerId").toString()));
      }
      if ((jsonObj.get("Type") != null && !jsonObj.get("Type").isJsonNull()) && !jsonObj.get("Type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Type").toString()));
      }
      // validate the optional field `UserData`
      if (jsonObj.get("UserData") != null && !jsonObj.get("UserData").isJsonNull()) {
        UserItemDataDto.validateJsonElement(jsonObj.get("UserData"));
      }
      // validate the optional field `Video3DFormat`
      if (jsonObj.get("Video3DFormat") != null && !jsonObj.get("Video3DFormat").isJsonNull()) {
        Video3DFormat.validateJsonElement(jsonObj.get("Video3DFormat"));
      }
      // validate the optional field `VideoType`
      if (jsonObj.get("VideoType") != null && !jsonObj.get("VideoType").isJsonNull()) {
        VideoType.validateJsonElement(jsonObj.get("VideoType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BaseItemDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BaseItemDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BaseItemDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BaseItemDto.class));

       return (TypeAdapter<T>) new TypeAdapter<BaseItemDto>() {
           @Override
           public void write(JsonWriter out, BaseItemDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BaseItemDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BaseItemDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BaseItemDto
   * @throws IOException if the JSON string is invalid with respect to BaseItemDto
   */
  public static BaseItemDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BaseItemDto.class);
  }

  /**
   * Convert an instance of BaseItemDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

