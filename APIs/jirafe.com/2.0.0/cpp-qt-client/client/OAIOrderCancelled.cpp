/**
 * Jirafe Events
 * API endpoins for sending Jirafe events
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@jirafe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderCancelled.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderCancelled::OAIOrderCancelled(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderCancelled::OAIOrderCancelled() {
    this->initializeModel();
}

OAIOrderCancelled::~OAIOrderCancelled() {}

void OAIOrderCancelled::initializeModel() {

    m_cancel_date_isSet = false;
    m_cancel_date_isValid = false;

    m_order_number_isSet = false;
    m_order_number_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIOrderCancelled::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderCancelled::fromJsonObject(QJsonObject json) {

    m_cancel_date_isValid = ::OpenAPI::fromJsonValue(m_cancel_date, json[QString("cancel_date")]);
    m_cancel_date_isSet = !json[QString("cancel_date")].isNull() && m_cancel_date_isValid;

    m_order_number_isValid = ::OpenAPI::fromJsonValue(m_order_number, json[QString("order_number")]);
    m_order_number_isSet = !json[QString("order_number")].isNull() && m_order_number_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIOrderCancelled::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderCancelled::asJsonObject() const {
    QJsonObject obj;
    if (m_cancel_date_isSet) {
        obj.insert(QString("cancel_date"), ::OpenAPI::toJsonValue(m_cancel_date));
    }
    if (m_order_number_isSet) {
        obj.insert(QString("order_number"), ::OpenAPI::toJsonValue(m_order_number));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QDateTime OAIOrderCancelled::getCancelDate() const {
    return m_cancel_date;
}
void OAIOrderCancelled::setCancelDate(const QDateTime &cancel_date) {
    m_cancel_date = cancel_date;
    m_cancel_date_isSet = true;
}

bool OAIOrderCancelled::is_cancel_date_Set() const{
    return m_cancel_date_isSet;
}

bool OAIOrderCancelled::is_cancel_date_Valid() const{
    return m_cancel_date_isValid;
}

QString OAIOrderCancelled::getOrderNumber() const {
    return m_order_number;
}
void OAIOrderCancelled::setOrderNumber(const QString &order_number) {
    m_order_number = order_number;
    m_order_number_isSet = true;
}

bool OAIOrderCancelled::is_order_number_Set() const{
    return m_order_number_isSet;
}

bool OAIOrderCancelled::is_order_number_Valid() const{
    return m_order_number_isValid;
}

QString OAIOrderCancelled::getStatus() const {
    return m_status;
}
void OAIOrderCancelled::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIOrderCancelled::is_status_Set() const{
    return m_status_isSet;
}

bool OAIOrderCancelled::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIOrderCancelled::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cancel_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderCancelled::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_cancel_date_isValid && m_order_number_isValid && m_status_isValid && true;
}

} // namespace OpenAPI
