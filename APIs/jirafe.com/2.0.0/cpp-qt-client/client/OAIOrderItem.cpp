/**
 * Jirafe Events
 * API endpoins for sending Jirafe events
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@jirafe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderItem::OAIOrderItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderItem::OAIOrderItem() {
    this->initializeModel();
}

OAIOrderItem::~OAIOrderItem() {}

void OAIOrderItem::initializeModel() {

    m_change_date_isSet = false;
    m_change_date_isValid = false;

    m_create_date_isSet = false;
    m_create_date_isValid = false;

    m_discount_price_isSet = false;
    m_discount_price_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_order_item_number_isSet = false;
    m_order_item_number_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_product_isSet = false;
    m_product_isValid = false;

    m_quantity_isSet = false;
    m_quantity_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIOrderItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderItem::fromJsonObject(QJsonObject json) {

    m_change_date_isValid = ::OpenAPI::fromJsonValue(m_change_date, json[QString("change_date")]);
    m_change_date_isSet = !json[QString("change_date")].isNull() && m_change_date_isValid;

    m_create_date_isValid = ::OpenAPI::fromJsonValue(m_create_date, json[QString("create_date")]);
    m_create_date_isSet = !json[QString("create_date")].isNull() && m_create_date_isValid;

    m_discount_price_isValid = ::OpenAPI::fromJsonValue(m_discount_price, json[QString("discount_price")]);
    m_discount_price_isSet = !json[QString("discount_price")].isNull() && m_discount_price_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_order_item_number_isValid = ::OpenAPI::fromJsonValue(m_order_item_number, json[QString("order_item_number")]);
    m_order_item_number_isSet = !json[QString("order_item_number")].isNull() && m_order_item_number_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_product_isValid = ::OpenAPI::fromJsonValue(m_product, json[QString("product")]);
    m_product_isSet = !json[QString("product")].isNull() && m_product_isValid;

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIOrderItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderItem::asJsonObject() const {
    QJsonObject obj;
    if (m_change_date_isSet) {
        obj.insert(QString("change_date"), ::OpenAPI::toJsonValue(m_change_date));
    }
    if (m_create_date_isSet) {
        obj.insert(QString("create_date"), ::OpenAPI::toJsonValue(m_create_date));
    }
    if (m_discount_price_isSet) {
        obj.insert(QString("discount_price"), ::OpenAPI::toJsonValue(m_discount_price));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_order_item_number_isSet) {
        obj.insert(QString("order_item_number"), ::OpenAPI::toJsonValue(m_order_item_number));
    }
    if (m_price_isSet) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_product.isSet()) {
        obj.insert(QString("product"), ::OpenAPI::toJsonValue(m_product));
    }
    if (m_quantity_isSet) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QDateTime OAIOrderItem::getChangeDate() const {
    return m_change_date;
}
void OAIOrderItem::setChangeDate(const QDateTime &change_date) {
    m_change_date = change_date;
    m_change_date_isSet = true;
}

bool OAIOrderItem::is_change_date_Set() const{
    return m_change_date_isSet;
}

bool OAIOrderItem::is_change_date_Valid() const{
    return m_change_date_isValid;
}

QDateTime OAIOrderItem::getCreateDate() const {
    return m_create_date;
}
void OAIOrderItem::setCreateDate(const QDateTime &create_date) {
    m_create_date = create_date;
    m_create_date_isSet = true;
}

bool OAIOrderItem::is_create_date_Set() const{
    return m_create_date_isSet;
}

bool OAIOrderItem::is_create_date_Valid() const{
    return m_create_date_isValid;
}

double OAIOrderItem::getDiscountPrice() const {
    return m_discount_price;
}
void OAIOrderItem::setDiscountPrice(const double &discount_price) {
    m_discount_price = discount_price;
    m_discount_price_isSet = true;
}

bool OAIOrderItem::is_discount_price_Set() const{
    return m_discount_price_isSet;
}

bool OAIOrderItem::is_discount_price_Valid() const{
    return m_discount_price_isValid;
}

QString OAIOrderItem::getId() const {
    return m_id;
}
void OAIOrderItem::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIOrderItem::is_id_Set() const{
    return m_id_isSet;
}

bool OAIOrderItem::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIOrderItem::getOrderItemNumber() const {
    return m_order_item_number;
}
void OAIOrderItem::setOrderItemNumber(const QString &order_item_number) {
    m_order_item_number = order_item_number;
    m_order_item_number_isSet = true;
}

bool OAIOrderItem::is_order_item_number_Set() const{
    return m_order_item_number_isSet;
}

bool OAIOrderItem::is_order_item_number_Valid() const{
    return m_order_item_number_isValid;
}

double OAIOrderItem::getPrice() const {
    return m_price;
}
void OAIOrderItem::setPrice(const double &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIOrderItem::is_price_Set() const{
    return m_price_isSet;
}

bool OAIOrderItem::is_price_Valid() const{
    return m_price_isValid;
}

OAIProduct OAIOrderItem::getProduct() const {
    return m_product;
}
void OAIOrderItem::setProduct(const OAIProduct &product) {
    m_product = product;
    m_product_isSet = true;
}

bool OAIOrderItem::is_product_Set() const{
    return m_product_isSet;
}

bool OAIOrderItem::is_product_Valid() const{
    return m_product_isValid;
}

qint32 OAIOrderItem::getQuantity() const {
    return m_quantity;
}
void OAIOrderItem::setQuantity(const qint32 &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIOrderItem::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIOrderItem::is_quantity_Valid() const{
    return m_quantity_isValid;
}

QString OAIOrderItem::getStatus() const {
    return m_status;
}
void OAIOrderItem::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIOrderItem::is_status_Set() const{
    return m_status_isSet;
}

bool OAIOrderItem::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIOrderItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_change_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_discount_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_change_date_isValid && m_create_date_isValid && m_discount_price_isValid && m_id_isValid && m_order_item_number_isValid && m_price_isValid && m_product_isValid && m_quantity_isValid && m_status_isValid && true;
}

} // namespace OpenAPI
