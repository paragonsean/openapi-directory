/**
 * Jirafe Events
 * API endpoins for sending Jirafe events
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@jirafe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrder.h
 *
 * 
 */

#ifndef OAIOrder_H
#define OAIOrder_H

#include <QJsonObject>

#include "OAICustomer.h"
#include "OAIOrderItem.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICustomer;
class OAIOrderItem;

class OAIOrder : public OAIObject {
public:
    OAIOrder();
    OAIOrder(QString json);
    ~OAIOrder() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCartId() const;
    void setCartId(const QString &cart_id);
    bool is_cart_id_Set() const;
    bool is_cart_id_Valid() const;

    QDateTime getChangeDate() const;
    void setChangeDate(const QDateTime &change_date);
    bool is_change_date_Set() const;
    bool is_change_date_Valid() const;

    QDateTime getCreateDate() const;
    void setCreateDate(const QDateTime &create_date);
    bool is_create_date_Set() const;
    bool is_create_date_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    OAICustomer getCustomer() const;
    void setCustomer(const OAICustomer &customer);
    bool is_customer_Set() const;
    bool is_customer_Valid() const;

    QList<OAIOrderItem> getItems() const;
    void setItems(const QList<OAIOrderItem> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    QDateTime getOrderDate() const;
    void setOrderDate(const QDateTime &order_date);
    bool is_order_date_Set() const;
    bool is_order_date_Valid() const;

    QString getOrderNumber() const;
    void setOrderNumber(const QString &order_number);
    bool is_order_number_Set() const;
    bool is_order_number_Valid() const;

    QList<OAIOrderItem> getPreviousItems() const;
    void setPreviousItems(const QList<OAIOrderItem> &previous_items);
    bool is_previous_items_Set() const;
    bool is_previous_items_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    double getSubtotal() const;
    void setSubtotal(const double &subtotal);
    bool is_subtotal_Set() const;
    bool is_subtotal_Valid() const;

    double getTotal() const;
    void setTotal(const double &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    double getTotalDiscounts() const;
    void setTotalDiscounts(const double &total_discounts);
    bool is_total_discounts_Set() const;
    bool is_total_discounts_Valid() const;

    double getTotalPaymentCost() const;
    void setTotalPaymentCost(const double &total_payment_cost);
    bool is_total_payment_cost_Set() const;
    bool is_total_payment_cost_Valid() const;

    double getTotalShipping() const;
    void setTotalShipping(const double &total_shipping);
    bool is_total_shipping_Set() const;
    bool is_total_shipping_Valid() const;

    double getTotalTax() const;
    void setTotalTax(const double &total_tax);
    bool is_total_tax_Set() const;
    bool is_total_tax_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cart_id;
    bool m_cart_id_isSet;
    bool m_cart_id_isValid;

    QDateTime m_change_date;
    bool m_change_date_isSet;
    bool m_change_date_isValid;

    QDateTime m_create_date;
    bool m_create_date_isSet;
    bool m_create_date_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    OAICustomer m_customer;
    bool m_customer_isSet;
    bool m_customer_isValid;

    QList<OAIOrderItem> m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    QDateTime m_order_date;
    bool m_order_date_isSet;
    bool m_order_date_isValid;

    QString m_order_number;
    bool m_order_number_isSet;
    bool m_order_number_isValid;

    QList<OAIOrderItem> m_previous_items;
    bool m_previous_items_isSet;
    bool m_previous_items_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    double m_subtotal;
    bool m_subtotal_isSet;
    bool m_subtotal_isValid;

    double m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    double m_total_discounts;
    bool m_total_discounts_isSet;
    bool m_total_discounts_isValid;

    double m_total_payment_cost;
    bool m_total_payment_cost_isSet;
    bool m_total_payment_cost_isValid;

    double m_total_shipping;
    bool m_total_shipping_isSet;
    bool m_total_shipping_isValid;

    double m_total_tax;
    bool m_total_tax_isSet;
    bool m_total_tax_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrder)

#endif // OAIOrder_H
