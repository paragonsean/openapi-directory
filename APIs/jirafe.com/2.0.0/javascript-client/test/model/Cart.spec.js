/**
 * Jirafe Events
 * API endpoins for sending Jirafe events
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@jirafe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JirafeEvents);
  }
}(this, function(expect, JirafeEvents) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JirafeEvents.Cart();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Cart', function() {
    it('should create an instance of Cart', function() {
      // uncomment below and update the code to test Cart
      //var instance = new JirafeEvents.Cart();
      //expect(instance).to.be.a(JirafeEvents.Cart);
    });

    it('should have the property cartId (base name: "cart_id")', function() {
      // uncomment below and update the code to test the property cartId
      //var instance = new JirafeEvents.Cart();
      //expect(instance).to.be();
    });

    it('should have the property changeDate (base name: "change_date")', function() {
      // uncomment below and update the code to test the property changeDate
      //var instance = new JirafeEvents.Cart();
      //expect(instance).to.be();
    });

    it('should have the property cookies (base name: "cookies")', function() {
      // uncomment below and update the code to test the property cookies
      //var instance = new JirafeEvents.Cart();
      //expect(instance).to.be();
    });

    it('should have the property createDate (base name: "create_date")', function() {
      // uncomment below and update the code to test the property createDate
      //var instance = new JirafeEvents.Cart();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new JirafeEvents.Cart();
      //expect(instance).to.be();
    });

    it('should have the property customer (base name: "customer")', function() {
      // uncomment below and update the code to test the property customer
      //var instance = new JirafeEvents.Cart();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new JirafeEvents.Cart();
      //expect(instance).to.be();
    });

    it('should have the property items (base name: "items")', function() {
      // uncomment below and update the code to test the property items
      //var instance = new JirafeEvents.Cart();
      //expect(instance).to.be();
    });

    it('should have the property previousItems (base name: "previous_items")', function() {
      // uncomment below and update the code to test the property previousItems
      //var instance = new JirafeEvents.Cart();
      //expect(instance).to.be();
    });

    it('should have the property subtotal (base name: "subtotal")', function() {
      // uncomment below and update the code to test the property subtotal
      //var instance = new JirafeEvents.Cart();
      //expect(instance).to.be();
    });

    it('should have the property total (base name: "total")', function() {
      // uncomment below and update the code to test the property total
      //var instance = new JirafeEvents.Cart();
      //expect(instance).to.be();
    });

    it('should have the property totalDiscounts (base name: "total_discounts")', function() {
      // uncomment below and update the code to test the property totalDiscounts
      //var instance = new JirafeEvents.Cart();
      //expect(instance).to.be();
    });

    it('should have the property totalPaymentCost (base name: "total_payment_cost")', function() {
      // uncomment below and update the code to test the property totalPaymentCost
      //var instance = new JirafeEvents.Cart();
      //expect(instance).to.be();
    });

    it('should have the property totalShipping (base name: "total_shipping")', function() {
      // uncomment below and update the code to test the property totalShipping
      //var instance = new JirafeEvents.Cart();
      //expect(instance).to.be();
    });

    it('should have the property totalTax (base name: "total_tax")', function() {
      // uncomment below and update the code to test the property totalTax
      //var instance = new JirafeEvents.Cart();
      //expect(instance).to.be();
    });

    it('should have the property visit (base name: "visit")', function() {
      // uncomment below and update the code to test the property visit
      //var instance = new JirafeEvents.Cart();
      //expect(instance).to.be();
    });

  });

}));
