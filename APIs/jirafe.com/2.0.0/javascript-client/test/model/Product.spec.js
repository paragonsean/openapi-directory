/**
 * Jirafe Events
 * API endpoins for sending Jirafe events
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@jirafe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JirafeEvents);
  }
}(this, function(expect, JirafeEvents) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JirafeEvents.Product();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Product', function() {
    it('should create an instance of Product', function() {
      // uncomment below and update the code to test Product
      //var instance = new JirafeEvents.Product();
      //expect(instance).to.be.a(JirafeEvents.Product);
    });

    it('should have the property ancestors (base name: "ancestors")', function() {
      // uncomment below and update the code to test the property ancestors
      //var instance = new JirafeEvents.Product();
      //expect(instance).to.be();
    });

    it('should have the property attributes (base name: "attributes")', function() {
      // uncomment below and update the code to test the property attributes
      //var instance = new JirafeEvents.Product();
      //expect(instance).to.be();
    });

    it('should have the property baseProduct (base name: "base_product")', function() {
      // uncomment below and update the code to test the property baseProduct
      //var instance = new JirafeEvents.Product();
      //expect(instance).to.be();
    });

    it('should have the property brand (base name: "brand")', function() {
      // uncomment below and update the code to test the property brand
      //var instance = new JirafeEvents.Product();
      //expect(instance).to.be();
    });

    it('should have the property catalog (base name: "catalog")', function() {
      // uncomment below and update the code to test the property catalog
      //var instance = new JirafeEvents.Product();
      //expect(instance).to.be();
    });

    it('should have the property categories (base name: "categories")', function() {
      // uncomment below and update the code to test the property categories
      //var instance = new JirafeEvents.Product();
      //expect(instance).to.be();
    });

    it('should have the property changeDate (base name: "change_date")', function() {
      // uncomment below and update the code to test the property changeDate
      //var instance = new JirafeEvents.Product();
      //expect(instance).to.be();
    });

    it('should have the property code (base name: "code")', function() {
      // uncomment below and update the code to test the property code
      //var instance = new JirafeEvents.Product();
      //expect(instance).to.be();
    });

    it('should have the property createDate (base name: "create_date")', function() {
      // uncomment below and update the code to test the property createDate
      //var instance = new JirafeEvents.Product();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new JirafeEvents.Product();
      //expect(instance).to.be();
    });

    it('should have the property images (base name: "images")', function() {
      // uncomment below and update the code to test the property images
      //var instance = new JirafeEvents.Product();
      //expect(instance).to.be();
    });

    it('should have the property isOrder (base name: "is_order")', function() {
      // uncomment below and update the code to test the property isOrder
      //var instance = new JirafeEvents.Product();
      //expect(instance).to.be();
    });

    it('should have the property isSku (base name: "is_sku")', function() {
      // uncomment below and update the code to test the property isSku
      //var instance = new JirafeEvents.Product();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new JirafeEvents.Product();
      //expect(instance).to.be();
    });

    it('should have the property rating (base name: "rating")', function() {
      // uncomment below and update the code to test the property rating
      //var instance = new JirafeEvents.Product();
      //expect(instance).to.be();
    });

    it('should have the property urls (base name: "urls")', function() {
      // uncomment below and update the code to test the property urls
      //var instance = new JirafeEvents.Product();
      //expect(instance).to.be();
    });

    it('should have the property vendors (base name: "vendors")', function() {
      // uncomment below and update the code to test the property vendors
      //var instance = new JirafeEvents.Product();
      //expect(instance).to.be();
    });

  });

}));
