/**
 * Jirafe Events
 * API endpoins for sending Jirafe events
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@jirafe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrderCancelled model module.
 * @module model/OrderCancelled
 * @version 2.0.0
 */
class OrderCancelled {
    /**
     * Constructs a new <code>OrderCancelled</code>.
     * @alias module:model/OrderCancelled
     * @param cancelDate {Date} 
     * @param orderNumber {String} 
     * @param status {module:model/OrderCancelled.StatusEnum} 
     */
    constructor(cancelDate, orderNumber, status) { 
        
        OrderCancelled.initialize(this, cancelDate, orderNumber, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, cancelDate, orderNumber, status) { 
        obj['cancel_date'] = cancelDate;
        obj['order_number'] = orderNumber;
        obj['status'] = status || 'cancelled';
    }

    /**
     * Constructs a <code>OrderCancelled</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderCancelled} obj Optional instance to populate.
     * @return {module:model/OrderCancelled} The populated <code>OrderCancelled</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderCancelled();

            if (data.hasOwnProperty('cancel_date')) {
                obj['cancel_date'] = ApiClient.convertToType(data['cancel_date'], 'Date');
            }
            if (data.hasOwnProperty('order_number')) {
                obj['order_number'] = ApiClient.convertToType(data['order_number'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderCancelled</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderCancelled</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OrderCancelled.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['order_number'] && !(typeof data['order_number'] === 'string' || data['order_number'] instanceof String)) {
            throw new Error("Expected the field `order_number` to be a primitive type in the JSON string but got " + data['order_number']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}

OrderCancelled.RequiredProperties = ["cancel_date", "order_number", "status"];

/**
 * @member {Date} cancel_date
 */
OrderCancelled.prototype['cancel_date'] = undefined;

/**
 * @member {String} order_number
 */
OrderCancelled.prototype['order_number'] = undefined;

/**
 * @member {module:model/OrderCancelled.StatusEnum} status
 * @default 'cancelled'
 */
OrderCancelled.prototype['status'] = 'cancelled';





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
OrderCancelled['StatusEnum'] = {

    /**
     * value: "cancelled"
     * @const
     */
    "cancelled": "cancelled"
};



export default OrderCancelled;

