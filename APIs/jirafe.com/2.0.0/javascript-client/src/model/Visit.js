/**
 * Jirafe Events
 * API endpoins for sending Jirafe events
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@jirafe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Visit model module.
 * @module model/Visit
 * @version 2.0.0
 */
class Visit {
    /**
     * Constructs a new <code>Visit</code>.
     * @alias module:model/Visit
     * @param lastPageviewId {String} 
     * @param pageviewId {String} 
     * @param visitId {String} 
     * @param visitorId {String} 
     */
    constructor(lastPageviewId, pageviewId, visitId, visitorId) { 
        
        Visit.initialize(this, lastPageviewId, pageviewId, visitId, visitorId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, lastPageviewId, pageviewId, visitId, visitorId) { 
        obj['last_pageview_id'] = lastPageviewId;
        obj['pageview_id'] = pageviewId;
        obj['visit_id'] = visitId;
        obj['visitor_id'] = visitorId;
    }

    /**
     * Constructs a <code>Visit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Visit} obj Optional instance to populate.
     * @return {module:model/Visit} The populated <code>Visit</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Visit();

            if (data.hasOwnProperty('last_pageview_id')) {
                obj['last_pageview_id'] = ApiClient.convertToType(data['last_pageview_id'], 'String');
            }
            if (data.hasOwnProperty('pageview_id')) {
                obj['pageview_id'] = ApiClient.convertToType(data['pageview_id'], 'String');
            }
            if (data.hasOwnProperty('visit_id')) {
                obj['visit_id'] = ApiClient.convertToType(data['visit_id'], 'String');
            }
            if (data.hasOwnProperty('visitor_id')) {
                obj['visitor_id'] = ApiClient.convertToType(data['visitor_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Visit</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Visit</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Visit.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['last_pageview_id'] && !(typeof data['last_pageview_id'] === 'string' || data['last_pageview_id'] instanceof String)) {
            throw new Error("Expected the field `last_pageview_id` to be a primitive type in the JSON string but got " + data['last_pageview_id']);
        }
        // ensure the json data is a string
        if (data['pageview_id'] && !(typeof data['pageview_id'] === 'string' || data['pageview_id'] instanceof String)) {
            throw new Error("Expected the field `pageview_id` to be a primitive type in the JSON string but got " + data['pageview_id']);
        }
        // ensure the json data is a string
        if (data['visit_id'] && !(typeof data['visit_id'] === 'string' || data['visit_id'] instanceof String)) {
            throw new Error("Expected the field `visit_id` to be a primitive type in the JSON string but got " + data['visit_id']);
        }
        // ensure the json data is a string
        if (data['visitor_id'] && !(typeof data['visitor_id'] === 'string' || data['visitor_id'] instanceof String)) {
            throw new Error("Expected the field `visitor_id` to be a primitive type in the JSON string but got " + data['visitor_id']);
        }

        return true;
    }


}

Visit.RequiredProperties = ["last_pageview_id", "pageview_id", "visit_id", "visitor_id"];

/**
 * @member {String} last_pageview_id
 */
Visit.prototype['last_pageview_id'] = undefined;

/**
 * @member {String} pageview_id
 */
Visit.prototype['pageview_id'] = undefined;

/**
 * @member {String} visit_id
 */
Visit.prototype['visit_id'] = undefined;

/**
 * @member {String} visitor_id
 */
Visit.prototype['visitor_id'] = undefined;






export default Visit;

