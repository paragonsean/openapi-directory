/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListErrorsResponse from '../model/ListErrorsResponse';

/**
* Errors service.
* @module api/ErrorsApi
* @version v1
*/
export default class ErrorsApi {

    /**
    * Constructs a new ErrorsApi. 
    * @alias module:api/ErrorsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the listErrors operation.
     * @callback module:api/ErrorsApi~listErrorsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListErrorsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Errors
     * Returns a list of errors.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [filters] Limit the results to rows that match conditions from provided key:value pairs. Must be provided as an array query string parameter.  To exclude rows that match a certain condition, prepend a `!` character to the dimension.  Possible filter names are the same as returned by the List Filters endpoint.  Example:    * `filters[]=operating_system:windows&filters[]=!country:US` 
     * @param {Array.<String>} [timeframe] Timeframe window to limit results by. Must be provided as an array query string parameter (e.g. timeframe[]=).  Accepted formats are...    * array of epoch timestamps e.g. `timeframe[]=1498867200&timeframe[]=1498953600`   * duration string e.g. `timeframe[]=24:hours or timeframe[]=7:days` 
     * @param {module:api/ErrorsApi~listErrorsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListErrorsResponse}
     */
    listErrors(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'filters[]': this.apiClient.buildCollectionParam(opts['filters'], 'multi'),
        'timeframe[]': this.apiClient.buildCollectionParam(opts['timeframe'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accessToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListErrorsResponse;
      return this.apiClient.callApi(
        '/data/v1/errors', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
