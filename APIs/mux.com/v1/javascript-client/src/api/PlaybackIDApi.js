/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetAssetOrLiveStreamIdResponse from '../model/GetAssetOrLiveStreamIdResponse';

/**
* PlaybackID service.
* @module api/PlaybackIDApi
* @version v1
*/
export default class PlaybackIDApi {

    /**
    * Constructs a new PlaybackIDApi. 
    * @alias module:api/PlaybackIDApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getAssetOrLivestreamId operation.
     * @callback module:api/PlaybackIDApi~getAssetOrLivestreamIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAssetOrLiveStreamIdResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an Asset or Live Stream ID
     * Retrieves the Identifier of the Asset or Live Stream associated with the Playback ID.
     * @param {String} PLAYBACK_ID The live stream's playback ID.
     * @param {module:api/PlaybackIDApi~getAssetOrLivestreamIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAssetOrLiveStreamIdResponse}
     */
    getAssetOrLivestreamId(PLAYBACK_ID, callback) {
      let postBody = null;
      // verify the required parameter 'PLAYBACK_ID' is set
      if (PLAYBACK_ID === undefined || PLAYBACK_ID === null) {
        throw new Error("Missing the required parameter 'PLAYBACK_ID' when calling getAssetOrLivestreamId");
      }

      let pathParams = {
        'PLAYBACK_ID': PLAYBACK_ID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accessToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetAssetOrLiveStreamIdResponse;
      return this.apiClient.callApi(
        '/video/v1/playback-ids/{PLAYBACK_ID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
