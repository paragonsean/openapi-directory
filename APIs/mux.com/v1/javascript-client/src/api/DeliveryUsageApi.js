/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListDeliveryUsageResponse from '../model/ListDeliveryUsageResponse';

/**
* DeliveryUsage service.
* @module api/DeliveryUsageApi
* @version v1
*/
export default class DeliveryUsageApi {

    /**
    * Constructs a new DeliveryUsageApi. 
    * @alias module:api/DeliveryUsageApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the listDeliveryUsage operation.
     * @callback module:api/DeliveryUsageApi~listDeliveryUsageCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListDeliveryUsageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Usage
     * Returns a list of delivery usage records and their associated Asset IDs or Live Stream IDs.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] Offset by this many pages, of the size of `limit`
     * @param {Number} [limit = 100)] Number of items to include in the response
     * @param {String} [assetId] Filter response to return delivery usage for this asset only. You cannot specify both the `asset_id` and `live_stream_id` parameters together.
     * @param {String} [liveStreamId] Filter response to return delivery usage for assets for this live stream. You cannot specify both the `asset_id` and `live_stream_id` parameters together.
     * @param {Array.<String>} [timeframe] Time window to get delivery usage information. timeframe[0] indicates the start time, timeframe[1] indicates the end time in seconds since the Unix epoch. Default time window is 1 hour representing usage from 13th to 12th hour from when the request is made.
     * @param {module:api/DeliveryUsageApi~listDeliveryUsageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListDeliveryUsageResponse}
     */
    listDeliveryUsage(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'limit': opts['limit'],
        'asset_id': opts['assetId'],
        'live_stream_id': opts['liveStreamId'],
        'timeframe[]': this.apiClient.buildCollectionParam(opts['timeframe'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accessToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListDeliveryUsageResponse;
      return this.apiClient.callApi(
        '/video/v1/delivery-usage', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
