/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateAssetRequest from './CreateAssetRequest';

/**
 * The CreateUploadRequest model module.
 * @module model/CreateUploadRequest
 * @version v1
 */
class CreateUploadRequest {
    /**
     * Constructs a new <code>CreateUploadRequest</code>.
     * @alias module:model/CreateUploadRequest
     * @param newAssetSettings {module:model/CreateAssetRequest} 
     */
    constructor(newAssetSettings) { 
        
        CreateUploadRequest.initialize(this, newAssetSettings);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, newAssetSettings) { 
        obj['new_asset_settings'] = newAssetSettings;
        obj['timeout'] = 3600;
    }

    /**
     * Constructs a <code>CreateUploadRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateUploadRequest} obj Optional instance to populate.
     * @return {module:model/CreateUploadRequest} The populated <code>CreateUploadRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateUploadRequest();

            if (data.hasOwnProperty('cors_origin')) {
                obj['cors_origin'] = ApiClient.convertToType(data['cors_origin'], 'String');
            }
            if (data.hasOwnProperty('new_asset_settings')) {
                obj['new_asset_settings'] = CreateAssetRequest.constructFromObject(data['new_asset_settings']);
            }
            if (data.hasOwnProperty('test')) {
                obj['test'] = ApiClient.convertToType(data['test'], 'Boolean');
            }
            if (data.hasOwnProperty('timeout')) {
                obj['timeout'] = ApiClient.convertToType(data['timeout'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateUploadRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateUploadRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateUploadRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['cors_origin'] && !(typeof data['cors_origin'] === 'string' || data['cors_origin'] instanceof String)) {
            throw new Error("Expected the field `cors_origin` to be a primitive type in the JSON string but got " + data['cors_origin']);
        }
        // validate the optional field `new_asset_settings`
        if (data['new_asset_settings']) { // data not null
          CreateAssetRequest.validateJSON(data['new_asset_settings']);
        }

        return true;
    }


}

CreateUploadRequest.RequiredProperties = ["new_asset_settings"];

/**
 * If the upload URL will be used in a browser, you must specify the origin in order for the signed URL to have the correct CORS headers.
 * @member {String} cors_origin
 */
CreateUploadRequest.prototype['cors_origin'] = undefined;

/**
 * @member {module:model/CreateAssetRequest} new_asset_settings
 */
CreateUploadRequest.prototype['new_asset_settings'] = undefined;

/**
 * @member {Boolean} test
 */
CreateUploadRequest.prototype['test'] = undefined;

/**
 * Max time in seconds for the signed upload URL to be valid. If a successful upload has not occurred before the timeout limit, the direct upload is marked `timed_out`
 * @member {Number} timeout
 * @default 3600
 */
CreateUploadRequest.prototype['timeout'] = 3600;






export default CreateUploadRequest;

