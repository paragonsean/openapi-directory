/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RealTimeHistogramTimeseriesBucketValues from './RealTimeHistogramTimeseriesBucketValues';

/**
 * The RealTimeHistogramTimeseriesDatapoint model module.
 * @module model/RealTimeHistogramTimeseriesDatapoint
 * @version v1
 */
class RealTimeHistogramTimeseriesDatapoint {
    /**
     * Constructs a new <code>RealTimeHistogramTimeseriesDatapoint</code>.
     * @alias module:model/RealTimeHistogramTimeseriesDatapoint
     */
    constructor() { 
        
        RealTimeHistogramTimeseriesDatapoint.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RealTimeHistogramTimeseriesDatapoint</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RealTimeHistogramTimeseriesDatapoint} obj Optional instance to populate.
     * @return {module:model/RealTimeHistogramTimeseriesDatapoint} The populated <code>RealTimeHistogramTimeseriesDatapoint</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RealTimeHistogramTimeseriesDatapoint();

            if (data.hasOwnProperty('average')) {
                obj['average'] = ApiClient.convertToType(data['average'], 'Number');
            }
            if (data.hasOwnProperty('bucket_values')) {
                obj['bucket_values'] = ApiClient.convertToType(data['bucket_values'], [RealTimeHistogramTimeseriesBucketValues]);
            }
            if (data.hasOwnProperty('max_percentage')) {
                obj['max_percentage'] = ApiClient.convertToType(data['max_percentage'], 'Number');
            }
            if (data.hasOwnProperty('median')) {
                obj['median'] = ApiClient.convertToType(data['median'], 'Number');
            }
            if (data.hasOwnProperty('p95')) {
                obj['p95'] = ApiClient.convertToType(data['p95'], 'Number');
            }
            if (data.hasOwnProperty('sum')) {
                obj['sum'] = ApiClient.convertToType(data['sum'], 'Number');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RealTimeHistogramTimeseriesDatapoint</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RealTimeHistogramTimeseriesDatapoint</code>.
     */
    static validateJSON(data) {
        if (data['bucket_values']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['bucket_values'])) {
                throw new Error("Expected the field `bucket_values` to be an array in the JSON data but got " + data['bucket_values']);
            }
            // validate the optional field `bucket_values` (array)
            for (const item of data['bucket_values']) {
                RealTimeHistogramTimeseriesBucketValues.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['timestamp'] && !(typeof data['timestamp'] === 'string' || data['timestamp'] instanceof String)) {
            throw new Error("Expected the field `timestamp` to be a primitive type in the JSON string but got " + data['timestamp']);
        }

        return true;
    }


}



/**
 * @member {Number} average
 */
RealTimeHistogramTimeseriesDatapoint.prototype['average'] = undefined;

/**
 * @member {Array.<module:model/RealTimeHistogramTimeseriesBucketValues>} bucket_values
 */
RealTimeHistogramTimeseriesDatapoint.prototype['bucket_values'] = undefined;

/**
 * @member {Number} max_percentage
 */
RealTimeHistogramTimeseriesDatapoint.prototype['max_percentage'] = undefined;

/**
 * @member {Number} median
 */
RealTimeHistogramTimeseriesDatapoint.prototype['median'] = undefined;

/**
 * @member {Number} p95
 */
RealTimeHistogramTimeseriesDatapoint.prototype['p95'] = undefined;

/**
 * @member {Number} sum
 */
RealTimeHistogramTimeseriesDatapoint.prototype['sum'] = undefined;

/**
 * @member {String} timestamp
 */
RealTimeHistogramTimeseriesDatapoint.prototype['timestamp'] = undefined;






export default RealTimeHistogramTimeseriesDatapoint;

