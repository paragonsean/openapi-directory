/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeliveryReportDeliveredSecondsByResolution model module.
 * @module model/DeliveryReportDeliveredSecondsByResolution
 * @version v1
 */
class DeliveryReportDeliveredSecondsByResolution {
    /**
     * Constructs a new <code>DeliveryReportDeliveredSecondsByResolution</code>.
     * Seconds delivered broken into resolution tiers. Each tier will only be displayed if there was content delivered in the tier.
     * @alias module:model/DeliveryReportDeliveredSecondsByResolution
     */
    constructor() { 
        
        DeliveryReportDeliveredSecondsByResolution.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeliveryReportDeliveredSecondsByResolution</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeliveryReportDeliveredSecondsByResolution} obj Optional instance to populate.
     * @return {module:model/DeliveryReportDeliveredSecondsByResolution} The populated <code>DeliveryReportDeliveredSecondsByResolution</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeliveryReportDeliveredSecondsByResolution();

            if (data.hasOwnProperty('tier_1080p')) {
                obj['tier_1080p'] = ApiClient.convertToType(data['tier_1080p'], 'Number');
            }
            if (data.hasOwnProperty('tier_1440p')) {
                obj['tier_1440p'] = ApiClient.convertToType(data['tier_1440p'], 'Number');
            }
            if (data.hasOwnProperty('tier_2160p')) {
                obj['tier_2160p'] = ApiClient.convertToType(data['tier_2160p'], 'Number');
            }
            if (data.hasOwnProperty('tier_720p')) {
                obj['tier_720p'] = ApiClient.convertToType(data['tier_720p'], 'Number');
            }
            if (data.hasOwnProperty('tier_audio_only')) {
                obj['tier_audio_only'] = ApiClient.convertToType(data['tier_audio_only'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeliveryReportDeliveredSecondsByResolution</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeliveryReportDeliveredSecondsByResolution</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Total number of delivered seconds during this time window that had a resolution larger than the 720p tier but less than or equal to the 1440p tier (over 921,600 and <= 2,073,600 pixels total).
 * @member {Number} tier_1080p
 */
DeliveryReportDeliveredSecondsByResolution.prototype['tier_1080p'] = undefined;

/**
 * Total number of delivered seconds during this time window that had a resolution larger than the 1080p tier but less than or equal to the 2160p tier (over 2,073,600 and <= 4,194,304 pixels total).
 * @member {Number} tier_1440p
 */
DeliveryReportDeliveredSecondsByResolution.prototype['tier_1440p'] = undefined;

/**
 * Total number of delivered seconds during this time window that had a resolution larger than the 1440p tier (over 4,194,304 pixels total).
 * @member {Number} tier_2160p
 */
DeliveryReportDeliveredSecondsByResolution.prototype['tier_2160p'] = undefined;

/**
 * Total number of delivered seconds during this time window that had a resolution within the 720p tier (up to 921,600 pixels total, based on typical 1280x720).
 * @member {Number} tier_720p
 */
DeliveryReportDeliveredSecondsByResolution.prototype['tier_720p'] = undefined;

/**
 * Total number of delivered seconds during this time window that had a resolution of audio only.
 * @member {Number} tier_audio_only
 */
DeliveryReportDeliveredSecondsByResolution.prototype['tier_audio_only'] = undefined;






export default DeliveryReportDeliveredSecondsByResolution;

