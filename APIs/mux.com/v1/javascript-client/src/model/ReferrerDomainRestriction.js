/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReferrerDomainRestriction model module.
 * @module model/ReferrerDomainRestriction
 * @version v1
 */
class ReferrerDomainRestriction {
    /**
     * Constructs a new <code>ReferrerDomainRestriction</code>.
     * A list of domains allowed to play your videos.
     * @alias module:model/ReferrerDomainRestriction
     */
    constructor() { 
        
        ReferrerDomainRestriction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['allow_no_referrer'] = false;
    }

    /**
     * Constructs a <code>ReferrerDomainRestriction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReferrerDomainRestriction} obj Optional instance to populate.
     * @return {module:model/ReferrerDomainRestriction} The populated <code>ReferrerDomainRestriction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReferrerDomainRestriction();

            if (data.hasOwnProperty('allow_no_referrer')) {
                obj['allow_no_referrer'] = ApiClient.convertToType(data['allow_no_referrer'], 'Boolean');
            }
            if (data.hasOwnProperty('allowed_domains')) {
                obj['allowed_domains'] = ApiClient.convertToType(data['allowed_domains'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReferrerDomainRestriction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReferrerDomainRestriction</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['allowed_domains'])) {
            throw new Error("Expected the field `allowed_domains` to be an array in the JSON data but got " + data['allowed_domains']);
        }

        return true;
    }


}



/**
 * A boolean to determine whether to allow or deny HTTP requests without `Referer` HTTP request header. Playback requests coming from non-web/native applications like iOS, Android or smart TVs will not have a `Referer` HTTP header. Set this value to `true` to allow these playback requests.
 * @member {Boolean} allow_no_referrer
 * @default false
 */
ReferrerDomainRestriction.prototype['allow_no_referrer'] = false;

/**
 * List of domains allowed to play videos. Possible values are   * `[]` Empty Array indicates deny video playback requests for all domains   * `[\"*\"]` A Single Wildcard `*` entry means allow video playback requests from any domain   *  `[\"*.example.com\", \"foo.com\"]` A list of up to 10 domains or valid dns-style wildcards 
 * @member {Array.<String>} allowed_domains
 */
ReferrerDomainRestriction.prototype['allowed_domains'] = undefined;






export default ReferrerDomainRestriction;

