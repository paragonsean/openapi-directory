/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InputTrack model module.
 * @module model/InputTrack
 * @version v1
 */
class InputTrack {
    /**
     * Constructs a new <code>InputTrack</code>.
     * @alias module:model/InputTrack
     */
    constructor() { 
        
        InputTrack.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InputTrack</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InputTrack} obj Optional instance to populate.
     * @return {module:model/InputTrack} The populated <code>InputTrack</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InputTrack();

            if (data.hasOwnProperty('channels')) {
                obj['channels'] = ApiClient.convertToType(data['channels'], 'Number');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'Number');
            }
            if (data.hasOwnProperty('encoding')) {
                obj['encoding'] = ApiClient.convertToType(data['encoding'], 'String');
            }
            if (data.hasOwnProperty('frame_rate')) {
                obj['frame_rate'] = ApiClient.convertToType(data['frame_rate'], 'Number');
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'Number');
            }
            if (data.hasOwnProperty('sample_rate')) {
                obj['sample_rate'] = ApiClient.convertToType(data['sample_rate'], 'Number');
            }
            if (data.hasOwnProperty('sample_size')) {
                obj['sample_size'] = ApiClient.convertToType(data['sample_size'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('width')) {
                obj['width'] = ApiClient.convertToType(data['width'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InputTrack</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InputTrack</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['encoding'] && !(typeof data['encoding'] === 'string' || data['encoding'] instanceof String)) {
            throw new Error("Expected the field `encoding` to be a primitive type in the JSON string but got " + data['encoding']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {Number} channels
 */
InputTrack.prototype['channels'] = undefined;

/**
 * @member {Number} duration
 */
InputTrack.prototype['duration'] = undefined;

/**
 * @member {String} encoding
 */
InputTrack.prototype['encoding'] = undefined;

/**
 * @member {Number} frame_rate
 */
InputTrack.prototype['frame_rate'] = undefined;

/**
 * @member {Number} height
 */
InputTrack.prototype['height'] = undefined;

/**
 * @member {Number} sample_rate
 */
InputTrack.prototype['sample_rate'] = undefined;

/**
 * @member {Number} sample_size
 */
InputTrack.prototype['sample_size'] = undefined;

/**
 * @member {String} type
 */
InputTrack.prototype['type'] = undefined;

/**
 * @member {Number} width
 */
InputTrack.prototype['width'] = undefined;






export default InputTrack;

