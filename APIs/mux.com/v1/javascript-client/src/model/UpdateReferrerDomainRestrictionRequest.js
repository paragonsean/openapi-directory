/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReferrerDomainRestriction from './ReferrerDomainRestriction';

/**
 * The UpdateReferrerDomainRestrictionRequest model module.
 * @module model/UpdateReferrerDomainRestrictionRequest
 * @version v1
 */
class UpdateReferrerDomainRestrictionRequest {
    /**
     * Constructs a new <code>UpdateReferrerDomainRestrictionRequest</code>.
     * @alias module:model/UpdateReferrerDomainRestrictionRequest
     * @param {(module:model/ReferrerDomainRestriction)} instance The actual instance to initialize UpdateReferrerDomainRestrictionRequest.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "ReferrerDomainRestriction") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ReferrerDomainRestriction.validateJSON(instance); // throw an exception if no match
                // create ReferrerDomainRestriction from JS object
                this.actualInstance = ReferrerDomainRestriction.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ReferrerDomainRestriction
            errorMessages.push("Failed to construct ReferrerDomainRestriction: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `UpdateReferrerDomainRestrictionRequest` with oneOf schemas ReferrerDomainRestriction. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `UpdateReferrerDomainRestrictionRequest` with oneOf schemas ReferrerDomainRestriction. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>UpdateReferrerDomainRestrictionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateReferrerDomainRestrictionRequest} obj Optional instance to populate.
     * @return {module:model/UpdateReferrerDomainRestrictionRequest} The populated <code>UpdateReferrerDomainRestrictionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        return new UpdateReferrerDomainRestrictionRequest(data);
    }

    /**
     * Gets the actual instance, which can be <code>ReferrerDomainRestriction</code>.
     * @return {(module:model/ReferrerDomainRestriction)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>ReferrerDomainRestriction</code>.
     * @param {(module:model/ReferrerDomainRestriction)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = UpdateReferrerDomainRestrictionRequest.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of UpdateReferrerDomainRestrictionRequest from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/UpdateReferrerDomainRestrictionRequest} An instance of UpdateReferrerDomainRestrictionRequest.
     */
    static fromJSON = function(json_string){
        return UpdateReferrerDomainRestrictionRequest.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * A boolean to determine whether to allow or deny HTTP requests without `Referer` HTTP request header. Playback requests coming from non-web/native applications like iOS, Android or smart TVs will not have a `Referer` HTTP header. Set this value to `true` to allow these playback requests.
 * @member {Boolean} allow_no_referrer
 * @default false
 */
UpdateReferrerDomainRestrictionRequest.prototype['allow_no_referrer'] = false;

/**
 * List of domains allowed to play videos. Possible values are   * `[]` Empty Array indicates deny video playback requests for all domains   * `[\"*\"]` A Single Wildcard `*` entry means allow video playback requests from any domain   *  `[\"*.example.com\", \"foo.com\"]` A list of up to 10 domains or valid dns-style wildcards 
 * @member {Array.<String>} allowed_domains
 */
UpdateReferrerDomainRestrictionRequest.prototype['allowed_domains'] = undefined;


UpdateReferrerDomainRestrictionRequest.OneOf = ["ReferrerDomainRestriction"];

export default UpdateReferrerDomainRestrictionRequest;

