/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AssetStaticRenditionsFilesInner model module.
 * @module model/AssetStaticRenditionsFilesInner
 * @version v1
 */
class AssetStaticRenditionsFilesInner {
    /**
     * Constructs a new <code>AssetStaticRenditionsFilesInner</code>.
     * @alias module:model/AssetStaticRenditionsFilesInner
     */
    constructor() { 
        
        AssetStaticRenditionsFilesInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AssetStaticRenditionsFilesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssetStaticRenditionsFilesInner} obj Optional instance to populate.
     * @return {module:model/AssetStaticRenditionsFilesInner} The populated <code>AssetStaticRenditionsFilesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssetStaticRenditionsFilesInner();

            if (data.hasOwnProperty('bitrate')) {
                obj['bitrate'] = ApiClient.convertToType(data['bitrate'], 'Number');
            }
            if (data.hasOwnProperty('ext')) {
                obj['ext'] = ApiClient.convertToType(data['ext'], 'String');
            }
            if (data.hasOwnProperty('filesize')) {
                obj['filesize'] = ApiClient.convertToType(data['filesize'], 'String');
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('width')) {
                obj['width'] = ApiClient.convertToType(data['width'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssetStaticRenditionsFilesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssetStaticRenditionsFilesInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ext'] && !(typeof data['ext'] === 'string' || data['ext'] instanceof String)) {
            throw new Error("Expected the field `ext` to be a primitive type in the JSON string but got " + data['ext']);
        }
        // ensure the json data is a string
        if (data['filesize'] && !(typeof data['filesize'] === 'string' || data['filesize'] instanceof String)) {
            throw new Error("Expected the field `filesize` to be a primitive type in the JSON string but got " + data['filesize']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * The bitrate in bits per second
 * @member {Number} bitrate
 */
AssetStaticRenditionsFilesInner.prototype['bitrate'] = undefined;

/**
 * Extension of the static rendition file
 * @member {module:model/AssetStaticRenditionsFilesInner.ExtEnum} ext
 */
AssetStaticRenditionsFilesInner.prototype['ext'] = undefined;

/**
 * The file size in bytes
 * @member {String} filesize
 */
AssetStaticRenditionsFilesInner.prototype['filesize'] = undefined;

/**
 * The height of the static rendition's file in pixels
 * @member {Number} height
 */
AssetStaticRenditionsFilesInner.prototype['height'] = undefined;

/**
 * @member {module:model/AssetStaticRenditionsFilesInner.NameEnum} name
 */
AssetStaticRenditionsFilesInner.prototype['name'] = undefined;

/**
 * The width of the static rendition's file in pixels
 * @member {Number} width
 */
AssetStaticRenditionsFilesInner.prototype['width'] = undefined;





/**
 * Allowed values for the <code>ext</code> property.
 * @enum {String}
 * @readonly
 */
AssetStaticRenditionsFilesInner['ExtEnum'] = {

    /**
     * value: "mp4"
     * @const
     */
    "mp4": "mp4",

    /**
     * value: "m4a"
     * @const
     */
    "m4a": "m4a"
};


/**
 * Allowed values for the <code>name</code> property.
 * @enum {String}
 * @readonly
 */
AssetStaticRenditionsFilesInner['NameEnum'] = {

    /**
     * value: "low.mp4"
     * @const
     */
    "low.mp4": "low.mp4",

    /**
     * value: "medium.mp4"
     * @const
     */
    "medium.mp4": "medium.mp4",

    /**
     * value: "high.mp4"
     * @const
     */
    "high.mp4": "high.mp4",

    /**
     * value: "audio.m4a"
     * @const
     */
    "audio.m4a": "audio.m4a"
};



export default AssetStaticRenditionsFilesInner;

