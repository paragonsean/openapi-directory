/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DeliveryReportDeliveredSecondsByResolution from './DeliveryReportDeliveredSecondsByResolution';

/**
 * The DeliveryReport model module.
 * @module model/DeliveryReport
 * @version v1
 */
class DeliveryReport {
    /**
     * Constructs a new <code>DeliveryReport</code>.
     * @alias module:model/DeliveryReport
     */
    constructor() { 
        
        DeliveryReport.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeliveryReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeliveryReport} obj Optional instance to populate.
     * @return {module:model/DeliveryReport} The populated <code>DeliveryReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeliveryReport();

            if (data.hasOwnProperty('asset_duration')) {
                obj['asset_duration'] = ApiClient.convertToType(data['asset_duration'], 'Number');
            }
            if (data.hasOwnProperty('asset_id')) {
                obj['asset_id'] = ApiClient.convertToType(data['asset_id'], 'String');
            }
            if (data.hasOwnProperty('asset_resolution_tier')) {
                obj['asset_resolution_tier'] = ApiClient.convertToType(data['asset_resolution_tier'], 'String');
            }
            if (data.hasOwnProperty('asset_state')) {
                obj['asset_state'] = ApiClient.convertToType(data['asset_state'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('deleted_at')) {
                obj['deleted_at'] = ApiClient.convertToType(data['deleted_at'], 'String');
            }
            if (data.hasOwnProperty('delivered_seconds')) {
                obj['delivered_seconds'] = ApiClient.convertToType(data['delivered_seconds'], 'Number');
            }
            if (data.hasOwnProperty('delivered_seconds_by_resolution')) {
                obj['delivered_seconds_by_resolution'] = DeliveryReportDeliveredSecondsByResolution.constructFromObject(data['delivered_seconds_by_resolution']);
            }
            if (data.hasOwnProperty('live_stream_id')) {
                obj['live_stream_id'] = ApiClient.convertToType(data['live_stream_id'], 'String');
            }
            if (data.hasOwnProperty('passthrough')) {
                obj['passthrough'] = ApiClient.convertToType(data['passthrough'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeliveryReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeliveryReport</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['asset_id'] && !(typeof data['asset_id'] === 'string' || data['asset_id'] instanceof String)) {
            throw new Error("Expected the field `asset_id` to be a primitive type in the JSON string but got " + data['asset_id']);
        }
        // ensure the json data is a string
        if (data['asset_resolution_tier'] && !(typeof data['asset_resolution_tier'] === 'string' || data['asset_resolution_tier'] instanceof String)) {
            throw new Error("Expected the field `asset_resolution_tier` to be a primitive type in the JSON string but got " + data['asset_resolution_tier']);
        }
        // ensure the json data is a string
        if (data['asset_state'] && !(typeof data['asset_state'] === 'string' || data['asset_state'] instanceof String)) {
            throw new Error("Expected the field `asset_state` to be a primitive type in the JSON string but got " + data['asset_state']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['deleted_at'] && !(typeof data['deleted_at'] === 'string' || data['deleted_at'] instanceof String)) {
            throw new Error("Expected the field `deleted_at` to be a primitive type in the JSON string but got " + data['deleted_at']);
        }
        // validate the optional field `delivered_seconds_by_resolution`
        if (data['delivered_seconds_by_resolution']) { // data not null
          DeliveryReportDeliveredSecondsByResolution.validateJSON(data['delivered_seconds_by_resolution']);
        }
        // ensure the json data is a string
        if (data['live_stream_id'] && !(typeof data['live_stream_id'] === 'string' || data['live_stream_id'] instanceof String)) {
            throw new Error("Expected the field `live_stream_id` to be a primitive type in the JSON string but got " + data['live_stream_id']);
        }
        // ensure the json data is a string
        if (data['passthrough'] && !(typeof data['passthrough'] === 'string' || data['passthrough'] instanceof String)) {
            throw new Error("Expected the field `passthrough` to be a primitive type in the JSON string but got " + data['passthrough']);
        }

        return true;
    }


}



/**
 * The duration of the asset in seconds.
 * @member {Number} asset_duration
 */
DeliveryReport.prototype['asset_duration'] = undefined;

/**
 * Unique identifier for the asset.
 * @member {String} asset_id
 */
DeliveryReport.prototype['asset_id'] = undefined;

/**
 * The resolution tier that the asset was ingested at, affecting billing for ingest & storage
 * @member {module:model/DeliveryReport.AssetResolutionTierEnum} asset_resolution_tier
 */
DeliveryReport.prototype['asset_resolution_tier'] = undefined;

/**
 * The state of the asset.
 * @member {module:model/DeliveryReport.AssetStateEnum} asset_state
 */
DeliveryReport.prototype['asset_state'] = undefined;

/**
 * Time at which the asset was created. Measured in seconds since the Unix epoch.
 * @member {String} created_at
 */
DeliveryReport.prototype['created_at'] = undefined;

/**
 * If exists, time at which the asset was deleted. Measured in seconds since the Unix epoch.
 * @member {String} deleted_at
 */
DeliveryReport.prototype['deleted_at'] = undefined;

/**
 * Total number of delivered seconds during this time window.
 * @member {Number} delivered_seconds
 */
DeliveryReport.prototype['delivered_seconds'] = undefined;

/**
 * @member {module:model/DeliveryReportDeliveredSecondsByResolution} delivered_seconds_by_resolution
 */
DeliveryReport.prototype['delivered_seconds_by_resolution'] = undefined;

/**
 * Unique identifier for the live stream that created the asset.
 * @member {String} live_stream_id
 */
DeliveryReport.prototype['live_stream_id'] = undefined;

/**
 * The `passthrough` value for the asset.
 * @member {String} passthrough
 */
DeliveryReport.prototype['passthrough'] = undefined;





/**
 * Allowed values for the <code>asset_resolution_tier</code> property.
 * @enum {String}
 * @readonly
 */
DeliveryReport['AssetResolutionTierEnum'] = {

    /**
     * value: "audio-only"
     * @const
     */
    "audio-only": "audio-only",

    /**
     * value: "720p"
     * @const
     */
    "720p": "720p",

    /**
     * value: "1080p"
     * @const
     */
    "1080p": "1080p",

    /**
     * value: "1440p"
     * @const
     */
    "1440p": "1440p",

    /**
     * value: "2160p"
     * @const
     */
    "2160p": "2160p"
};


/**
 * Allowed values for the <code>asset_state</code> property.
 * @enum {String}
 * @readonly
 */
DeliveryReport['AssetStateEnum'] = {

    /**
     * value: "ready"
     * @const
     */
    "ready": "ready",

    /**
     * value: "errored"
     * @const
     */
    "errored": "errored",

    /**
     * value: "deleted"
     * @const
     */
    "deleted": "deleted"
};



export default DeliveryReport;

