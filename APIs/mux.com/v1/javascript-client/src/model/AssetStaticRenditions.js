/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssetStaticRenditionsFilesInner from './AssetStaticRenditionsFilesInner';

/**
 * The AssetStaticRenditions model module.
 * @module model/AssetStaticRenditions
 * @version v1
 */
class AssetStaticRenditions {
    /**
     * Constructs a new <code>AssetStaticRenditions</code>.
     * An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](https://docs.mux.com/guides/video/download-your-videos) for more information.
     * @alias module:model/AssetStaticRenditions
     */
    constructor() { 
        
        AssetStaticRenditions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['status'] = 'disabled';
    }

    /**
     * Constructs a <code>AssetStaticRenditions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssetStaticRenditions} obj Optional instance to populate.
     * @return {module:model/AssetStaticRenditions} The populated <code>AssetStaticRenditions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssetStaticRenditions();

            if (data.hasOwnProperty('files')) {
                obj['files'] = ApiClient.convertToType(data['files'], [AssetStaticRenditionsFilesInner]);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssetStaticRenditions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssetStaticRenditions</code>.
     */
    static validateJSON(data) {
        if (data['files']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['files'])) {
                throw new Error("Expected the field `files` to be an array in the JSON data but got " + data['files']);
            }
            // validate the optional field `files` (array)
            for (const item of data['files']) {
                AssetStaticRenditionsFilesInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * Array of file objects.
 * @member {Array.<module:model/AssetStaticRenditionsFilesInner>} files
 */
AssetStaticRenditions.prototype['files'] = undefined;

/**
 * Indicates the status of downloadable MP4 versions of this asset.
 * @member {module:model/AssetStaticRenditions.StatusEnum} status
 * @default 'disabled'
 */
AssetStaticRenditions.prototype['status'] = 'disabled';





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
AssetStaticRenditions['StatusEnum'] = {

    /**
     * value: "ready"
     * @const
     */
    "ready": "ready",

    /**
     * value: "preparing"
     * @const
     */
    "preparing": "preparing",

    /**
     * value: "disabled"
     * @const
     */
    "disabled": "disabled",

    /**
     * value: "errored"
     * @const
     */
    "errored": "errored"
};



export default AssetStaticRenditions;

