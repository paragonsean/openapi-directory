/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AssetRecordingTimesInner model module.
 * @module model/AssetRecordingTimesInner
 * @version v1
 */
class AssetRecordingTimesInner {
    /**
     * Constructs a new <code>AssetRecordingTimesInner</code>.
     * @alias module:model/AssetRecordingTimesInner
     */
    constructor() { 
        
        AssetRecordingTimesInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AssetRecordingTimesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssetRecordingTimesInner} obj Optional instance to populate.
     * @return {module:model/AssetRecordingTimesInner} The populated <code>AssetRecordingTimesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssetRecordingTimesInner();

            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'Number');
            }
            if (data.hasOwnProperty('started_at')) {
                obj['started_at'] = ApiClient.convertToType(data['started_at'], 'Date');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssetRecordingTimesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssetRecordingTimesInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * The duration of the live stream recorded. The time value is in seconds.
 * @member {Number} duration
 */
AssetRecordingTimesInner.prototype['duration'] = undefined;

/**
 * The time at which the recording for the live stream started. The time value is Unix epoch time represented in ISO 8601 format.
 * @member {Date} started_at
 */
AssetRecordingTimesInner.prototype['started_at'] = undefined;

/**
 * The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions.
 * @member {module:model/AssetRecordingTimesInner.TypeEnum} type
 */
AssetRecordingTimesInner.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
AssetRecordingTimesInner['TypeEnum'] = {

    /**
     * value: "content"
     * @const
     */
    "content": "content",

    /**
     * value: "slate"
     * @const
     */
    "slate": "slate"
};



export default AssetRecordingTimesInner;

