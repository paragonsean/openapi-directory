/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MuxApi);
  }
}(this, function(expect, MuxApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MuxApi.AssetsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AssetsApi', function() {
    describe('createAsset', function() {
      it('should call createAsset successfully', function(done) {
        //uncomment below and update the code to test createAsset
        //instance.createAsset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAssetPlaybackId', function() {
      it('should call createAssetPlaybackId successfully', function(done) {
        //uncomment below and update the code to test createAssetPlaybackId
        //instance.createAssetPlaybackId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAssetTrack', function() {
      it('should call createAssetTrack successfully', function(done) {
        //uncomment below and update the code to test createAssetTrack
        //instance.createAssetTrack(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAsset', function() {
      it('should call deleteAsset successfully', function(done) {
        //uncomment below and update the code to test deleteAsset
        //instance.deleteAsset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAssetPlaybackId', function() {
      it('should call deleteAssetPlaybackId successfully', function(done) {
        //uncomment below and update the code to test deleteAssetPlaybackId
        //instance.deleteAssetPlaybackId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAssetTrack', function() {
      it('should call deleteAssetTrack successfully', function(done) {
        //uncomment below and update the code to test deleteAssetTrack
        //instance.deleteAssetTrack(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAsset', function() {
      it('should call getAsset successfully', function(done) {
        //uncomment below and update the code to test getAsset
        //instance.getAsset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAssetInputInfo', function() {
      it('should call getAssetInputInfo successfully', function(done) {
        //uncomment below and update the code to test getAssetInputInfo
        //instance.getAssetInputInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAssetPlaybackId', function() {
      it('should call getAssetPlaybackId successfully', function(done) {
        //uncomment below and update the code to test getAssetPlaybackId
        //instance.getAssetPlaybackId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAssets', function() {
      it('should call listAssets successfully', function(done) {
        //uncomment below and update the code to test listAssets
        //instance.listAssets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAsset', function() {
      it('should call updateAsset successfully', function(done) {
        //uncomment below and update the code to test updateAsset
        //instance.updateAsset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAssetMasterAccess', function() {
      it('should call updateAssetMasterAccess successfully', function(done) {
        //uncomment below and update the code to test updateAssetMasterAccess
        //instance.updateAssetMasterAccess(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAssetMp4Support', function() {
      it('should call updateAssetMp4Support successfully', function(done) {
        //uncomment below and update the code to test updateAssetMp4Support
        //instance.updateAssetMp4Support(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
