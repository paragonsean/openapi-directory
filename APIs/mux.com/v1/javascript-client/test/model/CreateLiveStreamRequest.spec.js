/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MuxApi);
  }
}(this, function(expect, MuxApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MuxApi.CreateLiveStreamRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateLiveStreamRequest', function() {
    it('should create an instance of CreateLiveStreamRequest', function() {
      // uncomment below and update the code to test CreateLiveStreamRequest
      //var instance = new MuxApi.CreateLiveStreamRequest();
      //expect(instance).to.be.a(MuxApi.CreateLiveStreamRequest);
    });

    it('should have the property audioOnly (base name: "audio_only")', function() {
      // uncomment below and update the code to test the property audioOnly
      //var instance = new MuxApi.CreateLiveStreamRequest();
      //expect(instance).to.be();
    });

    it('should have the property embeddedSubtitles (base name: "embedded_subtitles")', function() {
      // uncomment below and update the code to test the property embeddedSubtitles
      //var instance = new MuxApi.CreateLiveStreamRequest();
      //expect(instance).to.be();
    });

    it('should have the property generatedSubtitles (base name: "generated_subtitles")', function() {
      // uncomment below and update the code to test the property generatedSubtitles
      //var instance = new MuxApi.CreateLiveStreamRequest();
      //expect(instance).to.be();
    });

    it('should have the property latencyMode (base name: "latency_mode")', function() {
      // uncomment below and update the code to test the property latencyMode
      //var instance = new MuxApi.CreateLiveStreamRequest();
      //expect(instance).to.be();
    });

    it('should have the property lowLatency (base name: "low_latency")', function() {
      // uncomment below and update the code to test the property lowLatency
      //var instance = new MuxApi.CreateLiveStreamRequest();
      //expect(instance).to.be();
    });

    it('should have the property maxContinuousDuration (base name: "max_continuous_duration")', function() {
      // uncomment below and update the code to test the property maxContinuousDuration
      //var instance = new MuxApi.CreateLiveStreamRequest();
      //expect(instance).to.be();
    });

    it('should have the property newAssetSettings (base name: "new_asset_settings")', function() {
      // uncomment below and update the code to test the property newAssetSettings
      //var instance = new MuxApi.CreateLiveStreamRequest();
      //expect(instance).to.be();
    });

    it('should have the property passthrough (base name: "passthrough")', function() {
      // uncomment below and update the code to test the property passthrough
      //var instance = new MuxApi.CreateLiveStreamRequest();
      //expect(instance).to.be();
    });

    it('should have the property playbackPolicy (base name: "playback_policy")', function() {
      // uncomment below and update the code to test the property playbackPolicy
      //var instance = new MuxApi.CreateLiveStreamRequest();
      //expect(instance).to.be();
    });

    it('should have the property reconnectSlateUrl (base name: "reconnect_slate_url")', function() {
      // uncomment below and update the code to test the property reconnectSlateUrl
      //var instance = new MuxApi.CreateLiveStreamRequest();
      //expect(instance).to.be();
    });

    it('should have the property reconnectWindow (base name: "reconnect_window")', function() {
      // uncomment below and update the code to test the property reconnectWindow
      //var instance = new MuxApi.CreateLiveStreamRequest();
      //expect(instance).to.be();
    });

    it('should have the property reducedLatency (base name: "reduced_latency")', function() {
      // uncomment below and update the code to test the property reducedLatency
      //var instance = new MuxApi.CreateLiveStreamRequest();
      //expect(instance).to.be();
    });

    it('should have the property simulcastTargets (base name: "simulcast_targets")', function() {
      // uncomment below and update the code to test the property simulcastTargets
      //var instance = new MuxApi.CreateLiveStreamRequest();
      //expect(instance).to.be();
    });

    it('should have the property test (base name: "test")', function() {
      // uncomment below and update the code to test the property test
      //var instance = new MuxApi.CreateLiveStreamRequest();
      //expect(instance).to.be();
    });

    it('should have the property useSlateForStandardLatency (base name: "use_slate_for_standard_latency")', function() {
      // uncomment below and update the code to test the property useSlateForStandardLatency
      //var instance = new MuxApi.CreateLiveStreamRequest();
      //expect(instance).to.be();
    });

  });

}));
