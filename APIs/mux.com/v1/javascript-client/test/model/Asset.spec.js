/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MuxApi);
  }
}(this, function(expect, MuxApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MuxApi.Asset();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Asset', function() {
    it('should create an instance of Asset', function() {
      // uncomment below and update the code to test Asset
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be.a(MuxApi.Asset);
    });

    it('should have the property aspectRatio (base name: "aspect_ratio")', function() {
      // uncomment below and update the code to test the property aspectRatio
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

    it('should have the property duration (base name: "duration")', function() {
      // uncomment below and update the code to test the property duration
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

    it('should have the property encodingTier (base name: "encoding_tier")', function() {
      // uncomment below and update the code to test the property encodingTier
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

    it('should have the property errors (base name: "errors")', function() {
      // uncomment below and update the code to test the property errors
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

    it('should have the property isLive (base name: "is_live")', function() {
      // uncomment below and update the code to test the property isLive
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

    it('should have the property liveStreamId (base name: "live_stream_id")', function() {
      // uncomment below and update the code to test the property liveStreamId
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

    it('should have the property master (base name: "master")', function() {
      // uncomment below and update the code to test the property master
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

    it('should have the property masterAccess (base name: "master_access")', function() {
      // uncomment below and update the code to test the property masterAccess
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

    it('should have the property maxResolutionTier (base name: "max_resolution_tier")', function() {
      // uncomment below and update the code to test the property maxResolutionTier
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

    it('should have the property maxStoredFrameRate (base name: "max_stored_frame_rate")', function() {
      // uncomment below and update the code to test the property maxStoredFrameRate
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

    it('should have the property maxStoredResolution (base name: "max_stored_resolution")', function() {
      // uncomment below and update the code to test the property maxStoredResolution
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

    it('should have the property mp4Support (base name: "mp4_support")', function() {
      // uncomment below and update the code to test the property mp4Support
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

    it('should have the property nonStandardInputReasons (base name: "non_standard_input_reasons")', function() {
      // uncomment below and update the code to test the property nonStandardInputReasons
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

    it('should have the property normalizeAudio (base name: "normalize_audio")', function() {
      // uncomment below and update the code to test the property normalizeAudio
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

    it('should have the property passthrough (base name: "passthrough")', function() {
      // uncomment below and update the code to test the property passthrough
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

    it('should have the property perTitleEncode (base name: "per_title_encode")', function() {
      // uncomment below and update the code to test the property perTitleEncode
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

    it('should have the property playbackIds (base name: "playback_ids")', function() {
      // uncomment below and update the code to test the property playbackIds
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

    it('should have the property recordingTimes (base name: "recording_times")', function() {
      // uncomment below and update the code to test the property recordingTimes
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

    it('should have the property resolutionTier (base name: "resolution_tier")', function() {
      // uncomment below and update the code to test the property resolutionTier
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

    it('should have the property sourceAssetId (base name: "source_asset_id")', function() {
      // uncomment below and update the code to test the property sourceAssetId
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

    it('should have the property staticRenditions (base name: "static_renditions")', function() {
      // uncomment below and update the code to test the property staticRenditions
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

    it('should have the property test (base name: "test")', function() {
      // uncomment below and update the code to test the property test
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

    it('should have the property tracks (base name: "tracks")', function() {
      // uncomment below and update the code to test the property tracks
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

    it('should have the property uploadId (base name: "upload_id")', function() {
      // uncomment below and update the code to test the property uploadId
      //var instance = new MuxApi.Asset();
      //expect(instance).to.be();
    });

  });

}));
