/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MuxApi);
  }
}(this, function(expect, MuxApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MuxApi.Incident();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Incident', function() {
    it('should create an instance of Incident', function() {
      // uncomment below and update the code to test Incident
      //var instance = new MuxApi.Incident();
      //expect(instance).to.be.a(MuxApi.Incident);
    });

    it('should have the property affectedViews (base name: "affected_views")', function() {
      // uncomment below and update the code to test the property affectedViews
      //var instance = new MuxApi.Incident();
      //expect(instance).to.be();
    });

    it('should have the property affectedViewsPerHour (base name: "affected_views_per_hour")', function() {
      // uncomment below and update the code to test the property affectedViewsPerHour
      //var instance = new MuxApi.Incident();
      //expect(instance).to.be();
    });

    it('should have the property affectedViewsPerHourOnOpen (base name: "affected_views_per_hour_on_open")', function() {
      // uncomment below and update the code to test the property affectedViewsPerHourOnOpen
      //var instance = new MuxApi.Incident();
      //expect(instance).to.be();
    });

    it('should have the property breakdowns (base name: "breakdowns")', function() {
      // uncomment below and update the code to test the property breakdowns
      //var instance = new MuxApi.Incident();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new MuxApi.Incident();
      //expect(instance).to.be();
    });

    it('should have the property errorDescription (base name: "error_description")', function() {
      // uncomment below and update the code to test the property errorDescription
      //var instance = new MuxApi.Incident();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new MuxApi.Incident();
      //expect(instance).to.be();
    });

    it('should have the property impact (base name: "impact")', function() {
      // uncomment below and update the code to test the property impact
      //var instance = new MuxApi.Incident();
      //expect(instance).to.be();
    });

    it('should have the property incidentKey (base name: "incident_key")', function() {
      // uncomment below and update the code to test the property incidentKey
      //var instance = new MuxApi.Incident();
      //expect(instance).to.be();
    });

    it('should have the property measuredValue (base name: "measured_value")', function() {
      // uncomment below and update the code to test the property measuredValue
      //var instance = new MuxApi.Incident();
      //expect(instance).to.be();
    });

    it('should have the property measuredValueOnClose (base name: "measured_value_on_close")', function() {
      // uncomment below and update the code to test the property measuredValueOnClose
      //var instance = new MuxApi.Incident();
      //expect(instance).to.be();
    });

    it('should have the property measurement (base name: "measurement")', function() {
      // uncomment below and update the code to test the property measurement
      //var instance = new MuxApi.Incident();
      //expect(instance).to.be();
    });

    it('should have the property notificationRules (base name: "notification_rules")', function() {
      // uncomment below and update the code to test the property notificationRules
      //var instance = new MuxApi.Incident();
      //expect(instance).to.be();
    });

    it('should have the property notifications (base name: "notifications")', function() {
      // uncomment below and update the code to test the property notifications
      //var instance = new MuxApi.Incident();
      //expect(instance).to.be();
    });

    it('should have the property resolvedAt (base name: "resolved_at")', function() {
      // uncomment below and update the code to test the property resolvedAt
      //var instance = new MuxApi.Incident();
      //expect(instance).to.be();
    });

    it('should have the property sampleSize (base name: "sample_size")', function() {
      // uncomment below and update the code to test the property sampleSize
      //var instance = new MuxApi.Incident();
      //expect(instance).to.be();
    });

    it('should have the property sampleSizeUnit (base name: "sample_size_unit")', function() {
      // uncomment below and update the code to test the property sampleSizeUnit
      //var instance = new MuxApi.Incident();
      //expect(instance).to.be();
    });

    it('should have the property severity (base name: "severity")', function() {
      // uncomment below and update the code to test the property severity
      //var instance = new MuxApi.Incident();
      //expect(instance).to.be();
    });

    it('should have the property startedAt (base name: "started_at")', function() {
      // uncomment below and update the code to test the property startedAt
      //var instance = new MuxApi.Incident();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new MuxApi.Incident();
      //expect(instance).to.be();
    });

    it('should have the property threshold (base name: "threshold")', function() {
      // uncomment below and update the code to test the property threshold
      //var instance = new MuxApi.Incident();
      //expect(instance).to.be();
    });

  });

}));
