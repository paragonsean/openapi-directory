/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeliveryReport_delivered_seconds_by_resolution.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeliveryReport_delivered_seconds_by_resolution::OAIDeliveryReport_delivered_seconds_by_resolution(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeliveryReport_delivered_seconds_by_resolution::OAIDeliveryReport_delivered_seconds_by_resolution() {
    this->initializeModel();
}

OAIDeliveryReport_delivered_seconds_by_resolution::~OAIDeliveryReport_delivered_seconds_by_resolution() {}

void OAIDeliveryReport_delivered_seconds_by_resolution::initializeModel() {

    m_tier_1080p_isSet = false;
    m_tier_1080p_isValid = false;

    m_tier_1440p_isSet = false;
    m_tier_1440p_isValid = false;

    m_tier_2160p_isSet = false;
    m_tier_2160p_isValid = false;

    m_tier_720p_isSet = false;
    m_tier_720p_isValid = false;

    m_tier_audio_only_isSet = false;
    m_tier_audio_only_isValid = false;
}

void OAIDeliveryReport_delivered_seconds_by_resolution::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeliveryReport_delivered_seconds_by_resolution::fromJsonObject(QJsonObject json) {

    m_tier_1080p_isValid = ::OpenAPI::fromJsonValue(m_tier_1080p, json[QString("tier_1080p")]);
    m_tier_1080p_isSet = !json[QString("tier_1080p")].isNull() && m_tier_1080p_isValid;

    m_tier_1440p_isValid = ::OpenAPI::fromJsonValue(m_tier_1440p, json[QString("tier_1440p")]);
    m_tier_1440p_isSet = !json[QString("tier_1440p")].isNull() && m_tier_1440p_isValid;

    m_tier_2160p_isValid = ::OpenAPI::fromJsonValue(m_tier_2160p, json[QString("tier_2160p")]);
    m_tier_2160p_isSet = !json[QString("tier_2160p")].isNull() && m_tier_2160p_isValid;

    m_tier_720p_isValid = ::OpenAPI::fromJsonValue(m_tier_720p, json[QString("tier_720p")]);
    m_tier_720p_isSet = !json[QString("tier_720p")].isNull() && m_tier_720p_isValid;

    m_tier_audio_only_isValid = ::OpenAPI::fromJsonValue(m_tier_audio_only, json[QString("tier_audio_only")]);
    m_tier_audio_only_isSet = !json[QString("tier_audio_only")].isNull() && m_tier_audio_only_isValid;
}

QString OAIDeliveryReport_delivered_seconds_by_resolution::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeliveryReport_delivered_seconds_by_resolution::asJsonObject() const {
    QJsonObject obj;
    if (m_tier_1080p_isSet) {
        obj.insert(QString("tier_1080p"), ::OpenAPI::toJsonValue(m_tier_1080p));
    }
    if (m_tier_1440p_isSet) {
        obj.insert(QString("tier_1440p"), ::OpenAPI::toJsonValue(m_tier_1440p));
    }
    if (m_tier_2160p_isSet) {
        obj.insert(QString("tier_2160p"), ::OpenAPI::toJsonValue(m_tier_2160p));
    }
    if (m_tier_720p_isSet) {
        obj.insert(QString("tier_720p"), ::OpenAPI::toJsonValue(m_tier_720p));
    }
    if (m_tier_audio_only_isSet) {
        obj.insert(QString("tier_audio_only"), ::OpenAPI::toJsonValue(m_tier_audio_only));
    }
    return obj;
}

double OAIDeliveryReport_delivered_seconds_by_resolution::getTier1080p() const {
    return m_tier_1080p;
}
void OAIDeliveryReport_delivered_seconds_by_resolution::setTier1080p(const double &tier_1080p) {
    m_tier_1080p = tier_1080p;
    m_tier_1080p_isSet = true;
}

bool OAIDeliveryReport_delivered_seconds_by_resolution::is_tier_1080p_Set() const{
    return m_tier_1080p_isSet;
}

bool OAIDeliveryReport_delivered_seconds_by_resolution::is_tier_1080p_Valid() const{
    return m_tier_1080p_isValid;
}

double OAIDeliveryReport_delivered_seconds_by_resolution::getTier1440p() const {
    return m_tier_1440p;
}
void OAIDeliveryReport_delivered_seconds_by_resolution::setTier1440p(const double &tier_1440p) {
    m_tier_1440p = tier_1440p;
    m_tier_1440p_isSet = true;
}

bool OAIDeliveryReport_delivered_seconds_by_resolution::is_tier_1440p_Set() const{
    return m_tier_1440p_isSet;
}

bool OAIDeliveryReport_delivered_seconds_by_resolution::is_tier_1440p_Valid() const{
    return m_tier_1440p_isValid;
}

double OAIDeliveryReport_delivered_seconds_by_resolution::getTier2160p() const {
    return m_tier_2160p;
}
void OAIDeliveryReport_delivered_seconds_by_resolution::setTier2160p(const double &tier_2160p) {
    m_tier_2160p = tier_2160p;
    m_tier_2160p_isSet = true;
}

bool OAIDeliveryReport_delivered_seconds_by_resolution::is_tier_2160p_Set() const{
    return m_tier_2160p_isSet;
}

bool OAIDeliveryReport_delivered_seconds_by_resolution::is_tier_2160p_Valid() const{
    return m_tier_2160p_isValid;
}

double OAIDeliveryReport_delivered_seconds_by_resolution::getTier720p() const {
    return m_tier_720p;
}
void OAIDeliveryReport_delivered_seconds_by_resolution::setTier720p(const double &tier_720p) {
    m_tier_720p = tier_720p;
    m_tier_720p_isSet = true;
}

bool OAIDeliveryReport_delivered_seconds_by_resolution::is_tier_720p_Set() const{
    return m_tier_720p_isSet;
}

bool OAIDeliveryReport_delivered_seconds_by_resolution::is_tier_720p_Valid() const{
    return m_tier_720p_isValid;
}

double OAIDeliveryReport_delivered_seconds_by_resolution::getTierAudioOnly() const {
    return m_tier_audio_only;
}
void OAIDeliveryReport_delivered_seconds_by_resolution::setTierAudioOnly(const double &tier_audio_only) {
    m_tier_audio_only = tier_audio_only;
    m_tier_audio_only_isSet = true;
}

bool OAIDeliveryReport_delivered_seconds_by_resolution::is_tier_audio_only_Set() const{
    return m_tier_audio_only_isSet;
}

bool OAIDeliveryReport_delivered_seconds_by_resolution::is_tier_audio_only_Valid() const{
    return m_tier_audio_only_isValid;
}

bool OAIDeliveryReport_delivered_seconds_by_resolution::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tier_1080p_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tier_1440p_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tier_2160p_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tier_720p_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tier_audio_only_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeliveryReport_delivered_seconds_by_resolution::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
