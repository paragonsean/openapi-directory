/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpload.h
 *
 * 
 */

#ifndef OAIUpload_H
#define OAIUpload_H

#include <QJsonObject>

#include "OAIAsset.h"
#include "OAIUpload_error.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpload_error;
class OAIAsset;

class OAIUpload : public OAIObject {
public:
    OAIUpload();
    OAIUpload(QString json);
    ~OAIUpload() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAssetId() const;
    void setAssetId(const QString &asset_id);
    bool is_asset_id_Set() const;
    bool is_asset_id_Valid() const;

    QString getCorsOrigin() const;
    void setCorsOrigin(const QString &cors_origin);
    bool is_cors_origin_Set() const;
    bool is_cors_origin_Valid() const;

    OAIUpload_error getError() const;
    void setError(const OAIUpload_error &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIAsset getNewAssetSettings() const;
    void setNewAssetSettings(const OAIAsset &new_asset_settings);
    bool is_new_asset_settings_Set() const;
    bool is_new_asset_settings_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    bool isTest() const;
    void setTest(const bool &test);
    bool is_test_Set() const;
    bool is_test_Valid() const;

    qint32 getTimeout() const;
    void setTimeout(const qint32 &timeout);
    bool is_timeout_Set() const;
    bool is_timeout_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_asset_id;
    bool m_asset_id_isSet;
    bool m_asset_id_isValid;

    QString m_cors_origin;
    bool m_cors_origin_isSet;
    bool m_cors_origin_isValid;

    OAIUpload_error m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIAsset m_new_asset_settings;
    bool m_new_asset_settings_isSet;
    bool m_new_asset_settings_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    bool m_test;
    bool m_test_isSet;
    bool m_test_isValid;

    qint32 m_timeout;
    bool m_timeout_isSet;
    bool m_timeout_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpload)

#endif // OAIUpload_H
