/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListDimensionsResponse_data.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListDimensionsResponse_data::OAIListDimensionsResponse_data(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListDimensionsResponse_data::OAIListDimensionsResponse_data() {
    this->initializeModel();
}

OAIListDimensionsResponse_data::~OAIListDimensionsResponse_data() {}

void OAIListDimensionsResponse_data::initializeModel() {

    m_advanced_isSet = false;
    m_advanced_isValid = false;

    m_basic_isSet = false;
    m_basic_isValid = false;
}

void OAIListDimensionsResponse_data::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListDimensionsResponse_data::fromJsonObject(QJsonObject json) {

    m_advanced_isValid = ::OpenAPI::fromJsonValue(m_advanced, json[QString("advanced")]);
    m_advanced_isSet = !json[QString("advanced")].isNull() && m_advanced_isValid;

    m_basic_isValid = ::OpenAPI::fromJsonValue(m_basic, json[QString("basic")]);
    m_basic_isSet = !json[QString("basic")].isNull() && m_basic_isValid;
}

QString OAIListDimensionsResponse_data::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListDimensionsResponse_data::asJsonObject() const {
    QJsonObject obj;
    if (m_advanced.size() > 0) {
        obj.insert(QString("advanced"), ::OpenAPI::toJsonValue(m_advanced));
    }
    if (m_basic.size() > 0) {
        obj.insert(QString("basic"), ::OpenAPI::toJsonValue(m_basic));
    }
    return obj;
}

QList<QString> OAIListDimensionsResponse_data::getAdvanced() const {
    return m_advanced;
}
void OAIListDimensionsResponse_data::setAdvanced(const QList<QString> &advanced) {
    m_advanced = advanced;
    m_advanced_isSet = true;
}

bool OAIListDimensionsResponse_data::is_advanced_Set() const{
    return m_advanced_isSet;
}

bool OAIListDimensionsResponse_data::is_advanced_Valid() const{
    return m_advanced_isValid;
}

QList<QString> OAIListDimensionsResponse_data::getBasic() const {
    return m_basic;
}
void OAIListDimensionsResponse_data::setBasic(const QList<QString> &basic) {
    m_basic = basic;
    m_basic_isSet = true;
}

bool OAIListDimensionsResponse_data::is_basic_Set() const{
    return m_basic_isSet;
}

bool OAIListDimensionsResponse_data::is_basic_Valid() const{
    return m_basic_isValid;
}

bool OAIListDimensionsResponse_data::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_advanced.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_basic.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListDimensionsResponse_data::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
