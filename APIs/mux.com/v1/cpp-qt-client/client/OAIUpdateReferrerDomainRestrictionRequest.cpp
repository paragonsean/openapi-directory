/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateReferrerDomainRestrictionRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateReferrerDomainRestrictionRequest::OAIUpdateReferrerDomainRestrictionRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateReferrerDomainRestrictionRequest::OAIUpdateReferrerDomainRestrictionRequest() {
    this->initializeModel();
}

OAIUpdateReferrerDomainRestrictionRequest::~OAIUpdateReferrerDomainRestrictionRequest() {}

void OAIUpdateReferrerDomainRestrictionRequest::initializeModel() {

    m_allow_no_referrer_isSet = false;
    m_allow_no_referrer_isValid = false;

    m_allowed_domains_isSet = false;
    m_allowed_domains_isValid = false;
}

void OAIUpdateReferrerDomainRestrictionRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateReferrerDomainRestrictionRequest::fromJsonObject(QJsonObject json) {

    m_allow_no_referrer_isValid = ::OpenAPI::fromJsonValue(m_allow_no_referrer, json[QString("allow_no_referrer")]);
    m_allow_no_referrer_isSet = !json[QString("allow_no_referrer")].isNull() && m_allow_no_referrer_isValid;

    m_allowed_domains_isValid = ::OpenAPI::fromJsonValue(m_allowed_domains, json[QString("allowed_domains")]);
    m_allowed_domains_isSet = !json[QString("allowed_domains")].isNull() && m_allowed_domains_isValid;
}

QString OAIUpdateReferrerDomainRestrictionRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateReferrerDomainRestrictionRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_allow_no_referrer_isSet) {
        obj.insert(QString("allow_no_referrer"), ::OpenAPI::toJsonValue(m_allow_no_referrer));
    }
    if (m_allowed_domains.size() > 0) {
        obj.insert(QString("allowed_domains"), ::OpenAPI::toJsonValue(m_allowed_domains));
    }
    return obj;
}

bool OAIUpdateReferrerDomainRestrictionRequest::isAllowNoReferrer() const {
    return m_allow_no_referrer;
}
void OAIUpdateReferrerDomainRestrictionRequest::setAllowNoReferrer(const bool &allow_no_referrer) {
    m_allow_no_referrer = allow_no_referrer;
    m_allow_no_referrer_isSet = true;
}

bool OAIUpdateReferrerDomainRestrictionRequest::is_allow_no_referrer_Set() const{
    return m_allow_no_referrer_isSet;
}

bool OAIUpdateReferrerDomainRestrictionRequest::is_allow_no_referrer_Valid() const{
    return m_allow_no_referrer_isValid;
}

QList<QString> OAIUpdateReferrerDomainRestrictionRequest::getAllowedDomains() const {
    return m_allowed_domains;
}
void OAIUpdateReferrerDomainRestrictionRequest::setAllowedDomains(const QList<QString> &allowed_domains) {
    m_allowed_domains = allowed_domains;
    m_allowed_domains_isSet = true;
}

bool OAIUpdateReferrerDomainRestrictionRequest::is_allowed_domains_Set() const{
    return m_allowed_domains_isSet;
}

bool OAIUpdateReferrerDomainRestrictionRequest::is_allowed_domains_Valid() const{
    return m_allowed_domains_isValid;
}

bool OAIUpdateReferrerDomainRestrictionRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allow_no_referrer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_allowed_domains.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateReferrerDomainRestrictionRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
