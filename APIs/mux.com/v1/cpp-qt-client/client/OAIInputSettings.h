/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInputSettings.h
 *
 * An array of objects that each describe an input file to be used to create the asset. As a shortcut, &#x60;input&#x60; can also be a string URL for a file when only one input file is used. See &#x60;input[].url&#x60; for requirements.
 */

#ifndef OAIInputSettings_H
#define OAIInputSettings_H

#include <QJsonObject>

#include "OAIAssetGeneratedSubtitleSettings.h"
#include "OAIInputSettings_overlay_settings.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAssetGeneratedSubtitleSettings;
class OAIInputSettings_overlay_settings;

class OAIInputSettings : public OAIObject {
public:
    OAIInputSettings();
    OAIInputSettings(QString json);
    ~OAIInputSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isClosedCaptions() const;
    void setClosedCaptions(const bool &closed_captions);
    bool is_closed_captions_Set() const;
    bool is_closed_captions_Valid() const;

    double getEndTime() const;
    void setEndTime(const double &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QList<OAIAssetGeneratedSubtitleSettings> getGeneratedSubtitles() const;
    void setGeneratedSubtitles(const QList<OAIAssetGeneratedSubtitleSettings> &generated_subtitles);
    bool is_generated_subtitles_Set() const;
    bool is_generated_subtitles_Valid() const;

    QString getLanguageCode() const;
    void setLanguageCode(const QString &language_code);
    bool is_language_code_Set() const;
    bool is_language_code_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIInputSettings_overlay_settings getOverlaySettings() const;
    void setOverlaySettings(const OAIInputSettings_overlay_settings &overlay_settings);
    bool is_overlay_settings_Set() const;
    bool is_overlay_settings_Valid() const;

    QString getPassthrough() const;
    void setPassthrough(const QString &passthrough);
    bool is_passthrough_Set() const;
    bool is_passthrough_Valid() const;

    double getStartTime() const;
    void setStartTime(const double &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getTextType() const;
    void setTextType(const QString &text_type);
    bool is_text_type_Set() const;
    bool is_text_type_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_closed_captions;
    bool m_closed_captions_isSet;
    bool m_closed_captions_isValid;

    double m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QList<OAIAssetGeneratedSubtitleSettings> m_generated_subtitles;
    bool m_generated_subtitles_isSet;
    bool m_generated_subtitles_isValid;

    QString m_language_code;
    bool m_language_code_isSet;
    bool m_language_code_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIInputSettings_overlay_settings m_overlay_settings;
    bool m_overlay_settings_isSet;
    bool m_overlay_settings_isValid;

    QString m_passthrough;
    bool m_passthrough_isSet;
    bool m_passthrough_isValid;

    double m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_text_type;
    bool m_text_type_isSet;
    bool m_text_type_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInputSettings)

#endif // OAIInputSettings_H
