/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAsset_non_standard_input_reasons.h
 *
 * An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](https://docs.mux.com/guides/video/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.
 */

#ifndef OAIAsset_non_standard_input_reasons_H
#define OAIAsset_non_standard_input_reasons_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAsset_non_standard_input_reasons : public OAIObject {
public:
    OAIAsset_non_standard_input_reasons();
    OAIAsset_non_standard_input_reasons(QString json);
    ~OAIAsset_non_standard_input_reasons() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAudioCodec() const;
    void setAudioCodec(const QString &audio_codec);
    bool is_audio_codec_Set() const;
    bool is_audio_codec_Valid() const;

    QString getAudioEditList() const;
    void setAudioEditList(const QString &audio_edit_list);
    bool is_audio_edit_list_Set() const;
    bool is_audio_edit_list_Valid() const;

    QString getPixelAspectRatio() const;
    void setPixelAspectRatio(const QString &pixel_aspect_ratio);
    bool is_pixel_aspect_ratio_Set() const;
    bool is_pixel_aspect_ratio_Valid() const;

    QString getUnexpectedMediaFileParameters() const;
    void setUnexpectedMediaFileParameters(const QString &unexpected_media_file_parameters);
    bool is_unexpected_media_file_parameters_Set() const;
    bool is_unexpected_media_file_parameters_Valid() const;

    QString getUnsupportedPixelFormat() const;
    void setUnsupportedPixelFormat(const QString &unsupported_pixel_format);
    bool is_unsupported_pixel_format_Set() const;
    bool is_unsupported_pixel_format_Valid() const;

    QString getVideoBitrate() const;
    void setVideoBitrate(const QString &video_bitrate);
    bool is_video_bitrate_Set() const;
    bool is_video_bitrate_Valid() const;

    QString getVideoCodec() const;
    void setVideoCodec(const QString &video_codec);
    bool is_video_codec_Set() const;
    bool is_video_codec_Valid() const;

    QString getVideoEditList() const;
    void setVideoEditList(const QString &video_edit_list);
    bool is_video_edit_list_Set() const;
    bool is_video_edit_list_Valid() const;

    QString getVideoFrameRate() const;
    void setVideoFrameRate(const QString &video_frame_rate);
    bool is_video_frame_rate_Set() const;
    bool is_video_frame_rate_Valid() const;

    QString getVideoGopSize() const;
    void setVideoGopSize(const QString &video_gop_size);
    bool is_video_gop_size_Set() const;
    bool is_video_gop_size_Valid() const;

    QString getVideoResolution() const;
    void setVideoResolution(const QString &video_resolution);
    bool is_video_resolution_Set() const;
    bool is_video_resolution_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_audio_codec;
    bool m_audio_codec_isSet;
    bool m_audio_codec_isValid;

    QString m_audio_edit_list;
    bool m_audio_edit_list_isSet;
    bool m_audio_edit_list_isValid;

    QString m_pixel_aspect_ratio;
    bool m_pixel_aspect_ratio_isSet;
    bool m_pixel_aspect_ratio_isValid;

    QString m_unexpected_media_file_parameters;
    bool m_unexpected_media_file_parameters_isSet;
    bool m_unexpected_media_file_parameters_isValid;

    QString m_unsupported_pixel_format;
    bool m_unsupported_pixel_format_isSet;
    bool m_unsupported_pixel_format_isValid;

    QString m_video_bitrate;
    bool m_video_bitrate_isSet;
    bool m_video_bitrate_isValid;

    QString m_video_codec;
    bool m_video_codec_isSet;
    bool m_video_codec_isValid;

    QString m_video_edit_list;
    bool m_video_edit_list_isSet;
    bool m_video_edit_list_isValid;

    QString m_video_frame_rate;
    bool m_video_frame_rate_isSet;
    bool m_video_frame_rate_isValid;

    QString m_video_gop_size;
    bool m_video_gop_size_isSet;
    bool m_video_gop_size_isValid;

    QString m_video_resolution;
    bool m_video_resolution_isSet;
    bool m_video_resolution_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAsset_non_standard_input_reasons)

#endif // OAIAsset_non_standard_input_reasons_H
