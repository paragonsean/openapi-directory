/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateBroadcastRequest.h
 *
 * 
 */

#ifndef OAICreateBroadcastRequest_H
#define OAICreateBroadcastRequest_H

#include <QJsonObject>

#include "OAIBroadcastLayout.h"
#include "OAIBroadcastResolution.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateBroadcastRequest : public OAIObject {
public:
    OAICreateBroadcastRequest();
    OAICreateBroadcastRequest(QString json);
    ~OAICreateBroadcastRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBackground() const;
    void setBackground(const QString &background);
    bool is_background_Set() const;
    bool is_background_Valid() const;

    OAIBroadcastLayout getLayout() const;
    void setLayout(const OAIBroadcastLayout &layout);
    bool is_layout_Set() const;
    bool is_layout_Valid() const;

    QString getLiveStreamId() const;
    void setLiveStreamId(const QString &live_stream_id);
    bool is_live_stream_id_Set() const;
    bool is_live_stream_id_Valid() const;

    QString getPassthrough() const;
    void setPassthrough(const QString &passthrough);
    bool is_passthrough_Set() const;
    bool is_passthrough_Valid() const;

    OAIBroadcastResolution getResolution() const;
    void setResolution(const OAIBroadcastResolution &resolution);
    bool is_resolution_Set() const;
    bool is_resolution_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_background;
    bool m_background_isSet;
    bool m_background_isValid;

    OAIBroadcastLayout m_layout;
    bool m_layout_isSet;
    bool m_layout_isValid;

    QString m_live_stream_id;
    bool m_live_stream_id_isSet;
    bool m_live_stream_id_isValid;

    QString m_passthrough;
    bool m_passthrough_isSet;
    bool m_passthrough_isValid;

    OAIBroadcastResolution m_resolution;
    bool m_resolution_isSet;
    bool m_resolution_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateBroadcastRequest)

#endif // OAICreateBroadcastRequest_H
