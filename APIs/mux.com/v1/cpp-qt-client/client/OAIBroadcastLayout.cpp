/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBroadcastLayout.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBroadcastLayout::OAIBroadcastLayout(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBroadcastLayout::OAIBroadcastLayout() {
    this->initializeModel();
}

OAIBroadcastLayout::~OAIBroadcastLayout() {}

void OAIBroadcastLayout::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIBroadcastLayout::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIBroadcastLayout::fromJson(QString jsonString) {
    
    if ( jsonString.compare("gallery", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBroadcastLayout::GALLERY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("active-speaker", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBroadcastLayout::ACTIVE_SPEAKER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("crop", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBroadcastLayout::CROP;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIBroadcastLayout::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIBroadcastLayout::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIBroadcastLayout::GALLERY:
            val = "gallery";
            break;
        case eOAIBroadcastLayout::ACTIVE_SPEAKER:
            val = "active-speaker";
            break;
        case eOAIBroadcastLayout::CROP:
            val = "crop";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIBroadcastLayout::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIBroadcastLayout::eOAIBroadcastLayout OAIBroadcastLayout::getValue() const {
    return m_value;
}

void OAIBroadcastLayout::setValue(const OAIBroadcastLayout::eOAIBroadcastLayout& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIBroadcastLayout::isSet() const {
    
    return m_value_isSet;
}

bool OAIBroadcastLayout::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
