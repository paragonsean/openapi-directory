/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInputTrack.h
 *
 * 
 */

#ifndef OAIInputTrack_H
#define OAIInputTrack_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInputTrack : public OAIObject {
public:
    OAIInputTrack();
    OAIInputTrack(QString json);
    ~OAIInputTrack() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getChannels() const;
    void setChannels(const qint64 &channels);
    bool is_channels_Set() const;
    bool is_channels_Valid() const;

    double getDuration() const;
    void setDuration(const double &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    QString getEncoding() const;
    void setEncoding(const QString &encoding);
    bool is_encoding_Set() const;
    bool is_encoding_Valid() const;

    double getFrameRate() const;
    void setFrameRate(const double &frame_rate);
    bool is_frame_rate_Set() const;
    bool is_frame_rate_Valid() const;

    qint64 getHeight() const;
    void setHeight(const qint64 &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    qint64 getSampleRate() const;
    void setSampleRate(const qint64 &sample_rate);
    bool is_sample_rate_Set() const;
    bool is_sample_rate_Valid() const;

    qint64 getSampleSize() const;
    void setSampleSize(const qint64 &sample_size);
    bool is_sample_size_Set() const;
    bool is_sample_size_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint64 getWidth() const;
    void setWidth(const qint64 &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_channels;
    bool m_channels_isSet;
    bool m_channels_isValid;

    double m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    QString m_encoding;
    bool m_encoding_isSet;
    bool m_encoding_isValid;

    double m_frame_rate;
    bool m_frame_rate_isSet;
    bool m_frame_rate_isValid;

    qint64 m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    qint64 m_sample_rate;
    bool m_sample_rate_isSet;
    bool m_sample_rate_isValid;

    qint64 m_sample_size;
    bool m_sample_size_isSet;
    bool m_sample_size_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint64 m_width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInputTrack)

#endif // OAIInputTrack_H
