/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMonitoringHistogramTimeseriesDatapoint.h
 *
 * 
 */

#ifndef OAIMonitoringHistogramTimeseriesDatapoint_H
#define OAIMonitoringHistogramTimeseriesDatapoint_H

#include <QJsonObject>

#include "OAIMonitoringHistogramTimeseriesBucketValues.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMonitoringHistogramTimeseriesBucketValues;

class OAIMonitoringHistogramTimeseriesDatapoint : public OAIObject {
public:
    OAIMonitoringHistogramTimeseriesDatapoint();
    OAIMonitoringHistogramTimeseriesDatapoint(QString json);
    ~OAIMonitoringHistogramTimeseriesDatapoint() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAverage() const;
    void setAverage(const double &average);
    bool is_average_Set() const;
    bool is_average_Valid() const;

    QList<OAIMonitoringHistogramTimeseriesBucketValues> getBucketValues() const;
    void setBucketValues(const QList<OAIMonitoringHistogramTimeseriesBucketValues> &bucket_values);
    bool is_bucket_values_Set() const;
    bool is_bucket_values_Valid() const;

    double getMaxPercentage() const;
    void setMaxPercentage(const double &max_percentage);
    bool is_max_percentage_Set() const;
    bool is_max_percentage_Valid() const;

    double getMedian() const;
    void setMedian(const double &median);
    bool is_median_Set() const;
    bool is_median_Valid() const;

    double getP95() const;
    void setP95(const double &p95);
    bool is_p95_Set() const;
    bool is_p95_Valid() const;

    qint64 getSum() const;
    void setSum(const qint64 &sum);
    bool is_sum_Set() const;
    bool is_sum_Valid() const;

    QString getTimestamp() const;
    void setTimestamp(const QString &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_average;
    bool m_average_isSet;
    bool m_average_isValid;

    QList<OAIMonitoringHistogramTimeseriesBucketValues> m_bucket_values;
    bool m_bucket_values_isSet;
    bool m_bucket_values_isValid;

    double m_max_percentage;
    bool m_max_percentage_isSet;
    bool m_max_percentage_isValid;

    double m_median;
    bool m_median_isSet;
    bool m_median_isValid;

    double m_p95;
    bool m_p95_isSet;
    bool m_p95_isValid;

    qint64 m_sum;
    bool m_sum_isSet;
    bool m_sum_isValid;

    QString m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMonitoringHistogramTimeseriesDatapoint)

#endif // OAIMonitoringHistogramTimeseriesDatapoint_H
