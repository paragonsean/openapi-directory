/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILiveStream.h
 *
 * 
 */

#ifndef OAILiveStream_H
#define OAILiveStream_H

#include <QJsonObject>

#include "OAICreateAssetRequest.h"
#include "OAILiveStreamEmbeddedSubtitleSettings.h"
#include "OAILiveStreamGeneratedSubtitleSettings.h"
#include "OAILiveStreamStatus.h"
#include "OAIPlaybackID.h"
#include "OAISimulcastTarget.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILiveStreamEmbeddedSubtitleSettings;
class OAILiveStreamGeneratedSubtitleSettings;
class OAICreateAssetRequest;
class OAIPlaybackID;
class OAISimulcastTarget;

class OAILiveStream : public OAIObject {
public:
    OAILiveStream();
    OAILiveStream(QString json);
    ~OAILiveStream() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActiveAssetId() const;
    void setActiveAssetId(const QString &active_asset_id);
    bool is_active_asset_id_Set() const;
    bool is_active_asset_id_Valid() const;

    bool isAudioOnly() const;
    void setAudioOnly(const bool &audio_only);
    bool is_audio_only_Set() const;
    bool is_audio_only_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QList<OAILiveStreamEmbeddedSubtitleSettings> getEmbeddedSubtitles() const;
    void setEmbeddedSubtitles(const QList<OAILiveStreamEmbeddedSubtitleSettings> &embedded_subtitles);
    bool is_embedded_subtitles_Set() const;
    bool is_embedded_subtitles_Valid() const;

    QList<OAILiveStreamGeneratedSubtitleSettings> getGeneratedSubtitles() const;
    void setGeneratedSubtitles(const QList<OAILiveStreamGeneratedSubtitleSettings> &generated_subtitles);
    bool is_generated_subtitles_Set() const;
    bool is_generated_subtitles_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLatencyMode() const;
    void setLatencyMode(const QString &latency_mode);
    bool is_latency_mode_Set() const;
    bool is_latency_mode_Valid() const;

    Q_DECL_DEPRECATED bool isLowLatency() const;
    Q_DECL_DEPRECATED void setLowLatency(const bool &low_latency);
    Q_DECL_DEPRECATED bool is_low_latency_Set() const;
    Q_DECL_DEPRECATED bool is_low_latency_Valid() const;

    qint32 getMaxContinuousDuration() const;
    void setMaxContinuousDuration(const qint32 &max_continuous_duration);
    bool is_max_continuous_duration_Set() const;
    bool is_max_continuous_duration_Valid() const;

    OAICreateAssetRequest getNewAssetSettings() const;
    void setNewAssetSettings(const OAICreateAssetRequest &new_asset_settings);
    bool is_new_asset_settings_Set() const;
    bool is_new_asset_settings_Valid() const;

    QString getPassthrough() const;
    void setPassthrough(const QString &passthrough);
    bool is_passthrough_Set() const;
    bool is_passthrough_Valid() const;

    QList<OAIPlaybackID> getPlaybackIds() const;
    void setPlaybackIds(const QList<OAIPlaybackID> &playback_ids);
    bool is_playback_ids_Set() const;
    bool is_playback_ids_Valid() const;

    QList<QString> getRecentAssetIds() const;
    void setRecentAssetIds(const QList<QString> &recent_asset_ids);
    bool is_recent_asset_ids_Set() const;
    bool is_recent_asset_ids_Valid() const;

    QString getReconnectSlateUrl() const;
    void setReconnectSlateUrl(const QString &reconnect_slate_url);
    bool is_reconnect_slate_url_Set() const;
    bool is_reconnect_slate_url_Valid() const;

    float getReconnectWindow() const;
    void setReconnectWindow(const float &reconnect_window);
    bool is_reconnect_window_Set() const;
    bool is_reconnect_window_Valid() const;

    Q_DECL_DEPRECATED bool isReducedLatency() const;
    Q_DECL_DEPRECATED void setReducedLatency(const bool &reduced_latency);
    Q_DECL_DEPRECATED bool is_reduced_latency_Set() const;
    Q_DECL_DEPRECATED bool is_reduced_latency_Valid() const;

    QList<OAISimulcastTarget> getSimulcastTargets() const;
    void setSimulcastTargets(const QList<OAISimulcastTarget> &simulcast_targets);
    bool is_simulcast_targets_Set() const;
    bool is_simulcast_targets_Valid() const;

    OAILiveStreamStatus getStatus() const;
    void setStatus(const OAILiveStreamStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStreamKey() const;
    void setStreamKey(const QString &stream_key);
    bool is_stream_key_Set() const;
    bool is_stream_key_Valid() const;

    bool isTest() const;
    void setTest(const bool &test);
    bool is_test_Set() const;
    bool is_test_Valid() const;

    bool isUseSlateForStandardLatency() const;
    void setUseSlateForStandardLatency(const bool &use_slate_for_standard_latency);
    bool is_use_slate_for_standard_latency_Set() const;
    bool is_use_slate_for_standard_latency_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_active_asset_id;
    bool m_active_asset_id_isSet;
    bool m_active_asset_id_isValid;

    bool m_audio_only;
    bool m_audio_only_isSet;
    bool m_audio_only_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QList<OAILiveStreamEmbeddedSubtitleSettings> m_embedded_subtitles;
    bool m_embedded_subtitles_isSet;
    bool m_embedded_subtitles_isValid;

    QList<OAILiveStreamGeneratedSubtitleSettings> m_generated_subtitles;
    bool m_generated_subtitles_isSet;
    bool m_generated_subtitles_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_latency_mode;
    bool m_latency_mode_isSet;
    bool m_latency_mode_isValid;

    bool m_low_latency;
    bool m_low_latency_isSet;
    bool m_low_latency_isValid;

    qint32 m_max_continuous_duration;
    bool m_max_continuous_duration_isSet;
    bool m_max_continuous_duration_isValid;

    OAICreateAssetRequest m_new_asset_settings;
    bool m_new_asset_settings_isSet;
    bool m_new_asset_settings_isValid;

    QString m_passthrough;
    bool m_passthrough_isSet;
    bool m_passthrough_isValid;

    QList<OAIPlaybackID> m_playback_ids;
    bool m_playback_ids_isSet;
    bool m_playback_ids_isValid;

    QList<QString> m_recent_asset_ids;
    bool m_recent_asset_ids_isSet;
    bool m_recent_asset_ids_isValid;

    QString m_reconnect_slate_url;
    bool m_reconnect_slate_url_isSet;
    bool m_reconnect_slate_url_isValid;

    float m_reconnect_window;
    bool m_reconnect_window_isSet;
    bool m_reconnect_window_isValid;

    bool m_reduced_latency;
    bool m_reduced_latency_isSet;
    bool m_reduced_latency_isValid;

    QList<OAISimulcastTarget> m_simulcast_targets;
    bool m_simulcast_targets_isSet;
    bool m_simulcast_targets_isValid;

    OAILiveStreamStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_stream_key;
    bool m_stream_key_isSet;
    bool m_stream_key_isValid;

    bool m_test;
    bool m_test_isSet;
    bool m_test_isValid;

    bool m_use_slate_for_standard_latency;
    bool m_use_slate_for_standard_latency_isSet;
    bool m_use_slate_for_standard_latency_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILiveStream)

#endif // OAILiveStream_H
