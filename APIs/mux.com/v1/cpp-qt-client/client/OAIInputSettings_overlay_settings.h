/**
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInputSettings_overlay_settings.h
 *
 * An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.
 */

#ifndef OAIInputSettings_overlay_settings_H
#define OAIInputSettings_overlay_settings_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInputSettings_overlay_settings : public OAIObject {
public:
    OAIInputSettings_overlay_settings();
    OAIInputSettings_overlay_settings(QString json);
    ~OAIInputSettings_overlay_settings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHeight() const;
    void setHeight(const QString &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    QString getHorizontalAlign() const;
    void setHorizontalAlign(const QString &horizontal_align);
    bool is_horizontal_align_Set() const;
    bool is_horizontal_align_Valid() const;

    QString getHorizontalMargin() const;
    void setHorizontalMargin(const QString &horizontal_margin);
    bool is_horizontal_margin_Set() const;
    bool is_horizontal_margin_Valid() const;

    QString getOpacity() const;
    void setOpacity(const QString &opacity);
    bool is_opacity_Set() const;
    bool is_opacity_Valid() const;

    QString getVerticalAlign() const;
    void setVerticalAlign(const QString &vertical_align);
    bool is_vertical_align_Set() const;
    bool is_vertical_align_Valid() const;

    QString getVerticalMargin() const;
    void setVerticalMargin(const QString &vertical_margin);
    bool is_vertical_margin_Set() const;
    bool is_vertical_margin_Valid() const;

    QString getWidth() const;
    void setWidth(const QString &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    QString m_horizontal_align;
    bool m_horizontal_align_isSet;
    bool m_horizontal_align_isValid;

    QString m_horizontal_margin;
    bool m_horizontal_margin_isSet;
    bool m_horizontal_margin_isValid;

    QString m_opacity;
    bool m_opacity_isSet;
    bool m_opacity_isValid;

    QString m_vertical_align;
    bool m_vertical_align_isSet;
    bool m_vertical_align_isValid;

    QString m_vertical_margin;
    bool m_vertical_margin_isSet;
    bool m_vertical_margin_isValid;

    QString m_width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInputSettings_overlay_settings)

#endif // OAIInputSettings_overlay_settings_H
