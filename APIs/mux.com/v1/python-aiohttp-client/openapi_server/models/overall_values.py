# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OverallValues(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, global_value: float=None, total_views: int=None, total_watch_time: int=None, value: float=None):
        """OverallValues - a model defined in OpenAPI

        :param global_value: The global_value of this OverallValues.
        :param total_views: The total_views of this OverallValues.
        :param total_watch_time: The total_watch_time of this OverallValues.
        :param value: The value of this OverallValues.
        """
        self.openapi_types = {
            'global_value': float,
            'total_views': int,
            'total_watch_time': int,
            'value': float
        }

        self.attribute_map = {
            'global_value': 'global_value',
            'total_views': 'total_views',
            'total_watch_time': 'total_watch_time',
            'value': 'value'
        }

        self._global_value = global_value
        self._total_views = total_views
        self._total_watch_time = total_watch_time
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OverallValues':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OverallValues of this OverallValues.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def global_value(self):
        """Gets the global_value of this OverallValues.


        :return: The global_value of this OverallValues.
        :rtype: float
        """
        return self._global_value

    @global_value.setter
    def global_value(self, global_value):
        """Sets the global_value of this OverallValues.


        :param global_value: The global_value of this OverallValues.
        :type global_value: float
        """

        self._global_value = global_value

    @property
    def total_views(self):
        """Gets the total_views of this OverallValues.


        :return: The total_views of this OverallValues.
        :rtype: int
        """
        return self._total_views

    @total_views.setter
    def total_views(self, total_views):
        """Sets the total_views of this OverallValues.


        :param total_views: The total_views of this OverallValues.
        :type total_views: int
        """

        self._total_views = total_views

    @property
    def total_watch_time(self):
        """Gets the total_watch_time of this OverallValues.


        :return: The total_watch_time of this OverallValues.
        :rtype: int
        """
        return self._total_watch_time

    @total_watch_time.setter
    def total_watch_time(self, total_watch_time):
        """Sets the total_watch_time of this OverallValues.


        :param total_watch_time: The total_watch_time of this OverallValues.
        :type total_watch_time: int
        """

        self._total_watch_time = total_watch_time

    @property
    def value(self):
        """Gets the value of this OverallValues.


        :return: The value of this OverallValues.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this OverallValues.


        :param value: The value of this OverallValues.
        :type value: float
        """

        self._value = value
