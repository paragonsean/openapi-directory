# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RealTimeTimeseriesDatapoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, concurrent_viewers: int=None, _date: str=None, value: float=None):
        """RealTimeTimeseriesDatapoint - a model defined in OpenAPI

        :param concurrent_viewers: The concurrent_viewers of this RealTimeTimeseriesDatapoint.
        :param _date: The _date of this RealTimeTimeseriesDatapoint.
        :param value: The value of this RealTimeTimeseriesDatapoint.
        """
        self.openapi_types = {
            'concurrent_viewers': int,
            '_date': str,
            'value': float
        }

        self.attribute_map = {
            'concurrent_viewers': 'concurrent_viewers',
            '_date': 'date',
            'value': 'value'
        }

        self._concurrent_viewers = concurrent_viewers
        self.__date = _date
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RealTimeTimeseriesDatapoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RealTimeTimeseriesDatapoint of this RealTimeTimeseriesDatapoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def concurrent_viewers(self):
        """Gets the concurrent_viewers of this RealTimeTimeseriesDatapoint.


        :return: The concurrent_viewers of this RealTimeTimeseriesDatapoint.
        :rtype: int
        """
        return self._concurrent_viewers

    @concurrent_viewers.setter
    def concurrent_viewers(self, concurrent_viewers):
        """Sets the concurrent_viewers of this RealTimeTimeseriesDatapoint.


        :param concurrent_viewers: The concurrent_viewers of this RealTimeTimeseriesDatapoint.
        :type concurrent_viewers: int
        """

        self._concurrent_viewers = concurrent_viewers

    @property
    def _date(self):
        """Gets the _date of this RealTimeTimeseriesDatapoint.


        :return: The _date of this RealTimeTimeseriesDatapoint.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this RealTimeTimeseriesDatapoint.


        :param _date: The _date of this RealTimeTimeseriesDatapoint.
        :type _date: str
        """

        self.__date = _date

    @property
    def value(self):
        """Gets the value of this RealTimeTimeseriesDatapoint.


        :return: The value of this RealTimeTimeseriesDatapoint.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this RealTimeTimeseriesDatapoint.


        :param value: The value of this RealTimeTimeseriesDatapoint.
        :type value: float
        """

        self._value = value
