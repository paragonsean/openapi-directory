# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExportFile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, path: str=None, type: str=None, version: int=None):
        """ExportFile - a model defined in OpenAPI

        :param path: The path of this ExportFile.
        :param type: The type of this ExportFile.
        :param version: The version of this ExportFile.
        """
        self.openapi_types = {
            'path': str,
            'type': str,
            'version': int
        }

        self.attribute_map = {
            'path': 'path',
            'type': 'type',
            'version': 'version'
        }

        self._path = path
        self._type = type
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExportFile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExportFile of this ExportFile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def path(self):
        """Gets the path of this ExportFile.


        :return: The path of this ExportFile.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this ExportFile.


        :param path: The path of this ExportFile.
        :type path: str
        """

        self._path = path

    @property
    def type(self):
        """Gets the type of this ExportFile.


        :return: The type of this ExportFile.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ExportFile.


        :param type: The type of this ExportFile.
        :type type: str
        """

        self._type = type

    @property
    def version(self):
        """Gets the version of this ExportFile.


        :return: The version of this ExportFile.
        :rtype: int
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this ExportFile.


        :param version: The version of this ExportFile.
        :type version: int
        """

        self._version = version
