# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LiveStreamGeneratedSubtitleSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, language_code: str='en', name: str=None, passthrough: str=None, transcription_vocabulary_ids: List[str]=None):
        """LiveStreamGeneratedSubtitleSettings - a model defined in OpenAPI

        :param language_code: The language_code of this LiveStreamGeneratedSubtitleSettings.
        :param name: The name of this LiveStreamGeneratedSubtitleSettings.
        :param passthrough: The passthrough of this LiveStreamGeneratedSubtitleSettings.
        :param transcription_vocabulary_ids: The transcription_vocabulary_ids of this LiveStreamGeneratedSubtitleSettings.
        """
        self.openapi_types = {
            'language_code': str,
            'name': str,
            'passthrough': str,
            'transcription_vocabulary_ids': List[str]
        }

        self.attribute_map = {
            'language_code': 'language_code',
            'name': 'name',
            'passthrough': 'passthrough',
            'transcription_vocabulary_ids': 'transcription_vocabulary_ids'
        }

        self._language_code = language_code
        self._name = name
        self._passthrough = passthrough
        self._transcription_vocabulary_ids = transcription_vocabulary_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LiveStreamGeneratedSubtitleSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LiveStreamGeneratedSubtitleSettings of this LiveStreamGeneratedSubtitleSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def language_code(self):
        """Gets the language_code of this LiveStreamGeneratedSubtitleSettings.

        The language to generate subtitles in.

        :return: The language_code of this LiveStreamGeneratedSubtitleSettings.
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this LiveStreamGeneratedSubtitleSettings.

        The language to generate subtitles in.

        :param language_code: The language_code of this LiveStreamGeneratedSubtitleSettings.
        :type language_code: str
        """
        allowed_values = ["en", "en-US"]  # noqa: E501
        if language_code not in allowed_values:
            raise ValueError(
                "Invalid value for `language_code` ({0}), must be one of {1}"
                .format(language_code, allowed_values)
            )

        self._language_code = language_code

    @property
    def name(self):
        """Gets the name of this LiveStreamGeneratedSubtitleSettings.

        A name for this live stream subtitle track.

        :return: The name of this LiveStreamGeneratedSubtitleSettings.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this LiveStreamGeneratedSubtitleSettings.

        A name for this live stream subtitle track.

        :param name: The name of this LiveStreamGeneratedSubtitleSettings.
        :type name: str
        """

        self._name = name

    @property
    def passthrough(self):
        """Gets the passthrough of this LiveStreamGeneratedSubtitleSettings.

        Arbitrary metadata set for the live stream subtitle track. Max 255 characters.

        :return: The passthrough of this LiveStreamGeneratedSubtitleSettings.
        :rtype: str
        """
        return self._passthrough

    @passthrough.setter
    def passthrough(self, passthrough):
        """Sets the passthrough of this LiveStreamGeneratedSubtitleSettings.

        Arbitrary metadata set for the live stream subtitle track. Max 255 characters.

        :param passthrough: The passthrough of this LiveStreamGeneratedSubtitleSettings.
        :type passthrough: str
        """

        self._passthrough = passthrough

    @property
    def transcription_vocabulary_ids(self):
        """Gets the transcription_vocabulary_ids of this LiveStreamGeneratedSubtitleSettings.

        Unique identifiers for existing Transcription Vocabularies to use while generating subtitles for the live stream. If the Transcription Vocabularies provided collectively have more than 1000 phrases, only the first 1000 phrases will be included.

        :return: The transcription_vocabulary_ids of this LiveStreamGeneratedSubtitleSettings.
        :rtype: List[str]
        """
        return self._transcription_vocabulary_ids

    @transcription_vocabulary_ids.setter
    def transcription_vocabulary_ids(self, transcription_vocabulary_ids):
        """Sets the transcription_vocabulary_ids of this LiveStreamGeneratedSubtitleSettings.

        Unique identifiers for existing Transcription Vocabularies to use while generating subtitles for the live stream. If the Transcription Vocabularies provided collectively have more than 1000 phrases, only the first 1000 phrases will be included.

        :param transcription_vocabulary_ids: The transcription_vocabulary_ids of this LiveStreamGeneratedSubtitleSettings.
        :type transcription_vocabulary_ids: List[str]
        """

        self._transcription_vocabulary_ids = transcription_vocabulary_ids
