# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.monitoring_timeseries_datapoint import MonitoringTimeseriesDatapoint
from openapi_server import util


class GetMonitoringTimeseriesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data: List[MonitoringTimeseriesDatapoint]=None, timeframe: List[int]=None, total_row_count: int=None):
        """GetMonitoringTimeseriesResponse - a model defined in OpenAPI

        :param data: The data of this GetMonitoringTimeseriesResponse.
        :param timeframe: The timeframe of this GetMonitoringTimeseriesResponse.
        :param total_row_count: The total_row_count of this GetMonitoringTimeseriesResponse.
        """
        self.openapi_types = {
            'data': List[MonitoringTimeseriesDatapoint],
            'timeframe': List[int],
            'total_row_count': int
        }

        self.attribute_map = {
            'data': 'data',
            'timeframe': 'timeframe',
            'total_row_count': 'total_row_count'
        }

        self._data = data
        self._timeframe = timeframe
        self._total_row_count = total_row_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetMonitoringTimeseriesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetMonitoringTimeseriesResponse of this GetMonitoringTimeseriesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self):
        """Gets the data of this GetMonitoringTimeseriesResponse.


        :return: The data of this GetMonitoringTimeseriesResponse.
        :rtype: List[MonitoringTimeseriesDatapoint]
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this GetMonitoringTimeseriesResponse.


        :param data: The data of this GetMonitoringTimeseriesResponse.
        :type data: List[MonitoringTimeseriesDatapoint]
        """

        self._data = data

    @property
    def timeframe(self):
        """Gets the timeframe of this GetMonitoringTimeseriesResponse.


        :return: The timeframe of this GetMonitoringTimeseriesResponse.
        :rtype: List[int]
        """
        return self._timeframe

    @timeframe.setter
    def timeframe(self, timeframe):
        """Sets the timeframe of this GetMonitoringTimeseriesResponse.


        :param timeframe: The timeframe of this GetMonitoringTimeseriesResponse.
        :type timeframe: List[int]
        """

        self._timeframe = timeframe

    @property
    def total_row_count(self):
        """Gets the total_row_count of this GetMonitoringTimeseriesResponse.


        :return: The total_row_count of this GetMonitoringTimeseriesResponse.
        :rtype: int
        """
        return self._total_row_count

    @total_row_count.setter
    def total_row_count(self, total_row_count):
        """Sets the total_row_count of this GetMonitoringTimeseriesResponse.


        :param total_row_count: The total_row_count of this GetMonitoringTimeseriesResponse.
        :type total_row_count: int
        """

        self._total_row_count = total_row_count
