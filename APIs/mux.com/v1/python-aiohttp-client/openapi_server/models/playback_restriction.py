# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.referrer_domain_restriction import ReferrerDomainRestriction
from openapi_server import util


class PlaybackRestriction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: str=None, id: str=None, referrer: ReferrerDomainRestriction=None, updated_at: str=None):
        """PlaybackRestriction - a model defined in OpenAPI

        :param created_at: The created_at of this PlaybackRestriction.
        :param id: The id of this PlaybackRestriction.
        :param referrer: The referrer of this PlaybackRestriction.
        :param updated_at: The updated_at of this PlaybackRestriction.
        """
        self.openapi_types = {
            'created_at': str,
            'id': str,
            'referrer': ReferrerDomainRestriction,
            'updated_at': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'id': 'id',
            'referrer': 'referrer',
            'updated_at': 'updated_at'
        }

        self._created_at = created_at
        self._id = id
        self._referrer = referrer
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlaybackRestriction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlaybackRestriction of this PlaybackRestriction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this PlaybackRestriction.

        Time the Playback Restriction was created, defined as a Unix timestamp (seconds since epoch).

        :return: The created_at of this PlaybackRestriction.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this PlaybackRestriction.

        Time the Playback Restriction was created, defined as a Unix timestamp (seconds since epoch).

        :param created_at: The created_at of this PlaybackRestriction.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def id(self):
        """Gets the id of this PlaybackRestriction.

        Unique identifier for the Playback Restriction. Max 255 characters.

        :return: The id of this PlaybackRestriction.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PlaybackRestriction.

        Unique identifier for the Playback Restriction. Max 255 characters.

        :param id: The id of this PlaybackRestriction.
        :type id: str
        """

        self._id = id

    @property
    def referrer(self):
        """Gets the referrer of this PlaybackRestriction.


        :return: The referrer of this PlaybackRestriction.
        :rtype: ReferrerDomainRestriction
        """
        return self._referrer

    @referrer.setter
    def referrer(self, referrer):
        """Sets the referrer of this PlaybackRestriction.


        :param referrer: The referrer of this PlaybackRestriction.
        :type referrer: ReferrerDomainRestriction
        """

        self._referrer = referrer

    @property
    def updated_at(self):
        """Gets the updated_at of this PlaybackRestriction.

        Time the Playback Restriction was last updated, defined as a Unix timestamp (seconds since epoch).

        :return: The updated_at of this PlaybackRestriction.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this PlaybackRestriction.

        Time the Playback Restriction was last updated, defined as a Unix timestamp (seconds since epoch).

        :param updated_at: The updated_at of this PlaybackRestriction.
        :type updated_at: str
        """

        self._updated_at = updated_at
