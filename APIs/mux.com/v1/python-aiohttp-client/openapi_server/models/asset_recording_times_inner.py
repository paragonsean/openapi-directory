# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AssetRecordingTimesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duration: float=None, started_at: datetime=None, type: str=None):
        """AssetRecordingTimesInner - a model defined in OpenAPI

        :param duration: The duration of this AssetRecordingTimesInner.
        :param started_at: The started_at of this AssetRecordingTimesInner.
        :param type: The type of this AssetRecordingTimesInner.
        """
        self.openapi_types = {
            'duration': float,
            'started_at': datetime,
            'type': str
        }

        self.attribute_map = {
            'duration': 'duration',
            'started_at': 'started_at',
            'type': 'type'
        }

        self._duration = duration
        self._started_at = started_at
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssetRecordingTimesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Asset_recording_times_inner of this AssetRecordingTimesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duration(self):
        """Gets the duration of this AssetRecordingTimesInner.

        The duration of the live stream recorded. The time value is in seconds.

        :return: The duration of this AssetRecordingTimesInner.
        :rtype: float
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this AssetRecordingTimesInner.

        The duration of the live stream recorded. The time value is in seconds.

        :param duration: The duration of this AssetRecordingTimesInner.
        :type duration: float
        """

        self._duration = duration

    @property
    def started_at(self):
        """Gets the started_at of this AssetRecordingTimesInner.

        The time at which the recording for the live stream started. The time value is Unix epoch time represented in ISO 8601 format.

        :return: The started_at of this AssetRecordingTimesInner.
        :rtype: datetime
        """
        return self._started_at

    @started_at.setter
    def started_at(self, started_at):
        """Sets the started_at of this AssetRecordingTimesInner.

        The time at which the recording for the live stream started. The time value is Unix epoch time represented in ISO 8601 format.

        :param started_at: The started_at of this AssetRecordingTimesInner.
        :type started_at: datetime
        """

        self._started_at = started_at

    @property
    def type(self):
        """Gets the type of this AssetRecordingTimesInner.

        The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions.

        :return: The type of this AssetRecordingTimesInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AssetRecordingTimesInner.

        The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions.

        :param type: The type of this AssetRecordingTimesInner.
        :type type: str
        """
        allowed_values = ["content", "slate"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
