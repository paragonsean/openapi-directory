# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.notification_rule import NotificationRule
from openapi_server import util


class IncidentNotificationRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: str=None, id: str=None, property_id: str=None, rules: List[NotificationRule]=None, status: str=None):
        """IncidentNotificationRule - a model defined in OpenAPI

        :param action: The action of this IncidentNotificationRule.
        :param id: The id of this IncidentNotificationRule.
        :param property_id: The property_id of this IncidentNotificationRule.
        :param rules: The rules of this IncidentNotificationRule.
        :param status: The status of this IncidentNotificationRule.
        """
        self.openapi_types = {
            'action': str,
            'id': str,
            'property_id': str,
            'rules': List[NotificationRule],
            'status': str
        }

        self.attribute_map = {
            'action': 'action',
            'id': 'id',
            'property_id': 'property_id',
            'rules': 'rules',
            'status': 'status'
        }

        self._action = action
        self._id = id
        self._property_id = property_id
        self._rules = rules
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IncidentNotificationRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IncidentNotificationRule of this IncidentNotificationRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this IncidentNotificationRule.


        :return: The action of this IncidentNotificationRule.
        :rtype: str
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this IncidentNotificationRule.


        :param action: The action of this IncidentNotificationRule.
        :type action: str
        """

        self._action = action

    @property
    def id(self):
        """Gets the id of this IncidentNotificationRule.


        :return: The id of this IncidentNotificationRule.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this IncidentNotificationRule.


        :param id: The id of this IncidentNotificationRule.
        :type id: str
        """

        self._id = id

    @property
    def property_id(self):
        """Gets the property_id of this IncidentNotificationRule.


        :return: The property_id of this IncidentNotificationRule.
        :rtype: str
        """
        return self._property_id

    @property_id.setter
    def property_id(self, property_id):
        """Sets the property_id of this IncidentNotificationRule.


        :param property_id: The property_id of this IncidentNotificationRule.
        :type property_id: str
        """

        self._property_id = property_id

    @property
    def rules(self):
        """Gets the rules of this IncidentNotificationRule.


        :return: The rules of this IncidentNotificationRule.
        :rtype: List[NotificationRule]
        """
        return self._rules

    @rules.setter
    def rules(self, rules):
        """Sets the rules of this IncidentNotificationRule.


        :param rules: The rules of this IncidentNotificationRule.
        :type rules: List[NotificationRule]
        """

        self._rules = rules

    @property
    def status(self):
        """Gets the status of this IncidentNotificationRule.


        :return: The status of this IncidentNotificationRule.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this IncidentNotificationRule.


        :param status: The status of this IncidentNotificationRule.
        :type status: str
        """

        self._status = status
