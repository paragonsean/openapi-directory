# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_broadcast_request import CreateBroadcastRequest
from openapi_server.models.space_type import SpaceType
from openapi_server import util


class CreateSpaceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, broadcasts: List[CreateBroadcastRequest]=None, passthrough: str=None, type: SpaceType=SpaceType.SERVER):
        """CreateSpaceRequest - a model defined in OpenAPI

        :param broadcasts: The broadcasts of this CreateSpaceRequest.
        :param passthrough: The passthrough of this CreateSpaceRequest.
        :param type: The type of this CreateSpaceRequest.
        """
        self.openapi_types = {
            'broadcasts': List[CreateBroadcastRequest],
            'passthrough': str,
            'type': SpaceType
        }

        self.attribute_map = {
            'broadcasts': 'broadcasts',
            'passthrough': 'passthrough',
            'type': 'type'
        }

        self._broadcasts = broadcasts
        self._passthrough = passthrough
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateSpaceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateSpaceRequest of this CreateSpaceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def broadcasts(self):
        """Gets the broadcasts of this CreateSpaceRequest.

        An array of broadcast destinations you want to stream the space to. **Note:** By default only a single broadcast destination can be specified. Contact Mux support if you need more.

        :return: The broadcasts of this CreateSpaceRequest.
        :rtype: List[CreateBroadcastRequest]
        """
        return self._broadcasts

    @broadcasts.setter
    def broadcasts(self, broadcasts):
        """Sets the broadcasts of this CreateSpaceRequest.

        An array of broadcast destinations you want to stream the space to. **Note:** By default only a single broadcast destination can be specified. Contact Mux support if you need more.

        :param broadcasts: The broadcasts of this CreateSpaceRequest.
        :type broadcasts: List[CreateBroadcastRequest]
        """

        self._broadcasts = broadcasts

    @property
    def passthrough(self):
        """Gets the passthrough of this CreateSpaceRequest.

        Arbitrary user-supplied metadata that will be included in the space details and related webhooks. Max: 255 characters.

        :return: The passthrough of this CreateSpaceRequest.
        :rtype: str
        """
        return self._passthrough

    @passthrough.setter
    def passthrough(self, passthrough):
        """Sets the passthrough of this CreateSpaceRequest.

        Arbitrary user-supplied metadata that will be included in the space details and related webhooks. Max: 255 characters.

        :param passthrough: The passthrough of this CreateSpaceRequest.
        :type passthrough: str
        """

        self._passthrough = passthrough

    @property
    def type(self):
        """Gets the type of this CreateSpaceRequest.


        :return: The type of this CreateSpaceRequest.
        :rtype: SpaceType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CreateSpaceRequest.


        :param type: The type of this CreateSpaceRequest.
        :type type: SpaceType
        """

        self._type = type
