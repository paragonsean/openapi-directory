# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.video_view_event import VideoViewEvent
from openapi_server import util


class VideoView(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asn: int=None, asn_name: str=None, asset_id: str=None, buffering_count: int=None, buffering_duration: int=None, buffering_rate: str=None, cdn: str=None, city: str=None, continent_code: str=None, country_code: str=None, country_name: str=None, custom_1: str=None, custom_10: str=None, custom_2: str=None, custom_3: str=None, custom_4: str=None, custom_5: str=None, custom_6: str=None, custom_7: str=None, custom_8: str=None, custom_9: str=None, environment_id: str=None, error_type_id: int=None, events: List[VideoViewEvent]=None, exit_before_video_start: bool=None, experiment_name: str=None, id: str=None, inserted_at: str=None, isp: str=None, latitude: str=None, live_stream_id: str=None, live_stream_latency: int=None, longitude: str=None, metro: str=None, mux_api_version: str=None, mux_embed: str=None, mux_embed_version: str=None, mux_viewer_id: str=None, page_load_time: int=None, page_type: str=None, page_url: str=None, platform_description: str=None, platform_summary: str=None, playback_id: str=None, playback_score: str=None, player_autoplay: bool=None, player_error_code: str=None, player_error_context: str=None, player_error_message: str=None, player_height: int=None, player_instance_id: str=None, player_language: str=None, player_load_time: int=None, player_mux_plugin_name: str=None, player_mux_plugin_version: str=None, player_name: str=None, player_poster: str=None, player_preload: bool=None, player_remote_played: bool=None, player_software: str=None, player_software_version: str=None, player_source_domain: str=None, player_source_duration: int=None, player_source_height: int=None, player_source_host_name: str=None, player_source_stream_type: str=None, player_source_type: str=None, player_source_url: str=None, player_source_width: int=None, player_startup_time: int=None, player_version: str=None, player_view_count: int=None, player_width: int=None, preroll_ad_asset_hostname: str=None, preroll_ad_tag_hostname: str=None, preroll_played: bool=None, preroll_requested: bool=None, property_id: int=None, quality_score: str=None, rebuffer_percentage: str=None, rebuffering_score: str=None, region: str=None, requests_for_first_preroll: int=None, session_id: str=None, short_time: str=None, startup_score: str=None, sub_property_id: str=None, time_to_first_frame: int=None, updated_at: str=None, used_fullscreen: bool=None, video_content_type: str=None, video_duration: int=None, video_encoding_variant: str=None, video_id: str=None, video_language: str=None, video_producer: str=None, video_series: str=None, video_startup_failure: bool=None, video_startup_preroll_load_time: int=None, video_startup_preroll_request_time: int=None, video_stream_type: str=None, video_title: str=None, video_variant_id: str=None, video_variant_name: str=None, view_average_request_latency: int=None, view_average_request_throughput: int=None, view_drm_type: str=None, view_dropped_frame_count: int=None, view_end: str=None, view_error_id: int=None, view_has_ad: bool=None, view_id: str=None, view_max_downscale_percentage: str=None, view_max_playhead_position: str=None, view_max_request_latency: int=None, view_max_upscale_percentage: str=None, view_playing_time: str=None, view_seek_count: int=None, view_seek_duration: int=None, view_session_id: str=None, view_start: str=None, view_total_content_playback_time: int=None, view_total_downscaling: str=None, view_total_upscaling: str=None, viewer_application_engine: str=None, viewer_application_name: str=None, viewer_application_version: str=None, viewer_connection_type: str=None, viewer_device_category: str=None, viewer_device_manufacturer: str=None, viewer_device_model: str=None, viewer_device_name: str=None, viewer_experience_score: str=None, viewer_os_architecture: str=None, viewer_os_family: str=None, viewer_os_version: str=None, viewer_user_agent: str=None, viewer_user_id: str=None, watch_time: int=None, watched: bool=None, weighted_average_bitrate: int=None):
        """VideoView - a model defined in OpenAPI

        :param asn: The asn of this VideoView.
        :param asn_name: The asn_name of this VideoView.
        :param asset_id: The asset_id of this VideoView.
        :param buffering_count: The buffering_count of this VideoView.
        :param buffering_duration: The buffering_duration of this VideoView.
        :param buffering_rate: The buffering_rate of this VideoView.
        :param cdn: The cdn of this VideoView.
        :param city: The city of this VideoView.
        :param continent_code: The continent_code of this VideoView.
        :param country_code: The country_code of this VideoView.
        :param country_name: The country_name of this VideoView.
        :param custom_1: The custom_1 of this VideoView.
        :param custom_10: The custom_10 of this VideoView.
        :param custom_2: The custom_2 of this VideoView.
        :param custom_3: The custom_3 of this VideoView.
        :param custom_4: The custom_4 of this VideoView.
        :param custom_5: The custom_5 of this VideoView.
        :param custom_6: The custom_6 of this VideoView.
        :param custom_7: The custom_7 of this VideoView.
        :param custom_8: The custom_8 of this VideoView.
        :param custom_9: The custom_9 of this VideoView.
        :param environment_id: The environment_id of this VideoView.
        :param error_type_id: The error_type_id of this VideoView.
        :param events: The events of this VideoView.
        :param exit_before_video_start: The exit_before_video_start of this VideoView.
        :param experiment_name: The experiment_name of this VideoView.
        :param id: The id of this VideoView.
        :param inserted_at: The inserted_at of this VideoView.
        :param isp: The isp of this VideoView.
        :param latitude: The latitude of this VideoView.
        :param live_stream_id: The live_stream_id of this VideoView.
        :param live_stream_latency: The live_stream_latency of this VideoView.
        :param longitude: The longitude of this VideoView.
        :param metro: The metro of this VideoView.
        :param mux_api_version: The mux_api_version of this VideoView.
        :param mux_embed: The mux_embed of this VideoView.
        :param mux_embed_version: The mux_embed_version of this VideoView.
        :param mux_viewer_id: The mux_viewer_id of this VideoView.
        :param page_load_time: The page_load_time of this VideoView.
        :param page_type: The page_type of this VideoView.
        :param page_url: The page_url of this VideoView.
        :param platform_description: The platform_description of this VideoView.
        :param platform_summary: The platform_summary of this VideoView.
        :param playback_id: The playback_id of this VideoView.
        :param playback_score: The playback_score of this VideoView.
        :param player_autoplay: The player_autoplay of this VideoView.
        :param player_error_code: The player_error_code of this VideoView.
        :param player_error_context: The player_error_context of this VideoView.
        :param player_error_message: The player_error_message of this VideoView.
        :param player_height: The player_height of this VideoView.
        :param player_instance_id: The player_instance_id of this VideoView.
        :param player_language: The player_language of this VideoView.
        :param player_load_time: The player_load_time of this VideoView.
        :param player_mux_plugin_name: The player_mux_plugin_name of this VideoView.
        :param player_mux_plugin_version: The player_mux_plugin_version of this VideoView.
        :param player_name: The player_name of this VideoView.
        :param player_poster: The player_poster of this VideoView.
        :param player_preload: The player_preload of this VideoView.
        :param player_remote_played: The player_remote_played of this VideoView.
        :param player_software: The player_software of this VideoView.
        :param player_software_version: The player_software_version of this VideoView.
        :param player_source_domain: The player_source_domain of this VideoView.
        :param player_source_duration: The player_source_duration of this VideoView.
        :param player_source_height: The player_source_height of this VideoView.
        :param player_source_host_name: The player_source_host_name of this VideoView.
        :param player_source_stream_type: The player_source_stream_type of this VideoView.
        :param player_source_type: The player_source_type of this VideoView.
        :param player_source_url: The player_source_url of this VideoView.
        :param player_source_width: The player_source_width of this VideoView.
        :param player_startup_time: The player_startup_time of this VideoView.
        :param player_version: The player_version of this VideoView.
        :param player_view_count: The player_view_count of this VideoView.
        :param player_width: The player_width of this VideoView.
        :param preroll_ad_asset_hostname: The preroll_ad_asset_hostname of this VideoView.
        :param preroll_ad_tag_hostname: The preroll_ad_tag_hostname of this VideoView.
        :param preroll_played: The preroll_played of this VideoView.
        :param preroll_requested: The preroll_requested of this VideoView.
        :param property_id: The property_id of this VideoView.
        :param quality_score: The quality_score of this VideoView.
        :param rebuffer_percentage: The rebuffer_percentage of this VideoView.
        :param rebuffering_score: The rebuffering_score of this VideoView.
        :param region: The region of this VideoView.
        :param requests_for_first_preroll: The requests_for_first_preroll of this VideoView.
        :param session_id: The session_id of this VideoView.
        :param short_time: The short_time of this VideoView.
        :param startup_score: The startup_score of this VideoView.
        :param sub_property_id: The sub_property_id of this VideoView.
        :param time_to_first_frame: The time_to_first_frame of this VideoView.
        :param updated_at: The updated_at of this VideoView.
        :param used_fullscreen: The used_fullscreen of this VideoView.
        :param video_content_type: The video_content_type of this VideoView.
        :param video_duration: The video_duration of this VideoView.
        :param video_encoding_variant: The video_encoding_variant of this VideoView.
        :param video_id: The video_id of this VideoView.
        :param video_language: The video_language of this VideoView.
        :param video_producer: The video_producer of this VideoView.
        :param video_series: The video_series of this VideoView.
        :param video_startup_failure: The video_startup_failure of this VideoView.
        :param video_startup_preroll_load_time: The video_startup_preroll_load_time of this VideoView.
        :param video_startup_preroll_request_time: The video_startup_preroll_request_time of this VideoView.
        :param video_stream_type: The video_stream_type of this VideoView.
        :param video_title: The video_title of this VideoView.
        :param video_variant_id: The video_variant_id of this VideoView.
        :param video_variant_name: The video_variant_name of this VideoView.
        :param view_average_request_latency: The view_average_request_latency of this VideoView.
        :param view_average_request_throughput: The view_average_request_throughput of this VideoView.
        :param view_drm_type: The view_drm_type of this VideoView.
        :param view_dropped_frame_count: The view_dropped_frame_count of this VideoView.
        :param view_end: The view_end of this VideoView.
        :param view_error_id: The view_error_id of this VideoView.
        :param view_has_ad: The view_has_ad of this VideoView.
        :param view_id: The view_id of this VideoView.
        :param view_max_downscale_percentage: The view_max_downscale_percentage of this VideoView.
        :param view_max_playhead_position: The view_max_playhead_position of this VideoView.
        :param view_max_request_latency: The view_max_request_latency of this VideoView.
        :param view_max_upscale_percentage: The view_max_upscale_percentage of this VideoView.
        :param view_playing_time: The view_playing_time of this VideoView.
        :param view_seek_count: The view_seek_count of this VideoView.
        :param view_seek_duration: The view_seek_duration of this VideoView.
        :param view_session_id: The view_session_id of this VideoView.
        :param view_start: The view_start of this VideoView.
        :param view_total_content_playback_time: The view_total_content_playback_time of this VideoView.
        :param view_total_downscaling: The view_total_downscaling of this VideoView.
        :param view_total_upscaling: The view_total_upscaling of this VideoView.
        :param viewer_application_engine: The viewer_application_engine of this VideoView.
        :param viewer_application_name: The viewer_application_name of this VideoView.
        :param viewer_application_version: The viewer_application_version of this VideoView.
        :param viewer_connection_type: The viewer_connection_type of this VideoView.
        :param viewer_device_category: The viewer_device_category of this VideoView.
        :param viewer_device_manufacturer: The viewer_device_manufacturer of this VideoView.
        :param viewer_device_model: The viewer_device_model of this VideoView.
        :param viewer_device_name: The viewer_device_name of this VideoView.
        :param viewer_experience_score: The viewer_experience_score of this VideoView.
        :param viewer_os_architecture: The viewer_os_architecture of this VideoView.
        :param viewer_os_family: The viewer_os_family of this VideoView.
        :param viewer_os_version: The viewer_os_version of this VideoView.
        :param viewer_user_agent: The viewer_user_agent of this VideoView.
        :param viewer_user_id: The viewer_user_id of this VideoView.
        :param watch_time: The watch_time of this VideoView.
        :param watched: The watched of this VideoView.
        :param weighted_average_bitrate: The weighted_average_bitrate of this VideoView.
        """
        self.openapi_types = {
            'asn': int,
            'asn_name': str,
            'asset_id': str,
            'buffering_count': int,
            'buffering_duration': int,
            'buffering_rate': str,
            'cdn': str,
            'city': str,
            'continent_code': str,
            'country_code': str,
            'country_name': str,
            'custom_1': str,
            'custom_10': str,
            'custom_2': str,
            'custom_3': str,
            'custom_4': str,
            'custom_5': str,
            'custom_6': str,
            'custom_7': str,
            'custom_8': str,
            'custom_9': str,
            'environment_id': str,
            'error_type_id': int,
            'events': List[VideoViewEvent],
            'exit_before_video_start': bool,
            'experiment_name': str,
            'id': str,
            'inserted_at': str,
            'isp': str,
            'latitude': str,
            'live_stream_id': str,
            'live_stream_latency': int,
            'longitude': str,
            'metro': str,
            'mux_api_version': str,
            'mux_embed': str,
            'mux_embed_version': str,
            'mux_viewer_id': str,
            'page_load_time': int,
            'page_type': str,
            'page_url': str,
            'platform_description': str,
            'platform_summary': str,
            'playback_id': str,
            'playback_score': str,
            'player_autoplay': bool,
            'player_error_code': str,
            'player_error_context': str,
            'player_error_message': str,
            'player_height': int,
            'player_instance_id': str,
            'player_language': str,
            'player_load_time': int,
            'player_mux_plugin_name': str,
            'player_mux_plugin_version': str,
            'player_name': str,
            'player_poster': str,
            'player_preload': bool,
            'player_remote_played': bool,
            'player_software': str,
            'player_software_version': str,
            'player_source_domain': str,
            'player_source_duration': int,
            'player_source_height': int,
            'player_source_host_name': str,
            'player_source_stream_type': str,
            'player_source_type': str,
            'player_source_url': str,
            'player_source_width': int,
            'player_startup_time': int,
            'player_version': str,
            'player_view_count': int,
            'player_width': int,
            'preroll_ad_asset_hostname': str,
            'preroll_ad_tag_hostname': str,
            'preroll_played': bool,
            'preroll_requested': bool,
            'property_id': int,
            'quality_score': str,
            'rebuffer_percentage': str,
            'rebuffering_score': str,
            'region': str,
            'requests_for_first_preroll': int,
            'session_id': str,
            'short_time': str,
            'startup_score': str,
            'sub_property_id': str,
            'time_to_first_frame': int,
            'updated_at': str,
            'used_fullscreen': bool,
            'video_content_type': str,
            'video_duration': int,
            'video_encoding_variant': str,
            'video_id': str,
            'video_language': str,
            'video_producer': str,
            'video_series': str,
            'video_startup_failure': bool,
            'video_startup_preroll_load_time': int,
            'video_startup_preroll_request_time': int,
            'video_stream_type': str,
            'video_title': str,
            'video_variant_id': str,
            'video_variant_name': str,
            'view_average_request_latency': int,
            'view_average_request_throughput': int,
            'view_drm_type': str,
            'view_dropped_frame_count': int,
            'view_end': str,
            'view_error_id': int,
            'view_has_ad': bool,
            'view_id': str,
            'view_max_downscale_percentage': str,
            'view_max_playhead_position': str,
            'view_max_request_latency': int,
            'view_max_upscale_percentage': str,
            'view_playing_time': str,
            'view_seek_count': int,
            'view_seek_duration': int,
            'view_session_id': str,
            'view_start': str,
            'view_total_content_playback_time': int,
            'view_total_downscaling': str,
            'view_total_upscaling': str,
            'viewer_application_engine': str,
            'viewer_application_name': str,
            'viewer_application_version': str,
            'viewer_connection_type': str,
            'viewer_device_category': str,
            'viewer_device_manufacturer': str,
            'viewer_device_model': str,
            'viewer_device_name': str,
            'viewer_experience_score': str,
            'viewer_os_architecture': str,
            'viewer_os_family': str,
            'viewer_os_version': str,
            'viewer_user_agent': str,
            'viewer_user_id': str,
            'watch_time': int,
            'watched': bool,
            'weighted_average_bitrate': int
        }

        self.attribute_map = {
            'asn': 'asn',
            'asn_name': 'asn_name',
            'asset_id': 'asset_id',
            'buffering_count': 'buffering_count',
            'buffering_duration': 'buffering_duration',
            'buffering_rate': 'buffering_rate',
            'cdn': 'cdn',
            'city': 'city',
            'continent_code': 'continent_code',
            'country_code': 'country_code',
            'country_name': 'country_name',
            'custom_1': 'custom_1',
            'custom_10': 'custom_10',
            'custom_2': 'custom_2',
            'custom_3': 'custom_3',
            'custom_4': 'custom_4',
            'custom_5': 'custom_5',
            'custom_6': 'custom_6',
            'custom_7': 'custom_7',
            'custom_8': 'custom_8',
            'custom_9': 'custom_9',
            'environment_id': 'environment_id',
            'error_type_id': 'error_type_id',
            'events': 'events',
            'exit_before_video_start': 'exit_before_video_start',
            'experiment_name': 'experiment_name',
            'id': 'id',
            'inserted_at': 'inserted_at',
            'isp': 'isp',
            'latitude': 'latitude',
            'live_stream_id': 'live_stream_id',
            'live_stream_latency': 'live_stream_latency',
            'longitude': 'longitude',
            'metro': 'metro',
            'mux_api_version': 'mux_api_version',
            'mux_embed': 'mux_embed',
            'mux_embed_version': 'mux_embed_version',
            'mux_viewer_id': 'mux_viewer_id',
            'page_load_time': 'page_load_time',
            'page_type': 'page_type',
            'page_url': 'page_url',
            'platform_description': 'platform_description',
            'platform_summary': 'platform_summary',
            'playback_id': 'playback_id',
            'playback_score': 'playback_score',
            'player_autoplay': 'player_autoplay',
            'player_error_code': 'player_error_code',
            'player_error_context': 'player_error_context',
            'player_error_message': 'player_error_message',
            'player_height': 'player_height',
            'player_instance_id': 'player_instance_id',
            'player_language': 'player_language',
            'player_load_time': 'player_load_time',
            'player_mux_plugin_name': 'player_mux_plugin_name',
            'player_mux_plugin_version': 'player_mux_plugin_version',
            'player_name': 'player_name',
            'player_poster': 'player_poster',
            'player_preload': 'player_preload',
            'player_remote_played': 'player_remote_played',
            'player_software': 'player_software',
            'player_software_version': 'player_software_version',
            'player_source_domain': 'player_source_domain',
            'player_source_duration': 'player_source_duration',
            'player_source_height': 'player_source_height',
            'player_source_host_name': 'player_source_host_name',
            'player_source_stream_type': 'player_source_stream_type',
            'player_source_type': 'player_source_type',
            'player_source_url': 'player_source_url',
            'player_source_width': 'player_source_width',
            'player_startup_time': 'player_startup_time',
            'player_version': 'player_version',
            'player_view_count': 'player_view_count',
            'player_width': 'player_width',
            'preroll_ad_asset_hostname': 'preroll_ad_asset_hostname',
            'preroll_ad_tag_hostname': 'preroll_ad_tag_hostname',
            'preroll_played': 'preroll_played',
            'preroll_requested': 'preroll_requested',
            'property_id': 'property_id',
            'quality_score': 'quality_score',
            'rebuffer_percentage': 'rebuffer_percentage',
            'rebuffering_score': 'rebuffering_score',
            'region': 'region',
            'requests_for_first_preroll': 'requests_for_first_preroll',
            'session_id': 'session_id',
            'short_time': 'short_time',
            'startup_score': 'startup_score',
            'sub_property_id': 'sub_property_id',
            'time_to_first_frame': 'time_to_first_frame',
            'updated_at': 'updated_at',
            'used_fullscreen': 'used_fullscreen',
            'video_content_type': 'video_content_type',
            'video_duration': 'video_duration',
            'video_encoding_variant': 'video_encoding_variant',
            'video_id': 'video_id',
            'video_language': 'video_language',
            'video_producer': 'video_producer',
            'video_series': 'video_series',
            'video_startup_failure': 'video_startup_failure',
            'video_startup_preroll_load_time': 'video_startup_preroll_load_time',
            'video_startup_preroll_request_time': 'video_startup_preroll_request_time',
            'video_stream_type': 'video_stream_type',
            'video_title': 'video_title',
            'video_variant_id': 'video_variant_id',
            'video_variant_name': 'video_variant_name',
            'view_average_request_latency': 'view_average_request_latency',
            'view_average_request_throughput': 'view_average_request_throughput',
            'view_drm_type': 'view_drm_type',
            'view_dropped_frame_count': 'view_dropped_frame_count',
            'view_end': 'view_end',
            'view_error_id': 'view_error_id',
            'view_has_ad': 'view_has_ad',
            'view_id': 'view_id',
            'view_max_downscale_percentage': 'view_max_downscale_percentage',
            'view_max_playhead_position': 'view_max_playhead_position',
            'view_max_request_latency': 'view_max_request_latency',
            'view_max_upscale_percentage': 'view_max_upscale_percentage',
            'view_playing_time': 'view_playing_time',
            'view_seek_count': 'view_seek_count',
            'view_seek_duration': 'view_seek_duration',
            'view_session_id': 'view_session_id',
            'view_start': 'view_start',
            'view_total_content_playback_time': 'view_total_content_playback_time',
            'view_total_downscaling': 'view_total_downscaling',
            'view_total_upscaling': 'view_total_upscaling',
            'viewer_application_engine': 'viewer_application_engine',
            'viewer_application_name': 'viewer_application_name',
            'viewer_application_version': 'viewer_application_version',
            'viewer_connection_type': 'viewer_connection_type',
            'viewer_device_category': 'viewer_device_category',
            'viewer_device_manufacturer': 'viewer_device_manufacturer',
            'viewer_device_model': 'viewer_device_model',
            'viewer_device_name': 'viewer_device_name',
            'viewer_experience_score': 'viewer_experience_score',
            'viewer_os_architecture': 'viewer_os_architecture',
            'viewer_os_family': 'viewer_os_family',
            'viewer_os_version': 'viewer_os_version',
            'viewer_user_agent': 'viewer_user_agent',
            'viewer_user_id': 'viewer_user_id',
            'watch_time': 'watch_time',
            'watched': 'watched',
            'weighted_average_bitrate': 'weighted_average_bitrate'
        }

        self._asn = asn
        self._asn_name = asn_name
        self._asset_id = asset_id
        self._buffering_count = buffering_count
        self._buffering_duration = buffering_duration
        self._buffering_rate = buffering_rate
        self._cdn = cdn
        self._city = city
        self._continent_code = continent_code
        self._country_code = country_code
        self._country_name = country_name
        self._custom_1 = custom_1
        self._custom_10 = custom_10
        self._custom_2 = custom_2
        self._custom_3 = custom_3
        self._custom_4 = custom_4
        self._custom_5 = custom_5
        self._custom_6 = custom_6
        self._custom_7 = custom_7
        self._custom_8 = custom_8
        self._custom_9 = custom_9
        self._environment_id = environment_id
        self._error_type_id = error_type_id
        self._events = events
        self._exit_before_video_start = exit_before_video_start
        self._experiment_name = experiment_name
        self._id = id
        self._inserted_at = inserted_at
        self._isp = isp
        self._latitude = latitude
        self._live_stream_id = live_stream_id
        self._live_stream_latency = live_stream_latency
        self._longitude = longitude
        self._metro = metro
        self._mux_api_version = mux_api_version
        self._mux_embed = mux_embed
        self._mux_embed_version = mux_embed_version
        self._mux_viewer_id = mux_viewer_id
        self._page_load_time = page_load_time
        self._page_type = page_type
        self._page_url = page_url
        self._platform_description = platform_description
        self._platform_summary = platform_summary
        self._playback_id = playback_id
        self._playback_score = playback_score
        self._player_autoplay = player_autoplay
        self._player_error_code = player_error_code
        self._player_error_context = player_error_context
        self._player_error_message = player_error_message
        self._player_height = player_height
        self._player_instance_id = player_instance_id
        self._player_language = player_language
        self._player_load_time = player_load_time
        self._player_mux_plugin_name = player_mux_plugin_name
        self._player_mux_plugin_version = player_mux_plugin_version
        self._player_name = player_name
        self._player_poster = player_poster
        self._player_preload = player_preload
        self._player_remote_played = player_remote_played
        self._player_software = player_software
        self._player_software_version = player_software_version
        self._player_source_domain = player_source_domain
        self._player_source_duration = player_source_duration
        self._player_source_height = player_source_height
        self._player_source_host_name = player_source_host_name
        self._player_source_stream_type = player_source_stream_type
        self._player_source_type = player_source_type
        self._player_source_url = player_source_url
        self._player_source_width = player_source_width
        self._player_startup_time = player_startup_time
        self._player_version = player_version
        self._player_view_count = player_view_count
        self._player_width = player_width
        self._preroll_ad_asset_hostname = preroll_ad_asset_hostname
        self._preroll_ad_tag_hostname = preroll_ad_tag_hostname
        self._preroll_played = preroll_played
        self._preroll_requested = preroll_requested
        self._property_id = property_id
        self._quality_score = quality_score
        self._rebuffer_percentage = rebuffer_percentage
        self._rebuffering_score = rebuffering_score
        self._region = region
        self._requests_for_first_preroll = requests_for_first_preroll
        self._session_id = session_id
        self._short_time = short_time
        self._startup_score = startup_score
        self._sub_property_id = sub_property_id
        self._time_to_first_frame = time_to_first_frame
        self._updated_at = updated_at
        self._used_fullscreen = used_fullscreen
        self._video_content_type = video_content_type
        self._video_duration = video_duration
        self._video_encoding_variant = video_encoding_variant
        self._video_id = video_id
        self._video_language = video_language
        self._video_producer = video_producer
        self._video_series = video_series
        self._video_startup_failure = video_startup_failure
        self._video_startup_preroll_load_time = video_startup_preroll_load_time
        self._video_startup_preroll_request_time = video_startup_preroll_request_time
        self._video_stream_type = video_stream_type
        self._video_title = video_title
        self._video_variant_id = video_variant_id
        self._video_variant_name = video_variant_name
        self._view_average_request_latency = view_average_request_latency
        self._view_average_request_throughput = view_average_request_throughput
        self._view_drm_type = view_drm_type
        self._view_dropped_frame_count = view_dropped_frame_count
        self._view_end = view_end
        self._view_error_id = view_error_id
        self._view_has_ad = view_has_ad
        self._view_id = view_id
        self._view_max_downscale_percentage = view_max_downscale_percentage
        self._view_max_playhead_position = view_max_playhead_position
        self._view_max_request_latency = view_max_request_latency
        self._view_max_upscale_percentage = view_max_upscale_percentage
        self._view_playing_time = view_playing_time
        self._view_seek_count = view_seek_count
        self._view_seek_duration = view_seek_duration
        self._view_session_id = view_session_id
        self._view_start = view_start
        self._view_total_content_playback_time = view_total_content_playback_time
        self._view_total_downscaling = view_total_downscaling
        self._view_total_upscaling = view_total_upscaling
        self._viewer_application_engine = viewer_application_engine
        self._viewer_application_name = viewer_application_name
        self._viewer_application_version = viewer_application_version
        self._viewer_connection_type = viewer_connection_type
        self._viewer_device_category = viewer_device_category
        self._viewer_device_manufacturer = viewer_device_manufacturer
        self._viewer_device_model = viewer_device_model
        self._viewer_device_name = viewer_device_name
        self._viewer_experience_score = viewer_experience_score
        self._viewer_os_architecture = viewer_os_architecture
        self._viewer_os_family = viewer_os_family
        self._viewer_os_version = viewer_os_version
        self._viewer_user_agent = viewer_user_agent
        self._viewer_user_id = viewer_user_id
        self._watch_time = watch_time
        self._watched = watched
        self._weighted_average_bitrate = weighted_average_bitrate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoView':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VideoView of this VideoView.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asn(self):
        """Gets the asn of this VideoView.


        :return: The asn of this VideoView.
        :rtype: int
        """
        return self._asn

    @asn.setter
    def asn(self, asn):
        """Sets the asn of this VideoView.


        :param asn: The asn of this VideoView.
        :type asn: int
        """

        self._asn = asn

    @property
    def asn_name(self):
        """Gets the asn_name of this VideoView.


        :return: The asn_name of this VideoView.
        :rtype: str
        """
        return self._asn_name

    @asn_name.setter
    def asn_name(self, asn_name):
        """Sets the asn_name of this VideoView.


        :param asn_name: The asn_name of this VideoView.
        :type asn_name: str
        """

        self._asn_name = asn_name

    @property
    def asset_id(self):
        """Gets the asset_id of this VideoView.


        :return: The asset_id of this VideoView.
        :rtype: str
        """
        return self._asset_id

    @asset_id.setter
    def asset_id(self, asset_id):
        """Sets the asset_id of this VideoView.


        :param asset_id: The asset_id of this VideoView.
        :type asset_id: str
        """

        self._asset_id = asset_id

    @property
    def buffering_count(self):
        """Gets the buffering_count of this VideoView.


        :return: The buffering_count of this VideoView.
        :rtype: int
        """
        return self._buffering_count

    @buffering_count.setter
    def buffering_count(self, buffering_count):
        """Sets the buffering_count of this VideoView.


        :param buffering_count: The buffering_count of this VideoView.
        :type buffering_count: int
        """

        self._buffering_count = buffering_count

    @property
    def buffering_duration(self):
        """Gets the buffering_duration of this VideoView.


        :return: The buffering_duration of this VideoView.
        :rtype: int
        """
        return self._buffering_duration

    @buffering_duration.setter
    def buffering_duration(self, buffering_duration):
        """Sets the buffering_duration of this VideoView.


        :param buffering_duration: The buffering_duration of this VideoView.
        :type buffering_duration: int
        """

        self._buffering_duration = buffering_duration

    @property
    def buffering_rate(self):
        """Gets the buffering_rate of this VideoView.


        :return: The buffering_rate of this VideoView.
        :rtype: str
        """
        return self._buffering_rate

    @buffering_rate.setter
    def buffering_rate(self, buffering_rate):
        """Sets the buffering_rate of this VideoView.


        :param buffering_rate: The buffering_rate of this VideoView.
        :type buffering_rate: str
        """

        self._buffering_rate = buffering_rate

    @property
    def cdn(self):
        """Gets the cdn of this VideoView.


        :return: The cdn of this VideoView.
        :rtype: str
        """
        return self._cdn

    @cdn.setter
    def cdn(self, cdn):
        """Sets the cdn of this VideoView.


        :param cdn: The cdn of this VideoView.
        :type cdn: str
        """

        self._cdn = cdn

    @property
    def city(self):
        """Gets the city of this VideoView.


        :return: The city of this VideoView.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this VideoView.


        :param city: The city of this VideoView.
        :type city: str
        """

        self._city = city

    @property
    def continent_code(self):
        """Gets the continent_code of this VideoView.


        :return: The continent_code of this VideoView.
        :rtype: str
        """
        return self._continent_code

    @continent_code.setter
    def continent_code(self, continent_code):
        """Sets the continent_code of this VideoView.


        :param continent_code: The continent_code of this VideoView.
        :type continent_code: str
        """

        self._continent_code = continent_code

    @property
    def country_code(self):
        """Gets the country_code of this VideoView.


        :return: The country_code of this VideoView.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this VideoView.


        :param country_code: The country_code of this VideoView.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def country_name(self):
        """Gets the country_name of this VideoView.


        :return: The country_name of this VideoView.
        :rtype: str
        """
        return self._country_name

    @country_name.setter
    def country_name(self, country_name):
        """Sets the country_name of this VideoView.


        :param country_name: The country_name of this VideoView.
        :type country_name: str
        """

        self._country_name = country_name

    @property
    def custom_1(self):
        """Gets the custom_1 of this VideoView.


        :return: The custom_1 of this VideoView.
        :rtype: str
        """
        return self._custom_1

    @custom_1.setter
    def custom_1(self, custom_1):
        """Sets the custom_1 of this VideoView.


        :param custom_1: The custom_1 of this VideoView.
        :type custom_1: str
        """

        self._custom_1 = custom_1

    @property
    def custom_10(self):
        """Gets the custom_10 of this VideoView.


        :return: The custom_10 of this VideoView.
        :rtype: str
        """
        return self._custom_10

    @custom_10.setter
    def custom_10(self, custom_10):
        """Sets the custom_10 of this VideoView.


        :param custom_10: The custom_10 of this VideoView.
        :type custom_10: str
        """

        self._custom_10 = custom_10

    @property
    def custom_2(self):
        """Gets the custom_2 of this VideoView.


        :return: The custom_2 of this VideoView.
        :rtype: str
        """
        return self._custom_2

    @custom_2.setter
    def custom_2(self, custom_2):
        """Sets the custom_2 of this VideoView.


        :param custom_2: The custom_2 of this VideoView.
        :type custom_2: str
        """

        self._custom_2 = custom_2

    @property
    def custom_3(self):
        """Gets the custom_3 of this VideoView.


        :return: The custom_3 of this VideoView.
        :rtype: str
        """
        return self._custom_3

    @custom_3.setter
    def custom_3(self, custom_3):
        """Sets the custom_3 of this VideoView.


        :param custom_3: The custom_3 of this VideoView.
        :type custom_3: str
        """

        self._custom_3 = custom_3

    @property
    def custom_4(self):
        """Gets the custom_4 of this VideoView.


        :return: The custom_4 of this VideoView.
        :rtype: str
        """
        return self._custom_4

    @custom_4.setter
    def custom_4(self, custom_4):
        """Sets the custom_4 of this VideoView.


        :param custom_4: The custom_4 of this VideoView.
        :type custom_4: str
        """

        self._custom_4 = custom_4

    @property
    def custom_5(self):
        """Gets the custom_5 of this VideoView.


        :return: The custom_5 of this VideoView.
        :rtype: str
        """
        return self._custom_5

    @custom_5.setter
    def custom_5(self, custom_5):
        """Sets the custom_5 of this VideoView.


        :param custom_5: The custom_5 of this VideoView.
        :type custom_5: str
        """

        self._custom_5 = custom_5

    @property
    def custom_6(self):
        """Gets the custom_6 of this VideoView.


        :return: The custom_6 of this VideoView.
        :rtype: str
        """
        return self._custom_6

    @custom_6.setter
    def custom_6(self, custom_6):
        """Sets the custom_6 of this VideoView.


        :param custom_6: The custom_6 of this VideoView.
        :type custom_6: str
        """

        self._custom_6 = custom_6

    @property
    def custom_7(self):
        """Gets the custom_7 of this VideoView.


        :return: The custom_7 of this VideoView.
        :rtype: str
        """
        return self._custom_7

    @custom_7.setter
    def custom_7(self, custom_7):
        """Sets the custom_7 of this VideoView.


        :param custom_7: The custom_7 of this VideoView.
        :type custom_7: str
        """

        self._custom_7 = custom_7

    @property
    def custom_8(self):
        """Gets the custom_8 of this VideoView.


        :return: The custom_8 of this VideoView.
        :rtype: str
        """
        return self._custom_8

    @custom_8.setter
    def custom_8(self, custom_8):
        """Sets the custom_8 of this VideoView.


        :param custom_8: The custom_8 of this VideoView.
        :type custom_8: str
        """

        self._custom_8 = custom_8

    @property
    def custom_9(self):
        """Gets the custom_9 of this VideoView.


        :return: The custom_9 of this VideoView.
        :rtype: str
        """
        return self._custom_9

    @custom_9.setter
    def custom_9(self, custom_9):
        """Sets the custom_9 of this VideoView.


        :param custom_9: The custom_9 of this VideoView.
        :type custom_9: str
        """

        self._custom_9 = custom_9

    @property
    def environment_id(self):
        """Gets the environment_id of this VideoView.


        :return: The environment_id of this VideoView.
        :rtype: str
        """
        return self._environment_id

    @environment_id.setter
    def environment_id(self, environment_id):
        """Sets the environment_id of this VideoView.


        :param environment_id: The environment_id of this VideoView.
        :type environment_id: str
        """

        self._environment_id = environment_id

    @property
    def error_type_id(self):
        """Gets the error_type_id of this VideoView.


        :return: The error_type_id of this VideoView.
        :rtype: int
        """
        return self._error_type_id

    @error_type_id.setter
    def error_type_id(self, error_type_id):
        """Sets the error_type_id of this VideoView.


        :param error_type_id: The error_type_id of this VideoView.
        :type error_type_id: int
        """

        self._error_type_id = error_type_id

    @property
    def events(self):
        """Gets the events of this VideoView.


        :return: The events of this VideoView.
        :rtype: List[VideoViewEvent]
        """
        return self._events

    @events.setter
    def events(self, events):
        """Sets the events of this VideoView.


        :param events: The events of this VideoView.
        :type events: List[VideoViewEvent]
        """

        self._events = events

    @property
    def exit_before_video_start(self):
        """Gets the exit_before_video_start of this VideoView.


        :return: The exit_before_video_start of this VideoView.
        :rtype: bool
        """
        return self._exit_before_video_start

    @exit_before_video_start.setter
    def exit_before_video_start(self, exit_before_video_start):
        """Sets the exit_before_video_start of this VideoView.


        :param exit_before_video_start: The exit_before_video_start of this VideoView.
        :type exit_before_video_start: bool
        """

        self._exit_before_video_start = exit_before_video_start

    @property
    def experiment_name(self):
        """Gets the experiment_name of this VideoView.


        :return: The experiment_name of this VideoView.
        :rtype: str
        """
        return self._experiment_name

    @experiment_name.setter
    def experiment_name(self, experiment_name):
        """Sets the experiment_name of this VideoView.


        :param experiment_name: The experiment_name of this VideoView.
        :type experiment_name: str
        """

        self._experiment_name = experiment_name

    @property
    def id(self):
        """Gets the id of this VideoView.


        :return: The id of this VideoView.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this VideoView.


        :param id: The id of this VideoView.
        :type id: str
        """

        self._id = id

    @property
    def inserted_at(self):
        """Gets the inserted_at of this VideoView.


        :return: The inserted_at of this VideoView.
        :rtype: str
        """
        return self._inserted_at

    @inserted_at.setter
    def inserted_at(self, inserted_at):
        """Sets the inserted_at of this VideoView.


        :param inserted_at: The inserted_at of this VideoView.
        :type inserted_at: str
        """

        self._inserted_at = inserted_at

    @property
    def isp(self):
        """Gets the isp of this VideoView.


        :return: The isp of this VideoView.
        :rtype: str
        """
        return self._isp

    @isp.setter
    def isp(self, isp):
        """Sets the isp of this VideoView.


        :param isp: The isp of this VideoView.
        :type isp: str
        """

        self._isp = isp

    @property
    def latitude(self):
        """Gets the latitude of this VideoView.


        :return: The latitude of this VideoView.
        :rtype: str
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this VideoView.


        :param latitude: The latitude of this VideoView.
        :type latitude: str
        """

        self._latitude = latitude

    @property
    def live_stream_id(self):
        """Gets the live_stream_id of this VideoView.


        :return: The live_stream_id of this VideoView.
        :rtype: str
        """
        return self._live_stream_id

    @live_stream_id.setter
    def live_stream_id(self, live_stream_id):
        """Sets the live_stream_id of this VideoView.


        :param live_stream_id: The live_stream_id of this VideoView.
        :type live_stream_id: str
        """

        self._live_stream_id = live_stream_id

    @property
    def live_stream_latency(self):
        """Gets the live_stream_latency of this VideoView.


        :return: The live_stream_latency of this VideoView.
        :rtype: int
        """
        return self._live_stream_latency

    @live_stream_latency.setter
    def live_stream_latency(self, live_stream_latency):
        """Sets the live_stream_latency of this VideoView.


        :param live_stream_latency: The live_stream_latency of this VideoView.
        :type live_stream_latency: int
        """

        self._live_stream_latency = live_stream_latency

    @property
    def longitude(self):
        """Gets the longitude of this VideoView.


        :return: The longitude of this VideoView.
        :rtype: str
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this VideoView.


        :param longitude: The longitude of this VideoView.
        :type longitude: str
        """

        self._longitude = longitude

    @property
    def metro(self):
        """Gets the metro of this VideoView.


        :return: The metro of this VideoView.
        :rtype: str
        """
        return self._metro

    @metro.setter
    def metro(self, metro):
        """Sets the metro of this VideoView.


        :param metro: The metro of this VideoView.
        :type metro: str
        """

        self._metro = metro

    @property
    def mux_api_version(self):
        """Gets the mux_api_version of this VideoView.


        :return: The mux_api_version of this VideoView.
        :rtype: str
        """
        return self._mux_api_version

    @mux_api_version.setter
    def mux_api_version(self, mux_api_version):
        """Sets the mux_api_version of this VideoView.


        :param mux_api_version: The mux_api_version of this VideoView.
        :type mux_api_version: str
        """

        self._mux_api_version = mux_api_version

    @property
    def mux_embed(self):
        """Gets the mux_embed of this VideoView.


        :return: The mux_embed of this VideoView.
        :rtype: str
        """
        return self._mux_embed

    @mux_embed.setter
    def mux_embed(self, mux_embed):
        """Sets the mux_embed of this VideoView.


        :param mux_embed: The mux_embed of this VideoView.
        :type mux_embed: str
        """

        self._mux_embed = mux_embed

    @property
    def mux_embed_version(self):
        """Gets the mux_embed_version of this VideoView.


        :return: The mux_embed_version of this VideoView.
        :rtype: str
        """
        return self._mux_embed_version

    @mux_embed_version.setter
    def mux_embed_version(self, mux_embed_version):
        """Sets the mux_embed_version of this VideoView.


        :param mux_embed_version: The mux_embed_version of this VideoView.
        :type mux_embed_version: str
        """

        self._mux_embed_version = mux_embed_version

    @property
    def mux_viewer_id(self):
        """Gets the mux_viewer_id of this VideoView.


        :return: The mux_viewer_id of this VideoView.
        :rtype: str
        """
        return self._mux_viewer_id

    @mux_viewer_id.setter
    def mux_viewer_id(self, mux_viewer_id):
        """Sets the mux_viewer_id of this VideoView.


        :param mux_viewer_id: The mux_viewer_id of this VideoView.
        :type mux_viewer_id: str
        """

        self._mux_viewer_id = mux_viewer_id

    @property
    def page_load_time(self):
        """Gets the page_load_time of this VideoView.


        :return: The page_load_time of this VideoView.
        :rtype: int
        """
        return self._page_load_time

    @page_load_time.setter
    def page_load_time(self, page_load_time):
        """Sets the page_load_time of this VideoView.


        :param page_load_time: The page_load_time of this VideoView.
        :type page_load_time: int
        """

        self._page_load_time = page_load_time

    @property
    def page_type(self):
        """Gets the page_type of this VideoView.


        :return: The page_type of this VideoView.
        :rtype: str
        """
        return self._page_type

    @page_type.setter
    def page_type(self, page_type):
        """Sets the page_type of this VideoView.


        :param page_type: The page_type of this VideoView.
        :type page_type: str
        """

        self._page_type = page_type

    @property
    def page_url(self):
        """Gets the page_url of this VideoView.


        :return: The page_url of this VideoView.
        :rtype: str
        """
        return self._page_url

    @page_url.setter
    def page_url(self, page_url):
        """Sets the page_url of this VideoView.


        :param page_url: The page_url of this VideoView.
        :type page_url: str
        """

        self._page_url = page_url

    @property
    def platform_description(self):
        """Gets the platform_description of this VideoView.


        :return: The platform_description of this VideoView.
        :rtype: str
        """
        return self._platform_description

    @platform_description.setter
    def platform_description(self, platform_description):
        """Sets the platform_description of this VideoView.


        :param platform_description: The platform_description of this VideoView.
        :type platform_description: str
        """

        self._platform_description = platform_description

    @property
    def platform_summary(self):
        """Gets the platform_summary of this VideoView.


        :return: The platform_summary of this VideoView.
        :rtype: str
        """
        return self._platform_summary

    @platform_summary.setter
    def platform_summary(self, platform_summary):
        """Sets the platform_summary of this VideoView.


        :param platform_summary: The platform_summary of this VideoView.
        :type platform_summary: str
        """

        self._platform_summary = platform_summary

    @property
    def playback_id(self):
        """Gets the playback_id of this VideoView.


        :return: The playback_id of this VideoView.
        :rtype: str
        """
        return self._playback_id

    @playback_id.setter
    def playback_id(self, playback_id):
        """Sets the playback_id of this VideoView.


        :param playback_id: The playback_id of this VideoView.
        :type playback_id: str
        """

        self._playback_id = playback_id

    @property
    def playback_score(self):
        """Gets the playback_score of this VideoView.


        :return: The playback_score of this VideoView.
        :rtype: str
        """
        return self._playback_score

    @playback_score.setter
    def playback_score(self, playback_score):
        """Sets the playback_score of this VideoView.


        :param playback_score: The playback_score of this VideoView.
        :type playback_score: str
        """

        self._playback_score = playback_score

    @property
    def player_autoplay(self):
        """Gets the player_autoplay of this VideoView.


        :return: The player_autoplay of this VideoView.
        :rtype: bool
        """
        return self._player_autoplay

    @player_autoplay.setter
    def player_autoplay(self, player_autoplay):
        """Sets the player_autoplay of this VideoView.


        :param player_autoplay: The player_autoplay of this VideoView.
        :type player_autoplay: bool
        """

        self._player_autoplay = player_autoplay

    @property
    def player_error_code(self):
        """Gets the player_error_code of this VideoView.


        :return: The player_error_code of this VideoView.
        :rtype: str
        """
        return self._player_error_code

    @player_error_code.setter
    def player_error_code(self, player_error_code):
        """Sets the player_error_code of this VideoView.


        :param player_error_code: The player_error_code of this VideoView.
        :type player_error_code: str
        """

        self._player_error_code = player_error_code

    @property
    def player_error_context(self):
        """Gets the player_error_context of this VideoView.


        :return: The player_error_context of this VideoView.
        :rtype: str
        """
        return self._player_error_context

    @player_error_context.setter
    def player_error_context(self, player_error_context):
        """Sets the player_error_context of this VideoView.


        :param player_error_context: The player_error_context of this VideoView.
        :type player_error_context: str
        """

        self._player_error_context = player_error_context

    @property
    def player_error_message(self):
        """Gets the player_error_message of this VideoView.


        :return: The player_error_message of this VideoView.
        :rtype: str
        """
        return self._player_error_message

    @player_error_message.setter
    def player_error_message(self, player_error_message):
        """Sets the player_error_message of this VideoView.


        :param player_error_message: The player_error_message of this VideoView.
        :type player_error_message: str
        """

        self._player_error_message = player_error_message

    @property
    def player_height(self):
        """Gets the player_height of this VideoView.


        :return: The player_height of this VideoView.
        :rtype: int
        """
        return self._player_height

    @player_height.setter
    def player_height(self, player_height):
        """Sets the player_height of this VideoView.


        :param player_height: The player_height of this VideoView.
        :type player_height: int
        """

        self._player_height = player_height

    @property
    def player_instance_id(self):
        """Gets the player_instance_id of this VideoView.


        :return: The player_instance_id of this VideoView.
        :rtype: str
        """
        return self._player_instance_id

    @player_instance_id.setter
    def player_instance_id(self, player_instance_id):
        """Sets the player_instance_id of this VideoView.


        :param player_instance_id: The player_instance_id of this VideoView.
        :type player_instance_id: str
        """

        self._player_instance_id = player_instance_id

    @property
    def player_language(self):
        """Gets the player_language of this VideoView.


        :return: The player_language of this VideoView.
        :rtype: str
        """
        return self._player_language

    @player_language.setter
    def player_language(self, player_language):
        """Sets the player_language of this VideoView.


        :param player_language: The player_language of this VideoView.
        :type player_language: str
        """

        self._player_language = player_language

    @property
    def player_load_time(self):
        """Gets the player_load_time of this VideoView.


        :return: The player_load_time of this VideoView.
        :rtype: int
        """
        return self._player_load_time

    @player_load_time.setter
    def player_load_time(self, player_load_time):
        """Sets the player_load_time of this VideoView.


        :param player_load_time: The player_load_time of this VideoView.
        :type player_load_time: int
        """

        self._player_load_time = player_load_time

    @property
    def player_mux_plugin_name(self):
        """Gets the player_mux_plugin_name of this VideoView.


        :return: The player_mux_plugin_name of this VideoView.
        :rtype: str
        """
        return self._player_mux_plugin_name

    @player_mux_plugin_name.setter
    def player_mux_plugin_name(self, player_mux_plugin_name):
        """Sets the player_mux_plugin_name of this VideoView.


        :param player_mux_plugin_name: The player_mux_plugin_name of this VideoView.
        :type player_mux_plugin_name: str
        """

        self._player_mux_plugin_name = player_mux_plugin_name

    @property
    def player_mux_plugin_version(self):
        """Gets the player_mux_plugin_version of this VideoView.


        :return: The player_mux_plugin_version of this VideoView.
        :rtype: str
        """
        return self._player_mux_plugin_version

    @player_mux_plugin_version.setter
    def player_mux_plugin_version(self, player_mux_plugin_version):
        """Sets the player_mux_plugin_version of this VideoView.


        :param player_mux_plugin_version: The player_mux_plugin_version of this VideoView.
        :type player_mux_plugin_version: str
        """

        self._player_mux_plugin_version = player_mux_plugin_version

    @property
    def player_name(self):
        """Gets the player_name of this VideoView.


        :return: The player_name of this VideoView.
        :rtype: str
        """
        return self._player_name

    @player_name.setter
    def player_name(self, player_name):
        """Sets the player_name of this VideoView.


        :param player_name: The player_name of this VideoView.
        :type player_name: str
        """

        self._player_name = player_name

    @property
    def player_poster(self):
        """Gets the player_poster of this VideoView.


        :return: The player_poster of this VideoView.
        :rtype: str
        """
        return self._player_poster

    @player_poster.setter
    def player_poster(self, player_poster):
        """Sets the player_poster of this VideoView.


        :param player_poster: The player_poster of this VideoView.
        :type player_poster: str
        """

        self._player_poster = player_poster

    @property
    def player_preload(self):
        """Gets the player_preload of this VideoView.


        :return: The player_preload of this VideoView.
        :rtype: bool
        """
        return self._player_preload

    @player_preload.setter
    def player_preload(self, player_preload):
        """Sets the player_preload of this VideoView.


        :param player_preload: The player_preload of this VideoView.
        :type player_preload: bool
        """

        self._player_preload = player_preload

    @property
    def player_remote_played(self):
        """Gets the player_remote_played of this VideoView.


        :return: The player_remote_played of this VideoView.
        :rtype: bool
        """
        return self._player_remote_played

    @player_remote_played.setter
    def player_remote_played(self, player_remote_played):
        """Sets the player_remote_played of this VideoView.


        :param player_remote_played: The player_remote_played of this VideoView.
        :type player_remote_played: bool
        """

        self._player_remote_played = player_remote_played

    @property
    def player_software(self):
        """Gets the player_software of this VideoView.


        :return: The player_software of this VideoView.
        :rtype: str
        """
        return self._player_software

    @player_software.setter
    def player_software(self, player_software):
        """Sets the player_software of this VideoView.


        :param player_software: The player_software of this VideoView.
        :type player_software: str
        """

        self._player_software = player_software

    @property
    def player_software_version(self):
        """Gets the player_software_version of this VideoView.


        :return: The player_software_version of this VideoView.
        :rtype: str
        """
        return self._player_software_version

    @player_software_version.setter
    def player_software_version(self, player_software_version):
        """Sets the player_software_version of this VideoView.


        :param player_software_version: The player_software_version of this VideoView.
        :type player_software_version: str
        """

        self._player_software_version = player_software_version

    @property
    def player_source_domain(self):
        """Gets the player_source_domain of this VideoView.


        :return: The player_source_domain of this VideoView.
        :rtype: str
        """
        return self._player_source_domain

    @player_source_domain.setter
    def player_source_domain(self, player_source_domain):
        """Sets the player_source_domain of this VideoView.


        :param player_source_domain: The player_source_domain of this VideoView.
        :type player_source_domain: str
        """

        self._player_source_domain = player_source_domain

    @property
    def player_source_duration(self):
        """Gets the player_source_duration of this VideoView.


        :return: The player_source_duration of this VideoView.
        :rtype: int
        """
        return self._player_source_duration

    @player_source_duration.setter
    def player_source_duration(self, player_source_duration):
        """Sets the player_source_duration of this VideoView.


        :param player_source_duration: The player_source_duration of this VideoView.
        :type player_source_duration: int
        """

        self._player_source_duration = player_source_duration

    @property
    def player_source_height(self):
        """Gets the player_source_height of this VideoView.


        :return: The player_source_height of this VideoView.
        :rtype: int
        """
        return self._player_source_height

    @player_source_height.setter
    def player_source_height(self, player_source_height):
        """Sets the player_source_height of this VideoView.


        :param player_source_height: The player_source_height of this VideoView.
        :type player_source_height: int
        """

        self._player_source_height = player_source_height

    @property
    def player_source_host_name(self):
        """Gets the player_source_host_name of this VideoView.


        :return: The player_source_host_name of this VideoView.
        :rtype: str
        """
        return self._player_source_host_name

    @player_source_host_name.setter
    def player_source_host_name(self, player_source_host_name):
        """Sets the player_source_host_name of this VideoView.


        :param player_source_host_name: The player_source_host_name of this VideoView.
        :type player_source_host_name: str
        """

        self._player_source_host_name = player_source_host_name

    @property
    def player_source_stream_type(self):
        """Gets the player_source_stream_type of this VideoView.


        :return: The player_source_stream_type of this VideoView.
        :rtype: str
        """
        return self._player_source_stream_type

    @player_source_stream_type.setter
    def player_source_stream_type(self, player_source_stream_type):
        """Sets the player_source_stream_type of this VideoView.


        :param player_source_stream_type: The player_source_stream_type of this VideoView.
        :type player_source_stream_type: str
        """

        self._player_source_stream_type = player_source_stream_type

    @property
    def player_source_type(self):
        """Gets the player_source_type of this VideoView.


        :return: The player_source_type of this VideoView.
        :rtype: str
        """
        return self._player_source_type

    @player_source_type.setter
    def player_source_type(self, player_source_type):
        """Sets the player_source_type of this VideoView.


        :param player_source_type: The player_source_type of this VideoView.
        :type player_source_type: str
        """

        self._player_source_type = player_source_type

    @property
    def player_source_url(self):
        """Gets the player_source_url of this VideoView.


        :return: The player_source_url of this VideoView.
        :rtype: str
        """
        return self._player_source_url

    @player_source_url.setter
    def player_source_url(self, player_source_url):
        """Sets the player_source_url of this VideoView.


        :param player_source_url: The player_source_url of this VideoView.
        :type player_source_url: str
        """

        self._player_source_url = player_source_url

    @property
    def player_source_width(self):
        """Gets the player_source_width of this VideoView.


        :return: The player_source_width of this VideoView.
        :rtype: int
        """
        return self._player_source_width

    @player_source_width.setter
    def player_source_width(self, player_source_width):
        """Sets the player_source_width of this VideoView.


        :param player_source_width: The player_source_width of this VideoView.
        :type player_source_width: int
        """

        self._player_source_width = player_source_width

    @property
    def player_startup_time(self):
        """Gets the player_startup_time of this VideoView.


        :return: The player_startup_time of this VideoView.
        :rtype: int
        """
        return self._player_startup_time

    @player_startup_time.setter
    def player_startup_time(self, player_startup_time):
        """Sets the player_startup_time of this VideoView.


        :param player_startup_time: The player_startup_time of this VideoView.
        :type player_startup_time: int
        """

        self._player_startup_time = player_startup_time

    @property
    def player_version(self):
        """Gets the player_version of this VideoView.


        :return: The player_version of this VideoView.
        :rtype: str
        """
        return self._player_version

    @player_version.setter
    def player_version(self, player_version):
        """Sets the player_version of this VideoView.


        :param player_version: The player_version of this VideoView.
        :type player_version: str
        """

        self._player_version = player_version

    @property
    def player_view_count(self):
        """Gets the player_view_count of this VideoView.


        :return: The player_view_count of this VideoView.
        :rtype: int
        """
        return self._player_view_count

    @player_view_count.setter
    def player_view_count(self, player_view_count):
        """Sets the player_view_count of this VideoView.


        :param player_view_count: The player_view_count of this VideoView.
        :type player_view_count: int
        """

        self._player_view_count = player_view_count

    @property
    def player_width(self):
        """Gets the player_width of this VideoView.


        :return: The player_width of this VideoView.
        :rtype: int
        """
        return self._player_width

    @player_width.setter
    def player_width(self, player_width):
        """Sets the player_width of this VideoView.


        :param player_width: The player_width of this VideoView.
        :type player_width: int
        """

        self._player_width = player_width

    @property
    def preroll_ad_asset_hostname(self):
        """Gets the preroll_ad_asset_hostname of this VideoView.


        :return: The preroll_ad_asset_hostname of this VideoView.
        :rtype: str
        """
        return self._preroll_ad_asset_hostname

    @preroll_ad_asset_hostname.setter
    def preroll_ad_asset_hostname(self, preroll_ad_asset_hostname):
        """Sets the preroll_ad_asset_hostname of this VideoView.


        :param preroll_ad_asset_hostname: The preroll_ad_asset_hostname of this VideoView.
        :type preroll_ad_asset_hostname: str
        """

        self._preroll_ad_asset_hostname = preroll_ad_asset_hostname

    @property
    def preroll_ad_tag_hostname(self):
        """Gets the preroll_ad_tag_hostname of this VideoView.


        :return: The preroll_ad_tag_hostname of this VideoView.
        :rtype: str
        """
        return self._preroll_ad_tag_hostname

    @preroll_ad_tag_hostname.setter
    def preroll_ad_tag_hostname(self, preroll_ad_tag_hostname):
        """Sets the preroll_ad_tag_hostname of this VideoView.


        :param preroll_ad_tag_hostname: The preroll_ad_tag_hostname of this VideoView.
        :type preroll_ad_tag_hostname: str
        """

        self._preroll_ad_tag_hostname = preroll_ad_tag_hostname

    @property
    def preroll_played(self):
        """Gets the preroll_played of this VideoView.


        :return: The preroll_played of this VideoView.
        :rtype: bool
        """
        return self._preroll_played

    @preroll_played.setter
    def preroll_played(self, preroll_played):
        """Sets the preroll_played of this VideoView.


        :param preroll_played: The preroll_played of this VideoView.
        :type preroll_played: bool
        """

        self._preroll_played = preroll_played

    @property
    def preroll_requested(self):
        """Gets the preroll_requested of this VideoView.


        :return: The preroll_requested of this VideoView.
        :rtype: bool
        """
        return self._preroll_requested

    @preroll_requested.setter
    def preroll_requested(self, preroll_requested):
        """Sets the preroll_requested of this VideoView.


        :param preroll_requested: The preroll_requested of this VideoView.
        :type preroll_requested: bool
        """

        self._preroll_requested = preroll_requested

    @property
    def property_id(self):
        """Gets the property_id of this VideoView.


        :return: The property_id of this VideoView.
        :rtype: int
        """
        return self._property_id

    @property_id.setter
    def property_id(self, property_id):
        """Sets the property_id of this VideoView.


        :param property_id: The property_id of this VideoView.
        :type property_id: int
        """

        self._property_id = property_id

    @property
    def quality_score(self):
        """Gets the quality_score of this VideoView.


        :return: The quality_score of this VideoView.
        :rtype: str
        """
        return self._quality_score

    @quality_score.setter
    def quality_score(self, quality_score):
        """Sets the quality_score of this VideoView.


        :param quality_score: The quality_score of this VideoView.
        :type quality_score: str
        """

        self._quality_score = quality_score

    @property
    def rebuffer_percentage(self):
        """Gets the rebuffer_percentage of this VideoView.


        :return: The rebuffer_percentage of this VideoView.
        :rtype: str
        """
        return self._rebuffer_percentage

    @rebuffer_percentage.setter
    def rebuffer_percentage(self, rebuffer_percentage):
        """Sets the rebuffer_percentage of this VideoView.


        :param rebuffer_percentage: The rebuffer_percentage of this VideoView.
        :type rebuffer_percentage: str
        """

        self._rebuffer_percentage = rebuffer_percentage

    @property
    def rebuffering_score(self):
        """Gets the rebuffering_score of this VideoView.


        :return: The rebuffering_score of this VideoView.
        :rtype: str
        """
        return self._rebuffering_score

    @rebuffering_score.setter
    def rebuffering_score(self, rebuffering_score):
        """Sets the rebuffering_score of this VideoView.


        :param rebuffering_score: The rebuffering_score of this VideoView.
        :type rebuffering_score: str
        """

        self._rebuffering_score = rebuffering_score

    @property
    def region(self):
        """Gets the region of this VideoView.


        :return: The region of this VideoView.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this VideoView.


        :param region: The region of this VideoView.
        :type region: str
        """

        self._region = region

    @property
    def requests_for_first_preroll(self):
        """Gets the requests_for_first_preroll of this VideoView.


        :return: The requests_for_first_preroll of this VideoView.
        :rtype: int
        """
        return self._requests_for_first_preroll

    @requests_for_first_preroll.setter
    def requests_for_first_preroll(self, requests_for_first_preroll):
        """Sets the requests_for_first_preroll of this VideoView.


        :param requests_for_first_preroll: The requests_for_first_preroll of this VideoView.
        :type requests_for_first_preroll: int
        """

        self._requests_for_first_preroll = requests_for_first_preroll

    @property
    def session_id(self):
        """Gets the session_id of this VideoView.


        :return: The session_id of this VideoView.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id):
        """Sets the session_id of this VideoView.


        :param session_id: The session_id of this VideoView.
        :type session_id: str
        """

        self._session_id = session_id

    @property
    def short_time(self):
        """Gets the short_time of this VideoView.


        :return: The short_time of this VideoView.
        :rtype: str
        """
        return self._short_time

    @short_time.setter
    def short_time(self, short_time):
        """Sets the short_time of this VideoView.


        :param short_time: The short_time of this VideoView.
        :type short_time: str
        """

        self._short_time = short_time

    @property
    def startup_score(self):
        """Gets the startup_score of this VideoView.


        :return: The startup_score of this VideoView.
        :rtype: str
        """
        return self._startup_score

    @startup_score.setter
    def startup_score(self, startup_score):
        """Sets the startup_score of this VideoView.


        :param startup_score: The startup_score of this VideoView.
        :type startup_score: str
        """

        self._startup_score = startup_score

    @property
    def sub_property_id(self):
        """Gets the sub_property_id of this VideoView.


        :return: The sub_property_id of this VideoView.
        :rtype: str
        """
        return self._sub_property_id

    @sub_property_id.setter
    def sub_property_id(self, sub_property_id):
        """Sets the sub_property_id of this VideoView.


        :param sub_property_id: The sub_property_id of this VideoView.
        :type sub_property_id: str
        """

        self._sub_property_id = sub_property_id

    @property
    def time_to_first_frame(self):
        """Gets the time_to_first_frame of this VideoView.


        :return: The time_to_first_frame of this VideoView.
        :rtype: int
        """
        return self._time_to_first_frame

    @time_to_first_frame.setter
    def time_to_first_frame(self, time_to_first_frame):
        """Sets the time_to_first_frame of this VideoView.


        :param time_to_first_frame: The time_to_first_frame of this VideoView.
        :type time_to_first_frame: int
        """

        self._time_to_first_frame = time_to_first_frame

    @property
    def updated_at(self):
        """Gets the updated_at of this VideoView.


        :return: The updated_at of this VideoView.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this VideoView.


        :param updated_at: The updated_at of this VideoView.
        :type updated_at: str
        """

        self._updated_at = updated_at

    @property
    def used_fullscreen(self):
        """Gets the used_fullscreen of this VideoView.


        :return: The used_fullscreen of this VideoView.
        :rtype: bool
        """
        return self._used_fullscreen

    @used_fullscreen.setter
    def used_fullscreen(self, used_fullscreen):
        """Sets the used_fullscreen of this VideoView.


        :param used_fullscreen: The used_fullscreen of this VideoView.
        :type used_fullscreen: bool
        """

        self._used_fullscreen = used_fullscreen

    @property
    def video_content_type(self):
        """Gets the video_content_type of this VideoView.


        :return: The video_content_type of this VideoView.
        :rtype: str
        """
        return self._video_content_type

    @video_content_type.setter
    def video_content_type(self, video_content_type):
        """Sets the video_content_type of this VideoView.


        :param video_content_type: The video_content_type of this VideoView.
        :type video_content_type: str
        """

        self._video_content_type = video_content_type

    @property
    def video_duration(self):
        """Gets the video_duration of this VideoView.


        :return: The video_duration of this VideoView.
        :rtype: int
        """
        return self._video_duration

    @video_duration.setter
    def video_duration(self, video_duration):
        """Sets the video_duration of this VideoView.


        :param video_duration: The video_duration of this VideoView.
        :type video_duration: int
        """

        self._video_duration = video_duration

    @property
    def video_encoding_variant(self):
        """Gets the video_encoding_variant of this VideoView.


        :return: The video_encoding_variant of this VideoView.
        :rtype: str
        """
        return self._video_encoding_variant

    @video_encoding_variant.setter
    def video_encoding_variant(self, video_encoding_variant):
        """Sets the video_encoding_variant of this VideoView.


        :param video_encoding_variant: The video_encoding_variant of this VideoView.
        :type video_encoding_variant: str
        """

        self._video_encoding_variant = video_encoding_variant

    @property
    def video_id(self):
        """Gets the video_id of this VideoView.


        :return: The video_id of this VideoView.
        :rtype: str
        """
        return self._video_id

    @video_id.setter
    def video_id(self, video_id):
        """Sets the video_id of this VideoView.


        :param video_id: The video_id of this VideoView.
        :type video_id: str
        """

        self._video_id = video_id

    @property
    def video_language(self):
        """Gets the video_language of this VideoView.


        :return: The video_language of this VideoView.
        :rtype: str
        """
        return self._video_language

    @video_language.setter
    def video_language(self, video_language):
        """Sets the video_language of this VideoView.


        :param video_language: The video_language of this VideoView.
        :type video_language: str
        """

        self._video_language = video_language

    @property
    def video_producer(self):
        """Gets the video_producer of this VideoView.


        :return: The video_producer of this VideoView.
        :rtype: str
        """
        return self._video_producer

    @video_producer.setter
    def video_producer(self, video_producer):
        """Sets the video_producer of this VideoView.


        :param video_producer: The video_producer of this VideoView.
        :type video_producer: str
        """

        self._video_producer = video_producer

    @property
    def video_series(self):
        """Gets the video_series of this VideoView.


        :return: The video_series of this VideoView.
        :rtype: str
        """
        return self._video_series

    @video_series.setter
    def video_series(self, video_series):
        """Sets the video_series of this VideoView.


        :param video_series: The video_series of this VideoView.
        :type video_series: str
        """

        self._video_series = video_series

    @property
    def video_startup_failure(self):
        """Gets the video_startup_failure of this VideoView.


        :return: The video_startup_failure of this VideoView.
        :rtype: bool
        """
        return self._video_startup_failure

    @video_startup_failure.setter
    def video_startup_failure(self, video_startup_failure):
        """Sets the video_startup_failure of this VideoView.


        :param video_startup_failure: The video_startup_failure of this VideoView.
        :type video_startup_failure: bool
        """

        self._video_startup_failure = video_startup_failure

    @property
    def video_startup_preroll_load_time(self):
        """Gets the video_startup_preroll_load_time of this VideoView.


        :return: The video_startup_preroll_load_time of this VideoView.
        :rtype: int
        """
        return self._video_startup_preroll_load_time

    @video_startup_preroll_load_time.setter
    def video_startup_preroll_load_time(self, video_startup_preroll_load_time):
        """Sets the video_startup_preroll_load_time of this VideoView.


        :param video_startup_preroll_load_time: The video_startup_preroll_load_time of this VideoView.
        :type video_startup_preroll_load_time: int
        """

        self._video_startup_preroll_load_time = video_startup_preroll_load_time

    @property
    def video_startup_preroll_request_time(self):
        """Gets the video_startup_preroll_request_time of this VideoView.


        :return: The video_startup_preroll_request_time of this VideoView.
        :rtype: int
        """
        return self._video_startup_preroll_request_time

    @video_startup_preroll_request_time.setter
    def video_startup_preroll_request_time(self, video_startup_preroll_request_time):
        """Sets the video_startup_preroll_request_time of this VideoView.


        :param video_startup_preroll_request_time: The video_startup_preroll_request_time of this VideoView.
        :type video_startup_preroll_request_time: int
        """

        self._video_startup_preroll_request_time = video_startup_preroll_request_time

    @property
    def video_stream_type(self):
        """Gets the video_stream_type of this VideoView.


        :return: The video_stream_type of this VideoView.
        :rtype: str
        """
        return self._video_stream_type

    @video_stream_type.setter
    def video_stream_type(self, video_stream_type):
        """Sets the video_stream_type of this VideoView.


        :param video_stream_type: The video_stream_type of this VideoView.
        :type video_stream_type: str
        """

        self._video_stream_type = video_stream_type

    @property
    def video_title(self):
        """Gets the video_title of this VideoView.


        :return: The video_title of this VideoView.
        :rtype: str
        """
        return self._video_title

    @video_title.setter
    def video_title(self, video_title):
        """Sets the video_title of this VideoView.


        :param video_title: The video_title of this VideoView.
        :type video_title: str
        """

        self._video_title = video_title

    @property
    def video_variant_id(self):
        """Gets the video_variant_id of this VideoView.


        :return: The video_variant_id of this VideoView.
        :rtype: str
        """
        return self._video_variant_id

    @video_variant_id.setter
    def video_variant_id(self, video_variant_id):
        """Sets the video_variant_id of this VideoView.


        :param video_variant_id: The video_variant_id of this VideoView.
        :type video_variant_id: str
        """

        self._video_variant_id = video_variant_id

    @property
    def video_variant_name(self):
        """Gets the video_variant_name of this VideoView.


        :return: The video_variant_name of this VideoView.
        :rtype: str
        """
        return self._video_variant_name

    @video_variant_name.setter
    def video_variant_name(self, video_variant_name):
        """Sets the video_variant_name of this VideoView.


        :param video_variant_name: The video_variant_name of this VideoView.
        :type video_variant_name: str
        """

        self._video_variant_name = video_variant_name

    @property
    def view_average_request_latency(self):
        """Gets the view_average_request_latency of this VideoView.


        :return: The view_average_request_latency of this VideoView.
        :rtype: int
        """
        return self._view_average_request_latency

    @view_average_request_latency.setter
    def view_average_request_latency(self, view_average_request_latency):
        """Sets the view_average_request_latency of this VideoView.


        :param view_average_request_latency: The view_average_request_latency of this VideoView.
        :type view_average_request_latency: int
        """

        self._view_average_request_latency = view_average_request_latency

    @property
    def view_average_request_throughput(self):
        """Gets the view_average_request_throughput of this VideoView.


        :return: The view_average_request_throughput of this VideoView.
        :rtype: int
        """
        return self._view_average_request_throughput

    @view_average_request_throughput.setter
    def view_average_request_throughput(self, view_average_request_throughput):
        """Sets the view_average_request_throughput of this VideoView.


        :param view_average_request_throughput: The view_average_request_throughput of this VideoView.
        :type view_average_request_throughput: int
        """

        self._view_average_request_throughput = view_average_request_throughput

    @property
    def view_drm_type(self):
        """Gets the view_drm_type of this VideoView.


        :return: The view_drm_type of this VideoView.
        :rtype: str
        """
        return self._view_drm_type

    @view_drm_type.setter
    def view_drm_type(self, view_drm_type):
        """Sets the view_drm_type of this VideoView.


        :param view_drm_type: The view_drm_type of this VideoView.
        :type view_drm_type: str
        """

        self._view_drm_type = view_drm_type

    @property
    def view_dropped_frame_count(self):
        """Gets the view_dropped_frame_count of this VideoView.


        :return: The view_dropped_frame_count of this VideoView.
        :rtype: int
        """
        return self._view_dropped_frame_count

    @view_dropped_frame_count.setter
    def view_dropped_frame_count(self, view_dropped_frame_count):
        """Sets the view_dropped_frame_count of this VideoView.


        :param view_dropped_frame_count: The view_dropped_frame_count of this VideoView.
        :type view_dropped_frame_count: int
        """

        self._view_dropped_frame_count = view_dropped_frame_count

    @property
    def view_end(self):
        """Gets the view_end of this VideoView.


        :return: The view_end of this VideoView.
        :rtype: str
        """
        return self._view_end

    @view_end.setter
    def view_end(self, view_end):
        """Sets the view_end of this VideoView.


        :param view_end: The view_end of this VideoView.
        :type view_end: str
        """

        self._view_end = view_end

    @property
    def view_error_id(self):
        """Gets the view_error_id of this VideoView.


        :return: The view_error_id of this VideoView.
        :rtype: int
        """
        return self._view_error_id

    @view_error_id.setter
    def view_error_id(self, view_error_id):
        """Sets the view_error_id of this VideoView.


        :param view_error_id: The view_error_id of this VideoView.
        :type view_error_id: int
        """

        self._view_error_id = view_error_id

    @property
    def view_has_ad(self):
        """Gets the view_has_ad of this VideoView.


        :return: The view_has_ad of this VideoView.
        :rtype: bool
        """
        return self._view_has_ad

    @view_has_ad.setter
    def view_has_ad(self, view_has_ad):
        """Sets the view_has_ad of this VideoView.


        :param view_has_ad: The view_has_ad of this VideoView.
        :type view_has_ad: bool
        """

        self._view_has_ad = view_has_ad

    @property
    def view_id(self):
        """Gets the view_id of this VideoView.


        :return: The view_id of this VideoView.
        :rtype: str
        """
        return self._view_id

    @view_id.setter
    def view_id(self, view_id):
        """Sets the view_id of this VideoView.


        :param view_id: The view_id of this VideoView.
        :type view_id: str
        """

        self._view_id = view_id

    @property
    def view_max_downscale_percentage(self):
        """Gets the view_max_downscale_percentage of this VideoView.


        :return: The view_max_downscale_percentage of this VideoView.
        :rtype: str
        """
        return self._view_max_downscale_percentage

    @view_max_downscale_percentage.setter
    def view_max_downscale_percentage(self, view_max_downscale_percentage):
        """Sets the view_max_downscale_percentage of this VideoView.


        :param view_max_downscale_percentage: The view_max_downscale_percentage of this VideoView.
        :type view_max_downscale_percentage: str
        """

        self._view_max_downscale_percentage = view_max_downscale_percentage

    @property
    def view_max_playhead_position(self):
        """Gets the view_max_playhead_position of this VideoView.


        :return: The view_max_playhead_position of this VideoView.
        :rtype: str
        """
        return self._view_max_playhead_position

    @view_max_playhead_position.setter
    def view_max_playhead_position(self, view_max_playhead_position):
        """Sets the view_max_playhead_position of this VideoView.


        :param view_max_playhead_position: The view_max_playhead_position of this VideoView.
        :type view_max_playhead_position: str
        """

        self._view_max_playhead_position = view_max_playhead_position

    @property
    def view_max_request_latency(self):
        """Gets the view_max_request_latency of this VideoView.


        :return: The view_max_request_latency of this VideoView.
        :rtype: int
        """
        return self._view_max_request_latency

    @view_max_request_latency.setter
    def view_max_request_latency(self, view_max_request_latency):
        """Sets the view_max_request_latency of this VideoView.


        :param view_max_request_latency: The view_max_request_latency of this VideoView.
        :type view_max_request_latency: int
        """

        self._view_max_request_latency = view_max_request_latency

    @property
    def view_max_upscale_percentage(self):
        """Gets the view_max_upscale_percentage of this VideoView.


        :return: The view_max_upscale_percentage of this VideoView.
        :rtype: str
        """
        return self._view_max_upscale_percentage

    @view_max_upscale_percentage.setter
    def view_max_upscale_percentage(self, view_max_upscale_percentage):
        """Sets the view_max_upscale_percentage of this VideoView.


        :param view_max_upscale_percentage: The view_max_upscale_percentage of this VideoView.
        :type view_max_upscale_percentage: str
        """

        self._view_max_upscale_percentage = view_max_upscale_percentage

    @property
    def view_playing_time(self):
        """Gets the view_playing_time of this VideoView.


        :return: The view_playing_time of this VideoView.
        :rtype: str
        """
        return self._view_playing_time

    @view_playing_time.setter
    def view_playing_time(self, view_playing_time):
        """Sets the view_playing_time of this VideoView.


        :param view_playing_time: The view_playing_time of this VideoView.
        :type view_playing_time: str
        """

        self._view_playing_time = view_playing_time

    @property
    def view_seek_count(self):
        """Gets the view_seek_count of this VideoView.


        :return: The view_seek_count of this VideoView.
        :rtype: int
        """
        return self._view_seek_count

    @view_seek_count.setter
    def view_seek_count(self, view_seek_count):
        """Sets the view_seek_count of this VideoView.


        :param view_seek_count: The view_seek_count of this VideoView.
        :type view_seek_count: int
        """

        self._view_seek_count = view_seek_count

    @property
    def view_seek_duration(self):
        """Gets the view_seek_duration of this VideoView.


        :return: The view_seek_duration of this VideoView.
        :rtype: int
        """
        return self._view_seek_duration

    @view_seek_duration.setter
    def view_seek_duration(self, view_seek_duration):
        """Sets the view_seek_duration of this VideoView.


        :param view_seek_duration: The view_seek_duration of this VideoView.
        :type view_seek_duration: int
        """

        self._view_seek_duration = view_seek_duration

    @property
    def view_session_id(self):
        """Gets the view_session_id of this VideoView.


        :return: The view_session_id of this VideoView.
        :rtype: str
        """
        return self._view_session_id

    @view_session_id.setter
    def view_session_id(self, view_session_id):
        """Sets the view_session_id of this VideoView.


        :param view_session_id: The view_session_id of this VideoView.
        :type view_session_id: str
        """

        self._view_session_id = view_session_id

    @property
    def view_start(self):
        """Gets the view_start of this VideoView.


        :return: The view_start of this VideoView.
        :rtype: str
        """
        return self._view_start

    @view_start.setter
    def view_start(self, view_start):
        """Sets the view_start of this VideoView.


        :param view_start: The view_start of this VideoView.
        :type view_start: str
        """

        self._view_start = view_start

    @property
    def view_total_content_playback_time(self):
        """Gets the view_total_content_playback_time of this VideoView.


        :return: The view_total_content_playback_time of this VideoView.
        :rtype: int
        """
        return self._view_total_content_playback_time

    @view_total_content_playback_time.setter
    def view_total_content_playback_time(self, view_total_content_playback_time):
        """Sets the view_total_content_playback_time of this VideoView.


        :param view_total_content_playback_time: The view_total_content_playback_time of this VideoView.
        :type view_total_content_playback_time: int
        """

        self._view_total_content_playback_time = view_total_content_playback_time

    @property
    def view_total_downscaling(self):
        """Gets the view_total_downscaling of this VideoView.


        :return: The view_total_downscaling of this VideoView.
        :rtype: str
        """
        return self._view_total_downscaling

    @view_total_downscaling.setter
    def view_total_downscaling(self, view_total_downscaling):
        """Sets the view_total_downscaling of this VideoView.


        :param view_total_downscaling: The view_total_downscaling of this VideoView.
        :type view_total_downscaling: str
        """

        self._view_total_downscaling = view_total_downscaling

    @property
    def view_total_upscaling(self):
        """Gets the view_total_upscaling of this VideoView.


        :return: The view_total_upscaling of this VideoView.
        :rtype: str
        """
        return self._view_total_upscaling

    @view_total_upscaling.setter
    def view_total_upscaling(self, view_total_upscaling):
        """Sets the view_total_upscaling of this VideoView.


        :param view_total_upscaling: The view_total_upscaling of this VideoView.
        :type view_total_upscaling: str
        """

        self._view_total_upscaling = view_total_upscaling

    @property
    def viewer_application_engine(self):
        """Gets the viewer_application_engine of this VideoView.


        :return: The viewer_application_engine of this VideoView.
        :rtype: str
        """
        return self._viewer_application_engine

    @viewer_application_engine.setter
    def viewer_application_engine(self, viewer_application_engine):
        """Sets the viewer_application_engine of this VideoView.


        :param viewer_application_engine: The viewer_application_engine of this VideoView.
        :type viewer_application_engine: str
        """

        self._viewer_application_engine = viewer_application_engine

    @property
    def viewer_application_name(self):
        """Gets the viewer_application_name of this VideoView.


        :return: The viewer_application_name of this VideoView.
        :rtype: str
        """
        return self._viewer_application_name

    @viewer_application_name.setter
    def viewer_application_name(self, viewer_application_name):
        """Sets the viewer_application_name of this VideoView.


        :param viewer_application_name: The viewer_application_name of this VideoView.
        :type viewer_application_name: str
        """

        self._viewer_application_name = viewer_application_name

    @property
    def viewer_application_version(self):
        """Gets the viewer_application_version of this VideoView.


        :return: The viewer_application_version of this VideoView.
        :rtype: str
        """
        return self._viewer_application_version

    @viewer_application_version.setter
    def viewer_application_version(self, viewer_application_version):
        """Sets the viewer_application_version of this VideoView.


        :param viewer_application_version: The viewer_application_version of this VideoView.
        :type viewer_application_version: str
        """

        self._viewer_application_version = viewer_application_version

    @property
    def viewer_connection_type(self):
        """Gets the viewer_connection_type of this VideoView.


        :return: The viewer_connection_type of this VideoView.
        :rtype: str
        """
        return self._viewer_connection_type

    @viewer_connection_type.setter
    def viewer_connection_type(self, viewer_connection_type):
        """Sets the viewer_connection_type of this VideoView.


        :param viewer_connection_type: The viewer_connection_type of this VideoView.
        :type viewer_connection_type: str
        """

        self._viewer_connection_type = viewer_connection_type

    @property
    def viewer_device_category(self):
        """Gets the viewer_device_category of this VideoView.


        :return: The viewer_device_category of this VideoView.
        :rtype: str
        """
        return self._viewer_device_category

    @viewer_device_category.setter
    def viewer_device_category(self, viewer_device_category):
        """Sets the viewer_device_category of this VideoView.


        :param viewer_device_category: The viewer_device_category of this VideoView.
        :type viewer_device_category: str
        """

        self._viewer_device_category = viewer_device_category

    @property
    def viewer_device_manufacturer(self):
        """Gets the viewer_device_manufacturer of this VideoView.


        :return: The viewer_device_manufacturer of this VideoView.
        :rtype: str
        """
        return self._viewer_device_manufacturer

    @viewer_device_manufacturer.setter
    def viewer_device_manufacturer(self, viewer_device_manufacturer):
        """Sets the viewer_device_manufacturer of this VideoView.


        :param viewer_device_manufacturer: The viewer_device_manufacturer of this VideoView.
        :type viewer_device_manufacturer: str
        """

        self._viewer_device_manufacturer = viewer_device_manufacturer

    @property
    def viewer_device_model(self):
        """Gets the viewer_device_model of this VideoView.


        :return: The viewer_device_model of this VideoView.
        :rtype: str
        """
        return self._viewer_device_model

    @viewer_device_model.setter
    def viewer_device_model(self, viewer_device_model):
        """Sets the viewer_device_model of this VideoView.


        :param viewer_device_model: The viewer_device_model of this VideoView.
        :type viewer_device_model: str
        """

        self._viewer_device_model = viewer_device_model

    @property
    def viewer_device_name(self):
        """Gets the viewer_device_name of this VideoView.


        :return: The viewer_device_name of this VideoView.
        :rtype: str
        """
        return self._viewer_device_name

    @viewer_device_name.setter
    def viewer_device_name(self, viewer_device_name):
        """Sets the viewer_device_name of this VideoView.


        :param viewer_device_name: The viewer_device_name of this VideoView.
        :type viewer_device_name: str
        """

        self._viewer_device_name = viewer_device_name

    @property
    def viewer_experience_score(self):
        """Gets the viewer_experience_score of this VideoView.


        :return: The viewer_experience_score of this VideoView.
        :rtype: str
        """
        return self._viewer_experience_score

    @viewer_experience_score.setter
    def viewer_experience_score(self, viewer_experience_score):
        """Sets the viewer_experience_score of this VideoView.


        :param viewer_experience_score: The viewer_experience_score of this VideoView.
        :type viewer_experience_score: str
        """

        self._viewer_experience_score = viewer_experience_score

    @property
    def viewer_os_architecture(self):
        """Gets the viewer_os_architecture of this VideoView.


        :return: The viewer_os_architecture of this VideoView.
        :rtype: str
        """
        return self._viewer_os_architecture

    @viewer_os_architecture.setter
    def viewer_os_architecture(self, viewer_os_architecture):
        """Sets the viewer_os_architecture of this VideoView.


        :param viewer_os_architecture: The viewer_os_architecture of this VideoView.
        :type viewer_os_architecture: str
        """

        self._viewer_os_architecture = viewer_os_architecture

    @property
    def viewer_os_family(self):
        """Gets the viewer_os_family of this VideoView.


        :return: The viewer_os_family of this VideoView.
        :rtype: str
        """
        return self._viewer_os_family

    @viewer_os_family.setter
    def viewer_os_family(self, viewer_os_family):
        """Sets the viewer_os_family of this VideoView.


        :param viewer_os_family: The viewer_os_family of this VideoView.
        :type viewer_os_family: str
        """

        self._viewer_os_family = viewer_os_family

    @property
    def viewer_os_version(self):
        """Gets the viewer_os_version of this VideoView.


        :return: The viewer_os_version of this VideoView.
        :rtype: str
        """
        return self._viewer_os_version

    @viewer_os_version.setter
    def viewer_os_version(self, viewer_os_version):
        """Sets the viewer_os_version of this VideoView.


        :param viewer_os_version: The viewer_os_version of this VideoView.
        :type viewer_os_version: str
        """

        self._viewer_os_version = viewer_os_version

    @property
    def viewer_user_agent(self):
        """Gets the viewer_user_agent of this VideoView.


        :return: The viewer_user_agent of this VideoView.
        :rtype: str
        """
        return self._viewer_user_agent

    @viewer_user_agent.setter
    def viewer_user_agent(self, viewer_user_agent):
        """Sets the viewer_user_agent of this VideoView.


        :param viewer_user_agent: The viewer_user_agent of this VideoView.
        :type viewer_user_agent: str
        """

        self._viewer_user_agent = viewer_user_agent

    @property
    def viewer_user_id(self):
        """Gets the viewer_user_id of this VideoView.


        :return: The viewer_user_id of this VideoView.
        :rtype: str
        """
        return self._viewer_user_id

    @viewer_user_id.setter
    def viewer_user_id(self, viewer_user_id):
        """Sets the viewer_user_id of this VideoView.


        :param viewer_user_id: The viewer_user_id of this VideoView.
        :type viewer_user_id: str
        """

        self._viewer_user_id = viewer_user_id

    @property
    def watch_time(self):
        """Gets the watch_time of this VideoView.


        :return: The watch_time of this VideoView.
        :rtype: int
        """
        return self._watch_time

    @watch_time.setter
    def watch_time(self, watch_time):
        """Sets the watch_time of this VideoView.


        :param watch_time: The watch_time of this VideoView.
        :type watch_time: int
        """

        self._watch_time = watch_time

    @property
    def watched(self):
        """Gets the watched of this VideoView.


        :return: The watched of this VideoView.
        :rtype: bool
        """
        return self._watched

    @watched.setter
    def watched(self, watched):
        """Sets the watched of this VideoView.


        :param watched: The watched of this VideoView.
        :type watched: bool
        """

        self._watched = watched

    @property
    def weighted_average_bitrate(self):
        """Gets the weighted_average_bitrate of this VideoView.


        :return: The weighted_average_bitrate of this VideoView.
        :rtype: int
        """
        return self._weighted_average_bitrate

    @weighted_average_bitrate.setter
    def weighted_average_bitrate(self, weighted_average_bitrate):
        """Sets the weighted_average_bitrate of this VideoView.


        :param weighted_average_bitrate: The weighted_average_bitrate of this VideoView.
        :type weighted_average_bitrate: int
        """

        self._weighted_average_bitrate = weighted_average_bitrate
