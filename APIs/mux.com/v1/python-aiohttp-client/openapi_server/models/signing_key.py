# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SigningKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: str=None, id: str=None, private_key: str=None):
        """SigningKey - a model defined in OpenAPI

        :param created_at: The created_at of this SigningKey.
        :param id: The id of this SigningKey.
        :param private_key: The private_key of this SigningKey.
        """
        self.openapi_types = {
            'created_at': str,
            'id': str,
            'private_key': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'id': 'id',
            'private_key': 'private_key'
        }

        self._created_at = created_at
        self._id = id
        self._private_key = private_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SigningKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SigningKey of this SigningKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this SigningKey.

        Time at which the object was created. Measured in seconds since the Unix epoch.

        :return: The created_at of this SigningKey.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this SigningKey.

        Time at which the object was created. Measured in seconds since the Unix epoch.

        :param created_at: The created_at of this SigningKey.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def id(self):
        """Gets the id of this SigningKey.

        Unique identifier for the Signing Key.

        :return: The id of this SigningKey.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SigningKey.

        Unique identifier for the Signing Key.

        :param id: The id of this SigningKey.
        :type id: str
        """

        self._id = id

    @property
    def private_key(self):
        """Gets the private_key of this SigningKey.

        A Base64 encoded private key that can be used with the RS256 algorithm when creating a [JWT](https://jwt.io/). **Note that this value is only returned once when creating a URL signing key.**

        :return: The private_key of this SigningKey.
        :rtype: str
        """
        return self._private_key

    @private_key.setter
    def private_key(self, private_key):
        """Sets the private_key of this SigningKey.

        A Base64 encoded private key that can be used with the RS256 algorithm when creating a [JWT](https://jwt.io/). **Note that this value is only returned once when creating a URL signing key.**

        :param private_key: The private_key of this SigningKey.
        :type private_key: str
        """

        self._private_key = private_key
