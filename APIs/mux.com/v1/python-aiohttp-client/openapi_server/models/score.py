# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.metric import Metric
from openapi_server import util


class Score(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, items: List[Metric]=None, metric: str=None, name: str=None, value: float=None, view_count: int=None, watch_time: int=None):
        """Score - a model defined in OpenAPI

        :param items: The items of this Score.
        :param metric: The metric of this Score.
        :param name: The name of this Score.
        :param value: The value of this Score.
        :param view_count: The view_count of this Score.
        :param watch_time: The watch_time of this Score.
        """
        self.openapi_types = {
            'items': List[Metric],
            'metric': str,
            'name': str,
            'value': float,
            'view_count': int,
            'watch_time': int
        }

        self.attribute_map = {
            'items': 'items',
            'metric': 'metric',
            'name': 'name',
            'value': 'value',
            'view_count': 'view_count',
            'watch_time': 'watch_time'
        }

        self._items = items
        self._metric = metric
        self._name = name
        self._value = value
        self._view_count = view_count
        self._watch_time = watch_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Score':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Score of this Score.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def items(self):
        """Gets the items of this Score.


        :return: The items of this Score.
        :rtype: List[Metric]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this Score.


        :param items: The items of this Score.
        :type items: List[Metric]
        """

        self._items = items

    @property
    def metric(self):
        """Gets the metric of this Score.


        :return: The metric of this Score.
        :rtype: str
        """
        return self._metric

    @metric.setter
    def metric(self, metric):
        """Sets the metric of this Score.


        :param metric: The metric of this Score.
        :type metric: str
        """

        self._metric = metric

    @property
    def name(self):
        """Gets the name of this Score.


        :return: The name of this Score.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Score.


        :param name: The name of this Score.
        :type name: str
        """

        self._name = name

    @property
    def value(self):
        """Gets the value of this Score.


        :return: The value of this Score.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this Score.


        :param value: The value of this Score.
        :type value: float
        """

        self._value = value

    @property
    def view_count(self):
        """Gets the view_count of this Score.


        :return: The view_count of this Score.
        :rtype: int
        """
        return self._view_count

    @view_count.setter
    def view_count(self, view_count):
        """Sets the view_count of this Score.


        :param view_count: The view_count of this Score.
        :type view_count: int
        """

        self._view_count = view_count

    @property
    def watch_time(self):
        """Gets the watch_time of this Score.


        :return: The watch_time of this Score.
        :rtype: int
        """
        return self._watch_time

    @watch_time.setter
    def watch_time(self, watch_time):
        """Sets the watch_time of this Score.


        :param watch_time: The watch_time of this Score.
        :type watch_time: int
        """

        self._watch_time = watch_time
