/*
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ListDimensionValuesResponse;
import org.openapitools.client.model.ListDimensionsResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DimensionsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public DimensionsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DimensionsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    private okhttp3.Call listDimensionValuesCall(String DIMENSION_ID, Integer limit, Integer page, List<String> filters, List<String> timeframe, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/data/v1/dimensions/{DIMENSION_ID}"
            .replace("{" + "DIMENSION_ID" + "}", localVarApiClient.escapeString(DIMENSION_ID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (filters != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "filters[]", filters));
        }

        if (timeframe != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "timeframe[]", timeframe));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accessToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listDimensionValuesValidateBeforeCall(String DIMENSION_ID, Integer limit, Integer page, List<String> filters, List<String> timeframe, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'DIMENSION_ID' is set
        if (DIMENSION_ID == null) {
            throw new ApiException("Missing the required parameter 'DIMENSION_ID' when calling listDimensionValues(Async)");
        }

        return listDimensionValuesCall(DIMENSION_ID, limit, page, filters, timeframe, _callback);

    }


    private ApiResponse<ListDimensionValuesResponse> listDimensionValuesWithHttpInfo(String DIMENSION_ID, Integer limit, Integer page, List<String> filters, List<String> timeframe) throws ApiException {
        okhttp3.Call localVarCall = listDimensionValuesValidateBeforeCall(DIMENSION_ID, limit, page, filters, timeframe, null);
        Type localVarReturnType = new TypeToken<ListDimensionValuesResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call listDimensionValuesAsync(String DIMENSION_ID, Integer limit, Integer page, List<String> filters, List<String> timeframe, final ApiCallback<ListDimensionValuesResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = listDimensionValuesValidateBeforeCall(DIMENSION_ID, limit, page, filters, timeframe, _callback);
        Type localVarReturnType = new TypeToken<ListDimensionValuesResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class APIlistDimensionValuesRequest {
        private final String DIMENSION_ID;
        private Integer limit;
        private Integer page;
        private List<String> filters;
        private List<String> timeframe;

        private APIlistDimensionValuesRequest(String DIMENSION_ID) {
            this.DIMENSION_ID = DIMENSION_ID;
        }

        /**
         * Set limit
         * @param limit Number of items to include in the response (optional, default to 25)
         * @return APIlistDimensionValuesRequest
         */
        public APIlistDimensionValuesRequest limit(Integer limit) {
            this.limit = limit;
            return this;
        }

        /**
         * Set page
         * @param page Offset by this many pages, of the size of &#x60;limit&#x60; (optional, default to 1)
         * @return APIlistDimensionValuesRequest
         */
        public APIlistDimensionValuesRequest page(Integer page) {
            this.page = page;
            return this;
        }

        /**
         * Set filters
         * @param filters Limit the results to rows that match conditions from provided key:value pairs. Must be provided as an array query string parameter.  To exclude rows that match a certain condition, prepend a &#x60;!&#x60; character to the dimension.  Possible filter names are the same as returned by the List Filters endpoint.  Example:    * &#x60;filters[]&#x3D;operating_system:windows&amp;filters[]&#x3D;!country:US&#x60;  (optional)
         * @return APIlistDimensionValuesRequest
         */
        public APIlistDimensionValuesRequest filters(List<String> filters) {
            this.filters = filters;
            return this;
        }

        /**
         * Set timeframe
         * @param timeframe Timeframe window to limit results by. Must be provided as an array query string parameter (e.g. timeframe[]&#x3D;).  Accepted formats are...    * array of epoch timestamps e.g. &#x60;timeframe[]&#x3D;1498867200&amp;timeframe[]&#x3D;1498953600&#x60;   * duration string e.g. &#x60;timeframe[]&#x3D;24:hours or timeframe[]&#x3D;7:days&#x60;  (optional)
         * @return APIlistDimensionValuesRequest
         */
        public APIlistDimensionValuesRequest timeframe(List<String> timeframe) {
            this.timeframe = timeframe;
            return this;
        }

        /**
         * Build call for listDimensionValues
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return listDimensionValuesCall(DIMENSION_ID, limit, page, filters, timeframe, _callback);
        }

        /**
         * Execute listDimensionValues request
         * @return ListDimensionValuesResponse
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
         </table>
         */
        public ListDimensionValuesResponse execute() throws ApiException {
            ApiResponse<ListDimensionValuesResponse> localVarResp = listDimensionValuesWithHttpInfo(DIMENSION_ID, limit, page, filters, timeframe);
            return localVarResp.getData();
        }

        /**
         * Execute listDimensionValues request with HTTP info returned
         * @return ApiResponse&lt;ListDimensionValuesResponse&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<ListDimensionValuesResponse> executeWithHttpInfo() throws ApiException {
            return listDimensionValuesWithHttpInfo(DIMENSION_ID, limit, page, filters, timeframe);
        }

        /**
         * Execute listDimensionValues request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<ListDimensionValuesResponse> _callback) throws ApiException {
            return listDimensionValuesAsync(DIMENSION_ID, limit, page, filters, timeframe, _callback);
        }
    }

    /**
     * Lists the values for a specific dimension
     * Lists the values for a dimension along with a total count of related views.  Note: This API replaces the list-filter-values API call. 
     * @param DIMENSION_ID ID of the Dimension (required)
     * @return APIlistDimensionValuesRequest
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public APIlistDimensionValuesRequest listDimensionValues(String DIMENSION_ID) {
        return new APIlistDimensionValuesRequest(DIMENSION_ID);
    }
    private okhttp3.Call listDimensionsCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/data/v1/dimensions";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accessToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listDimensionsValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return listDimensionsCall(_callback);

    }


    private ApiResponse<ListDimensionsResponse> listDimensionsWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = listDimensionsValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<ListDimensionsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call listDimensionsAsync(final ApiCallback<ListDimensionsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = listDimensionsValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<ListDimensionsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class APIlistDimensionsRequest {

        private APIlistDimensionsRequest() {
        }

        /**
         * Build call for listDimensions
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return listDimensionsCall(_callback);
        }

        /**
         * Execute listDimensions request
         * @return ListDimensionsResponse
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
         </table>
         */
        public ListDimensionsResponse execute() throws ApiException {
            ApiResponse<ListDimensionsResponse> localVarResp = listDimensionsWithHttpInfo();
            return localVarResp.getData();
        }

        /**
         * Execute listDimensions request with HTTP info returned
         * @return ApiResponse&lt;ListDimensionsResponse&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<ListDimensionsResponse> executeWithHttpInfo() throws ApiException {
            return listDimensionsWithHttpInfo();
        }

        /**
         * Execute listDimensions request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<ListDimensionsResponse> _callback) throws ApiException {
            return listDimensionsAsync(_callback);
        }
    }

    /**
     * List Dimensions
     * List all available dimensions.  Note: This API replaces the list-filters API call. 
     * @return APIlistDimensionsRequest
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public APIlistDimensionsRequest listDimensions() {
        return new APIlistDimensionsRequest();
    }
}
