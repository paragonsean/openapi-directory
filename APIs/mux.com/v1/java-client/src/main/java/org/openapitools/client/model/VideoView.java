/*
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.VideoViewEvent;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * VideoView
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:54:45.471488-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VideoView {
  public static final String SERIALIZED_NAME_ASN = "asn";
  @SerializedName(SERIALIZED_NAME_ASN)
  private Long asn;

  public static final String SERIALIZED_NAME_ASN_NAME = "asn_name";
  @SerializedName(SERIALIZED_NAME_ASN_NAME)
  private String asnName;

  public static final String SERIALIZED_NAME_ASSET_ID = "asset_id";
  @SerializedName(SERIALIZED_NAME_ASSET_ID)
  private String assetId;

  public static final String SERIALIZED_NAME_BUFFERING_COUNT = "buffering_count";
  @SerializedName(SERIALIZED_NAME_BUFFERING_COUNT)
  private Long bufferingCount;

  public static final String SERIALIZED_NAME_BUFFERING_DURATION = "buffering_duration";
  @SerializedName(SERIALIZED_NAME_BUFFERING_DURATION)
  private Long bufferingDuration;

  public static final String SERIALIZED_NAME_BUFFERING_RATE = "buffering_rate";
  @SerializedName(SERIALIZED_NAME_BUFFERING_RATE)
  private String bufferingRate;

  public static final String SERIALIZED_NAME_CDN = "cdn";
  @SerializedName(SERIALIZED_NAME_CDN)
  private String cdn;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_CONTINENT_CODE = "continent_code";
  @SerializedName(SERIALIZED_NAME_CONTINENT_CODE)
  private String continentCode;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "country_code";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_COUNTRY_NAME = "country_name";
  @SerializedName(SERIALIZED_NAME_COUNTRY_NAME)
  private String countryName;

  public static final String SERIALIZED_NAME_CUSTOM1 = "custom_1";
  @SerializedName(SERIALIZED_NAME_CUSTOM1)
  private String custom1;

  public static final String SERIALIZED_NAME_CUSTOM10 = "custom_10";
  @SerializedName(SERIALIZED_NAME_CUSTOM10)
  private String custom10;

  public static final String SERIALIZED_NAME_CUSTOM2 = "custom_2";
  @SerializedName(SERIALIZED_NAME_CUSTOM2)
  private String custom2;

  public static final String SERIALIZED_NAME_CUSTOM3 = "custom_3";
  @SerializedName(SERIALIZED_NAME_CUSTOM3)
  private String custom3;

  public static final String SERIALIZED_NAME_CUSTOM4 = "custom_4";
  @SerializedName(SERIALIZED_NAME_CUSTOM4)
  private String custom4;

  public static final String SERIALIZED_NAME_CUSTOM5 = "custom_5";
  @SerializedName(SERIALIZED_NAME_CUSTOM5)
  private String custom5;

  public static final String SERIALIZED_NAME_CUSTOM6 = "custom_6";
  @SerializedName(SERIALIZED_NAME_CUSTOM6)
  private String custom6;

  public static final String SERIALIZED_NAME_CUSTOM7 = "custom_7";
  @SerializedName(SERIALIZED_NAME_CUSTOM7)
  private String custom7;

  public static final String SERIALIZED_NAME_CUSTOM8 = "custom_8";
  @SerializedName(SERIALIZED_NAME_CUSTOM8)
  private String custom8;

  public static final String SERIALIZED_NAME_CUSTOM9 = "custom_9";
  @SerializedName(SERIALIZED_NAME_CUSTOM9)
  private String custom9;

  public static final String SERIALIZED_NAME_ENVIRONMENT_ID = "environment_id";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_ID)
  private String environmentId;

  public static final String SERIALIZED_NAME_ERROR_TYPE_ID = "error_type_id";
  @SerializedName(SERIALIZED_NAME_ERROR_TYPE_ID)
  private Integer errorTypeId;

  public static final String SERIALIZED_NAME_EVENTS = "events";
  @SerializedName(SERIALIZED_NAME_EVENTS)
  private List<VideoViewEvent> events = new ArrayList<>();

  public static final String SERIALIZED_NAME_EXIT_BEFORE_VIDEO_START = "exit_before_video_start";
  @SerializedName(SERIALIZED_NAME_EXIT_BEFORE_VIDEO_START)
  private Boolean exitBeforeVideoStart;

  public static final String SERIALIZED_NAME_EXPERIMENT_NAME = "experiment_name";
  @SerializedName(SERIALIZED_NAME_EXPERIMENT_NAME)
  private String experimentName;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_INSERTED_AT = "inserted_at";
  @SerializedName(SERIALIZED_NAME_INSERTED_AT)
  private String insertedAt;

  public static final String SERIALIZED_NAME_ISP = "isp";
  @SerializedName(SERIALIZED_NAME_ISP)
  private String isp;

  public static final String SERIALIZED_NAME_LATITUDE = "latitude";
  @SerializedName(SERIALIZED_NAME_LATITUDE)
  private String latitude;

  public static final String SERIALIZED_NAME_LIVE_STREAM_ID = "live_stream_id";
  @SerializedName(SERIALIZED_NAME_LIVE_STREAM_ID)
  private String liveStreamId;

  public static final String SERIALIZED_NAME_LIVE_STREAM_LATENCY = "live_stream_latency";
  @SerializedName(SERIALIZED_NAME_LIVE_STREAM_LATENCY)
  private Long liveStreamLatency;

  public static final String SERIALIZED_NAME_LONGITUDE = "longitude";
  @SerializedName(SERIALIZED_NAME_LONGITUDE)
  private String longitude;

  public static final String SERIALIZED_NAME_METRO = "metro";
  @SerializedName(SERIALIZED_NAME_METRO)
  private String metro;

  public static final String SERIALIZED_NAME_MUX_API_VERSION = "mux_api_version";
  @SerializedName(SERIALIZED_NAME_MUX_API_VERSION)
  private String muxApiVersion;

  public static final String SERIALIZED_NAME_MUX_EMBED = "mux_embed";
  @SerializedName(SERIALIZED_NAME_MUX_EMBED)
  private String muxEmbed;

  public static final String SERIALIZED_NAME_MUX_EMBED_VERSION = "mux_embed_version";
  @SerializedName(SERIALIZED_NAME_MUX_EMBED_VERSION)
  private String muxEmbedVersion;

  public static final String SERIALIZED_NAME_MUX_VIEWER_ID = "mux_viewer_id";
  @SerializedName(SERIALIZED_NAME_MUX_VIEWER_ID)
  private String muxViewerId;

  public static final String SERIALIZED_NAME_PAGE_LOAD_TIME = "page_load_time";
  @SerializedName(SERIALIZED_NAME_PAGE_LOAD_TIME)
  private Long pageLoadTime;

  public static final String SERIALIZED_NAME_PAGE_TYPE = "page_type";
  @SerializedName(SERIALIZED_NAME_PAGE_TYPE)
  private String pageType;

  public static final String SERIALIZED_NAME_PAGE_URL = "page_url";
  @SerializedName(SERIALIZED_NAME_PAGE_URL)
  private String pageUrl;

  public static final String SERIALIZED_NAME_PLATFORM_DESCRIPTION = "platform_description";
  @SerializedName(SERIALIZED_NAME_PLATFORM_DESCRIPTION)
  private String platformDescription;

  public static final String SERIALIZED_NAME_PLATFORM_SUMMARY = "platform_summary";
  @SerializedName(SERIALIZED_NAME_PLATFORM_SUMMARY)
  private String platformSummary;

  public static final String SERIALIZED_NAME_PLAYBACK_ID = "playback_id";
  @SerializedName(SERIALIZED_NAME_PLAYBACK_ID)
  private String playbackId;

  public static final String SERIALIZED_NAME_PLAYBACK_SCORE = "playback_score";
  @SerializedName(SERIALIZED_NAME_PLAYBACK_SCORE)
  private String playbackScore;

  public static final String SERIALIZED_NAME_PLAYER_AUTOPLAY = "player_autoplay";
  @SerializedName(SERIALIZED_NAME_PLAYER_AUTOPLAY)
  private Boolean playerAutoplay;

  public static final String SERIALIZED_NAME_PLAYER_ERROR_CODE = "player_error_code";
  @SerializedName(SERIALIZED_NAME_PLAYER_ERROR_CODE)
  private String playerErrorCode;

  public static final String SERIALIZED_NAME_PLAYER_ERROR_CONTEXT = "player_error_context";
  @SerializedName(SERIALIZED_NAME_PLAYER_ERROR_CONTEXT)
  private String playerErrorContext;

  public static final String SERIALIZED_NAME_PLAYER_ERROR_MESSAGE = "player_error_message";
  @SerializedName(SERIALIZED_NAME_PLAYER_ERROR_MESSAGE)
  private String playerErrorMessage;

  public static final String SERIALIZED_NAME_PLAYER_HEIGHT = "player_height";
  @SerializedName(SERIALIZED_NAME_PLAYER_HEIGHT)
  private Integer playerHeight;

  public static final String SERIALIZED_NAME_PLAYER_INSTANCE_ID = "player_instance_id";
  @SerializedName(SERIALIZED_NAME_PLAYER_INSTANCE_ID)
  private String playerInstanceId;

  public static final String SERIALIZED_NAME_PLAYER_LANGUAGE = "player_language";
  @SerializedName(SERIALIZED_NAME_PLAYER_LANGUAGE)
  private String playerLanguage;

  public static final String SERIALIZED_NAME_PLAYER_LOAD_TIME = "player_load_time";
  @SerializedName(SERIALIZED_NAME_PLAYER_LOAD_TIME)
  private Long playerLoadTime;

  public static final String SERIALIZED_NAME_PLAYER_MUX_PLUGIN_NAME = "player_mux_plugin_name";
  @SerializedName(SERIALIZED_NAME_PLAYER_MUX_PLUGIN_NAME)
  private String playerMuxPluginName;

  public static final String SERIALIZED_NAME_PLAYER_MUX_PLUGIN_VERSION = "player_mux_plugin_version";
  @SerializedName(SERIALIZED_NAME_PLAYER_MUX_PLUGIN_VERSION)
  private String playerMuxPluginVersion;

  public static final String SERIALIZED_NAME_PLAYER_NAME = "player_name";
  @SerializedName(SERIALIZED_NAME_PLAYER_NAME)
  private String playerName;

  public static final String SERIALIZED_NAME_PLAYER_POSTER = "player_poster";
  @SerializedName(SERIALIZED_NAME_PLAYER_POSTER)
  private String playerPoster;

  public static final String SERIALIZED_NAME_PLAYER_PRELOAD = "player_preload";
  @SerializedName(SERIALIZED_NAME_PLAYER_PRELOAD)
  private Boolean playerPreload;

  public static final String SERIALIZED_NAME_PLAYER_REMOTE_PLAYED = "player_remote_played";
  @SerializedName(SERIALIZED_NAME_PLAYER_REMOTE_PLAYED)
  private Boolean playerRemotePlayed;

  public static final String SERIALIZED_NAME_PLAYER_SOFTWARE = "player_software";
  @SerializedName(SERIALIZED_NAME_PLAYER_SOFTWARE)
  private String playerSoftware;

  public static final String SERIALIZED_NAME_PLAYER_SOFTWARE_VERSION = "player_software_version";
  @SerializedName(SERIALIZED_NAME_PLAYER_SOFTWARE_VERSION)
  private String playerSoftwareVersion;

  public static final String SERIALIZED_NAME_PLAYER_SOURCE_DOMAIN = "player_source_domain";
  @SerializedName(SERIALIZED_NAME_PLAYER_SOURCE_DOMAIN)
  private String playerSourceDomain;

  public static final String SERIALIZED_NAME_PLAYER_SOURCE_DURATION = "player_source_duration";
  @SerializedName(SERIALIZED_NAME_PLAYER_SOURCE_DURATION)
  private Long playerSourceDuration;

  public static final String SERIALIZED_NAME_PLAYER_SOURCE_HEIGHT = "player_source_height";
  @SerializedName(SERIALIZED_NAME_PLAYER_SOURCE_HEIGHT)
  private Integer playerSourceHeight;

  public static final String SERIALIZED_NAME_PLAYER_SOURCE_HOST_NAME = "player_source_host_name";
  @SerializedName(SERIALIZED_NAME_PLAYER_SOURCE_HOST_NAME)
  private String playerSourceHostName;

  public static final String SERIALIZED_NAME_PLAYER_SOURCE_STREAM_TYPE = "player_source_stream_type";
  @SerializedName(SERIALIZED_NAME_PLAYER_SOURCE_STREAM_TYPE)
  private String playerSourceStreamType;

  public static final String SERIALIZED_NAME_PLAYER_SOURCE_TYPE = "player_source_type";
  @SerializedName(SERIALIZED_NAME_PLAYER_SOURCE_TYPE)
  private String playerSourceType;

  public static final String SERIALIZED_NAME_PLAYER_SOURCE_URL = "player_source_url";
  @SerializedName(SERIALIZED_NAME_PLAYER_SOURCE_URL)
  private String playerSourceUrl;

  public static final String SERIALIZED_NAME_PLAYER_SOURCE_WIDTH = "player_source_width";
  @SerializedName(SERIALIZED_NAME_PLAYER_SOURCE_WIDTH)
  private Integer playerSourceWidth;

  public static final String SERIALIZED_NAME_PLAYER_STARTUP_TIME = "player_startup_time";
  @SerializedName(SERIALIZED_NAME_PLAYER_STARTUP_TIME)
  private Long playerStartupTime;

  public static final String SERIALIZED_NAME_PLAYER_VERSION = "player_version";
  @SerializedName(SERIALIZED_NAME_PLAYER_VERSION)
  private String playerVersion;

  public static final String SERIALIZED_NAME_PLAYER_VIEW_COUNT = "player_view_count";
  @SerializedName(SERIALIZED_NAME_PLAYER_VIEW_COUNT)
  private Long playerViewCount;

  public static final String SERIALIZED_NAME_PLAYER_WIDTH = "player_width";
  @SerializedName(SERIALIZED_NAME_PLAYER_WIDTH)
  private Integer playerWidth;

  public static final String SERIALIZED_NAME_PREROLL_AD_ASSET_HOSTNAME = "preroll_ad_asset_hostname";
  @SerializedName(SERIALIZED_NAME_PREROLL_AD_ASSET_HOSTNAME)
  private String prerollAdAssetHostname;

  public static final String SERIALIZED_NAME_PREROLL_AD_TAG_HOSTNAME = "preroll_ad_tag_hostname";
  @SerializedName(SERIALIZED_NAME_PREROLL_AD_TAG_HOSTNAME)
  private String prerollAdTagHostname;

  public static final String SERIALIZED_NAME_PREROLL_PLAYED = "preroll_played";
  @SerializedName(SERIALIZED_NAME_PREROLL_PLAYED)
  private Boolean prerollPlayed;

  public static final String SERIALIZED_NAME_PREROLL_REQUESTED = "preroll_requested";
  @SerializedName(SERIALIZED_NAME_PREROLL_REQUESTED)
  private Boolean prerollRequested;

  public static final String SERIALIZED_NAME_PROPERTY_ID = "property_id";
  @SerializedName(SERIALIZED_NAME_PROPERTY_ID)
  private Long propertyId;

  public static final String SERIALIZED_NAME_QUALITY_SCORE = "quality_score";
  @SerializedName(SERIALIZED_NAME_QUALITY_SCORE)
  private String qualityScore;

  public static final String SERIALIZED_NAME_REBUFFER_PERCENTAGE = "rebuffer_percentage";
  @SerializedName(SERIALIZED_NAME_REBUFFER_PERCENTAGE)
  private String rebufferPercentage;

  public static final String SERIALIZED_NAME_REBUFFERING_SCORE = "rebuffering_score";
  @SerializedName(SERIALIZED_NAME_REBUFFERING_SCORE)
  private String rebufferingScore;

  public static final String SERIALIZED_NAME_REGION = "region";
  @SerializedName(SERIALIZED_NAME_REGION)
  private String region;

  public static final String SERIALIZED_NAME_REQUESTS_FOR_FIRST_PREROLL = "requests_for_first_preroll";
  @SerializedName(SERIALIZED_NAME_REQUESTS_FOR_FIRST_PREROLL)
  private Long requestsForFirstPreroll;

  public static final String SERIALIZED_NAME_SESSION_ID = "session_id";
  @SerializedName(SERIALIZED_NAME_SESSION_ID)
  private String sessionId;

  public static final String SERIALIZED_NAME_SHORT_TIME = "short_time";
  @SerializedName(SERIALIZED_NAME_SHORT_TIME)
  private String shortTime;

  public static final String SERIALIZED_NAME_STARTUP_SCORE = "startup_score";
  @SerializedName(SERIALIZED_NAME_STARTUP_SCORE)
  private String startupScore;

  public static final String SERIALIZED_NAME_SUB_PROPERTY_ID = "sub_property_id";
  @SerializedName(SERIALIZED_NAME_SUB_PROPERTY_ID)
  private String subPropertyId;

  public static final String SERIALIZED_NAME_TIME_TO_FIRST_FRAME = "time_to_first_frame";
  @SerializedName(SERIALIZED_NAME_TIME_TO_FIRST_FRAME)
  private Long timeToFirstFrame;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private String updatedAt;

  public static final String SERIALIZED_NAME_USED_FULLSCREEN = "used_fullscreen";
  @SerializedName(SERIALIZED_NAME_USED_FULLSCREEN)
  private Boolean usedFullscreen;

  public static final String SERIALIZED_NAME_VIDEO_CONTENT_TYPE = "video_content_type";
  @SerializedName(SERIALIZED_NAME_VIDEO_CONTENT_TYPE)
  private String videoContentType;

  public static final String SERIALIZED_NAME_VIDEO_DURATION = "video_duration";
  @SerializedName(SERIALIZED_NAME_VIDEO_DURATION)
  private Long videoDuration;

  public static final String SERIALIZED_NAME_VIDEO_ENCODING_VARIANT = "video_encoding_variant";
  @SerializedName(SERIALIZED_NAME_VIDEO_ENCODING_VARIANT)
  private String videoEncodingVariant;

  public static final String SERIALIZED_NAME_VIDEO_ID = "video_id";
  @SerializedName(SERIALIZED_NAME_VIDEO_ID)
  private String videoId;

  public static final String SERIALIZED_NAME_VIDEO_LANGUAGE = "video_language";
  @SerializedName(SERIALIZED_NAME_VIDEO_LANGUAGE)
  private String videoLanguage;

  public static final String SERIALIZED_NAME_VIDEO_PRODUCER = "video_producer";
  @SerializedName(SERIALIZED_NAME_VIDEO_PRODUCER)
  private String videoProducer;

  public static final String SERIALIZED_NAME_VIDEO_SERIES = "video_series";
  @SerializedName(SERIALIZED_NAME_VIDEO_SERIES)
  private String videoSeries;

  public static final String SERIALIZED_NAME_VIDEO_STARTUP_FAILURE = "video_startup_failure";
  @SerializedName(SERIALIZED_NAME_VIDEO_STARTUP_FAILURE)
  private Boolean videoStartupFailure;

  public static final String SERIALIZED_NAME_VIDEO_STARTUP_PREROLL_LOAD_TIME = "video_startup_preroll_load_time";
  @SerializedName(SERIALIZED_NAME_VIDEO_STARTUP_PREROLL_LOAD_TIME)
  private Long videoStartupPrerollLoadTime;

  public static final String SERIALIZED_NAME_VIDEO_STARTUP_PREROLL_REQUEST_TIME = "video_startup_preroll_request_time";
  @SerializedName(SERIALIZED_NAME_VIDEO_STARTUP_PREROLL_REQUEST_TIME)
  private Long videoStartupPrerollRequestTime;

  public static final String SERIALIZED_NAME_VIDEO_STREAM_TYPE = "video_stream_type";
  @SerializedName(SERIALIZED_NAME_VIDEO_STREAM_TYPE)
  private String videoStreamType;

  public static final String SERIALIZED_NAME_VIDEO_TITLE = "video_title";
  @SerializedName(SERIALIZED_NAME_VIDEO_TITLE)
  private String videoTitle;

  public static final String SERIALIZED_NAME_VIDEO_VARIANT_ID = "video_variant_id";
  @SerializedName(SERIALIZED_NAME_VIDEO_VARIANT_ID)
  private String videoVariantId;

  public static final String SERIALIZED_NAME_VIDEO_VARIANT_NAME = "video_variant_name";
  @SerializedName(SERIALIZED_NAME_VIDEO_VARIANT_NAME)
  private String videoVariantName;

  public static final String SERIALIZED_NAME_VIEW_AVERAGE_REQUEST_LATENCY = "view_average_request_latency";
  @SerializedName(SERIALIZED_NAME_VIEW_AVERAGE_REQUEST_LATENCY)
  private Long viewAverageRequestLatency;

  public static final String SERIALIZED_NAME_VIEW_AVERAGE_REQUEST_THROUGHPUT = "view_average_request_throughput";
  @SerializedName(SERIALIZED_NAME_VIEW_AVERAGE_REQUEST_THROUGHPUT)
  private Long viewAverageRequestThroughput;

  public static final String SERIALIZED_NAME_VIEW_DRM_TYPE = "view_drm_type";
  @SerializedName(SERIALIZED_NAME_VIEW_DRM_TYPE)
  private String viewDrmType;

  public static final String SERIALIZED_NAME_VIEW_DROPPED_FRAME_COUNT = "view_dropped_frame_count";
  @SerializedName(SERIALIZED_NAME_VIEW_DROPPED_FRAME_COUNT)
  private Long viewDroppedFrameCount;

  public static final String SERIALIZED_NAME_VIEW_END = "view_end";
  @SerializedName(SERIALIZED_NAME_VIEW_END)
  private String viewEnd;

  public static final String SERIALIZED_NAME_VIEW_ERROR_ID = "view_error_id";
  @SerializedName(SERIALIZED_NAME_VIEW_ERROR_ID)
  private Integer viewErrorId;

  public static final String SERIALIZED_NAME_VIEW_HAS_AD = "view_has_ad";
  @SerializedName(SERIALIZED_NAME_VIEW_HAS_AD)
  private Boolean viewHasAd;

  public static final String SERIALIZED_NAME_VIEW_ID = "view_id";
  @SerializedName(SERIALIZED_NAME_VIEW_ID)
  private String viewId;

  public static final String SERIALIZED_NAME_VIEW_MAX_DOWNSCALE_PERCENTAGE = "view_max_downscale_percentage";
  @SerializedName(SERIALIZED_NAME_VIEW_MAX_DOWNSCALE_PERCENTAGE)
  private String viewMaxDownscalePercentage;

  public static final String SERIALIZED_NAME_VIEW_MAX_PLAYHEAD_POSITION = "view_max_playhead_position";
  @SerializedName(SERIALIZED_NAME_VIEW_MAX_PLAYHEAD_POSITION)
  private String viewMaxPlayheadPosition;

  public static final String SERIALIZED_NAME_VIEW_MAX_REQUEST_LATENCY = "view_max_request_latency";
  @SerializedName(SERIALIZED_NAME_VIEW_MAX_REQUEST_LATENCY)
  private Long viewMaxRequestLatency;

  public static final String SERIALIZED_NAME_VIEW_MAX_UPSCALE_PERCENTAGE = "view_max_upscale_percentage";
  @SerializedName(SERIALIZED_NAME_VIEW_MAX_UPSCALE_PERCENTAGE)
  private String viewMaxUpscalePercentage;

  public static final String SERIALIZED_NAME_VIEW_PLAYING_TIME = "view_playing_time";
  @SerializedName(SERIALIZED_NAME_VIEW_PLAYING_TIME)
  private String viewPlayingTime;

  public static final String SERIALIZED_NAME_VIEW_SEEK_COUNT = "view_seek_count";
  @SerializedName(SERIALIZED_NAME_VIEW_SEEK_COUNT)
  private Long viewSeekCount;

  public static final String SERIALIZED_NAME_VIEW_SEEK_DURATION = "view_seek_duration";
  @SerializedName(SERIALIZED_NAME_VIEW_SEEK_DURATION)
  private Long viewSeekDuration;

  public static final String SERIALIZED_NAME_VIEW_SESSION_ID = "view_session_id";
  @SerializedName(SERIALIZED_NAME_VIEW_SESSION_ID)
  private String viewSessionId;

  public static final String SERIALIZED_NAME_VIEW_START = "view_start";
  @SerializedName(SERIALIZED_NAME_VIEW_START)
  private String viewStart;

  public static final String SERIALIZED_NAME_VIEW_TOTAL_CONTENT_PLAYBACK_TIME = "view_total_content_playback_time";
  @SerializedName(SERIALIZED_NAME_VIEW_TOTAL_CONTENT_PLAYBACK_TIME)
  private Long viewTotalContentPlaybackTime;

  public static final String SERIALIZED_NAME_VIEW_TOTAL_DOWNSCALING = "view_total_downscaling";
  @SerializedName(SERIALIZED_NAME_VIEW_TOTAL_DOWNSCALING)
  private String viewTotalDownscaling;

  public static final String SERIALIZED_NAME_VIEW_TOTAL_UPSCALING = "view_total_upscaling";
  @SerializedName(SERIALIZED_NAME_VIEW_TOTAL_UPSCALING)
  private String viewTotalUpscaling;

  public static final String SERIALIZED_NAME_VIEWER_APPLICATION_ENGINE = "viewer_application_engine";
  @SerializedName(SERIALIZED_NAME_VIEWER_APPLICATION_ENGINE)
  private String viewerApplicationEngine;

  public static final String SERIALIZED_NAME_VIEWER_APPLICATION_NAME = "viewer_application_name";
  @SerializedName(SERIALIZED_NAME_VIEWER_APPLICATION_NAME)
  private String viewerApplicationName;

  public static final String SERIALIZED_NAME_VIEWER_APPLICATION_VERSION = "viewer_application_version";
  @SerializedName(SERIALIZED_NAME_VIEWER_APPLICATION_VERSION)
  private String viewerApplicationVersion;

  public static final String SERIALIZED_NAME_VIEWER_CONNECTION_TYPE = "viewer_connection_type";
  @SerializedName(SERIALIZED_NAME_VIEWER_CONNECTION_TYPE)
  private String viewerConnectionType;

  public static final String SERIALIZED_NAME_VIEWER_DEVICE_CATEGORY = "viewer_device_category";
  @SerializedName(SERIALIZED_NAME_VIEWER_DEVICE_CATEGORY)
  private String viewerDeviceCategory;

  public static final String SERIALIZED_NAME_VIEWER_DEVICE_MANUFACTURER = "viewer_device_manufacturer";
  @SerializedName(SERIALIZED_NAME_VIEWER_DEVICE_MANUFACTURER)
  private String viewerDeviceManufacturer;

  public static final String SERIALIZED_NAME_VIEWER_DEVICE_MODEL = "viewer_device_model";
  @SerializedName(SERIALIZED_NAME_VIEWER_DEVICE_MODEL)
  private String viewerDeviceModel;

  public static final String SERIALIZED_NAME_VIEWER_DEVICE_NAME = "viewer_device_name";
  @SerializedName(SERIALIZED_NAME_VIEWER_DEVICE_NAME)
  private String viewerDeviceName;

  public static final String SERIALIZED_NAME_VIEWER_EXPERIENCE_SCORE = "viewer_experience_score";
  @SerializedName(SERIALIZED_NAME_VIEWER_EXPERIENCE_SCORE)
  private String viewerExperienceScore;

  public static final String SERIALIZED_NAME_VIEWER_OS_ARCHITECTURE = "viewer_os_architecture";
  @SerializedName(SERIALIZED_NAME_VIEWER_OS_ARCHITECTURE)
  private String viewerOsArchitecture;

  public static final String SERIALIZED_NAME_VIEWER_OS_FAMILY = "viewer_os_family";
  @SerializedName(SERIALIZED_NAME_VIEWER_OS_FAMILY)
  private String viewerOsFamily;

  public static final String SERIALIZED_NAME_VIEWER_OS_VERSION = "viewer_os_version";
  @SerializedName(SERIALIZED_NAME_VIEWER_OS_VERSION)
  private String viewerOsVersion;

  public static final String SERIALIZED_NAME_VIEWER_USER_AGENT = "viewer_user_agent";
  @SerializedName(SERIALIZED_NAME_VIEWER_USER_AGENT)
  private String viewerUserAgent;

  public static final String SERIALIZED_NAME_VIEWER_USER_ID = "viewer_user_id";
  @SerializedName(SERIALIZED_NAME_VIEWER_USER_ID)
  private String viewerUserId;

  public static final String SERIALIZED_NAME_WATCH_TIME = "watch_time";
  @SerializedName(SERIALIZED_NAME_WATCH_TIME)
  private Long watchTime;

  public static final String SERIALIZED_NAME_WATCHED = "watched";
  @SerializedName(SERIALIZED_NAME_WATCHED)
  private Boolean watched;

  public static final String SERIALIZED_NAME_WEIGHTED_AVERAGE_BITRATE = "weighted_average_bitrate";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_AVERAGE_BITRATE)
  private Long weightedAverageBitrate;

  public VideoView() {
  }

  public VideoView asn(Long asn) {
    this.asn = asn;
    return this;
  }

  /**
   * Get asn
   * @return asn
   */
  @javax.annotation.Nullable
  public Long getAsn() {
    return asn;
  }

  public void setAsn(Long asn) {
    this.asn = asn;
  }


  public VideoView asnName(String asnName) {
    this.asnName = asnName;
    return this;
  }

  /**
   * Get asnName
   * @return asnName
   */
  @javax.annotation.Nullable
  public String getAsnName() {
    return asnName;
  }

  public void setAsnName(String asnName) {
    this.asnName = asnName;
  }


  public VideoView assetId(String assetId) {
    this.assetId = assetId;
    return this;
  }

  /**
   * Get assetId
   * @return assetId
   */
  @javax.annotation.Nullable
  public String getAssetId() {
    return assetId;
  }

  public void setAssetId(String assetId) {
    this.assetId = assetId;
  }


  public VideoView bufferingCount(Long bufferingCount) {
    this.bufferingCount = bufferingCount;
    return this;
  }

  /**
   * Get bufferingCount
   * @return bufferingCount
   */
  @javax.annotation.Nullable
  public Long getBufferingCount() {
    return bufferingCount;
  }

  public void setBufferingCount(Long bufferingCount) {
    this.bufferingCount = bufferingCount;
  }


  public VideoView bufferingDuration(Long bufferingDuration) {
    this.bufferingDuration = bufferingDuration;
    return this;
  }

  /**
   * Get bufferingDuration
   * @return bufferingDuration
   */
  @javax.annotation.Nullable
  public Long getBufferingDuration() {
    return bufferingDuration;
  }

  public void setBufferingDuration(Long bufferingDuration) {
    this.bufferingDuration = bufferingDuration;
  }


  public VideoView bufferingRate(String bufferingRate) {
    this.bufferingRate = bufferingRate;
    return this;
  }

  /**
   * Get bufferingRate
   * @return bufferingRate
   */
  @javax.annotation.Nullable
  public String getBufferingRate() {
    return bufferingRate;
  }

  public void setBufferingRate(String bufferingRate) {
    this.bufferingRate = bufferingRate;
  }


  public VideoView cdn(String cdn) {
    this.cdn = cdn;
    return this;
  }

  /**
   * Get cdn
   * @return cdn
   */
  @javax.annotation.Nullable
  public String getCdn() {
    return cdn;
  }

  public void setCdn(String cdn) {
    this.cdn = cdn;
  }


  public VideoView city(String city) {
    this.city = city;
    return this;
  }

  /**
   * Get city
   * @return city
   */
  @javax.annotation.Nullable
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }


  public VideoView continentCode(String continentCode) {
    this.continentCode = continentCode;
    return this;
  }

  /**
   * Get continentCode
   * @return continentCode
   */
  @javax.annotation.Nullable
  public String getContinentCode() {
    return continentCode;
  }

  public void setContinentCode(String continentCode) {
    this.continentCode = continentCode;
  }


  public VideoView countryCode(String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

  /**
   * Get countryCode
   * @return countryCode
   */
  @javax.annotation.Nullable
  public String getCountryCode() {
    return countryCode;
  }

  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  public VideoView countryName(String countryName) {
    this.countryName = countryName;
    return this;
  }

  /**
   * Get countryName
   * @return countryName
   */
  @javax.annotation.Nullable
  public String getCountryName() {
    return countryName;
  }

  public void setCountryName(String countryName) {
    this.countryName = countryName;
  }


  public VideoView custom1(String custom1) {
    this.custom1 = custom1;
    return this;
  }

  /**
   * Get custom1
   * @return custom1
   */
  @javax.annotation.Nullable
  public String getCustom1() {
    return custom1;
  }

  public void setCustom1(String custom1) {
    this.custom1 = custom1;
  }


  public VideoView custom10(String custom10) {
    this.custom10 = custom10;
    return this;
  }

  /**
   * Get custom10
   * @return custom10
   */
  @javax.annotation.Nullable
  public String getCustom10() {
    return custom10;
  }

  public void setCustom10(String custom10) {
    this.custom10 = custom10;
  }


  public VideoView custom2(String custom2) {
    this.custom2 = custom2;
    return this;
  }

  /**
   * Get custom2
   * @return custom2
   */
  @javax.annotation.Nullable
  public String getCustom2() {
    return custom2;
  }

  public void setCustom2(String custom2) {
    this.custom2 = custom2;
  }


  public VideoView custom3(String custom3) {
    this.custom3 = custom3;
    return this;
  }

  /**
   * Get custom3
   * @return custom3
   */
  @javax.annotation.Nullable
  public String getCustom3() {
    return custom3;
  }

  public void setCustom3(String custom3) {
    this.custom3 = custom3;
  }


  public VideoView custom4(String custom4) {
    this.custom4 = custom4;
    return this;
  }

  /**
   * Get custom4
   * @return custom4
   */
  @javax.annotation.Nullable
  public String getCustom4() {
    return custom4;
  }

  public void setCustom4(String custom4) {
    this.custom4 = custom4;
  }


  public VideoView custom5(String custom5) {
    this.custom5 = custom5;
    return this;
  }

  /**
   * Get custom5
   * @return custom5
   */
  @javax.annotation.Nullable
  public String getCustom5() {
    return custom5;
  }

  public void setCustom5(String custom5) {
    this.custom5 = custom5;
  }


  public VideoView custom6(String custom6) {
    this.custom6 = custom6;
    return this;
  }

  /**
   * Get custom6
   * @return custom6
   */
  @javax.annotation.Nullable
  public String getCustom6() {
    return custom6;
  }

  public void setCustom6(String custom6) {
    this.custom6 = custom6;
  }


  public VideoView custom7(String custom7) {
    this.custom7 = custom7;
    return this;
  }

  /**
   * Get custom7
   * @return custom7
   */
  @javax.annotation.Nullable
  public String getCustom7() {
    return custom7;
  }

  public void setCustom7(String custom7) {
    this.custom7 = custom7;
  }


  public VideoView custom8(String custom8) {
    this.custom8 = custom8;
    return this;
  }

  /**
   * Get custom8
   * @return custom8
   */
  @javax.annotation.Nullable
  public String getCustom8() {
    return custom8;
  }

  public void setCustom8(String custom8) {
    this.custom8 = custom8;
  }


  public VideoView custom9(String custom9) {
    this.custom9 = custom9;
    return this;
  }

  /**
   * Get custom9
   * @return custom9
   */
  @javax.annotation.Nullable
  public String getCustom9() {
    return custom9;
  }

  public void setCustom9(String custom9) {
    this.custom9 = custom9;
  }


  public VideoView environmentId(String environmentId) {
    this.environmentId = environmentId;
    return this;
  }

  /**
   * Get environmentId
   * @return environmentId
   */
  @javax.annotation.Nullable
  public String getEnvironmentId() {
    return environmentId;
  }

  public void setEnvironmentId(String environmentId) {
    this.environmentId = environmentId;
  }


  public VideoView errorTypeId(Integer errorTypeId) {
    this.errorTypeId = errorTypeId;
    return this;
  }

  /**
   * Get errorTypeId
   * @return errorTypeId
   */
  @javax.annotation.Nullable
  public Integer getErrorTypeId() {
    return errorTypeId;
  }

  public void setErrorTypeId(Integer errorTypeId) {
    this.errorTypeId = errorTypeId;
  }


  public VideoView events(List<VideoViewEvent> events) {
    this.events = events;
    return this;
  }

  public VideoView addEventsItem(VideoViewEvent eventsItem) {
    if (this.events == null) {
      this.events = new ArrayList<>();
    }
    this.events.add(eventsItem);
    return this;
  }

  /**
   * Get events
   * @return events
   */
  @javax.annotation.Nullable
  public List<VideoViewEvent> getEvents() {
    return events;
  }

  public void setEvents(List<VideoViewEvent> events) {
    this.events = events;
  }


  public VideoView exitBeforeVideoStart(Boolean exitBeforeVideoStart) {
    this.exitBeforeVideoStart = exitBeforeVideoStart;
    return this;
  }

  /**
   * Get exitBeforeVideoStart
   * @return exitBeforeVideoStart
   */
  @javax.annotation.Nullable
  public Boolean getExitBeforeVideoStart() {
    return exitBeforeVideoStart;
  }

  public void setExitBeforeVideoStart(Boolean exitBeforeVideoStart) {
    this.exitBeforeVideoStart = exitBeforeVideoStart;
  }


  public VideoView experimentName(String experimentName) {
    this.experimentName = experimentName;
    return this;
  }

  /**
   * Get experimentName
   * @return experimentName
   */
  @javax.annotation.Nullable
  public String getExperimentName() {
    return experimentName;
  }

  public void setExperimentName(String experimentName) {
    this.experimentName = experimentName;
  }


  public VideoView id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public VideoView insertedAt(String insertedAt) {
    this.insertedAt = insertedAt;
    return this;
  }

  /**
   * Get insertedAt
   * @return insertedAt
   */
  @javax.annotation.Nullable
  public String getInsertedAt() {
    return insertedAt;
  }

  public void setInsertedAt(String insertedAt) {
    this.insertedAt = insertedAt;
  }


  public VideoView isp(String isp) {
    this.isp = isp;
    return this;
  }

  /**
   * Get isp
   * @return isp
   */
  @javax.annotation.Nullable
  public String getIsp() {
    return isp;
  }

  public void setIsp(String isp) {
    this.isp = isp;
  }


  public VideoView latitude(String latitude) {
    this.latitude = latitude;
    return this;
  }

  /**
   * Get latitude
   * @return latitude
   */
  @javax.annotation.Nullable
  public String getLatitude() {
    return latitude;
  }

  public void setLatitude(String latitude) {
    this.latitude = latitude;
  }


  public VideoView liveStreamId(String liveStreamId) {
    this.liveStreamId = liveStreamId;
    return this;
  }

  /**
   * Get liveStreamId
   * @return liveStreamId
   */
  @javax.annotation.Nullable
  public String getLiveStreamId() {
    return liveStreamId;
  }

  public void setLiveStreamId(String liveStreamId) {
    this.liveStreamId = liveStreamId;
  }


  public VideoView liveStreamLatency(Long liveStreamLatency) {
    this.liveStreamLatency = liveStreamLatency;
    return this;
  }

  /**
   * Get liveStreamLatency
   * @return liveStreamLatency
   */
  @javax.annotation.Nullable
  public Long getLiveStreamLatency() {
    return liveStreamLatency;
  }

  public void setLiveStreamLatency(Long liveStreamLatency) {
    this.liveStreamLatency = liveStreamLatency;
  }


  public VideoView longitude(String longitude) {
    this.longitude = longitude;
    return this;
  }

  /**
   * Get longitude
   * @return longitude
   */
  @javax.annotation.Nullable
  public String getLongitude() {
    return longitude;
  }

  public void setLongitude(String longitude) {
    this.longitude = longitude;
  }


  public VideoView metro(String metro) {
    this.metro = metro;
    return this;
  }

  /**
   * Get metro
   * @return metro
   */
  @javax.annotation.Nullable
  public String getMetro() {
    return metro;
  }

  public void setMetro(String metro) {
    this.metro = metro;
  }


  public VideoView muxApiVersion(String muxApiVersion) {
    this.muxApiVersion = muxApiVersion;
    return this;
  }

  /**
   * Get muxApiVersion
   * @return muxApiVersion
   */
  @javax.annotation.Nullable
  public String getMuxApiVersion() {
    return muxApiVersion;
  }

  public void setMuxApiVersion(String muxApiVersion) {
    this.muxApiVersion = muxApiVersion;
  }


  public VideoView muxEmbed(String muxEmbed) {
    this.muxEmbed = muxEmbed;
    return this;
  }

  /**
   * Get muxEmbed
   * @return muxEmbed
   */
  @javax.annotation.Nullable
  public String getMuxEmbed() {
    return muxEmbed;
  }

  public void setMuxEmbed(String muxEmbed) {
    this.muxEmbed = muxEmbed;
  }


  public VideoView muxEmbedVersion(String muxEmbedVersion) {
    this.muxEmbedVersion = muxEmbedVersion;
    return this;
  }

  /**
   * Get muxEmbedVersion
   * @return muxEmbedVersion
   */
  @javax.annotation.Nullable
  public String getMuxEmbedVersion() {
    return muxEmbedVersion;
  }

  public void setMuxEmbedVersion(String muxEmbedVersion) {
    this.muxEmbedVersion = muxEmbedVersion;
  }


  public VideoView muxViewerId(String muxViewerId) {
    this.muxViewerId = muxViewerId;
    return this;
  }

  /**
   * Get muxViewerId
   * @return muxViewerId
   */
  @javax.annotation.Nullable
  public String getMuxViewerId() {
    return muxViewerId;
  }

  public void setMuxViewerId(String muxViewerId) {
    this.muxViewerId = muxViewerId;
  }


  public VideoView pageLoadTime(Long pageLoadTime) {
    this.pageLoadTime = pageLoadTime;
    return this;
  }

  /**
   * Get pageLoadTime
   * @return pageLoadTime
   */
  @javax.annotation.Nullable
  public Long getPageLoadTime() {
    return pageLoadTime;
  }

  public void setPageLoadTime(Long pageLoadTime) {
    this.pageLoadTime = pageLoadTime;
  }


  public VideoView pageType(String pageType) {
    this.pageType = pageType;
    return this;
  }

  /**
   * Get pageType
   * @return pageType
   */
  @javax.annotation.Nullable
  public String getPageType() {
    return pageType;
  }

  public void setPageType(String pageType) {
    this.pageType = pageType;
  }


  public VideoView pageUrl(String pageUrl) {
    this.pageUrl = pageUrl;
    return this;
  }

  /**
   * Get pageUrl
   * @return pageUrl
   */
  @javax.annotation.Nullable
  public String getPageUrl() {
    return pageUrl;
  }

  public void setPageUrl(String pageUrl) {
    this.pageUrl = pageUrl;
  }


  public VideoView platformDescription(String platformDescription) {
    this.platformDescription = platformDescription;
    return this;
  }

  /**
   * Get platformDescription
   * @return platformDescription
   */
  @javax.annotation.Nullable
  public String getPlatformDescription() {
    return platformDescription;
  }

  public void setPlatformDescription(String platformDescription) {
    this.platformDescription = platformDescription;
  }


  public VideoView platformSummary(String platformSummary) {
    this.platformSummary = platformSummary;
    return this;
  }

  /**
   * Get platformSummary
   * @return platformSummary
   */
  @javax.annotation.Nullable
  public String getPlatformSummary() {
    return platformSummary;
  }

  public void setPlatformSummary(String platformSummary) {
    this.platformSummary = platformSummary;
  }


  public VideoView playbackId(String playbackId) {
    this.playbackId = playbackId;
    return this;
  }

  /**
   * Get playbackId
   * @return playbackId
   */
  @javax.annotation.Nullable
  public String getPlaybackId() {
    return playbackId;
  }

  public void setPlaybackId(String playbackId) {
    this.playbackId = playbackId;
  }


  public VideoView playbackScore(String playbackScore) {
    this.playbackScore = playbackScore;
    return this;
  }

  /**
   * Get playbackScore
   * @return playbackScore
   */
  @javax.annotation.Nullable
  public String getPlaybackScore() {
    return playbackScore;
  }

  public void setPlaybackScore(String playbackScore) {
    this.playbackScore = playbackScore;
  }


  public VideoView playerAutoplay(Boolean playerAutoplay) {
    this.playerAutoplay = playerAutoplay;
    return this;
  }

  /**
   * Get playerAutoplay
   * @return playerAutoplay
   */
  @javax.annotation.Nullable
  public Boolean getPlayerAutoplay() {
    return playerAutoplay;
  }

  public void setPlayerAutoplay(Boolean playerAutoplay) {
    this.playerAutoplay = playerAutoplay;
  }


  public VideoView playerErrorCode(String playerErrorCode) {
    this.playerErrorCode = playerErrorCode;
    return this;
  }

  /**
   * Get playerErrorCode
   * @return playerErrorCode
   */
  @javax.annotation.Nullable
  public String getPlayerErrorCode() {
    return playerErrorCode;
  }

  public void setPlayerErrorCode(String playerErrorCode) {
    this.playerErrorCode = playerErrorCode;
  }


  public VideoView playerErrorContext(String playerErrorContext) {
    this.playerErrorContext = playerErrorContext;
    return this;
  }

  /**
   * Get playerErrorContext
   * @return playerErrorContext
   */
  @javax.annotation.Nullable
  public String getPlayerErrorContext() {
    return playerErrorContext;
  }

  public void setPlayerErrorContext(String playerErrorContext) {
    this.playerErrorContext = playerErrorContext;
  }


  public VideoView playerErrorMessage(String playerErrorMessage) {
    this.playerErrorMessage = playerErrorMessage;
    return this;
  }

  /**
   * Get playerErrorMessage
   * @return playerErrorMessage
   */
  @javax.annotation.Nullable
  public String getPlayerErrorMessage() {
    return playerErrorMessage;
  }

  public void setPlayerErrorMessage(String playerErrorMessage) {
    this.playerErrorMessage = playerErrorMessage;
  }


  public VideoView playerHeight(Integer playerHeight) {
    this.playerHeight = playerHeight;
    return this;
  }

  /**
   * Get playerHeight
   * @return playerHeight
   */
  @javax.annotation.Nullable
  public Integer getPlayerHeight() {
    return playerHeight;
  }

  public void setPlayerHeight(Integer playerHeight) {
    this.playerHeight = playerHeight;
  }


  public VideoView playerInstanceId(String playerInstanceId) {
    this.playerInstanceId = playerInstanceId;
    return this;
  }

  /**
   * Get playerInstanceId
   * @return playerInstanceId
   */
  @javax.annotation.Nullable
  public String getPlayerInstanceId() {
    return playerInstanceId;
  }

  public void setPlayerInstanceId(String playerInstanceId) {
    this.playerInstanceId = playerInstanceId;
  }


  public VideoView playerLanguage(String playerLanguage) {
    this.playerLanguage = playerLanguage;
    return this;
  }

  /**
   * Get playerLanguage
   * @return playerLanguage
   */
  @javax.annotation.Nullable
  public String getPlayerLanguage() {
    return playerLanguage;
  }

  public void setPlayerLanguage(String playerLanguage) {
    this.playerLanguage = playerLanguage;
  }


  public VideoView playerLoadTime(Long playerLoadTime) {
    this.playerLoadTime = playerLoadTime;
    return this;
  }

  /**
   * Get playerLoadTime
   * @return playerLoadTime
   */
  @javax.annotation.Nullable
  public Long getPlayerLoadTime() {
    return playerLoadTime;
  }

  public void setPlayerLoadTime(Long playerLoadTime) {
    this.playerLoadTime = playerLoadTime;
  }


  public VideoView playerMuxPluginName(String playerMuxPluginName) {
    this.playerMuxPluginName = playerMuxPluginName;
    return this;
  }

  /**
   * Get playerMuxPluginName
   * @return playerMuxPluginName
   */
  @javax.annotation.Nullable
  public String getPlayerMuxPluginName() {
    return playerMuxPluginName;
  }

  public void setPlayerMuxPluginName(String playerMuxPluginName) {
    this.playerMuxPluginName = playerMuxPluginName;
  }


  public VideoView playerMuxPluginVersion(String playerMuxPluginVersion) {
    this.playerMuxPluginVersion = playerMuxPluginVersion;
    return this;
  }

  /**
   * Get playerMuxPluginVersion
   * @return playerMuxPluginVersion
   */
  @javax.annotation.Nullable
  public String getPlayerMuxPluginVersion() {
    return playerMuxPluginVersion;
  }

  public void setPlayerMuxPluginVersion(String playerMuxPluginVersion) {
    this.playerMuxPluginVersion = playerMuxPluginVersion;
  }


  public VideoView playerName(String playerName) {
    this.playerName = playerName;
    return this;
  }

  /**
   * Get playerName
   * @return playerName
   */
  @javax.annotation.Nullable
  public String getPlayerName() {
    return playerName;
  }

  public void setPlayerName(String playerName) {
    this.playerName = playerName;
  }


  public VideoView playerPoster(String playerPoster) {
    this.playerPoster = playerPoster;
    return this;
  }

  /**
   * Get playerPoster
   * @return playerPoster
   */
  @javax.annotation.Nullable
  public String getPlayerPoster() {
    return playerPoster;
  }

  public void setPlayerPoster(String playerPoster) {
    this.playerPoster = playerPoster;
  }


  public VideoView playerPreload(Boolean playerPreload) {
    this.playerPreload = playerPreload;
    return this;
  }

  /**
   * Get playerPreload
   * @return playerPreload
   */
  @javax.annotation.Nullable
  public Boolean getPlayerPreload() {
    return playerPreload;
  }

  public void setPlayerPreload(Boolean playerPreload) {
    this.playerPreload = playerPreload;
  }


  public VideoView playerRemotePlayed(Boolean playerRemotePlayed) {
    this.playerRemotePlayed = playerRemotePlayed;
    return this;
  }

  /**
   * Get playerRemotePlayed
   * @return playerRemotePlayed
   */
  @javax.annotation.Nullable
  public Boolean getPlayerRemotePlayed() {
    return playerRemotePlayed;
  }

  public void setPlayerRemotePlayed(Boolean playerRemotePlayed) {
    this.playerRemotePlayed = playerRemotePlayed;
  }


  public VideoView playerSoftware(String playerSoftware) {
    this.playerSoftware = playerSoftware;
    return this;
  }

  /**
   * Get playerSoftware
   * @return playerSoftware
   */
  @javax.annotation.Nullable
  public String getPlayerSoftware() {
    return playerSoftware;
  }

  public void setPlayerSoftware(String playerSoftware) {
    this.playerSoftware = playerSoftware;
  }


  public VideoView playerSoftwareVersion(String playerSoftwareVersion) {
    this.playerSoftwareVersion = playerSoftwareVersion;
    return this;
  }

  /**
   * Get playerSoftwareVersion
   * @return playerSoftwareVersion
   */
  @javax.annotation.Nullable
  public String getPlayerSoftwareVersion() {
    return playerSoftwareVersion;
  }

  public void setPlayerSoftwareVersion(String playerSoftwareVersion) {
    this.playerSoftwareVersion = playerSoftwareVersion;
  }


  public VideoView playerSourceDomain(String playerSourceDomain) {
    this.playerSourceDomain = playerSourceDomain;
    return this;
  }

  /**
   * Get playerSourceDomain
   * @return playerSourceDomain
   */
  @javax.annotation.Nullable
  public String getPlayerSourceDomain() {
    return playerSourceDomain;
  }

  public void setPlayerSourceDomain(String playerSourceDomain) {
    this.playerSourceDomain = playerSourceDomain;
  }


  public VideoView playerSourceDuration(Long playerSourceDuration) {
    this.playerSourceDuration = playerSourceDuration;
    return this;
  }

  /**
   * Get playerSourceDuration
   * @return playerSourceDuration
   */
  @javax.annotation.Nullable
  public Long getPlayerSourceDuration() {
    return playerSourceDuration;
  }

  public void setPlayerSourceDuration(Long playerSourceDuration) {
    this.playerSourceDuration = playerSourceDuration;
  }


  public VideoView playerSourceHeight(Integer playerSourceHeight) {
    this.playerSourceHeight = playerSourceHeight;
    return this;
  }

  /**
   * Get playerSourceHeight
   * @return playerSourceHeight
   */
  @javax.annotation.Nullable
  public Integer getPlayerSourceHeight() {
    return playerSourceHeight;
  }

  public void setPlayerSourceHeight(Integer playerSourceHeight) {
    this.playerSourceHeight = playerSourceHeight;
  }


  public VideoView playerSourceHostName(String playerSourceHostName) {
    this.playerSourceHostName = playerSourceHostName;
    return this;
  }

  /**
   * Get playerSourceHostName
   * @return playerSourceHostName
   */
  @javax.annotation.Nullable
  public String getPlayerSourceHostName() {
    return playerSourceHostName;
  }

  public void setPlayerSourceHostName(String playerSourceHostName) {
    this.playerSourceHostName = playerSourceHostName;
  }


  public VideoView playerSourceStreamType(String playerSourceStreamType) {
    this.playerSourceStreamType = playerSourceStreamType;
    return this;
  }

  /**
   * Get playerSourceStreamType
   * @return playerSourceStreamType
   */
  @javax.annotation.Nullable
  public String getPlayerSourceStreamType() {
    return playerSourceStreamType;
  }

  public void setPlayerSourceStreamType(String playerSourceStreamType) {
    this.playerSourceStreamType = playerSourceStreamType;
  }


  public VideoView playerSourceType(String playerSourceType) {
    this.playerSourceType = playerSourceType;
    return this;
  }

  /**
   * Get playerSourceType
   * @return playerSourceType
   */
  @javax.annotation.Nullable
  public String getPlayerSourceType() {
    return playerSourceType;
  }

  public void setPlayerSourceType(String playerSourceType) {
    this.playerSourceType = playerSourceType;
  }


  public VideoView playerSourceUrl(String playerSourceUrl) {
    this.playerSourceUrl = playerSourceUrl;
    return this;
  }

  /**
   * Get playerSourceUrl
   * @return playerSourceUrl
   */
  @javax.annotation.Nullable
  public String getPlayerSourceUrl() {
    return playerSourceUrl;
  }

  public void setPlayerSourceUrl(String playerSourceUrl) {
    this.playerSourceUrl = playerSourceUrl;
  }


  public VideoView playerSourceWidth(Integer playerSourceWidth) {
    this.playerSourceWidth = playerSourceWidth;
    return this;
  }

  /**
   * Get playerSourceWidth
   * @return playerSourceWidth
   */
  @javax.annotation.Nullable
  public Integer getPlayerSourceWidth() {
    return playerSourceWidth;
  }

  public void setPlayerSourceWidth(Integer playerSourceWidth) {
    this.playerSourceWidth = playerSourceWidth;
  }


  public VideoView playerStartupTime(Long playerStartupTime) {
    this.playerStartupTime = playerStartupTime;
    return this;
  }

  /**
   * Get playerStartupTime
   * @return playerStartupTime
   */
  @javax.annotation.Nullable
  public Long getPlayerStartupTime() {
    return playerStartupTime;
  }

  public void setPlayerStartupTime(Long playerStartupTime) {
    this.playerStartupTime = playerStartupTime;
  }


  public VideoView playerVersion(String playerVersion) {
    this.playerVersion = playerVersion;
    return this;
  }

  /**
   * Get playerVersion
   * @return playerVersion
   */
  @javax.annotation.Nullable
  public String getPlayerVersion() {
    return playerVersion;
  }

  public void setPlayerVersion(String playerVersion) {
    this.playerVersion = playerVersion;
  }


  public VideoView playerViewCount(Long playerViewCount) {
    this.playerViewCount = playerViewCount;
    return this;
  }

  /**
   * Get playerViewCount
   * @return playerViewCount
   */
  @javax.annotation.Nullable
  public Long getPlayerViewCount() {
    return playerViewCount;
  }

  public void setPlayerViewCount(Long playerViewCount) {
    this.playerViewCount = playerViewCount;
  }


  public VideoView playerWidth(Integer playerWidth) {
    this.playerWidth = playerWidth;
    return this;
  }

  /**
   * Get playerWidth
   * @return playerWidth
   */
  @javax.annotation.Nullable
  public Integer getPlayerWidth() {
    return playerWidth;
  }

  public void setPlayerWidth(Integer playerWidth) {
    this.playerWidth = playerWidth;
  }


  public VideoView prerollAdAssetHostname(String prerollAdAssetHostname) {
    this.prerollAdAssetHostname = prerollAdAssetHostname;
    return this;
  }

  /**
   * Get prerollAdAssetHostname
   * @return prerollAdAssetHostname
   */
  @javax.annotation.Nullable
  public String getPrerollAdAssetHostname() {
    return prerollAdAssetHostname;
  }

  public void setPrerollAdAssetHostname(String prerollAdAssetHostname) {
    this.prerollAdAssetHostname = prerollAdAssetHostname;
  }


  public VideoView prerollAdTagHostname(String prerollAdTagHostname) {
    this.prerollAdTagHostname = prerollAdTagHostname;
    return this;
  }

  /**
   * Get prerollAdTagHostname
   * @return prerollAdTagHostname
   */
  @javax.annotation.Nullable
  public String getPrerollAdTagHostname() {
    return prerollAdTagHostname;
  }

  public void setPrerollAdTagHostname(String prerollAdTagHostname) {
    this.prerollAdTagHostname = prerollAdTagHostname;
  }


  public VideoView prerollPlayed(Boolean prerollPlayed) {
    this.prerollPlayed = prerollPlayed;
    return this;
  }

  /**
   * Get prerollPlayed
   * @return prerollPlayed
   */
  @javax.annotation.Nullable
  public Boolean getPrerollPlayed() {
    return prerollPlayed;
  }

  public void setPrerollPlayed(Boolean prerollPlayed) {
    this.prerollPlayed = prerollPlayed;
  }


  public VideoView prerollRequested(Boolean prerollRequested) {
    this.prerollRequested = prerollRequested;
    return this;
  }

  /**
   * Get prerollRequested
   * @return prerollRequested
   */
  @javax.annotation.Nullable
  public Boolean getPrerollRequested() {
    return prerollRequested;
  }

  public void setPrerollRequested(Boolean prerollRequested) {
    this.prerollRequested = prerollRequested;
  }


  public VideoView propertyId(Long propertyId) {
    this.propertyId = propertyId;
    return this;
  }

  /**
   * Get propertyId
   * @return propertyId
   */
  @javax.annotation.Nullable
  public Long getPropertyId() {
    return propertyId;
  }

  public void setPropertyId(Long propertyId) {
    this.propertyId = propertyId;
  }


  public VideoView qualityScore(String qualityScore) {
    this.qualityScore = qualityScore;
    return this;
  }

  /**
   * Get qualityScore
   * @return qualityScore
   */
  @javax.annotation.Nullable
  public String getQualityScore() {
    return qualityScore;
  }

  public void setQualityScore(String qualityScore) {
    this.qualityScore = qualityScore;
  }


  public VideoView rebufferPercentage(String rebufferPercentage) {
    this.rebufferPercentage = rebufferPercentage;
    return this;
  }

  /**
   * Get rebufferPercentage
   * @return rebufferPercentage
   */
  @javax.annotation.Nullable
  public String getRebufferPercentage() {
    return rebufferPercentage;
  }

  public void setRebufferPercentage(String rebufferPercentage) {
    this.rebufferPercentage = rebufferPercentage;
  }


  public VideoView rebufferingScore(String rebufferingScore) {
    this.rebufferingScore = rebufferingScore;
    return this;
  }

  /**
   * Get rebufferingScore
   * @return rebufferingScore
   */
  @javax.annotation.Nullable
  public String getRebufferingScore() {
    return rebufferingScore;
  }

  public void setRebufferingScore(String rebufferingScore) {
    this.rebufferingScore = rebufferingScore;
  }


  public VideoView region(String region) {
    this.region = region;
    return this;
  }

  /**
   * Get region
   * @return region
   */
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }


  public VideoView requestsForFirstPreroll(Long requestsForFirstPreroll) {
    this.requestsForFirstPreroll = requestsForFirstPreroll;
    return this;
  }

  /**
   * Get requestsForFirstPreroll
   * @return requestsForFirstPreroll
   */
  @javax.annotation.Nullable
  public Long getRequestsForFirstPreroll() {
    return requestsForFirstPreroll;
  }

  public void setRequestsForFirstPreroll(Long requestsForFirstPreroll) {
    this.requestsForFirstPreroll = requestsForFirstPreroll;
  }


  public VideoView sessionId(String sessionId) {
    this.sessionId = sessionId;
    return this;
  }

  /**
   * Get sessionId
   * @return sessionId
   */
  @javax.annotation.Nullable
  public String getSessionId() {
    return sessionId;
  }

  public void setSessionId(String sessionId) {
    this.sessionId = sessionId;
  }


  public VideoView shortTime(String shortTime) {
    this.shortTime = shortTime;
    return this;
  }

  /**
   * Get shortTime
   * @return shortTime
   */
  @javax.annotation.Nullable
  public String getShortTime() {
    return shortTime;
  }

  public void setShortTime(String shortTime) {
    this.shortTime = shortTime;
  }


  public VideoView startupScore(String startupScore) {
    this.startupScore = startupScore;
    return this;
  }

  /**
   * Get startupScore
   * @return startupScore
   */
  @javax.annotation.Nullable
  public String getStartupScore() {
    return startupScore;
  }

  public void setStartupScore(String startupScore) {
    this.startupScore = startupScore;
  }


  public VideoView subPropertyId(String subPropertyId) {
    this.subPropertyId = subPropertyId;
    return this;
  }

  /**
   * Get subPropertyId
   * @return subPropertyId
   */
  @javax.annotation.Nullable
  public String getSubPropertyId() {
    return subPropertyId;
  }

  public void setSubPropertyId(String subPropertyId) {
    this.subPropertyId = subPropertyId;
  }


  public VideoView timeToFirstFrame(Long timeToFirstFrame) {
    this.timeToFirstFrame = timeToFirstFrame;
    return this;
  }

  /**
   * Get timeToFirstFrame
   * @return timeToFirstFrame
   */
  @javax.annotation.Nullable
  public Long getTimeToFirstFrame() {
    return timeToFirstFrame;
  }

  public void setTimeToFirstFrame(Long timeToFirstFrame) {
    this.timeToFirstFrame = timeToFirstFrame;
  }


  public VideoView updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  public VideoView usedFullscreen(Boolean usedFullscreen) {
    this.usedFullscreen = usedFullscreen;
    return this;
  }

  /**
   * Get usedFullscreen
   * @return usedFullscreen
   */
  @javax.annotation.Nullable
  public Boolean getUsedFullscreen() {
    return usedFullscreen;
  }

  public void setUsedFullscreen(Boolean usedFullscreen) {
    this.usedFullscreen = usedFullscreen;
  }


  public VideoView videoContentType(String videoContentType) {
    this.videoContentType = videoContentType;
    return this;
  }

  /**
   * Get videoContentType
   * @return videoContentType
   */
  @javax.annotation.Nullable
  public String getVideoContentType() {
    return videoContentType;
  }

  public void setVideoContentType(String videoContentType) {
    this.videoContentType = videoContentType;
  }


  public VideoView videoDuration(Long videoDuration) {
    this.videoDuration = videoDuration;
    return this;
  }

  /**
   * Get videoDuration
   * @return videoDuration
   */
  @javax.annotation.Nullable
  public Long getVideoDuration() {
    return videoDuration;
  }

  public void setVideoDuration(Long videoDuration) {
    this.videoDuration = videoDuration;
  }


  public VideoView videoEncodingVariant(String videoEncodingVariant) {
    this.videoEncodingVariant = videoEncodingVariant;
    return this;
  }

  /**
   * Get videoEncodingVariant
   * @return videoEncodingVariant
   */
  @javax.annotation.Nullable
  public String getVideoEncodingVariant() {
    return videoEncodingVariant;
  }

  public void setVideoEncodingVariant(String videoEncodingVariant) {
    this.videoEncodingVariant = videoEncodingVariant;
  }


  public VideoView videoId(String videoId) {
    this.videoId = videoId;
    return this;
  }

  /**
   * Get videoId
   * @return videoId
   */
  @javax.annotation.Nullable
  public String getVideoId() {
    return videoId;
  }

  public void setVideoId(String videoId) {
    this.videoId = videoId;
  }


  public VideoView videoLanguage(String videoLanguage) {
    this.videoLanguage = videoLanguage;
    return this;
  }

  /**
   * Get videoLanguage
   * @return videoLanguage
   */
  @javax.annotation.Nullable
  public String getVideoLanguage() {
    return videoLanguage;
  }

  public void setVideoLanguage(String videoLanguage) {
    this.videoLanguage = videoLanguage;
  }


  public VideoView videoProducer(String videoProducer) {
    this.videoProducer = videoProducer;
    return this;
  }

  /**
   * Get videoProducer
   * @return videoProducer
   */
  @javax.annotation.Nullable
  public String getVideoProducer() {
    return videoProducer;
  }

  public void setVideoProducer(String videoProducer) {
    this.videoProducer = videoProducer;
  }


  public VideoView videoSeries(String videoSeries) {
    this.videoSeries = videoSeries;
    return this;
  }

  /**
   * Get videoSeries
   * @return videoSeries
   */
  @javax.annotation.Nullable
  public String getVideoSeries() {
    return videoSeries;
  }

  public void setVideoSeries(String videoSeries) {
    this.videoSeries = videoSeries;
  }


  public VideoView videoStartupFailure(Boolean videoStartupFailure) {
    this.videoStartupFailure = videoStartupFailure;
    return this;
  }

  /**
   * Get videoStartupFailure
   * @return videoStartupFailure
   */
  @javax.annotation.Nullable
  public Boolean getVideoStartupFailure() {
    return videoStartupFailure;
  }

  public void setVideoStartupFailure(Boolean videoStartupFailure) {
    this.videoStartupFailure = videoStartupFailure;
  }


  public VideoView videoStartupPrerollLoadTime(Long videoStartupPrerollLoadTime) {
    this.videoStartupPrerollLoadTime = videoStartupPrerollLoadTime;
    return this;
  }

  /**
   * Get videoStartupPrerollLoadTime
   * @return videoStartupPrerollLoadTime
   */
  @javax.annotation.Nullable
  public Long getVideoStartupPrerollLoadTime() {
    return videoStartupPrerollLoadTime;
  }

  public void setVideoStartupPrerollLoadTime(Long videoStartupPrerollLoadTime) {
    this.videoStartupPrerollLoadTime = videoStartupPrerollLoadTime;
  }


  public VideoView videoStartupPrerollRequestTime(Long videoStartupPrerollRequestTime) {
    this.videoStartupPrerollRequestTime = videoStartupPrerollRequestTime;
    return this;
  }

  /**
   * Get videoStartupPrerollRequestTime
   * @return videoStartupPrerollRequestTime
   */
  @javax.annotation.Nullable
  public Long getVideoStartupPrerollRequestTime() {
    return videoStartupPrerollRequestTime;
  }

  public void setVideoStartupPrerollRequestTime(Long videoStartupPrerollRequestTime) {
    this.videoStartupPrerollRequestTime = videoStartupPrerollRequestTime;
  }


  public VideoView videoStreamType(String videoStreamType) {
    this.videoStreamType = videoStreamType;
    return this;
  }

  /**
   * Get videoStreamType
   * @return videoStreamType
   */
  @javax.annotation.Nullable
  public String getVideoStreamType() {
    return videoStreamType;
  }

  public void setVideoStreamType(String videoStreamType) {
    this.videoStreamType = videoStreamType;
  }


  public VideoView videoTitle(String videoTitle) {
    this.videoTitle = videoTitle;
    return this;
  }

  /**
   * Get videoTitle
   * @return videoTitle
   */
  @javax.annotation.Nullable
  public String getVideoTitle() {
    return videoTitle;
  }

  public void setVideoTitle(String videoTitle) {
    this.videoTitle = videoTitle;
  }


  public VideoView videoVariantId(String videoVariantId) {
    this.videoVariantId = videoVariantId;
    return this;
  }

  /**
   * Get videoVariantId
   * @return videoVariantId
   */
  @javax.annotation.Nullable
  public String getVideoVariantId() {
    return videoVariantId;
  }

  public void setVideoVariantId(String videoVariantId) {
    this.videoVariantId = videoVariantId;
  }


  public VideoView videoVariantName(String videoVariantName) {
    this.videoVariantName = videoVariantName;
    return this;
  }

  /**
   * Get videoVariantName
   * @return videoVariantName
   */
  @javax.annotation.Nullable
  public String getVideoVariantName() {
    return videoVariantName;
  }

  public void setVideoVariantName(String videoVariantName) {
    this.videoVariantName = videoVariantName;
  }


  public VideoView viewAverageRequestLatency(Long viewAverageRequestLatency) {
    this.viewAverageRequestLatency = viewAverageRequestLatency;
    return this;
  }

  /**
   * Get viewAverageRequestLatency
   * @return viewAverageRequestLatency
   */
  @javax.annotation.Nullable
  public Long getViewAverageRequestLatency() {
    return viewAverageRequestLatency;
  }

  public void setViewAverageRequestLatency(Long viewAverageRequestLatency) {
    this.viewAverageRequestLatency = viewAverageRequestLatency;
  }


  public VideoView viewAverageRequestThroughput(Long viewAverageRequestThroughput) {
    this.viewAverageRequestThroughput = viewAverageRequestThroughput;
    return this;
  }

  /**
   * Get viewAverageRequestThroughput
   * @return viewAverageRequestThroughput
   */
  @javax.annotation.Nullable
  public Long getViewAverageRequestThroughput() {
    return viewAverageRequestThroughput;
  }

  public void setViewAverageRequestThroughput(Long viewAverageRequestThroughput) {
    this.viewAverageRequestThroughput = viewAverageRequestThroughput;
  }


  public VideoView viewDrmType(String viewDrmType) {
    this.viewDrmType = viewDrmType;
    return this;
  }

  /**
   * Get viewDrmType
   * @return viewDrmType
   */
  @javax.annotation.Nullable
  public String getViewDrmType() {
    return viewDrmType;
  }

  public void setViewDrmType(String viewDrmType) {
    this.viewDrmType = viewDrmType;
  }


  public VideoView viewDroppedFrameCount(Long viewDroppedFrameCount) {
    this.viewDroppedFrameCount = viewDroppedFrameCount;
    return this;
  }

  /**
   * Get viewDroppedFrameCount
   * @return viewDroppedFrameCount
   */
  @javax.annotation.Nullable
  public Long getViewDroppedFrameCount() {
    return viewDroppedFrameCount;
  }

  public void setViewDroppedFrameCount(Long viewDroppedFrameCount) {
    this.viewDroppedFrameCount = viewDroppedFrameCount;
  }


  public VideoView viewEnd(String viewEnd) {
    this.viewEnd = viewEnd;
    return this;
  }

  /**
   * Get viewEnd
   * @return viewEnd
   */
  @javax.annotation.Nullable
  public String getViewEnd() {
    return viewEnd;
  }

  public void setViewEnd(String viewEnd) {
    this.viewEnd = viewEnd;
  }


  public VideoView viewErrorId(Integer viewErrorId) {
    this.viewErrorId = viewErrorId;
    return this;
  }

  /**
   * Get viewErrorId
   * @return viewErrorId
   */
  @javax.annotation.Nullable
  public Integer getViewErrorId() {
    return viewErrorId;
  }

  public void setViewErrorId(Integer viewErrorId) {
    this.viewErrorId = viewErrorId;
  }


  public VideoView viewHasAd(Boolean viewHasAd) {
    this.viewHasAd = viewHasAd;
    return this;
  }

  /**
   * Get viewHasAd
   * @return viewHasAd
   */
  @javax.annotation.Nullable
  public Boolean getViewHasAd() {
    return viewHasAd;
  }

  public void setViewHasAd(Boolean viewHasAd) {
    this.viewHasAd = viewHasAd;
  }


  public VideoView viewId(String viewId) {
    this.viewId = viewId;
    return this;
  }

  /**
   * Get viewId
   * @return viewId
   */
  @javax.annotation.Nullable
  public String getViewId() {
    return viewId;
  }

  public void setViewId(String viewId) {
    this.viewId = viewId;
  }


  public VideoView viewMaxDownscalePercentage(String viewMaxDownscalePercentage) {
    this.viewMaxDownscalePercentage = viewMaxDownscalePercentage;
    return this;
  }

  /**
   * Get viewMaxDownscalePercentage
   * @return viewMaxDownscalePercentage
   */
  @javax.annotation.Nullable
  public String getViewMaxDownscalePercentage() {
    return viewMaxDownscalePercentage;
  }

  public void setViewMaxDownscalePercentage(String viewMaxDownscalePercentage) {
    this.viewMaxDownscalePercentage = viewMaxDownscalePercentage;
  }


  public VideoView viewMaxPlayheadPosition(String viewMaxPlayheadPosition) {
    this.viewMaxPlayheadPosition = viewMaxPlayheadPosition;
    return this;
  }

  /**
   * Get viewMaxPlayheadPosition
   * @return viewMaxPlayheadPosition
   */
  @javax.annotation.Nullable
  public String getViewMaxPlayheadPosition() {
    return viewMaxPlayheadPosition;
  }

  public void setViewMaxPlayheadPosition(String viewMaxPlayheadPosition) {
    this.viewMaxPlayheadPosition = viewMaxPlayheadPosition;
  }


  public VideoView viewMaxRequestLatency(Long viewMaxRequestLatency) {
    this.viewMaxRequestLatency = viewMaxRequestLatency;
    return this;
  }

  /**
   * Get viewMaxRequestLatency
   * @return viewMaxRequestLatency
   */
  @javax.annotation.Nullable
  public Long getViewMaxRequestLatency() {
    return viewMaxRequestLatency;
  }

  public void setViewMaxRequestLatency(Long viewMaxRequestLatency) {
    this.viewMaxRequestLatency = viewMaxRequestLatency;
  }


  public VideoView viewMaxUpscalePercentage(String viewMaxUpscalePercentage) {
    this.viewMaxUpscalePercentage = viewMaxUpscalePercentage;
    return this;
  }

  /**
   * Get viewMaxUpscalePercentage
   * @return viewMaxUpscalePercentage
   */
  @javax.annotation.Nullable
  public String getViewMaxUpscalePercentage() {
    return viewMaxUpscalePercentage;
  }

  public void setViewMaxUpscalePercentage(String viewMaxUpscalePercentage) {
    this.viewMaxUpscalePercentage = viewMaxUpscalePercentage;
  }


  public VideoView viewPlayingTime(String viewPlayingTime) {
    this.viewPlayingTime = viewPlayingTime;
    return this;
  }

  /**
   * Get viewPlayingTime
   * @return viewPlayingTime
   */
  @javax.annotation.Nullable
  public String getViewPlayingTime() {
    return viewPlayingTime;
  }

  public void setViewPlayingTime(String viewPlayingTime) {
    this.viewPlayingTime = viewPlayingTime;
  }


  public VideoView viewSeekCount(Long viewSeekCount) {
    this.viewSeekCount = viewSeekCount;
    return this;
  }

  /**
   * Get viewSeekCount
   * @return viewSeekCount
   */
  @javax.annotation.Nullable
  public Long getViewSeekCount() {
    return viewSeekCount;
  }

  public void setViewSeekCount(Long viewSeekCount) {
    this.viewSeekCount = viewSeekCount;
  }


  public VideoView viewSeekDuration(Long viewSeekDuration) {
    this.viewSeekDuration = viewSeekDuration;
    return this;
  }

  /**
   * Get viewSeekDuration
   * @return viewSeekDuration
   */
  @javax.annotation.Nullable
  public Long getViewSeekDuration() {
    return viewSeekDuration;
  }

  public void setViewSeekDuration(Long viewSeekDuration) {
    this.viewSeekDuration = viewSeekDuration;
  }


  public VideoView viewSessionId(String viewSessionId) {
    this.viewSessionId = viewSessionId;
    return this;
  }

  /**
   * Get viewSessionId
   * @return viewSessionId
   */
  @javax.annotation.Nullable
  public String getViewSessionId() {
    return viewSessionId;
  }

  public void setViewSessionId(String viewSessionId) {
    this.viewSessionId = viewSessionId;
  }


  public VideoView viewStart(String viewStart) {
    this.viewStart = viewStart;
    return this;
  }

  /**
   * Get viewStart
   * @return viewStart
   */
  @javax.annotation.Nullable
  public String getViewStart() {
    return viewStart;
  }

  public void setViewStart(String viewStart) {
    this.viewStart = viewStart;
  }


  public VideoView viewTotalContentPlaybackTime(Long viewTotalContentPlaybackTime) {
    this.viewTotalContentPlaybackTime = viewTotalContentPlaybackTime;
    return this;
  }

  /**
   * Get viewTotalContentPlaybackTime
   * @return viewTotalContentPlaybackTime
   */
  @javax.annotation.Nullable
  public Long getViewTotalContentPlaybackTime() {
    return viewTotalContentPlaybackTime;
  }

  public void setViewTotalContentPlaybackTime(Long viewTotalContentPlaybackTime) {
    this.viewTotalContentPlaybackTime = viewTotalContentPlaybackTime;
  }


  public VideoView viewTotalDownscaling(String viewTotalDownscaling) {
    this.viewTotalDownscaling = viewTotalDownscaling;
    return this;
  }

  /**
   * Get viewTotalDownscaling
   * @return viewTotalDownscaling
   */
  @javax.annotation.Nullable
  public String getViewTotalDownscaling() {
    return viewTotalDownscaling;
  }

  public void setViewTotalDownscaling(String viewTotalDownscaling) {
    this.viewTotalDownscaling = viewTotalDownscaling;
  }


  public VideoView viewTotalUpscaling(String viewTotalUpscaling) {
    this.viewTotalUpscaling = viewTotalUpscaling;
    return this;
  }

  /**
   * Get viewTotalUpscaling
   * @return viewTotalUpscaling
   */
  @javax.annotation.Nullable
  public String getViewTotalUpscaling() {
    return viewTotalUpscaling;
  }

  public void setViewTotalUpscaling(String viewTotalUpscaling) {
    this.viewTotalUpscaling = viewTotalUpscaling;
  }


  public VideoView viewerApplicationEngine(String viewerApplicationEngine) {
    this.viewerApplicationEngine = viewerApplicationEngine;
    return this;
  }

  /**
   * Get viewerApplicationEngine
   * @return viewerApplicationEngine
   */
  @javax.annotation.Nullable
  public String getViewerApplicationEngine() {
    return viewerApplicationEngine;
  }

  public void setViewerApplicationEngine(String viewerApplicationEngine) {
    this.viewerApplicationEngine = viewerApplicationEngine;
  }


  public VideoView viewerApplicationName(String viewerApplicationName) {
    this.viewerApplicationName = viewerApplicationName;
    return this;
  }

  /**
   * Get viewerApplicationName
   * @return viewerApplicationName
   */
  @javax.annotation.Nullable
  public String getViewerApplicationName() {
    return viewerApplicationName;
  }

  public void setViewerApplicationName(String viewerApplicationName) {
    this.viewerApplicationName = viewerApplicationName;
  }


  public VideoView viewerApplicationVersion(String viewerApplicationVersion) {
    this.viewerApplicationVersion = viewerApplicationVersion;
    return this;
  }

  /**
   * Get viewerApplicationVersion
   * @return viewerApplicationVersion
   */
  @javax.annotation.Nullable
  public String getViewerApplicationVersion() {
    return viewerApplicationVersion;
  }

  public void setViewerApplicationVersion(String viewerApplicationVersion) {
    this.viewerApplicationVersion = viewerApplicationVersion;
  }


  public VideoView viewerConnectionType(String viewerConnectionType) {
    this.viewerConnectionType = viewerConnectionType;
    return this;
  }

  /**
   * Get viewerConnectionType
   * @return viewerConnectionType
   */
  @javax.annotation.Nullable
  public String getViewerConnectionType() {
    return viewerConnectionType;
  }

  public void setViewerConnectionType(String viewerConnectionType) {
    this.viewerConnectionType = viewerConnectionType;
  }


  public VideoView viewerDeviceCategory(String viewerDeviceCategory) {
    this.viewerDeviceCategory = viewerDeviceCategory;
    return this;
  }

  /**
   * Get viewerDeviceCategory
   * @return viewerDeviceCategory
   */
  @javax.annotation.Nullable
  public String getViewerDeviceCategory() {
    return viewerDeviceCategory;
  }

  public void setViewerDeviceCategory(String viewerDeviceCategory) {
    this.viewerDeviceCategory = viewerDeviceCategory;
  }


  public VideoView viewerDeviceManufacturer(String viewerDeviceManufacturer) {
    this.viewerDeviceManufacturer = viewerDeviceManufacturer;
    return this;
  }

  /**
   * Get viewerDeviceManufacturer
   * @return viewerDeviceManufacturer
   */
  @javax.annotation.Nullable
  public String getViewerDeviceManufacturer() {
    return viewerDeviceManufacturer;
  }

  public void setViewerDeviceManufacturer(String viewerDeviceManufacturer) {
    this.viewerDeviceManufacturer = viewerDeviceManufacturer;
  }


  public VideoView viewerDeviceModel(String viewerDeviceModel) {
    this.viewerDeviceModel = viewerDeviceModel;
    return this;
  }

  /**
   * Get viewerDeviceModel
   * @return viewerDeviceModel
   */
  @javax.annotation.Nullable
  public String getViewerDeviceModel() {
    return viewerDeviceModel;
  }

  public void setViewerDeviceModel(String viewerDeviceModel) {
    this.viewerDeviceModel = viewerDeviceModel;
  }


  public VideoView viewerDeviceName(String viewerDeviceName) {
    this.viewerDeviceName = viewerDeviceName;
    return this;
  }

  /**
   * Get viewerDeviceName
   * @return viewerDeviceName
   */
  @javax.annotation.Nullable
  public String getViewerDeviceName() {
    return viewerDeviceName;
  }

  public void setViewerDeviceName(String viewerDeviceName) {
    this.viewerDeviceName = viewerDeviceName;
  }


  public VideoView viewerExperienceScore(String viewerExperienceScore) {
    this.viewerExperienceScore = viewerExperienceScore;
    return this;
  }

  /**
   * Get viewerExperienceScore
   * @return viewerExperienceScore
   */
  @javax.annotation.Nullable
  public String getViewerExperienceScore() {
    return viewerExperienceScore;
  }

  public void setViewerExperienceScore(String viewerExperienceScore) {
    this.viewerExperienceScore = viewerExperienceScore;
  }


  public VideoView viewerOsArchitecture(String viewerOsArchitecture) {
    this.viewerOsArchitecture = viewerOsArchitecture;
    return this;
  }

  /**
   * Get viewerOsArchitecture
   * @return viewerOsArchitecture
   */
  @javax.annotation.Nullable
  public String getViewerOsArchitecture() {
    return viewerOsArchitecture;
  }

  public void setViewerOsArchitecture(String viewerOsArchitecture) {
    this.viewerOsArchitecture = viewerOsArchitecture;
  }


  public VideoView viewerOsFamily(String viewerOsFamily) {
    this.viewerOsFamily = viewerOsFamily;
    return this;
  }

  /**
   * Get viewerOsFamily
   * @return viewerOsFamily
   */
  @javax.annotation.Nullable
  public String getViewerOsFamily() {
    return viewerOsFamily;
  }

  public void setViewerOsFamily(String viewerOsFamily) {
    this.viewerOsFamily = viewerOsFamily;
  }


  public VideoView viewerOsVersion(String viewerOsVersion) {
    this.viewerOsVersion = viewerOsVersion;
    return this;
  }

  /**
   * Get viewerOsVersion
   * @return viewerOsVersion
   */
  @javax.annotation.Nullable
  public String getViewerOsVersion() {
    return viewerOsVersion;
  }

  public void setViewerOsVersion(String viewerOsVersion) {
    this.viewerOsVersion = viewerOsVersion;
  }


  public VideoView viewerUserAgent(String viewerUserAgent) {
    this.viewerUserAgent = viewerUserAgent;
    return this;
  }

  /**
   * Get viewerUserAgent
   * @return viewerUserAgent
   */
  @javax.annotation.Nullable
  public String getViewerUserAgent() {
    return viewerUserAgent;
  }

  public void setViewerUserAgent(String viewerUserAgent) {
    this.viewerUserAgent = viewerUserAgent;
  }


  public VideoView viewerUserId(String viewerUserId) {
    this.viewerUserId = viewerUserId;
    return this;
  }

  /**
   * Get viewerUserId
   * @return viewerUserId
   */
  @javax.annotation.Nullable
  public String getViewerUserId() {
    return viewerUserId;
  }

  public void setViewerUserId(String viewerUserId) {
    this.viewerUserId = viewerUserId;
  }


  public VideoView watchTime(Long watchTime) {
    this.watchTime = watchTime;
    return this;
  }

  /**
   * Get watchTime
   * @return watchTime
   */
  @javax.annotation.Nullable
  public Long getWatchTime() {
    return watchTime;
  }

  public void setWatchTime(Long watchTime) {
    this.watchTime = watchTime;
  }


  public VideoView watched(Boolean watched) {
    this.watched = watched;
    return this;
  }

  /**
   * Get watched
   * @return watched
   */
  @javax.annotation.Nullable
  public Boolean getWatched() {
    return watched;
  }

  public void setWatched(Boolean watched) {
    this.watched = watched;
  }


  public VideoView weightedAverageBitrate(Long weightedAverageBitrate) {
    this.weightedAverageBitrate = weightedAverageBitrate;
    return this;
  }

  /**
   * Get weightedAverageBitrate
   * @return weightedAverageBitrate
   */
  @javax.annotation.Nullable
  public Long getWeightedAverageBitrate() {
    return weightedAverageBitrate;
  }

  public void setWeightedAverageBitrate(Long weightedAverageBitrate) {
    this.weightedAverageBitrate = weightedAverageBitrate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VideoView videoView = (VideoView) o;
    return Objects.equals(this.asn, videoView.asn) &&
        Objects.equals(this.asnName, videoView.asnName) &&
        Objects.equals(this.assetId, videoView.assetId) &&
        Objects.equals(this.bufferingCount, videoView.bufferingCount) &&
        Objects.equals(this.bufferingDuration, videoView.bufferingDuration) &&
        Objects.equals(this.bufferingRate, videoView.bufferingRate) &&
        Objects.equals(this.cdn, videoView.cdn) &&
        Objects.equals(this.city, videoView.city) &&
        Objects.equals(this.continentCode, videoView.continentCode) &&
        Objects.equals(this.countryCode, videoView.countryCode) &&
        Objects.equals(this.countryName, videoView.countryName) &&
        Objects.equals(this.custom1, videoView.custom1) &&
        Objects.equals(this.custom10, videoView.custom10) &&
        Objects.equals(this.custom2, videoView.custom2) &&
        Objects.equals(this.custom3, videoView.custom3) &&
        Objects.equals(this.custom4, videoView.custom4) &&
        Objects.equals(this.custom5, videoView.custom5) &&
        Objects.equals(this.custom6, videoView.custom6) &&
        Objects.equals(this.custom7, videoView.custom7) &&
        Objects.equals(this.custom8, videoView.custom8) &&
        Objects.equals(this.custom9, videoView.custom9) &&
        Objects.equals(this.environmentId, videoView.environmentId) &&
        Objects.equals(this.errorTypeId, videoView.errorTypeId) &&
        Objects.equals(this.events, videoView.events) &&
        Objects.equals(this.exitBeforeVideoStart, videoView.exitBeforeVideoStart) &&
        Objects.equals(this.experimentName, videoView.experimentName) &&
        Objects.equals(this.id, videoView.id) &&
        Objects.equals(this.insertedAt, videoView.insertedAt) &&
        Objects.equals(this.isp, videoView.isp) &&
        Objects.equals(this.latitude, videoView.latitude) &&
        Objects.equals(this.liveStreamId, videoView.liveStreamId) &&
        Objects.equals(this.liveStreamLatency, videoView.liveStreamLatency) &&
        Objects.equals(this.longitude, videoView.longitude) &&
        Objects.equals(this.metro, videoView.metro) &&
        Objects.equals(this.muxApiVersion, videoView.muxApiVersion) &&
        Objects.equals(this.muxEmbed, videoView.muxEmbed) &&
        Objects.equals(this.muxEmbedVersion, videoView.muxEmbedVersion) &&
        Objects.equals(this.muxViewerId, videoView.muxViewerId) &&
        Objects.equals(this.pageLoadTime, videoView.pageLoadTime) &&
        Objects.equals(this.pageType, videoView.pageType) &&
        Objects.equals(this.pageUrl, videoView.pageUrl) &&
        Objects.equals(this.platformDescription, videoView.platformDescription) &&
        Objects.equals(this.platformSummary, videoView.platformSummary) &&
        Objects.equals(this.playbackId, videoView.playbackId) &&
        Objects.equals(this.playbackScore, videoView.playbackScore) &&
        Objects.equals(this.playerAutoplay, videoView.playerAutoplay) &&
        Objects.equals(this.playerErrorCode, videoView.playerErrorCode) &&
        Objects.equals(this.playerErrorContext, videoView.playerErrorContext) &&
        Objects.equals(this.playerErrorMessage, videoView.playerErrorMessage) &&
        Objects.equals(this.playerHeight, videoView.playerHeight) &&
        Objects.equals(this.playerInstanceId, videoView.playerInstanceId) &&
        Objects.equals(this.playerLanguage, videoView.playerLanguage) &&
        Objects.equals(this.playerLoadTime, videoView.playerLoadTime) &&
        Objects.equals(this.playerMuxPluginName, videoView.playerMuxPluginName) &&
        Objects.equals(this.playerMuxPluginVersion, videoView.playerMuxPluginVersion) &&
        Objects.equals(this.playerName, videoView.playerName) &&
        Objects.equals(this.playerPoster, videoView.playerPoster) &&
        Objects.equals(this.playerPreload, videoView.playerPreload) &&
        Objects.equals(this.playerRemotePlayed, videoView.playerRemotePlayed) &&
        Objects.equals(this.playerSoftware, videoView.playerSoftware) &&
        Objects.equals(this.playerSoftwareVersion, videoView.playerSoftwareVersion) &&
        Objects.equals(this.playerSourceDomain, videoView.playerSourceDomain) &&
        Objects.equals(this.playerSourceDuration, videoView.playerSourceDuration) &&
        Objects.equals(this.playerSourceHeight, videoView.playerSourceHeight) &&
        Objects.equals(this.playerSourceHostName, videoView.playerSourceHostName) &&
        Objects.equals(this.playerSourceStreamType, videoView.playerSourceStreamType) &&
        Objects.equals(this.playerSourceType, videoView.playerSourceType) &&
        Objects.equals(this.playerSourceUrl, videoView.playerSourceUrl) &&
        Objects.equals(this.playerSourceWidth, videoView.playerSourceWidth) &&
        Objects.equals(this.playerStartupTime, videoView.playerStartupTime) &&
        Objects.equals(this.playerVersion, videoView.playerVersion) &&
        Objects.equals(this.playerViewCount, videoView.playerViewCount) &&
        Objects.equals(this.playerWidth, videoView.playerWidth) &&
        Objects.equals(this.prerollAdAssetHostname, videoView.prerollAdAssetHostname) &&
        Objects.equals(this.prerollAdTagHostname, videoView.prerollAdTagHostname) &&
        Objects.equals(this.prerollPlayed, videoView.prerollPlayed) &&
        Objects.equals(this.prerollRequested, videoView.prerollRequested) &&
        Objects.equals(this.propertyId, videoView.propertyId) &&
        Objects.equals(this.qualityScore, videoView.qualityScore) &&
        Objects.equals(this.rebufferPercentage, videoView.rebufferPercentage) &&
        Objects.equals(this.rebufferingScore, videoView.rebufferingScore) &&
        Objects.equals(this.region, videoView.region) &&
        Objects.equals(this.requestsForFirstPreroll, videoView.requestsForFirstPreroll) &&
        Objects.equals(this.sessionId, videoView.sessionId) &&
        Objects.equals(this.shortTime, videoView.shortTime) &&
        Objects.equals(this.startupScore, videoView.startupScore) &&
        Objects.equals(this.subPropertyId, videoView.subPropertyId) &&
        Objects.equals(this.timeToFirstFrame, videoView.timeToFirstFrame) &&
        Objects.equals(this.updatedAt, videoView.updatedAt) &&
        Objects.equals(this.usedFullscreen, videoView.usedFullscreen) &&
        Objects.equals(this.videoContentType, videoView.videoContentType) &&
        Objects.equals(this.videoDuration, videoView.videoDuration) &&
        Objects.equals(this.videoEncodingVariant, videoView.videoEncodingVariant) &&
        Objects.equals(this.videoId, videoView.videoId) &&
        Objects.equals(this.videoLanguage, videoView.videoLanguage) &&
        Objects.equals(this.videoProducer, videoView.videoProducer) &&
        Objects.equals(this.videoSeries, videoView.videoSeries) &&
        Objects.equals(this.videoStartupFailure, videoView.videoStartupFailure) &&
        Objects.equals(this.videoStartupPrerollLoadTime, videoView.videoStartupPrerollLoadTime) &&
        Objects.equals(this.videoStartupPrerollRequestTime, videoView.videoStartupPrerollRequestTime) &&
        Objects.equals(this.videoStreamType, videoView.videoStreamType) &&
        Objects.equals(this.videoTitle, videoView.videoTitle) &&
        Objects.equals(this.videoVariantId, videoView.videoVariantId) &&
        Objects.equals(this.videoVariantName, videoView.videoVariantName) &&
        Objects.equals(this.viewAverageRequestLatency, videoView.viewAverageRequestLatency) &&
        Objects.equals(this.viewAverageRequestThroughput, videoView.viewAverageRequestThroughput) &&
        Objects.equals(this.viewDrmType, videoView.viewDrmType) &&
        Objects.equals(this.viewDroppedFrameCount, videoView.viewDroppedFrameCount) &&
        Objects.equals(this.viewEnd, videoView.viewEnd) &&
        Objects.equals(this.viewErrorId, videoView.viewErrorId) &&
        Objects.equals(this.viewHasAd, videoView.viewHasAd) &&
        Objects.equals(this.viewId, videoView.viewId) &&
        Objects.equals(this.viewMaxDownscalePercentage, videoView.viewMaxDownscalePercentage) &&
        Objects.equals(this.viewMaxPlayheadPosition, videoView.viewMaxPlayheadPosition) &&
        Objects.equals(this.viewMaxRequestLatency, videoView.viewMaxRequestLatency) &&
        Objects.equals(this.viewMaxUpscalePercentage, videoView.viewMaxUpscalePercentage) &&
        Objects.equals(this.viewPlayingTime, videoView.viewPlayingTime) &&
        Objects.equals(this.viewSeekCount, videoView.viewSeekCount) &&
        Objects.equals(this.viewSeekDuration, videoView.viewSeekDuration) &&
        Objects.equals(this.viewSessionId, videoView.viewSessionId) &&
        Objects.equals(this.viewStart, videoView.viewStart) &&
        Objects.equals(this.viewTotalContentPlaybackTime, videoView.viewTotalContentPlaybackTime) &&
        Objects.equals(this.viewTotalDownscaling, videoView.viewTotalDownscaling) &&
        Objects.equals(this.viewTotalUpscaling, videoView.viewTotalUpscaling) &&
        Objects.equals(this.viewerApplicationEngine, videoView.viewerApplicationEngine) &&
        Objects.equals(this.viewerApplicationName, videoView.viewerApplicationName) &&
        Objects.equals(this.viewerApplicationVersion, videoView.viewerApplicationVersion) &&
        Objects.equals(this.viewerConnectionType, videoView.viewerConnectionType) &&
        Objects.equals(this.viewerDeviceCategory, videoView.viewerDeviceCategory) &&
        Objects.equals(this.viewerDeviceManufacturer, videoView.viewerDeviceManufacturer) &&
        Objects.equals(this.viewerDeviceModel, videoView.viewerDeviceModel) &&
        Objects.equals(this.viewerDeviceName, videoView.viewerDeviceName) &&
        Objects.equals(this.viewerExperienceScore, videoView.viewerExperienceScore) &&
        Objects.equals(this.viewerOsArchitecture, videoView.viewerOsArchitecture) &&
        Objects.equals(this.viewerOsFamily, videoView.viewerOsFamily) &&
        Objects.equals(this.viewerOsVersion, videoView.viewerOsVersion) &&
        Objects.equals(this.viewerUserAgent, videoView.viewerUserAgent) &&
        Objects.equals(this.viewerUserId, videoView.viewerUserId) &&
        Objects.equals(this.watchTime, videoView.watchTime) &&
        Objects.equals(this.watched, videoView.watched) &&
        Objects.equals(this.weightedAverageBitrate, videoView.weightedAverageBitrate);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(asn, asnName, assetId, bufferingCount, bufferingDuration, bufferingRate, cdn, city, continentCode, countryCode, countryName, custom1, custom10, custom2, custom3, custom4, custom5, custom6, custom7, custom8, custom9, environmentId, errorTypeId, events, exitBeforeVideoStart, experimentName, id, insertedAt, isp, latitude, liveStreamId, liveStreamLatency, longitude, metro, muxApiVersion, muxEmbed, muxEmbedVersion, muxViewerId, pageLoadTime, pageType, pageUrl, platformDescription, platformSummary, playbackId, playbackScore, playerAutoplay, playerErrorCode, playerErrorContext, playerErrorMessage, playerHeight, playerInstanceId, playerLanguage, playerLoadTime, playerMuxPluginName, playerMuxPluginVersion, playerName, playerPoster, playerPreload, playerRemotePlayed, playerSoftware, playerSoftwareVersion, playerSourceDomain, playerSourceDuration, playerSourceHeight, playerSourceHostName, playerSourceStreamType, playerSourceType, playerSourceUrl, playerSourceWidth, playerStartupTime, playerVersion, playerViewCount, playerWidth, prerollAdAssetHostname, prerollAdTagHostname, prerollPlayed, prerollRequested, propertyId, qualityScore, rebufferPercentage, rebufferingScore, region, requestsForFirstPreroll, sessionId, shortTime, startupScore, subPropertyId, timeToFirstFrame, updatedAt, usedFullscreen, videoContentType, videoDuration, videoEncodingVariant, videoId, videoLanguage, videoProducer, videoSeries, videoStartupFailure, videoStartupPrerollLoadTime, videoStartupPrerollRequestTime, videoStreamType, videoTitle, videoVariantId, videoVariantName, viewAverageRequestLatency, viewAverageRequestThroughput, viewDrmType, viewDroppedFrameCount, viewEnd, viewErrorId, viewHasAd, viewId, viewMaxDownscalePercentage, viewMaxPlayheadPosition, viewMaxRequestLatency, viewMaxUpscalePercentage, viewPlayingTime, viewSeekCount, viewSeekDuration, viewSessionId, viewStart, viewTotalContentPlaybackTime, viewTotalDownscaling, viewTotalUpscaling, viewerApplicationEngine, viewerApplicationName, viewerApplicationVersion, viewerConnectionType, viewerDeviceCategory, viewerDeviceManufacturer, viewerDeviceModel, viewerDeviceName, viewerExperienceScore, viewerOsArchitecture, viewerOsFamily, viewerOsVersion, viewerUserAgent, viewerUserId, watchTime, watched, weightedAverageBitrate);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VideoView {\n");
    sb.append("    asn: ").append(toIndentedString(asn)).append("\n");
    sb.append("    asnName: ").append(toIndentedString(asnName)).append("\n");
    sb.append("    assetId: ").append(toIndentedString(assetId)).append("\n");
    sb.append("    bufferingCount: ").append(toIndentedString(bufferingCount)).append("\n");
    sb.append("    bufferingDuration: ").append(toIndentedString(bufferingDuration)).append("\n");
    sb.append("    bufferingRate: ").append(toIndentedString(bufferingRate)).append("\n");
    sb.append("    cdn: ").append(toIndentedString(cdn)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    continentCode: ").append(toIndentedString(continentCode)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    countryName: ").append(toIndentedString(countryName)).append("\n");
    sb.append("    custom1: ").append(toIndentedString(custom1)).append("\n");
    sb.append("    custom10: ").append(toIndentedString(custom10)).append("\n");
    sb.append("    custom2: ").append(toIndentedString(custom2)).append("\n");
    sb.append("    custom3: ").append(toIndentedString(custom3)).append("\n");
    sb.append("    custom4: ").append(toIndentedString(custom4)).append("\n");
    sb.append("    custom5: ").append(toIndentedString(custom5)).append("\n");
    sb.append("    custom6: ").append(toIndentedString(custom6)).append("\n");
    sb.append("    custom7: ").append(toIndentedString(custom7)).append("\n");
    sb.append("    custom8: ").append(toIndentedString(custom8)).append("\n");
    sb.append("    custom9: ").append(toIndentedString(custom9)).append("\n");
    sb.append("    environmentId: ").append(toIndentedString(environmentId)).append("\n");
    sb.append("    errorTypeId: ").append(toIndentedString(errorTypeId)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    exitBeforeVideoStart: ").append(toIndentedString(exitBeforeVideoStart)).append("\n");
    sb.append("    experimentName: ").append(toIndentedString(experimentName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    insertedAt: ").append(toIndentedString(insertedAt)).append("\n");
    sb.append("    isp: ").append(toIndentedString(isp)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    liveStreamId: ").append(toIndentedString(liveStreamId)).append("\n");
    sb.append("    liveStreamLatency: ").append(toIndentedString(liveStreamLatency)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    metro: ").append(toIndentedString(metro)).append("\n");
    sb.append("    muxApiVersion: ").append(toIndentedString(muxApiVersion)).append("\n");
    sb.append("    muxEmbed: ").append(toIndentedString(muxEmbed)).append("\n");
    sb.append("    muxEmbedVersion: ").append(toIndentedString(muxEmbedVersion)).append("\n");
    sb.append("    muxViewerId: ").append(toIndentedString(muxViewerId)).append("\n");
    sb.append("    pageLoadTime: ").append(toIndentedString(pageLoadTime)).append("\n");
    sb.append("    pageType: ").append(toIndentedString(pageType)).append("\n");
    sb.append("    pageUrl: ").append(toIndentedString(pageUrl)).append("\n");
    sb.append("    platformDescription: ").append(toIndentedString(platformDescription)).append("\n");
    sb.append("    platformSummary: ").append(toIndentedString(platformSummary)).append("\n");
    sb.append("    playbackId: ").append(toIndentedString(playbackId)).append("\n");
    sb.append("    playbackScore: ").append(toIndentedString(playbackScore)).append("\n");
    sb.append("    playerAutoplay: ").append(toIndentedString(playerAutoplay)).append("\n");
    sb.append("    playerErrorCode: ").append(toIndentedString(playerErrorCode)).append("\n");
    sb.append("    playerErrorContext: ").append(toIndentedString(playerErrorContext)).append("\n");
    sb.append("    playerErrorMessage: ").append(toIndentedString(playerErrorMessage)).append("\n");
    sb.append("    playerHeight: ").append(toIndentedString(playerHeight)).append("\n");
    sb.append("    playerInstanceId: ").append(toIndentedString(playerInstanceId)).append("\n");
    sb.append("    playerLanguage: ").append(toIndentedString(playerLanguage)).append("\n");
    sb.append("    playerLoadTime: ").append(toIndentedString(playerLoadTime)).append("\n");
    sb.append("    playerMuxPluginName: ").append(toIndentedString(playerMuxPluginName)).append("\n");
    sb.append("    playerMuxPluginVersion: ").append(toIndentedString(playerMuxPluginVersion)).append("\n");
    sb.append("    playerName: ").append(toIndentedString(playerName)).append("\n");
    sb.append("    playerPoster: ").append(toIndentedString(playerPoster)).append("\n");
    sb.append("    playerPreload: ").append(toIndentedString(playerPreload)).append("\n");
    sb.append("    playerRemotePlayed: ").append(toIndentedString(playerRemotePlayed)).append("\n");
    sb.append("    playerSoftware: ").append(toIndentedString(playerSoftware)).append("\n");
    sb.append("    playerSoftwareVersion: ").append(toIndentedString(playerSoftwareVersion)).append("\n");
    sb.append("    playerSourceDomain: ").append(toIndentedString(playerSourceDomain)).append("\n");
    sb.append("    playerSourceDuration: ").append(toIndentedString(playerSourceDuration)).append("\n");
    sb.append("    playerSourceHeight: ").append(toIndentedString(playerSourceHeight)).append("\n");
    sb.append("    playerSourceHostName: ").append(toIndentedString(playerSourceHostName)).append("\n");
    sb.append("    playerSourceStreamType: ").append(toIndentedString(playerSourceStreamType)).append("\n");
    sb.append("    playerSourceType: ").append(toIndentedString(playerSourceType)).append("\n");
    sb.append("    playerSourceUrl: ").append(toIndentedString(playerSourceUrl)).append("\n");
    sb.append("    playerSourceWidth: ").append(toIndentedString(playerSourceWidth)).append("\n");
    sb.append("    playerStartupTime: ").append(toIndentedString(playerStartupTime)).append("\n");
    sb.append("    playerVersion: ").append(toIndentedString(playerVersion)).append("\n");
    sb.append("    playerViewCount: ").append(toIndentedString(playerViewCount)).append("\n");
    sb.append("    playerWidth: ").append(toIndentedString(playerWidth)).append("\n");
    sb.append("    prerollAdAssetHostname: ").append(toIndentedString(prerollAdAssetHostname)).append("\n");
    sb.append("    prerollAdTagHostname: ").append(toIndentedString(prerollAdTagHostname)).append("\n");
    sb.append("    prerollPlayed: ").append(toIndentedString(prerollPlayed)).append("\n");
    sb.append("    prerollRequested: ").append(toIndentedString(prerollRequested)).append("\n");
    sb.append("    propertyId: ").append(toIndentedString(propertyId)).append("\n");
    sb.append("    qualityScore: ").append(toIndentedString(qualityScore)).append("\n");
    sb.append("    rebufferPercentage: ").append(toIndentedString(rebufferPercentage)).append("\n");
    sb.append("    rebufferingScore: ").append(toIndentedString(rebufferingScore)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    requestsForFirstPreroll: ").append(toIndentedString(requestsForFirstPreroll)).append("\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    shortTime: ").append(toIndentedString(shortTime)).append("\n");
    sb.append("    startupScore: ").append(toIndentedString(startupScore)).append("\n");
    sb.append("    subPropertyId: ").append(toIndentedString(subPropertyId)).append("\n");
    sb.append("    timeToFirstFrame: ").append(toIndentedString(timeToFirstFrame)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    usedFullscreen: ").append(toIndentedString(usedFullscreen)).append("\n");
    sb.append("    videoContentType: ").append(toIndentedString(videoContentType)).append("\n");
    sb.append("    videoDuration: ").append(toIndentedString(videoDuration)).append("\n");
    sb.append("    videoEncodingVariant: ").append(toIndentedString(videoEncodingVariant)).append("\n");
    sb.append("    videoId: ").append(toIndentedString(videoId)).append("\n");
    sb.append("    videoLanguage: ").append(toIndentedString(videoLanguage)).append("\n");
    sb.append("    videoProducer: ").append(toIndentedString(videoProducer)).append("\n");
    sb.append("    videoSeries: ").append(toIndentedString(videoSeries)).append("\n");
    sb.append("    videoStartupFailure: ").append(toIndentedString(videoStartupFailure)).append("\n");
    sb.append("    videoStartupPrerollLoadTime: ").append(toIndentedString(videoStartupPrerollLoadTime)).append("\n");
    sb.append("    videoStartupPrerollRequestTime: ").append(toIndentedString(videoStartupPrerollRequestTime)).append("\n");
    sb.append("    videoStreamType: ").append(toIndentedString(videoStreamType)).append("\n");
    sb.append("    videoTitle: ").append(toIndentedString(videoTitle)).append("\n");
    sb.append("    videoVariantId: ").append(toIndentedString(videoVariantId)).append("\n");
    sb.append("    videoVariantName: ").append(toIndentedString(videoVariantName)).append("\n");
    sb.append("    viewAverageRequestLatency: ").append(toIndentedString(viewAverageRequestLatency)).append("\n");
    sb.append("    viewAverageRequestThroughput: ").append(toIndentedString(viewAverageRequestThroughput)).append("\n");
    sb.append("    viewDrmType: ").append(toIndentedString(viewDrmType)).append("\n");
    sb.append("    viewDroppedFrameCount: ").append(toIndentedString(viewDroppedFrameCount)).append("\n");
    sb.append("    viewEnd: ").append(toIndentedString(viewEnd)).append("\n");
    sb.append("    viewErrorId: ").append(toIndentedString(viewErrorId)).append("\n");
    sb.append("    viewHasAd: ").append(toIndentedString(viewHasAd)).append("\n");
    sb.append("    viewId: ").append(toIndentedString(viewId)).append("\n");
    sb.append("    viewMaxDownscalePercentage: ").append(toIndentedString(viewMaxDownscalePercentage)).append("\n");
    sb.append("    viewMaxPlayheadPosition: ").append(toIndentedString(viewMaxPlayheadPosition)).append("\n");
    sb.append("    viewMaxRequestLatency: ").append(toIndentedString(viewMaxRequestLatency)).append("\n");
    sb.append("    viewMaxUpscalePercentage: ").append(toIndentedString(viewMaxUpscalePercentage)).append("\n");
    sb.append("    viewPlayingTime: ").append(toIndentedString(viewPlayingTime)).append("\n");
    sb.append("    viewSeekCount: ").append(toIndentedString(viewSeekCount)).append("\n");
    sb.append("    viewSeekDuration: ").append(toIndentedString(viewSeekDuration)).append("\n");
    sb.append("    viewSessionId: ").append(toIndentedString(viewSessionId)).append("\n");
    sb.append("    viewStart: ").append(toIndentedString(viewStart)).append("\n");
    sb.append("    viewTotalContentPlaybackTime: ").append(toIndentedString(viewTotalContentPlaybackTime)).append("\n");
    sb.append("    viewTotalDownscaling: ").append(toIndentedString(viewTotalDownscaling)).append("\n");
    sb.append("    viewTotalUpscaling: ").append(toIndentedString(viewTotalUpscaling)).append("\n");
    sb.append("    viewerApplicationEngine: ").append(toIndentedString(viewerApplicationEngine)).append("\n");
    sb.append("    viewerApplicationName: ").append(toIndentedString(viewerApplicationName)).append("\n");
    sb.append("    viewerApplicationVersion: ").append(toIndentedString(viewerApplicationVersion)).append("\n");
    sb.append("    viewerConnectionType: ").append(toIndentedString(viewerConnectionType)).append("\n");
    sb.append("    viewerDeviceCategory: ").append(toIndentedString(viewerDeviceCategory)).append("\n");
    sb.append("    viewerDeviceManufacturer: ").append(toIndentedString(viewerDeviceManufacturer)).append("\n");
    sb.append("    viewerDeviceModel: ").append(toIndentedString(viewerDeviceModel)).append("\n");
    sb.append("    viewerDeviceName: ").append(toIndentedString(viewerDeviceName)).append("\n");
    sb.append("    viewerExperienceScore: ").append(toIndentedString(viewerExperienceScore)).append("\n");
    sb.append("    viewerOsArchitecture: ").append(toIndentedString(viewerOsArchitecture)).append("\n");
    sb.append("    viewerOsFamily: ").append(toIndentedString(viewerOsFamily)).append("\n");
    sb.append("    viewerOsVersion: ").append(toIndentedString(viewerOsVersion)).append("\n");
    sb.append("    viewerUserAgent: ").append(toIndentedString(viewerUserAgent)).append("\n");
    sb.append("    viewerUserId: ").append(toIndentedString(viewerUserId)).append("\n");
    sb.append("    watchTime: ").append(toIndentedString(watchTime)).append("\n");
    sb.append("    watched: ").append(toIndentedString(watched)).append("\n");
    sb.append("    weightedAverageBitrate: ").append(toIndentedString(weightedAverageBitrate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("asn");
    openapiFields.add("asn_name");
    openapiFields.add("asset_id");
    openapiFields.add("buffering_count");
    openapiFields.add("buffering_duration");
    openapiFields.add("buffering_rate");
    openapiFields.add("cdn");
    openapiFields.add("city");
    openapiFields.add("continent_code");
    openapiFields.add("country_code");
    openapiFields.add("country_name");
    openapiFields.add("custom_1");
    openapiFields.add("custom_10");
    openapiFields.add("custom_2");
    openapiFields.add("custom_3");
    openapiFields.add("custom_4");
    openapiFields.add("custom_5");
    openapiFields.add("custom_6");
    openapiFields.add("custom_7");
    openapiFields.add("custom_8");
    openapiFields.add("custom_9");
    openapiFields.add("environment_id");
    openapiFields.add("error_type_id");
    openapiFields.add("events");
    openapiFields.add("exit_before_video_start");
    openapiFields.add("experiment_name");
    openapiFields.add("id");
    openapiFields.add("inserted_at");
    openapiFields.add("isp");
    openapiFields.add("latitude");
    openapiFields.add("live_stream_id");
    openapiFields.add("live_stream_latency");
    openapiFields.add("longitude");
    openapiFields.add("metro");
    openapiFields.add("mux_api_version");
    openapiFields.add("mux_embed");
    openapiFields.add("mux_embed_version");
    openapiFields.add("mux_viewer_id");
    openapiFields.add("page_load_time");
    openapiFields.add("page_type");
    openapiFields.add("page_url");
    openapiFields.add("platform_description");
    openapiFields.add("platform_summary");
    openapiFields.add("playback_id");
    openapiFields.add("playback_score");
    openapiFields.add("player_autoplay");
    openapiFields.add("player_error_code");
    openapiFields.add("player_error_context");
    openapiFields.add("player_error_message");
    openapiFields.add("player_height");
    openapiFields.add("player_instance_id");
    openapiFields.add("player_language");
    openapiFields.add("player_load_time");
    openapiFields.add("player_mux_plugin_name");
    openapiFields.add("player_mux_plugin_version");
    openapiFields.add("player_name");
    openapiFields.add("player_poster");
    openapiFields.add("player_preload");
    openapiFields.add("player_remote_played");
    openapiFields.add("player_software");
    openapiFields.add("player_software_version");
    openapiFields.add("player_source_domain");
    openapiFields.add("player_source_duration");
    openapiFields.add("player_source_height");
    openapiFields.add("player_source_host_name");
    openapiFields.add("player_source_stream_type");
    openapiFields.add("player_source_type");
    openapiFields.add("player_source_url");
    openapiFields.add("player_source_width");
    openapiFields.add("player_startup_time");
    openapiFields.add("player_version");
    openapiFields.add("player_view_count");
    openapiFields.add("player_width");
    openapiFields.add("preroll_ad_asset_hostname");
    openapiFields.add("preroll_ad_tag_hostname");
    openapiFields.add("preroll_played");
    openapiFields.add("preroll_requested");
    openapiFields.add("property_id");
    openapiFields.add("quality_score");
    openapiFields.add("rebuffer_percentage");
    openapiFields.add("rebuffering_score");
    openapiFields.add("region");
    openapiFields.add("requests_for_first_preroll");
    openapiFields.add("session_id");
    openapiFields.add("short_time");
    openapiFields.add("startup_score");
    openapiFields.add("sub_property_id");
    openapiFields.add("time_to_first_frame");
    openapiFields.add("updated_at");
    openapiFields.add("used_fullscreen");
    openapiFields.add("video_content_type");
    openapiFields.add("video_duration");
    openapiFields.add("video_encoding_variant");
    openapiFields.add("video_id");
    openapiFields.add("video_language");
    openapiFields.add("video_producer");
    openapiFields.add("video_series");
    openapiFields.add("video_startup_failure");
    openapiFields.add("video_startup_preroll_load_time");
    openapiFields.add("video_startup_preroll_request_time");
    openapiFields.add("video_stream_type");
    openapiFields.add("video_title");
    openapiFields.add("video_variant_id");
    openapiFields.add("video_variant_name");
    openapiFields.add("view_average_request_latency");
    openapiFields.add("view_average_request_throughput");
    openapiFields.add("view_drm_type");
    openapiFields.add("view_dropped_frame_count");
    openapiFields.add("view_end");
    openapiFields.add("view_error_id");
    openapiFields.add("view_has_ad");
    openapiFields.add("view_id");
    openapiFields.add("view_max_downscale_percentage");
    openapiFields.add("view_max_playhead_position");
    openapiFields.add("view_max_request_latency");
    openapiFields.add("view_max_upscale_percentage");
    openapiFields.add("view_playing_time");
    openapiFields.add("view_seek_count");
    openapiFields.add("view_seek_duration");
    openapiFields.add("view_session_id");
    openapiFields.add("view_start");
    openapiFields.add("view_total_content_playback_time");
    openapiFields.add("view_total_downscaling");
    openapiFields.add("view_total_upscaling");
    openapiFields.add("viewer_application_engine");
    openapiFields.add("viewer_application_name");
    openapiFields.add("viewer_application_version");
    openapiFields.add("viewer_connection_type");
    openapiFields.add("viewer_device_category");
    openapiFields.add("viewer_device_manufacturer");
    openapiFields.add("viewer_device_model");
    openapiFields.add("viewer_device_name");
    openapiFields.add("viewer_experience_score");
    openapiFields.add("viewer_os_architecture");
    openapiFields.add("viewer_os_family");
    openapiFields.add("viewer_os_version");
    openapiFields.add("viewer_user_agent");
    openapiFields.add("viewer_user_id");
    openapiFields.add("watch_time");
    openapiFields.add("watched");
    openapiFields.add("weighted_average_bitrate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VideoView
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VideoView.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VideoView is not found in the empty JSON string", VideoView.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VideoView.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VideoView` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("asn_name") != null && !jsonObj.get("asn_name").isJsonNull()) && !jsonObj.get("asn_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `asn_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("asn_name").toString()));
      }
      if ((jsonObj.get("asset_id") != null && !jsonObj.get("asset_id").isJsonNull()) && !jsonObj.get("asset_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `asset_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("asset_id").toString()));
      }
      if ((jsonObj.get("buffering_rate") != null && !jsonObj.get("buffering_rate").isJsonNull()) && !jsonObj.get("buffering_rate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buffering_rate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buffering_rate").toString()));
      }
      if ((jsonObj.get("cdn") != null && !jsonObj.get("cdn").isJsonNull()) && !jsonObj.get("cdn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cdn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cdn").toString()));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("continent_code") != null && !jsonObj.get("continent_code").isJsonNull()) && !jsonObj.get("continent_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `continent_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("continent_code").toString()));
      }
      if ((jsonObj.get("country_code") != null && !jsonObj.get("country_code").isJsonNull()) && !jsonObj.get("country_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country_code").toString()));
      }
      if ((jsonObj.get("country_name") != null && !jsonObj.get("country_name").isJsonNull()) && !jsonObj.get("country_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country_name").toString()));
      }
      if ((jsonObj.get("custom_1") != null && !jsonObj.get("custom_1").isJsonNull()) && !jsonObj.get("custom_1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_1").toString()));
      }
      if ((jsonObj.get("custom_10") != null && !jsonObj.get("custom_10").isJsonNull()) && !jsonObj.get("custom_10").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_10` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_10").toString()));
      }
      if ((jsonObj.get("custom_2") != null && !jsonObj.get("custom_2").isJsonNull()) && !jsonObj.get("custom_2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_2").toString()));
      }
      if ((jsonObj.get("custom_3") != null && !jsonObj.get("custom_3").isJsonNull()) && !jsonObj.get("custom_3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_3").toString()));
      }
      if ((jsonObj.get("custom_4") != null && !jsonObj.get("custom_4").isJsonNull()) && !jsonObj.get("custom_4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_4").toString()));
      }
      if ((jsonObj.get("custom_5") != null && !jsonObj.get("custom_5").isJsonNull()) && !jsonObj.get("custom_5").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_5` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_5").toString()));
      }
      if ((jsonObj.get("custom_6") != null && !jsonObj.get("custom_6").isJsonNull()) && !jsonObj.get("custom_6").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_6` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_6").toString()));
      }
      if ((jsonObj.get("custom_7") != null && !jsonObj.get("custom_7").isJsonNull()) && !jsonObj.get("custom_7").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_7` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_7").toString()));
      }
      if ((jsonObj.get("custom_8") != null && !jsonObj.get("custom_8").isJsonNull()) && !jsonObj.get("custom_8").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_8` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_8").toString()));
      }
      if ((jsonObj.get("custom_9") != null && !jsonObj.get("custom_9").isJsonNull()) && !jsonObj.get("custom_9").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_9` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_9").toString()));
      }
      if ((jsonObj.get("environment_id") != null && !jsonObj.get("environment_id").isJsonNull()) && !jsonObj.get("environment_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `environment_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("environment_id").toString()));
      }
      if (jsonObj.get("events") != null && !jsonObj.get("events").isJsonNull()) {
        JsonArray jsonArrayevents = jsonObj.getAsJsonArray("events");
        if (jsonArrayevents != null) {
          // ensure the json data is an array
          if (!jsonObj.get("events").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `events` to be an array in the JSON string but got `%s`", jsonObj.get("events").toString()));
          }

          // validate the optional field `events` (array)
          for (int i = 0; i < jsonArrayevents.size(); i++) {
            VideoViewEvent.validateJsonElement(jsonArrayevents.get(i));
          };
        }
      }
      if ((jsonObj.get("experiment_name") != null && !jsonObj.get("experiment_name").isJsonNull()) && !jsonObj.get("experiment_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `experiment_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("experiment_name").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("inserted_at") != null && !jsonObj.get("inserted_at").isJsonNull()) && !jsonObj.get("inserted_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inserted_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inserted_at").toString()));
      }
      if ((jsonObj.get("isp") != null && !jsonObj.get("isp").isJsonNull()) && !jsonObj.get("isp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `isp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("isp").toString()));
      }
      if ((jsonObj.get("latitude") != null && !jsonObj.get("latitude").isJsonNull()) && !jsonObj.get("latitude").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `latitude` to be a primitive type in the JSON string but got `%s`", jsonObj.get("latitude").toString()));
      }
      if ((jsonObj.get("live_stream_id") != null && !jsonObj.get("live_stream_id").isJsonNull()) && !jsonObj.get("live_stream_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `live_stream_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("live_stream_id").toString()));
      }
      if ((jsonObj.get("longitude") != null && !jsonObj.get("longitude").isJsonNull()) && !jsonObj.get("longitude").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `longitude` to be a primitive type in the JSON string but got `%s`", jsonObj.get("longitude").toString()));
      }
      if ((jsonObj.get("metro") != null && !jsonObj.get("metro").isJsonNull()) && !jsonObj.get("metro").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `metro` to be a primitive type in the JSON string but got `%s`", jsonObj.get("metro").toString()));
      }
      if ((jsonObj.get("mux_api_version") != null && !jsonObj.get("mux_api_version").isJsonNull()) && !jsonObj.get("mux_api_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mux_api_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mux_api_version").toString()));
      }
      if ((jsonObj.get("mux_embed") != null && !jsonObj.get("mux_embed").isJsonNull()) && !jsonObj.get("mux_embed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mux_embed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mux_embed").toString()));
      }
      if ((jsonObj.get("mux_embed_version") != null && !jsonObj.get("mux_embed_version").isJsonNull()) && !jsonObj.get("mux_embed_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mux_embed_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mux_embed_version").toString()));
      }
      if ((jsonObj.get("mux_viewer_id") != null && !jsonObj.get("mux_viewer_id").isJsonNull()) && !jsonObj.get("mux_viewer_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mux_viewer_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mux_viewer_id").toString()));
      }
      if ((jsonObj.get("page_type") != null && !jsonObj.get("page_type").isJsonNull()) && !jsonObj.get("page_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `page_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("page_type").toString()));
      }
      if ((jsonObj.get("page_url") != null && !jsonObj.get("page_url").isJsonNull()) && !jsonObj.get("page_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `page_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("page_url").toString()));
      }
      if ((jsonObj.get("platform_description") != null && !jsonObj.get("platform_description").isJsonNull()) && !jsonObj.get("platform_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `platform_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("platform_description").toString()));
      }
      if ((jsonObj.get("platform_summary") != null && !jsonObj.get("platform_summary").isJsonNull()) && !jsonObj.get("platform_summary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `platform_summary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("platform_summary").toString()));
      }
      if ((jsonObj.get("playback_id") != null && !jsonObj.get("playback_id").isJsonNull()) && !jsonObj.get("playback_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `playback_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("playback_id").toString()));
      }
      if ((jsonObj.get("playback_score") != null && !jsonObj.get("playback_score").isJsonNull()) && !jsonObj.get("playback_score").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `playback_score` to be a primitive type in the JSON string but got `%s`", jsonObj.get("playback_score").toString()));
      }
      if ((jsonObj.get("player_error_code") != null && !jsonObj.get("player_error_code").isJsonNull()) && !jsonObj.get("player_error_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `player_error_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("player_error_code").toString()));
      }
      if ((jsonObj.get("player_error_context") != null && !jsonObj.get("player_error_context").isJsonNull()) && !jsonObj.get("player_error_context").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `player_error_context` to be a primitive type in the JSON string but got `%s`", jsonObj.get("player_error_context").toString()));
      }
      if ((jsonObj.get("player_error_message") != null && !jsonObj.get("player_error_message").isJsonNull()) && !jsonObj.get("player_error_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `player_error_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("player_error_message").toString()));
      }
      if ((jsonObj.get("player_instance_id") != null && !jsonObj.get("player_instance_id").isJsonNull()) && !jsonObj.get("player_instance_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `player_instance_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("player_instance_id").toString()));
      }
      if ((jsonObj.get("player_language") != null && !jsonObj.get("player_language").isJsonNull()) && !jsonObj.get("player_language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `player_language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("player_language").toString()));
      }
      if ((jsonObj.get("player_mux_plugin_name") != null && !jsonObj.get("player_mux_plugin_name").isJsonNull()) && !jsonObj.get("player_mux_plugin_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `player_mux_plugin_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("player_mux_plugin_name").toString()));
      }
      if ((jsonObj.get("player_mux_plugin_version") != null && !jsonObj.get("player_mux_plugin_version").isJsonNull()) && !jsonObj.get("player_mux_plugin_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `player_mux_plugin_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("player_mux_plugin_version").toString()));
      }
      if ((jsonObj.get("player_name") != null && !jsonObj.get("player_name").isJsonNull()) && !jsonObj.get("player_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `player_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("player_name").toString()));
      }
      if ((jsonObj.get("player_poster") != null && !jsonObj.get("player_poster").isJsonNull()) && !jsonObj.get("player_poster").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `player_poster` to be a primitive type in the JSON string but got `%s`", jsonObj.get("player_poster").toString()));
      }
      if ((jsonObj.get("player_software") != null && !jsonObj.get("player_software").isJsonNull()) && !jsonObj.get("player_software").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `player_software` to be a primitive type in the JSON string but got `%s`", jsonObj.get("player_software").toString()));
      }
      if ((jsonObj.get("player_software_version") != null && !jsonObj.get("player_software_version").isJsonNull()) && !jsonObj.get("player_software_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `player_software_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("player_software_version").toString()));
      }
      if ((jsonObj.get("player_source_domain") != null && !jsonObj.get("player_source_domain").isJsonNull()) && !jsonObj.get("player_source_domain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `player_source_domain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("player_source_domain").toString()));
      }
      if ((jsonObj.get("player_source_host_name") != null && !jsonObj.get("player_source_host_name").isJsonNull()) && !jsonObj.get("player_source_host_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `player_source_host_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("player_source_host_name").toString()));
      }
      if ((jsonObj.get("player_source_stream_type") != null && !jsonObj.get("player_source_stream_type").isJsonNull()) && !jsonObj.get("player_source_stream_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `player_source_stream_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("player_source_stream_type").toString()));
      }
      if ((jsonObj.get("player_source_type") != null && !jsonObj.get("player_source_type").isJsonNull()) && !jsonObj.get("player_source_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `player_source_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("player_source_type").toString()));
      }
      if ((jsonObj.get("player_source_url") != null && !jsonObj.get("player_source_url").isJsonNull()) && !jsonObj.get("player_source_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `player_source_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("player_source_url").toString()));
      }
      if ((jsonObj.get("player_version") != null && !jsonObj.get("player_version").isJsonNull()) && !jsonObj.get("player_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `player_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("player_version").toString()));
      }
      if ((jsonObj.get("preroll_ad_asset_hostname") != null && !jsonObj.get("preroll_ad_asset_hostname").isJsonNull()) && !jsonObj.get("preroll_ad_asset_hostname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preroll_ad_asset_hostname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preroll_ad_asset_hostname").toString()));
      }
      if ((jsonObj.get("preroll_ad_tag_hostname") != null && !jsonObj.get("preroll_ad_tag_hostname").isJsonNull()) && !jsonObj.get("preroll_ad_tag_hostname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preroll_ad_tag_hostname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preroll_ad_tag_hostname").toString()));
      }
      if ((jsonObj.get("quality_score") != null && !jsonObj.get("quality_score").isJsonNull()) && !jsonObj.get("quality_score").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `quality_score` to be a primitive type in the JSON string but got `%s`", jsonObj.get("quality_score").toString()));
      }
      if ((jsonObj.get("rebuffer_percentage") != null && !jsonObj.get("rebuffer_percentage").isJsonNull()) && !jsonObj.get("rebuffer_percentage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rebuffer_percentage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rebuffer_percentage").toString()));
      }
      if ((jsonObj.get("rebuffering_score") != null && !jsonObj.get("rebuffering_score").isJsonNull()) && !jsonObj.get("rebuffering_score").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rebuffering_score` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rebuffering_score").toString()));
      }
      if ((jsonObj.get("region") != null && !jsonObj.get("region").isJsonNull()) && !jsonObj.get("region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("region").toString()));
      }
      if ((jsonObj.get("session_id") != null && !jsonObj.get("session_id").isJsonNull()) && !jsonObj.get("session_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `session_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("session_id").toString()));
      }
      if ((jsonObj.get("short_time") != null && !jsonObj.get("short_time").isJsonNull()) && !jsonObj.get("short_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `short_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("short_time").toString()));
      }
      if ((jsonObj.get("startup_score") != null && !jsonObj.get("startup_score").isJsonNull()) && !jsonObj.get("startup_score").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startup_score` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startup_score").toString()));
      }
      if ((jsonObj.get("sub_property_id") != null && !jsonObj.get("sub_property_id").isJsonNull()) && !jsonObj.get("sub_property_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sub_property_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sub_property_id").toString()));
      }
      if ((jsonObj.get("updated_at") != null && !jsonObj.get("updated_at").isJsonNull()) && !jsonObj.get("updated_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updated_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updated_at").toString()));
      }
      if ((jsonObj.get("video_content_type") != null && !jsonObj.get("video_content_type").isJsonNull()) && !jsonObj.get("video_content_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `video_content_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("video_content_type").toString()));
      }
      if ((jsonObj.get("video_encoding_variant") != null && !jsonObj.get("video_encoding_variant").isJsonNull()) && !jsonObj.get("video_encoding_variant").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `video_encoding_variant` to be a primitive type in the JSON string but got `%s`", jsonObj.get("video_encoding_variant").toString()));
      }
      if ((jsonObj.get("video_id") != null && !jsonObj.get("video_id").isJsonNull()) && !jsonObj.get("video_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `video_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("video_id").toString()));
      }
      if ((jsonObj.get("video_language") != null && !jsonObj.get("video_language").isJsonNull()) && !jsonObj.get("video_language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `video_language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("video_language").toString()));
      }
      if ((jsonObj.get("video_producer") != null && !jsonObj.get("video_producer").isJsonNull()) && !jsonObj.get("video_producer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `video_producer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("video_producer").toString()));
      }
      if ((jsonObj.get("video_series") != null && !jsonObj.get("video_series").isJsonNull()) && !jsonObj.get("video_series").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `video_series` to be a primitive type in the JSON string but got `%s`", jsonObj.get("video_series").toString()));
      }
      if ((jsonObj.get("video_stream_type") != null && !jsonObj.get("video_stream_type").isJsonNull()) && !jsonObj.get("video_stream_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `video_stream_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("video_stream_type").toString()));
      }
      if ((jsonObj.get("video_title") != null && !jsonObj.get("video_title").isJsonNull()) && !jsonObj.get("video_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `video_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("video_title").toString()));
      }
      if ((jsonObj.get("video_variant_id") != null && !jsonObj.get("video_variant_id").isJsonNull()) && !jsonObj.get("video_variant_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `video_variant_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("video_variant_id").toString()));
      }
      if ((jsonObj.get("video_variant_name") != null && !jsonObj.get("video_variant_name").isJsonNull()) && !jsonObj.get("video_variant_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `video_variant_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("video_variant_name").toString()));
      }
      if ((jsonObj.get("view_drm_type") != null && !jsonObj.get("view_drm_type").isJsonNull()) && !jsonObj.get("view_drm_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `view_drm_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("view_drm_type").toString()));
      }
      if ((jsonObj.get("view_end") != null && !jsonObj.get("view_end").isJsonNull()) && !jsonObj.get("view_end").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `view_end` to be a primitive type in the JSON string but got `%s`", jsonObj.get("view_end").toString()));
      }
      if ((jsonObj.get("view_id") != null && !jsonObj.get("view_id").isJsonNull()) && !jsonObj.get("view_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `view_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("view_id").toString()));
      }
      if ((jsonObj.get("view_max_downscale_percentage") != null && !jsonObj.get("view_max_downscale_percentage").isJsonNull()) && !jsonObj.get("view_max_downscale_percentage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `view_max_downscale_percentage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("view_max_downscale_percentage").toString()));
      }
      if ((jsonObj.get("view_max_playhead_position") != null && !jsonObj.get("view_max_playhead_position").isJsonNull()) && !jsonObj.get("view_max_playhead_position").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `view_max_playhead_position` to be a primitive type in the JSON string but got `%s`", jsonObj.get("view_max_playhead_position").toString()));
      }
      if ((jsonObj.get("view_max_upscale_percentage") != null && !jsonObj.get("view_max_upscale_percentage").isJsonNull()) && !jsonObj.get("view_max_upscale_percentage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `view_max_upscale_percentage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("view_max_upscale_percentage").toString()));
      }
      if ((jsonObj.get("view_playing_time") != null && !jsonObj.get("view_playing_time").isJsonNull()) && !jsonObj.get("view_playing_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `view_playing_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("view_playing_time").toString()));
      }
      if ((jsonObj.get("view_session_id") != null && !jsonObj.get("view_session_id").isJsonNull()) && !jsonObj.get("view_session_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `view_session_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("view_session_id").toString()));
      }
      if ((jsonObj.get("view_start") != null && !jsonObj.get("view_start").isJsonNull()) && !jsonObj.get("view_start").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `view_start` to be a primitive type in the JSON string but got `%s`", jsonObj.get("view_start").toString()));
      }
      if ((jsonObj.get("view_total_downscaling") != null && !jsonObj.get("view_total_downscaling").isJsonNull()) && !jsonObj.get("view_total_downscaling").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `view_total_downscaling` to be a primitive type in the JSON string but got `%s`", jsonObj.get("view_total_downscaling").toString()));
      }
      if ((jsonObj.get("view_total_upscaling") != null && !jsonObj.get("view_total_upscaling").isJsonNull()) && !jsonObj.get("view_total_upscaling").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `view_total_upscaling` to be a primitive type in the JSON string but got `%s`", jsonObj.get("view_total_upscaling").toString()));
      }
      if ((jsonObj.get("viewer_application_engine") != null && !jsonObj.get("viewer_application_engine").isJsonNull()) && !jsonObj.get("viewer_application_engine").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `viewer_application_engine` to be a primitive type in the JSON string but got `%s`", jsonObj.get("viewer_application_engine").toString()));
      }
      if ((jsonObj.get("viewer_application_name") != null && !jsonObj.get("viewer_application_name").isJsonNull()) && !jsonObj.get("viewer_application_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `viewer_application_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("viewer_application_name").toString()));
      }
      if ((jsonObj.get("viewer_application_version") != null && !jsonObj.get("viewer_application_version").isJsonNull()) && !jsonObj.get("viewer_application_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `viewer_application_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("viewer_application_version").toString()));
      }
      if ((jsonObj.get("viewer_connection_type") != null && !jsonObj.get("viewer_connection_type").isJsonNull()) && !jsonObj.get("viewer_connection_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `viewer_connection_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("viewer_connection_type").toString()));
      }
      if ((jsonObj.get("viewer_device_category") != null && !jsonObj.get("viewer_device_category").isJsonNull()) && !jsonObj.get("viewer_device_category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `viewer_device_category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("viewer_device_category").toString()));
      }
      if ((jsonObj.get("viewer_device_manufacturer") != null && !jsonObj.get("viewer_device_manufacturer").isJsonNull()) && !jsonObj.get("viewer_device_manufacturer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `viewer_device_manufacturer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("viewer_device_manufacturer").toString()));
      }
      if ((jsonObj.get("viewer_device_model") != null && !jsonObj.get("viewer_device_model").isJsonNull()) && !jsonObj.get("viewer_device_model").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `viewer_device_model` to be a primitive type in the JSON string but got `%s`", jsonObj.get("viewer_device_model").toString()));
      }
      if ((jsonObj.get("viewer_device_name") != null && !jsonObj.get("viewer_device_name").isJsonNull()) && !jsonObj.get("viewer_device_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `viewer_device_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("viewer_device_name").toString()));
      }
      if ((jsonObj.get("viewer_experience_score") != null && !jsonObj.get("viewer_experience_score").isJsonNull()) && !jsonObj.get("viewer_experience_score").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `viewer_experience_score` to be a primitive type in the JSON string but got `%s`", jsonObj.get("viewer_experience_score").toString()));
      }
      if ((jsonObj.get("viewer_os_architecture") != null && !jsonObj.get("viewer_os_architecture").isJsonNull()) && !jsonObj.get("viewer_os_architecture").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `viewer_os_architecture` to be a primitive type in the JSON string but got `%s`", jsonObj.get("viewer_os_architecture").toString()));
      }
      if ((jsonObj.get("viewer_os_family") != null && !jsonObj.get("viewer_os_family").isJsonNull()) && !jsonObj.get("viewer_os_family").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `viewer_os_family` to be a primitive type in the JSON string but got `%s`", jsonObj.get("viewer_os_family").toString()));
      }
      if ((jsonObj.get("viewer_os_version") != null && !jsonObj.get("viewer_os_version").isJsonNull()) && !jsonObj.get("viewer_os_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `viewer_os_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("viewer_os_version").toString()));
      }
      if ((jsonObj.get("viewer_user_agent") != null && !jsonObj.get("viewer_user_agent").isJsonNull()) && !jsonObj.get("viewer_user_agent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `viewer_user_agent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("viewer_user_agent").toString()));
      }
      if ((jsonObj.get("viewer_user_id") != null && !jsonObj.get("viewer_user_id").isJsonNull()) && !jsonObj.get("viewer_user_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `viewer_user_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("viewer_user_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VideoView.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VideoView' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VideoView> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VideoView.class));

       return (TypeAdapter<T>) new TypeAdapter<VideoView>() {
           @Override
           public void write(JsonWriter out, VideoView value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VideoView read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VideoView given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VideoView
   * @throws IOException if the JSON string is invalid with respect to VideoView
   */
  public static VideoView fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VideoView.class);
  }

  /**
   * Convert an instance of VideoView to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

