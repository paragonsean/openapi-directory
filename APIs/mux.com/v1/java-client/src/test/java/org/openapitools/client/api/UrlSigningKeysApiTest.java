/*
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListSigningKeysResponse;
import org.openapitools.client.model.SigningKeyResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UrlSigningKeysApi
 */
@Disabled
public class UrlSigningKeysApiTest {

    private final UrlSigningKeysApi api = new UrlSigningKeysApi();

    /**
     * Create a URL signing key
     *
     * This route is now deprecated, please use the &#x60;Signing Keys&#x60; API. Creates a new signing key pair. When creating a new signing key, the API will generate a 2048-bit RSA key-pair and return the private key and a generated key-id; the public key will be stored at Mux to validate signed tokens.  Note: Any new access tokens authenticating this route will be required to have &#x60;System&#x60; level permissions. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createUrlSigningKeyTest() throws ApiException {
        SigningKeyResponse response = api.createUrlSigningKey()
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a URL signing key
     *
     * This route is now deprecated, please use the &#x60;Signing Keys&#x60; API. Deletes an existing signing key. Use with caution, as this will invalidate any existing signatures and no URLs can be signed using the key again.  Note: Any new access tokens authenticating this route will be required to have &#x60;System&#x60; level permissions. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteUrlSigningKeyTest() throws ApiException {
        String SIGNING_KEY_ID = null;
        api.deleteUrlSigningKey(SIGNING_KEY_ID)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve a URL signing key
     *
     * This route is now deprecated, please use the &#x60;Signing Keys&#x60; API. Retrieves the details of a URL signing key that has previously been created. Supply the unique signing key ID that was returned from your previous request, and Mux will return the corresponding signing key information. **The private key is not returned in this response.**  Note: Any new access tokens authenticating this route will be required to have &#x60;System&#x60; level permissions. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUrlSigningKeyTest() throws ApiException {
        String SIGNING_KEY_ID = null;
        SigningKeyResponse response = api.getUrlSigningKey(SIGNING_KEY_ID)
                .execute();
        // TODO: test validations
    }

    /**
     * List URL signing keys
     *
     * This route is now deprecated, please use the &#x60;Signing Keys&#x60; API. Returns a list of URL signing keys.  Note: Any new access tokens authenticating this route will be required to have &#x60;System&#x60; level permissions. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listUrlSigningKeysTest() throws ApiException {
        Integer limit = null;
        Integer page = null;
        ListSigningKeysResponse response = api.listUrlSigningKeys()
                .limit(limit)
                .page(page)
                .execute();
        // TODO: test validations
    }

}
