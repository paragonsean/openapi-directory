/*
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateTranscriptionVocabularyRequest;
import org.openapitools.client.model.ListTranscriptionVocabulariesResponse;
import org.openapitools.client.model.TranscriptionVocabularyResponse;
import org.openapitools.client.model.UpdateTranscriptionVocabularyRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TranscriptionVocabulariesApi
 */
@Disabled
public class TranscriptionVocabulariesApiTest {

    private final TranscriptionVocabulariesApi api = new TranscriptionVocabulariesApi();

    /**
     * Create a Transcription Vocabulary
     *
     * Create a new Transcription Vocabulary.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTranscriptionVocabularyTest() throws ApiException {
        CreateTranscriptionVocabularyRequest createTranscriptionVocabularyRequest = null;
        TranscriptionVocabularyResponse response = api.createTranscriptionVocabulary(createTranscriptionVocabularyRequest)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a Transcription Vocabulary
     *
     * Deletes a Transcription Vocabulary. The Transcription Vocabulary&#39;s ID will be disassociated from any live streams using it. Transcription Vocabularies can be deleted while associated live streams are active. However, the words and phrases in the deleted Transcription Vocabulary will remain attached to those streams while they are active.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTranscriptionVocabularyTest() throws ApiException {
        String TRANSCRIPTION_VOCABULARY_ID = null;
        api.deleteTranscriptionVocabulary(TRANSCRIPTION_VOCABULARY_ID)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve a Transcription Vocabulary
     *
     * Retrieves the details of a Transcription Vocabulary that has previously been created. Supply the unique Transcription Vocabulary ID and Mux will return the corresponding Transcription Vocabulary information. The same information is returned when creating a Transcription Vocabulary.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTranscriptionVocabularyTest() throws ApiException {
        String TRANSCRIPTION_VOCABULARY_ID = null;
        TranscriptionVocabularyResponse response = api.getTranscriptionVocabulary(TRANSCRIPTION_VOCABULARY_ID)
                .execute();
        // TODO: test validations
    }

    /**
     * List Transcription Vocabularies
     *
     * List all Transcription Vocabularies.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTranscriptionVocabulariesTest() throws ApiException {
        Integer limit = null;
        Integer page = null;
        ListTranscriptionVocabulariesResponse response = api.listTranscriptionVocabularies()
                .limit(limit)
                .page(page)
                .execute();
        // TODO: test validations
    }

    /**
     * Update a Transcription Vocabulary
     *
     * Updates the details of a previously-created Transcription Vocabulary. Updates to Transcription Vocabularies are allowed while associated live streams are active. However, updates will not be applied to those streams while they are active.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTranscriptionVocabularyTest() throws ApiException {
        String TRANSCRIPTION_VOCABULARY_ID = null;
        UpdateTranscriptionVocabularyRequest updateTranscriptionVocabularyRequest = null;
        TranscriptionVocabularyResponse response = api.updateTranscriptionVocabulary(TRANSCRIPTION_VOCABULARY_ID, updateTranscriptionVocabularyRequest)
                .execute();
        // TODO: test validations
    }

}
