/*
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListVideoViewsResponse;
import org.openapitools.client.model.VideoViewResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VideoViewsApi
 */
@Disabled
public class VideoViewsApiTest {

    private final VideoViewsApi api = new VideoViewsApi();

    /**
     * Get a Video View
     *
     * Returns the details of a video view.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVideoViewTest() throws ApiException {
        String VIDEO_VIEW_ID = null;
        VideoViewResponse response = api.getVideoView(VIDEO_VIEW_ID)
                .execute();
        // TODO: test validations
    }

    /**
     * List Video Views
     *
     * Returns a list of video views which match the filters and have a &#x60;view_end&#x60; within the specified timeframe.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listVideoViewsTest() throws ApiException {
        Integer limit = null;
        Integer page = null;
        String viewerId = null;
        Integer errorId = null;
        String orderDirection = null;
        List<String> filters = null;
        List<String> timeframe = null;
        ListVideoViewsResponse response = api.listVideoViews()
                .limit(limit)
                .page(page)
                .viewerId(viewerId)
                .errorId(errorId)
                .orderDirection(orderDirection)
                .filters(filters)
                .timeframe(timeframe)
                .execute();
        // TODO: test validations
    }

}
