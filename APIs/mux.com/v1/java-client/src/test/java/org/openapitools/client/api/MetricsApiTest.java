/*
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GetMetricTimeseriesDataResponse;
import org.openapitools.client.model.GetOverallValuesResponse;
import org.openapitools.client.model.ListAllMetricValuesResponse;
import org.openapitools.client.model.ListBreakdownValuesResponse;
import org.openapitools.client.model.ListInsightsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MetricsApi
 */
@Disabled
public class MetricsApiTest {

    private final MetricsApi api = new MetricsApi();

    /**
     * Get metric timeseries data
     *
     * Returns timeseries data for a specific metric.  Each interval represented in the data array contains an array with the following values:   * the first element is the interval time   * the second element is the calculated metric value   * the third element is the number of views in the interval that have a valid metric value 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMetricTimeseriesDataTest() throws ApiException {
        String METRIC_ID = null;
        List<String> timeframe = null;
        List<String> filters = null;
        String measurement = null;
        String orderDirection = null;
        String groupBy = null;
        GetMetricTimeseriesDataResponse response = api.getMetricTimeseriesData(METRIC_ID)
                .timeframe(timeframe)
                .filters(filters)
                .measurement(measurement)
                .orderDirection(orderDirection)
                .groupBy(groupBy)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Overall values
     *
     * Returns the overall value for a specific metric, as well as the total view count, watch time, and the Mux Global metric value for the metric.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOverallValuesTest() throws ApiException {
        String METRIC_ID = null;
        List<String> timeframe = null;
        List<String> filters = null;
        String measurement = null;
        GetOverallValuesResponse response = api.getOverallValues(METRIC_ID)
                .timeframe(timeframe)
                .filters(filters)
                .measurement(measurement)
                .execute();
        // TODO: test validations
    }

    /**
     * List all metric values
     *
     * List all of the values across every breakdown for a specific metric.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllMetricValuesTest() throws ApiException {
        List<String> timeframe = null;
        List<String> filters = null;
        String dimension = null;
        String value = null;
        ListAllMetricValuesResponse response = api.listAllMetricValues()
                .timeframe(timeframe)
                .filters(filters)
                .dimension(dimension)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * List breakdown values
     *
     * List the breakdown values for a specific metric.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listBreakdownValuesTest() throws ApiException {
        String METRIC_ID = null;
        String groupBy = null;
        String measurement = null;
        List<String> filters = null;
        Integer limit = null;
        Integer page = null;
        String orderBy = null;
        String orderDirection = null;
        List<String> timeframe = null;
        ListBreakdownValuesResponse response = api.listBreakdownValues(METRIC_ID)
                .groupBy(groupBy)
                .measurement(measurement)
                .filters(filters)
                .limit(limit)
                .page(page)
                .orderBy(orderBy)
                .orderDirection(orderDirection)
                .timeframe(timeframe)
                .execute();
        // TODO: test validations
    }

    /**
     * List Insights
     *
     * Returns a list of insights for a metric. These are the worst performing values across all breakdowns sorted by how much they negatively impact a specific metric.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listInsightsTest() throws ApiException {
        String METRIC_ID = null;
        String measurement = null;
        String orderDirection = null;
        List<String> timeframe = null;
        ListInsightsResponse response = api.listInsights(METRIC_ID)
                .measurement(measurement)
                .orderDirection(orderDirection)
                .timeframe(timeframe)
                .execute();
        // TODO: test validations
    }

}
