/*
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.IncidentResponse;
import org.openapitools.client.model.ListIncidentsResponse;
import org.openapitools.client.model.ListRelatedIncidentsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IncidentsApi
 */
@Disabled
public class IncidentsApiTest {

    private final IncidentsApi api = new IncidentsApi();

    /**
     * Get an Incident
     *
     * Returns the details of an incident.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getIncidentTest() throws ApiException {
        String INCIDENT_ID = null;
        IncidentResponse response = api.getIncident(INCIDENT_ID)
                .execute();
        // TODO: test validations
    }

    /**
     * List Incidents
     *
     * Returns a list of incidents.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listIncidentsTest() throws ApiException {
        Integer limit = null;
        Integer page = null;
        String orderBy = null;
        String orderDirection = null;
        String status = null;
        String severity = null;
        ListIncidentsResponse response = api.listIncidents()
                .limit(limit)
                .page(page)
                .orderBy(orderBy)
                .orderDirection(orderDirection)
                .status(status)
                .severity(severity)
                .execute();
        // TODO: test validations
    }

    /**
     * List Related Incidents
     *
     * Returns all the incidents that seem related to a specific incident.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listRelatedIncidentsTest() throws ApiException {
        String INCIDENT_ID = null;
        Integer limit = null;
        Integer page = null;
        String orderBy = null;
        String orderDirection = null;
        ListRelatedIncidentsResponse response = api.listRelatedIncidents(INCIDENT_ID)
                .limit(limit)
                .page(page)
                .orderBy(orderBy)
                .orderDirection(orderDirection)
                .execute();
        // TODO: test validations
    }

}
