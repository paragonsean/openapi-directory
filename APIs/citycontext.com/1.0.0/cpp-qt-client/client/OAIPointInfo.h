/**
 * City Context
 * City Context provides a straightforward API to access UK Open Data: crime statistics, schools, demographics and more.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPointInfo.h
 *
 * Contextual information around a given point
 */

#ifndef OAIPointInfo_H
#define OAIPointInfo_H

#include <QJsonObject>

#include "OAILocation.h"
#include "OAIPointInfo_lsoa.h"
#include "OAIPointInfo_parks_inner.h"
#include "OAIPointInfo_schools_inner.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILocation;
class OAIPointInfo_lsoa;
class OAIPointInfo_parks_inner;
class OAIPointInfo_schools_inner;

class OAIPointInfo : public OAIObject {
public:
    OAIPointInfo();
    OAIPointInfo(QString json);
    ~OAIPointInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILocation getLocation() const;
    void setLocation(const OAILocation &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    OAIPointInfo_lsoa getLsoa() const;
    void setLsoa(const OAIPointInfo_lsoa &lsoa);
    bool is_lsoa_Set() const;
    bool is_lsoa_Valid() const;

    QList<OAIPointInfo_parks_inner> getParks() const;
    void setParks(const QList<OAIPointInfo_parks_inner> &parks);
    bool is_parks_Set() const;
    bool is_parks_Valid() const;

    QList<OAIPointInfo_schools_inner> getSchools() const;
    void setSchools(const QList<OAIPointInfo_schools_inner> &schools);
    bool is_schools_Set() const;
    bool is_schools_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILocation m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    OAIPointInfo_lsoa m_lsoa;
    bool m_lsoa_isSet;
    bool m_lsoa_isValid;

    QList<OAIPointInfo_parks_inner> m_parks;
    bool m_parks_isSet;
    bool m_parks_isValid;

    QList<OAIPointInfo_schools_inner> m_schools;
    bool m_schools_isSet;
    bool m_schools_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPointInfo)

#endif // OAIPointInfo_H
