/**
 * City Context
 * City Context provides a straightforward API to access UK Open Data: crime statistics, schools, demographics and more.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPointInfo_lsoa.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPointInfo_lsoa::OAIPointInfo_lsoa(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPointInfo_lsoa::OAIPointInfo_lsoa() {
    this->initializeModel();
}

OAIPointInfo_lsoa::~OAIPointInfo_lsoa() {}

void OAIPointInfo_lsoa::initializeModel() {

    m_crimes_isSet = false;
    m_crimes_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_population_isSet = false;
    m_population_isValid = false;
}

void OAIPointInfo_lsoa::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPointInfo_lsoa::fromJsonObject(QJsonObject json) {

    m_crimes_isValid = ::OpenAPI::fromJsonValue(m_crimes, json[QString("crimes")]);
    m_crimes_isSet = !json[QString("crimes")].isNull() && m_crimes_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_population_isValid = ::OpenAPI::fromJsonValue(m_population, json[QString("population")]);
    m_population_isSet = !json[QString("population")].isNull() && m_population_isValid;
}

QString OAIPointInfo_lsoa::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPointInfo_lsoa::asJsonObject() const {
    QJsonObject obj;
    if (m_crimes_isSet) {
        obj.insert(QString("crimes"), ::OpenAPI::toJsonValue(m_crimes));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_population.isSet()) {
        obj.insert(QString("population"), ::OpenAPI::toJsonValue(m_population));
    }
    return obj;
}

OAIObject OAIPointInfo_lsoa::getCrimes() const {
    return m_crimes;
}
void OAIPointInfo_lsoa::setCrimes(const OAIObject &crimes) {
    m_crimes = crimes;
    m_crimes_isSet = true;
}

bool OAIPointInfo_lsoa::is_crimes_Set() const{
    return m_crimes_isSet;
}

bool OAIPointInfo_lsoa::is_crimes_Valid() const{
    return m_crimes_isValid;
}

QString OAIPointInfo_lsoa::getName() const {
    return m_name;
}
void OAIPointInfo_lsoa::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIPointInfo_lsoa::is_name_Set() const{
    return m_name_isSet;
}

bool OAIPointInfo_lsoa::is_name_Valid() const{
    return m_name_isValid;
}

OAIPointInfo_lsoa_population OAIPointInfo_lsoa::getPopulation() const {
    return m_population;
}
void OAIPointInfo_lsoa::setPopulation(const OAIPointInfo_lsoa_population &population) {
    m_population = population;
    m_population_isSet = true;
}

bool OAIPointInfo_lsoa::is_population_Set() const{
    return m_population_isSet;
}

bool OAIPointInfo_lsoa::is_population_Valid() const{
    return m_population_isValid;
}

bool OAIPointInfo_lsoa::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_crimes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_population.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPointInfo_lsoa::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && true;
}

} // namespace OpenAPI
