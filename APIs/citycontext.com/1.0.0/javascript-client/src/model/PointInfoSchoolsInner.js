/**
 * City Context
 * City Context provides a straightforward API to access UK Open Data: crime statistics, schools, demographics and more.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PointInfoSchoolsInner model module.
 * @module model/PointInfoSchoolsInner
 * @version 1.0.0
 */
class PointInfoSchoolsInner {
    /**
     * Constructs a new <code>PointInfoSchoolsInner</code>.
     * @alias module:model/PointInfoSchoolsInner
     * @param distanceMeters {Number} 
     * @param lastInpectionUrl {String} URL to the last inspection report
     * @param lastInspectionDate {Date} Date of the last Ofsted inspection
     * @param leadershipAndManagement {Number} Leadership and management grade in the last Ofsted report, from 1 (outstanding) to 4 (inadequate)
     * @param location {Object} 
     * @param overallEffectiveness {Number} Overall effectiveness grade in the last Ofsted report, from 1 (outstanding) to 4 (inadequate)
     * @param phase {String} 
     * @param qualityOfTeaching {Number} Quality of teaching grade in the last Ofsted report, from 1 (outstanding) to 4 (inadequate)
     * @param schoolName {String} 
     * @param typeOfEstablishment {String} 
     * @param urn {Number} Unique school identifier
     */
    constructor(distanceMeters, lastInpectionUrl, lastInspectionDate, leadershipAndManagement, location, overallEffectiveness, phase, qualityOfTeaching, schoolName, typeOfEstablishment, urn) { 
        
        PointInfoSchoolsInner.initialize(this, distanceMeters, lastInpectionUrl, lastInspectionDate, leadershipAndManagement, location, overallEffectiveness, phase, qualityOfTeaching, schoolName, typeOfEstablishment, urn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, distanceMeters, lastInpectionUrl, lastInspectionDate, leadershipAndManagement, location, overallEffectiveness, phase, qualityOfTeaching, schoolName, typeOfEstablishment, urn) { 
        obj['distanceMeters'] = distanceMeters;
        obj['lastInpectionUrl'] = lastInpectionUrl;
        obj['lastInspectionDate'] = lastInspectionDate;
        obj['leadershipAndManagement'] = leadershipAndManagement;
        obj['location'] = location;
        obj['overallEffectiveness'] = overallEffectiveness;
        obj['phase'] = phase;
        obj['qualityOfTeaching'] = qualityOfTeaching;
        obj['schoolName'] = schoolName;
        obj['typeOfEstablishment'] = typeOfEstablishment;
        obj['urn'] = urn;
    }

    /**
     * Constructs a <code>PointInfoSchoolsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PointInfoSchoolsInner} obj Optional instance to populate.
     * @return {module:model/PointInfoSchoolsInner} The populated <code>PointInfoSchoolsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PointInfoSchoolsInner();

            if (data.hasOwnProperty('distanceMeters')) {
                obj['distanceMeters'] = ApiClient.convertToType(data['distanceMeters'], 'Number');
            }
            if (data.hasOwnProperty('lastInpectionUrl')) {
                obj['lastInpectionUrl'] = ApiClient.convertToType(data['lastInpectionUrl'], 'String');
            }
            if (data.hasOwnProperty('lastInspectionDate')) {
                obj['lastInspectionDate'] = ApiClient.convertToType(data['lastInspectionDate'], 'Date');
            }
            if (data.hasOwnProperty('leadershipAndManagement')) {
                obj['leadershipAndManagement'] = ApiClient.convertToType(data['leadershipAndManagement'], 'Number');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], Object);
            }
            if (data.hasOwnProperty('overallEffectiveness')) {
                obj['overallEffectiveness'] = ApiClient.convertToType(data['overallEffectiveness'], 'Number');
            }
            if (data.hasOwnProperty('phase')) {
                obj['phase'] = ApiClient.convertToType(data['phase'], 'String');
            }
            if (data.hasOwnProperty('qualityOfTeaching')) {
                obj['qualityOfTeaching'] = ApiClient.convertToType(data['qualityOfTeaching'], 'Number');
            }
            if (data.hasOwnProperty('schoolName')) {
                obj['schoolName'] = ApiClient.convertToType(data['schoolName'], 'String');
            }
            if (data.hasOwnProperty('typeOfEstablishment')) {
                obj['typeOfEstablishment'] = ApiClient.convertToType(data['typeOfEstablishment'], 'String');
            }
            if (data.hasOwnProperty('urn')) {
                obj['urn'] = ApiClient.convertToType(data['urn'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PointInfoSchoolsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PointInfoSchoolsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PointInfoSchoolsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['lastInpectionUrl'] && !(typeof data['lastInpectionUrl'] === 'string' || data['lastInpectionUrl'] instanceof String)) {
            throw new Error("Expected the field `lastInpectionUrl` to be a primitive type in the JSON string but got " + data['lastInpectionUrl']);
        }
        // ensure the json data is a string
        if (data['phase'] && !(typeof data['phase'] === 'string' || data['phase'] instanceof String)) {
            throw new Error("Expected the field `phase` to be a primitive type in the JSON string but got " + data['phase']);
        }
        // ensure the json data is a string
        if (data['schoolName'] && !(typeof data['schoolName'] === 'string' || data['schoolName'] instanceof String)) {
            throw new Error("Expected the field `schoolName` to be a primitive type in the JSON string but got " + data['schoolName']);
        }
        // ensure the json data is a string
        if (data['typeOfEstablishment'] && !(typeof data['typeOfEstablishment'] === 'string' || data['typeOfEstablishment'] instanceof String)) {
            throw new Error("Expected the field `typeOfEstablishment` to be a primitive type in the JSON string but got " + data['typeOfEstablishment']);
        }

        return true;
    }


}

PointInfoSchoolsInner.RequiredProperties = ["distanceMeters", "lastInpectionUrl", "lastInspectionDate", "leadershipAndManagement", "location", "overallEffectiveness", "phase", "qualityOfTeaching", "schoolName", "typeOfEstablishment", "urn"];

/**
 * @member {Number} distanceMeters
 */
PointInfoSchoolsInner.prototype['distanceMeters'] = undefined;

/**
 * URL to the last inspection report
 * @member {String} lastInpectionUrl
 */
PointInfoSchoolsInner.prototype['lastInpectionUrl'] = undefined;

/**
 * Date of the last Ofsted inspection
 * @member {Date} lastInspectionDate
 */
PointInfoSchoolsInner.prototype['lastInspectionDate'] = undefined;

/**
 * Leadership and management grade in the last Ofsted report, from 1 (outstanding) to 4 (inadequate)
 * @member {Number} leadershipAndManagement
 */
PointInfoSchoolsInner.prototype['leadershipAndManagement'] = undefined;

/**
 * @member {Object} location
 */
PointInfoSchoolsInner.prototype['location'] = undefined;

/**
 * Overall effectiveness grade in the last Ofsted report, from 1 (outstanding) to 4 (inadequate)
 * @member {Number} overallEffectiveness
 */
PointInfoSchoolsInner.prototype['overallEffectiveness'] = undefined;

/**
 * @member {String} phase
 */
PointInfoSchoolsInner.prototype['phase'] = undefined;

/**
 * Quality of teaching grade in the last Ofsted report, from 1 (outstanding) to 4 (inadequate)
 * @member {Number} qualityOfTeaching
 */
PointInfoSchoolsInner.prototype['qualityOfTeaching'] = undefined;

/**
 * @member {String} schoolName
 */
PointInfoSchoolsInner.prototype['schoolName'] = undefined;

/**
 * @member {String} typeOfEstablishment
 */
PointInfoSchoolsInner.prototype['typeOfEstablishment'] = undefined;

/**
 * Unique school identifier
 * @member {Number} urn
 */
PointInfoSchoolsInner.prototype['urn'] = undefined;






export default PointInfoSchoolsInner;

