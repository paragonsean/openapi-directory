/**
 * City Context
 * City Context provides a straightforward API to access UK Open Data: crime statistics, schools, demographics and more.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PointInfoLsoaPopulation model module.
 * @module model/PointInfoLsoaPopulation
 * @version 1.0.0
 */
class PointInfoLsoaPopulation {
    /**
     * Constructs a new <code>PointInfoLsoaPopulation</code>.
     * @alias module:model/PointInfoLsoaPopulation
     * @param allUsualResidents {Number} 
     * @param communalEstablishmentResidents {Number} 
     * @param householdResidents {Number} 
     * @param households {Number} 
     * @param personsPerHectare {Number} 
     * @param personsPerHousehold {Number} 
     */
    constructor(allUsualResidents, communalEstablishmentResidents, householdResidents, households, personsPerHectare, personsPerHousehold) { 
        
        PointInfoLsoaPopulation.initialize(this, allUsualResidents, communalEstablishmentResidents, householdResidents, households, personsPerHectare, personsPerHousehold);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, allUsualResidents, communalEstablishmentResidents, householdResidents, households, personsPerHectare, personsPerHousehold) { 
        obj['allUsualResidents'] = allUsualResidents;
        obj['communalEstablishmentResidents'] = communalEstablishmentResidents;
        obj['householdResidents'] = householdResidents;
        obj['households'] = households;
        obj['personsPerHectare'] = personsPerHectare;
        obj['personsPerHousehold'] = personsPerHousehold;
    }

    /**
     * Constructs a <code>PointInfoLsoaPopulation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PointInfoLsoaPopulation} obj Optional instance to populate.
     * @return {module:model/PointInfoLsoaPopulation} The populated <code>PointInfoLsoaPopulation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PointInfoLsoaPopulation();

            if (data.hasOwnProperty('allUsualResidents')) {
                obj['allUsualResidents'] = ApiClient.convertToType(data['allUsualResidents'], 'Number');
            }
            if (data.hasOwnProperty('communalEstablishmentResidents')) {
                obj['communalEstablishmentResidents'] = ApiClient.convertToType(data['communalEstablishmentResidents'], 'Number');
            }
            if (data.hasOwnProperty('householdResidents')) {
                obj['householdResidents'] = ApiClient.convertToType(data['householdResidents'], 'Number');
            }
            if (data.hasOwnProperty('households')) {
                obj['households'] = ApiClient.convertToType(data['households'], 'Number');
            }
            if (data.hasOwnProperty('personsPerHectare')) {
                obj['personsPerHectare'] = ApiClient.convertToType(data['personsPerHectare'], 'Number');
            }
            if (data.hasOwnProperty('personsPerHousehold')) {
                obj['personsPerHousehold'] = ApiClient.convertToType(data['personsPerHousehold'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PointInfoLsoaPopulation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PointInfoLsoaPopulation</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PointInfoLsoaPopulation.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

PointInfoLsoaPopulation.RequiredProperties = ["allUsualResidents", "communalEstablishmentResidents", "householdResidents", "households", "personsPerHectare", "personsPerHousehold"];

/**
 * @member {Number} allUsualResidents
 */
PointInfoLsoaPopulation.prototype['allUsualResidents'] = undefined;

/**
 * @member {Number} communalEstablishmentResidents
 */
PointInfoLsoaPopulation.prototype['communalEstablishmentResidents'] = undefined;

/**
 * @member {Number} householdResidents
 */
PointInfoLsoaPopulation.prototype['householdResidents'] = undefined;

/**
 * @member {Number} households
 */
PointInfoLsoaPopulation.prototype['households'] = undefined;

/**
 * @member {Number} personsPerHectare
 */
PointInfoLsoaPopulation.prototype['personsPerHectare'] = undefined;

/**
 * @member {Number} personsPerHousehold
 */
PointInfoLsoaPopulation.prototype['personsPerHousehold'] = undefined;






export default PointInfoLsoaPopulation;

