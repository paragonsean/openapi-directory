/*
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Account;
import org.openapitools.client.model.Category;
import org.openapitools.client.model.ErrorMessage;
import org.openapitools.client.model.FundingInformation;
import org.openapitools.client.model.FundingSearch;
import org.openapitools.client.model.ItemType;
import org.openapitools.client.model.License;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OtherApi
 */
@Disabled
public class OtherApiTest {

    private final OtherApi api = new OtherApi();

    /**
     * Public Categories
     *
     * Returns a list of public categories
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void categoriesListTest() throws ApiException {
        List<Category> response = api.categoriesList();
        // TODO: test validations
    }

    /**
     * Public File Download
     *
     * Starts the download of a file
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileDownloadTest() throws ApiException {
        Long fileId = null;
        api.fileDownload(fileId);
        // TODO: test validations
    }

    /**
     * Item Types
     *
     * Returns the list of Item Types of the requested group. If no user is authenticated, returns the item types available for Figshare.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void itemTypesListTest() throws ApiException {
        Long groupId = null;
        List<ItemType> response = api.itemTypesList(groupId);
        // TODO: test validations
    }

    /**
     * Public Licenses
     *
     * Returns a list of public licenses
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void licensesListTest() throws ApiException {
        List<License> response = api.licensesList();
        // TODO: test validations
    }

    /**
     * Private Account information
     *
     * Account information for token/personal token
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void privateAccountTest() throws ApiException {
        Account response = api.privateAccount();
        // TODO: test validations
    }

    /**
     * Search Funding
     *
     * Search for fundings
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void privateFundingSearchTest() throws ApiException {
        FundingSearch fundingSearch = null;
        List<FundingInformation> response = api.privateFundingSearch(fundingSearch);
        // TODO: test validations
    }

    /**
     * Private Account Licenses
     *
     * This is a private endpoint that requires OAuth. It will return a list with figshare public licenses AND licenses defined for account&#39;s institution.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void privateLicensesListTest() throws ApiException {
        List<License> response = api.privateLicensesList();
        // TODO: test validations
    }

}
