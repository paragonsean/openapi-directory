/*
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CustomArticleFieldAdd;
import org.openapitools.client.model.FundingCreate;
import org.openapitools.client.model.TimelineUpdate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ArticleProjectCreate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:01:45.951625-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ArticleProjectCreate {
  public static final String SERIALIZED_NAME_AUTHORS = "authors";
  @SerializedName(SERIALIZED_NAME_AUTHORS)
  private List<Object> authors = new ArrayList<>();

  public static final String SERIALIZED_NAME_CATEGORIES = "categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private List<Long> categories = new ArrayList<>();

  public static final String SERIALIZED_NAME_CATEGORIES_BY_SOURCE_ID = "categories_by_source_id";
  @SerializedName(SERIALIZED_NAME_CATEGORIES_BY_SOURCE_ID)
  private List<String> categoriesBySourceId = new ArrayList<>();

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private Object customFields;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS_LIST = "custom_fields_list";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS_LIST)
  private List<CustomArticleFieldAdd> customFieldsList = new ArrayList<>();

  public static final String SERIALIZED_NAME_DEFINED_TYPE = "defined_type";
  @SerializedName(SERIALIZED_NAME_DEFINED_TYPE)
  private String definedType;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description = "";

  public static final String SERIALIZED_NAME_DOI = "doi";
  @SerializedName(SERIALIZED_NAME_DOI)
  private String doi = "";

  public static final String SERIALIZED_NAME_FUNDING = "funding";
  @SerializedName(SERIALIZED_NAME_FUNDING)
  private String funding = "";

  public static final String SERIALIZED_NAME_FUNDING_LIST = "funding_list";
  @SerializedName(SERIALIZED_NAME_FUNDING_LIST)
  private List<FundingCreate> fundingList = new ArrayList<>();

  public static final String SERIALIZED_NAME_HANDLE = "handle";
  @SerializedName(SERIALIZED_NAME_HANDLE)
  private String handle = "";

  public static final String SERIALIZED_NAME_KEYWORDS = "keywords";
  @SerializedName(SERIALIZED_NAME_KEYWORDS)
  private List<String> keywords = new ArrayList<>();

  public static final String SERIALIZED_NAME_LICENSE = "license";
  @SerializedName(SERIALIZED_NAME_LICENSE)
  private Long license = 0l;

  public static final String SERIALIZED_NAME_REFERENCES = "references";
  @SerializedName(SERIALIZED_NAME_REFERENCES)
  private List<String> references = new ArrayList<>();

  public static final String SERIALIZED_NAME_RESOURCE_DOI = "resource_doi";
  @SerializedName(SERIALIZED_NAME_RESOURCE_DOI)
  private String resourceDoi = "";

  public static final String SERIALIZED_NAME_RESOURCE_TITLE = "resource_title";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TITLE)
  private String resourceTitle = "";

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_TIMELINE = "timeline";
  @SerializedName(SERIALIZED_NAME_TIMELINE)
  private TimelineUpdate timeline;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public ArticleProjectCreate() {
  }

  public ArticleProjectCreate authors(List<Object> authors) {
    this.authors = authors;
    return this;
  }

  public ArticleProjectCreate addAuthorsItem(Object authorsItem) {
    if (this.authors == null) {
      this.authors = new ArrayList<>();
    }
    this.authors.add(authorsItem);
    return this;
  }

  /**
   * List of authors to be associated with the article. The list can contain the following fields: id, name, first_name, last_name, email, orcid_id. If an id is supplied, it will take priority and everything else will be ignored. No more than 10 authors. For adding more authors use the specific authors endpoint.
   * @return authors
   */
  @javax.annotation.Nullable
  public List<Object> getAuthors() {
    return authors;
  }

  public void setAuthors(List<Object> authors) {
    this.authors = authors;
  }


  public ArticleProjectCreate categories(List<Long> categories) {
    this.categories = categories;
    return this;
  }

  public ArticleProjectCreate addCategoriesItem(Long categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

  /**
   * List of category ids to be associated with the article(e.g [1, 23, 33, 66])
   * @return categories
   */
  @javax.annotation.Nullable
  public List<Long> getCategories() {
    return categories;
  }

  public void setCategories(List<Long> categories) {
    this.categories = categories;
  }


  public ArticleProjectCreate categoriesBySourceId(List<String> categoriesBySourceId) {
    this.categoriesBySourceId = categoriesBySourceId;
    return this;
  }

  public ArticleProjectCreate addCategoriesBySourceIdItem(String categoriesBySourceIdItem) {
    if (this.categoriesBySourceId == null) {
      this.categoriesBySourceId = new ArrayList<>();
    }
    this.categoriesBySourceId.add(categoriesBySourceIdItem);
    return this;
  }

  /**
   * List of category source ids to be associated with the article, supersedes the categories property
   * @return categoriesBySourceId
   */
  @javax.annotation.Nullable
  public List<String> getCategoriesBySourceId() {
    return categoriesBySourceId;
  }

  public void setCategoriesBySourceId(List<String> categoriesBySourceId) {
    this.categoriesBySourceId = categoriesBySourceId;
  }


  public ArticleProjectCreate customFields(Object customFields) {
    this.customFields = customFields;
    return this;
  }

  /**
   * List of key, values pairs to be associated with the article
   * @return customFields
   */
  @javax.annotation.Nullable
  public Object getCustomFields() {
    return customFields;
  }

  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


  public ArticleProjectCreate customFieldsList(List<CustomArticleFieldAdd> customFieldsList) {
    this.customFieldsList = customFieldsList;
    return this;
  }

  public ArticleProjectCreate addCustomFieldsListItem(CustomArticleFieldAdd customFieldsListItem) {
    if (this.customFieldsList == null) {
      this.customFieldsList = new ArrayList<>();
    }
    this.customFieldsList.add(customFieldsListItem);
    return this;
  }

  /**
   * List of custom fields values, supersedes custom_fields parameter
   * @return customFieldsList
   */
  @javax.annotation.Nullable
  public List<CustomArticleFieldAdd> getCustomFieldsList() {
    return customFieldsList;
  }

  public void setCustomFieldsList(List<CustomArticleFieldAdd> customFieldsList) {
    this.customFieldsList = customFieldsList;
  }


  public ArticleProjectCreate definedType(String definedType) {
    this.definedType = definedType;
    return this;
  }

  /**
   * &lt;b&gt;One of:&lt;/b&gt; &lt;code&gt;figure&lt;/code&gt; &lt;code&gt;online resource&lt;/code&gt; &lt;code&gt;preprint&lt;/code&gt; &lt;code&gt;book&lt;/code&gt; &lt;code&gt;conference contribution&lt;/code&gt; &lt;code&gt;media&lt;/code&gt; &lt;code&gt;dataset&lt;/code&gt; &lt;code&gt;poster&lt;/code&gt; &lt;code&gt;journal contribution&lt;/code&gt; &lt;code&gt;presentation&lt;/code&gt; &lt;code&gt;thesis&lt;/code&gt; &lt;code&gt;software&lt;/code&gt;
   * @return definedType
   */
  @javax.annotation.Nullable
  public String getDefinedType() {
    return definedType;
  }

  public void setDefinedType(String definedType) {
    this.definedType = definedType;
  }


  public ArticleProjectCreate description(String description) {
    this.description = description;
    return this;
  }

  /**
   * The article description. In a publisher case, usually this is the remote article description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public ArticleProjectCreate doi(String doi) {
    this.doi = doi;
    return this;
  }

  /**
   * Not applicable for regular users. In an institutional case, make sure your group supports setting DOIs. This setting is applied by figshare via opening a ticket through our support/helpdesk system.
   * @return doi
   */
  @javax.annotation.Nullable
  public String getDoi() {
    return doi;
  }

  public void setDoi(String doi) {
    this.doi = doi;
  }


  public ArticleProjectCreate funding(String funding) {
    this.funding = funding;
    return this;
  }

  /**
   * Grant number or funding authority
   * @return funding
   */
  @javax.annotation.Nullable
  public String getFunding() {
    return funding;
  }

  public void setFunding(String funding) {
    this.funding = funding;
  }


  public ArticleProjectCreate fundingList(List<FundingCreate> fundingList) {
    this.fundingList = fundingList;
    return this;
  }

  public ArticleProjectCreate addFundingListItem(FundingCreate fundingListItem) {
    if (this.fundingList == null) {
      this.fundingList = new ArrayList<>();
    }
    this.fundingList.add(fundingListItem);
    return this;
  }

  /**
   * Funding creation / update items
   * @return fundingList
   */
  @javax.annotation.Nullable
  public List<FundingCreate> getFundingList() {
    return fundingList;
  }

  public void setFundingList(List<FundingCreate> fundingList) {
    this.fundingList = fundingList;
  }


  public ArticleProjectCreate handle(String handle) {
    this.handle = handle;
    return this;
  }

  /**
   * Not applicable for regular users. In an institutional case, make sure your group supports setting Handles. This setting is applied by figshare via opening a ticket through our support/helpdesk system.
   * @return handle
   */
  @javax.annotation.Nullable
  public String getHandle() {
    return handle;
  }

  public void setHandle(String handle) {
    this.handle = handle;
  }


  public ArticleProjectCreate keywords(List<String> keywords) {
    this.keywords = keywords;
    return this;
  }

  public ArticleProjectCreate addKeywordsItem(String keywordsItem) {
    if (this.keywords == null) {
      this.keywords = new ArrayList<>();
    }
    this.keywords.add(keywordsItem);
    return this;
  }

  /**
   * List of tags to be associated with the article. Tags can be used instead
   * @return keywords
   */
  @javax.annotation.Nullable
  public List<String> getKeywords() {
    return keywords;
  }

  public void setKeywords(List<String> keywords) {
    this.keywords = keywords;
  }


  public ArticleProjectCreate license(Long license) {
    this.license = license;
    return this;
  }

  /**
   * License id for this article.
   * @return license
   */
  @javax.annotation.Nullable
  public Long getLicense() {
    return license;
  }

  public void setLicense(Long license) {
    this.license = license;
  }


  public ArticleProjectCreate references(List<String> references) {
    this.references = references;
    return this;
  }

  public ArticleProjectCreate addReferencesItem(String referencesItem) {
    if (this.references == null) {
      this.references = new ArrayList<>();
    }
    this.references.add(referencesItem);
    return this;
  }

  /**
   * List of links to be associated with the article (e.g [\&quot;http://link1\&quot;, \&quot;http://link2\&quot;, \&quot;http://link3\&quot;])
   * @return references
   */
  @javax.annotation.Nullable
  public List<String> getReferences() {
    return references;
  }

  public void setReferences(List<String> references) {
    this.references = references;
  }


  public ArticleProjectCreate resourceDoi(String resourceDoi) {
    this.resourceDoi = resourceDoi;
    return this;
  }

  /**
   * Not applicable to regular users. In a publisher case, this is the publisher article DOI.
   * @return resourceDoi
   */
  @javax.annotation.Nullable
  public String getResourceDoi() {
    return resourceDoi;
  }

  public void setResourceDoi(String resourceDoi) {
    this.resourceDoi = resourceDoi;
  }


  public ArticleProjectCreate resourceTitle(String resourceTitle) {
    this.resourceTitle = resourceTitle;
    return this;
  }

  /**
   * Not applicable to regular users. In a publisher case, this is the publisher article title.
   * @return resourceTitle
   */
  @javax.annotation.Nullable
  public String getResourceTitle() {
    return resourceTitle;
  }

  public void setResourceTitle(String resourceTitle) {
    this.resourceTitle = resourceTitle;
  }


  public ArticleProjectCreate tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public ArticleProjectCreate addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * List of tags to be associated with the article. Keywords can be used instead
   * @return tags
   */
  @javax.annotation.Nullable
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public ArticleProjectCreate timeline(TimelineUpdate timeline) {
    this.timeline = timeline;
    return this;
  }

  /**
   * Get timeline
   * @return timeline
   */
  @javax.annotation.Nullable
  public TimelineUpdate getTimeline() {
    return timeline;
  }

  public void setTimeline(TimelineUpdate timeline) {
    this.timeline = timeline;
  }


  public ArticleProjectCreate title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Title of article
   * @return title
   */
  @javax.annotation.Nonnull
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ArticleProjectCreate articleProjectCreate = (ArticleProjectCreate) o;
    return Objects.equals(this.authors, articleProjectCreate.authors) &&
        Objects.equals(this.categories, articleProjectCreate.categories) &&
        Objects.equals(this.categoriesBySourceId, articleProjectCreate.categoriesBySourceId) &&
        Objects.equals(this.customFields, articleProjectCreate.customFields) &&
        Objects.equals(this.customFieldsList, articleProjectCreate.customFieldsList) &&
        Objects.equals(this.definedType, articleProjectCreate.definedType) &&
        Objects.equals(this.description, articleProjectCreate.description) &&
        Objects.equals(this.doi, articleProjectCreate.doi) &&
        Objects.equals(this.funding, articleProjectCreate.funding) &&
        Objects.equals(this.fundingList, articleProjectCreate.fundingList) &&
        Objects.equals(this.handle, articleProjectCreate.handle) &&
        Objects.equals(this.keywords, articleProjectCreate.keywords) &&
        Objects.equals(this.license, articleProjectCreate.license) &&
        Objects.equals(this.references, articleProjectCreate.references) &&
        Objects.equals(this.resourceDoi, articleProjectCreate.resourceDoi) &&
        Objects.equals(this.resourceTitle, articleProjectCreate.resourceTitle) &&
        Objects.equals(this.tags, articleProjectCreate.tags) &&
        Objects.equals(this.timeline, articleProjectCreate.timeline) &&
        Objects.equals(this.title, articleProjectCreate.title);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authors, categories, categoriesBySourceId, customFields, customFieldsList, definedType, description, doi, funding, fundingList, handle, keywords, license, references, resourceDoi, resourceTitle, tags, timeline, title);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ArticleProjectCreate {\n");
    sb.append("    authors: ").append(toIndentedString(authors)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    categoriesBySourceId: ").append(toIndentedString(categoriesBySourceId)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    customFieldsList: ").append(toIndentedString(customFieldsList)).append("\n");
    sb.append("    definedType: ").append(toIndentedString(definedType)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    doi: ").append(toIndentedString(doi)).append("\n");
    sb.append("    funding: ").append(toIndentedString(funding)).append("\n");
    sb.append("    fundingList: ").append(toIndentedString(fundingList)).append("\n");
    sb.append("    handle: ").append(toIndentedString(handle)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("    license: ").append(toIndentedString(license)).append("\n");
    sb.append("    references: ").append(toIndentedString(references)).append("\n");
    sb.append("    resourceDoi: ").append(toIndentedString(resourceDoi)).append("\n");
    sb.append("    resourceTitle: ").append(toIndentedString(resourceTitle)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    timeline: ").append(toIndentedString(timeline)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("authors");
    openapiFields.add("categories");
    openapiFields.add("categories_by_source_id");
    openapiFields.add("custom_fields");
    openapiFields.add("custom_fields_list");
    openapiFields.add("defined_type");
    openapiFields.add("description");
    openapiFields.add("doi");
    openapiFields.add("funding");
    openapiFields.add("funding_list");
    openapiFields.add("handle");
    openapiFields.add("keywords");
    openapiFields.add("license");
    openapiFields.add("references");
    openapiFields.add("resource_doi");
    openapiFields.add("resource_title");
    openapiFields.add("tags");
    openapiFields.add("timeline");
    openapiFields.add("title");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("title");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ArticleProjectCreate
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ArticleProjectCreate.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ArticleProjectCreate is not found in the empty JSON string", ArticleProjectCreate.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ArticleProjectCreate.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ArticleProjectCreate` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ArticleProjectCreate.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("authors") != null && !jsonObj.get("authors").isJsonNull() && !jsonObj.get("authors").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `authors` to be an array in the JSON string but got `%s`", jsonObj.get("authors").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("categories") != null && !jsonObj.get("categories").isJsonNull() && !jsonObj.get("categories").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `categories` to be an array in the JSON string but got `%s`", jsonObj.get("categories").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("categories_by_source_id") != null && !jsonObj.get("categories_by_source_id").isJsonNull() && !jsonObj.get("categories_by_source_id").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `categories_by_source_id` to be an array in the JSON string but got `%s`", jsonObj.get("categories_by_source_id").toString()));
      }
      if (jsonObj.get("custom_fields_list") != null && !jsonObj.get("custom_fields_list").isJsonNull()) {
        JsonArray jsonArraycustomFieldsList = jsonObj.getAsJsonArray("custom_fields_list");
        if (jsonArraycustomFieldsList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("custom_fields_list").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `custom_fields_list` to be an array in the JSON string but got `%s`", jsonObj.get("custom_fields_list").toString()));
          }

          // validate the optional field `custom_fields_list` (array)
          for (int i = 0; i < jsonArraycustomFieldsList.size(); i++) {
            CustomArticleFieldAdd.validateJsonElement(jsonArraycustomFieldsList.get(i));
          };
        }
      }
      if ((jsonObj.get("defined_type") != null && !jsonObj.get("defined_type").isJsonNull()) && !jsonObj.get("defined_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defined_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defined_type").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("doi") != null && !jsonObj.get("doi").isJsonNull()) && !jsonObj.get("doi").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `doi` to be a primitive type in the JSON string but got `%s`", jsonObj.get("doi").toString()));
      }
      if ((jsonObj.get("funding") != null && !jsonObj.get("funding").isJsonNull()) && !jsonObj.get("funding").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `funding` to be a primitive type in the JSON string but got `%s`", jsonObj.get("funding").toString()));
      }
      if (jsonObj.get("funding_list") != null && !jsonObj.get("funding_list").isJsonNull()) {
        JsonArray jsonArrayfundingList = jsonObj.getAsJsonArray("funding_list");
        if (jsonArrayfundingList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("funding_list").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `funding_list` to be an array in the JSON string but got `%s`", jsonObj.get("funding_list").toString()));
          }

          // validate the optional field `funding_list` (array)
          for (int i = 0; i < jsonArrayfundingList.size(); i++) {
            FundingCreate.validateJsonElement(jsonArrayfundingList.get(i));
          };
        }
      }
      if ((jsonObj.get("handle") != null && !jsonObj.get("handle").isJsonNull()) && !jsonObj.get("handle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `handle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("handle").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("keywords") != null && !jsonObj.get("keywords").isJsonNull() && !jsonObj.get("keywords").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `keywords` to be an array in the JSON string but got `%s`", jsonObj.get("keywords").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("references") != null && !jsonObj.get("references").isJsonNull() && !jsonObj.get("references").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `references` to be an array in the JSON string but got `%s`", jsonObj.get("references").toString()));
      }
      if ((jsonObj.get("resource_doi") != null && !jsonObj.get("resource_doi").isJsonNull()) && !jsonObj.get("resource_doi").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resource_doi` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resource_doi").toString()));
      }
      if ((jsonObj.get("resource_title") != null && !jsonObj.get("resource_title").isJsonNull()) && !jsonObj.get("resource_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resource_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resource_title").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull() && !jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      // validate the optional field `timeline`
      if (jsonObj.get("timeline") != null && !jsonObj.get("timeline").isJsonNull()) {
        TimelineUpdate.validateJsonElement(jsonObj.get("timeline"));
      }
      if (!jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ArticleProjectCreate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ArticleProjectCreate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ArticleProjectCreate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ArticleProjectCreate.class));

       return (TypeAdapter<T>) new TypeAdapter<ArticleProjectCreate>() {
           @Override
           public void write(JsonWriter out, ArticleProjectCreate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ArticleProjectCreate read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ArticleProjectCreate given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ArticleProjectCreate
   * @throws IOException if the JSON string is invalid with respect to ArticleProjectCreate
   */
  public static ArticleProjectCreate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ArticleProjectCreate.class);
  }

  /**
   * Convert an instance of ArticleProjectCreate to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

