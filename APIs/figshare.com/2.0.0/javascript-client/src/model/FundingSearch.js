/**
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FundingSearch model module.
 * @module model/FundingSearch
 * @version 2.0.0
 */
class FundingSearch {
    /**
     * Constructs a new <code>FundingSearch</code>.
     * @alias module:model/FundingSearch
     */
    constructor() { 
        
        FundingSearch.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FundingSearch</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FundingSearch} obj Optional instance to populate.
     * @return {module:model/FundingSearch} The populated <code>FundingSearch</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FundingSearch();

            if (data.hasOwnProperty('search_for')) {
                obj['search_for'] = ApiClient.convertToType(data['search_for'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FundingSearch</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FundingSearch</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['search_for'] && !(typeof data['search_for'] === 'string' || data['search_for'] instanceof String)) {
            throw new Error("Expected the field `search_for` to be a primitive type in the JSON string but got " + data['search_for']);
        }

        return true;
    }


}



/**
 * Search term
 * @member {String} search_for
 */
FundingSearch.prototype['search_for'] = undefined;






export default FundingSearch;

