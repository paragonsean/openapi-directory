/**
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Account model module.
 * @module model/Account
 * @version 2.0.0
 */
class Account {
    /**
     * Constructs a new <code>Account</code>.
     * @alias module:model/Account
     * @param active {Number} Account activity status
     * @param createdDate {String} Date when account was created
     * @param email {String} User email
     * @param firstName {String} First Name
     * @param groupId {Number} Account group id
     * @param id {Number} Account id
     * @param institutionId {Number} Account institution
     * @param institutionUserId {String} Account institution user id
     * @param lastName {String} Last Name
     * @param maximumFileSize {Number} Maximum upload size for account
     * @param modifiedDate {String} Date of last account modification
     * @param pendingQuotaRequest {Boolean} True if a quota request is pending
     * @param quota {Number} Account quota
     * @param usedQuota {Number} Account total used quota
     * @param usedQuotaPrivate {Number} Account used private quota
     * @param usedQuotaPublic {Number} Account public used quota
     */
    constructor(active, createdDate, email, firstName, groupId, id, institutionId, institutionUserId, lastName, maximumFileSize, modifiedDate, pendingQuotaRequest, quota, usedQuota, usedQuotaPrivate, usedQuotaPublic) { 
        
        Account.initialize(this, active, createdDate, email, firstName, groupId, id, institutionId, institutionUserId, lastName, maximumFileSize, modifiedDate, pendingQuotaRequest, quota, usedQuota, usedQuotaPrivate, usedQuotaPublic);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, active, createdDate, email, firstName, groupId, id, institutionId, institutionUserId, lastName, maximumFileSize, modifiedDate, pendingQuotaRequest, quota, usedQuota, usedQuotaPrivate, usedQuotaPublic) { 
        obj['active'] = active;
        obj['created_date'] = createdDate;
        obj['email'] = email;
        obj['first_name'] = firstName;
        obj['group_id'] = groupId;
        obj['id'] = id;
        obj['institution_id'] = institutionId;
        obj['institution_user_id'] = institutionUserId;
        obj['last_name'] = lastName;
        obj['maximum_file_size'] = maximumFileSize;
        obj['modified_date'] = modifiedDate;
        obj['pending_quota_request'] = pendingQuotaRequest;
        obj['quota'] = quota;
        obj['used_quota'] = usedQuota;
        obj['used_quota_private'] = usedQuotaPrivate;
        obj['used_quota_public'] = usedQuotaPublic;
    }

    /**
     * Constructs a <code>Account</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Account} obj Optional instance to populate.
     * @return {module:model/Account} The populated <code>Account</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Account();

            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Number');
            }
            if (data.hasOwnProperty('created_date')) {
                obj['created_date'] = ApiClient.convertToType(data['created_date'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('first_name')) {
                obj['first_name'] = ApiClient.convertToType(data['first_name'], 'String');
            }
            if (data.hasOwnProperty('group_id')) {
                obj['group_id'] = ApiClient.convertToType(data['group_id'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('institution_id')) {
                obj['institution_id'] = ApiClient.convertToType(data['institution_id'], 'Number');
            }
            if (data.hasOwnProperty('institution_user_id')) {
                obj['institution_user_id'] = ApiClient.convertToType(data['institution_user_id'], 'String');
            }
            if (data.hasOwnProperty('last_name')) {
                obj['last_name'] = ApiClient.convertToType(data['last_name'], 'String');
            }
            if (data.hasOwnProperty('maximum_file_size')) {
                obj['maximum_file_size'] = ApiClient.convertToType(data['maximum_file_size'], 'Number');
            }
            if (data.hasOwnProperty('modified_date')) {
                obj['modified_date'] = ApiClient.convertToType(data['modified_date'], 'String');
            }
            if (data.hasOwnProperty('pending_quota_request')) {
                obj['pending_quota_request'] = ApiClient.convertToType(data['pending_quota_request'], 'Boolean');
            }
            if (data.hasOwnProperty('quota')) {
                obj['quota'] = ApiClient.convertToType(data['quota'], 'Number');
            }
            if (data.hasOwnProperty('used_quota')) {
                obj['used_quota'] = ApiClient.convertToType(data['used_quota'], 'Number');
            }
            if (data.hasOwnProperty('used_quota_private')) {
                obj['used_quota_private'] = ApiClient.convertToType(data['used_quota_private'], 'Number');
            }
            if (data.hasOwnProperty('used_quota_public')) {
                obj['used_quota_public'] = ApiClient.convertToType(data['used_quota_public'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Account</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Account</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Account.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['created_date'] && !(typeof data['created_date'] === 'string' || data['created_date'] instanceof String)) {
            throw new Error("Expected the field `created_date` to be a primitive type in the JSON string but got " + data['created_date']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['first_name'] && !(typeof data['first_name'] === 'string' || data['first_name'] instanceof String)) {
            throw new Error("Expected the field `first_name` to be a primitive type in the JSON string but got " + data['first_name']);
        }
        // ensure the json data is a string
        if (data['institution_user_id'] && !(typeof data['institution_user_id'] === 'string' || data['institution_user_id'] instanceof String)) {
            throw new Error("Expected the field `institution_user_id` to be a primitive type in the JSON string but got " + data['institution_user_id']);
        }
        // ensure the json data is a string
        if (data['last_name'] && !(typeof data['last_name'] === 'string' || data['last_name'] instanceof String)) {
            throw new Error("Expected the field `last_name` to be a primitive type in the JSON string but got " + data['last_name']);
        }
        // ensure the json data is a string
        if (data['modified_date'] && !(typeof data['modified_date'] === 'string' || data['modified_date'] instanceof String)) {
            throw new Error("Expected the field `modified_date` to be a primitive type in the JSON string but got " + data['modified_date']);
        }

        return true;
    }


}

Account.RequiredProperties = ["active", "created_date", "email", "first_name", "group_id", "id", "institution_id", "institution_user_id", "last_name", "maximum_file_size", "modified_date", "pending_quota_request", "quota", "used_quota", "used_quota_private", "used_quota_public"];

/**
 * Account activity status
 * @member {Number} active
 */
Account.prototype['active'] = undefined;

/**
 * Date when account was created
 * @member {String} created_date
 */
Account.prototype['created_date'] = undefined;

/**
 * User email
 * @member {String} email
 */
Account.prototype['email'] = undefined;

/**
 * First Name
 * @member {String} first_name
 */
Account.prototype['first_name'] = undefined;

/**
 * Account group id
 * @member {Number} group_id
 */
Account.prototype['group_id'] = undefined;

/**
 * Account id
 * @member {Number} id
 */
Account.prototype['id'] = undefined;

/**
 * Account institution
 * @member {Number} institution_id
 */
Account.prototype['institution_id'] = undefined;

/**
 * Account institution user id
 * @member {String} institution_user_id
 */
Account.prototype['institution_user_id'] = undefined;

/**
 * Last Name
 * @member {String} last_name
 */
Account.prototype['last_name'] = undefined;

/**
 * Maximum upload size for account
 * @member {Number} maximum_file_size
 */
Account.prototype['maximum_file_size'] = undefined;

/**
 * Date of last account modification
 * @member {String} modified_date
 */
Account.prototype['modified_date'] = undefined;

/**
 * True if a quota request is pending
 * @member {Boolean} pending_quota_request
 */
Account.prototype['pending_quota_request'] = undefined;

/**
 * Account quota
 * @member {Number} quota
 */
Account.prototype['quota'] = undefined;

/**
 * Account total used quota
 * @member {Number} used_quota
 */
Account.prototype['used_quota'] = undefined;

/**
 * Account used private quota
 * @member {Number} used_quota_private
 */
Account.prototype['used_quota_private'] = undefined;

/**
 * Account public used quota
 * @member {Number} used_quota_public
 */
Account.prototype['used_quota_public'] = undefined;






export default Account;

