/**
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TimelineUpdate model module.
 * @module model/TimelineUpdate
 * @version 2.0.0
 */
class TimelineUpdate {
    /**
     * Constructs a new <code>TimelineUpdate</code>.
     * @alias module:model/TimelineUpdate
     */
    constructor() { 
        
        TimelineUpdate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TimelineUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TimelineUpdate} obj Optional instance to populate.
     * @return {module:model/TimelineUpdate} The populated <code>TimelineUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TimelineUpdate();

            if (data.hasOwnProperty('firstOnline')) {
                obj['firstOnline'] = ApiClient.convertToType(data['firstOnline'], 'String');
            }
            if (data.hasOwnProperty('publisherAcceptance')) {
                obj['publisherAcceptance'] = ApiClient.convertToType(data['publisherAcceptance'], 'String');
            }
            if (data.hasOwnProperty('publisherPublication')) {
                obj['publisherPublication'] = ApiClient.convertToType(data['publisherPublication'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TimelineUpdate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TimelineUpdate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['firstOnline'] && !(typeof data['firstOnline'] === 'string' || data['firstOnline'] instanceof String)) {
            throw new Error("Expected the field `firstOnline` to be a primitive type in the JSON string but got " + data['firstOnline']);
        }
        // ensure the json data is a string
        if (data['publisherAcceptance'] && !(typeof data['publisherAcceptance'] === 'string' || data['publisherAcceptance'] instanceof String)) {
            throw new Error("Expected the field `publisherAcceptance` to be a primitive type in the JSON string but got " + data['publisherAcceptance']);
        }
        // ensure the json data is a string
        if (data['publisherPublication'] && !(typeof data['publisherPublication'] === 'string' || data['publisherPublication'] instanceof String)) {
            throw new Error("Expected the field `publisherPublication` to be a primitive type in the JSON string but got " + data['publisherPublication']);
        }

        return true;
    }


}



/**
 * Online posted date
 * @member {String} firstOnline
 */
TimelineUpdate.prototype['firstOnline'] = undefined;

/**
 * Date when the item was accepted for publication
 * @member {String} publisherAcceptance
 */
TimelineUpdate.prototype['publisherAcceptance'] = undefined;

/**
 * Publish date
 * @member {String} publisherPublication
 */
TimelineUpdate.prototype['publisherPublication'] = undefined;






export default TimelineUpdate;

