/**
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Author from '../model/Author';
import AuthorComplete from '../model/AuthorComplete';
import ErrorMessage from '../model/ErrorMessage';
import PrivateAuthorsSearch from '../model/PrivateAuthorsSearch';

/**
* Authors service.
* @module api/AuthorsApi
* @version 2.0.0
*/
export default class AuthorsApi {

    /**
    * Constructs a new AuthorsApi. 
    * @alias module:api/AuthorsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the privateAuthorDetails operation.
     * @callback module:api/AuthorsApi~privateAuthorDetailsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AuthorComplete} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Author details
     * View author details
     * @param {Number} authorId Author unique identifier
     * @param {module:api/AuthorsApi~privateAuthorDetailsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AuthorComplete}
     */
    privateAuthorDetails(authorId, callback) {
      let postBody = null;
      // verify the required parameter 'authorId' is set
      if (authorId === undefined || authorId === null) {
        throw new Error("Missing the required parameter 'authorId' when calling privateAuthorDetails");
      }

      let pathParams = {
        'author_id': authorId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AuthorComplete;
      return this.apiClient.callApi(
        '/account/authors/{author_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the privateAuthorsSearch operation.
     * @callback module:api/AuthorsApi~privateAuthorsSearchCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Author>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search Authors
     * Search for authors
     * @param {Object} opts Optional parameters
     * @param {module:model/PrivateAuthorsSearch} [privateAuthorsSearch] Search Parameters
     * @param {module:api/AuthorsApi~privateAuthorsSearchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Author>}
     */
    privateAuthorsSearch(opts, callback) {
      opts = opts || {};
      let postBody = opts['privateAuthorsSearch'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = [Author];
      return this.apiClient.callApi(
        '/account/authors/search', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
