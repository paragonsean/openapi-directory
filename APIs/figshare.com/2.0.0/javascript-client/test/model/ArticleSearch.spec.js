/**
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FigshareApi);
  }
}(this, function(expect, FigshareApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FigshareApi.ArticleSearch();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ArticleSearch', function() {
    it('should create an instance of ArticleSearch', function() {
      // uncomment below and update the code to test ArticleSearch
      //var instance = new FigshareApi.ArticleSearch();
      //expect(instance).to.be.a(FigshareApi.ArticleSearch);
    });

    it('should have the property doi (base name: "doi")', function() {
      // uncomment below and update the code to test the property doi
      //var instance = new FigshareApi.ArticleSearch();
      //expect(instance).to.be();
    });

    it('should have the property handle (base name: "handle")', function() {
      // uncomment below and update the code to test the property handle
      //var instance = new FigshareApi.ArticleSearch();
      //expect(instance).to.be();
    });

    it('should have the property itemType (base name: "item_type")', function() {
      // uncomment below and update the code to test the property itemType
      //var instance = new FigshareApi.ArticleSearch();
      //expect(instance).to.be();
    });

    it('should have the property order (base name: "order")', function() {
      // uncomment below and update the code to test the property order
      //var instance = new FigshareApi.ArticleSearch();
      //expect(instance).to.be();
    });

    it('should have the property projectId (base name: "project_id")', function() {
      // uncomment below and update the code to test the property projectId
      //var instance = new FigshareApi.ArticleSearch();
      //expect(instance).to.be();
    });

    it('should have the property resourceDoi (base name: "resource_doi")', function() {
      // uncomment below and update the code to test the property resourceDoi
      //var instance = new FigshareApi.ArticleSearch();
      //expect(instance).to.be();
    });

    it('should have the property group (base name: "group")', function() {
      // uncomment below and update the code to test the property group
      //var instance = new FigshareApi.ArticleSearch();
      //expect(instance).to.be();
    });

    it('should have the property institution (base name: "institution")', function() {
      // uncomment below and update the code to test the property institution
      //var instance = new FigshareApi.ArticleSearch();
      //expect(instance).to.be();
    });

    it('should have the property limit (base name: "limit")', function() {
      // uncomment below and update the code to test the property limit
      //var instance = new FigshareApi.ArticleSearch();
      //expect(instance).to.be();
    });

    it('should have the property modifiedSince (base name: "modified_since")', function() {
      // uncomment below and update the code to test the property modifiedSince
      //var instance = new FigshareApi.ArticleSearch();
      //expect(instance).to.be();
    });

    it('should have the property offset (base name: "offset")', function() {
      // uncomment below and update the code to test the property offset
      //var instance = new FigshareApi.ArticleSearch();
      //expect(instance).to.be();
    });

    it('should have the property orderDirection (base name: "order_direction")', function() {
      // uncomment below and update the code to test the property orderDirection
      //var instance = new FigshareApi.ArticleSearch();
      //expect(instance).to.be();
    });

    it('should have the property page (base name: "page")', function() {
      // uncomment below and update the code to test the property page
      //var instance = new FigshareApi.ArticleSearch();
      //expect(instance).to.be();
    });

    it('should have the property pageSize (base name: "page_size")', function() {
      // uncomment below and update the code to test the property pageSize
      //var instance = new FigshareApi.ArticleSearch();
      //expect(instance).to.be();
    });

    it('should have the property publishedSince (base name: "published_since")', function() {
      // uncomment below and update the code to test the property publishedSince
      //var instance = new FigshareApi.ArticleSearch();
      //expect(instance).to.be();
    });

    it('should have the property searchFor (base name: "search_for")', function() {
      // uncomment below and update the code to test the property searchFor
      //var instance = new FigshareApi.ArticleSearch();
      //expect(instance).to.be();
    });

  });

}));
