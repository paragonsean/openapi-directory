/**
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FigshareApi);
  }
}(this, function(expect, FigshareApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FigshareApi.CurationDetail();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CurationDetail', function() {
    it('should create an instance of CurationDetail', function() {
      // uncomment below and update the code to test CurationDetail
      //var instance = new FigshareApi.CurationDetail();
      //expect(instance).to.be.a(FigshareApi.CurationDetail);
    });

    it('should have the property item (base name: "item")', function() {
      // uncomment below and update the code to test the property item
      //var instance = new FigshareApi.CurationDetail();
      //expect(instance).to.be();
    });

    it('should have the property accountId (base name: "account_id")', function() {
      // uncomment below and update the code to test the property accountId
      //var instance = new FigshareApi.CurationDetail();
      //expect(instance).to.be();
    });

    it('should have the property articleId (base name: "article_id")', function() {
      // uncomment below and update the code to test the property articleId
      //var instance = new FigshareApi.CurationDetail();
      //expect(instance).to.be();
    });

    it('should have the property assignedTo (base name: "assigned_to")', function() {
      // uncomment below and update the code to test the property assignedTo
      //var instance = new FigshareApi.CurationDetail();
      //expect(instance).to.be();
    });

    it('should have the property commentsCount (base name: "comments_count")', function() {
      // uncomment below and update the code to test the property commentsCount
      //var instance = new FigshareApi.CurationDetail();
      //expect(instance).to.be();
    });

    it('should have the property createdDate (base name: "created_date")', function() {
      // uncomment below and update the code to test the property createdDate
      //var instance = new FigshareApi.CurationDetail();
      //expect(instance).to.be();
    });

    it('should have the property groupId (base name: "group_id")', function() {
      // uncomment below and update the code to test the property groupId
      //var instance = new FigshareApi.CurationDetail();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new FigshareApi.CurationDetail();
      //expect(instance).to.be();
    });

    it('should have the property modifiedDate (base name: "modified_date")', function() {
      // uncomment below and update the code to test the property modifiedDate
      //var instance = new FigshareApi.CurationDetail();
      //expect(instance).to.be();
    });

    it('should have the property reviewDate (base name: "review_date")', function() {
      // uncomment below and update the code to test the property reviewDate
      //var instance = new FigshareApi.CurationDetail();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new FigshareApi.CurationDetail();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new FigshareApi.CurationDetail();
      //expect(instance).to.be();
    });

  });

}));
