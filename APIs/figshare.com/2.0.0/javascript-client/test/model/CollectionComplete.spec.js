/**
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FigshareApi);
  }
}(this, function(expect, FigshareApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FigshareApi.CollectionComplete();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CollectionComplete', function() {
    it('should create an instance of CollectionComplete', function() {
      // uncomment below and update the code to test CollectionComplete
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be.a(FigshareApi.CollectionComplete);
    });

    it('should have the property articlesCount (base name: "articles_count")', function() {
      // uncomment below and update the code to test the property articlesCount
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property authors (base name: "authors")', function() {
      // uncomment below and update the code to test the property authors
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property categories (base name: "categories")', function() {
      // uncomment below and update the code to test the property categories
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property citation (base name: "citation")', function() {
      // uncomment below and update the code to test the property citation
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property createdDate (base name: "created_date")', function() {
      // uncomment below and update the code to test the property createdDate
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property customFields (base name: "custom_fields")', function() {
      // uncomment below and update the code to test the property customFields
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property funding (base name: "funding")', function() {
      // uncomment below and update the code to test the property funding
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property groupId (base name: "group_id")', function() {
      // uncomment below and update the code to test the property groupId
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property groupResourceId (base name: "group_resource_id")', function() {
      // uncomment below and update the code to test the property groupResourceId
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property institutionId (base name: "institution_id")', function() {
      // uncomment below and update the code to test the property institutionId
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property modifiedDate (base name: "modified_date")', function() {
      // uncomment below and update the code to test the property modifiedDate
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property _public (base name: "public")', function() {
      // uncomment below and update the code to test the property _public
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property references (base name: "references")', function() {
      // uncomment below and update the code to test the property references
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property resourceDoi (base name: "resource_doi")', function() {
      // uncomment below and update the code to test the property resourceDoi
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property resourceId (base name: "resource_id")', function() {
      // uncomment below and update the code to test the property resourceId
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property resourceLink (base name: "resource_link")', function() {
      // uncomment below and update the code to test the property resourceLink
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property resourceTitle (base name: "resource_title")', function() {
      // uncomment below and update the code to test the property resourceTitle
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property resourceVersion (base name: "resource_version")', function() {
      // uncomment below and update the code to test the property resourceVersion
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property timeline (base name: "timeline")', function() {
      // uncomment below and update the code to test the property timeline
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property doi (base name: "doi")', function() {
      // uncomment below and update the code to test the property doi
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property handle (base name: "handle")', function() {
      // uncomment below and update the code to test the property handle
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property publishedDate (base name: "published_date")', function() {
      // uncomment below and update the code to test the property publishedDate
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new FigshareApi.CollectionComplete();
      //expect(instance).to.be();
    });

  });

}));
