/**
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUser.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUser::OAIUser(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUser::OAIUser() {
    this->initializeModel();
}

OAIUser::~OAIUser() {}

void OAIUser::initializeModel() {

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_is_active_isSet = false;
    m_is_active_isValid = false;

    m_is_public_isSet = false;
    m_is_public_isValid = false;

    m_job_title_isSet = false;
    m_job_title_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_orcid_id_isSet = false;
    m_orcid_id_isValid = false;

    m_url_name_isSet = false;
    m_url_name_isValid = false;
}

void OAIUser::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUser::fromJsonObject(QJsonObject json) {

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("first_name")]);
    m_first_name_isSet = !json[QString("first_name")].isNull() && m_first_name_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_is_active_isValid = ::OpenAPI::fromJsonValue(m_is_active, json[QString("is_active")]);
    m_is_active_isSet = !json[QString("is_active")].isNull() && m_is_active_isValid;

    m_is_public_isValid = ::OpenAPI::fromJsonValue(m_is_public, json[QString("is_public")]);
    m_is_public_isSet = !json[QString("is_public")].isNull() && m_is_public_isValid;

    m_job_title_isValid = ::OpenAPI::fromJsonValue(m_job_title, json[QString("job_title")]);
    m_job_title_isSet = !json[QString("job_title")].isNull() && m_job_title_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("last_name")]);
    m_last_name_isSet = !json[QString("last_name")].isNull() && m_last_name_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_orcid_id_isValid = ::OpenAPI::fromJsonValue(m_orcid_id, json[QString("orcid_id")]);
    m_orcid_id_isSet = !json[QString("orcid_id")].isNull() && m_orcid_id_isValid;

    m_url_name_isValid = ::OpenAPI::fromJsonValue(m_url_name, json[QString("url_name")]);
    m_url_name_isSet = !json[QString("url_name")].isNull() && m_url_name_isValid;
}

QString OAIUser::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUser::asJsonObject() const {
    QJsonObject obj;
    if (m_first_name_isSet) {
        obj.insert(QString("first_name"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_is_active_isSet) {
        obj.insert(QString("is_active"), ::OpenAPI::toJsonValue(m_is_active));
    }
    if (m_is_public_isSet) {
        obj.insert(QString("is_public"), ::OpenAPI::toJsonValue(m_is_public));
    }
    if (m_job_title_isSet) {
        obj.insert(QString("job_title"), ::OpenAPI::toJsonValue(m_job_title));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("last_name"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_orcid_id_isSet) {
        obj.insert(QString("orcid_id"), ::OpenAPI::toJsonValue(m_orcid_id));
    }
    if (m_url_name_isSet) {
        obj.insert(QString("url_name"), ::OpenAPI::toJsonValue(m_url_name));
    }
    return obj;
}

QString OAIUser::getFirstName() const {
    return m_first_name;
}
void OAIUser::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIUser::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIUser::is_first_name_Valid() const{
    return m_first_name_isValid;
}

qint64 OAIUser::getId() const {
    return m_id;
}
void OAIUser::setId(const qint64 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIUser::is_id_Set() const{
    return m_id_isSet;
}

bool OAIUser::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIUser::isIsActive() const {
    return m_is_active;
}
void OAIUser::setIsActive(const bool &is_active) {
    m_is_active = is_active;
    m_is_active_isSet = true;
}

bool OAIUser::is_is_active_Set() const{
    return m_is_active_isSet;
}

bool OAIUser::is_is_active_Valid() const{
    return m_is_active_isValid;
}

bool OAIUser::isIsPublic() const {
    return m_is_public;
}
void OAIUser::setIsPublic(const bool &is_public) {
    m_is_public = is_public;
    m_is_public_isSet = true;
}

bool OAIUser::is_is_public_Set() const{
    return m_is_public_isSet;
}

bool OAIUser::is_is_public_Valid() const{
    return m_is_public_isValid;
}

QString OAIUser::getJobTitle() const {
    return m_job_title;
}
void OAIUser::setJobTitle(const QString &job_title) {
    m_job_title = job_title;
    m_job_title_isSet = true;
}

bool OAIUser::is_job_title_Set() const{
    return m_job_title_isSet;
}

bool OAIUser::is_job_title_Valid() const{
    return m_job_title_isValid;
}

QString OAIUser::getLastName() const {
    return m_last_name;
}
void OAIUser::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIUser::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIUser::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAIUser::getName() const {
    return m_name;
}
void OAIUser::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUser::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUser::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIUser::getOrcidId() const {
    return m_orcid_id;
}
void OAIUser::setOrcidId(const QString &orcid_id) {
    m_orcid_id = orcid_id;
    m_orcid_id_isSet = true;
}

bool OAIUser::is_orcid_id_Set() const{
    return m_orcid_id_isSet;
}

bool OAIUser::is_orcid_id_Valid() const{
    return m_orcid_id_isValid;
}

QString OAIUser::getUrlName() const {
    return m_url_name;
}
void OAIUser::setUrlName(const QString &url_name) {
    m_url_name = url_name;
    m_url_name_isSet = true;
}

bool OAIUser::is_url_name_Set() const{
    return m_url_name_isSet;
}

bool OAIUser::is_url_name_Valid() const{
    return m_url_name_isValid;
}

bool OAIUser::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_public_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_orcid_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUser::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_first_name_isValid && m_id_isValid && m_is_active_isValid && m_is_public_isValid && m_job_title_isValid && m_last_name_isValid && m_name_isValid && m_orcid_id_isValid && m_url_name_isValid && true;
}

} // namespace OpenAPI
