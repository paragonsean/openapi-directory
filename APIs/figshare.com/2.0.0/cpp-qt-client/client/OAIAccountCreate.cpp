/**
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountCreate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountCreate::OAIAccountCreate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountCreate::OAIAccountCreate() {
    this->initializeModel();
}

OAIAccountCreate::~OAIAccountCreate() {}

void OAIAccountCreate::initializeModel() {

    m_email_isSet = false;
    m_email_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_group_id_isSet = false;
    m_group_id_isValid = false;

    m_institution_user_id_isSet = false;
    m_institution_user_id_isValid = false;

    m_is_active_isSet = false;
    m_is_active_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_quota_isSet = false;
    m_quota_isValid = false;

    m_symplectic_user_id_isSet = false;
    m_symplectic_user_id_isValid = false;
}

void OAIAccountCreate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountCreate::fromJsonObject(QJsonObject json) {

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("first_name")]);
    m_first_name_isSet = !json[QString("first_name")].isNull() && m_first_name_isValid;

    m_group_id_isValid = ::OpenAPI::fromJsonValue(m_group_id, json[QString("group_id")]);
    m_group_id_isSet = !json[QString("group_id")].isNull() && m_group_id_isValid;

    m_institution_user_id_isValid = ::OpenAPI::fromJsonValue(m_institution_user_id, json[QString("institution_user_id")]);
    m_institution_user_id_isSet = !json[QString("institution_user_id")].isNull() && m_institution_user_id_isValid;

    m_is_active_isValid = ::OpenAPI::fromJsonValue(m_is_active, json[QString("is_active")]);
    m_is_active_isSet = !json[QString("is_active")].isNull() && m_is_active_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("last_name")]);
    m_last_name_isSet = !json[QString("last_name")].isNull() && m_last_name_isValid;

    m_quota_isValid = ::OpenAPI::fromJsonValue(m_quota, json[QString("quota")]);
    m_quota_isSet = !json[QString("quota")].isNull() && m_quota_isValid;

    m_symplectic_user_id_isValid = ::OpenAPI::fromJsonValue(m_symplectic_user_id, json[QString("symplectic_user_id")]);
    m_symplectic_user_id_isSet = !json[QString("symplectic_user_id")].isNull() && m_symplectic_user_id_isValid;
}

QString OAIAccountCreate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountCreate::asJsonObject() const {
    QJsonObject obj;
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("first_name"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_group_id_isSet) {
        obj.insert(QString("group_id"), ::OpenAPI::toJsonValue(m_group_id));
    }
    if (m_institution_user_id_isSet) {
        obj.insert(QString("institution_user_id"), ::OpenAPI::toJsonValue(m_institution_user_id));
    }
    if (m_is_active_isSet) {
        obj.insert(QString("is_active"), ::OpenAPI::toJsonValue(m_is_active));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("last_name"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_quota_isSet) {
        obj.insert(QString("quota"), ::OpenAPI::toJsonValue(m_quota));
    }
    if (m_symplectic_user_id_isSet) {
        obj.insert(QString("symplectic_user_id"), ::OpenAPI::toJsonValue(m_symplectic_user_id));
    }
    return obj;
}

QString OAIAccountCreate::getEmail() const {
    return m_email;
}
void OAIAccountCreate::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIAccountCreate::is_email_Set() const{
    return m_email_isSet;
}

bool OAIAccountCreate::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIAccountCreate::getFirstName() const {
    return m_first_name;
}
void OAIAccountCreate::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIAccountCreate::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIAccountCreate::is_first_name_Valid() const{
    return m_first_name_isValid;
}

qint64 OAIAccountCreate::getGroupId() const {
    return m_group_id;
}
void OAIAccountCreate::setGroupId(const qint64 &group_id) {
    m_group_id = group_id;
    m_group_id_isSet = true;
}

bool OAIAccountCreate::is_group_id_Set() const{
    return m_group_id_isSet;
}

bool OAIAccountCreate::is_group_id_Valid() const{
    return m_group_id_isValid;
}

QString OAIAccountCreate::getInstitutionUserId() const {
    return m_institution_user_id;
}
void OAIAccountCreate::setInstitutionUserId(const QString &institution_user_id) {
    m_institution_user_id = institution_user_id;
    m_institution_user_id_isSet = true;
}

bool OAIAccountCreate::is_institution_user_id_Set() const{
    return m_institution_user_id_isSet;
}

bool OAIAccountCreate::is_institution_user_id_Valid() const{
    return m_institution_user_id_isValid;
}

bool OAIAccountCreate::isIsActive() const {
    return m_is_active;
}
void OAIAccountCreate::setIsActive(const bool &is_active) {
    m_is_active = is_active;
    m_is_active_isSet = true;
}

bool OAIAccountCreate::is_is_active_Set() const{
    return m_is_active_isSet;
}

bool OAIAccountCreate::is_is_active_Valid() const{
    return m_is_active_isValid;
}

QString OAIAccountCreate::getLastName() const {
    return m_last_name;
}
void OAIAccountCreate::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIAccountCreate::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIAccountCreate::is_last_name_Valid() const{
    return m_last_name_isValid;
}

qint64 OAIAccountCreate::getQuota() const {
    return m_quota;
}
void OAIAccountCreate::setQuota(const qint64 &quota) {
    m_quota = quota;
    m_quota_isSet = true;
}

bool OAIAccountCreate::is_quota_Set() const{
    return m_quota_isSet;
}

bool OAIAccountCreate::is_quota_Valid() const{
    return m_quota_isValid;
}

QString OAIAccountCreate::getSymplecticUserId() const {
    return m_symplectic_user_id;
}
void OAIAccountCreate::setSymplecticUserId(const QString &symplectic_user_id) {
    m_symplectic_user_id = symplectic_user_id;
    m_symplectic_user_id_isSet = true;
}

bool OAIAccountCreate::is_symplectic_user_id_Set() const{
    return m_symplectic_user_id_isSet;
}

bool OAIAccountCreate::is_symplectic_user_id_Valid() const{
    return m_symplectic_user_id_isValid;
}

bool OAIAccountCreate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_institution_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quota_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_symplectic_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountCreate::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_email_isValid && m_first_name_isValid && true;
}

} // namespace OpenAPI
