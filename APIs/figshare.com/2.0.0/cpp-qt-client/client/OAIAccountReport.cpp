/**
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountReport.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountReport::OAIAccountReport(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountReport::OAIAccountReport() {
    this->initializeModel();
}

OAIAccountReport::~OAIAccountReport() {}

void OAIAccountReport::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_created_date_isSet = false;
    m_created_date_isValid = false;

    m_download_url_isSet = false;
    m_download_url_isValid = false;

    m_group_id_isSet = false;
    m_group_id_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIAccountReport::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountReport::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_created_date_isValid = ::OpenAPI::fromJsonValue(m_created_date, json[QString("created_date")]);
    m_created_date_isSet = !json[QString("created_date")].isNull() && m_created_date_isValid;

    m_download_url_isValid = ::OpenAPI::fromJsonValue(m_download_url, json[QString("download_url")]);
    m_download_url_isSet = !json[QString("download_url")].isNull() && m_download_url_isValid;

    m_group_id_isValid = ::OpenAPI::fromJsonValue(m_group_id, json[QString("group_id")]);
    m_group_id_isSet = !json[QString("group_id")].isNull() && m_group_id_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIAccountReport::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountReport::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_created_date_isSet) {
        obj.insert(QString("created_date"), ::OpenAPI::toJsonValue(m_created_date));
    }
    if (m_download_url_isSet) {
        obj.insert(QString("download_url"), ::OpenAPI::toJsonValue(m_download_url));
    }
    if (m_group_id_isSet) {
        obj.insert(QString("group_id"), ::OpenAPI::toJsonValue(m_group_id));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

qint64 OAIAccountReport::getAccountId() const {
    return m_account_id;
}
void OAIAccountReport::setAccountId(const qint64 &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIAccountReport::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIAccountReport::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAIAccountReport::getCreatedDate() const {
    return m_created_date;
}
void OAIAccountReport::setCreatedDate(const QString &created_date) {
    m_created_date = created_date;
    m_created_date_isSet = true;
}

bool OAIAccountReport::is_created_date_Set() const{
    return m_created_date_isSet;
}

bool OAIAccountReport::is_created_date_Valid() const{
    return m_created_date_isValid;
}

QString OAIAccountReport::getDownloadUrl() const {
    return m_download_url;
}
void OAIAccountReport::setDownloadUrl(const QString &download_url) {
    m_download_url = download_url;
    m_download_url_isSet = true;
}

bool OAIAccountReport::is_download_url_Set() const{
    return m_download_url_isSet;
}

bool OAIAccountReport::is_download_url_Valid() const{
    return m_download_url_isValid;
}

qint64 OAIAccountReport::getGroupId() const {
    return m_group_id;
}
void OAIAccountReport::setGroupId(const qint64 &group_id) {
    m_group_id = group_id;
    m_group_id_isSet = true;
}

bool OAIAccountReport::is_group_id_Set() const{
    return m_group_id_isSet;
}

bool OAIAccountReport::is_group_id_Valid() const{
    return m_group_id_isValid;
}

qint64 OAIAccountReport::getId() const {
    return m_id;
}
void OAIAccountReport::setId(const qint64 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIAccountReport::is_id_Set() const{
    return m_id_isSet;
}

bool OAIAccountReport::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIAccountReport::getStatus() const {
    return m_status;
}
void OAIAccountReport::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIAccountReport::is_status_Set() const{
    return m_status_isSet;
}

bool OAIAccountReport::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIAccountReport::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_download_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountReport::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_id_isValid && m_created_date_isValid && m_download_url_isValid && m_group_id_isValid && m_id_isValid && m_status_isValid && true;
}

} // namespace OpenAPI
