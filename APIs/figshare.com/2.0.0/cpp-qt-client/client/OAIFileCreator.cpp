/**
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFileCreator.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFileCreator::OAIFileCreator(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFileCreator::OAIFileCreator() {
    this->initializeModel();
}

OAIFileCreator::~OAIFileCreator() {}

void OAIFileCreator::initializeModel() {

    m_link_isSet = false;
    m_link_isValid = false;

    m_md5_isSet = false;
    m_md5_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_size_isSet = false;
    m_size_isValid = false;
}

void OAIFileCreator::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFileCreator::fromJsonObject(QJsonObject json) {

    m_link_isValid = ::OpenAPI::fromJsonValue(m_link, json[QString("link")]);
    m_link_isSet = !json[QString("link")].isNull() && m_link_isValid;

    m_md5_isValid = ::OpenAPI::fromJsonValue(m_md5, json[QString("md5")]);
    m_md5_isSet = !json[QString("md5")].isNull() && m_md5_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_size_isValid = ::OpenAPI::fromJsonValue(m_size, json[QString("size")]);
    m_size_isSet = !json[QString("size")].isNull() && m_size_isValid;
}

QString OAIFileCreator::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFileCreator::asJsonObject() const {
    QJsonObject obj;
    if (m_link_isSet) {
        obj.insert(QString("link"), ::OpenAPI::toJsonValue(m_link));
    }
    if (m_md5_isSet) {
        obj.insert(QString("md5"), ::OpenAPI::toJsonValue(m_md5));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_size_isSet) {
        obj.insert(QString("size"), ::OpenAPI::toJsonValue(m_size));
    }
    return obj;
}

QString OAIFileCreator::getLink() const {
    return m_link;
}
void OAIFileCreator::setLink(const QString &link) {
    m_link = link;
    m_link_isSet = true;
}

bool OAIFileCreator::is_link_Set() const{
    return m_link_isSet;
}

bool OAIFileCreator::is_link_Valid() const{
    return m_link_isValid;
}

QString OAIFileCreator::getMd5() const {
    return m_md5;
}
void OAIFileCreator::setMd5(const QString &md5) {
    m_md5 = md5;
    m_md5_isSet = true;
}

bool OAIFileCreator::is_md5_Set() const{
    return m_md5_isSet;
}

bool OAIFileCreator::is_md5_Valid() const{
    return m_md5_isValid;
}

QString OAIFileCreator::getName() const {
    return m_name;
}
void OAIFileCreator::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIFileCreator::is_name_Set() const{
    return m_name_isSet;
}

bool OAIFileCreator::is_name_Valid() const{
    return m_name_isValid;
}

qint64 OAIFileCreator::getSize() const {
    return m_size;
}
void OAIFileCreator::setSize(const qint64 &size) {
    m_size = size;
    m_size_isSet = true;
}

bool OAIFileCreator::is_size_Set() const{
    return m_size_isSet;
}

bool OAIFileCreator::is_size_Valid() const{
    return m_size_isValid;
}

bool OAIFileCreator::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_md5_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFileCreator::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
