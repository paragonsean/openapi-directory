/**
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectCollaboratorInvite.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectCollaboratorInvite::OAIProjectCollaboratorInvite(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectCollaboratorInvite::OAIProjectCollaboratorInvite() {
    this->initializeModel();
}

OAIProjectCollaboratorInvite::~OAIProjectCollaboratorInvite() {}

void OAIProjectCollaboratorInvite::initializeModel() {

    m_comment_isSet = false;
    m_comment_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_role_name_isSet = false;
    m_role_name_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;
}

void OAIProjectCollaboratorInvite::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectCollaboratorInvite::fromJsonObject(QJsonObject json) {

    m_comment_isValid = ::OpenAPI::fromJsonValue(m_comment, json[QString("comment")]);
    m_comment_isSet = !json[QString("comment")].isNull() && m_comment_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_role_name_isValid = ::OpenAPI::fromJsonValue(m_role_name, json[QString("role_name")]);
    m_role_name_isSet = !json[QString("role_name")].isNull() && m_role_name_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("user_id")]);
    m_user_id_isSet = !json[QString("user_id")].isNull() && m_user_id_isValid;
}

QString OAIProjectCollaboratorInvite::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectCollaboratorInvite::asJsonObject() const {
    QJsonObject obj;
    if (m_comment_isSet) {
        obj.insert(QString("comment"), ::OpenAPI::toJsonValue(m_comment));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_role_name_isSet) {
        obj.insert(QString("role_name"), ::OpenAPI::toJsonValue(m_role_name));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("user_id"), ::OpenAPI::toJsonValue(m_user_id));
    }
    return obj;
}

QString OAIProjectCollaboratorInvite::getComment() const {
    return m_comment;
}
void OAIProjectCollaboratorInvite::setComment(const QString &comment) {
    m_comment = comment;
    m_comment_isSet = true;
}

bool OAIProjectCollaboratorInvite::is_comment_Set() const{
    return m_comment_isSet;
}

bool OAIProjectCollaboratorInvite::is_comment_Valid() const{
    return m_comment_isValid;
}

QString OAIProjectCollaboratorInvite::getEmail() const {
    return m_email;
}
void OAIProjectCollaboratorInvite::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIProjectCollaboratorInvite::is_email_Set() const{
    return m_email_isSet;
}

bool OAIProjectCollaboratorInvite::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIProjectCollaboratorInvite::getRoleName() const {
    return m_role_name;
}
void OAIProjectCollaboratorInvite::setRoleName(const QString &role_name) {
    m_role_name = role_name;
    m_role_name_isSet = true;
}

bool OAIProjectCollaboratorInvite::is_role_name_Set() const{
    return m_role_name_isSet;
}

bool OAIProjectCollaboratorInvite::is_role_name_Valid() const{
    return m_role_name_isValid;
}

qint64 OAIProjectCollaboratorInvite::getUserId() const {
    return m_user_id;
}
void OAIProjectCollaboratorInvite::setUserId(const qint64 &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAIProjectCollaboratorInvite::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAIProjectCollaboratorInvite::is_user_id_Valid() const{
    return m_user_id_isValid;
}

bool OAIProjectCollaboratorInvite::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_comment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectCollaboratorInvite::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_role_name_isValid && true;
}

} // namespace OpenAPI
