/**
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectCreate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectCreate::OAIProjectCreate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectCreate::OAIProjectCreate() {
    this->initializeModel();
}

OAIProjectCreate::~OAIProjectCreate() {}

void OAIProjectCreate::initializeModel() {

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_custom_fields_list_isSet = false;
    m_custom_fields_list_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_funding_isSet = false;
    m_funding_isValid = false;

    m_funding_list_isSet = false;
    m_funding_list_isValid = false;

    m_group_id_isSet = false;
    m_group_id_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIProjectCreate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectCreate::fromJsonObject(QJsonObject json) {

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_custom_fields_list_isValid = ::OpenAPI::fromJsonValue(m_custom_fields_list, json[QString("custom_fields_list")]);
    m_custom_fields_list_isSet = !json[QString("custom_fields_list")].isNull() && m_custom_fields_list_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_funding_isValid = ::OpenAPI::fromJsonValue(m_funding, json[QString("funding")]);
    m_funding_isSet = !json[QString("funding")].isNull() && m_funding_isValid;

    m_funding_list_isValid = ::OpenAPI::fromJsonValue(m_funding_list, json[QString("funding_list")]);
    m_funding_list_isSet = !json[QString("funding_list")].isNull() && m_funding_list_isValid;

    m_group_id_isValid = ::OpenAPI::fromJsonValue(m_group_id, json[QString("group_id")]);
    m_group_id_isSet = !json[QString("group_id")].isNull() && m_group_id_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIProjectCreate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectCreate::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_fields_isSet) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_custom_fields_list.size() > 0) {
        obj.insert(QString("custom_fields_list"), ::OpenAPI::toJsonValue(m_custom_fields_list));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_funding_isSet) {
        obj.insert(QString("funding"), ::OpenAPI::toJsonValue(m_funding));
    }
    if (m_funding_list.size() > 0) {
        obj.insert(QString("funding_list"), ::OpenAPI::toJsonValue(m_funding_list));
    }
    if (m_group_id_isSet) {
        obj.insert(QString("group_id"), ::OpenAPI::toJsonValue(m_group_id));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

OAIObject OAIProjectCreate::getCustomFields() const {
    return m_custom_fields;
}
void OAIProjectCreate::setCustomFields(const OAIObject &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIProjectCreate::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIProjectCreate::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

QList<OAICustomArticleFieldAdd> OAIProjectCreate::getCustomFieldsList() const {
    return m_custom_fields_list;
}
void OAIProjectCreate::setCustomFieldsList(const QList<OAICustomArticleFieldAdd> &custom_fields_list) {
    m_custom_fields_list = custom_fields_list;
    m_custom_fields_list_isSet = true;
}

bool OAIProjectCreate::is_custom_fields_list_Set() const{
    return m_custom_fields_list_isSet;
}

bool OAIProjectCreate::is_custom_fields_list_Valid() const{
    return m_custom_fields_list_isValid;
}

QString OAIProjectCreate::getDescription() const {
    return m_description;
}
void OAIProjectCreate::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIProjectCreate::is_description_Set() const{
    return m_description_isSet;
}

bool OAIProjectCreate::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIProjectCreate::getFunding() const {
    return m_funding;
}
void OAIProjectCreate::setFunding(const QString &funding) {
    m_funding = funding;
    m_funding_isSet = true;
}

bool OAIProjectCreate::is_funding_Set() const{
    return m_funding_isSet;
}

bool OAIProjectCreate::is_funding_Valid() const{
    return m_funding_isValid;
}

QList<OAIFundingCreate> OAIProjectCreate::getFundingList() const {
    return m_funding_list;
}
void OAIProjectCreate::setFundingList(const QList<OAIFundingCreate> &funding_list) {
    m_funding_list = funding_list;
    m_funding_list_isSet = true;
}

bool OAIProjectCreate::is_funding_list_Set() const{
    return m_funding_list_isSet;
}

bool OAIProjectCreate::is_funding_list_Valid() const{
    return m_funding_list_isValid;
}

qint64 OAIProjectCreate::getGroupId() const {
    return m_group_id;
}
void OAIProjectCreate::setGroupId(const qint64 &group_id) {
    m_group_id = group_id;
    m_group_id_isSet = true;
}

bool OAIProjectCreate::is_group_id_Set() const{
    return m_group_id_isSet;
}

bool OAIProjectCreate::is_group_id_Valid() const{
    return m_group_id_isValid;
}

QString OAIProjectCreate::getTitle() const {
    return m_title;
}
void OAIProjectCreate::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIProjectCreate::is_title_Set() const{
    return m_title_isSet;
}

bool OAIProjectCreate::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIProjectCreate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields_list.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_funding_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_funding_list.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectCreate::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_title_isValid && true;
}

} // namespace OpenAPI
