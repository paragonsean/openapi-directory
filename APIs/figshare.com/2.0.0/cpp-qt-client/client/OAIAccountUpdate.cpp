/**
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountUpdate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountUpdate::OAIAccountUpdate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountUpdate::OAIAccountUpdate() {
    this->initializeModel();
}

OAIAccountUpdate::~OAIAccountUpdate() {}

void OAIAccountUpdate::initializeModel() {

    m_group_id_isSet = false;
    m_group_id_isValid = false;

    m_is_active_isSet = false;
    m_is_active_isValid = false;
}

void OAIAccountUpdate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountUpdate::fromJsonObject(QJsonObject json) {

    m_group_id_isValid = ::OpenAPI::fromJsonValue(m_group_id, json[QString("group_id")]);
    m_group_id_isSet = !json[QString("group_id")].isNull() && m_group_id_isValid;

    m_is_active_isValid = ::OpenAPI::fromJsonValue(m_is_active, json[QString("is_active")]);
    m_is_active_isSet = !json[QString("is_active")].isNull() && m_is_active_isValid;
}

QString OAIAccountUpdate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountUpdate::asJsonObject() const {
    QJsonObject obj;
    if (m_group_id_isSet) {
        obj.insert(QString("group_id"), ::OpenAPI::toJsonValue(m_group_id));
    }
    if (m_is_active_isSet) {
        obj.insert(QString("is_active"), ::OpenAPI::toJsonValue(m_is_active));
    }
    return obj;
}

qint64 OAIAccountUpdate::getGroupId() const {
    return m_group_id;
}
void OAIAccountUpdate::setGroupId(const qint64 &group_id) {
    m_group_id = group_id;
    m_group_id_isSet = true;
}

bool OAIAccountUpdate::is_group_id_Set() const{
    return m_group_id_isSet;
}

bool OAIAccountUpdate::is_group_id_Valid() const{
    return m_group_id_isValid;
}

bool OAIAccountUpdate::isIsActive() const {
    return m_is_active;
}
void OAIAccountUpdate::setIsActive(const bool &is_active) {
    m_is_active = is_active;
    m_is_active_isSet = true;
}

bool OAIAccountUpdate::is_is_active_Set() const{
    return m_is_active_isSet;
}

bool OAIAccountUpdate::is_is_active_Valid() const{
    return m_is_active_isValid;
}

bool OAIAccountUpdate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_active_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountUpdate::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_group_id_isValid && m_is_active_isValid && true;
}

} // namespace OpenAPI
