/**
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFundingInformation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFundingInformation::OAIFundingInformation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFundingInformation::OAIFundingInformation() {
    this->initializeModel();
}

OAIFundingInformation::~OAIFundingInformation() {}

void OAIFundingInformation::initializeModel() {

    m_funder_name_isSet = false;
    m_funder_name_isValid = false;

    m_grant_code_isSet = false;
    m_grant_code_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_is_user_defined_isSet = false;
    m_is_user_defined_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIFundingInformation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFundingInformation::fromJsonObject(QJsonObject json) {

    m_funder_name_isValid = ::OpenAPI::fromJsonValue(m_funder_name, json[QString("funder_name")]);
    m_funder_name_isSet = !json[QString("funder_name")].isNull() && m_funder_name_isValid;

    m_grant_code_isValid = ::OpenAPI::fromJsonValue(m_grant_code, json[QString("grant_code")]);
    m_grant_code_isSet = !json[QString("grant_code")].isNull() && m_grant_code_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_is_user_defined_isValid = ::OpenAPI::fromJsonValue(m_is_user_defined, json[QString("is_user_defined")]);
    m_is_user_defined_isSet = !json[QString("is_user_defined")].isNull() && m_is_user_defined_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIFundingInformation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFundingInformation::asJsonObject() const {
    QJsonObject obj;
    if (m_funder_name_isSet) {
        obj.insert(QString("funder_name"), ::OpenAPI::toJsonValue(m_funder_name));
    }
    if (m_grant_code_isSet) {
        obj.insert(QString("grant_code"), ::OpenAPI::toJsonValue(m_grant_code));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_is_user_defined_isSet) {
        obj.insert(QString("is_user_defined"), ::OpenAPI::toJsonValue(m_is_user_defined));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIFundingInformation::getFunderName() const {
    return m_funder_name;
}
void OAIFundingInformation::setFunderName(const QString &funder_name) {
    m_funder_name = funder_name;
    m_funder_name_isSet = true;
}

bool OAIFundingInformation::is_funder_name_Set() const{
    return m_funder_name_isSet;
}

bool OAIFundingInformation::is_funder_name_Valid() const{
    return m_funder_name_isValid;
}

QString OAIFundingInformation::getGrantCode() const {
    return m_grant_code;
}
void OAIFundingInformation::setGrantCode(const QString &grant_code) {
    m_grant_code = grant_code;
    m_grant_code_isSet = true;
}

bool OAIFundingInformation::is_grant_code_Set() const{
    return m_grant_code_isSet;
}

bool OAIFundingInformation::is_grant_code_Valid() const{
    return m_grant_code_isValid;
}

qint64 OAIFundingInformation::getId() const {
    return m_id;
}
void OAIFundingInformation::setId(const qint64 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIFundingInformation::is_id_Set() const{
    return m_id_isSet;
}

bool OAIFundingInformation::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIFundingInformation::isIsUserDefined() const {
    return m_is_user_defined;
}
void OAIFundingInformation::setIsUserDefined(const bool &is_user_defined) {
    m_is_user_defined = is_user_defined;
    m_is_user_defined_isSet = true;
}

bool OAIFundingInformation::is_is_user_defined_Set() const{
    return m_is_user_defined_isSet;
}

bool OAIFundingInformation::is_is_user_defined_Valid() const{
    return m_is_user_defined_isValid;
}

QString OAIFundingInformation::getTitle() const {
    return m_title;
}
void OAIFundingInformation::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIFundingInformation::is_title_Set() const{
    return m_title_isSet;
}

bool OAIFundingInformation::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIFundingInformation::getUrl() const {
    return m_url;
}
void OAIFundingInformation::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIFundingInformation::is_url_Set() const{
    return m_url_isSet;
}

bool OAIFundingInformation::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIFundingInformation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_funder_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_grant_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_user_defined_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFundingInformation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_funder_name_isValid && m_grant_code_isValid && m_id_isValid && m_is_user_defined_isValid && m_title_isValid && m_url_isValid && true;
}

} // namespace OpenAPI
