/**
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectPrivate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectPrivate::OAIProjectPrivate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectPrivate::OAIProjectPrivate() {
    this->initializeModel();
}

OAIProjectPrivate::~OAIProjectPrivate() {}

void OAIProjectPrivate::initializeModel() {

    m_role_isSet = false;
    m_role_isValid = false;

    m_storage_isSet = false;
    m_storage_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_published_date_isSet = false;
    m_published_date_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIProjectPrivate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectPrivate::fromJsonObject(QJsonObject json) {

    m_role_isValid = ::OpenAPI::fromJsonValue(m_role, json[QString("role")]);
    m_role_isSet = !json[QString("role")].isNull() && m_role_isValid;

    m_storage_isValid = ::OpenAPI::fromJsonValue(m_storage, json[QString("storage")]);
    m_storage_isSet = !json[QString("storage")].isNull() && m_storage_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_published_date_isValid = ::OpenAPI::fromJsonValue(m_published_date, json[QString("published_date")]);
    m_published_date_isSet = !json[QString("published_date")].isNull() && m_published_date_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIProjectPrivate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectPrivate::asJsonObject() const {
    QJsonObject obj;
    if (m_role_isSet) {
        obj.insert(QString("role"), ::OpenAPI::toJsonValue(m_role));
    }
    if (m_storage_isSet) {
        obj.insert(QString("storage"), ::OpenAPI::toJsonValue(m_storage));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_published_date_isSet) {
        obj.insert(QString("published_date"), ::OpenAPI::toJsonValue(m_published_date));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIProjectPrivate::getRole() const {
    return m_role;
}
void OAIProjectPrivate::setRole(const QString &role) {
    m_role = role;
    m_role_isSet = true;
}

bool OAIProjectPrivate::is_role_Set() const{
    return m_role_isSet;
}

bool OAIProjectPrivate::is_role_Valid() const{
    return m_role_isValid;
}

QString OAIProjectPrivate::getStorage() const {
    return m_storage;
}
void OAIProjectPrivate::setStorage(const QString &storage) {
    m_storage = storage;
    m_storage_isSet = true;
}

bool OAIProjectPrivate::is_storage_Set() const{
    return m_storage_isSet;
}

bool OAIProjectPrivate::is_storage_Valid() const{
    return m_storage_isValid;
}

qint64 OAIProjectPrivate::getId() const {
    return m_id;
}
void OAIProjectPrivate::setId(const qint64 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIProjectPrivate::is_id_Set() const{
    return m_id_isSet;
}

bool OAIProjectPrivate::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIProjectPrivate::getPublishedDate() const {
    return m_published_date;
}
void OAIProjectPrivate::setPublishedDate(const QString &published_date) {
    m_published_date = published_date;
    m_published_date_isSet = true;
}

bool OAIProjectPrivate::is_published_date_Set() const{
    return m_published_date_isSet;
}

bool OAIProjectPrivate::is_published_date_Valid() const{
    return m_published_date_isValid;
}

QString OAIProjectPrivate::getTitle() const {
    return m_title;
}
void OAIProjectPrivate::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIProjectPrivate::is_title_Set() const{
    return m_title_isSet;
}

bool OAIProjectPrivate::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIProjectPrivate::getUrl() const {
    return m_url;
}
void OAIProjectPrivate::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIProjectPrivate::is_url_Set() const{
    return m_url_isSet;
}

bool OAIProjectPrivate::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIProjectPrivate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_role_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_storage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_published_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectPrivate::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_role_isValid && m_storage_isValid && m_id_isValid && m_published_date_isValid && m_title_isValid && m_url_isValid && true;
}

} // namespace OpenAPI
