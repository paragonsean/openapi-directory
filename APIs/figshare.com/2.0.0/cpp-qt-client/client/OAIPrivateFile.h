/**
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPrivateFile.h
 *
 * 
 */

#ifndef OAIPrivateFile_H
#define OAIPrivateFile_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPrivateFile : public OAIObject {
public:
    OAIPrivateFile();
    OAIPrivateFile(QString json);
    ~OAIPrivateFile() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIsAttachedToPublicVersion() const;
    void setIsAttachedToPublicVersion(const bool &is_attached_to_public_version);
    bool is_is_attached_to_public_version_Set() const;
    bool is_is_attached_to_public_version_Valid() const;

    QString getPreviewState() const;
    void setPreviewState(const QString &preview_state);
    bool is_preview_state_Set() const;
    bool is_preview_state_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getUploadToken() const;
    void setUploadToken(const QString &upload_token);
    bool is_upload_token_Set() const;
    bool is_upload_token_Valid() const;

    QString getUploadUrl() const;
    void setUploadUrl(const QString &upload_url);
    bool is_upload_url_Set() const;
    bool is_upload_url_Valid() const;

    QString getViewerType() const;
    void setViewerType(const QString &viewer_type);
    bool is_viewer_type_Set() const;
    bool is_viewer_type_Valid() const;

    QString getComputedMd5() const;
    void setComputedMd5(const QString &computed_md5);
    bool is_computed_md5_Set() const;
    bool is_computed_md5_Valid() const;

    QString getDownloadUrl() const;
    void setDownloadUrl(const QString &download_url);
    bool is_download_url_Set() const;
    bool is_download_url_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsLinkOnly() const;
    void setIsLinkOnly(const bool &is_link_only);
    bool is_is_link_only_Set() const;
    bool is_is_link_only_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint64 getSize() const;
    void setSize(const qint64 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    QString getSuppliedMd5() const;
    void setSuppliedMd5(const QString &supplied_md5);
    bool is_supplied_md5_Set() const;
    bool is_supplied_md5_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_is_attached_to_public_version;
    bool m_is_attached_to_public_version_isSet;
    bool m_is_attached_to_public_version_isValid;

    QString m_preview_state;
    bool m_preview_state_isSet;
    bool m_preview_state_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_upload_token;
    bool m_upload_token_isSet;
    bool m_upload_token_isValid;

    QString m_upload_url;
    bool m_upload_url_isSet;
    bool m_upload_url_isValid;

    QString m_viewer_type;
    bool m_viewer_type_isSet;
    bool m_viewer_type_isValid;

    QString m_computed_md5;
    bool m_computed_md5_isSet;
    bool m_computed_md5_isValid;

    QString m_download_url;
    bool m_download_url_isSet;
    bool m_download_url_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_link_only;
    bool m_is_link_only_isSet;
    bool m_is_link_only_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint64 m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    QString m_supplied_md5;
    bool m_supplied_md5_isSet;
    bool m_supplied_md5_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPrivateFile)

#endif // OAIPrivateFile_H
