/**
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccount.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccount::OAIAccount(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccount::OAIAccount() {
    this->initializeModel();
}

OAIAccount::~OAIAccount() {}

void OAIAccount::initializeModel() {

    m_active_isSet = false;
    m_active_isValid = false;

    m_created_date_isSet = false;
    m_created_date_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_group_id_isSet = false;
    m_group_id_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_institution_id_isSet = false;
    m_institution_id_isValid = false;

    m_institution_user_id_isSet = false;
    m_institution_user_id_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_maximum_file_size_isSet = false;
    m_maximum_file_size_isValid = false;

    m_modified_date_isSet = false;
    m_modified_date_isValid = false;

    m_pending_quota_request_isSet = false;
    m_pending_quota_request_isValid = false;

    m_quota_isSet = false;
    m_quota_isValid = false;

    m_used_quota_isSet = false;
    m_used_quota_isValid = false;

    m_used_quota_private_isSet = false;
    m_used_quota_private_isValid = false;

    m_used_quota_public_isSet = false;
    m_used_quota_public_isValid = false;
}

void OAIAccount::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccount::fromJsonObject(QJsonObject json) {

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("active")]);
    m_active_isSet = !json[QString("active")].isNull() && m_active_isValid;

    m_created_date_isValid = ::OpenAPI::fromJsonValue(m_created_date, json[QString("created_date")]);
    m_created_date_isSet = !json[QString("created_date")].isNull() && m_created_date_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("first_name")]);
    m_first_name_isSet = !json[QString("first_name")].isNull() && m_first_name_isValid;

    m_group_id_isValid = ::OpenAPI::fromJsonValue(m_group_id, json[QString("group_id")]);
    m_group_id_isSet = !json[QString("group_id")].isNull() && m_group_id_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_institution_id_isValid = ::OpenAPI::fromJsonValue(m_institution_id, json[QString("institution_id")]);
    m_institution_id_isSet = !json[QString("institution_id")].isNull() && m_institution_id_isValid;

    m_institution_user_id_isValid = ::OpenAPI::fromJsonValue(m_institution_user_id, json[QString("institution_user_id")]);
    m_institution_user_id_isSet = !json[QString("institution_user_id")].isNull() && m_institution_user_id_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("last_name")]);
    m_last_name_isSet = !json[QString("last_name")].isNull() && m_last_name_isValid;

    m_maximum_file_size_isValid = ::OpenAPI::fromJsonValue(m_maximum_file_size, json[QString("maximum_file_size")]);
    m_maximum_file_size_isSet = !json[QString("maximum_file_size")].isNull() && m_maximum_file_size_isValid;

    m_modified_date_isValid = ::OpenAPI::fromJsonValue(m_modified_date, json[QString("modified_date")]);
    m_modified_date_isSet = !json[QString("modified_date")].isNull() && m_modified_date_isValid;

    m_pending_quota_request_isValid = ::OpenAPI::fromJsonValue(m_pending_quota_request, json[QString("pending_quota_request")]);
    m_pending_quota_request_isSet = !json[QString("pending_quota_request")].isNull() && m_pending_quota_request_isValid;

    m_quota_isValid = ::OpenAPI::fromJsonValue(m_quota, json[QString("quota")]);
    m_quota_isSet = !json[QString("quota")].isNull() && m_quota_isValid;

    m_used_quota_isValid = ::OpenAPI::fromJsonValue(m_used_quota, json[QString("used_quota")]);
    m_used_quota_isSet = !json[QString("used_quota")].isNull() && m_used_quota_isValid;

    m_used_quota_private_isValid = ::OpenAPI::fromJsonValue(m_used_quota_private, json[QString("used_quota_private")]);
    m_used_quota_private_isSet = !json[QString("used_quota_private")].isNull() && m_used_quota_private_isValid;

    m_used_quota_public_isValid = ::OpenAPI::fromJsonValue(m_used_quota_public, json[QString("used_quota_public")]);
    m_used_quota_public_isSet = !json[QString("used_quota_public")].isNull() && m_used_quota_public_isValid;
}

QString OAIAccount::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccount::asJsonObject() const {
    QJsonObject obj;
    if (m_active_isSet) {
        obj.insert(QString("active"), ::OpenAPI::toJsonValue(m_active));
    }
    if (m_created_date_isSet) {
        obj.insert(QString("created_date"), ::OpenAPI::toJsonValue(m_created_date));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("first_name"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_group_id_isSet) {
        obj.insert(QString("group_id"), ::OpenAPI::toJsonValue(m_group_id));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_institution_id_isSet) {
        obj.insert(QString("institution_id"), ::OpenAPI::toJsonValue(m_institution_id));
    }
    if (m_institution_user_id_isSet) {
        obj.insert(QString("institution_user_id"), ::OpenAPI::toJsonValue(m_institution_user_id));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("last_name"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_maximum_file_size_isSet) {
        obj.insert(QString("maximum_file_size"), ::OpenAPI::toJsonValue(m_maximum_file_size));
    }
    if (m_modified_date_isSet) {
        obj.insert(QString("modified_date"), ::OpenAPI::toJsonValue(m_modified_date));
    }
    if (m_pending_quota_request_isSet) {
        obj.insert(QString("pending_quota_request"), ::OpenAPI::toJsonValue(m_pending_quota_request));
    }
    if (m_quota_isSet) {
        obj.insert(QString("quota"), ::OpenAPI::toJsonValue(m_quota));
    }
    if (m_used_quota_isSet) {
        obj.insert(QString("used_quota"), ::OpenAPI::toJsonValue(m_used_quota));
    }
    if (m_used_quota_private_isSet) {
        obj.insert(QString("used_quota_private"), ::OpenAPI::toJsonValue(m_used_quota_private));
    }
    if (m_used_quota_public_isSet) {
        obj.insert(QString("used_quota_public"), ::OpenAPI::toJsonValue(m_used_quota_public));
    }
    return obj;
}

qint64 OAIAccount::getActive() const {
    return m_active;
}
void OAIAccount::setActive(const qint64 &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAIAccount::is_active_Set() const{
    return m_active_isSet;
}

bool OAIAccount::is_active_Valid() const{
    return m_active_isValid;
}

QString OAIAccount::getCreatedDate() const {
    return m_created_date;
}
void OAIAccount::setCreatedDate(const QString &created_date) {
    m_created_date = created_date;
    m_created_date_isSet = true;
}

bool OAIAccount::is_created_date_Set() const{
    return m_created_date_isSet;
}

bool OAIAccount::is_created_date_Valid() const{
    return m_created_date_isValid;
}

QString OAIAccount::getEmail() const {
    return m_email;
}
void OAIAccount::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIAccount::is_email_Set() const{
    return m_email_isSet;
}

bool OAIAccount::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIAccount::getFirstName() const {
    return m_first_name;
}
void OAIAccount::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIAccount::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIAccount::is_first_name_Valid() const{
    return m_first_name_isValid;
}

qint64 OAIAccount::getGroupId() const {
    return m_group_id;
}
void OAIAccount::setGroupId(const qint64 &group_id) {
    m_group_id = group_id;
    m_group_id_isSet = true;
}

bool OAIAccount::is_group_id_Set() const{
    return m_group_id_isSet;
}

bool OAIAccount::is_group_id_Valid() const{
    return m_group_id_isValid;
}

qint64 OAIAccount::getId() const {
    return m_id;
}
void OAIAccount::setId(const qint64 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIAccount::is_id_Set() const{
    return m_id_isSet;
}

bool OAIAccount::is_id_Valid() const{
    return m_id_isValid;
}

qint64 OAIAccount::getInstitutionId() const {
    return m_institution_id;
}
void OAIAccount::setInstitutionId(const qint64 &institution_id) {
    m_institution_id = institution_id;
    m_institution_id_isSet = true;
}

bool OAIAccount::is_institution_id_Set() const{
    return m_institution_id_isSet;
}

bool OAIAccount::is_institution_id_Valid() const{
    return m_institution_id_isValid;
}

QString OAIAccount::getInstitutionUserId() const {
    return m_institution_user_id;
}
void OAIAccount::setInstitutionUserId(const QString &institution_user_id) {
    m_institution_user_id = institution_user_id;
    m_institution_user_id_isSet = true;
}

bool OAIAccount::is_institution_user_id_Set() const{
    return m_institution_user_id_isSet;
}

bool OAIAccount::is_institution_user_id_Valid() const{
    return m_institution_user_id_isValid;
}

QString OAIAccount::getLastName() const {
    return m_last_name;
}
void OAIAccount::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIAccount::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIAccount::is_last_name_Valid() const{
    return m_last_name_isValid;
}

qint64 OAIAccount::getMaximumFileSize() const {
    return m_maximum_file_size;
}
void OAIAccount::setMaximumFileSize(const qint64 &maximum_file_size) {
    m_maximum_file_size = maximum_file_size;
    m_maximum_file_size_isSet = true;
}

bool OAIAccount::is_maximum_file_size_Set() const{
    return m_maximum_file_size_isSet;
}

bool OAIAccount::is_maximum_file_size_Valid() const{
    return m_maximum_file_size_isValid;
}

QString OAIAccount::getModifiedDate() const {
    return m_modified_date;
}
void OAIAccount::setModifiedDate(const QString &modified_date) {
    m_modified_date = modified_date;
    m_modified_date_isSet = true;
}

bool OAIAccount::is_modified_date_Set() const{
    return m_modified_date_isSet;
}

bool OAIAccount::is_modified_date_Valid() const{
    return m_modified_date_isValid;
}

bool OAIAccount::isPendingQuotaRequest() const {
    return m_pending_quota_request;
}
void OAIAccount::setPendingQuotaRequest(const bool &pending_quota_request) {
    m_pending_quota_request = pending_quota_request;
    m_pending_quota_request_isSet = true;
}

bool OAIAccount::is_pending_quota_request_Set() const{
    return m_pending_quota_request_isSet;
}

bool OAIAccount::is_pending_quota_request_Valid() const{
    return m_pending_quota_request_isValid;
}

qint64 OAIAccount::getQuota() const {
    return m_quota;
}
void OAIAccount::setQuota(const qint64 &quota) {
    m_quota = quota;
    m_quota_isSet = true;
}

bool OAIAccount::is_quota_Set() const{
    return m_quota_isSet;
}

bool OAIAccount::is_quota_Valid() const{
    return m_quota_isValid;
}

qint64 OAIAccount::getUsedQuota() const {
    return m_used_quota;
}
void OAIAccount::setUsedQuota(const qint64 &used_quota) {
    m_used_quota = used_quota;
    m_used_quota_isSet = true;
}

bool OAIAccount::is_used_quota_Set() const{
    return m_used_quota_isSet;
}

bool OAIAccount::is_used_quota_Valid() const{
    return m_used_quota_isValid;
}

qint64 OAIAccount::getUsedQuotaPrivate() const {
    return m_used_quota_private;
}
void OAIAccount::setUsedQuotaPrivate(const qint64 &used_quota_private) {
    m_used_quota_private = used_quota_private;
    m_used_quota_private_isSet = true;
}

bool OAIAccount::is_used_quota_private_Set() const{
    return m_used_quota_private_isSet;
}

bool OAIAccount::is_used_quota_private_Valid() const{
    return m_used_quota_private_isValid;
}

qint64 OAIAccount::getUsedQuotaPublic() const {
    return m_used_quota_public;
}
void OAIAccount::setUsedQuotaPublic(const qint64 &used_quota_public) {
    m_used_quota_public = used_quota_public;
    m_used_quota_public_isSet = true;
}

bool OAIAccount::is_used_quota_public_Set() const{
    return m_used_quota_public_isSet;
}

bool OAIAccount::is_used_quota_public_Valid() const{
    return m_used_quota_public_isValid;
}

bool OAIAccount::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_institution_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_institution_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_maximum_file_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pending_quota_request_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quota_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_used_quota_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_used_quota_private_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_used_quota_public_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccount::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_active_isValid && m_created_date_isValid && m_email_isValid && m_first_name_isValid && m_group_id_isValid && m_id_isValid && m_institution_id_isValid && m_institution_user_id_isValid && m_last_name_isValid && m_maximum_file_size_isValid && m_modified_date_isValid && m_pending_quota_request_isValid && m_quota_isValid && m_used_quota_isValid && m_used_quota_private_isValid && m_used_quota_public_isValid && true;
}

} // namespace OpenAPI
