/**
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIArticlesCreator.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIArticlesCreator::OAIArticlesCreator(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIArticlesCreator::OAIArticlesCreator() {
    this->initializeModel();
}

OAIArticlesCreator::~OAIArticlesCreator() {}

void OAIArticlesCreator::initializeModel() {

    m_articles_isSet = false;
    m_articles_isValid = false;
}

void OAIArticlesCreator::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIArticlesCreator::fromJsonObject(QJsonObject json) {

    m_articles_isValid = ::OpenAPI::fromJsonValue(m_articles, json[QString("articles")]);
    m_articles_isSet = !json[QString("articles")].isNull() && m_articles_isValid;
}

QString OAIArticlesCreator::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIArticlesCreator::asJsonObject() const {
    QJsonObject obj;
    if (m_articles.size() > 0) {
        obj.insert(QString("articles"), ::OpenAPI::toJsonValue(m_articles));
    }
    return obj;
}

QList<qint64> OAIArticlesCreator::getArticles() const {
    return m_articles;
}
void OAIArticlesCreator::setArticles(const QList<qint64> &articles) {
    m_articles = articles;
    m_articles_isSet = true;
}

bool OAIArticlesCreator::is_articles_Set() const{
    return m_articles_isSet;
}

bool OAIArticlesCreator::is_articles_Valid() const{
    return m_articles_isValid;
}

bool OAIArticlesCreator::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_articles.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIArticlesCreator::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_articles_isValid && true;
}

} // namespace OpenAPI
