/**
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPrivateAuthorsSearch.h
 *
 * 
 */

#ifndef OAIPrivateAuthorsSearch_H
#define OAIPrivateAuthorsSearch_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPrivateAuthorsSearch : public OAIObject {
public:
    OAIPrivateAuthorsSearch();
    OAIPrivateAuthorsSearch(QString json);
    ~OAIPrivateAuthorsSearch() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getGroupId() const;
    void setGroupId(const qint64 &group_id);
    bool is_group_id_Set() const;
    bool is_group_id_Valid() const;

    qint64 getInstitutionId() const;
    void setInstitutionId(const qint64 &institution_id);
    bool is_institution_id_Set() const;
    bool is_institution_id_Valid() const;

    bool isIsActive() const;
    void setIsActive(const bool &is_active);
    bool is_is_active_Set() const;
    bool is_is_active_Valid() const;

    bool isIsPublic() const;
    void setIsPublic(const bool &is_public);
    bool is_is_public_Set() const;
    bool is_is_public_Valid() const;

    qint64 getLimit() const;
    void setLimit(const qint64 &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    qint64 getOffset() const;
    void setOffset(const qint64 &offset);
    bool is_offset_Set() const;
    bool is_offset_Valid() const;

    QString getOrcid() const;
    void setOrcid(const QString &orcid);
    bool is_orcid_Set() const;
    bool is_orcid_Valid() const;

    QString getOrder() const;
    void setOrder(const QString &order);
    bool is_order_Set() const;
    bool is_order_Valid() const;

    QString getOrderDirection() const;
    void setOrderDirection(const QString &order_direction);
    bool is_order_direction_Set() const;
    bool is_order_direction_Valid() const;

    qint64 getPage() const;
    void setPage(const qint64 &page);
    bool is_page_Set() const;
    bool is_page_Valid() const;

    qint64 getPageSize() const;
    void setPageSize(const qint64 &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    QString getSearchFor() const;
    void setSearchFor(const QString &search_for);
    bool is_search_for_Set() const;
    bool is_search_for_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_group_id;
    bool m_group_id_isSet;
    bool m_group_id_isValid;

    qint64 m_institution_id;
    bool m_institution_id_isSet;
    bool m_institution_id_isValid;

    bool m_is_active;
    bool m_is_active_isSet;
    bool m_is_active_isValid;

    bool m_is_public;
    bool m_is_public_isSet;
    bool m_is_public_isValid;

    qint64 m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;

    qint64 m_offset;
    bool m_offset_isSet;
    bool m_offset_isValid;

    QString m_orcid;
    bool m_orcid_isSet;
    bool m_orcid_isValid;

    QString m_order;
    bool m_order_isSet;
    bool m_order_isValid;

    QString m_order_direction;
    bool m_order_direction_isSet;
    bool m_order_direction_isValid;

    qint64 m_page;
    bool m_page_isSet;
    bool m_page_isValid;

    qint64 m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;

    QString m_search_for;
    bool m_search_for_isSet;
    bool m_search_for_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPrivateAuthorsSearch)

#endif // OAIPrivateAuthorsSearch_H
