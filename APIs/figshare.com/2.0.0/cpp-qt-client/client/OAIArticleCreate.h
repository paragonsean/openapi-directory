/**
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIArticleCreate.h
 *
 * 
 */

#ifndef OAIArticleCreate_H
#define OAIArticleCreate_H

#include <QJsonObject>

#include "OAICustomArticleFieldAdd.h"
#include "OAIFundingCreate.h"
#include "OAIObject.h"
#include "OAITimelineUpdate.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICustomArticleFieldAdd;
class OAIFundingCreate;
class OAITimelineUpdate;

class OAIArticleCreate : public OAIObject {
public:
    OAIArticleCreate();
    OAIArticleCreate(QString json);
    ~OAIArticleCreate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIObject> getAuthors() const;
    void setAuthors(const QList<OAIObject> &authors);
    bool is_authors_Set() const;
    bool is_authors_Valid() const;

    QList<qint64> getCategories() const;
    void setCategories(const QList<qint64> &categories);
    bool is_categories_Set() const;
    bool is_categories_Valid() const;

    QList<QString> getCategoriesBySourceId() const;
    void setCategoriesBySourceId(const QList<QString> &categories_by_source_id);
    bool is_categories_by_source_id_Set() const;
    bool is_categories_by_source_id_Valid() const;

    OAIObject getCustomFields() const;
    void setCustomFields(const OAIObject &custom_fields);
    bool is_custom_fields_Set() const;
    bool is_custom_fields_Valid() const;

    QList<OAICustomArticleFieldAdd> getCustomFieldsList() const;
    void setCustomFieldsList(const QList<OAICustomArticleFieldAdd> &custom_fields_list);
    bool is_custom_fields_list_Set() const;
    bool is_custom_fields_list_Valid() const;

    QString getDefinedType() const;
    void setDefinedType(const QString &defined_type);
    bool is_defined_type_Set() const;
    bool is_defined_type_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDoi() const;
    void setDoi(const QString &doi);
    bool is_doi_Set() const;
    bool is_doi_Valid() const;

    QString getFunding() const;
    void setFunding(const QString &funding);
    bool is_funding_Set() const;
    bool is_funding_Valid() const;

    QList<OAIFundingCreate> getFundingList() const;
    void setFundingList(const QList<OAIFundingCreate> &funding_list);
    bool is_funding_list_Set() const;
    bool is_funding_list_Valid() const;

    qint64 getGroupId() const;
    void setGroupId(const qint64 &group_id);
    bool is_group_id_Set() const;
    bool is_group_id_Valid() const;

    QString getHandle() const;
    void setHandle(const QString &handle);
    bool is_handle_Set() const;
    bool is_handle_Valid() const;

    bool isIsMetadataRecord() const;
    void setIsMetadataRecord(const bool &is_metadata_record);
    bool is_is_metadata_record_Set() const;
    bool is_is_metadata_record_Valid() const;

    QList<QString> getKeywords() const;
    void setKeywords(const QList<QString> &keywords);
    bool is_keywords_Set() const;
    bool is_keywords_Valid() const;

    qint64 getLicense() const;
    void setLicense(const qint64 &license);
    bool is_license_Set() const;
    bool is_license_Valid() const;

    QString getMetadataReason() const;
    void setMetadataReason(const QString &metadata_reason);
    bool is_metadata_reason_Set() const;
    bool is_metadata_reason_Valid() const;

    QList<QString> getReferences() const;
    void setReferences(const QList<QString> &references);
    bool is_references_Set() const;
    bool is_references_Valid() const;

    QString getResourceDoi() const;
    void setResourceDoi(const QString &resource_doi);
    bool is_resource_doi_Set() const;
    bool is_resource_doi_Valid() const;

    QString getResourceTitle() const;
    void setResourceTitle(const QString &resource_title);
    bool is_resource_title_Set() const;
    bool is_resource_title_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAITimelineUpdate getTimeline() const;
    void setTimeline(const OAITimelineUpdate &timeline);
    bool is_timeline_Set() const;
    bool is_timeline_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIObject> m_authors;
    bool m_authors_isSet;
    bool m_authors_isValid;

    QList<qint64> m_categories;
    bool m_categories_isSet;
    bool m_categories_isValid;

    QList<QString> m_categories_by_source_id;
    bool m_categories_by_source_id_isSet;
    bool m_categories_by_source_id_isValid;

    OAIObject m_custom_fields;
    bool m_custom_fields_isSet;
    bool m_custom_fields_isValid;

    QList<OAICustomArticleFieldAdd> m_custom_fields_list;
    bool m_custom_fields_list_isSet;
    bool m_custom_fields_list_isValid;

    QString m_defined_type;
    bool m_defined_type_isSet;
    bool m_defined_type_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_doi;
    bool m_doi_isSet;
    bool m_doi_isValid;

    QString m_funding;
    bool m_funding_isSet;
    bool m_funding_isValid;

    QList<OAIFundingCreate> m_funding_list;
    bool m_funding_list_isSet;
    bool m_funding_list_isValid;

    qint64 m_group_id;
    bool m_group_id_isSet;
    bool m_group_id_isValid;

    QString m_handle;
    bool m_handle_isSet;
    bool m_handle_isValid;

    bool m_is_metadata_record;
    bool m_is_metadata_record_isSet;
    bool m_is_metadata_record_isValid;

    QList<QString> m_keywords;
    bool m_keywords_isSet;
    bool m_keywords_isValid;

    qint64 m_license;
    bool m_license_isSet;
    bool m_license_isValid;

    QString m_metadata_reason;
    bool m_metadata_reason_isSet;
    bool m_metadata_reason_isValid;

    QList<QString> m_references;
    bool m_references_isSet;
    bool m_references_isValid;

    QString m_resource_doi;
    bool m_resource_doi_isSet;
    bool m_resource_doi_isValid;

    QString m_resource_title;
    bool m_resource_title_isSet;
    bool m_resource_title_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAITimelineUpdate m_timeline;
    bool m_timeline_isSet;
    bool m_timeline_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIArticleCreate)

#endif // OAIArticleCreate_H
