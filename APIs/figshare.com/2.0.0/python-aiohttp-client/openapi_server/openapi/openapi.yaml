openapi: 3.0.0
info:
  description: Figshare apiv2. Using Swagger 2.0
  title: Figshare API
  version: 2.0.0
  x-apisguru-categories:
  - open_data
  x-logo:
    backgroundColor: '#FFFFFF'
    url: https://user-images.githubusercontent.com/21603/27885832-5da28e32-61d1-11e7-8811-ed7238df2c20.png
  x-origin:
  - format: openapi
    url: http://docs.figshare.com/swagger.json
    version: "3.0"
  x-providerName: figshare.com
servers:
- url: https://api.figshare.com/v2
paths:
  /account:
    get:
      description: Account information for token/personal token
      operationId: private_account
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: OK. Account representation
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private Account information
      tags:
      - other
      x-openapi-router-controller: openapi_server.controllers.other_controller
  /account/articles:
    get:
      description: Get Own Articles
      operationId: private_articles_list
      parameters:
      - description: Page number. Used for pagination with page_size
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 1
          type: integer
        style: form
      - description: The number of results included on a page. Used for pagination
          with page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 10
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Number of results included on a page. Used for pagination with
          query
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Where to start the listing(the offset of the first result). Used
          for pagination with limit
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Article'
                type: array
          description: OK. An array of articles belonging to the account
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private Articles
      tags:
      - articles
      x-openapi-router-controller: openapi_server.controllers.articles_controller
    post:
      description: Create a new Article by sending article information
      operationId: private_article_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleCreate'
        description: Article description
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationWarnings'
          description: Created
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Create new Article
      tags:
      - articles
      x-subcategory: Private Article
      x-openapi-router-controller: openapi_server.controllers.articles_controller
      x-codegen-request-body-name: body
  /account/articles/export:
    get:
      description: Return status on all reports generated for the account from the
        oauth credentials
      operationId: account_article_report
      parameters:
      - description: A group ID to filter by
        explode: true
        in: query
        name: group_id
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccountReport'
                type: array
          description: OK. An array of account report entries
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Account Article Report
      tags:
      - articles
      x-openapi-router-controller: openapi_server.controllers.articles_controller
    post:
      description: Initiate a new Article Report for this Account. There is a limit
        of 1 report per day.
      operationId: account_article_report_generate
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountReport'
          description: OK. AccountReport created.
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Initiate a new Report
      tags:
      - articles
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /account/articles/search:
    post:
      description: Returns a list of private articles filtered by the search parameters
      operationId: private_articles_search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateArticleSearch'
        description: Search Parameters
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ArticleWithProject'
                type: array
          description: OK. An array of articles
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private Articles search
      tags:
      - articles
      x-openapi-router-controller: openapi_server.controllers.articles_controller
      x-codegen-request-body-name: body
  /account/articles/{article_id}:
    delete:
      description: Delete an article
      operationId: private_article_delete
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Delete article
      tags:
      - articles
      x-subcategory: Private Article
      x-openapi-router-controller: openapi_server.controllers.articles_controller
    get:
      description: View a private article
      operationId: private_article_details
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleCompletePrivate'
          description: OK. Article representation
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Article details
      tags:
      - articles
      x-subcategory: Private Article
      x-openapi-router-controller: openapi_server.controllers.articles_controller
    put:
      description: Updating an article by passing body parameters; request can also
        be made with the PATCH method.
      operationId: private_article_update
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ArticleUpdate'
        x-body-name: body
      responses:
        "205":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationWarningsUpdate'
          description: Reset Content
          headers:
            Location:
              description: Location of newly created article
              explode: false
              schema:
                format: link
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Update article
      tags:
      - articles
      x-subcategory: Private Article
      x-openapi-router-controller: openapi_server.controllers.articles_controller
      x-codegen-request-body-name: body
  /account/articles/{article_id}/authors:
    get:
      description: List article authors
      operationId: private_article_authors_list
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Author'
                type: array
          description: OK. Authors list for article
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: List article authors
      tags:
      - articles
      x-subcategory: Private Article Authors
      x-openapi-router-controller: openapi_server.controllers.articles_controller
    post:
      description: Associate new authors with the article. This will add new authors
        to the list of already associated authors
      operationId: private_article_authors_add
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AuthorsCreator'
        x-body-name: body
      responses:
        "205":
          description: Reset Content
          headers:
            Location:
              description: Location of list of authors
              explode: false
              schema:
                format: url
                type: string
              style: simple
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Add article authors
      tags:
      - articles
      x-subcategory: Private Article Authors
      x-openapi-router-controller: openapi_server.controllers.articles_controller
      x-codegen-request-body-name: body
    put:
      description: Associate new authors with the article. This will remove all already
        associated authors and add these new ones
      operationId: private_article_authors_replace
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AuthorsCreator'
        x-body-name: body
      responses:
        "205":
          description: Reset Content
          headers:
            Location:
              description: Location of list of authors
              explode: false
              schema:
                format: url
                type: string
              style: simple
        "400":
          description: Bad Request. Article ID must be an integer and bigger than
            0. Author with ID Not Found.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Replace article authors
      tags:
      - articles
      x-subcategory: Private Article Authors
      x-openapi-router-controller: openapi_server.controllers.articles_controller
      x-codegen-request-body-name: body
  /account/articles/{article_id}/authors/{author_id}:
    delete:
      description: De-associate author from article
      operationId: private_article_author_delete
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Article Author unique identifier
        explode: false
        in: path
        name: author_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Delete article author
      tags:
      - articles
      x-subcategory: Private Article Authors
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /account/articles/{article_id}/categories:
    get:
      description: List article categories
      operationId: private_article_categories_list
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Category'
                type: array
          description: OK. Article categories
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: List article categories
      tags:
      - articles
      x-subcategory: Private Article Categories
      x-openapi-router-controller: openapi_server.controllers.articles_controller
    post:
      description: Associate new categories with the article. This will add new categories
        to the list of already associated categories
      operationId: private_article_categories_add
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CategoriesCreator'
        x-body-name: body
      responses:
        "205":
          description: Reset Content
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Add article categories
      tags:
      - articles
      x-subcategory: Private Article Categories
      x-openapi-router-controller: openapi_server.controllers.articles_controller
      x-codegen-request-body-name: body
    put:
      description: Associate new categories with the article. This will remove all
        already associated categories and add these new ones
      operationId: private_article_categories_replace
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CategoriesCreator'
        x-body-name: body
      responses:
        "205":
          description: Reset Content
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Replace article categories
      tags:
      - articles
      x-subcategory: Private Article Categories
      x-openapi-router-controller: openapi_server.controllers.articles_controller
      x-codegen-request-body-name: body
  /account/articles/{article_id}/categories/{category_id}:
    delete:
      description: De-associate category from article
      operationId: private_article_category_delete
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Category unique identifier
        explode: false
        in: path
        name: category_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Delete article category
      tags:
      - articles
      x-subcategory: Private Article Categories
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /account/articles/{article_id}/confidentiality:
    delete:
      description: "Delete confidentiality settings. The confidentiality feature is\
        \ now deprecated. This has been replaced by the new extended embargo functionality\
        \ and all items that used to be confidential have now been migrated to items\
        \ with a permanent embargo on files. All API endpoints related to this functionality\
        \ will remain for backwards compatibility, but will now be attached to the\
        \ new extended embargo workflows."
      operationId: private_article_confidentiality_delete
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Delete article confidentiality
      tags:
      - articles
      x-subcategory: Private Article Confidentiality - DEPRECATED
      x-openapi-router-controller: openapi_server.controllers.articles_controller
    get:
      description: "View confidentiality settings. The confidentiality feature is\
        \ now deprecated. This has been replaced by the new extended embargo functionality\
        \ and all items that used to be confidential have now been migrated to items\
        \ with a permanent embargo on files. All API endpoints related to this functionality\
        \ will remain for backwards compatibility, but will now be attached to the\
        \ new extended embargo workflows."
      operationId: private_article_confidentiality_details
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleConfidentiality'
          description: OK. Article categories
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Article confidentiality details
      tags:
      - articles
      x-subcategory: Private Article Confidentiality - DEPRECATED
      x-openapi-router-controller: openapi_server.controllers.articles_controller
    put:
      description: "Update confidentiality settings. The confidentiality feature is\
        \ now deprecated. This has been replaced by the new extended embargo functionality\
        \ and all items that used to be confidential have now been migrated to items\
        \ with a permanent embargo on files. All API endpoints related to this functionality\
        \ will remain for backwards compatibility, but will now be attached to the\
        \ new extended embargo workflows."
      operationId: private_article_confidentiality_update
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfidentialityCreator'
        required: true
        x-body-name: body
      responses:
        "205":
          description: Reset Content
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Update article confidentiality
      tags:
      - articles
      x-subcategory: Private Article Confidentiality - DEPRECATED
      x-openapi-router-controller: openapi_server.controllers.articles_controller
      x-codegen-request-body-name: body
  /account/articles/{article_id}/embargo:
    delete:
      description: Will lift the embargo for the specified article
      operationId: private_article_embargo_delete
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Delete Article Embargo
      tags:
      - articles
      x-subcategory: Private Article Embargo
      x-openapi-router-controller: openapi_server.controllers.articles_controller
    get:
      description: View a private article embargo details
      operationId: private_article_embargo_details
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleEmbargo'
          description: OK. Embargo for article
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Article Embargo Details
      tags:
      - articles
      x-subcategory: Private Article Embargo
      x-openapi-router-controller: openapi_server.controllers.articles_controller
    put:
      description: "Note: setting an article under whole embargo does not imply that\
        \ the article will be published when the embargo will expire. You must explicitly\
        \ call the publish endpoint to enable this functionality."
      operationId: private_article_embargo_update
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleEmbargoUpdater'
        description: Embargo description
        required: true
        x-body-name: body
      responses:
        "205":
          description: Reset Content
          headers:
            Location:
              description: Location of embargo
              explode: false
              schema:
                format: link
                type: string
              style: simple
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Update Article Embargo
      tags:
      - articles
      x-subcategory: Private Article Embargo
      x-openapi-router-controller: openapi_server.controllers.articles_controller
      x-codegen-request-body-name: body
  /account/articles/{article_id}/files:
    get:
      description: List private files
      operationId: private_article_files_list
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PrivateFile'
                type: array
          description: OK. Article files list
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: List article files
      tags:
      - articles
      x-subcategory: Private Article Files
      x-openapi-router-controller: openapi_server.controllers.articles_controller
    post:
      description: "Initiate a new file upload within the article. Either use the\
        \ link property to point to an existing file that resides elsewhere and will\
        \ not be uploaded to Figshare or use the other 3 parameters (md5, name, size)."
      operationId: private_article_upload_initiate
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileCreator'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: Created
          headers:
            Location:
              description: Location of new file
              explode: false
              schema:
                format: url
                type: string
              style: simple
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity. Parameters missing or incorrect
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Initiate Upload
      tags:
      - articles
      x-subcategory: Private Article Files
      x-openapi-router-controller: openapi_server.controllers.articles_controller
      x-codegen-request-body-name: body
  /account/articles/{article_id}/files/{file_id}:
    delete:
      description: Complete file upload
      operationId: private_article_file_delete
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: File unique identifier
        explode: false
        in: path
        name: file_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: File Delete
      tags:
      - articles
      x-subcategory: Private Article Files
      x-openapi-router-controller: openapi_server.controllers.articles_controller
    get:
      description: View details of file for specified article
      operationId: private_article_file
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: File unique identifier
        explode: false
        in: path
        name: file_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateFile'
          description: OK. Article private file
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Single File
      tags:
      - articles
      x-subcategory: Private Article Files
      x-openapi-router-controller: openapi_server.controllers.articles_controller
    post:
      description: Complete file upload
      operationId: private_article_upload_complete
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: File unique identifier
        explode: false
        in: path
        name: file_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Complete Upload
      tags:
      - articles
      x-subcategory: Private Article Files
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /account/articles/{article_id}/private_links:
    get:
      description: List private links
      operationId: private_article_private_link
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PrivateLink'
                type: array
          description: OK. Article private links
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: List private links
      tags:
      - articles
      x-subcategory: Private Article Private Links
      x-openapi-router-controller: openapi_server.controllers.articles_controller
    post:
      description: Create new private link for this article
      operationId: private_article_private_link_create
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/PrivateLinkCreator'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResponse'
          description: Created
          headers:
            Location:
              description: Location of private link
              explode: false
              schema:
                format: url
                type: string
              style: simple
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Create private link
      tags:
      - articles
      x-subcategory: Private Article Private Links
      x-openapi-router-controller: openapi_server.controllers.articles_controller
      x-codegen-request-body-name: body
  /account/articles/{article_id}/private_links/{link_id}:
    delete:
      description: Disable/delete private link for this article
      operationId: private_article_private_link_delete
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Private link token
        explode: false
        in: path
        name: link_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Disable private link
      tags:
      - articles
      x-subcategory: Private Article Private Links
      x-openapi-router-controller: openapi_server.controllers.articles_controller
    put:
      description: Update existing private link for this article
      operationId: private_article_private_link_update
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Private link token
        explode: false
        in: path
        name: link_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/PrivateLinkCreator'
        x-body-name: body
      responses:
        "205":
          description: Reset Content
          headers:
            Location:
              description: Location of private link
              explode: false
              schema:
                format: url
                type: string
              style: simple
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Update private link
      tags:
      - articles
      x-subcategory: Private Article Private Links
      x-openapi-router-controller: openapi_server.controllers.articles_controller
      x-codegen-request-body-name: body
  /account/articles/{article_id}/publish:
    post:
      description: |-
        - If the whole article is under embargo, it will not be published immediately, but when the embargo expires or is lifted.
        - When an article is published, a new public version will be generated. Any further updates to the article will affect the private article data. In order to make these changes publicly visible, an explicit publish operation is needed.
      operationId: private_article_publish
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: Created
          headers:
            Location:
              description: Location of newly published article
              explode: false
              schema:
                format: link
                type: string
              style: simple
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private Article Publish
      tags:
      - articles
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /account/articles/{article_id}/reserve_doi:
    post:
      description: Reserve DOI for article
      operationId: private_article_reserve_doi
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleDOI'
          description: OK
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private Article Reserve DOI
      tags:
      - articles
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /account/articles/{article_id}/reserve_handle:
    post:
      description: Reserve Handle for article
      operationId: private_article_reserve_handle
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleHandle'
          description: OK
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private Article Reserve Handle
      tags:
      - articles
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /account/articles/{article_id}/resource:
    post:
      description: Edit article resource data.
      operationId: private_article_resource
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Resource'
        x-body-name: body
      responses:
        "205":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: Reset Content
          headers:
            Location:
              description: Location for account article details
              explode: false
              schema:
                format: link
                type: string
              style: simple
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
      security:
      - OAuth2:
        - all
      summary: Private Article Resource
      tags:
      - articles
      x-openapi-router-controller: openapi_server.controllers.articles_controller
      x-codegen-request-body-name: body
  /account/articles/{article_id}/versions/{version_id}/:
    put:
      description: Updating an article version by passing body parameters; request
        can also be made with the PATCH method.
      operationId: article_version_update
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Article version identifier
        explode: false
        in: path
        name: version_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ArticleUpdate'
        x-body-name: body
      responses:
        "205":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationWarningsUpdate'
          description: Reset Content
          headers:
            Location:
              description: Location of newly created article
              explode: false
              schema:
                format: link
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Update article version
      tags:
      - articles
      x-subcategory: Article version private updates
      x-openapi-router-controller: openapi_server.controllers.articles_controller
      x-codegen-request-body-name: body
  /account/articles/{article_id}/versions/{version_id}/update_thumb:
    put:
      description: For a given public article version update the article thumbnail
        by choosing one of the associated files
      operationId: article_version_update_thumb
      parameters:
      - description: Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Article version identifier
        explode: false
        in: path
        name: version_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileId'
        description: File ID
        required: true
        x-body-name: body
      responses:
        "205":
          description: Reset Content
          headers:
            Location:
              description: Location for article version details
              explode: false
              schema:
                format: link
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
      security:
      - OAuth2:
        - all
      summary: Update article version thumbnail
      tags:
      - articles
      x-subcategory: Article version private updates
      x-openapi-router-controller: openapi_server.controllers.articles_controller
      x-codegen-request-body-name: body
  /account/authors/search:
    post:
      description: Search for authors
      operationId: private_authors_search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateAuthorsSearch'
        description: Search Parameters
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Author'
                type: array
          description: OK. An array of authors
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Search Authors
      tags:
      - authors
      x-openapi-router-controller: openapi_server.controllers.authors_controller
      x-codegen-request-body-name: body
  /account/authors/{author_id}:
    get:
      description: View author details
      operationId: private_author_details
      parameters:
      - description: Author unique identifier
        explode: false
        in: path
        name: author_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorComplete'
          description: OK. Article representation
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Author details
      tags:
      - authors
      x-openapi-router-controller: openapi_server.controllers.authors_controller
  /account/categories:
    get:
      description: List institution categories (including parent Categories)
      operationId: private_categories_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Category'
                type: array
          description: OK. An array of categories
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private Account Categories
      tags:
      - institutions
      x-openapi-router-controller: openapi_server.controllers.institutions_controller
  /account/collections:
    get:
      description: List private collections
      operationId: private_collections_list
      parameters:
      - description: Page number. Used for pagination with page_size
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 1
          type: integer
        style: form
      - description: The number of results included on a page. Used for pagination
          with page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 10
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Number of results included on a page. Used for pagination with
          query
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Where to start the listing(the offset of the first result). Used
          for pagination with limit
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 0
          type: integer
        style: form
      - description: The field by which to order. Default varies by endpoint/resource.
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: published_date
          enum:
          - published_date
          - modified_date
          - views
          - shares
          - cites
          type: string
        style: form
      - explode: true
        in: query
        name: order_direction
        required: false
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Collection'
                type: array
          description: OK. An array of collections
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private Collections List
      tags:
      - collections
      x-openapi-router-controller: openapi_server.controllers.collections_controller
    post:
      description: Create a new Collection by sending collection information
      operationId: private_collection_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionCreate'
        description: Collection description
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationWarnings'
          description: Created
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Create collection
      tags:
      - collections
      x-subcategory: Private Collection
      x-openapi-router-controller: openapi_server.controllers.collections_controller
      x-codegen-request-body-name: body
  /account/collections/search:
    post:
      description: Returns a list of private Collections
      operationId: private_collections_search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateCollectionSearch'
        description: Search Parameters
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Collection'
                type: array
          description: OK. An array of collections
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private Collections Search
      tags:
      - collections
      x-openapi-router-controller: openapi_server.controllers.collections_controller
      x-codegen-request-body-name: body
  /account/collections/{collection_id}:
    delete:
      description: Delete n collection
      operationId: private_collection_delete
      parameters:
      - description: Collection Unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Delete collection
      tags:
      - collections
      x-subcategory: Private Collection
      x-openapi-router-controller: openapi_server.controllers.collections_controller
    get:
      description: View a collection
      operationId: private_collection_details
      parameters:
      - description: Collection Unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionCompletePrivate'
          description: OK. Collection representation
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Collection details
      tags:
      - collections
      x-subcategory: Private Collection
      x-openapi-router-controller: openapi_server.controllers.collections_controller
    put:
      description: Update collection details; request can also be made with the PATCH
        method.
      operationId: private_collection_update
      parameters:
      - description: Collection Unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionUpdate'
        description: Collection description
        required: true
        x-body-name: body
      responses:
        "205":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationWarningsUpdate'
          description: Reset Content
          headers:
            Location:
              description: Location of collection
              explode: false
              schema:
                format: link
                type: string
              style: simple
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Update collection
      tags:
      - collections
      x-subcategory: Private Collection
      x-openapi-router-controller: openapi_server.controllers.collections_controller
      x-codegen-request-body-name: body
  /account/collections/{collection_id}/articles:
    get:
      description: List collection articles
      operationId: private_collection_articles_list
      parameters:
      - description: Collection unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Page number. Used for pagination with page_size
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 1
          type: integer
        style: form
      - description: The number of results included on a page. Used for pagination
          with page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 10
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Number of results included on a page. Used for pagination with
          query
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Where to start the listing(the offset of the first result). Used
          for pagination with limit
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Article'
                type: array
          description: OK. Articles List
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: List collection articles
      tags:
      - collections
      x-subcategory: Private Collection Articles
      x-openapi-router-controller: openapi_server.controllers.collections_controller
    post:
      description: Associate new articles with the collection. This will add new articles
        to the list of already associated articles
      operationId: private_collection_articles_add
      parameters:
      - description: Collection unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticlesCreator'
        description: Articles list
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: Reset Content
          headers:
            Location:
              description: Location of new articles
              explode: false
              schema:
                format: url
                type: string
              style: simple
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Add collection articles
      tags:
      - collections
      x-subcategory: Private Collection Articles
      x-openapi-router-controller: openapi_server.controllers.collections_controller
      x-codegen-request-body-name: body
    put:
      description: Associate new articles with the collection. This will remove all
        already associated articles and add these new ones
      operationId: private_collection_articles_replace
      parameters:
      - description: Collection unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticlesCreator'
        description: Articles List
        required: true
        x-body-name: body
      responses:
        "205":
          description: Reset Content
          headers:
            Location:
              description: Location of list of articles
              explode: false
              schema:
                format: url
                type: string
              style: simple
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Replace collection articles
      tags:
      - collections
      x-subcategory: Private Collection Articles
      x-openapi-router-controller: openapi_server.controllers.collections_controller
      x-codegen-request-body-name: body
  /account/collections/{collection_id}/articles/{article_id}:
    delete:
      description: De-associate article from collection
      operationId: private_collection_article_delete
      parameters:
      - description: Collection unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Collection article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Delete collection article
      tags:
      - collections
      x-subcategory: Private Collection Articles
      x-openapi-router-controller: openapi_server.controllers.collections_controller
  /account/collections/{collection_id}/authors:
    get:
      description: List collection authors
      operationId: private_collection_authors_list
      parameters:
      - description: Collection unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Author'
                type: array
          description: OK. Embargo for article
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: List collection authors
      tags:
      - collections
      x-subcategory: Private Collection Authors
      x-openapi-router-controller: openapi_server.controllers.collections_controller
    post:
      description: Associate new authors with the collection. This will add new authors
        to the list of already associated authors
      operationId: private_collection_authors_add
      parameters:
      - description: Collection unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AuthorsCreator2'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: Reset Content
          headers:
            Location:
              description: Location of list of authors
              explode: false
              schema:
                format: url
                type: string
              style: simple
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Add collection authors
      tags:
      - collections
      x-subcategory: Private Collection Authors
      x-openapi-router-controller: openapi_server.controllers.collections_controller
      x-codegen-request-body-name: body
    put:
      description: Associate new authors with the collection. This will remove all
        already associated authors and add these new ones
      operationId: private_collection_authors_replace
      parameters:
      - description: Collection unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AuthorsCreator2'
        x-body-name: body
      responses:
        "205":
          description: Reset Content
          headers:
            Location:
              description: Location of list of authors
              explode: false
              schema:
                format: url
                type: string
              style: simple
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Replace collection authors
      tags:
      - collections
      x-subcategory: Private Collection Authors
      x-openapi-router-controller: openapi_server.controllers.collections_controller
      x-codegen-request-body-name: body
  /account/collections/{collection_id}/authors/{author_id}:
    delete:
      description: Delete collection author
      operationId: private_collection_author_delete
      parameters:
      - description: Collection unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Collection Author unique identifier
        explode: false
        in: path
        name: author_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Delete collection author
      tags:
      - collections
      x-subcategory: Private Collection Authors
      x-openapi-router-controller: openapi_server.controllers.collections_controller
  /account/collections/{collection_id}/categories:
    get:
      description: List collection categories
      operationId: private_collection_categories_list
      parameters:
      - description: Collection unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Category'
                type: array
          description: OK. Categories list
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: List collection categories
      tags:
      - collections
      x-subcategory: Private Collection Categories
      x-openapi-router-controller: openapi_server.controllers.collections_controller
    post:
      description: Associate new categories with the collection. This will add new
        categories to the list of already associated categories
      operationId: private_collection_categories_add
      parameters:
      - description: Collection unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CategoriesCreator2'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: Reset Content
          headers:
            Location:
              description: Location of list of categories
              explode: false
              schema:
                format: url
                type: string
              style: simple
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Add collection categories
      tags:
      - collections
      x-subcategory: Private Collection Categories
      x-openapi-router-controller: openapi_server.controllers.collections_controller
      x-codegen-request-body-name: body
    put:
      description: Associate new categories with the collection. This will remove
        all already associated categories and add these new ones
      operationId: private_collection_categories_replace
      parameters:
      - description: Collection unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CategoriesCreator2'
        x-body-name: body
      responses:
        "205":
          description: Reset Content
          headers:
            Location:
              description: Location of list of categories
              explode: false
              schema:
                format: url
                type: string
              style: simple
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Replace collection categories
      tags:
      - collections
      x-subcategory: Private Collection Categories
      x-openapi-router-controller: openapi_server.controllers.collections_controller
      x-codegen-request-body-name: body
  /account/collections/{collection_id}/categories/{category_id}:
    delete:
      description: De-associate category from collection
      operationId: private_collection_category_delete
      parameters:
      - description: Collection unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Collection category unique identifier
        explode: false
        in: path
        name: category_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Delete collection category
      tags:
      - collections
      x-subcategory: Private Collection Categories
      x-openapi-router-controller: openapi_server.controllers.collections_controller
  /account/collections/{collection_id}/private_links:
    get:
      description: List article private links
      operationId: private_collection_private_links_list
      parameters:
      - description: Collection unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PrivateLink'
                type: array
          description: OK. Collection private links
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: List collection private links
      tags:
      - collections
      x-subcategory: Private Collection Private Links
      x-openapi-router-controller: openapi_server.controllers.collections_controller
    post:
      description: Create new private link
      operationId: private_collection_private_link_create
      parameters:
      - description: Collection unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CollectionPrivateLinkCreator'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResponse'
          description: Created
          headers:
            Location:
              description: Location of private link
              explode: false
              schema:
                format: url
                type: string
              style: simple
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Create collection private link
      tags:
      - collections
      x-subcategory: Private Collection Private Links
      x-openapi-router-controller: openapi_server.controllers.collections_controller
      x-codegen-request-body-name: body
  /account/collections/{collection_id}/private_links/{link_id}:
    delete:
      description: Disable/delete private link for this collection
      operationId: private_collection_private_link_delete
      parameters:
      - description: Collection unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Private link token
        explode: false
        in: path
        name: link_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Disable private link
      tags:
      - collections
      x-subcategory: Private Collection Private Links
      x-openapi-router-controller: openapi_server.controllers.collections_controller
    put:
      description: Update existing private link for this collection
      operationId: private_collection_private_link_update
      parameters:
      - description: Collection unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Private link token
        explode: false
        in: path
        name: link_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CollectionPrivateLinkCreator'
        x-body-name: body
      responses:
        "205":
          description: Reset Content
          headers:
            Location:
              description: Location of new private link
              explode: false
              schema:
                format: url
                type: string
              style: simple
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Update collection private link
      tags:
      - collections
      x-subcategory: Private Collection Private Links
      x-openapi-router-controller: openapi_server.controllers.collections_controller
      x-codegen-request-body-name: body
  /account/collections/{collection_id}/publish:
    post:
      description: "When a collection is published, a new public version will be generated.\
        \ Any further updates to the collection will affect the private collection\
        \ data. In order to make these changes publicly visible, an explicit publish\
        \ operation is needed."
      operationId: private_collection_publish
      parameters:
      - description: Collection Unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: Created
          headers:
            Location:
              description: Location of collection
              explode: false
              schema:
                format: link
                type: string
              style: simple
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private Collection Publish
      tags:
      - collections
      x-openapi-router-controller: openapi_server.controllers.collections_controller
  /account/collections/{collection_id}/reserve_doi:
    post:
      description: Reserve DOI for collection
      operationId: private_collection_reserve_doi
      parameters:
      - description: Collection Unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionDOI'
          description: OK
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private Collection Reserve DOI
      tags:
      - collections
      x-openapi-router-controller: openapi_server.controllers.collections_controller
  /account/collections/{collection_id}/reserve_handle:
    post:
      description: Reserve Handle for collection
      operationId: private_collection_reserve_handle
      parameters:
      - description: Collection Unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionHandle'
          description: OK
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private Collection Reserve Handle
      tags:
      - collections
      x-openapi-router-controller: openapi_server.controllers.collections_controller
  /account/collections/{collection_id}/resource:
    post:
      description: Edit collection resource data.
      operationId: private_collection_resource
      parameters:
      - description: Collection unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Resource'
        x-body-name: body
      responses:
        "205":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: Reset Content
          headers:
            Location:
              description: Location for account collection details
              explode: false
              schema:
                format: link
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
      security:
      - OAuth2:
        - all
      summary: Private Collection Resource
      tags:
      - collections
      x-openapi-router-controller: openapi_server.controllers.collections_controller
      x-codegen-request-body-name: body
  /account/funding/search:
    post:
      description: Search for fundings
      operationId: private_funding_search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FundingSearch'
        description: Search Parameters
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FundingInformation'
                type: array
          description: OK. An array of funding information
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Search Funding
      tags:
      - other
      x-openapi-router-controller: openapi_server.controllers.other_controller
      x-codegen-request-body-name: body
  /account/institution:
    get:
      description: Account institution details
      operationId: private_institution_details
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institution'
          description: OK. An array of institutions
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private Account Institutions
      tags:
      - institutions
      x-openapi-router-controller: openapi_server.controllers.institutions_controller
  /account/institution/accounts:
    get:
      description: Returns the accounts for which the account has administrative privileges
        (assigned and inherited).
      operationId: private_institution_accounts_list
      parameters:
      - description: Page number. Used for pagination with page_size
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 1
          type: integer
        style: form
      - description: The number of results included on a page. Used for pagination
          with page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 10
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Number of results included on a page. Used for pagination with
          query
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Where to start the listing(the offset of the first result). Used
          for pagination with limit
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 0
          type: integer
        style: form
      - description: Filter by active status
        explode: true
        in: query
        name: is_active
        required: false
        schema:
          format: int64
          maximum: 1
          minimum: 0
          type: integer
        style: form
      - description: Filter by institution_user_id
        explode: true
        in: query
        name: institution_user_id
        required: false
        schema:
          type: string
        style: form
      - description: Filter by email
        explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      - description: Retrieve accounts with an ID lower or equal to the specified
          value
        explode: true
        in: query
        name: id_lte
        required: false
        schema:
          format: int64
          minimum: 0
          type: integer
        style: form
      - description: Retrieve accounts with an ID greater or equal to the specified
          value
        explode: true
        in: query
        name: id_gte
        required: false
        schema:
          format: int64
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ShortAccount'
                type: array
          description: OK. An array of Accounts
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private Account Institution Accounts
      tags:
      - institutions
      x-openapi-router-controller: openapi_server.controllers.institutions_controller
    post:
      description: Create a new Account by sending account information
      operationId: private_institution_accounts_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreate'
        description: Account description
        required: true
        x-body-name: body
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Create new Institution Account
      tags:
      - institutions
      x-openapi-router-controller: openapi_server.controllers.institutions_controller
      x-codegen-request-body-name: body
  /account/institution/accounts/search:
    post:
      description: Returns the accounts for which the account has administrative privileges
        (assigned and inherited).
      operationId: private_institution_accounts_search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstitutionAccountsSearch'
        description: Search Parameters
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ShortAccount'
                type: array
          description: OK. An array of Accounts
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private Account Institution Accounts Search
      tags:
      - institutions
      x-openapi-router-controller: openapi_server.controllers.institutions_controller
      x-codegen-request-body-name: body
  /account/institution/accounts/{account_id}:
    put:
      description: Update Institution Account
      operationId: private_institution_accounts_update
      parameters:
      - description: Account identifier the user is associated to
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdate'
        description: Account description
        required: true
        x-body-name: body
      responses:
        "205":
          description: Reset Content
          headers:
            Location:
              description: Location of newly created article
              explode: false
              schema:
                format: link
                type: string
              style: simple
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Update Institution Account
      tags:
      - institutions
      x-openapi-router-controller: openapi_server.controllers.institutions_controller
      x-codegen-request-body-name: body
  /account/institution/articles:
    get:
      description: Get Articles from own institution. User must be administrator of
        the institution
      operationId: private_institution_articles
      parameters:
      - description: Page number. Used for pagination with page_size
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 1
          type: integer
        style: form
      - description: The number of results included on a page. Used for pagination
          with page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 10
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Number of results included on a page. Used for pagination with
          query
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Where to start the listing(the offset of the first result). Used
          for pagination with limit
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 0
          type: integer
        style: form
      - description: The field by which to order. Default varies by endpoint/resource.
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: published_date
          enum:
          - published_date
          - modified_date
          - views
          - shares
          - downloads
          - cites
          type: string
        style: form
      - explode: true
        in: query
        name: order_direction
        required: false
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: Filter by article publishing date. Will only return articles
          published after the date. date(ISO 8601) YYYY-MM-DD
        explode: true
        in: query
        name: published_since
        required: false
        schema:
          type: string
        style: form
      - description: Filter by article modified date. Will only return articles published
          after the date. date(ISO 8601) YYYY-MM-DD
        explode: true
        in: query
        name: modified_since
        required: false
        schema:
          type: string
        style: form
      - description: only return collections with this status
        explode: true
        in: query
        name: status
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: only return collections with this resource_doi
        explode: true
        in: query
        name: resource_doi
        required: false
        schema:
          type: string
        style: form
      - description: "Only return articles with the respective type. Mapping for item_type\
          \ is: 1 - Figure, 2 - Media, 3 - Dataset, 5 - Poster, 6 - Journal contribution,\
          \ 7 - Presentation, 8 - Thesis, 9 - Software, 11 - Online resource, 12 -\
          \ Preprint, 13 - Book, 14 - Conference contribution, 15 - Chapter, 16 -\
          \ Peer review, 17 - Educational resource, 18 - Report, 19 - Standard, 20\
          \ - Composition, 21 - Funding, 22 - Physical object, 23 - Data management\
          \ plan, 24 - Workflow, 25 - Monograph, 26 - Performance, 27 - Event, 28\
          \ - Service, 29 - Model"
        explode: true
        in: query
        name: item_type
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Article'
                type: array
          description: OK. An array of articles belonging to the institution
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private Institution Articles
      tags:
      - institutions
      x-openapi-router-controller: openapi_server.controllers.institutions_controller
  /account/institution/custom_fields:
    get:
      description: "Returns the custom fields in the group the user belongs to, or\
        \ the ones in the group specified, if the user has access."
      operationId: custom_fields_list
      parameters:
      - description: Group_id
        explode: true
        in: query
        name: group_id
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ShortCustomField'
                type: array
          description: OK. An array of custom fields
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private account institution group custom fields
      tags:
      - institutions
      x-openapi-router-controller: openapi_server.controllers.institutions_controller
  /account/institution/custom_fields/{custom_field_id}/items/upload:
    post:
      description: Uploads a CSV containing values for a specific custom field of
        type <b>dropdown_large_list</b>. More details in the <a href="#custom_fields">Custom
        Fields section</a>
      operationId: custom_fields_upload
      parameters:
      - description: Custom field identifier
        explode: false
        in: path
        name: custom_field_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/custom_fields_upload_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                example:
                  code: 200
                  message: OK
                type: object
          description: OK
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Custom fields values files upload
      tags:
      - institutions
      x-openapi-router-controller: openapi_server.controllers.institutions_controller
      x-codegen-request-body-name: body
  /account/institution/embargo_options:
    get:
      description: Account institution embargo options details
      operationId: private_institution_embargo_options_details
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupEmbargoOptions'
                type: array
          description: OK. An array of embargo options
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private Account Institution embargo options
      tags:
      - institutions
      x-openapi-router-controller: openapi_server.controllers.institutions_controller
  /account/institution/groups:
    get:
      description: Returns the groups for which the account has administrative privileges
        (assigned and inherited).
      operationId: private_institution_groups_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: OK. An array of Groups
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private Account Institution Groups
      tags:
      - institutions
      x-openapi-router-controller: openapi_server.controllers.institutions_controller
  /account/institution/groups/{group_id}/embargo_options:
    get:
      description: Account institution group embargo options details
      operationId: private_group_embargo_options_details
      parameters:
      - description: Group identifier
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupEmbargoOptions'
                type: array
          description: OK. An array of embargo options
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private Account Institution Group Embargo Options
      tags:
      - institutions
      x-openapi-router-controller: openapi_server.controllers.institutions_controller
  /account/institution/review/{curation_id}:
    get:
      description: Retrieve a certain curation review by its ID
      operationId: account_institution_curation
      parameters:
      - description: ID of the curation
        explode: false
        in: path
        name: curation_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurationDetail'
          description: OK. A curation review.
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Institution Curation Review
      tags:
      - institutions
      x-openapi-router-controller: openapi_server.controllers.institutions_controller
  /account/institution/review/{curation_id}/comments:
    get:
      description: Retrieve a certain curation review's comments.
      operationId: account_institution_curation_comments
      parameters:
      - description: ID of the curation
        explode: false
        in: path
        name: curation_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Number of results included on a page. Used for pagination with
          query
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Where to start the listing(the offset of the first result). Used
          for pagination with limit
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurationComment'
          description: OK. A curation review's comments.
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Institution Curation Review Comments
      tags:
      - institutions
      x-openapi-router-controller: openapi_server.controllers.institutions_controller
    post:
      description: Add a new comment to the review.
      operationId: account_institution_review_curation_id_comments_post
      parameters:
      - description: ID of the curation
        explode: false
        in: path
        name: curation_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurationCommentCreate'
        description: The content/value of the comment.
        required: true
        x-body-name: body
      responses:
        "200":
          description: OK.
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: POST Institution Curation Review Comment
      tags:
      - institutions
      x-openapi-router-controller: openapi_server.controllers.institutions_controller
      x-codegen-request-body-name: body
  /account/institution/reviews:
    get:
      description: Retrieve a list of curation reviews for this institution
      operationId: account_institution_curations
      parameters:
      - description: Filter by the group ID
        explode: true
        in: query
        name: group_id
        required: false
        schema:
          format: int64
          minimum: 0
          type: integer
        style: form
      - description: Retrieve the reviews for this article
        explode: true
        in: query
        name: article_id
        required: false
        schema:
          format: int64
          minimum: 0
          type: integer
        style: form
      - description: Filter by the status of the review
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - pending
          - approved
          - rejected
          - closed
          type: string
        style: form
      - description: Number of results included on a page. Used for pagination with
          query
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Where to start the listing(the offset of the first result). Used
          for pagination with limit
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curation'
          description: OK. A list of curation reviews.
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Institution Curation Reviews
      tags:
      - institutions
      x-openapi-router-controller: openapi_server.controllers.institutions_controller
  /account/institution/roles:
    get:
      description: Returns the roles available for groups and the institution group.
      operationId: private_institution_roles_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: OK. An array of Roles
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private Account Institution Roles
      tags:
      - institutions
      x-openapi-router-controller: openapi_server.controllers.institutions_controller
  /account/institution/roles/{account_id}:
    get:
      description: List Institution Account Group Roles
      operationId: private_institution_account_group_roles
      parameters:
      - description: Account identifier the user is associated to
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountGroupRoles'
          description: OK. Account Group Roles
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: List Institution Account Group Roles
      tags:
      - institutions
      x-openapi-router-controller: openapi_server.controllers.institutions_controller
    post:
      description: Add Institution Account Group Roles
      operationId: private_institution_account_group_roles_create
      parameters:
      - description: Account identifier the user is associated to
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountGroupRolesCreate'
        description: Account description
        required: true
        x-body-name: body
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Add Institution Account Group Roles
      tags:
      - institutions
      x-openapi-router-controller: openapi_server.controllers.institutions_controller
      x-codegen-request-body-name: body
  /account/institution/roles/{account_id}/{group_id}/{role_id}:
    delete:
      description: Delete Institution Account Group Role
      operationId: private_institution_account_group_role_delete
      parameters:
      - description: Account identifier for which to remove the role
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Group identifier for which to remove the role
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Role identifier
        explode: false
        in: path
        name: role_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Delete Institution Account Group Role
      tags:
      - institutions
      x-openapi-router-controller: openapi_server.controllers.institutions_controller
  /account/institution/users/{account_id}:
    get:
      description: Retrieve institution user information using the account_id
      operationId: private_account_institution_user
      parameters:
      - description: Account identifier the user is associated to
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK. User representation
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private Account Institution User
      tags:
      - institutions
      x-openapi-router-controller: openapi_server.controllers.institutions_controller
  /account/licenses:
    get:
      description: This is a private endpoint that requires OAuth. It will return
        a list with figshare public licenses AND licenses defined for account's institution.
      operationId: private_licenses_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/License'
                type: array
          description: OK. An array of personal licenses
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private Account Licenses
      tags:
      - other
      x-openapi-router-controller: openapi_server.controllers.other_controller
  /account/projects:
    get:
      description: List private projects
      operationId: private_projects_list
      parameters:
      - description: Page number. Used for pagination with page_size
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 1
          type: integer
        style: form
      - description: The number of results included on a page. Used for pagination
          with page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 10
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Number of results included on a page. Used for pagination with
          query
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Where to start the listing(the offset of the first result). Used
          for pagination with limit
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 0
          type: integer
        style: form
      - description: The field by which to order.
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: published_date
          enum:
          - published_date
          - modified_date
          - views
          type: string
        style: form
      - explode: true
        in: query
        name: order_direction
        required: false
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: only return collections from this institution
        explode: true
        in: query
        name: storage
        required: false
        schema:
          enum:
          - group
          - individual
          type: string
        style: form
      - description: "Any combination of owner, collaborator, viewer separated by\
          \ comma. Examples: \"owner\" or \"owner,collaborator\"."
        explode: true
        in: query
        name: roles
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectPrivate'
                type: array
          description: OK. An array of projects
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private Projects
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Create a new project
      operationId: private_project_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreate'
        description: Project  description
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProjectResponse'
          description: Created
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Create project
      tags:
      - projects
      x-subcategory: Private Project
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /account/projects/search:
    post:
      description: Search inside the private projects
      operationId: private_projects_search
      requestBody:
        $ref: '#/components/requestBodies/ProjectsSearch'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectPrivate'
                type: array
          description: OK. An array of projects
        "400":
          description: Bad Request
        "422":
          description: Bad Request
        "500":
          description: Internal Server Error
      security: []
      summary: Private Projects search
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /account/projects/{project_id}:
    delete:
      description: |
        A project can be deleted only if: - it is not public - it does not have public articles.

        When an individual project is deleted, all the articles are moved to my data of each owner.

        When a group project is deleted, all the articles and files are deleted as well. Only project owner, group admin and above can delete a project.
      operationId: private_project_delete
      parameters:
      - description: Project unique identifier
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Delete project
      tags:
      - projects
      x-subcategory: Private Project
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: View a private project
      operationId: private_project_details
      parameters:
      - description: Project unique identifier
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCompletePrivate'
          description: OK. Project representation
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: View project details
      tags:
      - projects
      x-subcategory: Private Project
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    put:
      description: Updating an project by passing body parameters; request can also
        be made with the PATCH method.
      operationId: private_project_update
      parameters:
      - description: Project unique identifier
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
        description: Project description
        required: true
        x-body-name: body
      responses:
        "205":
          description: Reset Content
          headers:
            Location:
              description: Location of project
              explode: false
              schema:
                format: link
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Update project
      tags:
      - projects
      x-subcategory: Private Project
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /account/projects/{project_id}/articles:
    get:
      description: List project articles
      operationId: private_project_articles_list
      parameters:
      - description: Project unique identifier
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Page number. Used for pagination with page_size
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 1
          type: integer
        style: form
      - description: The number of results included on a page. Used for pagination
          with page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 10
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Number of results included on a page. Used for pagination with
          query
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Where to start the listing(the offset of the first result). Used
          for pagination with limit
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Article'
                type: array
          description: OK. List of articles
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: List project articles
      tags:
      - projects
      x-subcategory: Private Project Articles
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Create a new Article and associate it with this project
      operationId: private_project_articles_create
      parameters:
      - description: Project unique identifier
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Page number. Used for pagination with page_size
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 1
          type: integer
        style: form
      - description: The number of results included on a page. Used for pagination
          with page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 10
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Number of results included on a page. Used for pagination with
          query
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Where to start the listing(the offset of the first result). Used
          for pagination with limit
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 0
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleProjectCreate'
        description: Article description
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationWarnings'
          description: Created
          headers:
            Location:
              description: Location of article
              explode: false
              schema:
                format: url
                type: string
              style: simple
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Create project article
      tags:
      - projects
      x-subcategory: Private Project Articles
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /account/projects/{project_id}/articles/{article_id}:
    delete:
      description: Delete project article
      operationId: private_project_article_delete
      parameters:
      - description: Project unique identifier
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Project Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Delete project article
      tags:
      - projects
      x-subcategory: Private Project Articles
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: Project article details
      operationId: private_project_article_details
      parameters:
      - description: Project unique identifier
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Project Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectArticle'
          description: OK. Article representation
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Project article details
      tags:
      - projects
      x-subcategory: Private Project Articles
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /account/projects/{project_id}/articles/{article_id}/files:
    get:
      description: List article files
      operationId: private_project_article_files
      parameters:
      - description: Project unique identifier
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Project Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PrivateFile'
                type: array
          description: OK. List of files
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Project article list files
      tags:
      - projects
      x-subcategory: Private Project Articles
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /account/projects/{project_id}/articles/{article_id}/files/{file_id}:
    get:
      description: Project article file details
      operationId: private_project_article_file
      parameters:
      - description: Project unique identifier
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Project Article unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: File unique identifier
        explode: false
        in: path
        name: file_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateFile'
          description: OK. File representation
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Project article file details
      tags:
      - projects
      x-subcategory: Private Project Articles
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /account/projects/{project_id}/collaborators:
    get:
      description: List Project collaborators and invited users
      operationId: private_project_collaborators_list
      parameters:
      - description: Project unique identifier
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectCollaborator'
                type: array
          description: OK. List of Collaborators
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: List project collaborators
      tags:
      - projects
      x-subcategory: Private Project Collaborators
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Invite users to collaborate on project or view the project
      operationId: private_project_collaborators_invite
      parameters:
      - description: Project unique identifier
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCollaboratorInvite'
        description: viewer or collaborator role. User user_id or email of user
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
          description: Created
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Invite project collaborators
      tags:
      - projects
      x-subcategory: Private Project Collaborators
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /account/projects/{project_id}/collaborators/{user_id}:
    delete:
      description: Remove project collaborator
      operationId: private_project_collaborator_delete
      parameters:
      - description: Project unique identifier
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: User unique identifier
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "204":
          description: OK
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Remove project collaborator
      tags:
      - projects
      x-subcategory: Private Project Collaborators
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /account/projects/{project_id}/leave:
    post:
      description: "Please note: project's owner cannot leave the project."
      operationId: private_project_leave
      parameters:
      - description: Project unique identifier
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private Project Leave
      tags:
      - projects
      x-subcategory: Private Project Collaborators
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /account/projects/{project_id}/notes:
    get:
      description: List project notes
      operationId: private_project_notes_list
      parameters:
      - description: Project unique identifier
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Page number. Used for pagination with page_size
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 1
          type: integer
        style: form
      - description: The number of results included on a page. Used for pagination
          with page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 10
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Number of results included on a page. Used for pagination with
          query
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Where to start the listing(the offset of the first result). Used
          for pagination with limit
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectNote'
                type: array
          description: OK. List of project notes
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: List project notes
      tags:
      - projects
      x-subcategory: Private Project Notes
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Create a new project note
      operationId: private_project_notes_create
      parameters:
      - description: Project unique identifier
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ProjectNoteCreate'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: Created
          headers:
            Location:
              description: Location note
              explode: false
              schema:
                format: url
                type: string
              style: simple
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Create project note
      tags:
      - projects
      x-subcategory: Private Project Notes
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /account/projects/{project_id}/notes/{note_id}:
    delete:
      operationId: private_project_note_delete
      parameters:
      - description: Project unique identifier
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Note unique identifier
        explode: false
        in: path
        name: note_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Delete project note
      tags:
      - projects
      x-subcategory: Private Project Notes
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      operationId: private_project_note
      parameters:
      - description: Project unique identifier
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Note unique identifier
        explode: false
        in: path
        name: note_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectNotePrivate'
          description: OK. Note representation
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Project note details
      tags:
      - projects
      x-subcategory: Private Project Notes
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    put:
      operationId: private_project_note_update
      parameters:
      - description: Project unique identifier
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Note unique identifier
        explode: false
        in: path
        name: note_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ProjectNoteCreate'
        x-body-name: body
      responses:
        "205":
          description: Reset Content
          headers:
            Location:
              description: Location note
              explode: false
              schema:
                format: url
                type: string
              style: simple
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Update project note
      tags:
      - projects
      x-subcategory: Private Project Notes
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /account/projects/{project_id}/publish:
    post:
      description: Publish a project. Possible after all items inside it are public
      operationId: private_project_publish
      parameters:
      - description: Project unique identifier
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
          description: OK
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private Project Publish
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /articles:
    get:
      description: Returns a list of public articles
      operationId: articles_list
      parameters:
      - description: "Unique hash used for bypassing the item retrieval limit of 9,000\
          \ entities. When using this parameter, please note that the offset parameter\
          \ will not be available, but the limit parameter will still work as expected."
        explode: false
        in: header
        name: X-Cursor
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      - description: Page number. Used for pagination with page_size
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 1
          type: integer
        style: form
      - description: The number of results included on a page. Used for pagination
          with page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 10
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Number of results included on a page. Used for pagination with
          query
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Where to start the listing(the offset of the first result). Used
          for pagination with limit
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 0
          type: integer
        style: form
      - description: The field by which to order. Default varies by endpoint/resource.
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: published_date
          enum:
          - published_date
          - modified_date
          - views
          - shares
          - downloads
          - cites
          type: string
        style: form
      - explode: true
        in: query
        name: order_direction
        required: false
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: only return articles from this institution
        explode: true
        in: query
        name: institution
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter by article publishing date. Will only return articles
          published after the date. date(ISO 8601) YYYY-MM-DD
        explode: true
        in: query
        name: published_since
        required: false
        schema:
          type: string
        style: form
      - description: Filter by article modified date. Will only return articles published
          after the date. date(ISO 8601) YYYY-MM-DD
        explode: true
        in: query
        name: modified_since
        required: false
        schema:
          type: string
        style: form
      - description: only return articles from this group
        explode: true
        in: query
        name: group
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: only return articles with this resource_doi
        explode: true
        in: query
        name: resource_doi
        required: false
        schema:
          type: string
        style: form
      - description: "Only return articles with the respective type. Mapping for item_type\
          \ is: 1 - Figure, 2 - Media, 3 - Dataset, 5 - Poster, 6 - Journal contribution,\
          \ 7 - Presentation, 8 - Thesis, 9 - Software, 11 - Online resource, 12 -\
          \ Preprint, 13 - Book, 14 - Conference contribution, 15 - Chapter, 16 -\
          \ Peer review, 17 - Educational resource, 18 - Report, 19 - Standard, 20\
          \ - Composition, 21 - Funding, 22 - Physical object, 23 - Data management\
          \ plan, 24 - Workflow, 25 - Monograph, 26 - Performance, 27 - Event, 28\
          \ - Service, 29 - Model"
        explode: true
        in: query
        name: item_type
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: only return articles with this doi
        explode: true
        in: query
        name: doi
        required: false
        schema:
          type: string
        style: form
      - description: only return articles with this handle
        explode: true
        in: query
        name: handle
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Article'
                type: array
          description: OK. An array of articles
          headers:
            X-Cursor:
              description: "Unique hash used for bypassing the item retrieval limit\
                \ of 9,000 entities."
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad Request
        "422":
          description: Unprocessable Entity. Syntax is correct but one of the parameters
            isn't correctly processed
        "500":
          description: Internal Server Error
      security: []
      summary: Public Articles
      tags:
      - articles
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /articles/search:
    post:
      description: "Returns a list of public articles, filtered by the search parameters"
      operationId: articles_search
      parameters:
      - description: "Unique hash used for bypassing the item retrieval limit of 9,000\
          \ entities. When using this parameter, please note that the offset parameter\
          \ will not be available, but the limit parameter will still work as expected."
        explode: false
        in: header
        name: X-Cursor
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleSearch'
        description: Search Parameters
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ArticleWithProject'
                type: array
          description: OK. An array of articles
          headers:
            X-Cursor:
              description: "Unique hash used for bypassing the item retrieval limit\
                \ of 9,000 entities."
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad Request
        "422":
          description: Unprocessable Entity. Syntax is correct but one of the parameters
            isn't correctly processed
        "500":
          description: Internal Server Error
      security: []
      summary: Public Articles Search
      tags:
      - articles
      x-openapi-router-controller: openapi_server.controllers.articles_controller
      x-codegen-request-body-name: body
  /articles/{article_id}:
    get:
      description: View an article
      operationId: article_details
      parameters:
      - description: Article Unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleComplete'
          description: OK. Article representation
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security: []
      summary: View article details
      tags:
      - articles
      x-subcategory: Public Article
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /articles/{article_id}/files:
    get:
      description: Files list for article
      operationId: article_files
      parameters:
      - description: Article Unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PublicFile'
                type: array
          description: OK. List of article files
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security: []
      summary: List article files
      tags:
      - articles
      x-subcategory: Public Article files
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /articles/{article_id}/files/{file_id}:
    get:
      description: File by id
      operationId: article_file_details
      parameters:
      - description: Article Unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: File Unique identifier
        explode: false
        in: path
        name: file_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicFile'
          description: OK. File representation
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security: []
      summary: Article file details
      tags:
      - articles
      x-subcategory: Public Article files
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /articles/{article_id}/versions:
    get:
      description: List public article versions
      operationId: article_versions
      parameters:
      - description: Article Unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ArticleVersions'
                type: array
          description: OK. Article version representations
        "400":
          description: Bad Request. Article ID must be an integer and bigger than
            0.
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security: []
      summary: List article versions
      tags:
      - articles
      x-subcategory: Public Article
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /articles/{article_id}/versions/{v_number}:
    get:
      description: Article with specified version
      operationId: article_version_details
      parameters:
      - description: Article Unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Article Version Number
        explode: false
        in: path
        name: v_number
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleComplete'
          description: OK. Article representation
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security: []
      summary: Article details for version
      tags:
      - articles
      x-subcategory: Public Article
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /articles/{article_id}/versions/{v_number}/confidentiality:
    get:
      description: "Confidentiality for article version. The confidentiality feature\
        \ is now deprecated. This has been replaced by the new extended embargo functionality\
        \ and all items that used to be confidential have now been migrated to items\
        \ with a permanent embargo on files. All API endpoints related to this functionality\
        \ will remain for backwards compatibility, but will now be attached to the\
        \ new extended embargo workflows."
      operationId: article_version_confidentiality
      parameters:
      - description: Article Unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Version Number
        explode: false
        in: path
        name: v_number
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleConfidentiality'
          description: OK. Confidentiality representation
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security: []
      summary: Public Article Confidentiality for article version
      tags:
      - articles
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /articles/{article_id}/versions/{v_number}/embargo:
    get:
      description: Embargo for article version
      operationId: article_version_embargo
      parameters:
      - description: Article Unique identifier
        explode: false
        in: path
        name: article_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Version Number
        explode: false
        in: path
        name: v_number
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleEmbargo'
          description: OK. Embargo representation
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security: []
      summary: Public Article Embargo for article version
      tags:
      - articles
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /categories:
    get:
      description: Returns a list of public categories
      operationId: categories_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Category'
                type: array
          description: OK. An array of categories
        "500":
          description: Internal Server Error
      security: []
      summary: Public Categories
      tags:
      - other
      x-openapi-router-controller: openapi_server.controllers.other_controller
  /collections:
    get:
      description: Returns a list of public collections
      operationId: collections_list
      parameters:
      - description: "Unique hash used for bypassing the item retrieval limit of 9,000\
          \ entities. When using this parameter, please note that the offset parameter\
          \ will not be available, but the limit parameter will still work as expected."
        explode: false
        in: header
        name: X-Cursor
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      - description: Page number. Used for pagination with page_size
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 1
          type: integer
        style: form
      - description: The number of results included on a page. Used for pagination
          with page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 10
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Number of results included on a page. Used for pagination with
          query
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Where to start the listing(the offset of the first result). Used
          for pagination with limit
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 0
          type: integer
        style: form
      - description: The field by which to order. Default varies by endpoint/resource.
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: published_date
          enum:
          - published_date
          - modified_date
          - views
          - shares
          - cites
          type: string
        style: form
      - explode: true
        in: query
        name: order_direction
        required: false
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: only return collections from this institution
        explode: true
        in: query
        name: institution
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter by collection publishing date. Will only return collections
          published after the date. date(ISO 8601) YYYY-MM-DD
        explode: true
        in: query
        name: published_since
        required: false
        schema:
          type: string
        style: form
      - description: Filter by collection modified date. Will only return collections
          published after the date. date(ISO 8601) YYYY-MM-DD
        explode: true
        in: query
        name: modified_since
        required: false
        schema:
          type: string
        style: form
      - description: only return collections from this group
        explode: true
        in: query
        name: group
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: only return collections with this resource_doi
        explode: true
        in: query
        name: resource_doi
        required: false
        schema:
          type: string
        style: form
      - description: only return collections with this doi
        explode: true
        in: query
        name: doi
        required: false
        schema:
          type: string
        style: form
      - description: only return collections with this handle
        explode: true
        in: query
        name: handle
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Collection'
                type: array
          description: OK. An array of collections
          headers:
            X-Cursor:
              description: "Unique hash used for bypassing the item retrieval limit\
                \ of 9,000 entities."
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad Request
        "422":
          description: Bad Request
        "500":
          description: Internal Server Error
      security: []
      summary: Public Collections
      tags:
      - collections
      x-openapi-router-controller: openapi_server.controllers.collections_controller
  /collections/search:
    post:
      description: Returns a list of public collections
      operationId: collections_search
      parameters:
      - description: "Unique hash used for bypassing the item retrieval limit of 9,000\
          \ entities. When using this parameter, please note that the offset parameter\
          \ will not be available, but the limit parameter will still work as expected."
        explode: false
        in: header
        name: X-Cursor
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionSearch'
        description: Search Parameters
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Collection'
                type: array
          description: OK. An array of collections
          headers:
            X-Cursor:
              description: "Unique hash used for bypassing the item retrieval limit\
                \ of 9,000 entities."
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad Request
        "422":
          description: Bad Request
        "500":
          description: Internal Server Error
      security: []
      summary: Public Collections Search
      tags:
      - collections
      x-openapi-router-controller: openapi_server.controllers.collections_controller
      x-codegen-request-body-name: body
  /collections/{collection_id}:
    get:
      description: View a collection
      operationId: collection_details
      parameters:
      - description: Collection Unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionComplete'
          description: OK. Collection representation
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security: []
      summary: Collection details
      tags:
      - collections
      x-subcategory: Public Collection
      x-openapi-router-controller: openapi_server.controllers.collections_controller
  /collections/{collection_id}/articles:
    get:
      description: Returns a list of public collection articles
      operationId: collection_articles
      parameters:
      - description: Collection Unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Page number. Used for pagination with page_size
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 1
          type: integer
        style: form
      - description: The number of results included on a page. Used for pagination
          with page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 10
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Number of results included on a page. Used for pagination with
          query
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Where to start the listing(the offset of the first result). Used
          for pagination with limit
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Article'
                type: array
          description: OK. An array of articles belonging to the collection
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "422":
          description: Bad Request
        "500":
          description: Internal Server Error
      security: []
      summary: Public Collection Articles
      tags:
      - collections
      x-openapi-router-controller: openapi_server.controllers.collections_controller
  /collections/{collection_id}/versions:
    get:
      description: Returns a list of public collection Versions
      operationId: collection_versions
      parameters:
      - description: Collection Unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CollectionVersions'
                type: array
          description: OK. An array of versions
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security: []
      summary: Collection Versions list
      tags:
      - collections
      x-subcategory: Public Collection
      x-openapi-router-controller: openapi_server.controllers.collections_controller
  /collections/{collection_id}/versions/{version_id}:
    get:
      description: View details for a certain version of a collection
      operationId: collection_version_details
      parameters:
      - description: Collection Unique identifier
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - description: Version Number
        explode: false
        in: path
        name: version_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionComplete'
          description: OK. Collection for that version
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security: []
      summary: Collection Version details
      tags:
      - collections
      x-subcategory: Public Collection
      x-openapi-router-controller: openapi_server.controllers.collections_controller
  /file/download/{file_id}:
    get:
      description: Starts the download of a file
      operationId: file_download
      parameters:
      - explode: false
        in: path
        name: file_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      security: []
      summary: Public File Download
      tags:
      - other
      x-openapi-router-controller: openapi_server.controllers.other_controller
  /institution/hrfeed/upload:
    post:
      description: More info in the <a href="#hr_feed">HR Feed section</a>
      operationId: institution_hrfeed_upload
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/institution_hrfeed_upload_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
          description: OK
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Private Institution HRfeed Upload
      tags:
      - institutions
      x-openapi-router-controller: openapi_server.controllers.institutions_controller
      x-codegen-request-body-name: body
  /institutions/{institution_string_id}/articles/filter-by:
    get:
      description: Returns a list of articles belonging to the institution
      operationId: institution_articles
      parameters:
      - explode: false
        in: path
        name: institution_string_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: resource_id
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filename
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Article'
                type: array
          description: OK. An array of articles
        "500":
          description: Internal Server Error
      summary: Public Licenses
      tags:
      - institutions
      x-openapi-router-controller: openapi_server.controllers.institutions_controller
  /item_types:
    get:
      description: "Returns the list of Item Types of the requested group. If no user\
        \ is authenticated, returns the item types available for Figshare."
      operationId: item_types_list
      parameters:
      - description: Identifier of the group for which the item types are requested
        explode: true
        in: query
        name: group_id
        required: false
        schema:
          default: 0
          format: int64
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ItemType'
                type: array
          description: OK. An array of item types
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - all
      summary: Item Types
      tags:
      - other
      x-openapi-router-controller: openapi_server.controllers.other_controller
  /licenses:
    get:
      description: Returns a list of public licenses
      operationId: licenses_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/License'
                type: array
          description: OK. An array of licenses
        "500":
          description: Internal Server Error
      security: []
      summary: Public Licenses
      tags:
      - other
      x-openapi-router-controller: openapi_server.controllers.other_controller
  /projects:
    get:
      description: Returns a list of public projects
      operationId: projects_list
      parameters:
      - description: "Unique hash used for bypassing the item retrieval limit of 9,000\
          \ entities. When using this parameter, please note that the offset parameter\
          \ will not be available, but the limit parameter will still work as expected."
        explode: false
        in: header
        name: X-Cursor
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      - description: Page number. Used for pagination with page_size
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 1
          type: integer
        style: form
      - description: The number of results included on a page. Used for pagination
          with page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 10
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Number of results included on a page. Used for pagination with
          query
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Where to start the listing(the offset of the first result). Used
          for pagination with limit
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int64
          maximum: 5000
          minimum: 0
          type: integer
        style: form
      - description: The field by which to order. Default varies by endpoint/resource.
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: published_date
          enum:
          - published_date
          - modified_date
          - views
          type: string
        style: form
      - explode: true
        in: query
        name: order_direction
        required: false
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: only return collections from this institution
        explode: true
        in: query
        name: institution
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter by article publishing date. Will only return articles
          published after the date. date(ISO 8601) YYYY-MM-DD
        explode: true
        in: query
        name: published_since
        required: false
        schema:
          type: string
        style: form
      - description: only return collections from this group
        explode: true
        in: query
        name: group
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                type: array
          description: OK. An array of projects
          headers:
            X-Cursor:
              description: "Unique hash used for bypassing the item retrieval limit\
                \ of 9,000 entities."
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad Request
        "422":
          description: Bad Request
        "500":
          description: Internal Server Error
      security: []
      summary: Public Projects
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /projects/search:
    post:
      description: Returns a list of public articles
      operationId: projects_search
      parameters:
      - description: "Unique hash used for bypassing the item retrieval limit of 9,000\
          \ entities. When using this parameter, please note that the offset parameter\
          \ will not be available, but the limit parameter will still work as expected."
        explode: false
        in: header
        name: X-Cursor
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ProjectsSearch'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                type: array
          description: OK. An array of projects
          headers:
            X-Cursor:
              description: "Unique hash used for bypassing the item retrieval limit\
                \ of 9,000 entities."
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad Request
        "422":
          description: Bad Request
        "500":
          description: Internal Server Error
      security: []
      summary: Public Projects Search
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /projects/{project_id}:
    get:
      description: View a project
      operationId: project_details
      parameters:
      - description: Project Unique identifier
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectComplete'
          description: OK. Project representation
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security: []
      summary: Public Project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /projects/{project_id}/articles:
    get:
      description: List articles in project
      operationId: project_articles
      parameters:
      - description: Project Unique identifier
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Article'
                type: array
          description: OK. Project articles list
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security: []
      summary: Public Project Articles
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
components:
  requestBodies:
    ArticleUpdate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArticleUpdate'
      description: Article description
      required: true
    AuthorsCreator:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorsCreator'
      description: Authors description
      required: true
    AuthorsCreator2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorsCreator'
      description: List of authors
      required: true
    CategoriesCreator:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CategoriesCreator'
      required: true
    CategoriesCreator2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CategoriesCreator'
      description: Categories list
      required: true
    CollectionPrivateLinkCreator:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CollectionPrivateLinkCreator'
    PrivateLinkCreator:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PrivateLinkCreator'
    ProjectNoteCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProjectNoteCreate'
      description: Note message
      required: true
    ProjectsSearch:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProjectsSearch'
      description: Search Parameters
    Resource:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Resource'
      description: Resource data
      required: true
  schemas:
    Account:
      example:
        institution_user_id: djohn42
        active: 0
        last_name: John
        pending_quota_request: true
        modified_date: 2018-05-22T04:04:04
        institution_id: 1
        group_id: 0
        maximum_file_size: 0
        used_quota: 0
        quota: 0
        used_quota_public: 0
        created_date: 2018-05-22T04:04:04
        id: 1495682
        used_quota_private: 0
        first_name: Doe
        email: user@domain.com
      properties:
        active:
          description: Account activity status
          example: 0
          format: int64
          title: active
          type: integer
        created_date:
          description: Date when account was created
          example: 2018-05-22T04:04:04
          title: created_date
          type: string
        email:
          description: User email
          example: user@domain.com
          title: email
          type: string
        first_name:
          description: First Name
          example: Doe
          title: first_name
          type: string
        group_id:
          description: Account group id
          example: 0
          format: int64
          title: group_id
          type: integer
        id:
          description: Account id
          example: 1495682
          format: int64
          title: id
          type: integer
        institution_id:
          description: Account institution
          example: 1
          format: int64
          title: institution_id
          type: integer
        institution_user_id:
          description: Account institution user id
          example: djohn42
          title: institution_user_id
          type: string
        last_name:
          description: Last Name
          example: John
          title: last_name
          type: string
        maximum_file_size:
          description: Maximum upload size for account
          example: 0
          format: int64
          title: maximum_file_size
          type: integer
        modified_date:
          description: Date of last account modification
          example: 2018-05-22T04:04:04
          title: modified_date
          type: string
        pending_quota_request:
          description: True if a quota request is pending
          example: true
          title: pending_quota_request
          type: boolean
        quota:
          description: Account quota
          example: 0
          format: int64
          title: quota
          type: integer
        used_quota:
          description: Account total used quota
          example: 0
          format: int64
          title: used_quota
          type: integer
        used_quota_private:
          description: Account used private quota
          example: 0
          format: int64
          title: used_quota_private
          type: integer
        used_quota_public:
          description: Account public used quota
          example: 0
          format: int64
          title: used_quota_public
          type: integer
      required:
      - active
      - created_date
      - email
      - first_name
      - group_id
      - id
      - institution_id
      - institution_user_id
      - last_name
      - maximum_file_size
      - modified_date
      - pending_quota_request
      - quota
      - used_quota
      - used_quota_private
      - used_quota_public
      title: Account
      type: object
      x-tag: other
    AccountCreate:
      example:
        is_active: true
        group_id: 0
        institution_user_id: johndoe
        quota: 1000
        last_name: Doe
        first_name: John
        email: johndoe@example.com
        symplectic_user_id: johndoe
      properties:
        email:
          description: Email of account
          example: johndoe@example.com
          maxLength: 150
          minLength: 3
          title: email
          type: string
        first_name:
          default: ""
          description: First Name
          example: John
          maxLength: 30
          title: first_name
          type: string
        group_id:
          description: Not applicable to regular users. This field is reserved to
            institutions/publishers with access to assign to specific groups
          format: int64
          title: group_id
          type: integer
        institution_user_id:
          default: ""
          description: Institution user id
          example: johndoe
          maxLength: 50
          title: institution_user_id
          type: string
        is_active:
          description: Is account active
          title: is_active
          type: boolean
        last_name:
          default: ""
          description: Last Name
          example: Doe
          maxLength: 30
          title: last_name
          type: string
        quota:
          description: Account quota
          example: 1000
          format: int64
          title: quota
          type: integer
        symplectic_user_id:
          default: ""
          description: Symplectic user id
          example: johndoe
          maxLength: 50
          title: symplectic_user_id
          type: string
      required:
      - email
      - first_name
      title: AccountCreate
      type: object
      x-tag: institutions
    AccountGroupRoles:
      example:
        "2":
        - category: group
          id: 7
          name: User
      properties: {}
      type: object
      x-tag: institutions
    AccountGroupRolesCreate:
      example:
        "2":
        - 2
        - 7
        "3":
        - 7
        - 9
      properties: {}
      type: object
      x-tag: institutions
    AccountReport:
      example:
        account_id: 0
        group_id: 6
        download_url: https://some.com/storage/path/123/report-456.xlsx
        created_date: 2017-05-15T15:12:26Z
        id: 1
        status: missing
      properties:
        account_id:
          description: The ID of the account which generated this report.
          format: int64
          title: account_id
          type: integer
        created_date:
          description: Date when the AccountReport was requested
          example: 2017-05-15T15:12:26Z
          title: created_date
          type: string
        download_url:
          description: The download link for the generated XLSX
          example: https://some.com/storage/path/123/report-456.xlsx
          format: url
          title: download_url
          type: string
        group_id:
          description: "The group ID that was used to filter the report, if any."
          format: int64
          title: group_id
          type: integer
        id:
          description: A unique ID for the AccountRecord
          format: int64
          title: id
          type: integer
        status:
          description: Status of the report
          enum:
          - missing
          - pending
          - done
          title: status
          type: string
      required:
      - account_id
      - created_date
      - download_url
      - group_id
      - id
      - status
      title: AccountReport
      type: object
    AccountUpdate:
      example:
        is_active: true
        group_id: 0
      properties:
        group_id:
          description: Not applicable to regular users. This field is reserved to
            institutions/publishers with access to assign to specific groups
          format: int64
          title: group_id
          type: integer
        is_active:
          description: Is account active
          title: is_active
          type: boolean
      required:
      - group_id
      - is_active
      title: AccountUpdate
      type: object
      x-tag: institutions
    Article:
      example:
        url_private_html: https://figshare.com/account/articles/1434614
        thumb: https://ndownloader.figshare.com/files/123456789/preview/12345678/thumb.png
        url_private_api: https://api.figshare.com/account/articles/1434614
        url_public_html: https://figshare.com/articles/media/Test_article_title/1434614
        handle: 111184/figshare.1234
        title: Test article title
        defined_type_name: media
        url: http://api.figshare.com/articles/1434614
        defined_type: 3
        group_id: 1234
        timeline:
          submission: 2015-12-31
          posted: 2015-12-31
          revision: 2015-12-31
        id: 1434614
        url_public_api: https://api.figshare.com/articles/1434614
        published_date: 2015-12-31T23:59:59.000Z
        doi: 10.6084/m9.figshare.1434614
      properties:
        defined_type:
          description: Type of article identifier
          example: 3
          format: int64
          title: defined_type
          type: integer
        defined_type_name:
          description: Name of the article type identifier
          example: media
          title: defined_type_name
          type: string
        doi:
          description: DOI
          example: 10.6084/m9.figshare.1434614
          title: doi
          type: string
        group_id:
          description: Group ID
          example: 1234
          nullable: true
          title: group_id
          type: number
        handle:
          description: Handle
          example: 111184/figshare.1234
          title: handle
          type: string
        id:
          description: Unique identifier for article
          example: 1434614
          format: int64
          title: id
          type: integer
        published_date:
          description: Posted date
          example: 2015-12-31T23:59:59.000Z
          nullable: true
          title: published_date
          type: string
        thumb:
          description: Thumbnail image
          example: https://ndownloader.figshare.com/files/123456789/preview/12345678/thumb.png
          format: url
          title: thumb
          type: string
        timeline:
          $ref: '#/components/schemas/Timeline'
        title:
          description: Title of article
          example: Test article title
          title: title
          type: string
        url:
          description: Api endpoint for article
          example: http://api.figshare.com/articles/1434614
          format: url
          title: url
          type: string
        url_private_api:
          description: Private Api endpoint for article
          example: https://api.figshare.com/account/articles/1434614
          format: url
          title: url_private_api
          type: string
        url_private_html:
          description: Private site endpoint for article
          example: https://figshare.com/account/articles/1434614
          format: url
          title: url_private_html
          type: string
        url_public_api:
          description: Public Api endpoint for article
          example: https://api.figshare.com/articles/1434614
          format: url
          title: url_public_api
          type: string
        url_public_html:
          description: Public site endpoint for article
          example: https://figshare.com/articles/media/Test_article_title/1434614
          format: url
          title: url_public_html
          type: string
      required:
      - defined_type
      - defined_type_name
      - doi
      - group_id
      - handle
      - id
      - published_date
      - thumb
      - timeline
      - title
      - url
      - url_private_api
      - url_private_html
      - url_public_api
      - url_public_html
      title: Article
      type: object
      x-tag: articles
    ArticleComplete:
      allOf:
      - $ref: '#/components/schemas/ProjectArticle'
      example:
        figshare_url: http://figshare.com/articles/media/article_name/2000005
        custom_fields:
        - name: key
          is_mandatory: false
          value: value
        - name: key
          is_mandatory: false
          value: value
        resource_doi: 10.5072/FK2.developmentfigshare.2000005
        resource_title: first article
        files:
        - size: 14848
          supplied_md5: 043a51806d646e88cafbf19e7b82846f
          download_url: https://ndownloader.figshare.com/files/3000002
          name: test.xls
          computed_md5: 043a51806d646e88cafbf19e7b82846f
          id: 3000002
          is_link_only: false
        - size: 14848
          supplied_md5: 043a51806d646e88cafbf19e7b82846f
          download_url: https://ndownloader.figshare.com/files/3000002
          name: test.xls
          computed_md5: 043a51806d646e88cafbf19e7b82846f
          id: 3000002
          is_link_only: false
        embargo_options:
        - ip_name: Figshare IP range
          id: 364
          type: ip_range
        - ip_name: Figshare IP range
          id: 364
          type: ip_range
        authors:
        - orcid_id: 1234-5678-9123-1234
          url_name: John_Doe
          full_name: John Doe
          is_active: false
          id: 97657
        - orcid_id: 1234-5678-9123-1234
          url_name: John_Doe
          full_name: John Doe
          is_active: false
          id: 97657
      properties:
        authors:
          description: List of article authors
          items:
            $ref: '#/components/schemas/Author'
          title: authors
          type: array
        custom_fields:
          description: List of custom fields values
          items:
            $ref: '#/components/schemas/CustomArticleField'
          title: custom_fields
          type: array
        embargo_options:
          description: List of embargo options
          items:
            $ref: '#/components/schemas/GroupEmbargoOptions'
          title: embargo_options
          type: array
        figshare_url:
          description: Article public url
          example: http://figshare.com/articles/media/article_name/2000005
          format: url
          title: figshare_url
          type: string
        files:
          description: List of article files
          items:
            $ref: '#/components/schemas/PublicFile'
          title: files
          type: array
        resource_doi:
          description: Article DOI
          example: 10.5072/FK2.developmentfigshare.2000005
          nullable: true
          title: resource_doi
          type: string
        resource_title:
          description: Article resource title
          example: first article
          nullable: true
          title: resource_title
          type: string
      required:
      - authors
      - categories
      - citation
      - confidential_reason
      - created_date
      - custom_fields
      - defined_type
      - defined_type_name
      - description
      - doi
      - embargo_date
      - embargo_options
      - embargo_reason
      - embargo_title
      - embargo_type
      - figshare_url
      - files
      - funding
      - funding_list
      - group_id
      - handle
      - has_linked_file
      - id
      - is_active
      - is_confidential
      - is_embargoed
      - is_metadata_record
      - is_public
      - license
      - metadata_reason
      - modified_date
      - published_date
      - references
      - resource_doi
      - resource_title
      - size
      - status
      - tags
      - thumb
      - timeline
      - title
      - url
      - url_private_api
      - url_private_html
      - url_public_api
      - url_public_html
      - version
      title: ArticleComplete
      type: object
      x-tag: articles
    ArticleCompletePrivate:
      allOf:
      - $ref: '#/components/schemas/ArticleComplete'
      example:
        account_id: 1000001
        group_resource_id: group_resource_id
      properties:
        account_id:
          description: ID of the account owning the article
          example: 1000001
          format: int64
          title: account_id
          type: integer
        group_resource_id:
          description: Group resource id
          nullable: true
          title: group_resource_id
          type: string
          example: null
      required:
      - account_id
      - "array[integer](optional)"
      - authors
      - categories
      - citation
      - confidential_reason
      - created_date
      - custom_fields
      - defined_type
      - defined_type_name
      - description
      - doi
      - embargo_date
      - embargo_options
      - embargo_reason
      - embargo_title
      - embargo_type
      - figshare_url
      - files
      - funding
      - funding_list
      - group_id
      - group_resource_id
      - handle
      - has_linked_file
      - id
      - is_active
      - is_confidential
      - is_embargoed
      - is_metadata_record
      - is_public
      - license
      - metadata_reason
      - modified_date
      - published_date
      - references
      - resource_doi
      - resource_title
      - size
      - status
      - tags
      - thumb
      - timeline
      - title
      - url
      - url_private_api
      - url_private_html
      - url_public_api
      - url_public_html
      - version
      title: ArticleCompletePrivate
      type: object
      x-tag: articles
    ArticleConfidentiality:
      example:
        reason: need to
        is_confidential: true
      properties:
        is_confidential:
          description: True if article is confidential
          example: true
          title: is_confidential
          type: boolean
        reason:
          description: Reason for confidentiality
          example: need to
          title: reason
          type: string
      required:
      - is_confidential
      - reason
      title: ArticleConfidentiality
      type: object
      x-tag: articles
    ArticleCreate:
      example:
        categories_by_source_id:
        - "300204"
        - "400207"
        custom_fields_list:
        - name: key
          value: value
        - name: key
          value: value
        funding: ""
        keywords:
        - tag1
        - tag2
        references:
        - http://figshare.com
        - http://api.figshare.com
        custom_fields:
          defined_key: value for it
        description: Test description of article
        handle: ""
        title: Test article title
        tags:
        - tag1
        - tag2
        defined_type: media
        funding_list:
        - id: 0
          title: title
        - id: 0
          title: title
        license: 1
        group_id: 6
        resource_doi: ""
        resource_title: ""
        is_metadata_record: true
        timeline:
          firstOnline: 2015-12-31
          publisherAcceptance: 2015-12-31
          publisherPublication: 2015-12-31
        metadata_reason: hosted somewhere else
        categories:
        - 1
        - 10
        - 11
        authors:
        - name: John Doe
        - id: 1000008
        doi: ""
      properties:
        authors:
          default: []
          description: "List of authors to be associated with the article. The list\
            \ can contain the following fields: id, name, first_name, last_name, email,\
            \ orcid_id. If an id is supplied, it will take priority and everything\
            \ else will be ignored. No more than 10 authors. For adding more authors\
            \ use the specific authors endpoint."
          example:
          - name: John Doe
          - id: 1000008
          items:
            type: object
          title: authors
          type: array
        categories:
          default: []
          description: "List of category ids to be associated with the article(e.g\
            \ [1, 23, 33, 66])"
          example:
          - 1
          - 10
          - 11
          items:
            format: int64
            type: integer
          title: categories
          type: array
        categories_by_source_id:
          default: []
          description: "List of category source ids to be associated with the article,\
            \ supersedes the categories property"
          example:
          - "300204"
          - "400207"
          items:
            type: string
          title: categories_by_source_id
          type: array
        custom_fields:
          description: "List of key, values pairs to be associated with the article"
          example:
            defined_key: value for it
          title: custom_fields
          type: object
        custom_fields_list:
          description: "List of custom fields values, supersedes custom_fields parameter"
          items:
            $ref: '#/components/schemas/CustomArticleFieldAdd'
          title: custom_fields_list
          type: array
        defined_type:
          description: <b>One of:</b> <code>figure</code> <code>online resource</code>
            <code>preprint</code> <code>book</code> <code>conference contribution</code>
            <code>media</code> <code>dataset</code> <code>poster</code> <code>journal
            contribution</code> <code>presentation</code> <code>thesis</code> <code>software</code>
          example: media
          title: defined_type
          type: string
        description:
          default: ""
          description: "The article description. In a publisher case, usually this\
            \ is the remote article description"
          example: Test description of article
          maxLength: 10000
          title: description
          type: string
        doi:
          default: ""
          description: "Not applicable for regular users. In an institutional case,\
            \ make sure your group supports setting DOIs. This setting is applied\
            \ by figshare via opening a ticket through our support/helpdesk system."
          title: doi
          type: string
        funding:
          default: ""
          description: Grant number or funding authority
          title: funding
          type: string
        funding_list:
          description: Funding creation / update items
          items:
            $ref: '#/components/schemas/FundingCreate'
          title: funding_list
          type: array
        group_id:
          description: Not applicable to regular users. This field is reserved to
            institutions/publishers with access to assign to specific groups
          format: int64
          title: group_id
          type: integer
        handle:
          default: ""
          description: "Not applicable for regular users. In an institutional case,\
            \ make sure your group supports setting Handles. This setting is applied\
            \ by figshare via opening a ticket through our support/helpdesk system."
          title: handle
          type: string
        is_metadata_record:
          description: True if article has no files
          example: true
          title: is_metadata_record
          type: boolean
        keywords:
          default: []
          description: List of tags to be associated with the article. Tags can be
            used instead
          example:
          - tag1
          - tag2
          items:
            type: string
          title: keywords
          type: array
        license:
          default: 0
          description: License id for this article.
          example: 1
          format: int64
          title: license
          type: integer
        metadata_reason:
          description: Article metadata reason
          example: hosted somewhere else
          title: metadata_reason
          type: string
        references:
          default: []
          description: "List of links to be associated with the article (e.g [\"http://link1\"\
            , \"http://link2\", \"http://link3\"])"
          example:
          - http://figshare.com
          - http://api.figshare.com
          items:
            format: link
            type: string
          title: references
          type: array
        resource_doi:
          default: ""
          description: "Not applicable to regular users. In a publisher case, this\
            \ is the publisher article DOI."
          title: resource_doi
          type: string
        resource_title:
          default: ""
          description: "Not applicable to regular users. In a publisher case, this\
            \ is the publisher article title."
          title: resource_title
          type: string
        tags:
          default: []
          description: List of tags to be associated with the article. Keywords can
            be used instead
          example:
          - tag1
          - tag2
          items:
            type: string
          title: tags
          type: array
        timeline:
          $ref: '#/components/schemas/TimelineUpdate'
        title:
          description: Title of article
          example: Test article title
          maxLength: 1000
          minLength: 3
          title: title
          type: string
      required:
      - title
      title: ArticleCreate
      type: object
      x-tag: articles
    ArticleDOI:
      example:
        doi: 10.5072/FK2.FIGSHARE.20345
      properties:
        doi:
          description: Reserved DOI
          example: 10.5072/FK2.FIGSHARE.20345
          title: doi
          type: string
      required:
      - doi
      title: ArticleDOI
      type: object
      x-tag: articles
    ArticleEmbargo:
      example:
        embargo_type: ""
        is_embargoed: true
        embargo_date: 2018-05-22T04:04:04
        embargo_title: File(s) under embargo
        embargo_reason: ""
        embargo_options:
        - group_ids: []
          id: 13
          ip_name: bacau
          type: ip_range
        - group_ids:
          - 550
          - 9448
          id: 12
          ip_name: ""
          type: logged_in
      properties:
        embargo_date:
          description: Date when embargo lifts
          example: 2018-05-22T04:04:04
          nullable: true
          title: embargo_date
          type: string
        embargo_options:
          description: "List of embargo permissions that are associated with the article.\
            \ If the type is logged_in and the group_ids list is empty, then the whole\
            \ institution can see the article; if there are multiple group_ids, then\
            \ only users that are under those groups can see the article."
          example:
          - group_ids: []
            id: 13
            ip_name: bacau
            type: ip_range
          - group_ids:
            - 550
            - 9448
            id: 12
            ip_name: ""
            type: logged_in
          items:
            type: object
          title: embargo_options
          type: array
        embargo_reason:
          description: Reason for embargo
          example: ""
          title: embargo_reason
          type: string
        embargo_title:
          description: Title for embargo
          example: File(s) under embargo
          title: embargo_title
          type: string
        embargo_type:
          description: Embargo type
          example: ""
          nullable: true
          title: embargo_type
          type: string
        is_embargoed:
          description: True if embargoed
          example: true
          title: is_embargoed
          type: boolean
      required:
      - embargo_date
      - embargo_options
      - embargo_reason
      - embargo_title
      - embargo_type
      - is_embargoed
      title: ArticleEmbargo
      type: object
      x-tag: articles
    ArticleEmbargoUpdater:
      example:
        embargo_type: file
        is_embargoed: true
        embargo_date: 2018-05-22T04:04:04
        embargo_title: File(s) under embargo
        embargo_reason: ""
        embargo_options:
        - id: 1321
        - id: 3345
        - group_ids:
          - 4332
          - 5433
          - 678
          id: 54621
      properties:
        embargo_date:
          description: "Date when the embargo expires and the article gets published,\
            \ '0' value will set up permanent embargo"
          example: 2018-05-22T04:04:04
          title: embargo_date
          type: string
        embargo_options:
          description: "List of embargo permissions to be associated with the article.\
            \ The list must contain `id` and can also contain `group_ids`(a field\
            \ that only applies to 'logged_in' permissions). The new list replaces\
            \ old options in the database, and an empty list removes all permissions\
            \ for this article. Administration permission has to be set up alone but\
            \ logged in and IP range permissions can be set up together."
          example:
          - id: 1321
          - id: 3345
          - group_ids:
            - 4332
            - 5433
            - 678
            id: 54621
          items:
            type: object
          title: embargo_options
          type: array
        embargo_reason:
          description: Reason for setting embargo
          example: ""
          title: embargo_reason
          type: string
        embargo_title:
          description: Title for embargo
          example: File(s) under embargo
          title: embargo_title
          type: string
        embargo_type:
          description: "Embargo can be enabled at the article or the file level. Possible\
            \ values: article, file"
          enum:
          - article
          - file
          example: file
          title: embargo_type
          type: string
        is_embargoed:
          description: Embargo status
          example: true
          title: is_embargoed
          type: boolean
      required:
      - embargo_date
      - embargo_type
      - is_embargoed
      title: ArticleEmbargoUpdater
      type: object
      x-tag: articles
    ArticleHandle:
      example:
        handle: 11172/FK2.FIGSHARE.20345
      properties:
        handle:
          description: Reserved Handle
          example: 11172/FK2.FIGSHARE.20345
          title: handle
          type: string
      required:
      - handle
      title: ArticleHandle
      type: object
      x-tag: articles
    ArticleProjectCreate:
      example:
        categories_by_source_id:
        - "300204"
        - "400207"
        custom_fields_list:
        - name: key
          value: value
        - name: key
          value: value
        funding: ""
        keywords:
        - tag1
        - tag2
        references:
        - http://figshare.com
        - http://api.figshare.com
        custom_fields:
          defined_key: value for it
        description: Test description of article
        handle: ""
        title: Test article title
        tags:
        - tag1
        - tag2
        defined_type: media
        funding_list:
        - id: 0
          title: title
        - id: 0
          title: title
        license: 1
        resource_doi: ""
        resource_title: ""
        timeline:
          firstOnline: 2015-12-31
          publisherAcceptance: 2015-12-31
          publisherPublication: 2015-12-31
        categories:
        - 1
        - 10
        - 11
        authors:
        - name: John Doe
        - id: 1000008
        doi: ""
      properties:
        authors:
          default: []
          description: "List of authors to be associated with the article. The list\
            \ can contain the following fields: id, name, first_name, last_name, email,\
            \ orcid_id. If an id is supplied, it will take priority and everything\
            \ else will be ignored. No more than 10 authors. For adding more authors\
            \ use the specific authors endpoint."
          example:
          - name: John Doe
          - id: 1000008
          items:
            type: object
          title: authors
          type: array
        categories:
          default: []
          description: "List of category ids to be associated with the article(e.g\
            \ [1, 23, 33, 66])"
          example:
          - 1
          - 10
          - 11
          items:
            format: int64
            type: integer
          title: categories
          type: array
        categories_by_source_id:
          default: []
          description: "List of category source ids to be associated with the article,\
            \ supersedes the categories property"
          example:
          - "300204"
          - "400207"
          items:
            type: string
          title: categories_by_source_id
          type: array
        custom_fields:
          description: "List of key, values pairs to be associated with the article"
          example:
            defined_key: value for it
          title: custom_fields
          type: object
        custom_fields_list:
          description: "List of custom fields values, supersedes custom_fields parameter"
          items:
            $ref: '#/components/schemas/CustomArticleFieldAdd'
          title: custom_fields_list
          type: array
        defined_type:
          description: <b>One of:</b> <code>figure</code> <code>online resource</code>
            <code>preprint</code> <code>book</code> <code>conference contribution</code>
            <code>media</code> <code>dataset</code> <code>poster</code> <code>journal
            contribution</code> <code>presentation</code> <code>thesis</code> <code>software</code>
          example: media
          title: defined_type
          type: string
        description:
          default: ""
          description: "The article description. In a publisher case, usually this\
            \ is the remote article description"
          example: Test description of article
          maxLength: 10000
          title: description
          type: string
        doi:
          default: ""
          description: "Not applicable for regular users. In an institutional case,\
            \ make sure your group supports setting DOIs. This setting is applied\
            \ by figshare via opening a ticket through our support/helpdesk system."
          title: doi
          type: string
        funding:
          default: ""
          description: Grant number or funding authority
          title: funding
          type: string
        funding_list:
          description: Funding creation / update items
          items:
            $ref: '#/components/schemas/FundingCreate'
          title: funding_list
          type: array
        handle:
          default: ""
          description: "Not applicable for regular users. In an institutional case,\
            \ make sure your group supports setting Handles. This setting is applied\
            \ by figshare via opening a ticket through our support/helpdesk system."
          title: handle
          type: string
        keywords:
          default: []
          description: List of tags to be associated with the article. Tags can be
            used instead
          example:
          - tag1
          - tag2
          items:
            type: string
          title: keywords
          type: array
        license:
          default: 0
          description: License id for this article.
          example: 1
          format: int64
          title: license
          type: integer
        references:
          default: []
          description: "List of links to be associated with the article (e.g [\"http://link1\"\
            , \"http://link2\", \"http://link3\"])"
          example:
          - http://figshare.com
          - http://api.figshare.com
          items:
            format: link
            type: string
          title: references
          type: array
        resource_doi:
          default: ""
          description: "Not applicable to regular users. In a publisher case, this\
            \ is the publisher article DOI."
          title: resource_doi
          type: string
        resource_title:
          default: ""
          description: "Not applicable to regular users. In a publisher case, this\
            \ is the publisher article title."
          title: resource_title
          type: string
        tags:
          default: []
          description: List of tags to be associated with the article. Keywords can
            be used instead
          example:
          - tag1
          - tag2
          items:
            type: string
          title: tags
          type: array
        timeline:
          $ref: '#/components/schemas/TimelineUpdate'
        title:
          description: Title of article
          example: Test article title
          maxLength: 1000
          minLength: 3
          title: title
          type: string
      required:
      - title
      title: ArticleProjectCreate
      type: object
      x-tag: articles
    ArticleSearch:
      allOf:
      - $ref: '#/components/schemas/CommonSearch'
      example:
        project_id: 1
        item_type: 1
        resource_doi: 10.6084/m9.figshare.1407024
        handle: 111084/m9.figshare.14074
        doi: 10.6084/m9.figshare.1407024
        order: published_date
      properties:
        doi:
          description: Only return articles with this doi
          example: 10.6084/m9.figshare.1407024
          title: doi
          type: string
        handle:
          description: Only return articles with this handle
          example: 111084/m9.figshare.14074
          title: handle
          type: string
        item_type:
          description: "Only return articles with the respective type. Mapping for\
            \ item_type is: 1 - Figure, 2 - Media, 3 - Dataset, 5 - Poster, 6 - Journal\
            \ contribution, 7 - Presentation, 8 - Thesis, 9 - Software, 11 - Online\
            \ resource, 12 - Preprint, 13 - Book, 14 - Conference contribution, 15\
            \ - Chapter, 16 - Peer review, 17 - Educational resource, 18 - Report,\
            \ 19 - Standard, 20 - Composition, 21 - Funding, 22 - Physical object,\
            \ 23 - Data management plan, 24 - Workflow, 25 - Monograph, 26 - Performance,\
            \ 27 - Event, 28 - Service, 29 - Model"
          example: 1
          format: int64
          title: item_type
          type: integer
        order:
          default: created_date
          description: The field by which to order
          enum:
          - published_date
          - modified_date
          - views
          - shares
          - downloads
          - cites
          example: published_date
          title: order
          type: string
        project_id:
          description: Only return articles in this project
          example: 1
          format: int64
          title: project_id
          type: integer
        resource_doi:
          description: Only return articles with this resource_doi
          example: 10.6084/m9.figshare.1407024
          title: resource_doi
          type: string
      title: ArticleSearch
      type: object
      x-tag: articles
    ArticleUpdate:
      example:
        categories_by_source_id:
        - "300204"
        - "400207"
        custom_fields_list:
        - name: key
          value: value
        - name: key
          value: value
        funding: ""
        keywords:
        - tag1
        - tag2
        references:
        - http://figshare.com
        - http://api.figshare.com
        custom_fields:
          defined_key: value for it
        description: Test description of article
        handle: ""
        title: Test article title
        tags:
        - tag1
        - tag2
        defined_type: media
        funding_list:
        - id: 0
          title: title
        - id: 0
          title: title
        license: 1
        group_id: 0
        resource_doi: ""
        resource_title: ""
        is_metadata_record: true
        timeline:
          firstOnline: 2015-12-31
          publisherAcceptance: 2015-12-31
          publisherPublication: 2015-12-31
        metadata_reason: hosted somewhere else
        categories:
        - 1
        - 10
        - 11
        authors:
        - name: John Doe
        - id: 1000008
        doi: ""
      properties:
        authors:
          default: []
          description: "List of authors to be associated with the article. The list\
            \ can contain the following fields: id, name, first_name, last_name, email,\
            \ orcid_id. If an id is supplied, it will take priority and everything\
            \ else will be ignored. No more than 10 authors. For adding more authors\
            \ use the specific authors endpoint."
          example:
          - name: John Doe
          - id: 1000008
          items:
            type: object
          title: authors
          type: array
        categories:
          default: []
          description: "List of category ids to be associated with the article(e.g\
            \ [1, 23, 33, 66])"
          example:
          - 1
          - 10
          - 11
          items:
            format: int64
            type: integer
          title: categories
          type: array
        categories_by_source_id:
          default: []
          description: "List of category source ids to be associated with the article,\
            \ supersedes the categories property"
          example:
          - "300204"
          - "400207"
          items:
            type: string
          title: categories_by_source_id
          type: array
        custom_fields:
          description: "List of key, values pairs to be associated with the article"
          example:
            defined_key: value for it
          title: custom_fields
          type: object
        custom_fields_list:
          description: "List of custom fields values, supersedes custom_fields parameter"
          items:
            $ref: '#/components/schemas/CustomArticleFieldAdd'
          title: custom_fields_list
          type: array
        defined_type:
          description: <b>One of:</b> <code>figure</code> <code>online resource</code>
            <code>preprint</code> <code>book</code> <code>conference contribution</code>
            <code>media</code> <code>dataset</code> <code>poster</code> <code>journal
            contribution</code> <code>presentation</code> <code>thesis</code> <code>software</code>
          example: media
          title: defined_type
          type: string
        description:
          default: ""
          description: "The article description. In a publisher case, usually this\
            \ is the remote article description"
          example: Test description of article
          maxLength: 10000
          title: description
          type: string
        doi:
          default: ""
          description: "Not applicable for regular users. In an institutional case,\
            \ make sure your group supports setting DOIs. This setting is applied\
            \ by figshare via opening a ticket through our support/helpdesk system."
          title: doi
          type: string
        funding:
          default: ""
          description: Grant number or funding authority
          title: funding
          type: string
        funding_list:
          description: Funding creation / update items
          items:
            $ref: '#/components/schemas/FundingCreate'
          title: funding_list
          type: array
        group_id:
          description: Not applicable to regular users. This field is reserved to
            institutions/publishers with access to assign to specific groups
          format: int64
          title: group_id
          type: integer
        handle:
          default: ""
          description: "Not applicable for regular users. In an institutional case,\
            \ make sure your group supports setting Handles. This setting is applied\
            \ by figshare via opening a ticket through our support/helpdesk system."
          title: handle
          type: string
        is_metadata_record:
          description: True if article has no files
          example: true
          title: is_metadata_record
          type: boolean
        keywords:
          default: []
          description: List of tags to be associated with the article. Tags can be
            used instead
          example:
          - tag1
          - tag2
          items:
            type: string
          title: keywords
          type: array
        license:
          default: 0
          description: License id for this article.
          example: 1
          format: int64
          title: license
          type: integer
        metadata_reason:
          description: Article metadata reason
          example: hosted somewhere else
          title: metadata_reason
          type: string
        references:
          default: []
          description: "List of links to be associated with the article (e.g [\"http://link1\"\
            , \"http://link2\", \"http://link3\"])"
          example:
          - http://figshare.com
          - http://api.figshare.com
          items:
            format: link
            type: string
          title: references
          type: array
        resource_doi:
          default: ""
          description: "Not applicable to regular users. In a publisher case, this\
            \ is the publisher article DOI."
          title: resource_doi
          type: string
        resource_title:
          default: ""
          description: "Not applicable to regular users. In a publisher case, this\
            \ is the publisher article title."
          title: resource_title
          type: string
        tags:
          default: []
          description: List of tags to be associated with the article. Keywords can
            be used instead
          example:
          - tag1
          - tag2
          items:
            type: string
          title: tags
          type: array
        timeline:
          $ref: '#/components/schemas/TimelineUpdate'
        title:
          description: Title of article
          example: Test article title
          maxLength: 1000
          minLength: 3
          title: title
          type: string
      title: ArticleUpdate
      type: object
      x-tag: articles
    ArticleVersions:
      example:
        version: 1
        url: https://api.figshare.com/v2/articles/2000005/versions/1
      properties:
        url:
          description: Api endpoint for the item version
          example: https://api.figshare.com/v2/articles/2000005/versions/1
          format: url
          title: url
          type: string
        version:
          description: Version number
          example: 1
          format: int64
          title: version
          type: integer
      required:
      - url
      - version
      title: ArticleVersions
      type: object
      x-tag: articles
    ArticleWithProject:
      allOf:
      - $ref: '#/components/schemas/Article'
      example:
        project_id: 1
      properties:
        project_id:
          default: 0
          description: Project id for this article.
          example: 1
          format: int64
          title: project_id
          type: integer
      required:
      - defined_type
      - defined_type_name
      - doi
      - group_id
      - handle
      - id
      - project_id
      - published_date
      - thumb
      - timeline
      - title
      - url
      - url_private_api
      - url_private_html
      - url_public_api
      - url_public_html
      title: ArticleWithProject
      type: object
      x-tag: articles_with_project
    ArticlesCreator:
      example:
        articles:
        - 2000003
        - 2000004
      properties:
        articles:
          description: List of article ids
          example:
          - 2000003
          - 2000004
          items:
            description: Id of article
            format: int64
            type: integer
          title: articles
          type: array
      required:
      - articles
      title: ArticlesCreator
      type: object
      x-tag: articles
    Author:
      example:
        orcid_id: 1234-5678-9123-1234
        url_name: John_Doe
        full_name: John Doe
        is_active: false
        id: 97657
      properties:
        full_name:
          description: Author full name
          example: John Doe
          title: full_name
          type: string
        id:
          description: Author id
          example: 97657
          format: int64
          title: id
          type: integer
        is_active:
          description: True if author has published items
          example: false
          title: is_active
          type: boolean
        orcid_id:
          description: Author Orcid
          example: 1234-5678-9123-1234
          title: orcid_id
          type: string
        url_name:
          description: Author url name
          example: John_Doe
          title: url_name
          type: string
      required:
      - full_name
      - id
      - is_active
      - orcid_id
      - url_name
      title: Author
      type: object
      x-tag: authors
    AuthorComplete:
      allOf:
      - $ref: '#/components/schemas/Author'
      example:
        group_id: 0
        is_public: 1
        last_name: last_name
        first_name: first_name
        job_title: job_title
        institution_id: 6
      properties:
        first_name:
          description: First Name
          title: first_name
          type: string
        group_id:
          description: Group id
          format: int64
          title: group_id
          type: integer
        institution_id:
          description: Institution id
          format: int64
          title: institution_id
          type: integer
        is_public:
          description: if 1 then the author has published items
          format: int64
          title: is_public
          type: integer
        job_title:
          description: Job title
          title: job_title
          type: string
        last_name:
          description: Last Name
          title: last_name
          type: string
      required:
      - first_name
      - full_name
      - group_id
      - id
      - institution_id
      - is_active
      - is_public
      - job_title
      - last_name
      - orcid_id
      - url_name
      title: AuthorComplete
      type: object
      x-tag: authors
    AuthorsCreator:
      example:
        authors:
        - id: 12121
        - id: 34345
        - name: John Doe
      properties:
        authors:
          description: "List of authors to be associated with the article. The list\
            \ can contain the following fields: id, name, first_name, last_name, email,\
            \ orcid_id. If an id is supplied, it will take priority and everything\
            \ else will be ignored. No more than 10 authors. For adding more authors\
            \ use the specific authors endpoint."
          example:
          - id: 12121
          - id: 34345
          - name: John Doe
          items:
            type: object
          title: authors
          type: array
      required:
      - authors
      title: AuthorsCreator
      type: object
      x-tag: articles
    CategoriesCreator:
      example:
        categories:
        - 1
        - 10
        - 11
      properties:
        categories:
          description: List of category ids
          example:
          - 1
          - 10
          - 11
          items:
            description: Id of category
            format: int64
            type: integer
          title: categories
          type: array
      required:
      - categories
      title: CategoriesCreator
      type: object
      x-tag: articles
    Category:
      example:
        path: /450/1024/6532
        taxonomy_id: 4
        parent_id: 1
        id: 11
        source_id: "300204"
        title: Anatomy
      properties:
        id:
          description: Category id
          example: 11
          format: int64
          title: id
          type: integer
        parent_id:
          description: Parent category
          example: 1
          format: int64
          title: parent_id
          type: integer
        path:
          description: Path to all ancestor ids
          example: /450/1024/6532
          title: path
          type: string
        source_id:
          description: ID in original standard taxonomy
          example: "300204"
          title: source_id
          type: string
        taxonomy_id:
          description: Internal id of taxonomy the category is part of
          example: 4
          format: int64
          title: taxonomy_id
          type: integer
        title:
          description: Category title
          example: Anatomy
          title: title
          type: string
      required:
      - id
      - parent_id
      - path
      - source_id
      - taxonomy_id
      - title
      title: Category
      type: object
      x-tag: common
    Collaborator:
      example:
        role_name: Owner
        user_id: 1
        name: name
      properties:
        name:
          description: Collaborator name
          example: name
          title: name
          type: string
        role_name:
          description: Collaborator role
          example: Owner
          title: role_name
          type: string
        user_id:
          description: Collaborator id
          example: 1
          title: user_id
          type: integer
      required:
      - name
      - role_name
      - user_id
      title: Collaborator
      type: object
      x-tag: projects
    Collection:
      example:
        timeline:
          submission: 2015-12-31
          posted: 2015-12-31
          revision: 2015-12-31
        handle: 111184/figshare.1234
        id: 123
        title: Sample collection
        published_date: 2015-08-12T00:39:55
        url: https://api.figshare.com/v2/collections/123
        doi: 10.6084/m9.figshare.123
      properties:
        doi:
          description: Collection DOI
          example: 10.6084/m9.figshare.123
          title: doi
          type: string
        handle:
          description: Collection Handle
          example: 111184/figshare.1234
          title: handle
          type: string
        id:
          description: Collection id
          example: 123
          format: int64
          title: id
          type: integer
        published_date:
          description: 'Date when collection was published '
          example: 2015-08-12T00:39:55
          nullable: true
          title: published_date
          type: string
        timeline:
          $ref: '#/components/schemas/Timeline'
        title:
          description: Collection title
          example: Sample collection
          title: title
          type: string
        url:
          description: Api endpoint
          example: https://api.figshare.com/v2/collections/123
          title: url
          type: string
      required:
      - doi
      - handle
      - id
      - published_date
      - timeline
      - title
      - url
      title: Collection
      type: object
      x-tag: collections
    CollectionComplete:
      allOf:
      - $ref: '#/components/schemas/Collection'
      example:
        funding:
        - grant_code: grant_code
          funder_name: funder_name
          id: 1
          is_user_defined: true
          title: Scholarly funding
          url: https://app.dimensions.ai/details/grant/1
        - grant_code: grant_code
          funder_name: funder_name
          id: 1
          is_user_defined: true
          title: Scholarly funding
          url: https://app.dimensions.ai/details/grant/1
        references:
        - http://example.com/aeiou
        - http://example.com/aeiou
        citation: citation
        custom_fields:
        - name: key
          is_mandatory: false
          value: value
        - name: key
          is_mandatory: false
          value: value
        description: description
        modified_date: 2017-05-15T15:12:26Z
        resource_version: 0
        version: 1
        group_resource_id: "1"
        institution_id: 1
        tags:
        - t1
        - t2
        public: true
        resource_link: http://figshare.com
        group_id: 1
        articles_count: 1
        resource_doi: 10.6084/m9.figshare.123
        resource_title: test
        resource_id: ""
        timeline:
          submission: 2015-12-31
          posted: 2015-12-31
          revision: 2015-12-31
        categories:
        - path: /450/1024/6532
          taxonomy_id: 4
          parent_id: 1
          id: 11
          source_id: "300204"
          title: Anatomy
        - path: /450/1024/6532
          taxonomy_id: 4
          parent_id: 1
          id: 11
          source_id: "300204"
          title: Anatomy
        created_date: 2017-05-15T15:12:26Z
        authors:
        - orcid_id: 1234-5678-9123-1234
          url_name: John_Doe
          full_name: John Doe
          is_active: false
          id: 97657
        - orcid_id: 1234-5678-9123-1234
          url_name: John_Doe
          full_name: John Doe
          is_active: false
          id: 97657
      properties:
        articles_count:
          description: Number of articles in collection
          example: 1
          format: int64
          title: articles_count
          type: integer
        authors:
          description: List of collection authors
          items:
            $ref: '#/components/schemas/Author'
          title: authors
          type: array
        categories:
          description: List of collection categories
          items:
            $ref: '#/components/schemas/Category'
          title: categories
          type: array
        citation:
          description: Collection citation
          example: citation
          title: citation
          type: string
        created_date:
          description: Date when collection was created
          example: 2017-05-15T15:12:26Z
          title: created_date
          type: string
        custom_fields:
          description: Collection custom fields
          items:
            $ref: '#/components/schemas/CustomArticleField'
          title: custom_fields
          type: array
        description:
          description: Collection description
          example: description
          title: description
          type: string
        funding:
          description: Full Collection funding information
          items:
            $ref: '#/components/schemas/FundingInformation'
          title: funding
          type: array
        group_id:
          description: Collection group
          example: 1
          format: int64
          title: group_id
          type: integer
        group_resource_id:
          description: Collection group resource id
          example: "1"
          nullable: true
          title: group_resource_id
          type: string
        institution_id:
          description: Collection institution
          example: 1
          format: int64
          title: institution_id
          type: integer
        modified_date:
          description: Date when collection was last modified
          example: 2017-05-15T15:12:26Z
          title: modified_date
          type: string
        public:
          description: True if collection is published
          example: true
          title: public
          type: boolean
        references:
          description: List of collection references
          items:
            format: url
            type: string
          title: references
          type: array
        resource_doi:
          description: Collection resource doi
          example: 10.6084/m9.figshare.123
          title: resource_doi
          type: string
        resource_id:
          description: Collection resource id
          example: ""
          title: resource_id
          type: string
        resource_link:
          description: Collection resource link
          example: http://figshare.com
          title: resource_link
          type: string
        resource_title:
          description: Collection resource title
          example: test
          title: resource_title
          type: string
        resource_version:
          description: Collection resource version
          example: 0
          format: int64
          title: resource_version
          type: integer
        tags:
          description: List of collection tags
          example:
          - t1
          - t2
          items:
            type: string
          title: tags
          type: array
        timeline:
          $ref: '#/components/schemas/Timeline'
        version:
          description: Collection version
          example: 1
          format: int64
          title: version
          type: integer
      required:
      - articles_count
      - authors
      - categories
      - citation
      - created_date
      - custom_fields
      - description
      - doi
      - funding
      - group_id
      - group_resource_id
      - handle
      - id
      - institution_id
      - modified_date
      - public
      - published_date
      - references
      - resource_doi
      - resource_id
      - resource_link
      - resource_title
      - resource_version
      - tags
      - timeline
      - title
      - url
      - version
      title: CollectionComplete
      type: object
      x-tag: collections
    CollectionCompletePrivate:
      allOf:
      - $ref: '#/components/schemas/Collection'
      example:
        funding:
        - grant_code: grant_code
          funder_name: funder_name
          id: 1
          is_user_defined: true
          title: Scholarly funding
          url: https://app.dimensions.ai/details/grant/1
        - grant_code: grant_code
          funder_name: funder_name
          id: 1
          is_user_defined: true
          title: Scholarly funding
          url: https://app.dimensions.ai/details/grant/1
        references:
        - http://example.com/aeiou
        - http://example.com/aeiou
        citation: citation
        custom_fields:
        - name: key
          is_mandatory: false
          value: value
        - name: key
          is_mandatory: false
          value: value
        description: description
        modified_date: 2017-05-15T15:12:26Z
        resource_version: 0
        version: 1
        group_resource_id: "1"
        institution_id: 1
        tags:
        - t1
        - t2
        account_id: 1000001
        public: true
        resource_link: http://figshare.com
        group_id: 1
        articles_count: 1
        resource_doi: 10.6084/m9.figshare.123
        resource_title: test
        resource_id: ""
        timeline:
          submission: 2015-12-31
          posted: 2015-12-31
          revision: 2015-12-31
        categories:
        - path: /450/1024/6532
          taxonomy_id: 4
          parent_id: 1
          id: 11
          source_id: "300204"
          title: Anatomy
        - path: /450/1024/6532
          taxonomy_id: 4
          parent_id: 1
          id: 11
          source_id: "300204"
          title: Anatomy
        created_date: 2017-05-15T15:12:26Z
        authors:
        - orcid_id: 1234-5678-9123-1234
          url_name: John_Doe
          full_name: John Doe
          is_active: false
          id: 97657
        - orcid_id: 1234-5678-9123-1234
          url_name: John_Doe
          full_name: John Doe
          is_active: false
          id: 97657
      properties:
        account_id:
          description: ID of the account owning the collection
          example: 1000001
          format: int64
          title: account_id
          type: integer
        articles_count:
          description: Number of articles in collection
          example: 1
          format: int64
          title: articles_count
          type: integer
        authors:
          description: List of collection authors
          items:
            $ref: '#/components/schemas/Author'
          title: authors
          type: array
        categories:
          description: List of collection categories
          items:
            $ref: '#/components/schemas/Category'
          title: categories
          type: array
        citation:
          description: Collection citation
          example: citation
          title: citation
          type: string
        created_date:
          description: Date when collection was created
          example: 2017-05-15T15:12:26Z
          title: created_date
          type: string
        custom_fields:
          description: Collection custom fields
          items:
            $ref: '#/components/schemas/CustomArticleField'
          title: custom_fields
          type: array
        description:
          description: Collection description
          example: description
          title: description
          type: string
        funding:
          description: Full Collection funding information
          items:
            $ref: '#/components/schemas/FundingInformation'
          title: funding
          type: array
        group_id:
          description: Collection group
          example: 1
          format: int64
          title: group_id
          type: integer
        group_resource_id:
          description: Collection group resource id
          example: "1"
          nullable: true
          title: group_resource_id
          type: string
        institution_id:
          description: Collection institution
          example: 1
          format: int64
          title: institution_id
          type: integer
        modified_date:
          description: Date when collection was last modified
          example: 2017-05-15T15:12:26Z
          title: modified_date
          type: string
        public:
          description: True if collection is published
          example: true
          title: public
          type: boolean
        references:
          description: List of collection references
          items:
            format: url
            type: string
          title: references
          type: array
        resource_doi:
          description: Collection resource doi
          example: 10.6084/m9.figshare.123
          title: resource_doi
          type: string
        resource_id:
          description: Collection resource id
          example: ""
          title: resource_id
          type: string
        resource_link:
          description: Collection resource link
          example: http://figshare.com
          title: resource_link
          type: string
        resource_title:
          description: Collection resource title
          example: test
          title: resource_title
          type: string
        resource_version:
          description: Collection resource version
          example: 0
          format: int64
          title: resource_version
          type: integer
        tags:
          description: List of collection tags
          example:
          - t1
          - t2
          items:
            type: string
          title: tags
          type: array
        timeline:
          $ref: '#/components/schemas/Timeline'
        version:
          description: Collection version
          example: 1
          format: int64
          title: version
          type: integer
      required:
      - account_id
      - articles_count
      - authors
      - categories
      - citation
      - created_date
      - custom_fields
      - description
      - doi
      - funding
      - group_id
      - group_resource_id
      - handle
      - id
      - institution_id
      - modified_date
      - public
      - published_date
      - references
      - resource_doi
      - resource_id
      - resource_link
      - resource_title
      - resource_version
      - tags
      - timeline
      - title
      - url
      - version
      title: CollectionCompletePrivate
      type: object
      x-tag: collections
    CollectionCreate:
      example:
        categories_by_source_id:
        - "300204"
        - "400207"
        custom_fields_list:
        - name: key
          value: value
        - name: key
          value: value
        funding: ""
        keywords:
        - tag1
        - tag2
        references:
        - http://figshare.com
        - http://api.figshare.com
        custom_fields:
          defined_key: value for it
        description: Test description of article
        handle: ""
        title: Test collection title
        resource_version: 6
        tags:
        - tag1
        - tag2
        funding_list:
        - id: 0
          title: title
        - id: 0
          title: title
        resource_link: resource_link
        group_id: 0
        resource_doi: ""
        resource_title: ""
        resource_id: resource_id
        timeline:
          firstOnline: 2015-12-31
          publisherAcceptance: 2015-12-31
          publisherPublication: 2015-12-31
        categories:
        - 1
        - 10
        - 11
        articles:
        - 2000001
        - 2000005
        authors:
        - name: John Doe
        - id: 20005
        doi: ""
      properties:
        articles:
          description: List of articles to be associated with the collection
          example:
          - 2000001
          - 2000005
          items:
            type: integer
          title: articles
          type: array
        authors:
          default: []
          description: "List of authors to be associated with the collection. The\
            \ list can contain the following fields: id, name, first_name, last_name,\
            \ email, orcid_id. If an id is supplied, it will take priority and everything\
            \ else will be ignored. No more than 10 authors. For adding more authors\
            \ use the specific authors endpoint."
          example:
          - name: John Doe
          - id: 20005
          items:
            type: object
          title: authors
          type: array
        categories:
          default: []
          description: "List of category ids to be associated with the collection(e.g\
            \ [1, 23, 33, 66])"
          example:
          - 1
          - 10
          - 11
          items:
            format: int64
            type: integer
          title: categories
          type: array
        categories_by_source_id:
          default: []
          description: "List of category source ids to be associated with the collection,\
            \ supersedes the categories property"
          example:
          - "300204"
          - "400207"
          items:
            type: string
          title: categories_by_source_id
          type: array
        custom_fields:
          description: "List of key, values pairs to be associated with the collection"
          example:
            defined_key: value for it
          title: custom_fields
          type: object
        custom_fields_list:
          description: "List of custom fields values, supersedes custom_fields parameter"
          items:
            $ref: '#/components/schemas/CustomArticleFieldAdd'
          title: custom_fields_list
          type: array
        description:
          default: ""
          description: "The collection description. In a publisher case, usually this\
            \ is the remote collection description"
          example: Test description of article
          maxLength: 10000
          title: description
          type: string
        doi:
          default: ""
          description: "Not applicable for regular users. In an institutional case,\
            \ make sure your group supports setting DOIs. This setting is applied\
            \ by figshare via opening a ticket through our support/helpdesk system."
          title: doi
          type: string
        funding:
          default: ""
          description: Grant number or funding authority
          title: funding
          type: string
        funding_list:
          description: Funding creation / update items
          items:
            $ref: '#/components/schemas/FundingCreate'
          title: funding_list
          type: array
        group_id:
          description: Not applicable to regular users. This field is reserved to
            institutions/publishers with access to assign to specific groups
          format: int64
          title: group_id
          type: integer
        handle:
          default: ""
          description: "Not applicable for regular users. In an institutional case,\
            \ make sure your group supports setting Handles. This setting is applied\
            \ by figshare via opening a ticket through our support/helpdesk system."
          title: handle
          type: string
        keywords:
          default: []
          description: List of tags to be associated with the collection. Tags can
            be used instead
          example:
          - tag1
          - tag2
          items:
            type: string
          title: keywords
          type: array
        references:
          default: []
          description: "List of links to be associated with the collection (e.g [\"\
            http://link1\", \"http://link2\", \"http://link3\"])"
          example:
          - http://figshare.com
          - http://api.figshare.com
          items:
            format: link
            type: string
          title: references
          type: array
        resource_doi:
          default: ""
          description: "Not applicable to regular users. In a publisher case, this\
            \ is the publisher article DOI."
          title: resource_doi
          type: string
        resource_id:
          description: "Not applicable to regular users. In a publisher case, this\
            \ is the publisher article id"
          title: resource_id
          type: string
        resource_link:
          description: "Not applicable to regular users. In a publisher case, this\
            \ is the publisher article link"
          title: resource_link
          type: string
        resource_title:
          default: ""
          description: "Not applicable to regular users. In a publisher case, this\
            \ is the publisher article title."
          title: resource_title
          type: string
        resource_version:
          description: "Not applicable to regular users. In a publisher case, this\
            \ is the publisher article version"
          title: resource_version
          type: integer
        tags:
          default: []
          description: List of tags to be associated with the collection. Keywords
            can be used instead
          example:
          - tag1
          - tag2
          items:
            type: string
          title: tags
          type: array
        timeline:
          $ref: '#/components/schemas/TimelineUpdate'
        title:
          description: Title of collection
          example: Test collection title
          maxLength: 1000
          minLength: 3
          title: title
          type: string
      required:
      - title
      title: CollectionCreate
      type: object
      x-tag: collections
    CollectionDOI:
      example:
        doi: 10.5072/FK2.FIGSHARE.20345
      properties:
        doi:
          description: Reserved DOI
          example: 10.5072/FK2.FIGSHARE.20345
          title: doi
          type: string
      required:
      - doi
      title: CollectionDOI
      type: object
      x-tag: collections
    CollectionHandle:
      example:
        handle: 11172/FK2.FIGSHARE.20345
      properties:
        handle:
          description: Reserved Handle
          example: 11172/FK2.FIGSHARE.20345
          title: handle
          type: string
      required:
      - handle
      title: CollectionHandle
      type: object
      x-tag: collections
    CollectionPrivateLinkCreator:
      example:
        read_only: true
        expires_date: 2018-02-22 22:22:22
      properties:
        expires_date:
          description: Date when this private link should expire - optional. By default
            private links expire in 365 days.
          example: 2018-02-22 22:22:22
          title: expires_date
          type: string
        read_only:
          description: "Optional, default true. Set to false to give private link\
            \ users editing rights for this collection."
          example: true
          title: read_only
          type: boolean
      title: CollectionPrivateLinkCreator
      type: object
      x-tag: collections
    CollectionSearch:
      allOf:
      - $ref: '#/components/schemas/CommonSearch'
      example:
        resource_doi: 10.6084/m9.figshare.1407024
        handle: 10084/figshare.1407024
        doi: 10.6084/m9.figshare.1407024
        order: published_date
      properties:
        doi:
          description: Only return collections with this doi
          example: 10.6084/m9.figshare.1407024
          title: doi
          type: string
        handle:
          description: Only return collections with this handle
          example: 10084/figshare.1407024
          title: handle
          type: string
        order:
          default: created_date
          description: The field by which to order.
          enum:
          - published_date
          - modified_date
          - views
          - shares
          - cites
          example: published_date
          title: order
          type: string
        resource_doi:
          description: Only return collections with this resource_doi
          example: 10.6084/m9.figshare.1407024
          title: resource_doi
          type: string
      title: CollectionSearch
      type: object
      x-tag: collections
    CollectionUpdate:
      example:
        categories_by_source_id:
        - "300204"
        - "400207"
        custom_fields_list:
        - name: key
          value: value
        - name: key
          value: value
        funding: ""
        keywords:
        - tag1
        - tag2
        references:
        - http://figshare.com
        - http://api.figshare.com
        custom_fields:
          defined_key: value for it
        description: Test description of collection
        handle: ""
        title: Test collection title
        resource_version: 6
        tags:
        - tag1
        - tag2
        funding_list:
        - id: 0
          title: title
        - id: 0
          title: title
        resource_link: resource_link
        group_id: 0
        resource_doi: ""
        resource_title: ""
        resource_id: resource_id
        timeline:
          firstOnline: 2015-12-31
          publisherAcceptance: 2015-12-31
          publisherPublication: 2015-12-31
        categories:
        - 1
        - 10
        - 11
        articles:
        - 2000001
        - 2000005
        authors:
        - name: John Doe
        - id: 20005
        doi: ""
      properties:
        articles:
          description: List of articles to be associated with the collection
          example:
          - 2000001
          - 2000005
          items:
            type: integer
          title: articles
          type: array
        authors:
          default: []
          description: "List of authors to be associated with the collection. The\
            \ list can contain the following fields: id, name, first_name, last_name,\
            \ email, orcid_id. If an id is supplied, it will take priority and everything\
            \ else will be ignored. No more than 10 authors. For adding more authors\
            \ use the specific authors endpoint."
          example:
          - name: John Doe
          - id: 20005
          items:
            type: object
          title: authors
          type: array
        categories:
          default: []
          description: "List of category ids to be associated with the collection\
            \ (e.g [1, 23, 33, 66])"
          example:
          - 1
          - 10
          - 11
          items:
            format: int64
            type: integer
          title: categories
          type: array
        categories_by_source_id:
          default: []
          description: "List of category source ids to be associated with the article,\
            \ supersedes the categories property"
          example:
          - "300204"
          - "400207"
          items:
            type: string
          title: categories_by_source_id
          type: array
        custom_fields:
          description: "List of key, values pairs to be associated with the collection"
          example:
            defined_key: value for it
          title: custom_fields
          type: object
        custom_fields_list:
          description: "List of custom fields values, supersedes custom_fields parameter"
          items:
            $ref: '#/components/schemas/CustomArticleFieldAdd'
          title: custom_fields_list
          type: array
        description:
          default: ""
          description: "The collection description. In a publisher case, usually this\
            \ is the remote collection description"
          example: Test description of collection
          maxLength: 10000
          title: description
          type: string
        doi:
          default: ""
          description: "Not applicable for regular users. In an institutional case,\
            \ make sure your group supports setting DOIs. This setting is applied\
            \ by figshare via opening a ticket through our support/helpdesk system."
          title: doi
          type: string
        funding:
          default: ""
          description: Grant number or funding authority
          title: funding
          type: string
        funding_list:
          description: Funding creation / update items
          items:
            $ref: '#/components/schemas/FundingCreate'
          title: funding_list
          type: array
        group_id:
          description: Not applicable to regular users. This field is reserved to
            institutions/publishers with access to assign to specific groups
          format: int64
          title: group_id
          type: integer
        handle:
          default: ""
          description: "Not applicable for regular users. In an institutional case,\
            \ make sure your group supports setting Handles. This setting is applied\
            \ by figshare via opening a ticket through our support/helpdesk system."
          title: handle
          type: string
        keywords:
          default: []
          description: List of tags to be associated with the collection. Tags can
            be used instead
          example:
          - tag1
          - tag2
          items:
            type: string
          title: keywords
          type: array
        references:
          default: []
          description: "List of links to be associated with the collection (e.g [\"\
            http://link1\", \"http://link2\", \"http://link3\"])"
          example:
          - http://figshare.com
          - http://api.figshare.com
          items:
            format: link
            type: string
          title: references
          type: array
        resource_doi:
          default: ""
          description: "Not applicable to regular users. In a publisher case, this\
            \ is the publisher article DOI."
          title: resource_doi
          type: string
        resource_id:
          description: "Not applicable to regular users. In a publisher case, this\
            \ is the publisher article id"
          title: resource_id
          type: string
        resource_link:
          description: "Not applicable to regular users. In a publisher case, this\
            \ is the publisher article link"
          title: resource_link
          type: string
        resource_title:
          default: ""
          description: "Not applicable to regular users. In a publisher case, this\
            \ is the publisher article title."
          title: resource_title
          type: string
        resource_version:
          description: "Not applicable to regular users. In a publisher case, this\
            \ is the publisher article version"
          title: resource_version
          type: integer
        tags:
          default: []
          description: List of tags to be associated with the collection. Keywords
            can be used instead
          example:
          - tag1
          - tag2
          items:
            type: string
          title: tags
          type: array
        timeline:
          $ref: '#/components/schemas/TimelineUpdate'
        title:
          description: Title of collection
          example: Test collection title
          maxLength: 1000
          minLength: 3
          title: title
          type: string
      title: CollectionUpdate
      type: object
      x-tag: collections
    CollectionVersions:
      example:
        id: 1
        url: https://api.figshare.com/v2/collections/2000005/versions/1
      properties:
        id:
          description: Version number
          example: 1
          format: int64
          title: id
          type: integer
        url:
          description: Api endpoint for the collection version
          example: https://api.figshare.com/v2/collections/2000005/versions/1
          format: url
          title: url
          type: string
      required:
      - id
      - url
      title: CollectionVersions
      type: object
      x-tag: collections
    CommonSearch:
      properties:
        group:
          description: only return collections from this group
          example: 2000013
          format: int32
          title: group
          type: integer
        institution:
          description: only return collections from this institution
          example: 2000013
          format: int32
          title: institution
          type: integer
        limit:
          description: Number of results included on a page. Used for pagination with
            query
          example: 10
          format: int64
          maximum: 1000
          minimum: 1
          title: limit
          type: integer
        modified_since:
          description: Filter by article modified date. Will only return articles
            published after the date. date(ISO 8601) YYYY-MM-DD
          example: 2017-12-22
          title: modified_since
          type: string
        offset:
          description: Where to start the listing(the offset of the first result).
            Used for pagination with limit
          example: 0
          format: int64
          maximum: 5000
          minimum: 0
          title: offset
          type: integer
        order_direction:
          default: desc
          description: Direction of ordering
          enum:
          - asc
          - desc
          example: desc
          title: order_direction
          type: string
        page:
          description: Page number. Used for pagination with page_size
          example: 1
          format: int64
          maximum: 5000
          minimum: 1
          title: page
          type: integer
        page_size:
          default: 10
          description: The number of results included on a page. Used for pagination
            with page
          example: 10
          format: int64
          maximum: 1000
          minimum: 1
          title: page_size
          type: integer
        published_since:
          description: Filter by article publishing date. Will only return articles
            published after the date. date(ISO 8601) YYYY-MM-DD
          example: 2017-12-22
          title: published_since
          type: string
        search_for:
          description: Search term
          example: figshare
          title: search_for
          type: string
      title: CommonSearch
      type: object
      x-tag: common
    ConfidentialityCreator:
      example:
        reason: reason
      properties:
        reason:
          description: Reason for confidentiality
          title: reason
          type: string
      required:
      - reason
      title: ConfidentialityCreator
      type: object
    CreateProjectResponse:
      example:
        location: http://example.com/aeiou
        entity_id: 33334444
      properties:
        entity_id:
          description: Figshare ID of the entity
          example: 33334444
          format: int64
          title: entity_id
          type: integer
        location:
          description: Url for entity
          format: url
          title: location
          type: string
      required:
      - entity_id
      - location
      title: CreateProjectResponse
      type: object
      x-tag: common
    Curation:
      example:
        article_id: 6
        review_date: review_date
        account_id: 0
        group_id: 5
        comments_count: 5
        created_date: created_date
        id: 2
        modified_date: modified_date
        version: 7
        assigned_to: 1
        status: pending
      properties:
        account_id:
          description: The ID of the account of the owner of the article of this review.
          format: int64
          title: account_id
          type: integer
        article_id:
          description: The ID of the article of this review.
          format: int64
          title: article_id
          type: integer
        assigned_to:
          description: The ID of the account to which this review is assigned.
          format: int64
          title: assigned_to
          type: integer
        comments_count:
          description: The number of comments in the review.
          format: int64
          title: comments_count
          type: integer
        created_date:
          description: The creation date of the review.
          title: created_date
          type: string
        group_id:
          description: The group in which the article is present.
          format: int64
          title: group_id
          type: integer
        id:
          description: The review id
          format: int64
          title: id
          type: integer
        modified_date:
          description: The date the review has been modified.
          title: modified_date
          type: string
        review_date:
          description: The last time a comment has been added to the review.
          nullable: true
          title: review_date
          type: string
        status:
          description: The status of the review.
          enum:
          - pending
          - approved
          - rejected
          - closed
          title: status
          type: string
        version:
          description: The Version number of the article in review.
          format: int64
          title: version
          type: integer
      required:
      - account_id
      - article_id
      - assigned_to
      - comments_count
      - created_date
      - group_id
      - id
      - modified_date
      - review_date
      - status
      - version
      title: Curation
      type: object
      x-tag: institutions
    CurationComment:
      example:
        account_id: 0
        id: 6
        text: text
        type: comment
      properties:
        account_id:
          description: The ID of the account which generated this comment.
          format: int64
          title: account_id
          type: integer
        id:
          description: The ID of the comment.
          format: int64
          title: id
          type: integer
        text:
          description: The value/content of the comment.
          title: text
          type: string
        type:
          description: The ID of the account which generated this comment.
          enum:
          - comment
          - approved
          - rejected
          - closed
          title: type
          type: string
      required:
      - account_id
      - id
      - text
      - type
      title: CurationComment
      type: object
      x-tag: institutions
    CurationCommentCreate:
      example:
        text: text
      properties:
        text:
          description: The contents/value of the comment
          maxLength: 2000
          minLength: 1
          title: text
          type: string
      required:
      - text
      title: CurationCommentCreate
      type: object
      x-tag: institutions
    CurationDetail:
      allOf:
      - $ref: '#/components/schemas/Curation'
      example:
        item:
          figshare_url: http://figshare.com/articles/media/article_name/2000005
          custom_fields:
          - name: key
            is_mandatory: false
            value: value
          - name: key
            is_mandatory: false
            value: value
          resource_doi: 10.5072/FK2.developmentfigshare.2000005
          resource_title: first article
          files:
          - size: 14848
            supplied_md5: 043a51806d646e88cafbf19e7b82846f
            download_url: https://ndownloader.figshare.com/files/3000002
            name: test.xls
            computed_md5: 043a51806d646e88cafbf19e7b82846f
            id: 3000002
            is_link_only: false
          - size: 14848
            supplied_md5: 043a51806d646e88cafbf19e7b82846f
            download_url: https://ndownloader.figshare.com/files/3000002
            name: test.xls
            computed_md5: 043a51806d646e88cafbf19e7b82846f
            id: 3000002
            is_link_only: false
          embargo_options:
          - ip_name: Figshare IP range
            id: 364
            type: ip_range
          - ip_name: Figshare IP range
            id: 364
            type: ip_range
          authors:
          - orcid_id: 1234-5678-9123-1234
            url_name: John_Doe
            full_name: John Doe
            is_active: false
            id: 97657
          - orcid_id: 1234-5678-9123-1234
            url_name: John_Doe
            full_name: John Doe
            is_active: false
            id: 97657
      properties:
        item:
          $ref: '#/components/schemas/ArticleComplete'
      required:
      - account_id
      - article_id
      - assigned_to
      - comments_count
      - created_date
      - group_id
      - id
      - item
      - modified_date
      - review_date
      - status
      - version
      title: CurationDetail
      type: object
      x-tag: institutions
    CustomArticleField:
      example:
        name: key
        is_mandatory: false
        value: value
      properties:
        is_mandatory:
          description: True if field completion is mandatory
          example: false
          nullable: true
          title: is_mandatory
          type: boolean
        name:
          description: Custom  metadata name
          example: key
          title: name
          type: string
        value:
          description: Custom metadata value
          example: value
          title: value
          type: string
      required:
      - is_mandatory
      - name
      - value
      title: CustomArticleField
      type: object
      x-tag: articles
    CustomArticleFieldAdd:
      example:
        name: key
        value: value
      properties:
        name:
          description: Custom  metadata name
          example: key
          title: name
          type: string
        value:
          description: Custom metadata value
          example: value
          title: value
      required:
      - name
      - value
      title: CustomArticleFieldAdd
      type: object
      x-tag: articles
    ErrorMessage:
      example:
        code: 0
        message: message
      properties:
        code:
          description: "A machine friendly error code, used by the dev team to identify\
            \ the error."
          format: int64
          title: code
          type: integer
        message:
          description: A human friendly message explaining the error.
          title: message
          type: string
      title: ErrorMessage
      type: object
      x-tag: common
    FileCreator:
      example:
        size: 70
        link: http://figshare.com/file.txt
        name: test.py
        md5: 6c16e6e7d7587bd078e5117dda01d565
      properties:
        link:
          description: Url for an existing file that will not be uploaded to Figshare
          example: http://figshare.com/file.txt
          title: link
          type: string
        md5:
          description: MD5 sum pre-computed on client side.
          example: 6c16e6e7d7587bd078e5117dda01d565
          title: md5
          type: string
        name:
          description: File name including the extension; can be omitted only for
            linked files.
          example: test.py
          title: name
          type: string
        size:
          description: File size in bytes; can be omitted only for linked files.
          example: 70
          format: int64
          title: size
          type: integer
      title: FileCreator
      type: object
      x-tag: articles
    FileId:
      example:
        file_id: 123
      properties:
        file_id:
          description: File ID
          example: 123
          format: int64
          title: file_id
          type: integer
      title: FileId
      type: object
      x-tag: articles
    FundingCreate:
      example:
        id: 0
        title: title
      properties:
        id:
          description: A funding ID as returned by the Funding Search endpoint
          format: int64
          title: id
          type: integer
        title:
          description: The title of the new user created funding
          title: title
          type: string
      title: FundingCreate
      type: object
      x-tag: funding
    FundingInformation:
      example:
        grant_code: grant_code
        funder_name: funder_name
        id: 1
        is_user_defined: true
        title: Scholarly funding
        url: https://app.dimensions.ai/details/grant/1
      properties:
        funder_name:
          description: Funder's name
          title: funder_name
          type: string
        grant_code:
          description: The grant code
          title: grant_code
          type: string
        id:
          description: Funding id
          example: 1
          format: int64
          title: id
          type: integer
        is_user_defined:
          description: Return whether the grant has been introduced manually
          title: is_user_defined
          type: boolean
        title:
          description: The funding name
          example: Scholarly funding
          title: title
          type: string
        url:
          description: The grant url
          example: https://app.dimensions.ai/details/grant/1
          format: url
          title: url
          type: string
      required:
      - funder_name
      - grant_code
      - id
      - is_user_defined
      - title
      - url
      title: FundingInformation
      type: object
      x-tag: funding
    FundingSearch:
      example:
        search_for: search_for
      properties:
        search_for:
          description: Search term
          title: search_for
          type: string
      title: FundingSearch
      type: object
      x-tag: funding
    Group:
      example:
        association_criteria: IT
        parent_id: 0
        name: Materials
        resource_id: ""
        id: 1
      properties:
        association_criteria:
          description: "HR code associated with group, if code exists"
          example: IT
          title: association_criteria
          type: string
        id:
          description: Group id
          example: 1
          format: int64
          title: id
          type: integer
        name:
          description: Group name
          example: Materials
          title: name
          type: string
        parent_id:
          description: Parent group if any
          example: 0
          format: int64
          title: parent_id
          type: integer
        resource_id:
          description: Group resource id
          example: ""
          title: resource_id
          type: string
      required:
      - association_criteria
      - id
      - name
      - parent_id
      - resource_id
      title: Group
      type: object
      x-tag: institutions
    GroupEmbargoOptions:
      example:
        ip_name: Figshare IP range
        id: 364
        type: ip_range
      properties:
        id:
          description: Embargo option id
          example: 364
          format: int64
          title: id
          type: integer
        ip_name:
          description: IP range name; value appears if type is ip_range
          example: Figshare IP range
          title: ip_name
          type: string
        type:
          description: Embargo permission type
          enum:
          - logged_in
          - ip_range
          - administrator
          example: ip_range
          title: type
          type: string
      required:
      - id
      - ip_name
      - type
      title: GroupEmbargoOptions
      type: object
      x-tag: institutions
    Institution:
      example:
        domain: domain
        name: Institution
        id: 0
      properties:
        domain:
          description: Institution domain
          nullable: true
          title: domain
          type: string
          example: null
        id:
          description: Institution id
          example: 0
          format: int64
          title: id
          type: integer
        name:
          description: Institution name
          example: Institution
          title: name
          type: string
      required:
      - domain
      - id
      - name
      title: Institution
      type: object
      x-tag: institutions
    InstitutionAccountsSearch:
      example:
        is_active: 0
        offset: 0
        institution_user_id: alan
        limit: 10
        page: 1
        email: alan@institution.com
        search_for: figshare
        page_size: 10
      properties:
        email:
          description: filter by email
          example: alan@institution.com
          title: email
          type: string
        institution_user_id:
          description: filter by institution_user_id
          example: alan
          title: institution_user_id
          type: string
        is_active:
          description: Filter by active status
          format: int64
          maximum: 1
          minimum: 0
          title: is_active
          type: integer
        limit:
          description: Number of results included on a page. Used for pagination with
            query
          example: 10
          format: int64
          maximum: 1000
          minimum: 1
          title: limit
          type: integer
        offset:
          description: Where to start the listing(the offset of the first result).
            Used for pagination with limit
          example: 0
          format: int64
          maximum: 5000
          minimum: 0
          title: offset
          type: integer
        page:
          description: Page number. Used for pagination with page_size
          example: 1
          format: int64
          maximum: 5000
          minimum: 1
          title: page
          type: integer
        page_size:
          default: 10
          description: The number of results included on a page. Used for pagination
            with page
          example: 10
          format: int64
          maximum: 1000
          minimum: 1
          title: page_size
          type: integer
        search_for:
          description: Search term
          example: figshare
          title: search_for
          type: string
      title: InstitutionAccountsSearch
      type: object
      x-tag: institutions
    ItemType:
      example:
        is_selectable: true
        url_name: journal_contribution
        public_description: This is the description of an item type
        icon: paper
        name: journal contribution
        id: 1
        string_id: journal_contribution
      properties:
        icon:
          description: The string identifying the icon of the item type.
          example: paper
          title: icon
          type: string
        id:
          description: The ID of the item type.
          format: int64
          minimum: 1
          title: id
          type: integer
        is_selectable:
          description: The selectable status
          example: true
          title: is_selectable
          type: boolean
        name:
          description: The name of the item type
          example: journal contribution
          title: name
          type: string
        public_description:
          description: The description of the item type.
          example: This is the description of an item type
          title: public_description
          type: string
        string_id:
          description: The string identifier of the item type.
          example: journal_contribution
          title: string_id
          type: string
        url_name:
          description: The URL name of the item type.
          example: journal_contribution
          title: url_name
          type: string
      required:
      - icon
      - id
      - is_selectable
      - name
      - public_description
      - string_id
      - url_name
      title: ItemType
      type: object
    License:
      example:
        name: CC BY
        value: 1
        url: http://creativecommons.org/licenses/by/4.0/
      properties:
        name:
          description: License name
          example: CC BY
          title: name
          type: string
        url:
          description: License url
          example: http://creativecommons.org/licenses/by/4.0/
          format: url
          title: url
          type: string
        value:
          description: License value
          example: 1
          format: int64
          title: value
          type: integer
      required:
      - name
      - url
      - value
      title: License
      type: object
      x-tag: institutions
    Location:
      example:
        location: http://example.com/aeiou
      properties:
        location:
          description: Url for item
          format: url
          title: location
          type: string
      required:
      - location
      title: Location
      type: object
      x-tag: common
    LocationWarnings:
      example:
        warnings:
        - warnings
        - warnings
        location: http://example.com/aeiou
        entity_id: 33334444
      properties:
        entity_id:
          description: Figshare ID of the entity
          example: 33334444
          format: int64
          title: entity_id
          type: integer
        location:
          description: Url for entity
          format: url
          title: location
          type: string
        warnings:
          description: Issues encountered during the operation
          items:
            type: string
          title: warnings
          type: array
      required:
      - entity_id
      - location
      - warnings
      title: LocationWarnings
      type: object
      x-tag: common
    LocationWarningsUpdate:
      example:
        warnings:
        - warnings
        - warnings
        location: http://example.com/aeiou
      properties:
        location:
          description: Url for entity
          format: url
          title: location
          type: string
        warnings:
          description: Issues encountered during the operation
          items:
            type: string
          title: warnings
          type: array
      required:
      - location
      - warnings
      title: LocationWarningsUpdate
      type: object
      x-tag: common
    PrivateArticleSearch:
      allOf:
      - $ref: '#/components/schemas/ArticleSearch'
      example:
        resource_id: "1407024"
      properties:
        resource_id:
          description: only return collections with this resource_id
          example: "1407024"
          title: resource_id
          type: string
      title: PrivateArticleSearch
      type: object
      x-tag: articles
    PrivateAuthorsSearch:
      example:
        is_active: true
        offset: 0
        group_id: 0
        is_public: true
        limit: 10
        orcid: orcid
        order_direction: desc
        page: 1
        search_for: figshare
        institution_id: 1
        order: published_date
        page_size: 10
      properties:
        group_id:
          description: Return only authors in this group or subgroups of the group
          format: int64
          title: group_id
          type: integer
        institution_id:
          description: Return only authors associated to this institution
          example: 1
          format: int64
          title: institution_id
          type: integer
        is_active:
          description: Return only active authors if True
          title: is_active
          type: boolean
        is_public:
          description: Return only authors that have published items if True
          title: is_public
          type: boolean
        limit:
          description: Number of results included on a page. Used for pagination with
            query
          example: 10
          format: int64
          maximum: 1000
          minimum: 1
          title: limit
          type: integer
        offset:
          description: Where to start the listing(the offset of the first result).
            Used for pagination with limit
          example: 0
          format: int64
          maximum: 5000
          minimum: 0
          title: offset
          type: integer
        orcid:
          description: Orcid of author
          title: orcid
          type: string
        order:
          default: published_date
          description: The field by which to order. Default varies by endpoint/resource.
          enum:
          - published_date
          - modified_date
          - views
          - shares
          - downloads
          - cites
          example: published_date
          title: order
          type: string
        order_direction:
          default: desc
          description: Direction of ordering
          enum:
          - asc
          - desc
          example: desc
          title: order_direction
          type: string
        page:
          description: Page number. Used for pagination with page_size
          example: 1
          format: int64
          maximum: 5000
          minimum: 1
          title: page
          type: integer
        page_size:
          default: 10
          description: The number of results included on a page. Used for pagination
            with page
          example: 10
          format: int64
          maximum: 1000
          minimum: 1
          title: page_size
          type: integer
        search_for:
          description: Search term
          example: figshare
          title: search_for
          type: string
      title: PrivateAuthorsSearch
      type: object
      x-tag: authors
    PrivateCollectionSearch:
      allOf:
      - $ref: '#/components/schemas/CollectionSearch'
      example:
        resource_id: "1407024"
      properties:
        resource_id:
          description: only return collections with this resource_id
          example: "1407024"
          title: resource_id
          type: string
      title: PrivateCollectionSearch
      type: object
      x-tag: collections
    PrivateFile:
      allOf:
      - $ref: '#/components/schemas/PublicFile'
      example:
        upload_token: 9dfc5fe3-d617-4d93-ac11-8afe7e984a4b
        preview_state: preview not available
        viewer_type: viewer_type
        is_attached_to_public_version: true
        upload_url: https://uploads.figshare.com
        status: created
      properties:
        is_attached_to_public_version:
          description: True if the file is attached to a public item version
          example: true
          title: is_attached_to_public_version
          type: boolean
        preview_state:
          description: File preview state
          example: preview not available
          title: preview_state
          type: string
        status:
          description: Status for file upload
          example: created
          nullable: true
          title: status
          type: string
        upload_token:
          description: Token for file upload
          example: 9dfc5fe3-d617-4d93-ac11-8afe7e984a4b
          title: upload_token
          type: string
        upload_url:
          description: Upload url for file
          example: https://uploads.figshare.com
          format: url
          title: upload_url
          type: string
        viewer_type:
          description: File viewer type
          title: viewer_type
          type: string
      required:
      - computed_md5
      - download_url
      - id
      - is_attached_to_public_version
      - is_link_only
      - name
      - preview_state
      - size
      - status
      - supplied_md5
      - upload_token
      - upload_url
      - viewer_type
      title: PrivateFile
      type: object
      x-tag: common
    PrivateLink:
      example:
        html_location: https://figshare.com/s/d5ec7a85bcd6dbe9d9b2
        is_active: true
        expires_date: 2015-07-03T00:00:00
        id: 0cfb0dbeac92df445df4aba45f63fdc85fa0b9a888b64e157ce3c93b576aa300fb3621ef3a219515dd482
      properties:
        expires_date:
          description: Date when link will expire
          example: 2015-07-03T00:00:00
          title: expires_date
          type: string
        html_location:
          description: HTML url for private link
          example: https://figshare.com/s/d5ec7a85bcd6dbe9d9b2
          format: url
          title: html_location
          type: string
        id:
          description: Private link id
          example: 0cfb0dbeac92df445df4aba45f63fdc85fa0b9a888b64e157ce3c93b576aa300fb3621ef3a219515dd482
          title: id
          type: string
        is_active:
          description: True if private link is active
          example: true
          title: is_active
          type: boolean
      required:
      - expires_date
      - html_location
      - id
      - is_active
      title: PrivateLink
      type: object
      x-tag: articles
    PrivateLinkCreator:
      example:
        read_only: true
        expires_date: 2018-02-22 22:22:22
      properties:
        expires_date:
          description: Date when this private link should expire - optional. By default
            private links expire in 365 days.
          example: 2018-02-22 22:22:22
          title: expires_date
          type: string
        read_only:
          description: "Optional, default true. Set to false to give private link\
            \ users editing rights for this collection."
          example: true
          title: read_only
          type: boolean
      title: PrivateLinkCreator
      type: object
      x-tag: articles
    PrivateLinkResponse:
      example:
        html_location: https://figshare.com/s/d5ec7a85bcd6dbe9d9b2
        location: http://example.com/aeiou
        token: d5ec7a85bcd6dbe9d9b2
      properties:
        html_location:
          description: HTML url for private link
          example: https://figshare.com/s/d5ec7a85bcd6dbe9d9b2
          format: url
          title: html_location
          type: string
        location:
          description: Url for private link
          format: url
          title: location
          type: string
        token:
          description: Token for private link
          example: d5ec7a85bcd6dbe9d9b2
          title: token
          type: string
      required:
      - html_location
      - location
      - token
      title: PrivateLinkResponse
      type: object
      x-tag: common
    Project:
      example:
        id: 1
        title: project
        published_date: 2017-05-16T14:55:08Z
        url: http://api.figshare.com/v2/account/projects/1
      properties:
        id:
          description: Project id
          example: 1
          format: int64
          title: id
          type: integer
        published_date:
          description: Date when project was published
          example: 2017-05-16T14:55:08Z
          nullable: true
          title: published_date
          type: string
        title:
          description: Project title
          example: project
          title: title
          type: string
        url:
          description: Api endpoint
          example: http://api.figshare.com/v2/account/projects/1
          title: url
          type: string
      required:
      - id
      - published_date
      - title
      - url
      title: Project
      type: object
      x-tag: projects
    ProjectArticle:
      allOf:
      - $ref: '#/components/schemas/Article'
      example:
        has_linked_file: true
        is_embargoed: true
        references:
        - http://figshare.com
        - http://figshare.com/api
        description: article description
        confidential_reason: none
        is_metadata_record: false
        metadata_reason: hosted somewhere else
        categories:
        - path: /450/1024/6532
          taxonomy_id: 4
          parent_id: 1
          id: 11
          source_id: "300204"
          title: Anatomy
        - path: /450/1024/6532
          taxonomy_id: 4
          parent_id: 1
          id: 11
          source_id: "300204"
          title: Anatomy
        embargo_type: article
        funding: none
        is_active: true
        citation: "lilliput, figshare admin (2017): first project item. figshare.\n\
          \ \n Retrieved: 14 01, May 22, 2017 (GMT)"
        embargo_date: 2017-05-18T11:49:03Z
        embargo_title: File(s) under embargo
        is_confidential: true
        modified_date: 2017-05-18T11:49:03Z
        version: 1
        tags:
        - t1
        - t2
        - t3
        funding_list:
        - 0
        - 0
        license:
          name: CC BY
          value: 1
          url: http://creativecommons.org/licenses/by/4.0/
        size: 69939
        embargo_reason: not complete
        is_public: true
        created_date: 2017-05-18T11:49:03Z
        status: public
      properties:
        categories:
          description: List of categories selected for the article
          items:
            $ref: '#/components/schemas/Category'
          title: categories
          type: array
        citation:
          description: Article citation
          example: "lilliput, figshare admin (2017): first project item. figshare.\n\
            \ \n Retrieved: 14 01, May 22, 2017 (GMT)"
          title: citation
          type: string
        confidential_reason:
          description: Confidentiality reason
          example: none
          title: confidential_reason
          type: string
        created_date:
          description: Date when article was created
          example: 2017-05-18T11:49:03Z
          title: created_date
          type: string
        description:
          description: Article description
          example: article description
          title: description
          type: string
        embargo_date:
          description: Date when embargo lifts
          example: 2017-05-18T11:49:03Z
          nullable: true
          title: embargo_date
          type: string
        embargo_reason:
          description: Reason for embargo
          example: not complete
          title: embargo_reason
          type: string
        embargo_title:
          description: Title for embargo
          example: File(s) under embargo
          title: embargo_title
          type: string
        embargo_type:
          description: Article embargo
          example: article
          nullable: true
          title: embargo_type
          type: string
        funding:
          description: Article funding
          example: none
          title: funding
          type: string
        funding_list:
          items:
            type: integer
          title: funding_list
          type: array
        has_linked_file:
          description: True if any files are linked to the article
          example: true
          title: has_linked_file
          type: boolean
        is_active:
          description: True if article is active
          example: true
          title: is_active
          type: boolean
        is_confidential:
          description: Article Confidentiality
          example: true
          title: is_confidential
          type: boolean
        is_embargoed:
          description: True if article is embargoed
          example: true
          title: is_embargoed
          type: boolean
        is_metadata_record:
          description: True if article has no files
          example: false
          title: is_metadata_record
          type: boolean
        is_public:
          description: True if article is published
          example: true
          title: is_public
          type: boolean
        license:
          $ref: '#/components/schemas/License'
        metadata_reason:
          description: Article metadata reason
          example: hosted somewhere else
          title: metadata_reason
          type: string
        modified_date:
          description: Date when article was last modified
          example: 2017-05-18T11:49:03Z
          nullable: true
          title: modified_date
          type: string
        references:
          description: List of references
          example:
          - http://figshare.com
          - http://figshare.com/api
          items:
            format: url
            type: string
          title: references
          type: array
        size:
          description: Article size
          example: 69939
          format: int64
          title: size
          type: integer
        status:
          description: Article status
          example: public
          title: status
          type: string
        tags:
          description: List of article tags
          example:
          - t1
          - t2
          - t3
          items:
            type: string
          title: tags
          type: array
        version:
          description: Article version
          example: 1
          format: int64
          title: version
          type: integer
      required:
      - categories
      - citation
      - confidential_reason
      - created_date
      - defined_type
      - defined_type_name
      - description
      - doi
      - embargo_date
      - embargo_reason
      - embargo_title
      - embargo_type
      - funding
      - funding_list
      - group_id
      - handle
      - has_linked_file
      - id
      - is_active
      - is_confidential
      - is_embargoed
      - is_metadata_record
      - is_public
      - license
      - metadata_reason
      - modified_date
      - published_date
      - references
      - size
      - status
      - tags
      - thumb
      - timeline
      - title
      - url
      - url_private_api
      - url_private_html
      - url_public_api
      - url_public_html
      - version
      title: ProjectArticle
      type: object
      x-tag: articles
    ProjectCollaborator:
      example:
        role_name: Owner
        user_id: 1
        name: name
        status: invited
      properties:
        name:
          description: Collaborator name
          example: name
          title: name
          type: string
        role_name:
          description: Collaborator role
          example: Owner
          title: role_name
          type: string
        status:
          description: Status of collaborator invitation
          example: invited
          title: status
          type: string
        user_id:
          description: Collaborator id
          example: 1
          title: user_id
          type: integer
      required:
      - name
      - role_name
      - status
      - user_id
      title: ProjectCollaborator
      type: object
      x-tag: projects
    ProjectCollaboratorInvite:
      example:
        role_name: viewer
        user_id: 100008
        comment: hey
        email: user@domain.com
      properties:
        comment:
          description: Text sent when inviting the user to the project
          example: hey
          title: comment
          type: string
        email:
          description: Collaborator email
          example: user@domain.com
          title: email
          type: string
        role_name:
          description: Role of the the collaborator inside the project
          enum:
          - viewer
          - collaborator
          example: viewer
          title: role_name
          type: string
        user_id:
          description: User id of the collaborator
          example: 100008
          format: int64
          title: user_id
          type: integer
      required:
      - role_name
      title: ProjectCollaboratorInvite
      type: object
      x-tag: projects
    ProjectComplete:
      allOf:
      - $ref: '#/components/schemas/Project'
      example:
        funding_list:
        - grant_code: grant_code
          funder_name: funder_name
          id: 1
          is_user_defined: true
          title: Scholarly funding
          url: https://app.dimensions.ai/details/grant/1
        - grant_code: grant_code
          funder_name: funder_name
          id: 1
          is_user_defined: true
          title: Scholarly funding
          url: https://app.dimensions.ai/details/grant/1
        figshare_url: https://figshare.com/projects/project/1
        funding: ""
        collaborators:
        - role_name: Owner
          user_id: 1
          name: name
        - role_name: Owner
          user_id: 1
          name: name
        description: description
      properties:
        collaborators:
          description: List of project collaborators
          items:
            $ref: '#/components/schemas/Collaborator'
          title: collaborators
          type: array
        description:
          description: Project description
          example: description
          title: description
          type: string
        figshare_url:
          description: Project public url
          example: https://figshare.com/projects/project/1
          nullable: true
          title: figshare_url
          type: string
        funding:
          description: Project funding
          example: ""
          title: funding
          type: string
        funding_list:
          description: Full Project funding information
          items:
            $ref: '#/components/schemas/FundingInformation'
          title: funding_list
          type: array
      required:
      - collaborators
      - description
      - figshare_url
      - funding
      - funding_list
      - id
      - published_date
      - title
      - url
      title: ProjectComplete
      type: object
      x-tag: projects
    ProjectCompletePrivate:
      allOf:
      - $ref: '#/components/schemas/ProjectPrivate'
      example:
        funding: none
        custom_fields:
        - name: key
          is_mandatory: false
          value: value
        - name: key
          is_mandatory: false
          value: value
        description: description
        modified_date: 2017-05-16T14:52:54Z
        funding_list:
        - grant_code: grant_code
          funder_name: funder_name
          id: 1
          is_user_defined: true
          title: Scholarly funding
          url: https://app.dimensions.ai/details/grant/1
        - grant_code: grant_code
          funder_name: funder_name
          id: 1
          is_user_defined: true
          title: Scholarly funding
          url: https://app.dimensions.ai/details/grant/1
        figshare_url: https://figshare.com/projects/project/1
        account_id: 1000001
        group_id: 0
        used_quota: 0
        quota: 0
        used_quota_public: 0
        collaborators:
        - role_name: Owner
          user_id: 1
          name: name
        - role_name: Owner
          user_id: 1
          name: name
        created_date: 2017-05-16T14:52:54Z
        used_quota_private: 0
      properties:
        account_id:
          description: ID of the account owning the project
          example: 1000001
          format: int64
          title: account_id
          type: integer
        collaborators:
          description: List of project collaborators
          items:
            $ref: '#/components/schemas/Collaborator'
          title: collaborators
          type: array
        created_date:
          description: Date when project was created
          example: 2017-05-16T14:52:54Z
          title: created_date
          type: string
        custom_fields:
          description: Collection custom fields
          items:
            $ref: '#/components/schemas/CustomArticleField'
          title: custom_fields
          type: array
        description:
          description: Project description
          example: description
          title: description
          type: string
        figshare_url:
          description: Project public url
          example: https://figshare.com/projects/project/1
          nullable: true
          title: figshare_url
          type: string
        funding:
          description: Project funding
          example: none
          title: funding
          type: string
        funding_list:
          description: Full Project funding information
          items:
            $ref: '#/components/schemas/FundingInformation'
          title: funding_list
          type: array
        group_id:
          description: Group of project if any
          example: 0
          format: int64
          title: group_id
          type: integer
        modified_date:
          description: Date when project was last modified
          example: 2017-05-16T14:52:54Z
          title: modified_date
          type: string
        quota:
          description: Project quota
          example: 0
          format: int64
          title: quota
          type: integer
        used_quota:
          description: Project used quota
          example: 0
          format: int64
          title: used_quota
          type: integer
        used_quota_private:
          description: Project private quota used
          example: 0
          format: int64
          title: used_quota_private
          type: integer
        used_quota_public:
          description: Project public quota used
          example: 0
          format: int64
          title: used_quota_public
          type: integer
      required:
      - account_id
      - collaborators
      - created_date
      - custom_fields
      - description
      - figshare_url
      - funding
      - funding_list
      - group_id
      - id
      - modified_date
      - published_date
      - quota
      - role
      - storage
      - title
      - url
      - used_quota
      - used_quota_private
      - used_quota_public
      title: ProjectCompletePrivate
      type: object
      x-tag: projects
    ProjectCreate:
      example:
        funding_list:
        - id: 0
          title: title
        - id: 0
          title: title
        custom_fields_list:
        - name: key
          value: value
        - name: key
          value: value
        funding: ""
        group_id: 0
        custom_fields:
          defined_key: value for it
        description: project description
        title: project title
      properties:
        custom_fields:
          description: "List of key, values pairs to be associated with the project"
          example:
            defined_key: value for it
          title: custom_fields
          type: object
        custom_fields_list:
          description: "List of custom fields values, supersedes custom_fields parameter"
          items:
            $ref: '#/components/schemas/CustomArticleFieldAdd'
          title: custom_fields_list
          type: array
        description:
          description: Project description
          example: project description
          maxLength: 10000
          title: description
          type: string
        funding:
          description: Grant number or organization(s) that funded this project. Up
            to 2000 characters permitted.
          example: ""
          title: funding
          type: string
        funding_list:
          description: Funding creation / update items
          items:
            $ref: '#/components/schemas/FundingCreate'
          title: funding_list
          type: array
        group_id:
          description: Only if project type is group.
          example: 0
          format: int64
          title: group_id
          type: integer
        title:
          description: The title for this project - mandatory. 3 - 1000 characters.
          example: project title
          maxLength: 1000
          minLength: 3
          title: title
          type: string
      required:
      - title
      title: ProjectCreate
      type: object
      x-tag: projects
    ProjectNote:
      example:
        user_id: 100008
        user_name: user
        abstract: text
        created_date: 2017-05-16T16:49:11Z
        id: 1
        modified_date: 2017-05-16T16:49:11Z
      properties:
        abstract:
          description: Note Abstract - short/truncated content
          example: text
          title: abstract
          type: string
        created_date:
          description: Date when note was created
          example: 2017-05-16T16:49:11Z
          title: created_date
          type: string
        id:
          description: Project note id
          example: 1
          format: int64
          title: id
          type: integer
        modified_date:
          description: Date when note was last modified
          example: 2017-05-16T16:49:11Z
          title: modified_date
          type: string
        user_id:
          description: User who wrote the note
          example: 100008
          format: int64
          title: user_id
          type: integer
        user_name:
          description: Username of the one who wrote the note
          example: user
          title: user_name
          type: string
      required:
      - abstract
      - created_date
      - id
      - modified_date
      - user_id
      - user_name
      title: ProjectNote
      type: object
      x-tag: projects
    ProjectNoteCreate:
      example:
        text: note to remember
      properties:
        text:
          description: Text of the note
          example: note to remember
          minLength: 3
          title: text
          type: string
      required:
      - text
      title: ProjectNoteCreate
      type: object
      x-tag: projects
    ProjectNotePrivate:
      allOf:
      - $ref: '#/components/schemas/ProjectNote'
      example:
        text: text
      properties:
        text:
          description: Full text of note
          example: text
          title: text
          type: string
      required:
      - abstract
      - created_date
      - id
      - modified_date
      - text
      - user_id
      - user_name
      title: ProjectNotePrivate
      type: object
      x-tag: projects
    ProjectPrivate:
      allOf:
      - $ref: '#/components/schemas/Project'
      example:
        role: Owner
        storage: individual
      properties:
        role:
          description: Role inside this project
          enum:
          - Owner
          - Collaborator
          - Viewer
          example: Owner
          title: role
          type: string
        storage:
          description: Project storage type
          enum:
          - individual
          - group
          example: individual
          title: storage
          type: string
      required:
      - id
      - published_date
      - role
      - storage
      - title
      - url
      title: ProjectPrivate
      type: object
      x-tag: projects
    ProjectUpdate:
      example:
        funding_list:
        - id: 0
          title: title
        - id: 0
          title: title
        custom_fields_list:
        - name: key
          value: value
        - name: key
          value: value
        funding: ""
        custom_fields:
          defined_key: value for it
        description: project description
        title: project title
      properties:
        custom_fields:
          description: "List of key, values pairs to be associated with the project"
          example:
            defined_key: value for it
          title: custom_fields
          type: object
        custom_fields_list:
          description: "List of custom fields values, supersedes custom_fields parameter"
          items:
            $ref: '#/components/schemas/CustomArticleFieldAdd'
          title: custom_fields_list
          type: array
        description:
          description: Project description
          example: project description
          maxLength: 10000
          title: description
          type: string
        funding:
          description: Grant number or organization(s) that funded this project. Up
            to 2000 characters permitted.
          example: ""
          title: funding
          type: string
        funding_list:
          description: Funding creation / update items
          items:
            $ref: '#/components/schemas/FundingCreate'
          title: funding_list
          type: array
        title:
          description: The title for this project - mandatory. 3 - 1000 characters.
          example: project title
          maxLength: 1000
          minLength: 3
          title: title
          type: string
      title: ProjectUpdate
      type: object
      x-tag: projects
    ProjectsSearch:
      allOf:
      - $ref: '#/components/schemas/CommonSearch'
      example:
        order: published_date
      properties:
        order:
          default: published_date
          description: The field by which to order.
          enum:
          - published_date
          - modified_date
          - views
          example: published_date
          title: order
          type: string
      title: ProjectsSearch
      type: object
      x-tag: projects
    PublicFile:
      example:
        size: 14848
        supplied_md5: 043a51806d646e88cafbf19e7b82846f
        download_url: https://ndownloader.figshare.com/files/3000002
        name: test.xls
        computed_md5: 043a51806d646e88cafbf19e7b82846f
        id: 3000002
        is_link_only: false
      properties:
        computed_md5:
          description: File computed md5
          example: 043a51806d646e88cafbf19e7b82846f
          title: computed_md5
          type: string
        download_url:
          description: Url for file download
          example: https://ndownloader.figshare.com/files/3000002
          format: url
          title: download_url
          type: string
        id:
          description: File id
          example: 3000002
          format: int64
          title: id
          type: integer
        is_link_only:
          description: True if file is hosted somewhere else
          example: false
          title: is_link_only
          type: boolean
        name:
          description: File name
          example: test.xls
          title: name
          type: string
        size:
          description: File size
          example: 14848
          format: int64
          title: size
          type: integer
        supplied_md5:
          description: File supplied md5
          example: 043a51806d646e88cafbf19e7b82846f
          title: supplied_md5
          type: string
      required:
      - computed_md5
      - download_url
      - id
      - is_link_only
      - name
      - size
      - supplied_md5
      title: PublicFile
      type: object
      x-tag: common
    Resource:
      example:
        link: https://docs.figshare.com
        id: aaaa23512
        title: Test title
        version: 1
        doi: ""
        status: frozen
      properties:
        doi:
          default: ""
          description: DOI of resource item
          title: doi
          type: string
        id:
          default: ""
          description: ID of resource item
          example: aaaa23512
          maxLength: 255
          title: id
          type: string
        link:
          default: ""
          description: Link of resource item
          example: https://docs.figshare.com
          maxLength: 255
          title: link
          type: string
        status:
          default: ""
          description: Status of resource item
          example: frozen
          maxLength: 100
          title: status
          type: string
        title:
          default: ""
          description: Title of resource item
          example: Test title
          maxLength: 1000
          title: title
          type: string
        version:
          default: 0
          description: Version of resource item
          example: 1
          format: int64
          title: version
          type: integer
      title: Resource
      type: object
      x-tag: resource
    ResponseMessage:
      example:
        message: Project 1 has been published
      properties:
        message:
          description: Response message text
          example: Project 1 has been published
          title: message
          type: string
      required:
      - message
      title: ResponseMessage
      type: object
      x-tag: common
    Role:
      example:
        name: Curator
        description: description
        id: 1
        category: group
      properties:
        category:
          description: Role category
          example: group
          title: category
          type: string
        description:
          description: Role description
          title: description
          type: string
        id:
          description: Role id
          example: 1
          format: int64
          title: id
          type: integer
        name:
          description: Role name
          example: Curator
          title: name
          type: string
      required:
      - category
      - description
      - id
      - name
      title: Role
      type: object
      x-tag: institutions
    ShortAccount:
      example:
        orcid_id: 0000-0001-2345-6789
        user_id: 1000001
        used_quota: 1074000000
        institution_user_id: "1"
        quota: 1074000000
        active: 0
        last_name: John
        id: 1495682
        first_name: Doe
        email: user@domain.com
        institution_id: 1
      properties:
        active:
          description: Account activity status
          example: 0
          format: int64
          title: active
          type: integer
        email:
          description: User email
          example: user@domain.com
          title: email
          type: string
        first_name:
          description: First Name
          example: Doe
          title: first_name
          type: string
        id:
          description: Account id
          example: 1495682
          format: int64
          title: id
          type: integer
        institution_id:
          description: Account institution
          example: 1
          format: int64
          title: institution_id
          type: integer
        institution_user_id:
          description: Account institution user id
          example: "1"
          title: institution_user_id
          type: string
        last_name:
          description: Last Name
          example: John
          title: last_name
          type: string
        orcid_id:
          description: ORCID iD associated to account
          example: 0000-0001-2345-6789
          title: orcid_id
          type: string
        quota:
          description: "Total storage available to account, in bytes"
          example: 1074000000
          format: int64
          title: quota
          type: integer
        used_quota:
          description: "Storage used by the account, in bytes"
          example: 1074000000
          format: int64
          title: used_quota
          type: integer
        user_id:
          description: "User id associated with account, useful for example for adding\
            \ the account as an author to an item"
          example: 1000001
          format: int64
          title: user_id
          type: integer
      required:
      - active
      - email
      - first_name
      - id
      - institution_id
      - institution_user_id
      - last_name
      - orcid_id
      - quota
      - used_quota
      - user_id
      title: ShortAccount
      type: object
      x-tag: other
    ShortCustomField:
      example:
        name: my custom field
        id: 365
        field_type: textarea
      properties:
        field_type:
          description: Custom field type
          enum:
          - text
          - textarea
          - dropdown
          - url
          - email
          - date
          - dropdown_large_list
          example: textarea
          title: field_type
          type: string
        id:
          description: Custom field id
          example: 365
          format: int64
          title: id
          type: integer
        name:
          description: Custom field name
          example: my custom field
          title: name
          type: string
      required:
      - field_type
      - id
      - name
      title: ShortCustomField
      type: object
      x-tag: institutions
    Timeline:
      allOf:
      - $ref: '#/components/schemas/TimelineUpdate'
      example:
        submission: 2015-12-31
        posted: 2015-12-31
        revision: 2015-12-31
      properties:
        posted:
          description: Posted date
          example: 2015-12-31
          nullable: true
          title: posted
          type: string
        revision:
          description: Revision date from curation (if curated)
          example: 2015-12-31
          nullable: true
          title: revision
          type: string
        submission:
          description: Submission date in curation (if curated)
          example: 2015-12-31
          nullable: true
          title: submission
          type: string
      required:
      - firstOnline
      - posted
      - publisherAcceptance
      - publisherPublication
      - revision
      - submission
      title: Timeline
      type: object
      x-tag: timeline
    TimelineUpdate:
      example:
        firstOnline: 2015-12-31
        publisherAcceptance: 2015-12-31
        publisherPublication: 2015-12-31
      properties:
        firstOnline:
          description: Online posted date
          example: 2015-12-31
          title: firstOnline
          type: string
        publisherAcceptance:
          description: Date when the item was accepted for publication
          example: 2015-12-31
          title: publisherAcceptance
          type: string
        publisherPublication:
          description: Publish date
          example: 2015-12-31
          title: publisherPublication
          type: string
      title: TimelineUpdate
      type: object
      x-tag: timeline_update
    UploadFilePart:
      properties:
        endOffset:
          description: Indexes on byte range. zero-based and inclusive
          example: 69
          format: int64
          title: endOffset
          type: integer
        locked:
          description: "When a part is being uploaded it is being locked, by setting\
            \ the locked flag to true. No changes/uploads can happen on this part\
            \ from other requests."
          title: locked
          type: boolean
        partNo:
          description: File part id
          example: 1
          format: int64
          title: partNo
          type: integer
        startOffset:
          description: Indexes on byte range. zero-based and inclusive
          example: 0
          format: int64
          title: startOffset
          type: integer
        status:
          description: part status
          enum:
          - PENDING
          - COMPLETE
          title: status
          type: string
      title: UploadFilePart
      type: object
      x-tag: upload
    UploadInfo:
      properties:
        md5:
          description: md5 provided on upload initialization
          example: 3a7f451c068f4e13260034c611378140
          type: string
        name:
          description: name of file on upload server
          example: 3000017/test.py
          type: string
        parts:
          description: Uploads parts
          items:
            $ref: '#/components/schemas/UploadFilePart'
          type: array
        size:
          description: size of file in bytes
          example: 70
          format: int64
          type: integer
        status:
          description: Upload status
          enum:
          - PENDING
          - COMPLETED
          - ABORTED
          type: string
        token:
          description: token received after initializing a file upload
          example: 693a2802-cd61-430d-b89f-507f0f6d8fd3
          type: string
      type: object
      x-tag: upload
    User:
      example:
        orcid_id: 1234-5678-9123-1234
        url_name: John_Doe
        is_active: true
        is_public: true
        name: John Doe
        last_name: John
        id: 1495682
        first_name: Doe
        job_title: programmer
      properties:
        first_name:
          description: First Name
          example: Doe
          title: first_name
          type: string
        id:
          description: User id
          example: 1495682
          format: int64
          title: id
          type: integer
        is_active:
          description: Account activity status
          example: true
          title: is_active
          type: boolean
        is_public:
          description: Account public status
          example: true
          title: is_public
          type: boolean
        job_title:
          description: User Job title
          example: programmer
          title: job_title
          type: string
        last_name:
          description: Last Name
          example: John
          title: last_name
          type: string
        name:
          description: Full Name
          example: John Doe
          title: name
          type: string
        orcid_id:
          description: Orcid associated to this User
          example: 1234-5678-9123-1234
          title: orcid_id
          type: string
        url_name:
          description: Name that appears in website url
          example: John_Doe
          title: url_name
          type: string
      required:
      - first_name
      - id
      - is_active
      - is_public
      - job_title
      - last_name
      - name
      - orcid_id
      - url_name
      title: User
      type: object
      x-tag: other
    custom_fields_upload_request:
      properties:
        external_file:
          description: CSV file to be uploaded
          format: binary
          type: string
      type: object
    institution_hrfeed_upload_request:
      properties:
        hrfeed:
          description: You can find an example in the Hr Feed section
          format: binary
          type: string
      type: object
  securitySchemes:
    OAuth2:
      flows:
        authorizationCode:
          authorizationUrl: https://figshare.com/account/applications/authorize
          scopes:
            all: Grants all access
          tokenUrl: https://api.figshare.com/v2/token
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_OAuth2
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_OAuth2
x-additional-descriptions:
- position: bottom
  subsections:
  - content: description_upload_steps
    title: Steps to upload file
  - content: description_upload_api
    title: Uploads API
  - content: description_upload_parts_api
    title: Parts API
  - content: description_upload_example
    title: Example Upload on figshare
  - content: description_upload_output
    title: Output of Script
  - content: description_upload_bash
    title: Upload Bash Script
  - content: description_upload_from_s3
    title: Upload S3 File to Figshare
  title: Upload files
- position: bottom
  subsections:
  - content: description_search_intro
    title: How to find data on figshare
  - content: description_search_operators
    title: Search operators
  - content: description_search_attributes
    title: Searchable attributes
  - content: description_search_quick
    title: Quick search
  - content: description_search_advanced
    title: Advanced search
  - content: description_search_combined
    title: Combined field search
  - content: description_search_complex
    title: Complex searches
  title: Search
- position: bottom
  subsections:
  - subsections:
    - content: description_stats_service_intro
      title: Intro
    - content: description_stats_service_auth
      title: Authentication
    - content: description_stats_service_errors
      title: Errors
    - content: description_stats_service_endpoints
      title: Endpoints
    title: Stats service
  - subsections:
    - content: description_stats_breakdown_endpoints
      title: Endpoints for retrieving a breakdown
    - content: description_stats_breakdown_auth
      title: Authorization
    - content: description_stats_breakdown_format
      title: Endpoint format
    - content: description_stats_breakdown_params
      title: Request parameters
    - content: description_stats_breakdown_examples
      title: Examples
    title: Breakdown
  - subsections:
    - content: description_stats_timeline_endpoints
      title: Endpoints for retrieving a timeline
    - content: description_stats_timeline_auth
      title: Authorization
    - content: description_stats_timeline_format
      title: Endpoint format
    - content: description_stats_timeline_params
      title: Request parameters
    - content: description_stats_timeline_examples
      title: Examples
    title: Timeline
  - subsections:
    - content: description_stats_tops_endpoints
      title: Endpoints for retrieving tops
    - content: description_stats_tops_auth
      title: Authorization
    - content: description_stats_tops_format
      title: Endpoint format
    - content: description_stats_tops_params
      title: Request parameters
    - content: description_stats_tops_examples
      title: Examples
    title: Tops
  - subsections:
    - content: description_stats_totals_endpoints
      title: Endpoints for retrieving totals
    - content: description_stats_totals_auth
      title: Authorization
    - content: description_stats_totals_format
      title: Endpoint format
    - content: description_stats_totals_examples
      title: Examples
    title: Totals
  - subsections:
    - content: description_stats_count_endpoints
      title: Endpoint for retrieving counts
    - content: description_stats_count_auth
      title: Authorization
    - content: description_stats_count_format
      title: Endpoint format
    - content: description_stats_count_examples
      title: Example
    title: Count Articles
  title: Stats
- position: bottom
  subsections:
  - content: description_oai_pmh
    title: OAI-PMH
  - content: description_oai_baseurl
    title: Base URL
  - content: description_oai_itemarticle
    title: Item equals Article
  - content: description_oai_metadata
    title: Metadata formats
  - content: description_oai_datestamp
    title: Datestamps
  - content: description_oai_sets
    title: Sets
  - content: description_oai_update_schedule
    title: Update schedule
  - content: description_oai_pagination
    title: Pagination and Resumption Token Expiration
  - content: description_oai_ratelimit
    title: Rate limit
  - content: description_oai_futuredev
    title: Future development
  - content: description_oai_someexamples
    title: Some examples
  title: OAI PMH
- position: bottom
  subsections:
  - content: description_hrfeed_endpoint
    title: HR Feed Private Endpoint
  - subsections:
    - content: description_hrfeed_examples_python
      title: Python
    - content: description_hrfeed_examples_java
      title: Java
    - content: description_hrfeed_examples_csharp
      title: C Sharp
    - content: description_hrfeed_examples_curl
      title: Curl
    title: HR Feed examples
  - content: description_hrfeed_response
    title: Response
  - content: description_hrfeed_errors
    title: Errors
  - content: description_hrfeed_notes
    title: Notes
  title: HR Feed
- position: bottom
  subsections:
  - content: description_custom_fields_endpoint
    title: Custom Fields Private Endpoints
  - subsections:
    - content: description_custom_fields_examples_python
      title: Python
    - content: description_custom_fields_examples_java
      title: Java
    - content: description_custom_fields_examples_csharp
      title: C Sharp
    - content: description_custom_fields_examples_curl
      title: Curl
    title: Custom Fields examples
  - content: description_custom_fields_response
    title: Response
  - content: description_custom_fields_errors
    title: Errors
  - content: description_custom_fields_notes
    title: Notes
  title: Custom Fields
- position: top
  subsections:
  - content: description_intro
    title: Introduction
  - subsections:
    - content: description_oauth_intro
      title: Intro
    - content: description_oauth_quick
      title: Quick guide
    - content: description_oauth_scope
      title: Scope
    - content: description_oauth_grant
      title: Grant Types
    title: OAuth
  - subsections:
    - content: description_api_features
      title: Feature list
    - content: description_api_parameters
      title: Sending parameters
    - content: description_api_resourcerepresentation
      title: Resource representations
    - content: description_api_auth
      title: Authentication
    - content: description_api_errors
      title: Errors
    - content: description_api_search
      title: Searching filtering and pagination
    - content: description_api_ratelimit
      title: Rate limiting
    - content: description_api_requests
      title: Conditional requests
    - content: description_api_cors
      title: CORS policy
    - content: description_api_impersonation
      title: Impersonation
    title: API description
  title: figshare Documentation
