# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ArticleHandle(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, handle: str=None):
        """ArticleHandle - a model defined in OpenAPI

        :param handle: The handle of this ArticleHandle.
        """
        self.openapi_types = {
            'handle': str
        }

        self.attribute_map = {
            'handle': 'handle'
        }

        self._handle = handle

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ArticleHandle':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ArticleHandle of this ArticleHandle.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def handle(self):
        """Gets the handle of this ArticleHandle.

        Reserved Handle

        :return: The handle of this ArticleHandle.
        :rtype: str
        """
        return self._handle

    @handle.setter
    def handle(self, handle):
        """Sets the handle of this ArticleHandle.

        Reserved Handle

        :param handle: The handle of this ArticleHandle.
        :type handle: str
        """
        if handle is None:
            raise ValueError("Invalid value for `handle`, must not be `None`")

        self._handle = handle
