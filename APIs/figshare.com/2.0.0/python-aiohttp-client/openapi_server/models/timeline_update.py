# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TimelineUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first_online: str=None, publisher_acceptance: str=None, publisher_publication: str=None):
        """TimelineUpdate - a model defined in OpenAPI

        :param first_online: The first_online of this TimelineUpdate.
        :param publisher_acceptance: The publisher_acceptance of this TimelineUpdate.
        :param publisher_publication: The publisher_publication of this TimelineUpdate.
        """
        self.openapi_types = {
            'first_online': str,
            'publisher_acceptance': str,
            'publisher_publication': str
        }

        self.attribute_map = {
            'first_online': 'firstOnline',
            'publisher_acceptance': 'publisherAcceptance',
            'publisher_publication': 'publisherPublication'
        }

        self._first_online = first_online
        self._publisher_acceptance = publisher_acceptance
        self._publisher_publication = publisher_publication

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TimelineUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TimelineUpdate of this TimelineUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first_online(self):
        """Gets the first_online of this TimelineUpdate.

        Online posted date

        :return: The first_online of this TimelineUpdate.
        :rtype: str
        """
        return self._first_online

    @first_online.setter
    def first_online(self, first_online):
        """Sets the first_online of this TimelineUpdate.

        Online posted date

        :param first_online: The first_online of this TimelineUpdate.
        :type first_online: str
        """

        self._first_online = first_online

    @property
    def publisher_acceptance(self):
        """Gets the publisher_acceptance of this TimelineUpdate.

        Date when the item was accepted for publication

        :return: The publisher_acceptance of this TimelineUpdate.
        :rtype: str
        """
        return self._publisher_acceptance

    @publisher_acceptance.setter
    def publisher_acceptance(self, publisher_acceptance):
        """Sets the publisher_acceptance of this TimelineUpdate.

        Date when the item was accepted for publication

        :param publisher_acceptance: The publisher_acceptance of this TimelineUpdate.
        :type publisher_acceptance: str
        """

        self._publisher_acceptance = publisher_acceptance

    @property
    def publisher_publication(self):
        """Gets the publisher_publication of this TimelineUpdate.

        Publish date

        :return: The publisher_publication of this TimelineUpdate.
        :rtype: str
        """
        return self._publisher_publication

    @publisher_publication.setter
    def publisher_publication(self, publisher_publication):
        """Sets the publisher_publication of this TimelineUpdate.

        Publish date

        :param publisher_publication: The publisher_publication of this TimelineUpdate.
        :type publisher_publication: str
        """

        self._publisher_publication = publisher_publication
