/**
 * watchful.li
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WatchfulLi);
  }
}(this, function(expect, WatchfulLi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WatchfulLi.Site();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Site', function() {
    it('should create an instance of Site', function() {
      // uncomment below and update the code to test Site
      //var instance = new WatchfulLi.Site();
      //expect(instance).to.be.a(WatchfulLi.Site);
    });

    it('should have the property accessUrl (base name: "access_url")', function() {
      // uncomment below and update the code to test the property accessUrl
      //var instance = new WatchfulLi.Site();
      //expect(instance).to.be();
    });

    it('should have the property adminUrl (base name: "admin_url")', function() {
      // uncomment below and update the code to test the property adminUrl
      //var instance = new WatchfulLi.Site();
      //expect(instance).to.be();
    });

    it('should have the property akeebaProfile (base name: "akeebaProfile")', function() {
      // uncomment below and update the code to test the property akeebaProfile
      //var instance = new WatchfulLi.Site();
      //expect(instance).to.be();
    });

    it('should have the property backupSchedule (base name: "backupSchedule")', function() {
      // uncomment below and update the code to test the property backupSchedule
      //var instance = new WatchfulLi.Site();
      //expect(instance).to.be();
    });

    it('should have the property canBackup (base name: "canBackup")', function() {
      // uncomment below and update the code to test the property canBackup
      //var instance = new WatchfulLi.Site();
      //expect(instance).to.be();
    });

    it('should have the property canUpdate (base name: "canUpdate")', function() {
      // uncomment below and update the code to test the property canUpdate
      //var instance = new WatchfulLi.Site();
      //expect(instance).to.be();
    });

    it('should have the property dateBackup (base name: "dateBackup")', function() {
      // uncomment below and update the code to test the property dateBackup
      //var instance = new WatchfulLi.Site();
      //expect(instance).to.be();
    });

    it('should have the property dateLastCheck (base name: "date_last_check")', function() {
      // uncomment below and update the code to test the property dateLastCheck
      //var instance = new WatchfulLi.Site();
      //expect(instance).to.be();
    });

    it('should have the property error (base name: "error")', function() {
      // uncomment below and update the code to test the property error
      //var instance = new WatchfulLi.Site();
      //expect(instance).to.be();
    });

    it('should have the property ip (base name: "ip")', function() {
      // uncomment below and update the code to test the property ip
      //var instance = new WatchfulLi.Site();
      //expect(instance).to.be();
    });

    it('should have the property jUpdate (base name: "jUpdate")', function() {
      // uncomment below and update the code to test the property jUpdate
      //var instance = new WatchfulLi.Site();
      //expect(instance).to.be();
    });

    it('should have the property jVersion (base name: "j_version")', function() {
      // uncomment below and update the code to test the property jVersion
      //var instance = new WatchfulLi.Site();
      //expect(instance).to.be();
    });

    it('should have the property monitorid (base name: "monitorid")', function() {
      // uncomment below and update the code to test the property monitorid
      //var instance = new WatchfulLi.Site();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new WatchfulLi.Site();
      //expect(instance).to.be();
    });

    it('should have the property nbUpdates (base name: "nbUpdates")', function() {
      // uncomment below and update the code to test the property nbUpdates
      //var instance = new WatchfulLi.Site();
      //expect(instance).to.be();
    });

    it('should have the property newJVersion (base name: "new_j_version")', function() {
      // uncomment below and update the code to test the property newJVersion
      //var instance = new WatchfulLi.Site();
      //expect(instance).to.be();
    });

    it('should have the property notes (base name: "notes")', function() {
      // uncomment below and update the code to test the property notes
      //var instance = new WatchfulLi.Site();
      //expect(instance).to.be();
    });

    it('should have the property published (base name: "published")', function() {
      // uncomment below and update the code to test the property published
      //var instance = new WatchfulLi.Site();
      //expect(instance).to.be();
    });

    it('should have the property secretWord (base name: "secret_word")', function() {
      // uncomment below and update the code to test the property secretWord
      //var instance = new WatchfulLi.Site();
      //expect(instance).to.be();
    });

    it('should have the property siteid (base name: "siteid")', function() {
      // uncomment below and update the code to test the property siteid
      //var instance = new WatchfulLi.Site();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new WatchfulLi.Site();
      //expect(instance).to.be();
    });

    it('should have the property up (base name: "up")', function() {
      // uncomment below and update the code to test the property up
      //var instance = new WatchfulLi.Site();
      //expect(instance).to.be();
    });

    it('should have the property wordAkeeba (base name: "word_akeeba")', function() {
      // uncomment below and update the code to test the property wordAkeeba
      //var instance = new WatchfulLi.Site();
      //expect(instance).to.be();
    });

    it('should have the property wordCheck (base name: "word_check")', function() {
      // uncomment below and update the code to test the property wordCheck
      //var instance = new WatchfulLi.Site();
      //expect(instance).to.be();
    });

  });

}));
