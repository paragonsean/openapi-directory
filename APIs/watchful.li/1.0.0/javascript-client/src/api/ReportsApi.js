/**
 * watchful.li
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Reports service.
* @module api/ReportsApi
* @version 1.0.0
*/
export default class ReportsApi {

    /**
    * Constructs a new ReportsApi. 
    * @alias module:api/ReportsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the reportsSitesIdGet operation.
     * @callback module:api/ReportsApi~reportsSitesIdGetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a PDF report for a specific site
     * Returns a PDF report based on a site ID
     * @param {Number} id ID that needs to be fetched
     * @param {Object} opts Optional parameters
     * @param {String} [from] Start of the report, format YYYY-MM-DD, default today-30day 
     * @param {String} [to] End of the report, format YYYY-MM-DD, default today
     * @param {String} [reports] Type of reports separate by comas: Ga,Logs,Uptime
     * @param {module:model/String} [logType] Type of the log to show in the report
     * @param {module:model/Number} [compare] Define if you want show previous values in Google Analytics graph
     * @param {module:api/ReportsApi~reportsSitesIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    reportsSitesIdGet(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling reportsSitesIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'from': opts['from'],
        'to': opts['to'],
        'reports': opts['reports'],
        'log_type': opts['logType'],
        'compare': opts['compare']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/pdf'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/reports/sites/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsTagsIdGet operation.
     * @callback module:api/ReportsApi~reportsTagsIdGetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Find sites by ID
     * Returns a report based on a site ID
     * @param {Number} id ID that needs to be fetched
     * @param {Object} opts Optional parameters
     * @param {String} [from] Start of the report, format YYYY-MM-DD, default today-30day 
     * @param {String} [to] End of the report, format YYYY-MM-DD, default today
     * @param {String} [reports] Type of reports separate by comas: Ga,Logs,Uptime
     * @param {module:model/String} [logType] Type of the log to show in the report
     * @param {module:model/Number} [compare] Define if you want show previous values in Google Analytics graph
     * @param {module:api/ReportsApi~reportsTagsIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    reportsTagsIdGet(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling reportsTagsIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'from': opts['from'],
        'to': opts['to'],
        'reports': opts['reports'],
        'log_type': opts['logType'],
        'compare': opts['compare']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/pdf'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/reports/tags/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
