/**
 * watchful.li
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Audit from '../model/Audit';
import Feedback from '../model/Feedback';

/**
* Feedbacks service.
* @module api/FeedbacksApi
* @version 1.0.0
*/
export default class FeedbacksApi {

    /**
    * Constructs a new FeedbacksApi. 
    * @alias module:api/FeedbacksApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createFeedbacks operation.
     * @callback module:api/FeedbacksApi~createFeedbacksCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Audit} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a feedback
     * Create a feedback
     * @param {module:model/Feedback} body JSON object Feedback
     * @param {module:api/FeedbacksApi~createFeedbacksCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Audit}
     */
    createFeedbacks(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling createFeedbacks");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/plain'];
      let returnType = Audit;
      return this.apiClient.callApi(
        '/feedbacks', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getFeedbacks operation.
     * @callback module:api/FeedbacksApi~getFeedbacksCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Feedback} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get feedbacks
     * Returns a list of feedbacks
     * @param {Object} opts Optional parameters
     * @param {String} [fields] Fields to return separate by comas (es. name,id)
     * @param {module:api/FeedbacksApi~getFeedbacksCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Feedback}
     */
    getFeedbacks(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/plain'];
      let returnType = Feedback;
      return this.apiClient.callApi(
        '/feedbacks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getFieldsFeedbacks operation.
     * @callback module:api/FeedbacksApi~getFieldsFeedbacksCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the list of fields
     * Returns a list of fields
     * @param {module:api/FeedbacksApi~getFieldsFeedbacksCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    getFieldsFeedbacks(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/plain'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/feedbacks/metadata', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
