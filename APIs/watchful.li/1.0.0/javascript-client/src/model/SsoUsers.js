/**
 * watchful.li
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SsoUsers model module.
 * @module model/SsoUsers
 * @version 1.0.0
 */
class SsoUsers {
    /**
     * Constructs a new <code>SsoUsers</code>.
     * @alias module:model/SsoUsers
     * @param email {String} Email of the SSO User
     * @param groupid {Number} Security Joomla group ID
     * @param id {Number} Unique identifier for the SSO User
     * @param name {String} Account display name
     * @param password {String} Password of the SSO User
     * @param userid {Number} Watchful user account
     * @param username {String} Username of the SSO User
     */
    constructor(email, groupid, id, name, password, userid, username) { 
        
        SsoUsers.initialize(this, email, groupid, id, name, password, userid, username);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, email, groupid, id, name, password, userid, username) { 
        obj['email'] = email;
        obj['groupid'] = groupid;
        obj['id'] = id;
        obj['name'] = name;
        obj['password'] = password;
        obj['userid'] = userid;
        obj['username'] = username;
    }

    /**
     * Constructs a <code>SsoUsers</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SsoUsers} obj Optional instance to populate.
     * @return {module:model/SsoUsers} The populated <code>SsoUsers</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SsoUsers();

            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('groupid')) {
                obj['groupid'] = ApiClient.convertToType(data['groupid'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('lastLoginDate')) {
                obj['lastLoginDate'] = ApiClient.convertToType(data['lastLoginDate'], 'Date');
            }
            if (data.hasOwnProperty('lastLoginSite')) {
                obj['lastLoginSite'] = ApiClient.convertToType(data['lastLoginSite'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('userid')) {
                obj['userid'] = ApiClient.convertToType(data['userid'], 'Number');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SsoUsers</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SsoUsers</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SsoUsers.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['password'] && !(typeof data['password'] === 'string' || data['password'] instanceof String)) {
            throw new Error("Expected the field `password` to be a primitive type in the JSON string but got " + data['password']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}

SsoUsers.RequiredProperties = ["email", "groupid", "id", "name", "password", "userid", "username"];

/**
 * Email of the SSO User
 * @member {String} email
 */
SsoUsers.prototype['email'] = undefined;

/**
 * Security Joomla group ID
 * @member {Number} groupid
 */
SsoUsers.prototype['groupid'] = undefined;

/**
 * Unique identifier for the SSO User
 * @member {Number} id
 */
SsoUsers.prototype['id'] = undefined;

/**
 * Last login date on remote site
 * @member {Date} lastLoginDate
 */
SsoUsers.prototype['lastLoginDate'] = undefined;

/**
 * Site Id of the last remote login
 * @member {Number} lastLoginSite
 */
SsoUsers.prototype['lastLoginSite'] = undefined;

/**
 * Account display name
 * @member {String} name
 */
SsoUsers.prototype['name'] = undefined;

/**
 * Password of the SSO User
 * @member {String} password
 */
SsoUsers.prototype['password'] = undefined;

/**
 * Watchful user account
 * @member {Number} userid
 */
SsoUsers.prototype['userid'] = undefined;

/**
 * Username of the SSO User
 * @member {String} username
 */
SsoUsers.prototype['username'] = undefined;






export default SsoUsers;

