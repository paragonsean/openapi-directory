# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Site(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_url: str=None, admin_url: str=None, akeeba_profile: str=None, backup_schedule: str=None, can_backup: bool=None, can_update: bool=None, date_backup: str=None, date_last_check: str=None, error: bool=None, ip: str=None, j_update: bool=None, j_version: str=None, monitorid: bool=None, name: str=None, nb_updates: str=None, new_j_version: str=None, notes: str=None, published: bool=None, secret_word: str=None, siteid: int=None, tags: List[object]=None, up: bool=None, word_akeeba: str=None, word_check: str=None):
        """Site - a model defined in OpenAPI

        :param access_url: The access_url of this Site.
        :param admin_url: The admin_url of this Site.
        :param akeeba_profile: The akeeba_profile of this Site.
        :param backup_schedule: The backup_schedule of this Site.
        :param can_backup: The can_backup of this Site.
        :param can_update: The can_update of this Site.
        :param date_backup: The date_backup of this Site.
        :param date_last_check: The date_last_check of this Site.
        :param error: The error of this Site.
        :param ip: The ip of this Site.
        :param j_update: The j_update of this Site.
        :param j_version: The j_version of this Site.
        :param monitorid: The monitorid of this Site.
        :param name: The name of this Site.
        :param nb_updates: The nb_updates of this Site.
        :param new_j_version: The new_j_version of this Site.
        :param notes: The notes of this Site.
        :param published: The published of this Site.
        :param secret_word: The secret_word of this Site.
        :param siteid: The siteid of this Site.
        :param tags: The tags of this Site.
        :param up: The up of this Site.
        :param word_akeeba: The word_akeeba of this Site.
        :param word_check: The word_check of this Site.
        """
        self.openapi_types = {
            'access_url': str,
            'admin_url': str,
            'akeeba_profile': str,
            'backup_schedule': str,
            'can_backup': bool,
            'can_update': bool,
            'date_backup': str,
            'date_last_check': str,
            'error': bool,
            'ip': str,
            'j_update': bool,
            'j_version': str,
            'monitorid': bool,
            'name': str,
            'nb_updates': str,
            'new_j_version': str,
            'notes': str,
            'published': bool,
            'secret_word': str,
            'siteid': int,
            'tags': List[object],
            'up': bool,
            'word_akeeba': str,
            'word_check': str
        }

        self.attribute_map = {
            'access_url': 'access_url',
            'admin_url': 'admin_url',
            'akeeba_profile': 'akeebaProfile',
            'backup_schedule': 'backupSchedule',
            'can_backup': 'canBackup',
            'can_update': 'canUpdate',
            'date_backup': 'dateBackup',
            'date_last_check': 'date_last_check',
            'error': 'error',
            'ip': 'ip',
            'j_update': 'jUpdate',
            'j_version': 'j_version',
            'monitorid': 'monitorid',
            'name': 'name',
            'nb_updates': 'nbUpdates',
            'new_j_version': 'new_j_version',
            'notes': 'notes',
            'published': 'published',
            'secret_word': 'secret_word',
            'siteid': 'siteid',
            'tags': 'tags',
            'up': 'up',
            'word_akeeba': 'word_akeeba',
            'word_check': 'word_check'
        }

        self._access_url = access_url
        self._admin_url = admin_url
        self._akeeba_profile = akeeba_profile
        self._backup_schedule = backup_schedule
        self._can_backup = can_backup
        self._can_update = can_update
        self._date_backup = date_backup
        self._date_last_check = date_last_check
        self._error = error
        self._ip = ip
        self._j_update = j_update
        self._j_version = j_version
        self._monitorid = monitorid
        self._name = name
        self._nb_updates = nb_updates
        self._new_j_version = new_j_version
        self._notes = notes
        self._published = published
        self._secret_word = secret_word
        self._siteid = siteid
        self._tags = tags
        self._up = up
        self._word_akeeba = word_akeeba
        self._word_check = word_check

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Site':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Site of this Site.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_url(self):
        """Gets the access_url of this Site.

        URL of the site

        :return: The access_url of this Site.
        :rtype: str
        """
        return self._access_url

    @access_url.setter
    def access_url(self, access_url):
        """Sets the access_url of this Site.

        URL of the site

        :param access_url: The access_url of this Site.
        :type access_url: str
        """

        self._access_url = access_url

    @property
    def admin_url(self):
        """Gets the admin_url of this Site.

        Adminsitration URL

        :return: The admin_url of this Site.
        :rtype: str
        """
        return self._admin_url

    @admin_url.setter
    def admin_url(self, admin_url):
        """Sets the admin_url of this Site.

        Adminsitration URL

        :param admin_url: The admin_url of this Site.
        :type admin_url: str
        """

        self._admin_url = admin_url

    @property
    def akeeba_profile(self):
        """Gets the akeeba_profile of this Site.

        Akeeba Profile

        :return: The akeeba_profile of this Site.
        :rtype: str
        """
        return self._akeeba_profile

    @akeeba_profile.setter
    def akeeba_profile(self, akeeba_profile):
        """Sets the akeeba_profile of this Site.

        Akeeba Profile

        :param akeeba_profile: The akeeba_profile of this Site.
        :type akeeba_profile: str
        """

        self._akeeba_profile = akeeba_profile

    @property
    def backup_schedule(self):
        """Gets the backup_schedule of this Site.

        Backup Schedule

        :return: The backup_schedule of this Site.
        :rtype: str
        """
        return self._backup_schedule

    @backup_schedule.setter
    def backup_schedule(self, backup_schedule):
        """Sets the backup_schedule of this Site.

        Backup Schedule

        :param backup_schedule: The backup_schedule of this Site.
        :type backup_schedule: str
        """

        self._backup_schedule = backup_schedule

    @property
    def can_backup(self):
        """Gets the can_backup of this Site.

        Site can be backuped

        :return: The can_backup of this Site.
        :rtype: bool
        """
        return self._can_backup

    @can_backup.setter
    def can_backup(self, can_backup):
        """Sets the can_backup of this Site.

        Site can be backuped

        :param can_backup: The can_backup of this Site.
        :type can_backup: bool
        """

        self._can_backup = can_backup

    @property
    def can_update(self):
        """Gets the can_update of this Site.

        Site can use remote installer

        :return: The can_update of this Site.
        :rtype: bool
        """
        return self._can_update

    @can_update.setter
    def can_update(self, can_update):
        """Sets the can_update of this Site.

        Site can use remote installer

        :param can_update: The can_update of this Site.
        :type can_update: bool
        """

        self._can_update = can_update

    @property
    def date_backup(self):
        """Gets the date_backup of this Site.

        Date backup

        :return: The date_backup of this Site.
        :rtype: str
        """
        return self._date_backup

    @date_backup.setter
    def date_backup(self, date_backup):
        """Sets the date_backup of this Site.

        Date backup

        :param date_backup: The date_backup of this Site.
        :type date_backup: str
        """

        self._date_backup = date_backup

    @property
    def date_last_check(self):
        """Gets the date_last_check of this Site.

        Watchful Last check

        :return: The date_last_check of this Site.
        :rtype: str
        """
        return self._date_last_check

    @date_last_check.setter
    def date_last_check(self, date_last_check):
        """Sets the date_last_check of this Site.

        Watchful Last check

        :param date_last_check: The date_last_check of this Site.
        :type date_last_check: str
        """

        self._date_last_check = date_last_check

    @property
    def error(self):
        """Gets the error of this Site.

        Error status of site

        :return: The error of this Site.
        :rtype: bool
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this Site.

        Error status of site

        :param error: The error of this Site.
        :type error: bool
        """

        self._error = error

    @property
    def ip(self):
        """Gets the ip of this Site.

        server IP

        :return: The ip of this Site.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this Site.

        server IP

        :param ip: The ip of this Site.
        :type ip: str
        """

        self._ip = ip

    @property
    def j_update(self):
        """Gets the j_update of this Site.

        ?

        :return: The j_update of this Site.
        :rtype: bool
        """
        return self._j_update

    @j_update.setter
    def j_update(self, j_update):
        """Sets the j_update of this Site.

        ?

        :param j_update: The j_update of this Site.
        :type j_update: bool
        """

        self._j_update = j_update

    @property
    def j_version(self):
        """Gets the j_version of this Site.

        Joomla site version

        :return: The j_version of this Site.
        :rtype: str
        """
        return self._j_version

    @j_version.setter
    def j_version(self, j_version):
        """Sets the j_version of this Site.

        Joomla site version

        :param j_version: The j_version of this Site.
        :type j_version: str
        """

        self._j_version = j_version

    @property
    def monitorid(self):
        """Gets the monitorid of this Site.

        Id of the associated UptimeRobot monitor

        :return: The monitorid of this Site.
        :rtype: bool
        """
        return self._monitorid

    @monitorid.setter
    def monitorid(self, monitorid):
        """Sets the monitorid of this Site.

        Id of the associated UptimeRobot monitor

        :param monitorid: The monitorid of this Site.
        :type monitorid: bool
        """

        self._monitorid = monitorid

    @property
    def name(self):
        """Gets the name of this Site.

        Friendly name for the site

        :return: The name of this Site.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Site.

        Friendly name for the site

        :param name: The name of this Site.
        :type name: str
        """

        self._name = name

    @property
    def nb_updates(self):
        """Gets the nb_updates of this Site.

        Number of updates

        :return: The nb_updates of this Site.
        :rtype: str
        """
        return self._nb_updates

    @nb_updates.setter
    def nb_updates(self, nb_updates):
        """Sets the nb_updates of this Site.

        Number of updates

        :param nb_updates: The nb_updates of this Site.
        :type nb_updates: str
        """

        self._nb_updates = nb_updates

    @property
    def new_j_version(self):
        """Gets the new_j_version of this Site.

        Joomla site version

        :return: The new_j_version of this Site.
        :rtype: str
        """
        return self._new_j_version

    @new_j_version.setter
    def new_j_version(self, new_j_version):
        """Sets the new_j_version of this Site.

        Joomla site version

        :param new_j_version: The new_j_version of this Site.
        :type new_j_version: str
        """

        self._new_j_version = new_j_version

    @property
    def notes(self):
        """Gets the notes of this Site.

        Personnal note for the site

        :return: The notes of this Site.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this Site.

        Personnal note for the site

        :param notes: The notes of this Site.
        :type notes: str
        """

        self._notes = notes

    @property
    def published(self):
        """Gets the published of this Site.

        Published status of site

        :return: The published of this Site.
        :rtype: bool
        """
        return self._published

    @published.setter
    def published(self, published):
        """Sets the published of this Site.

        Published status of site

        :param published: The published of this Site.
        :type published: bool
        """

        self._published = published

    @property
    def secret_word(self):
        """Gets the secret_word of this Site.

        Watchful secret word

        :return: The secret_word of this Site.
        :rtype: str
        """
        return self._secret_word

    @secret_word.setter
    def secret_word(self, secret_word):
        """Sets the secret_word of this Site.

        Watchful secret word

        :param secret_word: The secret_word of this Site.
        :type secret_word: str
        """

        self._secret_word = secret_word

    @property
    def siteid(self):
        """Gets the siteid of this Site.

        Unique identifier for the site

        :return: The siteid of this Site.
        :rtype: int
        """
        return self._siteid

    @siteid.setter
    def siteid(self, siteid):
        """Sets the siteid of this Site.

        Unique identifier for the site

        :param siteid: The siteid of this Site.
        :type siteid: int
        """
        if siteid is None:
            raise ValueError("Invalid value for `siteid`, must not be `None`")

        self._siteid = siteid

    @property
    def tags(self):
        """Gets the tags of this Site.

        List of tags for this site

        :return: The tags of this Site.
        :rtype: List[object]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this Site.

        List of tags for this site

        :param tags: The tags of this Site.
        :type tags: List[object]
        """

        self._tags = tags

    @property
    def up(self):
        """Gets the up of this Site.

        Site status

        :return: The up of this Site.
        :rtype: bool
        """
        return self._up

    @up.setter
    def up(self, up):
        """Sets the up of this Site.

        Site status

        :param up: The up of this Site.
        :type up: bool
        """

        self._up = up

    @property
    def word_akeeba(self):
        """Gets the word_akeeba of this Site.

        Akeeba backup word

        :return: The word_akeeba of this Site.
        :rtype: str
        """
        return self._word_akeeba

    @word_akeeba.setter
    def word_akeeba(self, word_akeeba):
        """Sets the word_akeeba of this Site.

        Akeeba backup word

        :param word_akeeba: The word_akeeba of this Site.
        :type word_akeeba: str
        """

        self._word_akeeba = word_akeeba

    @property
    def word_check(self):
        """Gets the word_check of this Site.

        Word checked for uptime

        :return: The word_check of this Site.
        :rtype: str
        """
        return self._word_check

    @word_check.setter
    def word_check(self, word_check):
        """Sets the word_check of this Site.

        Word checked for uptime

        :param word_check: The word_check of this Site.
        :type word_check: str
        """

        self._word_check = word_check
