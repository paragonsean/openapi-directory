openapi: 3.0.1
info:
  title: watchful.li
  version: 1.0.0
  x-apisguru-categories:
  - hosting
  x-logo:
    backgroundColor: '#1B4E65'
    url: https://d2071nnd6m4201.cloudfront.net/templates/balloon/images/logo.svg
  x-origin:
  - converter:
      url: https://github.com/lucybot/api-spec-converter
      version: 2.7.31
    format: swagger
    url: hhttps://app.watchful.net/api/v1/api-docs/
    version: "1.2"
  x-providerName: watchful.li
externalDocs:
  url: https://watchful.li/faqs/tools/watchful-rest-api.html
servers:
- url: https://watchful.li/api/v1
tags:
- description: Operations about audits
  name: audits
- description: Operations about extensions
  name: extensions
- description: Operations about feedbacks
  name: feedbacks
- description: Operations about logs
  name: logs
- description: Create reports in PDF
  name: reports
- description: Operations about sites
  name: sites
- description: Operations about SsoUser
  name: ssousers
- description: Operations about tags
  name: tags
paths:
  /audits:
    get:
      description: Returns a list of audits
      operationId: get_audits
      parameters:
      - description: "Number of object to return (max 100, default 25)"
        in: query
        name: limit
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Start of the return (default 0)
        in: query
        name: limitstart
        schema:
          format: int64
          minimum: 0
          type: integer
      - description: "ORDER by this field separete by comas. Add + / - after field\
          \ for set ASC / DESC: type+,name-"
        in: query
        name: order
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audit'
            application/xml:
              schema:
                $ref: '#/components/schemas/Audit'
            text/plain:
              schema:
                $ref: '#/components/schemas/Audit'
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
      summary: Get a list of audits
      tags:
      - audits
      x-openapi-router-controller: openapi_server.controllers.audits_controller
  /audits/metadata:
    get:
      description: Returns a list of fields
      operationId: get_fields_audits
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: No response was specified
      summary: Get the list of fields
      tags:
      - audits
      x-openapi-router-controller: openapi_server.controllers.audits_controller
  /audits/{id}:
    delete:
      description: Delete a specific audit
      operationId: delete_audit_by_id
      parameters:
      - description: ID of audit that needs to be deleted
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Audit correctly deleted
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: Delete a specific audit
      tags:
      - audits
      x-openapi-router-controller: openapi_server.controllers.audits_controller
    get:
      description: Returns a audit based on ID
      operationId: get_audit_by_id
      parameters:
      - description: ID of audit that needs to be fetched
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: "Fields to return separate by comas: name,id"
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audit'
            application/xml:
              schema:
                $ref: '#/components/schemas/Audit'
            text/plain:
              schema:
                $ref: '#/components/schemas/Audit'
          description: No response was specified
        "400":
          content: {}
          description: Invalid ID
        "403":
          content: {}
          description: Invalid API Key
      summary: Find audit by ID
      tags:
      - audits
      x-openapi-router-controller: openapi_server.controllers.audits_controller
  /extensions:
    get:
      description: Returns a list Extensions
      operationId: get_extensions
      parameters:
      - description: "Do a 'LIKE' search, you can also use '%'"
        in: query
        name: ext_name
        schema:
          type: string
      - description: List of sites id separated by comma
        in: query
        name: siteids
        schema:
          type: string
      - description: "Do a 'LIKE' search, you can also use '%'. technical name of\
          \ the extension com_xxxx"
        in: query
        name: ext_prefix
        schema:
          type: string
      - description: "Do a 'LIKE' search, you can also use '%'"
        in: query
        name: version
        schema:
          type: string
      - description: update available for this extension
        in: query
        name: vUpdate
        schema:
          enum:
          - 1
          - 0
          type: integer
      - description: "Fields to return separate by comas: name,id"
        in: query
        name: fields
        schema:
          type: string
      - description: "Number of object to return (max 100, default 25)"
        in: query
        name: limit
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Start of the return (default 0)
        in: query
        name: limitstart
        schema:
          format: int64
          minimum: 0
          type: integer
      - description: "ORDER by this field separete by comas. Add + / - after field\
          \ for set ASC / DESC: type+,name-"
        in: query
        name: order
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension'
            application/xml:
              schema:
                $ref: '#/components/schemas/Extension'
            text/plain:
              schema:
                $ref: '#/components/schemas/Extension'
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid
      summary: Get a list Extensions
      tags:
      - extensions
      x-openapi-router-controller: openapi_server.controllers.extensions_controller
  /extensions/metadata:
    get:
      description: Returns a list of fields
      operationId: get_fields_extensions
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: No response was specified
      summary: Get the list of fields
      tags:
      - extensions
      x-openapi-router-controller: openapi_server.controllers.extensions_controller
  /extensions/{id}/ignore:
    post:
      description: Set 'ignore updates' for a given extension / site_id
      operationId: ignore_extension_update
      parameters:
      - description: ID of the extension
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Extension successfully updated
        "404":
          content: {}
          description: Update not found for the given extension
      summary: Set 'ignore updates' for a given extension / site_id
      tags:
      - extensions
      x-openapi-router-controller: openapi_server.controllers.extensions_controller
  /extensions/{id}/unignore:
    post:
      description: Remove 'ignore updates' for a given extension
      operationId: unignore_extension_update
      parameters:
      - description: ID of the extension
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Extension successfully updated
        "404":
          content: {}
          description: Update not found for the given extension
      summary: Remove 'ignore updates' for a given extension
      tags:
      - extensions
      x-openapi-router-controller: openapi_server.controllers.extensions_controller
  /extensions/{id}/update:
    post:
      description: Update the extension on the remote site
      operationId: update_extension
      parameters:
      - description: ID of the extension
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Extension successfully updated
        "404":
          content: {}
          description: Update not found for the given extension
      summary: Update the extension on the remote site
      tags:
      - extensions
      x-openapi-router-controller: openapi_server.controllers.extensions_controller
  /feedbacks:
    get:
      description: Returns a list of feedbacks
      operationId: get_feedbacks
      parameters:
      - description: "Fields to return separate by comas (es. name,id)"
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
            application/xml:
              schema:
                $ref: '#/components/schemas/Feedback'
            text/plain:
              schema:
                $ref: '#/components/schemas/Feedback'
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
      summary: Get feedbacks
      tags:
      - feedbacks
      x-openapi-router-controller: openapi_server.controllers.feedbacks_controller
    post:
      description: Create a feedback
      operationId: create_feedbacks
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Feedback'
        description: JSON object Feedback
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audit'
            application/xml:
              schema:
                $ref: '#/components/schemas/Audit'
            text/plain:
              schema:
                $ref: '#/components/schemas/Audit'
          description: No response was specified
        "201":
          content: {}
          description: Saved successfully
        "400":
          content: {}
          description: Invalid data
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Not saved
      summary: Create a feedback
      tags:
      - feedbacks
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.feedbacks_controller
  /feedbacks/metadata:
    get:
      description: Returns a list of fields
      operationId: get_fields_feedbacks
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: No response was specified
      summary: Get the list of fields
      tags:
      - feedbacks
      x-openapi-router-controller: openapi_server.controllers.feedbacks_controller
  /logs:
    get:
      description: Returns a list of logs
      operationId: logs_get
      parameters:
      - description: Type of the log
        in: query
        name: log_type
        schema:
          enum:
          - ""
          - plugin_sends_error
          - curlerror
          - modified_file
          - word_not_in_homepage
          - file_not_exists
          - update_available
          - new_extension
          - deleted_extension
          - extension_not_saved
          - modified_value_files
          - custom
          type: string
      - description: "Do a 'LIKE' search, you can also use '%'"
        in: query
        name: log_entry
        schema:
          type: string
      - description: "Logs after this date, format YYYY-MM-DD HH:MM:SS"
        in: query
        name: from
        schema:
          type: string
      - description: "Logs before this date, format YYYY-MM-DD HH:MM:SS"
        in: query
        name: to
        schema:
          type: string
      - description: "Fields to return separate by comas: name,id"
        in: query
        name: fields
        schema:
          type: string
      - description: "Number of object to return (max 100, default 25)"
        in: query
        name: limit
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Start of the return (default 0)
        in: query
        name: limitstart
        schema:
          format: int64
          minimum: 0
          type: integer
      - description: "ORDER by this field separete by comas. Add + / - after field\
          \ for set ASC / DESC: type+,name-"
        in: query
        name: order
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'
            application/xml:
              schema:
                $ref: '#/components/schemas/Log'
            text/plain:
              schema:
                $ref: '#/components/schemas/Log'
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
      summary: Get a list of logs
      tags:
      - logs
      x-openapi-router-controller: openapi_server.controllers.logs_controller
  /logs/export:
    get:
      description: Returns a file contain the list of logs
      operationId: get_export_logs
      parameters:
      - description: Format of exported file (PDF or CSV)
        in: query
        name: format
        required: true
        schema:
          enum:
          - csv
          - pdf
          type: string
      - description: Site id of the log
        in: query
        name: site
        schema:
          format: int64
          type: integer
      - description: Type of the log
        in: query
        name: filter_type
        schema:
          enum:
          - ""
          - plugin_sends_error
          - curlerror
          - modified_file
          - word_not_in_homepage
          - file_not_exists
          - update_available
          - new_extension
          - deleted_extension
          - extension_not_saved
          - modified_value_files
          - custom
          type: string
      - description: "Do a 'LIKE' search, you can also use '%'"
        in: query
        name: search
        schema:
          type: string
      - description: "Logs after this date, format YYYY-MM-DD HH:MM:SS"
        in: query
        name: startdate
        schema:
          type: string
      - description: "Logs before this date, format YYYY-MM-DD HH:MM:SS"
        in: query
        name: enddate
        schema:
          type: string
      - description: "Number of object to return (max 100, default 25)"
        in: query
        name: limit
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Start of the return (default 0)
        in: query
        name: startid
        schema:
          format: int64
          minimum: 0
          type: integer
      responses:
        "200":
          content: {}
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
      summary: Get a CSV or PDF file contain the list of logs
      tags:
      - logs
      x-openapi-router-controller: openapi_server.controllers.logs_controller
  /logs/metadata:
    get:
      description: Returns a list of fields
      operationId: get_fields_logs
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: No response was specified
      summary: Get the list of fields
      tags:
      - logs
      x-openapi-router-controller: openapi_server.controllers.logs_controller
  /logs/types:
    get:
      description: Returns a list of log types
      operationId: get_types_logs
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: No response was specified
      summary: Get the list of log types
      tags:
      - logs
      x-openapi-router-controller: openapi_server.controllers.logs_controller
  /logs/{id}:
    delete:
      description: Delete a specific log
      operationId: delete_log_by_id
      parameters:
      - description: ID of log that needs to be deleted
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Log correctly deleted
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: Delete a specific log
      tags:
      - logs
      x-openapi-router-controller: openapi_server.controllers.logs_controller
  /packages:
    post:
      operationId: packages_post
      responses:
        default:
          content: {}
          description: No description
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /reports/sites/{id}:
    get:
      description: Returns a PDF report based on a site ID
      operationId: reports_sites_id_get
      parameters:
      - description: ID that needs to be fetched
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: "Start of the report, format YYYY-MM-DD, default today-30day "
        in: query
        name: from
        schema:
          type: string
      - description: "End of the report, format YYYY-MM-DD, default today"
        in: query
        name: to
        schema:
          type: string
      - description: "Type of reports separate by comas: Ga,Logs,Uptime"
        in: query
        name: reports
        schema:
          type: string
      - description: Type of the log to show in the report
        in: query
        name: log_type
        schema:
          enum:
          - ""
          - plugin_sends_error
          - curlerror
          - modified_file
          - word_not_in_homepage
          - file_not_exists
          - update_available
          - new_extension
          - deleted_extension
          - extension_not_saved
          - modified_value_files
          type: string
      - description: Define if you want show previous values in Google Analytics graph
        in: query
        name: compare
        schema:
          enum:
          - 0
          - 1
          type: integer
      responses:
        "200":
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Reports'
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: Returns a PDF report for a specific site
      tags:
      - reports
      x-openapi-router-controller: openapi_server.controllers.reports_controller
  /reports/tags/{id}:
    get:
      description: Returns a report based on a site ID
      operationId: reports_tags_id_get
      parameters:
      - description: ID that needs to be fetched
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: "Start of the report, format YYYY-MM-DD, default today-30day "
        in: query
        name: from
        schema:
          type: string
      - description: "End of the report, format YYYY-MM-DD, default today"
        in: query
        name: to
        schema:
          type: string
      - description: "Type of reports separate by comas: Ga,Logs,Uptime"
        in: query
        name: reports
        schema:
          type: string
      - description: Type of the log to show in the report
        in: query
        name: log_type
        schema:
          enum:
          - ""
          - plugin_sends_error
          - curlerror
          - modified_file
          - word_not_in_homepage
          - file_not_exists
          - update_available
          - new_extension
          - deleted_extension
          - extension_not_saved
          - modified_value_files
          type: string
      - description: Define if you want show previous values in Google Analytics graph
        in: query
        name: compare
        schema:
          enum:
          - 0
          - 1
          type: integer
      responses:
        "200":
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Reports'
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: Find sites by ID
      tags:
      - reports
      x-openapi-router-controller: openapi_server.controllers.reports_controller
  /sites:
    get:
      description: Returns a list of Sites
      operationId: get_sites
      parameters:
      - description: List of sites id separated by comma
        in: query
        name: siteids
        schema:
          type: string
      - description: "Site name. Do a 'LIKE' search, you can also use '%'"
        in: query
        name: name
        schema:
          type: string
      - description: "Access URL. Do a 'LIKE' search, you can also use '%'"
        in: query
        name: access_url
        schema:
          type: string
      - description: "Joomla version. Do a 'LIKE' search, you can also use '%'"
        in: query
        name: j_version
        schema:
          type: string
      - description: "Ip address. Do a 'LIKE' search, you can also use '%'"
        in: query
        name: ip
        schema:
          type: string
      - description: "Joomla core update status (1: update required, 0: update not\
          \ required)"
        in: query
        name: jUpdate
        schema:
          enum:
          - 1
          - 0
          type: integer
      - description: canUpdate
        in: query
        name: canUpdate
        schema:
          enum:
          - 1
          - 0
          type: integer
      - description: Is published
        in: query
        name: published
        schema:
          enum:
          - 1
          - 0
          type: integer
      - description: Has errors
        in: query
        name: error
        schema:
          type: string
      - in: query
        name: nbUpdates
        schema:
          type: string
      - description: Is online
        in: query
        name: up
        schema:
          enum:
          - 1
          - 0
          type: integer
      - description: "Fields to return separated by commas (e.g. name,id)"
        in: query
        name: fields
        schema:
          type: string
      - description: "Number of objects to return (max 100, default 25)"
        in: query
        name: limit
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Start of the return (default 0)
        in: query
        name: limitstart
        schema:
          format: int64
          minimum: 0
          type: integer
      - description: "ORDER by this field separete by comas. Add + / - after field\
          \ for set ASC / DESC: type+,name-"
        in: query
        name: order
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
            application/xml:
              schema:
                $ref: '#/components/schemas/Site'
            text/plain:
              schema:
                $ref: '#/components/schemas/Site'
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: Get a list of Sites
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
    post:
      description: Create a site
      operationId: create_site
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PostSite'
        description: JSON object Site
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
            application/xml:
              schema:
                $ref: '#/components/schemas/Site'
            text/plain:
              schema:
                $ref: '#/components/schemas/Site'
          description: No response was specified
        "201":
          content: {}
          description: Saved successfully
        "400":
          content: {}
          description: Invalid data
        "403":
          content: {}
          description: Not allowed to add sites
        "404":
          content: {}
          description: Not saved
      summary: Create a site
      tags:
      - sites
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.sites_controller
  /sites/metadata:
    get:
      description: Returns a list of fields
      operationId: sites_metadata_get
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: No response was specified
      summary: Get the list of fields
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
  /sites/{id}:
    delete:
      description: Delete a specific Site
      operationId: sites_id_delete
      parameters:
      - description: ID of Site that needs to be deleted
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Deleted successfully
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: Delete a specific Site
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
    get:
      description: Return a site based on ID
      operationId: get_site_by_id
      parameters:
      - description: ID that needs to be fetched
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: "Fields to return separate by comas: name,id"
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
            application/xml:
              schema:
                $ref: '#/components/schemas/Site'
            text/plain:
              schema:
                $ref: '#/components/schemas/Site'
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: Find sites by ID
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
    put:
      description: Update a site
      operationId: sites_id_put
      parameters:
      - description: ID of the website that needs to be update
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PostSite'
        description: JSON object Site
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
            application/xml:
              schema:
                $ref: '#/components/schemas/Site'
            text/plain:
              schema:
                $ref: '#/components/schemas/Site'
          description: Updated successfully
        "400":
          content: {}
          description: Invalid data
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: Update a site
      tags:
      - sites
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.sites_controller
  /sites/{id}/audits:
    get:
      description: Return audits for a specific website
      operationId: get_site_audits
      parameters:
      - description: ID of the website
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: "Fields to return separate by comas: name,id"
        in: query
        name: fields
        schema:
          type: string
      - description: "Number of object to return (max 100, default 25)"
        in: query
        name: limit
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Start of the return (default 0)
        in: query
        name: limitstart
        schema:
          format: int64
          minimum: 0
          type: integer
      - description: ORDER by this field
        in: query
        name: order
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audits'
            application/xml:
              schema:
                $ref: '#/components/schemas/Audits'
            text/plain:
              schema:
                $ref: '#/components/schemas/Audits'
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: Return audits for a specific website
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
    post:
      description: Create an audit for the site
      operationId: create_audits
      parameters:
      - description: ID of the website
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audit'
            application/xml:
              schema:
                $ref: '#/components/schemas/Audit'
            text/plain:
              schema:
                $ref: '#/components/schemas/Audit'
          description: No response was specified
        "201":
          content: {}
          description: Saved successfully
        "400":
          content: {}
          description: Invalid data
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Not saved
      summary: Create an audit for the site
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
  /sites/{id}/backupnow:
    post:
      description: Add the site to the backup queue
      operationId: add_site_to_backup_queue
      parameters:
      - description: ID of the website
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
            application/xml:
              schema:
                $ref: '#/components/schemas/Site'
            text/plain:
              schema:
                $ref: '#/components/schemas/Site'
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: Add the site to the backup queue
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
  /sites/{id}/backupprofiles:
    get:
      description: Return backup profile
      operationId: get_backup_profiles
      parameters:
      - description: ID of the website
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content: {}
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: Return backup profile
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
  /sites/{id}/backups:
    get:
      description: List of latest backups
      operationId: get_list_backups
      parameters:
      - description: ID of the website
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content: {}
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: List of latest backups
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
  /sites/{id}/backupstart:
    post:
      description: Start a remote backup for the site
      operationId: start_site_backup
      parameters:
      - description: ID of the website
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
            application/xml:
              schema:
                $ref: '#/components/schemas/Site'
            text/plain:
              schema:
                $ref: '#/components/schemas/Site'
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: Start a remote backup for the site
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
  /sites/{id}/backupstep:
    post:
      description: Step (continue) a remote backup for the site
      operationId: step_site_backup
      parameters:
      - description: ID of the website
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
            application/xml:
              schema:
                $ref: '#/components/schemas/Site'
            text/plain:
              schema:
                $ref: '#/components/schemas/Site'
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: Step (continue) a remote backup for the site
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
  /sites/{id}/extensions:
    get:
      description: Get extensions for a site
      operationId: sites_id_extensions_get
      parameters:
      - description: ID of the website
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: "Fields to return separate by comas: name,id"
        in: query
        name: fields
        schema:
          type: string
      - description: "Number of object to return (max 100, default 25)"
        in: query
        name: limit
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Start of the return (default 0)
        in: query
        name: limitstart
        schema:
          format: int64
          minimum: 0
          type: integer
      - description: ORDER by this field
        in: query
        name: order
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension'
            application/xml:
              schema:
                $ref: '#/components/schemas/Extension'
            text/plain:
              schema:
                $ref: '#/components/schemas/Extension'
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid
      summary: Get extensions for a site
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
    post:
      operationId: install_extension
      parameters:
      - description: ID of the website
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: URL to install the extension from
        in: query
        name: url
        required: true
        schema:
          format: url
          type: string
      responses:
        "200":
          content: {}
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: Install extension
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
  /sites/{id}/logs:
    get:
      description: Return logs for a specific website
      operationId: sites_id_logs_get
      parameters:
      - description: ID of the website
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: "Do a 'LIKE' search, you can also use '%'"
        in: query
        name: log_entry
        schema:
          type: string
      - description: Type of the log
        in: query
        name: log_type
        schema:
          enum:
          - ""
          - plugin_sends_error
          - curlerror
          - modified_file
          - word_not_in_homepage
          - file_not_exists
          - update_available
          - new_extension
          - deleted_extension
          - extension_not_saved
          - modified_value_files
          type: string
      - description: "Logs after this date, format YYYY-MM-DD HH:MM:SS"
        in: query
        name: from
        schema:
          type: string
      - description: "Logs before this date, format YYYY-MM-DD HH:MM:SS"
        in: query
        name: to
        schema:
          type: string
      - description: "Fields to return separate by comas: name,id"
        in: query
        name: fields
        schema:
          type: string
      - description: "Number of object to return (max 100, default 25)"
        in: query
        name: limit
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Start of the return (default 0)
        in: query
        name: limitstart
        schema:
          format: int64
          minimum: 0
          type: integer
      - description: "ORDER by this field separete by comas. Add + / - after field\
          \ for set ASC / DESC: type+,name-"
        in: query
        name: order
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'
            application/xml:
              schema:
                $ref: '#/components/schemas/Log'
            text/plain:
              schema:
                $ref: '#/components/schemas/Log'
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: Return logs for a specific website
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
    post:
      description: Create a custom log for a specific website
      operationId: create_log
      parameters:
      - description: ID of the website
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PostLog'
        description: JSON object Log (only type custom)
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'
            application/xml:
              schema:
                $ref: '#/components/schemas/Log'
            text/plain:
              schema:
                $ref: '#/components/schemas/Log'
          description: No response was specified
        "201":
          content: {}
          description: Saved successfully
        "400":
          content: {}
          description: Invalid data
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Not saved
      summary: Create a custom log for a specific website
      tags:
      - sites
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.sites_controller
  /sites/{id}/monitor:
    delete:
      description: Return boolean
      operationId: delete_monitor
      parameters:
      - description: ID of the website
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
            application/xml:
              schema:
                $ref: '#/components/schemas/Monitor'
            text/plain:
              schema:
                $ref: '#/components/schemas/Monitor'
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: Delete uptime monitor
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
    post:
      description: Return boolean
      operationId: post_monitor
      parameters:
      - description: ID of the website
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
            application/xml:
              schema:
                $ref: '#/components/schemas/Monitor'
            text/plain:
              schema:
                $ref: '#/components/schemas/Monitor'
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: Post uptime monitor
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
  /sites/{id}/scanner:
    get:
      description: Scan the site for malware
      operationId: scanner
      parameters:
      - description: ID of the website
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: Scan the site for malware
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
  /sites/{id}/seo:
    get:
      description: SEO analyze for a page
      operationId: seo_analyze
      parameters:
      - description: ID of the website
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: SEO analyze for a page
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
  /sites/{id}/tags:
    get:
      description: Return tags for a specific website
      operationId: sites_id_tags_get
      parameters:
      - description: ID of the website
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: "Do a 'LIKE' search, you can also use '%'"
        in: query
        name: name
        schema:
          type: string
      - description: Bootstrap color of the tag
        in: query
        name: type
        schema:
          enum:
          - ""
          - default
          - success
          - warning
          - important
          - info
          - inverse
          type: string
      - description: "Fields to return separate by comas: name,id"
        in: query
        name: fields
        schema:
          type: string
      - description: "Number of object to return (max 100, default 25)"
        in: query
        name: limit
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Start of the return (default 0)
        in: query
        name: limitstart
        schema:
          format: int64
          minimum: 0
          type: integer
      - description: ORDER by this field
        in: query
        name: order
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tag'
            text/plain:
              schema:
                $ref: '#/components/schemas/Tag'
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: Return tags for a specific website
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
    post:
      description: Add tags for a specific website
      operationId: post_tags
      parameters:
      - description: ID of the website
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Tag'
        description: JSON object Tag
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
            application/xml:
              schema:
                $ref: '#/components/schemas/Site'
            text/plain:
              schema:
                $ref: '#/components/schemas/Site'
          description: No response was specified
        "201":
          content: {}
          description: Saved successfully
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: Add tags for a specific website
      tags:
      - sites
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.sites_controller
  /sites/{id}/updatejoomla:
    post:
      description: Update Joomla core on the remote site
      operationId: update_joomla
      parameters:
      - description: ID of the website
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Joomla core successfully updated
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID or Joomla Update not found
      summary: Update Joomla core on the remote site
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
  /sites/{id}/uptime:
    get:
      description: Return uptime data
      operationId: get_uptime
      parameters:
      - description: ID of the website
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Uptime'
            application/xml:
              schema:
                $ref: '#/components/schemas/Uptime'
            text/plain:
              schema:
                $ref: '#/components/schemas/Uptime'
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: Return uptime data
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
  /sites/{id}/validate:
    get:
      description: validate the site
      operationId: validate_site
      parameters:
      - description: ID of the website
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'
            application/xml:
              schema:
                $ref: '#/components/schemas/Log'
            text/plain:
              schema:
                $ref: '#/components/schemas/Log'
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: "validate the site, return the new logs"
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
  /sites/{id}/validatedebug:
    get:
      operationId: validate_debug_site
      parameters:
      - description: ID of the website
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'
            application/xml:
              schema:
                $ref: '#/components/schemas/Log'
            text/plain:
              schema:
                $ref: '#/components/schemas/Log'
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: "validate the site, return the debug information"
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
  /ssousers:
    get:
      description: Returns a list of SSO Users
      operationId: get_sso_users
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SsoUsers'
            application/xml:
              schema:
                $ref: '#/components/schemas/SsoUsers'
            text/plain:
              schema:
                $ref: '#/components/schemas/SsoUsers'
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
      summary: Get a list of SSO Users
      tags:
      - ssousers
      x-openapi-router-controller: openapi_server.controllers.ssousers_controller
    post:
      description: Create a SSO User
      operationId: create_sso_users
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SsoUsers'
        description: JSON object SsoUsers
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SsoUsers'
            application/xml:
              schema:
                $ref: '#/components/schemas/SsoUsers'
            text/plain:
              schema:
                $ref: '#/components/schemas/SsoUsers'
          description: No response was specified
        "201":
          content: {}
          description: Saved successfully
        "400":
          content: {}
          description: Invalid data
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Not saved
      summary: Create a SSO User
      tags:
      - ssousers
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.ssousers_controller
  /ssousers/{id}:
    delete:
      description: Delete a specific SSO User
      operationId: delete_sso_user_by_id
      parameters:
      - description: ID of SSO User that needs to be deleted
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: SSO User correctly deleted
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: Delete a specific SSO User
      tags:
      - ssousers
      x-openapi-router-controller: openapi_server.controllers.ssousers_controller
    get:
      description: Returns a SSO User based on ID
      operationId: get_sso_users_by_id
      parameters:
      - description: ID of SSO User that needs to be fetched
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: "Fields to return separate by comas: name,id"
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SsoUsers'
            application/xml:
              schema:
                $ref: '#/components/schemas/SsoUsers'
            text/plain:
              schema:
                $ref: '#/components/schemas/SsoUsers'
          description: No response was specified
        "400":
          content: {}
          description: Invalid ID
        "403":
          content: {}
          description: Invalid API Key
      summary: Find SSO User by ID
      tags:
      - ssousers
      x-openapi-router-controller: openapi_server.controllers.ssousers_controller
    put:
      description: Update a SSO User
      operationId: update_sso_users
      parameters:
      - description: ID of SSO User that needs to be updated
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SsoUsers'
        description: JSON object SsoUsers
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SsoUsers'
            application/xml:
              schema:
                $ref: '#/components/schemas/SsoUsers'
            text/plain:
              schema:
                $ref: '#/components/schemas/SsoUsers'
          description: No response was specified
        "201":
          content: {}
          description: Updated successfully
        "400":
          content: {}
          description: Invalid data
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Not saved
      summary: Update a SSO User
      tags:
      - ssousers
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.ssousers_controller
  /tags:
    get:
      description: Returns a list of tags
      operationId: tags_get
      parameters:
      - description: "Do a 'LIKE' search, you can also use '%'"
        in: query
        name: name
        schema:
          type: string
      - description: Bootstrap color of the tag
        in: query
        name: type
        schema:
          enum:
          - ""
          - default
          - success
          - warning
          - important
          - info
          - inverse
          type: string
      - description: "Fields to return separate by comas: name,id"
        in: query
        name: fields
        schema:
          type: string
      - description: "Number of object to return (max 100, default 25)"
        in: query
        name: limit
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Start of the return (default 0)
        in: query
        name: limitstart
        schema:
          format: int64
          minimum: 0
          type: integer
      - description: "ORDER by this field separete by comas. Add + / - after field\
          \ for set ASC / DESC: type+,name-"
        in: query
        name: order
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tag'
            text/plain:
              schema:
                $ref: '#/components/schemas/Tag'
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
      summary: Get a list of tags
      tags:
      - tags
      x-openapi-router-controller: openapi_server.controllers.tags_controller
    post:
      description: Create a tag
      operationId: create_tags
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Tag'
        description: JSON object Tag
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tag'
            text/plain:
              schema:
                $ref: '#/components/schemas/Tag'
          description: No response was specified
        "201":
          content: {}
          description: Saved successfully
        "400":
          content: {}
          description: Invalid data
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Not saved
      summary: Create a tag
      tags:
      - tags
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.tags_controller
  /tags/metadata:
    get:
      description: Returns a list of fields
      operationId: tags_metadata_get
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: No response was specified
      summary: Get the list of fields
      tags:
      - tags
      x-openapi-router-controller: openapi_server.controllers.tags_controller
  /tags/{id}:
    delete:
      description: Delete a specific tag
      operationId: tags_id_delete
      parameters:
      - description: ID of tag that needs to be deleted
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Tag correctly deleted
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: Delete a specific tag
      tags:
      - tags
      x-openapi-router-controller: openapi_server.controllers.tags_controller
    get:
      description: Returns a tag based on ID
      operationId: get_tag_by_id
      parameters:
      - description: ID of tag that needs to be fetched
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: "Fields to return separate by comas: name,id"
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tag'
            text/plain:
              schema:
                $ref: '#/components/schemas/Tag'
          description: No response was specified
        "400":
          content: {}
          description: Invalid ID
        "403":
          content: {}
          description: Invalid API Key
      summary: Find tag by ID
      tags:
      - tags
      x-openapi-router-controller: openapi_server.controllers.tags_controller
    put:
      description: Update a tag
      operationId: update_tag
      parameters:
      - description: ID of tag
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Tag'
        description: JSON object of the updated tag
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tag'
            text/plain:
              schema:
                $ref: '#/components/schemas/Tag'
          description: Updated successfully
        "400":
          content: {}
          description: Invalid data
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: Update a tag
      tags:
      - tags
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.tags_controller
  /tags/{id}/sites:
    get:
      description: Returns a list of sites based with a specific tag id
      operationId: get_sites_by_tags
      parameters:
      - description: ID of tag that needs to be fetched
        in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: "Do a 'LIKE' search, you can also use '%'"
        in: query
        name: name
        schema:
          type: string
      - description: "Do a 'LIKE' search, you can also use '%'"
        in: query
        name: access_url
        schema:
          type: string
      - description: "Do a 'LIKE' search, you can also use '%'"
        in: query
        name: j_version
        schema:
          type: string
      - description: "Do a 'LIKE' search, you can also use '%'"
        in: query
        name: ip
        schema:
          type: string
      - description: Joomla core update
        in: query
        name: jUpdate
        schema:
          enum:
          - 1
          - 0
          type: integer
      - description: is published
        in: query
        name: published
        schema:
          enum:
          - 1
          - 0
          type: integer
      - description: have errors
        in: query
        name: error
        schema:
          type: string
      - in: query
        name: nbUpdates
        schema:
          type: string
      - description: is the website online
        in: query
        name: up
        schema:
          enum:
          - 1
          - 0
          type: integer
      - description: "Fields to return separate by comas: name,id"
        in: query
        name: fields
        schema:
          type: string
      - description: "Number of object to return (max 100, default 25)"
        in: query
        name: limit
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Start of the return (default 0)
        in: query
        name: limitstart
        schema:
          format: int64
          minimum: 0
          type: integer
      - description: "ORDER by this field separete by comas. Add + / - after field\
          \ for set ASC / DESC: type+,name-"
        in: query
        name: order
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
            application/xml:
              schema:
                $ref: '#/components/schemas/Site'
            text/plain:
              schema:
                $ref: '#/components/schemas/Site'
          description: No response was specified
        "403":
          content: {}
          description: Invalid API Key
        "404":
          content: {}
          description: Invalid ID
      summary: Find sites by tag ID
      tags:
      - tags
      x-openapi-router-controller: openapi_server.controllers.tags_controller
components:
  schemas:
    Audit:
      example:
        id: 0
      properties:
        id:
          description: Unique identifier for the audit
          format: int64
          title: id
          type: integer
      required:
      - id
      title: Audit
      type: object
    Audits:
      items:
        $ref: '#/components/schemas/Audit'
      type: array
    Extension:
      example:
        date: date
        idx_site: 0
        ext_name: ext_name
        vUpdate: 6
        type: type
        version: version
        url: url
        newVersion: newVersion
      properties:
        date:
          description: Date of release
          title: date
          type: string
        ext_name:
          description: Extension name
          title: ext_name
          type: string
        idx_site:
          description: Unique identifier for the site
          format: int64
          title: idx_site
          type: integer
        newVersion:
          description: New version
          title: newVersion
          type: string
        type:
          description: Datetime of the log
          format: date-format
          title: type
          type: string
        url:
          description: Author URL
          title: url
          type: string
        vUpdate:
          description: Update is available
          title: vUpdate
          type: integer
        version:
          description: Extension version
          title: version
          type: string
      required:
      - idx_site
      - type
      title: Extension
      type: object
    Feedback:
      example:
        id: 0
      properties:
        id:
          description: Unique identifier for the feedback
          format: int64
          title: id
          type: integer
      required:
      - id
      title: Feedback
      type: object
    Log:
      example:
        log_type: log_type
        log_entry: log_entry
        log_date: log_date
        log_level: 1
        idx_site: 6
        Site name: Site name
        id_log: 0
        userid: 5
      properties:
        Site name:
          description: Name of the site / readyonly
          title: Site name
          type: string
        id_log:
          description: Unique identifier for the log
          format: int64
          title: id_log
          type: integer
        idx_site:
          description: Unique identifier for the site
          format: int64
          title: idx_site
          type: integer
        log_date:
          description: Datetime of the log
          format: date-format
          title: log_date
          type: string
        log_entry:
          description: Log information
          title: log_entry
          type: string
        log_level:
          description: Level of log
          format: int64
          title: log_level
          type: integer
        log_type:
          description: Type of log
          title: log_type
          type: string
        userid:
          description: Unique identifier for the user
          format: int64
          title: userid
          type: integer
      required:
      - id_log
      - idx_site
      - log_date
      - log_entry
      - log_level
      - userid
      title: Log
      type: object
    Monitor:
      type: object
    PostLog:
      example:
        log_entry: log_entry
        log_date: log_date
        log_level: 0
      properties:
        log_date:
          description: Datetime of the log
          format: date-format
          title: log_date
          type: string
        log_entry:
          description: Log information
          title: log_entry
          type: string
        log_level:
          description: Level of log
          format: int64
          title: log_level
          type: integer
      required:
      - log_entry
      - log_level
      title: PostLog
      type: object
    PostSite:
      example:
        backupSchedule: backupSchedule
        dateBackup: dateBackup
        word_akeeba: word_akeeba
        notes: notes
        akeebaProfile: akeebaProfile
        secret_word: secret_word
        word_check: word_check
        access_url: access_url
        name: name
        published: true
        admin_url: admin_url
        tags: tags
      properties:
        access_url:
          description: URL of the site
          title: access_url
          type: string
        admin_url:
          description: Adminsitration URL
          title: admin_url
          type: string
        akeebaProfile:
          description: Akeeba Profile
          format: date-format
          title: akeebaProfile
          type: string
        backupSchedule:
          description: Backup Schedule
          title: backupSchedule
          type: string
        dateBackup:
          description: Date backup
          format: date-format
          title: dateBackup
          type: string
        name:
          description: Friendly name for the site
          title: name
          type: string
        notes:
          description: Personnal note for the site
          title: notes
          type: string
        published:
          description: Published status of site
          title: published
          type: boolean
        secret_word:
          description: Watchful secret word
          title: secret_word
          type: string
        tags:
          description: "JSON encoded array of tags for the site (e.g. [{<q>name</q>:<q>mytag</q>},{<q>name</q>:<q>anothertag</q>}])"
          format: json
          title: tags
          type: string
        word_akeeba:
          description: Akeeba backup word
          title: word_akeeba
          type: string
        word_check:
          description: Word checked for uptime
          title: word_check
          type: string
      required:
      - access_url
      title: PostSite
      type: object
    Reports:
      type: object
    Site:
      example:
        backupSchedule: backupSchedule
        word_akeeba: word_akeeba
        canUpdate: true
        monitorid: true
        notes: notes
        akeebaProfile: akeebaProfile
        date_last_check: date_last_check
        access_url: access_url
        ip: ip
        canBackup: true
        new_j_version: new_j_version
        jUpdate: true
        published: true
        error: true
        nbUpdates: nbUpdates
        admin_url: admin_url
        tags:
        - "{}"
        - "{}"
        dateBackup: dateBackup
        secret_word: secret_word
        word_check: word_check
        name: name
        j_version: j_version
        siteid: 0
        up: true
      properties:
        access_url:
          description: URL of the site
          title: access_url
          type: string
        admin_url:
          description: Adminsitration URL
          title: admin_url
          type: string
        akeebaProfile:
          description: Akeeba Profile
          format: date-format
          title: akeebaProfile
          type: string
        backupSchedule:
          description: Backup Schedule
          title: backupSchedule
          type: string
        canBackup:
          description: Site can be backuped
          title: canBackup
          type: boolean
        canUpdate:
          description: Site can use remote installer
          title: canUpdate
          type: boolean
        dateBackup:
          description: Date backup
          format: date-format
          title: dateBackup
          type: string
        date_last_check:
          description: Watchful Last check
          format: date-format
          title: date_last_check
          type: string
        error:
          description: Error status of site
          title: error
          type: boolean
        ip:
          description: server IP
          title: ip
          type: string
        jUpdate:
          description: '?'
          title: jUpdate
          type: boolean
        j_version:
          description: Joomla site version
          title: j_version
          type: string
        monitorid:
          description: Id of the associated UptimeRobot monitor
          title: monitorid
          type: boolean
        name:
          description: Friendly name for the site
          title: name
          type: string
        nbUpdates:
          description: Number of updates
          format: date-format
          title: nbUpdates
          type: string
        new_j_version:
          description: Joomla site version
          title: new_j_version
          type: string
        notes:
          description: Personnal note for the site
          title: notes
          type: string
        published:
          description: Published status of site
          title: published
          type: boolean
        secret_word:
          description: Watchful secret word
          title: secret_word
          type: string
        siteid:
          description: Unique identifier for the site
          format: int64
          title: siteid
          type: integer
        tags:
          description: List of tags for this site
          items:
            type: object
          title: tags
          type: array
        up:
          description: Site status
          title: up
          type: boolean
        word_akeeba:
          description: Akeeba backup word
          title: word_akeeba
          type: string
        word_check:
          description: Word checked for uptime
          title: word_check
          type: string
      required:
      - siteid
      title: Site
      type: object
    SsoUsers:
      example:
        password: password
        groupid: 0
        name: name
        id: 6
        lastLoginDate: 2000-01-23T04:56:07.000+00:00
        lastLoginSite: 1
        userid: 5
        email: email
        username: username
      properties:
        email:
          description: Email of the SSO User
          title: email
          type: string
        groupid:
          description: Security Joomla group ID
          format: int64
          title: groupid
          type: integer
        id:
          description: Unique identifier for the SSO User
          format: int64
          title: id
          type: integer
        lastLoginDate:
          description: Last login date on remote site
          format: date-time
          title: lastLoginDate
          type: string
        lastLoginSite:
          description: Site Id of the last remote login
          format: int64
          title: lastLoginSite
          type: integer
        name:
          description: Account display name
          title: name
          type: string
        password:
          description: Password of the SSO User
          title: password
          type: string
        userid:
          description: Watchful user account
          format: int64
          title: userid
          type: integer
        username:
          description: Username of the SSO User
          title: username
          type: string
      required:
      - email
      - groupid
      - id
      - name
      - password
      - userid
      - username
      title: SsoUsers
      type: object
    Tag:
      example:
        nbSites: 6
        name: name
        id: 0
        type: default
      properties:
        id:
          description: Unique identifier for the tag
          format: int64
          title: id
          type: integer
        name:
          description: Friendly name for the tag
          title: name
          type: string
        nbSites:
          description: Number of sites use this tag (required field id)
          title: nbSites
          type: integer
        type:
          default: default
          description: Bootstrap color of the tag
          enum:
          - default
          - success
          - warning
          - important
          - info
          - inverse
          title: type
          type: string
      required:
      - id
      - name
      title: Tag
      type: object
    Uptime:
      type: object
    Version:
      type: object
x-original-swagger-version: "2.0"
