/**
 * watchful.li
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPostLog.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPostLog::OAIPostLog(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPostLog::OAIPostLog() {
    this->initializeModel();
}

OAIPostLog::~OAIPostLog() {}

void OAIPostLog::initializeModel() {

    m_log_date_isSet = false;
    m_log_date_isValid = false;

    m_log_entry_isSet = false;
    m_log_entry_isValid = false;

    m_log_level_isSet = false;
    m_log_level_isValid = false;
}

void OAIPostLog::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPostLog::fromJsonObject(QJsonObject json) {

    m_log_date_isValid = ::OpenAPI::fromJsonValue(m_log_date, json[QString("log_date")]);
    m_log_date_isSet = !json[QString("log_date")].isNull() && m_log_date_isValid;

    m_log_entry_isValid = ::OpenAPI::fromJsonValue(m_log_entry, json[QString("log_entry")]);
    m_log_entry_isSet = !json[QString("log_entry")].isNull() && m_log_entry_isValid;

    m_log_level_isValid = ::OpenAPI::fromJsonValue(m_log_level, json[QString("log_level")]);
    m_log_level_isSet = !json[QString("log_level")].isNull() && m_log_level_isValid;
}

QString OAIPostLog::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPostLog::asJsonObject() const {
    QJsonObject obj;
    if (m_log_date_isSet) {
        obj.insert(QString("log_date"), ::OpenAPI::toJsonValue(m_log_date));
    }
    if (m_log_entry_isSet) {
        obj.insert(QString("log_entry"), ::OpenAPI::toJsonValue(m_log_entry));
    }
    if (m_log_level_isSet) {
        obj.insert(QString("log_level"), ::OpenAPI::toJsonValue(m_log_level));
    }
    return obj;
}

QString OAIPostLog::getLogDate() const {
    return m_log_date;
}
void OAIPostLog::setLogDate(const QString &log_date) {
    m_log_date = log_date;
    m_log_date_isSet = true;
}

bool OAIPostLog::is_log_date_Set() const{
    return m_log_date_isSet;
}

bool OAIPostLog::is_log_date_Valid() const{
    return m_log_date_isValid;
}

QString OAIPostLog::getLogEntry() const {
    return m_log_entry;
}
void OAIPostLog::setLogEntry(const QString &log_entry) {
    m_log_entry = log_entry;
    m_log_entry_isSet = true;
}

bool OAIPostLog::is_log_entry_Set() const{
    return m_log_entry_isSet;
}

bool OAIPostLog::is_log_entry_Valid() const{
    return m_log_entry_isValid;
}

qint64 OAIPostLog::getLogLevel() const {
    return m_log_level;
}
void OAIPostLog::setLogLevel(const qint64 &log_level) {
    m_log_level = log_level;
    m_log_level_isSet = true;
}

bool OAIPostLog::is_log_level_Set() const{
    return m_log_level_isSet;
}

bool OAIPostLog::is_log_level_Valid() const{
    return m_log_level_isValid;
}

bool OAIPostLog::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_log_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_log_entry_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_log_level_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPostLog::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_log_entry_isValid && m_log_level_isValid && true;
}

} // namespace OpenAPI
