/*
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.Account;
import org.openapitools.client.model.ModelObject;
import org.openapitools.client.model.PipelineState;
import org.openapitools.client.model.PipelineTarget;
import org.openapitools.client.model.PipelineTrigger;
import org.openapitools.client.model.Repository;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Pipeline
 */
public class PipelineTest {
    private final Pipeline model = new Pipeline();

    /**
     * Model tests for Pipeline
     */
    @Test
    public void testPipeline() {
        // TODO: test Pipeline
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'buildNumber'
     */
    @Test
    public void buildNumberTest() {
        // TODO: test buildNumber
    }

    /**
     * Test the property 'buildSecondsUsed'
     */
    @Test
    public void buildSecondsUsedTest() {
        // TODO: test buildSecondsUsed
    }

    /**
     * Test the property 'completedOn'
     */
    @Test
    public void completedOnTest() {
        // TODO: test completedOn
    }

    /**
     * Test the property 'createdOn'
     */
    @Test
    public void createdOnTest() {
        // TODO: test createdOn
    }

    /**
     * Test the property 'creator'
     */
    @Test
    public void creatorTest() {
        // TODO: test creator
    }

    /**
     * Test the property 'repository'
     */
    @Test
    public void repositoryTest() {
        // TODO: test repository
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'target'
     */
    @Test
    public void targetTest() {
        // TODO: test target
    }

    /**
     * Test the property 'trigger'
     */
    @Test
    public void triggerTest() {
        // TODO: test trigger
    }

    /**
     * Test the property 'uuid'
     */
    @Test
    public void uuidTest() {
        // TODO: test uuid
    }

}
