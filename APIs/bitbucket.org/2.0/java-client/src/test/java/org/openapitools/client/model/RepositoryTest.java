/*
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.Account;
import org.openapitools.client.model.Branch;
import org.openapitools.client.model.ModelObject;
import org.openapitools.client.model.Project;
import org.openapitools.client.model.RepositoryLinks;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Repository
 */
public class RepositoryTest {
    private final Repository model = new Repository();

    /**
     * Model tests for Repository
     */
    @Test
    public void testRepository() {
        // TODO: test Repository
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'createdOn'
     */
    @Test
    public void createdOnTest() {
        // TODO: test createdOn
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'forkPolicy'
     */
    @Test
    public void forkPolicyTest() {
        // TODO: test forkPolicy
    }

    /**
     * Test the property 'fullName'
     */
    @Test
    public void fullNameTest() {
        // TODO: test fullName
    }

    /**
     * Test the property 'hasIssues'
     */
    @Test
    public void hasIssuesTest() {
        // TODO: test hasIssues
    }

    /**
     * Test the property 'hasWiki'
     */
    @Test
    public void hasWikiTest() {
        // TODO: test hasWiki
    }

    /**
     * Test the property 'isPrivate'
     */
    @Test
    public void isPrivateTest() {
        // TODO: test isPrivate
    }

    /**
     * Test the property 'language'
     */
    @Test
    public void languageTest() {
        // TODO: test language
    }

    /**
     * Test the property 'links'
     */
    @Test
    public void linksTest() {
        // TODO: test links
    }

    /**
     * Test the property 'mainbranch'
     */
    @Test
    public void mainbranchTest() {
        // TODO: test mainbranch
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'owner'
     */
    @Test
    public void ownerTest() {
        // TODO: test owner
    }

    /**
     * Test the property 'parent'
     */
    @Test
    public void parentTest() {
        // TODO: test parent
    }

    /**
     * Test the property 'project'
     */
    @Test
    public void projectTest() {
        // TODO: test project
    }

    /**
     * Test the property 'scm'
     */
    @Test
    public void scmTest() {
        // TODO: test scm
    }

    /**
     * Test the property 'size'
     */
    @Test
    public void sizeTest() {
        // TODO: test size
    }

    /**
     * Test the property 'updatedOn'
     */
    @Test
    public void updatedOnTest() {
        // TODO: test updatedOn
    }

    /**
     * Test the property 'uuid'
     */
    @Test
    public void uuidTest() {
        // TODO: test uuid
    }

}
