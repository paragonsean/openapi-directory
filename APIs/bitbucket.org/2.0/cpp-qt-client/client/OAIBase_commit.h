/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBase_commit.h
 *
 * 
 */

#ifndef OAIBase_commit_H
#define OAIBase_commit_H

#include <QJsonObject>

#include "OAIAuthor.h"
#include "OAIBase_Commit_summary.h"
#include "object.h"
#include <QDateTime>
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAuthor;
class OAIBase_Commit_summary;

class OAIBase_commit : public OAIObject {
public:
    OAIBase_commit();
    OAIBase_commit(QString json);
    ~OAIBase_commit() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIAuthor getAuthor() const;
    void setAuthor(const OAIAuthor &author);
    bool is_author_Set() const;
    bool is_author_Valid() const;

    QDateTime getDate() const;
    void setDate(const QDateTime &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QString getHash() const;
    void setHash(const QString &hash);
    bool is_hash_Set() const;
    bool is_hash_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QList<OAIBase_commit> getParents() const;
    void setParents(const QList<OAIBase_commit> &parents);
    bool is_parents_Set() const;
    bool is_parents_Valid() const;

    OAIBase_Commit_summary getSummary() const;
    void setSummary(const OAIBase_Commit_summary &summary);
    bool is_summary_Set() const;
    bool is_summary_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIAuthor m_author;
    bool m_author_isSet;
    bool m_author_isValid;

    QDateTime m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QString m_hash;
    bool m_hash_isSet;
    bool m_hash_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QList<OAIBase_commit> m_parents;
    bool m_parents_isSet;
    bool m_parents_isValid;

    OAIBase_Commit_summary m_summary;
    bool m_summary_isSet;
    bool m_summary_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBase_commit)

#endif // OAIBase_commit_H
