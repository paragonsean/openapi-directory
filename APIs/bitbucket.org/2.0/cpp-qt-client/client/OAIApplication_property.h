/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplication_property.h
 *
 * An application property. It is a caller defined JSON object that Bitbucket will store and return.  The &#x60;_attributes&#x60; field at its top level can be used to control who is allowed to read and update the property.  The keys of the JSON object must match an allowed pattern. For details,  see [Application properties](/cloud/bitbucket/application-properties/). 
 */

#ifndef OAIApplication_property_H
#define OAIApplication_property_H

#include <QJsonObject>

#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIApplication_property : public OAIObject {
public:
    OAIApplication_property();
    OAIApplication_property(QString json);
    ~OAIApplication_property() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAttributes() const;
    void setAttributes(const QList<QString> &_attributes);
    bool is__attributes_Set() const;
    bool is__attributes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m__attributes;
    bool m__attributes_isSet;
    bool m__attributes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplication_property)

#endif // OAIApplication_property_H
