/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISearch_line.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISearch_line::OAISearch_line(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISearch_line::OAISearch_line() {
    this->initializeModel();
}

OAISearch_line::~OAISearch_line() {}

void OAISearch_line::initializeModel() {

    m_line_isSet = false;
    m_line_isValid = false;

    m_segments_isSet = false;
    m_segments_isValid = false;
}

void OAISearch_line::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISearch_line::fromJsonObject(QJsonObject json) {

    m_line_isValid = ::OpenAPI::fromJsonValue(m_line, json[QString("line")]);
    m_line_isSet = !json[QString("line")].isNull() && m_line_isValid;

    m_segments_isValid = ::OpenAPI::fromJsonValue(m_segments, json[QString("segments")]);
    m_segments_isSet = !json[QString("segments")].isNull() && m_segments_isValid;
}

QString OAISearch_line::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISearch_line::asJsonObject() const {
    QJsonObject obj;
    if (m_line_isSet) {
        obj.insert(QString("line"), ::OpenAPI::toJsonValue(m_line));
    }
    if (m_segments.size() > 0) {
        obj.insert(QString("segments"), ::OpenAPI::toJsonValue(m_segments));
    }
    return obj;
}

qint32 OAISearch_line::getLine() const {
    return m_line;
}
void OAISearch_line::setLine(const qint32 &line) {
    m_line = line;
    m_line_isSet = true;
}

bool OAISearch_line::is_line_Set() const{
    return m_line_isSet;
}

bool OAISearch_line::is_line_Valid() const{
    return m_line_isValid;
}

QList<OAISearch_segment> OAISearch_line::getSegments() const {
    return m_segments;
}
void OAISearch_line::setSegments(const QList<OAISearch_segment> &segments) {
    m_segments = segments;
    m_segments_isSet = true;
}

bool OAISearch_line::is_segments_Set() const{
    return m_segments_isSet;
}

bool OAISearch_line::is_segments_Valid() const{
    return m_segments_isValid;
}

bool OAISearch_line::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_line_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_segments.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISearch_line::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
