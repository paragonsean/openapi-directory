/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISsh_account_key.h
 *
 * 
 */

#ifndef OAISsh_account_key_H
#define OAISsh_account_key_H

#include <QJsonObject>

#include "OAIAccount.h"
#include "OAIBranching_Model_Settings_links.h"
#include "OAISsh_key.h"
#include <QDateTime>
#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBranching_Model_Settings_links;
class OAIAccount;

class OAISsh_account_key : public OAIObject {
public:
    OAISsh_account_key();
    OAISsh_account_key(QString json);
    ~OAISsh_account_key() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getComment() const;
    void setComment(const QString &comment);
    bool is_comment_Set() const;
    bool is_comment_Valid() const;

    QDateTime getCreatedOn() const;
    void setCreatedOn(const QDateTime &created_on);
    bool is_created_on_Set() const;
    bool is_created_on_Valid() const;

    QString getKey() const;
    void setKey(const QString &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    QDateTime getLastUsed() const;
    void setLastUsed(const QDateTime &last_used);
    bool is_last_used_Set() const;
    bool is_last_used_Valid() const;

    OAIBranching_Model_Settings_links getLinks() const;
    void setLinks(const OAIBranching_Model_Settings_links &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QString getUuid() const;
    void setUuid(const QString &uuid);
    bool is_uuid_Set() const;
    bool is_uuid_Valid() const;

    OAIAccount getOwner() const;
    void setOwner(const OAIAccount &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_comment;
    bool m_comment_isSet;
    bool m_comment_isValid;

    QDateTime m_created_on;
    bool m_created_on_isSet;
    bool m_created_on_isValid;

    QString m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    QDateTime m_last_used;
    bool m_last_used_isSet;
    bool m_last_used_isValid;

    OAIBranching_Model_Settings_links m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QString m_uuid;
    bool m_uuid_isSet;
    bool m_uuid_isValid;

    OAIAccount m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISsh_account_key)

#endif // OAISsh_account_key_H
