/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIssue.h
 *
 * 
 */

#ifndef OAIIssue_H
#define OAIIssue_H

#include <QJsonObject>

#include "OAIAccount.h"
#include "OAIBase_Commit_summary.h"
#include "OAIComponent.h"
#include "OAIIssue_links.h"
#include "OAIMilestone.h"
#include "OAIRepository.h"
#include "OAIVersion.h"
#include "object.h"
#include <QDateTime>
#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAccount;
class OAIComponent;
class OAIBase_Commit_summary;
class OAIIssue_links;
class OAIMilestone;
class OAIRepository;
class OAIVersion;

class OAIIssue : public OAIObject {
public:
    OAIIssue();
    OAIIssue(QString json);
    ~OAIIssue() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIAccount getAssignee() const;
    void setAssignee(const OAIAccount &assignee);
    bool is_assignee_Set() const;
    bool is_assignee_Valid() const;

    OAIComponent getComponent() const;
    void setComponent(const OAIComponent &component);
    bool is_component_Set() const;
    bool is_component_Valid() const;

    OAIBase_Commit_summary getContent() const;
    void setContent(const OAIBase_Commit_summary &content);
    bool is_content_Set() const;
    bool is_content_Valid() const;

    QDateTime getCreatedOn() const;
    void setCreatedOn(const QDateTime &created_on);
    bool is_created_on_Set() const;
    bool is_created_on_Valid() const;

    QDateTime getEditedOn() const;
    void setEditedOn(const QDateTime &edited_on);
    bool is_edited_on_Set() const;
    bool is_edited_on_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    OAIIssue_links getLinks() const;
    void setLinks(const OAIIssue_links &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    OAIMilestone getMilestone() const;
    void setMilestone(const OAIMilestone &milestone);
    bool is_milestone_Set() const;
    bool is_milestone_Valid() const;

    QString getPriority() const;
    void setPriority(const QString &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    OAIAccount getReporter() const;
    void setReporter(const OAIAccount &reporter);
    bool is_reporter_Set() const;
    bool is_reporter_Valid() const;

    OAIRepository getRepository() const;
    void setRepository(const OAIRepository &repository);
    bool is_repository_Set() const;
    bool is_repository_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QDateTime getUpdatedOn() const;
    void setUpdatedOn(const QDateTime &updated_on);
    bool is_updated_on_Set() const;
    bool is_updated_on_Valid() const;

    OAIVersion getVersion() const;
    void setVersion(const OAIVersion &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    qint32 getVotes() const;
    void setVotes(const qint32 &votes);
    bool is_votes_Set() const;
    bool is_votes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIAccount m_assignee;
    bool m_assignee_isSet;
    bool m_assignee_isValid;

    OAIComponent m_component;
    bool m_component_isSet;
    bool m_component_isValid;

    OAIBase_Commit_summary m_content;
    bool m_content_isSet;
    bool m_content_isValid;

    QDateTime m_created_on;
    bool m_created_on_isSet;
    bool m_created_on_isValid;

    QDateTime m_edited_on;
    bool m_edited_on_isSet;
    bool m_edited_on_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    OAIIssue_links m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    OAIMilestone m_milestone;
    bool m_milestone_isSet;
    bool m_milestone_isValid;

    QString m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    OAIAccount m_reporter;
    bool m_reporter_isSet;
    bool m_reporter_isValid;

    OAIRepository m_repository;
    bool m_repository_isSet;
    bool m_repository_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QDateTime m_updated_on;
    bool m_updated_on_isSet;
    bool m_updated_on_isValid;

    OAIVersion m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    qint32 m_votes;
    bool m_votes_isSet;
    bool m_votes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIssue)

#endif // OAIIssue_H
