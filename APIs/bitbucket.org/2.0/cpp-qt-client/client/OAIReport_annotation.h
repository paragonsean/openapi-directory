/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReport_annotation.h
 *
 * 
 */

#ifndef OAIReport_annotation_H
#define OAIReport_annotation_H

#include <QJsonObject>

#include "object.h"
#include <QDateTime>
#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIReport_annotation : public OAIObject {
public:
    OAIReport_annotation();
    OAIReport_annotation(QString json);
    ~OAIReport_annotation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getAnnotationType() const;
    void setAnnotationType(const QString &annotation_type);
    bool is_annotation_type_Set() const;
    bool is_annotation_type_Valid() const;

    QDateTime getCreatedOn() const;
    void setCreatedOn(const QDateTime &created_on);
    bool is_created_on_Set() const;
    bool is_created_on_Valid() const;

    QString getDetails() const;
    void setDetails(const QString &details);
    bool is_details_Set() const;
    bool is_details_Valid() const;

    QString getExternalId() const;
    void setExternalId(const QString &external_id);
    bool is_external_id_Set() const;
    bool is_external_id_Valid() const;

    qint32 getLine() const;
    void setLine(const qint32 &line);
    bool is_line_Set() const;
    bool is_line_Valid() const;

    QString getLink() const;
    void setLink(const QString &link);
    bool is_link_Set() const;
    bool is_link_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QString getResult() const;
    void setResult(const QString &result);
    bool is_result_Set() const;
    bool is_result_Valid() const;

    QString getSeverity() const;
    void setSeverity(const QString &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    QString getSummary() const;
    void setSummary(const QString &summary);
    bool is_summary_Set() const;
    bool is_summary_Valid() const;

    QDateTime getUpdatedOn() const;
    void setUpdatedOn(const QDateTime &updated_on);
    bool is_updated_on_Set() const;
    bool is_updated_on_Valid() const;

    QString getUuid() const;
    void setUuid(const QString &uuid);
    bool is_uuid_Set() const;
    bool is_uuid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_annotation_type;
    bool m_annotation_type_isSet;
    bool m_annotation_type_isValid;

    QDateTime m_created_on;
    bool m_created_on_isSet;
    bool m_created_on_isValid;

    QString m_details;
    bool m_details_isSet;
    bool m_details_isValid;

    QString m_external_id;
    bool m_external_id_isSet;
    bool m_external_id_isValid;

    qint32 m_line;
    bool m_line_isSet;
    bool m_line_isValid;

    QString m_link;
    bool m_link_isSet;
    bool m_link_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QString m_result;
    bool m_result_isSet;
    bool m_result_isValid;

    QString m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    QString m_summary;
    bool m_summary_isSet;
    bool m_summary_isValid;

    QDateTime m_updated_on;
    bool m_updated_on_isSet;
    bool m_updated_on_isValid;

    QString m_uuid;
    bool m_uuid_isSet;
    bool m_uuid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReport_annotation)

#endif // OAIReport_annotation_H
