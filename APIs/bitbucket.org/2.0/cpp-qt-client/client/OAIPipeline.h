/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPipeline.h
 *
 * 
 */

#ifndef OAIPipeline_H
#define OAIPipeline_H

#include <QJsonObject>

#include "OAIAccount.h"
#include "OAIPipeline_state.h"
#include "OAIPipeline_target.h"
#include "OAIPipeline_trigger.h"
#include "OAIRepository.h"
#include "object.h"
#include <QDateTime>
#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAccount;
class OAIRepository;
class OAIPipeline_state;
class OAIPipeline_target;
class OAIPipeline_trigger;

class OAIPipeline : public OAIObject {
public:
    OAIPipeline();
    OAIPipeline(QString json);
    ~OAIPipeline() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint32 getBuildNumber() const;
    void setBuildNumber(const qint32 &build_number);
    bool is_build_number_Set() const;
    bool is_build_number_Valid() const;

    qint32 getBuildSecondsUsed() const;
    void setBuildSecondsUsed(const qint32 &build_seconds_used);
    bool is_build_seconds_used_Set() const;
    bool is_build_seconds_used_Valid() const;

    QDateTime getCompletedOn() const;
    void setCompletedOn(const QDateTime &completed_on);
    bool is_completed_on_Set() const;
    bool is_completed_on_Valid() const;

    QDateTime getCreatedOn() const;
    void setCreatedOn(const QDateTime &created_on);
    bool is_created_on_Set() const;
    bool is_created_on_Valid() const;

    OAIAccount getCreator() const;
    void setCreator(const OAIAccount &creator);
    bool is_creator_Set() const;
    bool is_creator_Valid() const;

    OAIRepository getRepository() const;
    void setRepository(const OAIRepository &repository);
    bool is_repository_Set() const;
    bool is_repository_Valid() const;

    OAIPipeline_state getState() const;
    void setState(const OAIPipeline_state &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAIPipeline_target getTarget() const;
    void setTarget(const OAIPipeline_target &target);
    bool is_target_Set() const;
    bool is_target_Valid() const;

    OAIPipeline_trigger getTrigger() const;
    void setTrigger(const OAIPipeline_trigger &trigger);
    bool is_trigger_Set() const;
    bool is_trigger_Valid() const;

    QString getUuid() const;
    void setUuid(const QString &uuid);
    bool is_uuid_Set() const;
    bool is_uuid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint32 m_build_number;
    bool m_build_number_isSet;
    bool m_build_number_isValid;

    qint32 m_build_seconds_used;
    bool m_build_seconds_used_isSet;
    bool m_build_seconds_used_isValid;

    QDateTime m_completed_on;
    bool m_completed_on_isSet;
    bool m_completed_on_isValid;

    QDateTime m_created_on;
    bool m_created_on_isSet;
    bool m_created_on_isValid;

    OAIAccount m_creator;
    bool m_creator_isSet;
    bool m_creator_isValid;

    OAIRepository m_repository;
    bool m_repository_isSet;
    bool m_repository_isValid;

    OAIPipeline_state m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAIPipeline_target m_target;
    bool m_target_isSet;
    bool m_target_isValid;

    OAIPipeline_trigger m_trigger;
    bool m_trigger_isSet;
    bool m_trigger_isValid;

    QString m_uuid;
    bool m_uuid_isSet;
    bool m_uuid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPipeline)

#endif // OAIPipeline_H
