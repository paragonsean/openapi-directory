/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRepository_links.h
 *
 * 
 */

#ifndef OAIRepository_links_H
#define OAIRepository_links_H

#include <QJsonObject>

#include "OAILink.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILink;

class OAIRepository_links : public OAIObject {
public:
    OAIRepository_links();
    OAIRepository_links(QString json);
    ~OAIRepository_links() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILink getAvatar() const;
    void setAvatar(const OAILink &avatar);
    bool is_avatar_Set() const;
    bool is_avatar_Valid() const;

    QList<OAILink> getClone() const;
    void setClone(const QList<OAILink> &clone);
    bool is_clone_Set() const;
    bool is_clone_Valid() const;

    OAILink getCommits() const;
    void setCommits(const OAILink &commits);
    bool is_commits_Set() const;
    bool is_commits_Valid() const;

    OAILink getDownloads() const;
    void setDownloads(const OAILink &downloads);
    bool is_downloads_Set() const;
    bool is_downloads_Valid() const;

    OAILink getForks() const;
    void setForks(const OAILink &forks);
    bool is_forks_Set() const;
    bool is_forks_Valid() const;

    OAILink getHooks() const;
    void setHooks(const OAILink &hooks);
    bool is_hooks_Set() const;
    bool is_hooks_Valid() const;

    OAILink getHtml() const;
    void setHtml(const OAILink &html);
    bool is_html_Set() const;
    bool is_html_Valid() const;

    OAILink getPullrequests() const;
    void setPullrequests(const OAILink &pullrequests);
    bool is_pullrequests_Set() const;
    bool is_pullrequests_Valid() const;

    OAILink getSelf() const;
    void setSelf(const OAILink &self);
    bool is_self_Set() const;
    bool is_self_Valid() const;

    OAILink getWatchers() const;
    void setWatchers(const OAILink &watchers);
    bool is_watchers_Set() const;
    bool is_watchers_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILink m_avatar;
    bool m_avatar_isSet;
    bool m_avatar_isValid;

    QList<OAILink> m_clone;
    bool m_clone_isSet;
    bool m_clone_isValid;

    OAILink m_commits;
    bool m_commits_isSet;
    bool m_commits_isValid;

    OAILink m_downloads;
    bool m_downloads_isSet;
    bool m_downloads_isValid;

    OAILink m_forks;
    bool m_forks_isSet;
    bool m_forks_isValid;

    OAILink m_hooks;
    bool m_hooks_isSet;
    bool m_hooks_isValid;

    OAILink m_html;
    bool m_html_isSet;
    bool m_html_isValid;

    OAILink m_pullrequests;
    bool m_pullrequests_isSet;
    bool m_pullrequests_isValid;

    OAILink m_self;
    bool m_self_isSet;
    bool m_self_isValid;

    OAILink m_watchers;
    bool m_watchers_isSet;
    bool m_watchers_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRepository_links)

#endif // OAIRepository_links_H
