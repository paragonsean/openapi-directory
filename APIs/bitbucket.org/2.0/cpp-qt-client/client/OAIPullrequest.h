/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPullrequest.h
 *
 * 
 */

#ifndef OAIPullrequest_H
#define OAIPullrequest_H

#include <QJsonObject>

#include "OAIAccount.h"
#include "OAIBase_Commit_summary.h"
#include "OAIParticipant.h"
#include "OAIPull_Request_Commit.h"
#include "OAIPull_Request_links.h"
#include "OAIPullrequest_endpoint.h"
#include "OAIRendered_Pull_Request_Markup.h"
#include "object.h"
#include <QDateTime>
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAccount;
class OAIPullrequest_endpoint;
class OAIPull_Request_links;
class OAIPull_Request_Commit;
class OAIParticipant;
class OAIRendered_Pull_Request_Markup;
class OAIBase_Commit_summary;

class OAIPullrequest : public OAIObject {
public:
    OAIPullrequest();
    OAIPullrequest(QString json);
    ~OAIPullrequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIAccount getAuthor() const;
    void setAuthor(const OAIAccount &author);
    bool is_author_Set() const;
    bool is_author_Valid() const;

    bool isCloseSourceBranch() const;
    void setCloseSourceBranch(const bool &close_source_branch);
    bool is_close_source_branch_Set() const;
    bool is_close_source_branch_Valid() const;

    OAIAccount getClosedBy() const;
    void setClosedBy(const OAIAccount &closed_by);
    bool is_closed_by_Set() const;
    bool is_closed_by_Valid() const;

    qint32 getCommentCount() const;
    void setCommentCount(const qint32 &comment_count);
    bool is_comment_count_Set() const;
    bool is_comment_count_Valid() const;

    QDateTime getCreatedOn() const;
    void setCreatedOn(const QDateTime &created_on);
    bool is_created_on_Set() const;
    bool is_created_on_Valid() const;

    OAIPullrequest_endpoint getDestination() const;
    void setDestination(const OAIPullrequest_endpoint &destination);
    bool is_destination_Set() const;
    bool is_destination_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIPull_Request_links getLinks() const;
    void setLinks(const OAIPull_Request_links &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    OAIPull_Request_Commit getMergeCommit() const;
    void setMergeCommit(const OAIPull_Request_Commit &merge_commit);
    bool is_merge_commit_Set() const;
    bool is_merge_commit_Valid() const;

    QList<OAIParticipant> getParticipants() const;
    void setParticipants(const QList<OAIParticipant> &participants);
    bool is_participants_Set() const;
    bool is_participants_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    OAIRendered_Pull_Request_Markup getRendered() const;
    void setRendered(const OAIRendered_Pull_Request_Markup &rendered);
    bool is_rendered_Set() const;
    bool is_rendered_Valid() const;

    QList<OAIAccount> getReviewers() const;
    void setReviewers(const QList<OAIAccount> &reviewers);
    bool is_reviewers_Set() const;
    bool is_reviewers_Valid() const;

    OAIPullrequest_endpoint getSource() const;
    void setSource(const OAIPullrequest_endpoint &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAIBase_Commit_summary getSummary() const;
    void setSummary(const OAIBase_Commit_summary &summary);
    bool is_summary_Set() const;
    bool is_summary_Valid() const;

    qint32 getTaskCount() const;
    void setTaskCount(const qint32 &task_count);
    bool is_task_count_Set() const;
    bool is_task_count_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QDateTime getUpdatedOn() const;
    void setUpdatedOn(const QDateTime &updated_on);
    bool is_updated_on_Set() const;
    bool is_updated_on_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIAccount m_author;
    bool m_author_isSet;
    bool m_author_isValid;

    bool m_close_source_branch;
    bool m_close_source_branch_isSet;
    bool m_close_source_branch_isValid;

    OAIAccount m_closed_by;
    bool m_closed_by_isSet;
    bool m_closed_by_isValid;

    qint32 m_comment_count;
    bool m_comment_count_isSet;
    bool m_comment_count_isValid;

    QDateTime m_created_on;
    bool m_created_on_isSet;
    bool m_created_on_isValid;

    OAIPullrequest_endpoint m_destination;
    bool m_destination_isSet;
    bool m_destination_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIPull_Request_links m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    OAIPull_Request_Commit m_merge_commit;
    bool m_merge_commit_isSet;
    bool m_merge_commit_isValid;

    QList<OAIParticipant> m_participants;
    bool m_participants_isSet;
    bool m_participants_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    OAIRendered_Pull_Request_Markup m_rendered;
    bool m_rendered_isSet;
    bool m_rendered_isValid;

    QList<OAIAccount> m_reviewers;
    bool m_reviewers_isSet;
    bool m_reviewers_isValid;

    OAIPullrequest_endpoint m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAIBase_Commit_summary m_summary;
    bool m_summary_isSet;
    bool m_summary_isValid;

    qint32 m_task_count;
    bool m_task_count_isSet;
    bool m_task_count_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QDateTime m_updated_on;
    bool m_updated_on_isSet;
    bool m_updated_on_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPullrequest)

#endif // OAIPullrequest_H
