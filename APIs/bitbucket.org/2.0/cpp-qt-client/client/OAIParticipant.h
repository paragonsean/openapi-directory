/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIParticipant.h
 *
 * 
 */

#ifndef OAIParticipant_H
#define OAIParticipant_H

#include <QJsonObject>

#include "OAIAccount.h"
#include "object.h"
#include <QDateTime>
#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAccount;

class OAIParticipant : public OAIObject {
public:
    OAIParticipant();
    OAIParticipant(QString json);
    ~OAIParticipant() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    bool isApproved() const;
    void setApproved(const bool &approved);
    bool is_approved_Set() const;
    bool is_approved_Valid() const;

    QDateTime getParticipatedOn() const;
    void setParticipatedOn(const QDateTime &participated_on);
    bool is_participated_on_Set() const;
    bool is_participated_on_Valid() const;

    QString getRole() const;
    void setRole(const QString &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAIAccount getUser() const;
    void setUser(const OAIAccount &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    bool m_approved;
    bool m_approved_isSet;
    bool m_approved_isValid;

    QDateTime m_participated_on;
    bool m_participated_on_isSet;
    bool m_participated_on_isValid;

    QString m_role;
    bool m_role_isSet;
    bool m_role_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAIAccount m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIParticipant)

#endif // OAIParticipant_H
