/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPull_Request_Branch.h
 *
 * 
 */

#ifndef OAIPull_Request_Branch_H
#define OAIPull_Request_Branch_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPull_Request_Branch : public OAIObject {
public:
    OAIPull_Request_Branch();
    OAIPull_Request_Branch(QString json);
    ~OAIPull_Request_Branch() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDefaultMergeStrategy() const;
    void setDefaultMergeStrategy(const QString &default_merge_strategy);
    bool is_default_merge_strategy_Set() const;
    bool is_default_merge_strategy_Valid() const;

    QList<QString> getMergeStrategies() const;
    void setMergeStrategies(const QList<QString> &merge_strategies);
    bool is_merge_strategies_Set() const;
    bool is_merge_strategies_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_default_merge_strategy;
    bool m_default_merge_strategy_isSet;
    bool m_default_merge_strategy_isValid;

    QList<QString> m_merge_strategies;
    bool m_merge_strategies_isSet;
    bool m_merge_strategies_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPull_Request_Branch)

#endif // OAIPull_Request_Branch_H
