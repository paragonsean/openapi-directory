/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIssue_comment.h
 *
 * 
 */

#ifndef OAIIssue_comment_H
#define OAIIssue_comment_H

#include <QJsonObject>

#include "OAIAccount.h"
#include "OAIBase_Commit_summary.h"
#include "OAIComment.h"
#include "OAIComment_inline.h"
#include "OAIComment_links.h"
#include "OAIIssue.h"
#include <QDateTime>
#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBase_Commit_summary;
class OAIComment_inline;
class OAIComment_links;
class OAIComment;
class OAIAccount;
class OAIIssue;

class OAIIssue_comment : public OAIObject {
public:
    OAIIssue_comment();
    OAIIssue_comment(QString json);
    ~OAIIssue_comment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIBase_Commit_summary getContent() const;
    void setContent(const OAIBase_Commit_summary &content);
    bool is_content_Set() const;
    bool is_content_Valid() const;

    QDateTime getCreatedOn() const;
    void setCreatedOn(const QDateTime &created_on);
    bool is_created_on_Set() const;
    bool is_created_on_Valid() const;

    bool isDeleted() const;
    void setDeleted(const bool &deleted);
    bool is_deleted_Set() const;
    bool is_deleted_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIComment_inline getRInline() const;
    void setRInline(const OAIComment_inline &r_inline);
    bool is_r_inline_Set() const;
    bool is_r_inline_Valid() const;

    OAIComment_links getLinks() const;
    void setLinks(const OAIComment_links &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    OAIComment getParent() const;
    void setParent(const OAIComment &parent);
    bool is_parent_Set() const;
    bool is_parent_Valid() const;

    QDateTime getUpdatedOn() const;
    void setUpdatedOn(const QDateTime &updated_on);
    bool is_updated_on_Set() const;
    bool is_updated_on_Valid() const;

    OAIAccount getUser() const;
    void setUser(const OAIAccount &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    OAIIssue getIssue() const;
    void setIssue(const OAIIssue &issue);
    bool is_issue_Set() const;
    bool is_issue_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIBase_Commit_summary m_content;
    bool m_content_isSet;
    bool m_content_isValid;

    QDateTime m_created_on;
    bool m_created_on_isSet;
    bool m_created_on_isValid;

    bool m_deleted;
    bool m_deleted_isSet;
    bool m_deleted_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIComment_inline m_r_inline;
    bool m_r_inline_isSet;
    bool m_r_inline_isValid;

    OAIComment_links m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    OAIComment m_parent;
    bool m_parent_isSet;
    bool m_parent_isValid;

    QDateTime m_updated_on;
    bool m_updated_on_isSet;
    bool m_updated_on_isValid;

    OAIAccount m_user;
    bool m_user_isSet;
    bool m_user_isValid;

    OAIIssue m_issue;
    bool m_issue_isSet;
    bool m_issue_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIssue_comment)

#endif // OAIIssue_comment_H
