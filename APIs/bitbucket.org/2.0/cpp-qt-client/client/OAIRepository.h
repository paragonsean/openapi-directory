/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRepository.h
 *
 * 
 */

#ifndef OAIRepository_H
#define OAIRepository_H

#include <QJsonObject>

#include "OAIAccount.h"
#include "OAIBranch.h"
#include "OAIProject.h"
#include "OAIRepository_links.h"
#include "object.h"
#include <QDateTime>
#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRepository_links;
class OAIBranch;
class OAIAccount;
class OAIProject;

class OAIRepository : public OAIObject {
public:
    OAIRepository();
    OAIRepository(QString json);
    ~OAIRepository() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QDateTime getCreatedOn() const;
    void setCreatedOn(const QDateTime &created_on);
    bool is_created_on_Set() const;
    bool is_created_on_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getForkPolicy() const;
    void setForkPolicy(const QString &fork_policy);
    bool is_fork_policy_Set() const;
    bool is_fork_policy_Valid() const;

    QString getFullName() const;
    void setFullName(const QString &full_name);
    bool is_full_name_Set() const;
    bool is_full_name_Valid() const;

    bool isHasIssues() const;
    void setHasIssues(const bool &has_issues);
    bool is_has_issues_Set() const;
    bool is_has_issues_Valid() const;

    bool isHasWiki() const;
    void setHasWiki(const bool &has_wiki);
    bool is_has_wiki_Set() const;
    bool is_has_wiki_Valid() const;

    bool isIsPrivate() const;
    void setIsPrivate(const bool &is_private);
    bool is_is_private_Set() const;
    bool is_is_private_Valid() const;

    QString getLanguage() const;
    void setLanguage(const QString &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    OAIRepository_links getLinks() const;
    void setLinks(const OAIRepository_links &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    OAIBranch getMainbranch() const;
    void setMainbranch(const OAIBranch &mainbranch);
    bool is_mainbranch_Set() const;
    bool is_mainbranch_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIAccount getOwner() const;
    void setOwner(const OAIAccount &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    OAIRepository getParent() const;
    void setParent(const OAIRepository &parent);
    bool is_parent_Set() const;
    bool is_parent_Valid() const;

    OAIProject getProject() const;
    void setProject(const OAIProject &project);
    bool is_project_Set() const;
    bool is_project_Valid() const;

    QString getScm() const;
    void setScm(const QString &scm);
    bool is_scm_Set() const;
    bool is_scm_Valid() const;

    qint32 getSize() const;
    void setSize(const qint32 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    QDateTime getUpdatedOn() const;
    void setUpdatedOn(const QDateTime &updated_on);
    bool is_updated_on_Set() const;
    bool is_updated_on_Valid() const;

    QString getUuid() const;
    void setUuid(const QString &uuid);
    bool is_uuid_Set() const;
    bool is_uuid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QDateTime m_created_on;
    bool m_created_on_isSet;
    bool m_created_on_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_fork_policy;
    bool m_fork_policy_isSet;
    bool m_fork_policy_isValid;

    QString m_full_name;
    bool m_full_name_isSet;
    bool m_full_name_isValid;

    bool m_has_issues;
    bool m_has_issues_isSet;
    bool m_has_issues_isValid;

    bool m_has_wiki;
    bool m_has_wiki_isSet;
    bool m_has_wiki_isValid;

    bool m_is_private;
    bool m_is_private_isSet;
    bool m_is_private_isValid;

    QString m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    OAIRepository_links m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    OAIBranch m_mainbranch;
    bool m_mainbranch_isSet;
    bool m_mainbranch_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIAccount m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    OAIRepository m_parent;
    bool m_parent_isSet;
    bool m_parent_isValid;

    OAIProject m_project;
    bool m_project_isSet;
    bool m_project_isValid;

    QString m_scm;
    bool m_scm_isSet;
    bool m_scm_isValid;

    qint32 m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    QDateTime m_updated_on;
    bool m_updated_on_isSet;
    bool m_updated_on_isValid;

    QString m_uuid;
    bool m_uuid_isSet;
    bool m_uuid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRepository)

#endif // OAIRepository_H
