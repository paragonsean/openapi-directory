/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWebhook_subscription.h
 *
 * 
 */

#ifndef OAIWebhook_subscription_H
#define OAIWebhook_subscription_H

#include <QJsonObject>

#include "OAIObject.h"
#include "object.h"
#include <QDateTime>
#include <QJsonValue>
#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWebhook_subscription : public OAIObject {
public:
    OAIWebhook_subscription();
    OAIWebhook_subscription(QString json);
    ~OAIWebhook_subscription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    bool isActive() const;
    void setActive(const bool &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QSet<QString> getEvents() const;
    void setEvents(const QSet<QString> &events);
    bool is_events_Set() const;
    bool is_events_Valid() const;

    OAIObject getSubject() const;
    void setSubject(const OAIObject &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    QString getSubjectType() const;
    void setSubjectType(const QString &subject_type);
    bool is_subject_type_Set() const;
    bool is_subject_type_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getUuid() const;
    void setUuid(const QString &uuid);
    bool is_uuid_Set() const;
    bool is_uuid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    bool m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QSet<QString> m_events;
    bool m_events_isSet;
    bool m_events_isValid;

    OAIObject m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;

    QString m_subject_type;
    bool m_subject_type_isSet;
    bool m_subject_type_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_uuid;
    bool m_uuid_isSet;
    bool m_uuid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWebhook_subscription)

#endif // OAIWebhook_subscription_H
