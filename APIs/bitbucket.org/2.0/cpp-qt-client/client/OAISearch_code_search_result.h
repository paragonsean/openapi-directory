/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearch_code_search_result.h
 *
 * 
 */

#ifndef OAISearch_code_search_result_H
#define OAISearch_code_search_result_H

#include <QJsonObject>

#include "OAICommit_file.h"
#include "OAISearch_content_match.h"
#include "OAISearch_segment.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISearch_content_match;
class OAISearch_segment;

class OAISearch_code_search_result : public OAIObject {
public:
    OAISearch_code_search_result();
    OAISearch_code_search_result(QString json);
    ~OAISearch_code_search_result() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getContentMatchCount() const;
    void setContentMatchCount(const qint64 &content_match_count);
    bool is_content_match_count_Set() const;
    bool is_content_match_count_Valid() const;

    QList<OAISearch_content_match> getContentMatches() const;
    void setContentMatches(const QList<OAISearch_content_match> &content_matches);
    bool is_content_matches_Set() const;
    bool is_content_matches_Valid() const;

    OAICommit_file getFile() const;
    void setFile(const OAICommit_file &file);
    bool is_file_Set() const;
    bool is_file_Valid() const;

    QList<OAISearch_segment> getPathMatches() const;
    void setPathMatches(const QList<OAISearch_segment> &path_matches);
    bool is_path_matches_Set() const;
    bool is_path_matches_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_content_match_count;
    bool m_content_match_count_isSet;
    bool m_content_match_count_isValid;

    QList<OAISearch_content_match> m_content_matches;
    bool m_content_matches_isSet;
    bool m_content_matches_isValid;

    OAICommit_file m_file;
    bool m_file_isSet;
    bool m_file_isValid;

    QList<OAISearch_segment> m_path_matches;
    bool m_path_matches_isSet;
    bool m_path_matches_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearch_code_search_result)

#endif // OAISearch_code_search_result_H
