/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBranching_Model_Settings_branch_types.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBranching_Model_Settings_branch_types::OAIBranching_Model_Settings_branch_types(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBranching_Model_Settings_branch_types::OAIBranching_Model_Settings_branch_types() {
    this->initializeModel();
}

OAIBranching_Model_Settings_branch_types::~OAIBranching_Model_Settings_branch_types() {}

void OAIBranching_Model_Settings_branch_types::initializeModel() {

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_prefix_isSet = false;
    m_prefix_isValid = false;
}

void OAIBranching_Model_Settings_branch_types::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBranching_Model_Settings_branch_types::fromJsonObject(QJsonObject json) {

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_prefix_isValid = ::OpenAPI::fromJsonValue(m_prefix, json[QString("prefix")]);
    m_prefix_isSet = !json[QString("prefix")].isNull() && m_prefix_isValid;
}

QString OAIBranching_Model_Settings_branch_types::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBranching_Model_Settings_branch_types::asJsonObject() const {
    QJsonObject obj;
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_prefix_isSet) {
        obj.insert(QString("prefix"), ::OpenAPI::toJsonValue(m_prefix));
    }
    return obj;
}

bool OAIBranching_Model_Settings_branch_types::isEnabled() const {
    return m_enabled;
}
void OAIBranching_Model_Settings_branch_types::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIBranching_Model_Settings_branch_types::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIBranching_Model_Settings_branch_types::is_enabled_Valid() const{
    return m_enabled_isValid;
}

QString OAIBranching_Model_Settings_branch_types::getKind() const {
    return m_kind;
}
void OAIBranching_Model_Settings_branch_types::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIBranching_Model_Settings_branch_types::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIBranching_Model_Settings_branch_types::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAIBranching_Model_Settings_branch_types::getPrefix() const {
    return m_prefix;
}
void OAIBranching_Model_Settings_branch_types::setPrefix(const QString &prefix) {
    m_prefix = prefix;
    m_prefix_isSet = true;
}

bool OAIBranching_Model_Settings_branch_types::is_prefix_Set() const{
    return m_prefix_isSet;
}

bool OAIBranching_Model_Settings_branch_types::is_prefix_Valid() const{
    return m_prefix_isValid;
}

bool OAIBranching_Model_Settings_branch_types::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBranching_Model_Settings_branch_types::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_kind_isValid && true;
}

} // namespace OpenAPI
