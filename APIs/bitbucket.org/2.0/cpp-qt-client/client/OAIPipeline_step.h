/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPipeline_step.h
 *
 * 
 */

#ifndef OAIPipeline_step_H
#define OAIPipeline_step_H

#include <QJsonObject>

#include "OAIPipeline_command.h"
#include "OAIPipeline_image.h"
#include "OAIPipeline_step_state.h"
#include "object.h"
#include <QDateTime>
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPipeline_image;
class OAIPipeline_command;
class OAIPipeline_step_state;

class OAIPipeline_step : public OAIObject {
public:
    OAIPipeline_step();
    OAIPipeline_step(QString json);
    ~OAIPipeline_step() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QDateTime getCompletedOn() const;
    void setCompletedOn(const QDateTime &completed_on);
    bool is_completed_on_Set() const;
    bool is_completed_on_Valid() const;

    OAIPipeline_image getImage() const;
    void setImage(const OAIPipeline_image &image);
    bool is_image_Set() const;
    bool is_image_Valid() const;

    QList<OAIPipeline_command> getScriptCommands() const;
    void setScriptCommands(const QList<OAIPipeline_command> &script_commands);
    bool is_script_commands_Set() const;
    bool is_script_commands_Valid() const;

    QList<OAIPipeline_command> getSetupCommands() const;
    void setSetupCommands(const QList<OAIPipeline_command> &setup_commands);
    bool is_setup_commands_Set() const;
    bool is_setup_commands_Valid() const;

    QDateTime getStartedOn() const;
    void setStartedOn(const QDateTime &started_on);
    bool is_started_on_Set() const;
    bool is_started_on_Valid() const;

    OAIPipeline_step_state getState() const;
    void setState(const OAIPipeline_step_state &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getUuid() const;
    void setUuid(const QString &uuid);
    bool is_uuid_Set() const;
    bool is_uuid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QDateTime m_completed_on;
    bool m_completed_on_isSet;
    bool m_completed_on_isValid;

    OAIPipeline_image m_image;
    bool m_image_isSet;
    bool m_image_isValid;

    QList<OAIPipeline_command> m_script_commands;
    bool m_script_commands_isSet;
    bool m_script_commands_isValid;

    QList<OAIPipeline_command> m_setup_commands;
    bool m_setup_commands_isSet;
    bool m_setup_commands_isValid;

    QDateTime m_started_on;
    bool m_started_on_isSet;
    bool m_started_on_isValid;

    OAIPipeline_step_state m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_uuid;
    bool m_uuid_isSet;
    bool m_uuid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPipeline_step)

#endif // OAIPipeline_step_H
