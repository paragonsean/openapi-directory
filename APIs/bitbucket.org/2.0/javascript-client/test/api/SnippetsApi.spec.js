/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BitbucketApi);
  }
}(this, function(expect, BitbucketApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BitbucketApi.SnippetsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SnippetsApi', function() {
    describe('snippetsGet', function() {
      it('should call snippetsGet successfully', function(done) {
        //uncomment below and update the code to test snippetsGet
        //instance.snippetsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snippetsPost', function() {
      it('should call snippetsPost successfully', function(done) {
        //uncomment below and update the code to test snippetsPost
        //instance.snippetsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snippetsWorkspaceEncodedIdCommentsCommentIdDelete', function() {
      it('should call snippetsWorkspaceEncodedIdCommentsCommentIdDelete successfully', function(done) {
        //uncomment below and update the code to test snippetsWorkspaceEncodedIdCommentsCommentIdDelete
        //instance.snippetsWorkspaceEncodedIdCommentsCommentIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snippetsWorkspaceEncodedIdCommentsCommentIdGet', function() {
      it('should call snippetsWorkspaceEncodedIdCommentsCommentIdGet successfully', function(done) {
        //uncomment below and update the code to test snippetsWorkspaceEncodedIdCommentsCommentIdGet
        //instance.snippetsWorkspaceEncodedIdCommentsCommentIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snippetsWorkspaceEncodedIdCommentsCommentIdPut', function() {
      it('should call snippetsWorkspaceEncodedIdCommentsCommentIdPut successfully', function(done) {
        //uncomment below and update the code to test snippetsWorkspaceEncodedIdCommentsCommentIdPut
        //instance.snippetsWorkspaceEncodedIdCommentsCommentIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snippetsWorkspaceEncodedIdCommentsGet', function() {
      it('should call snippetsWorkspaceEncodedIdCommentsGet successfully', function(done) {
        //uncomment below and update the code to test snippetsWorkspaceEncodedIdCommentsGet
        //instance.snippetsWorkspaceEncodedIdCommentsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snippetsWorkspaceEncodedIdCommentsPost', function() {
      it('should call snippetsWorkspaceEncodedIdCommentsPost successfully', function(done) {
        //uncomment below and update the code to test snippetsWorkspaceEncodedIdCommentsPost
        //instance.snippetsWorkspaceEncodedIdCommentsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snippetsWorkspaceEncodedIdCommitsGet', function() {
      it('should call snippetsWorkspaceEncodedIdCommitsGet successfully', function(done) {
        //uncomment below and update the code to test snippetsWorkspaceEncodedIdCommitsGet
        //instance.snippetsWorkspaceEncodedIdCommitsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snippetsWorkspaceEncodedIdCommitsRevisionGet', function() {
      it('should call snippetsWorkspaceEncodedIdCommitsRevisionGet successfully', function(done) {
        //uncomment below and update the code to test snippetsWorkspaceEncodedIdCommitsRevisionGet
        //instance.snippetsWorkspaceEncodedIdCommitsRevisionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snippetsWorkspaceEncodedIdDelete', function() {
      it('should call snippetsWorkspaceEncodedIdDelete successfully', function(done) {
        //uncomment below and update the code to test snippetsWorkspaceEncodedIdDelete
        //instance.snippetsWorkspaceEncodedIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snippetsWorkspaceEncodedIdFilesPathGet', function() {
      it('should call snippetsWorkspaceEncodedIdFilesPathGet successfully', function(done) {
        //uncomment below and update the code to test snippetsWorkspaceEncodedIdFilesPathGet
        //instance.snippetsWorkspaceEncodedIdFilesPathGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snippetsWorkspaceEncodedIdGet', function() {
      it('should call snippetsWorkspaceEncodedIdGet successfully', function(done) {
        //uncomment below and update the code to test snippetsWorkspaceEncodedIdGet
        //instance.snippetsWorkspaceEncodedIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snippetsWorkspaceEncodedIdNodeIdDelete', function() {
      it('should call snippetsWorkspaceEncodedIdNodeIdDelete successfully', function(done) {
        //uncomment below and update the code to test snippetsWorkspaceEncodedIdNodeIdDelete
        //instance.snippetsWorkspaceEncodedIdNodeIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snippetsWorkspaceEncodedIdNodeIdFilesPathGet', function() {
      it('should call snippetsWorkspaceEncodedIdNodeIdFilesPathGet successfully', function(done) {
        //uncomment below and update the code to test snippetsWorkspaceEncodedIdNodeIdFilesPathGet
        //instance.snippetsWorkspaceEncodedIdNodeIdFilesPathGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snippetsWorkspaceEncodedIdNodeIdGet', function() {
      it('should call snippetsWorkspaceEncodedIdNodeIdGet successfully', function(done) {
        //uncomment below and update the code to test snippetsWorkspaceEncodedIdNodeIdGet
        //instance.snippetsWorkspaceEncodedIdNodeIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snippetsWorkspaceEncodedIdNodeIdPut', function() {
      it('should call snippetsWorkspaceEncodedIdNodeIdPut successfully', function(done) {
        //uncomment below and update the code to test snippetsWorkspaceEncodedIdNodeIdPut
        //instance.snippetsWorkspaceEncodedIdNodeIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snippetsWorkspaceEncodedIdPut', function() {
      it('should call snippetsWorkspaceEncodedIdPut successfully', function(done) {
        //uncomment below and update the code to test snippetsWorkspaceEncodedIdPut
        //instance.snippetsWorkspaceEncodedIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snippetsWorkspaceEncodedIdRevisionDiffGet', function() {
      it('should call snippetsWorkspaceEncodedIdRevisionDiffGet successfully', function(done) {
        //uncomment below and update the code to test snippetsWorkspaceEncodedIdRevisionDiffGet
        //instance.snippetsWorkspaceEncodedIdRevisionDiffGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snippetsWorkspaceEncodedIdRevisionPatchGet', function() {
      it('should call snippetsWorkspaceEncodedIdRevisionPatchGet successfully', function(done) {
        //uncomment below and update the code to test snippetsWorkspaceEncodedIdRevisionPatchGet
        //instance.snippetsWorkspaceEncodedIdRevisionPatchGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snippetsWorkspaceEncodedIdWatchDelete', function() {
      it('should call snippetsWorkspaceEncodedIdWatchDelete successfully', function(done) {
        //uncomment below and update the code to test snippetsWorkspaceEncodedIdWatchDelete
        //instance.snippetsWorkspaceEncodedIdWatchDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snippetsWorkspaceEncodedIdWatchGet', function() {
      it('should call snippetsWorkspaceEncodedIdWatchGet successfully', function(done) {
        //uncomment below and update the code to test snippetsWorkspaceEncodedIdWatchGet
        //instance.snippetsWorkspaceEncodedIdWatchGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snippetsWorkspaceEncodedIdWatchPut', function() {
      it('should call snippetsWorkspaceEncodedIdWatchPut successfully', function(done) {
        //uncomment below and update the code to test snippetsWorkspaceEncodedIdWatchPut
        //instance.snippetsWorkspaceEncodedIdWatchPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snippetsWorkspaceEncodedIdWatchersGet', function() {
      it('should call snippetsWorkspaceEncodedIdWatchersGet successfully', function(done) {
        //uncomment below and update the code to test snippetsWorkspaceEncodedIdWatchersGet
        //instance.snippetsWorkspaceEncodedIdWatchersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snippetsWorkspaceGet', function() {
      it('should call snippetsWorkspaceGet successfully', function(done) {
        //uncomment below and update the code to test snippetsWorkspaceGet
        //instance.snippetsWorkspaceGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('snippetsWorkspacePost', function() {
      it('should call snippetsWorkspacePost successfully', function(done) {
        //uncomment below and update the code to test snippetsWorkspacePost
        //instance.snippetsWorkspacePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
