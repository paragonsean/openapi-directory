/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BitbucketApi);
  }
}(this, function(expect, BitbucketApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BitbucketApi.CommitsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CommitsApi', function() {
    describe('bulkCreateOrUpdateAnnotations_0', function() {
      it('should call bulkCreateOrUpdateAnnotations_0 successfully', function(done) {
        //uncomment below and update the code to test bulkCreateOrUpdateAnnotations_0
        //instance.bulkCreateOrUpdateAnnotations_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createOrUpdateAnnotation_0', function() {
      it('should call createOrUpdateAnnotation_0 successfully', function(done) {
        //uncomment below and update the code to test createOrUpdateAnnotation_0
        //instance.createOrUpdateAnnotation_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createOrUpdateReport_0', function() {
      it('should call createOrUpdateReport_0 successfully', function(done) {
        //uncomment below and update the code to test createOrUpdateReport_0
        //instance.createOrUpdateReport_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAnnotation_0', function() {
      it('should call deleteAnnotation_0 successfully', function(done) {
        //uncomment below and update the code to test deleteAnnotation_0
        //instance.deleteAnnotation_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteReport_0', function() {
      it('should call deleteReport_0 successfully', function(done) {
        //uncomment below and update the code to test deleteReport_0
        //instance.deleteReport_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAnnotation_0', function() {
      it('should call getAnnotation_0 successfully', function(done) {
        //uncomment below and update the code to test getAnnotation_0
        //instance.getAnnotation_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAnnotationsForReport_0', function() {
      it('should call getAnnotationsForReport_0 successfully', function(done) {
        //uncomment below and update the code to test getAnnotationsForReport_0
        //instance.getAnnotationsForReport_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReport_0', function() {
      it('should call getReport_0 successfully', function(done) {
        //uncomment below and update the code to test getReport_0
        //instance.getReport_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReportsForCommit_0', function() {
      it('should call getReportsForCommit_0 successfully', function(done) {
        //uncomment below and update the code to test getReportsForCommit_0
        //instance.getReportsForCommit_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugCommitCommitApproveDelete', function() {
      it('should call repositoriesWorkspaceRepoSlugCommitCommitApproveDelete successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugCommitCommitApproveDelete
        //instance.repositoriesWorkspaceRepoSlugCommitCommitApproveDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugCommitCommitApprovePost', function() {
      it('should call repositoriesWorkspaceRepoSlugCommitCommitApprovePost successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugCommitCommitApprovePost
        //instance.repositoriesWorkspaceRepoSlugCommitCommitApprovePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugCommitCommitCommentsCommentIdDelete', function() {
      it('should call repositoriesWorkspaceRepoSlugCommitCommitCommentsCommentIdDelete successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugCommitCommitCommentsCommentIdDelete
        //instance.repositoriesWorkspaceRepoSlugCommitCommitCommentsCommentIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugCommitCommitCommentsCommentIdGet', function() {
      it('should call repositoriesWorkspaceRepoSlugCommitCommitCommentsCommentIdGet successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugCommitCommitCommentsCommentIdGet
        //instance.repositoriesWorkspaceRepoSlugCommitCommitCommentsCommentIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugCommitCommitCommentsCommentIdPut', function() {
      it('should call repositoriesWorkspaceRepoSlugCommitCommitCommentsCommentIdPut successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugCommitCommitCommentsCommentIdPut
        //instance.repositoriesWorkspaceRepoSlugCommitCommitCommentsCommentIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugCommitCommitCommentsGet', function() {
      it('should call repositoriesWorkspaceRepoSlugCommitCommitCommentsGet successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugCommitCommitCommentsGet
        //instance.repositoriesWorkspaceRepoSlugCommitCommitCommentsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugCommitCommitCommentsPost', function() {
      it('should call repositoriesWorkspaceRepoSlugCommitCommitCommentsPost successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugCommitCommitCommentsPost
        //instance.repositoriesWorkspaceRepoSlugCommitCommitCommentsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugCommitCommitGet', function() {
      it('should call repositoriesWorkspaceRepoSlugCommitCommitGet successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugCommitCommitGet
        //instance.repositoriesWorkspaceRepoSlugCommitCommitGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugCommitsGet', function() {
      it('should call repositoriesWorkspaceRepoSlugCommitsGet successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugCommitsGet
        //instance.repositoriesWorkspaceRepoSlugCommitsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugCommitsPost', function() {
      it('should call repositoriesWorkspaceRepoSlugCommitsPost successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugCommitsPost
        //instance.repositoriesWorkspaceRepoSlugCommitsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugCommitsRevisionGet', function() {
      it('should call repositoriesWorkspaceRepoSlugCommitsRevisionGet successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugCommitsRevisionGet
        //instance.repositoriesWorkspaceRepoSlugCommitsRevisionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugCommitsRevisionPost', function() {
      it('should call repositoriesWorkspaceRepoSlugCommitsRevisionPost successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugCommitsRevisionPost
        //instance.repositoriesWorkspaceRepoSlugCommitsRevisionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugDiffSpecGet', function() {
      it('should call repositoriesWorkspaceRepoSlugDiffSpecGet successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugDiffSpecGet
        //instance.repositoriesWorkspaceRepoSlugDiffSpecGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugDiffstatSpecGet', function() {
      it('should call repositoriesWorkspaceRepoSlugDiffstatSpecGet successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugDiffstatSpecGet
        //instance.repositoriesWorkspaceRepoSlugDiffstatSpecGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugMergeBaseRevspecGet', function() {
      it('should call repositoriesWorkspaceRepoSlugMergeBaseRevspecGet successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugMergeBaseRevspecGet
        //instance.repositoriesWorkspaceRepoSlugMergeBaseRevspecGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugPatchSpecGet', function() {
      it('should call repositoriesWorkspaceRepoSlugPatchSpecGet successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugPatchSpecGet
        //instance.repositoriesWorkspaceRepoSlugPatchSpecGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
