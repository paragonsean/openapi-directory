/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BitbucketApi);
  }
}(this, function(expect, BitbucketApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BitbucketApi.RepositoriesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RepositoriesApi', function() {
    describe('repositoriesGet', function() {
      it('should call repositoriesGet successfully', function(done) {
        //uncomment below and update the code to test repositoriesGet
        //instance.repositoriesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceGet', function() {
      it('should call repositoriesWorkspaceGet successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceGet
        //instance.repositoriesWorkspaceGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugDelete', function() {
      it('should call repositoriesWorkspaceRepoSlugDelete successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugDelete
        //instance.repositoriesWorkspaceRepoSlugDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugFilehistoryCommitPathGet_0', function() {
      it('should call repositoriesWorkspaceRepoSlugFilehistoryCommitPathGet_0 successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugFilehistoryCommitPathGet_0
        //instance.repositoriesWorkspaceRepoSlugFilehistoryCommitPathGet_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugForksGet', function() {
      it('should call repositoriesWorkspaceRepoSlugForksGet successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugForksGet
        //instance.repositoriesWorkspaceRepoSlugForksGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugForksPost', function() {
      it('should call repositoriesWorkspaceRepoSlugForksPost successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugForksPost
        //instance.repositoriesWorkspaceRepoSlugForksPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugGet', function() {
      it('should call repositoriesWorkspaceRepoSlugGet successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugGet
        //instance.repositoriesWorkspaceRepoSlugGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugHooksGet', function() {
      it('should call repositoriesWorkspaceRepoSlugHooksGet successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugHooksGet
        //instance.repositoriesWorkspaceRepoSlugHooksGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugHooksPost', function() {
      it('should call repositoriesWorkspaceRepoSlugHooksPost successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugHooksPost
        //instance.repositoriesWorkspaceRepoSlugHooksPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugHooksUidDelete', function() {
      it('should call repositoriesWorkspaceRepoSlugHooksUidDelete successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugHooksUidDelete
        //instance.repositoriesWorkspaceRepoSlugHooksUidDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugHooksUidGet', function() {
      it('should call repositoriesWorkspaceRepoSlugHooksUidGet successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugHooksUidGet
        //instance.repositoriesWorkspaceRepoSlugHooksUidGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugHooksUidPut', function() {
      it('should call repositoriesWorkspaceRepoSlugHooksUidPut successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugHooksUidPut
        //instance.repositoriesWorkspaceRepoSlugHooksUidPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugOverrideSettingsGet', function() {
      it('should call repositoriesWorkspaceRepoSlugOverrideSettingsGet successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugOverrideSettingsGet
        //instance.repositoriesWorkspaceRepoSlugOverrideSettingsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugOverrideSettingsPut', function() {
      it('should call repositoriesWorkspaceRepoSlugOverrideSettingsPut successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugOverrideSettingsPut
        //instance.repositoriesWorkspaceRepoSlugOverrideSettingsPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugPermissionsConfigGroupsGet', function() {
      it('should call repositoriesWorkspaceRepoSlugPermissionsConfigGroupsGet successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugPermissionsConfigGroupsGet
        //instance.repositoriesWorkspaceRepoSlugPermissionsConfigGroupsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugPermissionsConfigGroupsGroupSlugDelete', function() {
      it('should call repositoriesWorkspaceRepoSlugPermissionsConfigGroupsGroupSlugDelete successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugPermissionsConfigGroupsGroupSlugDelete
        //instance.repositoriesWorkspaceRepoSlugPermissionsConfigGroupsGroupSlugDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugPermissionsConfigGroupsGroupSlugGet', function() {
      it('should call repositoriesWorkspaceRepoSlugPermissionsConfigGroupsGroupSlugGet successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugPermissionsConfigGroupsGroupSlugGet
        //instance.repositoriesWorkspaceRepoSlugPermissionsConfigGroupsGroupSlugGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugPermissionsConfigGroupsGroupSlugPut', function() {
      it('should call repositoriesWorkspaceRepoSlugPermissionsConfigGroupsGroupSlugPut successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugPermissionsConfigGroupsGroupSlugPut
        //instance.repositoriesWorkspaceRepoSlugPermissionsConfigGroupsGroupSlugPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugPermissionsConfigUsersGet', function() {
      it('should call repositoriesWorkspaceRepoSlugPermissionsConfigUsersGet successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugPermissionsConfigUsersGet
        //instance.repositoriesWorkspaceRepoSlugPermissionsConfigUsersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugPermissionsConfigUsersSelectedUserIdDelete', function() {
      it('should call repositoriesWorkspaceRepoSlugPermissionsConfigUsersSelectedUserIdDelete successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugPermissionsConfigUsersSelectedUserIdDelete
        //instance.repositoriesWorkspaceRepoSlugPermissionsConfigUsersSelectedUserIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugPermissionsConfigUsersSelectedUserIdGet', function() {
      it('should call repositoriesWorkspaceRepoSlugPermissionsConfigUsersSelectedUserIdGet successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugPermissionsConfigUsersSelectedUserIdGet
        //instance.repositoriesWorkspaceRepoSlugPermissionsConfigUsersSelectedUserIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugPermissionsConfigUsersSelectedUserIdPut', function() {
      it('should call repositoriesWorkspaceRepoSlugPermissionsConfigUsersSelectedUserIdPut successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugPermissionsConfigUsersSelectedUserIdPut
        //instance.repositoriesWorkspaceRepoSlugPermissionsConfigUsersSelectedUserIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugPost', function() {
      it('should call repositoriesWorkspaceRepoSlugPost successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugPost
        //instance.repositoriesWorkspaceRepoSlugPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugPut', function() {
      it('should call repositoriesWorkspaceRepoSlugPut successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugPut
        //instance.repositoriesWorkspaceRepoSlugPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugSrcCommitPathGet_0', function() {
      it('should call repositoriesWorkspaceRepoSlugSrcCommitPathGet_0 successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugSrcCommitPathGet_0
        //instance.repositoriesWorkspaceRepoSlugSrcCommitPathGet_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugSrcGet_0', function() {
      it('should call repositoriesWorkspaceRepoSlugSrcGet_0 successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugSrcGet_0
        //instance.repositoriesWorkspaceRepoSlugSrcGet_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugSrcPost_0', function() {
      it('should call repositoriesWorkspaceRepoSlugSrcPost_0 successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugSrcPost_0
        //instance.repositoriesWorkspaceRepoSlugSrcPost_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('repositoriesWorkspaceRepoSlugWatchersGet', function() {
      it('should call repositoriesWorkspaceRepoSlugWatchersGet successfully', function(done) {
        //uncomment below and update the code to test repositoriesWorkspaceRepoSlugWatchersGet
        //instance.repositoriesWorkspaceRepoSlugWatchersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPermissionsRepositoriesGet', function() {
      it('should call userPermissionsRepositoriesGet successfully', function(done) {
        //uncomment below and update the code to test userPermissionsRepositoriesGet
        //instance.userPermissionsRepositoriesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
