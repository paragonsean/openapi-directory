/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BitbucketApi);
  }
}(this, function(expect, BitbucketApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BitbucketApi.PipelinesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PipelinesApi', function() {
    describe('createDeploymentVariable', function() {
      it('should call createDeploymentVariable successfully', function(done) {
        //uncomment below and update the code to test createDeploymentVariable
        //instance.createDeploymentVariable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPipelineForRepository', function() {
      it('should call createPipelineForRepository successfully', function(done) {
        //uncomment below and update the code to test createPipelineForRepository
        //instance.createPipelineForRepository(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPipelineVariableForTeam', function() {
      it('should call createPipelineVariableForTeam successfully', function(done) {
        //uncomment below and update the code to test createPipelineVariableForTeam
        //instance.createPipelineVariableForTeam(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPipelineVariableForUser', function() {
      it('should call createPipelineVariableForUser successfully', function(done) {
        //uncomment below and update the code to test createPipelineVariableForUser
        //instance.createPipelineVariableForUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPipelineVariableForWorkspace', function() {
      it('should call createPipelineVariableForWorkspace successfully', function(done) {
        //uncomment below and update the code to test createPipelineVariableForWorkspace
        //instance.createPipelineVariableForWorkspace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createRepositoryPipelineKnownHost', function() {
      it('should call createRepositoryPipelineKnownHost successfully', function(done) {
        //uncomment below and update the code to test createRepositoryPipelineKnownHost
        //instance.createRepositoryPipelineKnownHost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createRepositoryPipelineSchedule', function() {
      it('should call createRepositoryPipelineSchedule successfully', function(done) {
        //uncomment below and update the code to test createRepositoryPipelineSchedule
        //instance.createRepositoryPipelineSchedule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createRepositoryPipelineVariable', function() {
      it('should call createRepositoryPipelineVariable successfully', function(done) {
        //uncomment below and update the code to test createRepositoryPipelineVariable
        //instance.createRepositoryPipelineVariable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDeploymentVariable', function() {
      it('should call deleteDeploymentVariable successfully', function(done) {
        //uncomment below and update the code to test deleteDeploymentVariable
        //instance.deleteDeploymentVariable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePipelineVariableForTeam', function() {
      it('should call deletePipelineVariableForTeam successfully', function(done) {
        //uncomment below and update the code to test deletePipelineVariableForTeam
        //instance.deletePipelineVariableForTeam(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePipelineVariableForUser', function() {
      it('should call deletePipelineVariableForUser successfully', function(done) {
        //uncomment below and update the code to test deletePipelineVariableForUser
        //instance.deletePipelineVariableForUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePipelineVariableForWorkspace', function() {
      it('should call deletePipelineVariableForWorkspace successfully', function(done) {
        //uncomment below and update the code to test deletePipelineVariableForWorkspace
        //instance.deletePipelineVariableForWorkspace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRepositoryPipelineCache', function() {
      it('should call deleteRepositoryPipelineCache successfully', function(done) {
        //uncomment below and update the code to test deleteRepositoryPipelineCache
        //instance.deleteRepositoryPipelineCache(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRepositoryPipelineCaches', function() {
      it('should call deleteRepositoryPipelineCaches successfully', function(done) {
        //uncomment below and update the code to test deleteRepositoryPipelineCaches
        //instance.deleteRepositoryPipelineCaches(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRepositoryPipelineKeyPair', function() {
      it('should call deleteRepositoryPipelineKeyPair successfully', function(done) {
        //uncomment below and update the code to test deleteRepositoryPipelineKeyPair
        //instance.deleteRepositoryPipelineKeyPair(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRepositoryPipelineKnownHost', function() {
      it('should call deleteRepositoryPipelineKnownHost successfully', function(done) {
        //uncomment below and update the code to test deleteRepositoryPipelineKnownHost
        //instance.deleteRepositoryPipelineKnownHost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRepositoryPipelineSchedule', function() {
      it('should call deleteRepositoryPipelineSchedule successfully', function(done) {
        //uncomment below and update the code to test deleteRepositoryPipelineSchedule
        //instance.deleteRepositoryPipelineSchedule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRepositoryPipelineVariable', function() {
      it('should call deleteRepositoryPipelineVariable successfully', function(done) {
        //uncomment below and update the code to test deleteRepositoryPipelineVariable
        //instance.deleteRepositoryPipelineVariable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeploymentVariables', function() {
      it('should call getDeploymentVariables successfully', function(done) {
        //uncomment below and update the code to test getDeploymentVariables
        //instance.getDeploymentVariables(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOIDCConfiguration', function() {
      it('should call getOIDCConfiguration successfully', function(done) {
        //uncomment below and update the code to test getOIDCConfiguration
        //instance.getOIDCConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOIDCKeys', function() {
      it('should call getOIDCKeys successfully', function(done) {
        //uncomment below and update the code to test getOIDCKeys
        //instance.getOIDCKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPipelineContainerLog', function() {
      it('should call getPipelineContainerLog successfully', function(done) {
        //uncomment below and update the code to test getPipelineContainerLog
        //instance.getPipelineContainerLog(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPipelineForRepository', function() {
      it('should call getPipelineForRepository successfully', function(done) {
        //uncomment below and update the code to test getPipelineForRepository
        //instance.getPipelineForRepository(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPipelineStepForRepository', function() {
      it('should call getPipelineStepForRepository successfully', function(done) {
        //uncomment below and update the code to test getPipelineStepForRepository
        //instance.getPipelineStepForRepository(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPipelineStepLogForRepository', function() {
      it('should call getPipelineStepLogForRepository successfully', function(done) {
        //uncomment below and update the code to test getPipelineStepLogForRepository
        //instance.getPipelineStepLogForRepository(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPipelineStepsForRepository', function() {
      it('should call getPipelineStepsForRepository successfully', function(done) {
        //uncomment below and update the code to test getPipelineStepsForRepository
        //instance.getPipelineStepsForRepository(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPipelineTestReportTestCaseReasons', function() {
      it('should call getPipelineTestReportTestCaseReasons successfully', function(done) {
        //uncomment below and update the code to test getPipelineTestReportTestCaseReasons
        //instance.getPipelineTestReportTestCaseReasons(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPipelineTestReportTestCases', function() {
      it('should call getPipelineTestReportTestCases successfully', function(done) {
        //uncomment below and update the code to test getPipelineTestReportTestCases
        //instance.getPipelineTestReportTestCases(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPipelineTestReports', function() {
      it('should call getPipelineTestReports successfully', function(done) {
        //uncomment below and update the code to test getPipelineTestReports
        //instance.getPipelineTestReports(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPipelineVariableForTeam', function() {
      it('should call getPipelineVariableForTeam successfully', function(done) {
        //uncomment below and update the code to test getPipelineVariableForTeam
        //instance.getPipelineVariableForTeam(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPipelineVariableForUser', function() {
      it('should call getPipelineVariableForUser successfully', function(done) {
        //uncomment below and update the code to test getPipelineVariableForUser
        //instance.getPipelineVariableForUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPipelineVariableForWorkspace', function() {
      it('should call getPipelineVariableForWorkspace successfully', function(done) {
        //uncomment below and update the code to test getPipelineVariableForWorkspace
        //instance.getPipelineVariableForWorkspace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPipelineVariablesForTeam', function() {
      it('should call getPipelineVariablesForTeam successfully', function(done) {
        //uncomment below and update the code to test getPipelineVariablesForTeam
        //instance.getPipelineVariablesForTeam(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPipelineVariablesForUser', function() {
      it('should call getPipelineVariablesForUser successfully', function(done) {
        //uncomment below and update the code to test getPipelineVariablesForUser
        //instance.getPipelineVariablesForUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPipelineVariablesForWorkspace', function() {
      it('should call getPipelineVariablesForWorkspace successfully', function(done) {
        //uncomment below and update the code to test getPipelineVariablesForWorkspace
        //instance.getPipelineVariablesForWorkspace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPipelinesForRepository', function() {
      it('should call getPipelinesForRepository successfully', function(done) {
        //uncomment below and update the code to test getPipelinesForRepository
        //instance.getPipelinesForRepository(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRepositoryPipelineCacheContentURI', function() {
      it('should call getRepositoryPipelineCacheContentURI successfully', function(done) {
        //uncomment below and update the code to test getRepositoryPipelineCacheContentURI
        //instance.getRepositoryPipelineCacheContentURI(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRepositoryPipelineCaches', function() {
      it('should call getRepositoryPipelineCaches successfully', function(done) {
        //uncomment below and update the code to test getRepositoryPipelineCaches
        //instance.getRepositoryPipelineCaches(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRepositoryPipelineConfig', function() {
      it('should call getRepositoryPipelineConfig successfully', function(done) {
        //uncomment below and update the code to test getRepositoryPipelineConfig
        //instance.getRepositoryPipelineConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRepositoryPipelineKnownHost', function() {
      it('should call getRepositoryPipelineKnownHost successfully', function(done) {
        //uncomment below and update the code to test getRepositoryPipelineKnownHost
        //instance.getRepositoryPipelineKnownHost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRepositoryPipelineKnownHosts', function() {
      it('should call getRepositoryPipelineKnownHosts successfully', function(done) {
        //uncomment below and update the code to test getRepositoryPipelineKnownHosts
        //instance.getRepositoryPipelineKnownHosts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRepositoryPipelineSchedule', function() {
      it('should call getRepositoryPipelineSchedule successfully', function(done) {
        //uncomment below and update the code to test getRepositoryPipelineSchedule
        //instance.getRepositoryPipelineSchedule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRepositoryPipelineScheduleExecutions', function() {
      it('should call getRepositoryPipelineScheduleExecutions successfully', function(done) {
        //uncomment below and update the code to test getRepositoryPipelineScheduleExecutions
        //instance.getRepositoryPipelineScheduleExecutions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRepositoryPipelineSchedules', function() {
      it('should call getRepositoryPipelineSchedules successfully', function(done) {
        //uncomment below and update the code to test getRepositoryPipelineSchedules
        //instance.getRepositoryPipelineSchedules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRepositoryPipelineSshKeyPair', function() {
      it('should call getRepositoryPipelineSshKeyPair successfully', function(done) {
        //uncomment below and update the code to test getRepositoryPipelineSshKeyPair
        //instance.getRepositoryPipelineSshKeyPair(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRepositoryPipelineVariable', function() {
      it('should call getRepositoryPipelineVariable successfully', function(done) {
        //uncomment below and update the code to test getRepositoryPipelineVariable
        //instance.getRepositoryPipelineVariable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRepositoryPipelineVariables', function() {
      it('should call getRepositoryPipelineVariables successfully', function(done) {
        //uncomment below and update the code to test getRepositoryPipelineVariables
        //instance.getRepositoryPipelineVariables(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopPipeline', function() {
      it('should call stopPipeline successfully', function(done) {
        //uncomment below and update the code to test stopPipeline
        //instance.stopPipeline(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDeploymentVariable', function() {
      it('should call updateDeploymentVariable successfully', function(done) {
        //uncomment below and update the code to test updateDeploymentVariable
        //instance.updateDeploymentVariable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePipelineVariableForTeam', function() {
      it('should call updatePipelineVariableForTeam successfully', function(done) {
        //uncomment below and update the code to test updatePipelineVariableForTeam
        //instance.updatePipelineVariableForTeam(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePipelineVariableForUser', function() {
      it('should call updatePipelineVariableForUser successfully', function(done) {
        //uncomment below and update the code to test updatePipelineVariableForUser
        //instance.updatePipelineVariableForUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePipelineVariableForWorkspace', function() {
      it('should call updatePipelineVariableForWorkspace successfully', function(done) {
        //uncomment below and update the code to test updatePipelineVariableForWorkspace
        //instance.updatePipelineVariableForWorkspace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRepositoryBuildNumber', function() {
      it('should call updateRepositoryBuildNumber successfully', function(done) {
        //uncomment below and update the code to test updateRepositoryBuildNumber
        //instance.updateRepositoryBuildNumber(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRepositoryPipelineConfig', function() {
      it('should call updateRepositoryPipelineConfig successfully', function(done) {
        //uncomment below and update the code to test updateRepositoryPipelineConfig
        //instance.updateRepositoryPipelineConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRepositoryPipelineKeyPair', function() {
      it('should call updateRepositoryPipelineKeyPair successfully', function(done) {
        //uncomment below and update the code to test updateRepositoryPipelineKeyPair
        //instance.updateRepositoryPipelineKeyPair(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRepositoryPipelineKnownHost', function() {
      it('should call updateRepositoryPipelineKnownHost successfully', function(done) {
        //uncomment below and update the code to test updateRepositoryPipelineKnownHost
        //instance.updateRepositoryPipelineKnownHost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRepositoryPipelineSchedule', function() {
      it('should call updateRepositoryPipelineSchedule successfully', function(done) {
        //uncomment below and update the code to test updateRepositoryPipelineSchedule
        //instance.updateRepositoryPipelineSchedule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRepositoryPipelineVariable', function() {
      it('should call updateRepositoryPipelineVariable successfully', function(done) {
        //uncomment below and update the code to test updateRepositoryPipelineVariable
        //instance.updateRepositoryPipelineVariable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
