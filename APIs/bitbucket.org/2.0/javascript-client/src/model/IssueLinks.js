/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Link from './Link';

/**
 * The IssueLinks model module.
 * @module model/IssueLinks
 * @version 2.0
 */
class IssueLinks {
    /**
     * Constructs a new <code>IssueLinks</code>.
     * @alias module:model/IssueLinks
     */
    constructor() { 
        
        IssueLinks.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IssueLinks</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IssueLinks} obj Optional instance to populate.
     * @return {module:model/IssueLinks} The populated <code>IssueLinks</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IssueLinks();

            if (data.hasOwnProperty('attachments')) {
                obj['attachments'] = Link.constructFromObject(data['attachments']);
            }
            if (data.hasOwnProperty('comments')) {
                obj['comments'] = Link.constructFromObject(data['comments']);
            }
            if (data.hasOwnProperty('html')) {
                obj['html'] = Link.constructFromObject(data['html']);
            }
            if (data.hasOwnProperty('self')) {
                obj['self'] = Link.constructFromObject(data['self']);
            }
            if (data.hasOwnProperty('vote')) {
                obj['vote'] = Link.constructFromObject(data['vote']);
            }
            if (data.hasOwnProperty('watch')) {
                obj['watch'] = Link.constructFromObject(data['watch']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IssueLinks</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IssueLinks</code>.
     */
    static validateJSON(data) {
        // validate the optional field `attachments`
        if (data['attachments']) { // data not null
          Link.validateJSON(data['attachments']);
        }
        // validate the optional field `comments`
        if (data['comments']) { // data not null
          Link.validateJSON(data['comments']);
        }
        // validate the optional field `html`
        if (data['html']) { // data not null
          Link.validateJSON(data['html']);
        }
        // validate the optional field `self`
        if (data['self']) { // data not null
          Link.validateJSON(data['self']);
        }
        // validate the optional field `vote`
        if (data['vote']) { // data not null
          Link.validateJSON(data['vote']);
        }
        // validate the optional field `watch`
        if (data['watch']) { // data not null
          Link.validateJSON(data['watch']);
        }

        return true;
    }


}



/**
 * @member {module:model/Link} attachments
 */
IssueLinks.prototype['attachments'] = undefined;

/**
 * @member {module:model/Link} comments
 */
IssueLinks.prototype['comments'] = undefined;

/**
 * @member {module:model/Link} html
 */
IssueLinks.prototype['html'] = undefined;

/**
 * @member {module:model/Link} self
 */
IssueLinks.prototype['self'] = undefined;

/**
 * @member {module:model/Link} vote
 */
IssueLinks.prototype['vote'] = undefined;

/**
 * @member {module:model/Link} watch
 */
IssueLinks.prototype['watch'] = undefined;






export default IssueLinks;

