/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PullrequestMergeParameters model module.
 * @module model/PullrequestMergeParameters
 * @version 2.0
 */
class PullrequestMergeParameters {
    /**
     * Constructs a new <code>PullrequestMergeParameters</code>.
     * The metadata that describes a pull request merge.
     * @alias module:model/PullrequestMergeParameters
     * @extends Object
     * @param type {String} 
     */
    constructor(type) { 
        
        PullrequestMergeParameters.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
        obj['merge_strategy'] = 'merge_commit';
        obj['type'] = type;
    }

    /**
     * Constructs a <code>PullrequestMergeParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PullrequestMergeParameters} obj Optional instance to populate.
     * @return {module:model/PullrequestMergeParameters} The populated <code>PullrequestMergeParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PullrequestMergeParameters();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('close_source_branch')) {
                obj['close_source_branch'] = ApiClient.convertToType(data['close_source_branch'], 'Boolean');
            }
            if (data.hasOwnProperty('merge_strategy')) {
                obj['merge_strategy'] = ApiClient.convertToType(data['merge_strategy'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PullrequestMergeParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PullrequestMergeParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PullrequestMergeParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['merge_strategy'] && !(typeof data['merge_strategy'] === 'string' || data['merge_strategy'] instanceof String)) {
            throw new Error("Expected the field `merge_strategy` to be a primitive type in the JSON string but got " + data['merge_strategy']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

PullrequestMergeParameters.RequiredProperties = ["type"];

/**
 * Whether the source branch should be deleted. If this is not provided, we fallback to the value used when the pull request was created, which defaults to False
 * @member {Boolean} close_source_branch
 */
PullrequestMergeParameters.prototype['close_source_branch'] = undefined;

/**
 * The merge strategy that will be used to merge the pull request.
 * @member {module:model/PullrequestMergeParameters.MergeStrategyEnum} merge_strategy
 * @default 'merge_commit'
 */
PullrequestMergeParameters.prototype['merge_strategy'] = 'merge_commit';

/**
 * The commit message that will be used on the resulting commit.
 * @member {String} message
 */
PullrequestMergeParameters.prototype['message'] = undefined;

/**
 * @member {String} type
 */
PullrequestMergeParameters.prototype['type'] = undefined;





/**
 * Allowed values for the <code>merge_strategy</code> property.
 * @enum {String}
 * @readonly
 */
PullrequestMergeParameters['MergeStrategyEnum'] = {

    /**
     * value: "merge_commit"
     * @const
     */
    "merge_commit": "merge_commit",

    /**
     * value: "squash"
     * @const
     */
    "squash": "squash",

    /**
     * value: "fast_forward"
     * @const
     */
    "fast_forward": "fast_forward"
};



export default PullrequestMergeParameters;

