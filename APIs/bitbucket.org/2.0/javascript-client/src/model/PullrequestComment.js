/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Account from './Account';
import BaseCommitSummary from './BaseCommitSummary';
import Comment from './Comment';
import CommentInline from './CommentInline';
import CommentLinks from './CommentLinks';
import Pullrequest from './Pullrequest';

/**
 * The PullrequestComment model module.
 * @module model/PullrequestComment
 * @version 2.0
 */
class PullrequestComment {
    /**
     * Constructs a new <code>PullrequestComment</code>.
     * @alias module:model/PullrequestComment
     * @extends module:model/Comment
     * @implements module:model/Comment
     * @param type {String} 
     */
    constructor(type) { 
        Comment.initialize(this, type);
        PullrequestComment.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
    }

    /**
     * Constructs a <code>PullrequestComment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PullrequestComment} obj Optional instance to populate.
     * @return {module:model/PullrequestComment} The populated <code>PullrequestComment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PullrequestComment();
            Comment.constructFromObject(data, obj);
            Comment.constructFromObject(data, obj);

            if (data.hasOwnProperty('pullrequest')) {
                obj['pullrequest'] = Pullrequest.constructFromObject(data['pullrequest']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PullrequestComment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PullrequestComment</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PullrequestComment.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `pullrequest`
        if (data['pullrequest']) { // data not null
          Pullrequest.validateJSON(data['pullrequest']);
        }

        return true;
    }


}

PullrequestComment.RequiredProperties = ["type"];

/**
 * @member {module:model/Pullrequest} pullrequest
 */
PullrequestComment.prototype['pullrequest'] = undefined;


// Implement Comment interface:
/**
 * @member {String} type
 */
Comment.prototype['type'] = undefined;
/**
 * @member {module:model/BaseCommitSummary} content
 */
Comment.prototype['content'] = undefined;
/**
 * @member {Date} created_on
 */
Comment.prototype['created_on'] = undefined;
/**
 * @member {Boolean} deleted
 */
Comment.prototype['deleted'] = undefined;
/**
 * @member {Number} id
 */
Comment.prototype['id'] = undefined;
/**
 * @member {module:model/CommentInline} inline
 */
Comment.prototype['inline'] = undefined;
/**
 * @member {module:model/CommentLinks} links
 */
Comment.prototype['links'] = undefined;
/**
 * @member {module:model/Comment} parent
 */
Comment.prototype['parent'] = undefined;
/**
 * @member {Date} updated_on
 */
Comment.prototype['updated_on'] = undefined;
/**
 * @member {module:model/Account} user
 */
Comment.prototype['user'] = undefined;




export default PullrequestComment;

