/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SearchSegment from './SearchSegment';

/**
 * The SearchLine model module.
 * @module model/SearchLine
 * @version 2.0
 */
class SearchLine {
    /**
     * Constructs a new <code>SearchLine</code>.
     * @alias module:model/SearchLine
     */
    constructor() { 
        
        SearchLine.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SearchLine</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchLine} obj Optional instance to populate.
     * @return {module:model/SearchLine} The populated <code>SearchLine</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchLine();

            if (data.hasOwnProperty('line')) {
                obj['line'] = ApiClient.convertToType(data['line'], 'Number');
            }
            if (data.hasOwnProperty('segments')) {
                obj['segments'] = ApiClient.convertToType(data['segments'], [SearchSegment]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchLine</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchLine</code>.
     */
    static validateJSON(data) {
        if (data['segments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['segments'])) {
                throw new Error("Expected the field `segments` to be an array in the JSON data but got " + data['segments']);
            }
            // validate the optional field `segments` (array)
            for (const item of data['segments']) {
                SearchSegment.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Number} line
 */
SearchLine.prototype['line'] = undefined;

/**
 * @member {Array.<module:model/SearchSegment>} segments
 */
SearchLine.prototype['segments'] = undefined;






export default SearchLine;

