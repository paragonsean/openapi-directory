/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Account from './model/Account';
import AccountLinks from './model/AccountLinks';
import AppUser from './model/AppUser';
import ApplicationProperty from './model/ApplicationProperty';
import Author from './model/Author';
import BaseCommit from './model/BaseCommit';
import BaseCommitSummary from './model/BaseCommitSummary';
import Branch from './model/Branch';
import BranchingModel from './model/BranchingModel';
import BranchingModelBranchTypes from './model/BranchingModelBranchTypes';
import BranchingModelDevelopment from './model/BranchingModelDevelopment';
import BranchingModelSettings from './model/BranchingModelSettings';
import BranchingModelSettingsBranchTypes from './model/BranchingModelSettingsBranchTypes';
import BranchingModelSettingsDevelopment from './model/BranchingModelSettingsDevelopment';
import BranchingModelSettingsLinks from './model/BranchingModelSettingsLinks';
import BranchingModelSettingsProduction from './model/BranchingModelSettingsProduction';
import Branchrestriction from './model/Branchrestriction';
import Comment from './model/Comment';
import CommentInline from './model/CommentInline';
import CommentLinks from './model/CommentLinks';
import CommentResolution from './model/CommentResolution';
import Commit from './model/Commit';
import CommitComment from './model/CommitComment';
import CommitFile from './model/CommitFile';
import CommitStatusLinks from './model/CommitStatusLinks';
import Commitstatus from './model/Commitstatus';
import Component from './model/Component';
import DdevReport from './model/DdevReport';
import DefaultReviewerAndType from './model/DefaultReviewerAndType';
import DeployKey from './model/DeployKey';
import Deployment from './model/Deployment';
import DeploymentEnvironment from './model/DeploymentEnvironment';
import DeploymentEnvironmentLock from './model/DeploymentEnvironmentLock';
import DeploymentRelease from './model/DeploymentRelease';
import DeploymentState from './model/DeploymentState';
import DeploymentStateCompleted from './model/DeploymentStateCompleted';
import DeploymentStateCompletedStatus from './model/DeploymentStateCompletedStatus';
import DeploymentStateCompletedStatusFailed from './model/DeploymentStateCompletedStatusFailed';
import DeploymentStateCompletedStatusStopped from './model/DeploymentStateCompletedStatusStopped';
import DeploymentStateCompletedStatusSuccessful from './model/DeploymentStateCompletedStatusSuccessful';
import DeploymentStateInProgress from './model/DeploymentStateInProgress';
import DeploymentStateUndeployed from './model/DeploymentStateUndeployed';
import DeploymentVariable from './model/DeploymentVariable';
import DeploymentsDdevDeploymentEnvironment from './model/DeploymentsDdevDeploymentEnvironment';
import DeploymentsDdevDeploymentEnvironmentLock from './model/DeploymentsDdevDeploymentEnvironmentLock';
import DeploymentsDdevPaginatedEnvironments from './model/DeploymentsDdevPaginatedEnvironments';
import DeploymentsStgWestDeploymentEnvironment from './model/DeploymentsStgWestDeploymentEnvironment';
import DeploymentsStgWestDeploymentEnvironmentLock from './model/DeploymentsStgWestDeploymentEnvironmentLock';
import DeploymentsStgWestPaginatedEnvironments from './model/DeploymentsStgWestPaginatedEnvironments';
import Diffstat from './model/Diffstat';
import EffectiveRepoBranchingModel from './model/EffectiveRepoBranchingModel';
import Error from './model/Error';
import ErrorError from './model/ErrorError';
import ExportOptions from './model/ExportOptions';
import Group from './model/Group';
import GroupLinks from './model/GroupLinks';
import HookEvent from './model/HookEvent';
import Issue from './model/Issue';
import IssueAttachment from './model/IssueAttachment';
import IssueChange from './model/IssueChange';
import IssueChangeChanges from './model/IssueChangeChanges';
import IssueChangeChangesAssignee from './model/IssueChangeChangesAssignee';
import IssueChangeLinks from './model/IssueChangeLinks';
import IssueChangeMessage from './model/IssueChangeMessage';
import IssueComment from './model/IssueComment';
import IssueJobStatus from './model/IssueJobStatus';
import IssueLinks from './model/IssueLinks';
import JiraProject from './model/JiraProject';
import JiraSite from './model/JiraSite';
import Link from './model/Link';
import Link1 from './model/Link1';
import Milestone from './model/Milestone';
import ModelObject from './model/ModelObject';
import Page from './model/Page';
import PaginatedAccounts from './model/PaginatedAccounts';
import PaginatedAnnotations from './model/PaginatedAnnotations';
import PaginatedBranches from './model/PaginatedBranches';
import PaginatedBranchrestrictions from './model/PaginatedBranchrestrictions';
import PaginatedChangeset from './model/PaginatedChangeset';
import PaginatedCommitComments from './model/PaginatedCommitComments';
import PaginatedCommitstatuses from './model/PaginatedCommitstatuses';
import PaginatedComponents from './model/PaginatedComponents';
import PaginatedDefaultReviewerAndType from './model/PaginatedDefaultReviewerAndType';
import PaginatedDeployKeys from './model/PaginatedDeployKeys';
import PaginatedDeploymentVariable from './model/PaginatedDeploymentVariable';
import PaginatedDeployments from './model/PaginatedDeployments';
import PaginatedDiffstats from './model/PaginatedDiffstats';
import PaginatedEnvironments from './model/PaginatedEnvironments';
import PaginatedFiles from './model/PaginatedFiles';
import PaginatedHookEvents from './model/PaginatedHookEvents';
import PaginatedIssueAttachments from './model/PaginatedIssueAttachments';
import PaginatedIssueComments from './model/PaginatedIssueComments';
import PaginatedIssues from './model/PaginatedIssues';
import PaginatedLogEntries from './model/PaginatedLogEntries';
import PaginatedMilestones from './model/PaginatedMilestones';
import PaginatedPipelineCaches from './model/PaginatedPipelineCaches';
import PaginatedPipelineKnownHosts from './model/PaginatedPipelineKnownHosts';
import PaginatedPipelineScheduleExecutions from './model/PaginatedPipelineScheduleExecutions';
import PaginatedPipelineSchedules from './model/PaginatedPipelineSchedules';
import PaginatedPipelineSteps from './model/PaginatedPipelineSteps';
import PaginatedPipelineVariables from './model/PaginatedPipelineVariables';
import PaginatedPipelines from './model/PaginatedPipelines';
import PaginatedProjectDeployKeys from './model/PaginatedProjectDeployKeys';
import PaginatedProjects from './model/PaginatedProjects';
import PaginatedPullrequestComments from './model/PaginatedPullrequestComments';
import PaginatedPullrequests from './model/PaginatedPullrequests';
import PaginatedRefs from './model/PaginatedRefs';
import PaginatedReports from './model/PaginatedReports';
import PaginatedRepositories from './model/PaginatedRepositories';
import PaginatedRepositoryGroupPermissions from './model/PaginatedRepositoryGroupPermissions';
import PaginatedRepositoryPermissions from './model/PaginatedRepositoryPermissions';
import PaginatedRepositoryUserPermissions from './model/PaginatedRepositoryUserPermissions';
import PaginatedSnippetComments from './model/PaginatedSnippetComments';
import PaginatedSnippetCommit from './model/PaginatedSnippetCommit';
import PaginatedSnippets from './model/PaginatedSnippets';
import PaginatedSshUserKeys from './model/PaginatedSshUserKeys';
import PaginatedTags from './model/PaginatedTags';
import PaginatedTreeentries from './model/PaginatedTreeentries';
import PaginatedVersions from './model/PaginatedVersions';
import PaginatedWebhookSubscriptions from './model/PaginatedWebhookSubscriptions';
import PaginatedWorkspaceMemberships from './model/PaginatedWorkspaceMemberships';
import PaginatedWorkspaces from './model/PaginatedWorkspaces';
import Participant from './model/Participant';
import Pipeline from './model/Pipeline';
import PipelineBuildNumber from './model/PipelineBuildNumber';
import PipelineCache from './model/PipelineCache';
import PipelineCacheContentUri from './model/PipelineCacheContentUri';
import PipelineCommand from './model/PipelineCommand';
import PipelineCommitTarget from './model/PipelineCommitTarget';
import PipelineError from './model/PipelineError';
import PipelineImage from './model/PipelineImage';
import PipelineKnownHost from './model/PipelineKnownHost';
import PipelineRefTarget from './model/PipelineRefTarget';
import PipelineSchedule from './model/PipelineSchedule';
import PipelineScheduleExecution from './model/PipelineScheduleExecution';
import PipelineScheduleExecutionErrored from './model/PipelineScheduleExecutionErrored';
import PipelineScheduleExecutionExecuted from './model/PipelineScheduleExecutionExecuted';
import PipelineSchedulePostRequestBody from './model/PipelineSchedulePostRequestBody';
import PipelineSchedulePutRequestBody from './model/PipelineSchedulePutRequestBody';
import PipelineSelector from './model/PipelineSelector';
import PipelineSshKeyPair from './model/PipelineSshKeyPair';
import PipelineSshPublicKey from './model/PipelineSshPublicKey';
import PipelineState from './model/PipelineState';
import PipelineStateCompleted from './model/PipelineStateCompleted';
import PipelineStateCompletedError from './model/PipelineStateCompletedError';
import PipelineStateCompletedExpired from './model/PipelineStateCompletedExpired';
import PipelineStateCompletedFailed from './model/PipelineStateCompletedFailed';
import PipelineStateCompletedResult from './model/PipelineStateCompletedResult';
import PipelineStateCompletedStopped from './model/PipelineStateCompletedStopped';
import PipelineStateCompletedSuccessful from './model/PipelineStateCompletedSuccessful';
import PipelineStateInProgress from './model/PipelineStateInProgress';
import PipelineStateInProgressPaused from './model/PipelineStateInProgressPaused';
import PipelineStateInProgressRunning from './model/PipelineStateInProgressRunning';
import PipelineStateInProgressStage from './model/PipelineStateInProgressStage';
import PipelineStatePending from './model/PipelineStatePending';
import PipelineStep from './model/PipelineStep';
import PipelineStepError from './model/PipelineStepError';
import PipelineStepState from './model/PipelineStepState';
import PipelineStepStateCompleted from './model/PipelineStepStateCompleted';
import PipelineStepStateCompletedError from './model/PipelineStepStateCompletedError';
import PipelineStepStateCompletedExpired from './model/PipelineStepStateCompletedExpired';
import PipelineStepStateCompletedFailed from './model/PipelineStepStateCompletedFailed';
import PipelineStepStateCompletedNotRun from './model/PipelineStepStateCompletedNotRun';
import PipelineStepStateCompletedResult from './model/PipelineStepStateCompletedResult';
import PipelineStepStateCompletedStopped from './model/PipelineStepStateCompletedStopped';
import PipelineStepStateCompletedSuccessful from './model/PipelineStepStateCompletedSuccessful';
import PipelineStepStateInProgress from './model/PipelineStepStateInProgress';
import PipelineStepStatePending from './model/PipelineStepStatePending';
import PipelineStepStateReady from './model/PipelineStepStateReady';
import PipelineTarget from './model/PipelineTarget';
import PipelineTrigger from './model/PipelineTrigger';
import PipelineTriggerManual from './model/PipelineTriggerManual';
import PipelineTriggerPush from './model/PipelineTriggerPush';
import PipelineVariable from './model/PipelineVariable';
import PipelinesConfig from './model/PipelinesConfig';
import PipelinesDdevPipelineStep from './model/PipelinesDdevPipelineStep';
import PipelinesStgWestPipelineStep from './model/PipelinesStgWestPipelineStep';
import Project from './model/Project';
import ProjectBranchingModel from './model/ProjectBranchingModel';
import ProjectBranchingModelDevelopment from './model/ProjectBranchingModelDevelopment';
import ProjectDeployKey from './model/ProjectDeployKey';
import ProjectLinks from './model/ProjectLinks';
import PullRequestBranch from './model/PullRequestBranch';
import PullRequestCommit from './model/PullRequestCommit';
import PullRequestCommit1 from './model/PullRequestCommit1';
import PullRequestLinks from './model/PullRequestLinks';
import Pullrequest from './model/Pullrequest';
import PullrequestComment from './model/PullrequestComment';
import PullrequestEndpoint from './model/PullrequestEndpoint';
import PullrequestMergeParameters from './model/PullrequestMergeParameters';
import Ref from './model/Ref';
import RefLinks from './model/RefLinks';
import RenderedPullRequestMarkup from './model/RenderedPullRequestMarkup';
import Report from './model/Report';
import ReportAnnotation from './model/ReportAnnotation';
import ReportData from './model/ReportData';
import Repository from './model/Repository';
import RepositoryGroupPermission from './model/RepositoryGroupPermission';
import RepositoryGroupPermissionLinks from './model/RepositoryGroupPermissionLinks';
import RepositoryInheritanceState from './model/RepositoryInheritanceState';
import RepositoryLinks from './model/RepositoryLinks';
import RepositoryPermission from './model/RepositoryPermission';
import RepositoryUserPermission from './model/RepositoryUserPermission';
import RequestBodyForPipelineSchedulePOSTRequestTarget from './model/RequestBodyForPipelineSchedulePOSTRequestTarget';
import SearchCodeSearchResult from './model/SearchCodeSearchResult';
import SearchContentMatch from './model/SearchContentMatch';
import SearchLine from './model/SearchLine';
import SearchResultPage from './model/SearchResultPage';
import SearchSegment from './model/SearchSegment';
import Snippet from './model/Snippet';
import SnippetComment from './model/SnippetComment';
import SnippetCommit from './model/SnippetCommit';
import SnippetCommitLinks from './model/SnippetCommitLinks';
import SshAccountKey from './model/SshAccountKey';
import SshKey from './model/SshKey';
import StgWestReport from './model/StgWestReport';
import SubjectTypes from './model/SubjectTypes';
import SubjectTypesRepository from './model/SubjectTypesRepository';
import Tag from './model/Tag';
import Team from './model/Team';
import TeamLinks from './model/TeamLinks';
import Treeentry from './model/Treeentry';
import User from './model/User';
import UserLinks from './model/UserLinks';
import Version from './model/Version';
import WebhookSubscription from './model/WebhookSubscription';
import Workspace from './model/Workspace';
import WorkspaceLinks from './model/WorkspaceLinks';
import WorkspaceMembership from './model/WorkspaceMembership';
import AddonApi from './api/AddonApi';
import BranchRestrictionsApi from './api/BranchRestrictionsApi';
import BranchingModelApi from './api/BranchingModelApi';
import CommitStatusesApi from './api/CommitStatusesApi';
import CommitsApi from './api/CommitsApi';
import DeploymentsApi from './api/DeploymentsApi';
import DownloadsApi from './api/DownloadsApi';
import IssueTrackerApi from './api/IssueTrackerApi';
import PipelinesApi from './api/PipelinesApi';
import ProjectsApi from './api/ProjectsApi';
import PropertiesApi from './api/PropertiesApi';
import PullrequestsApi from './api/PullrequestsApi';
import RefsApi from './api/RefsApi';
import ReportsApi from './api/ReportsApi';
import RepositoriesApi from './api/RepositoriesApi';
import SearchApi from './api/SearchApi';
import SnippetsApi from './api/SnippetsApi';
import SourceApi from './api/SourceApi';
import SshApi from './api/SshApi';
import UsersApi from './api/UsersApi';
import WebhooksApi from './api/WebhooksApi';
import WorkspacesApi from './api/WorkspacesApi';


/**
* Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var BitbucketApi = require('index'); // See note below*.
* var xxxSvc = new BitbucketApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new BitbucketApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new BitbucketApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new BitbucketApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Account model constructor.
     * @property {module:model/Account}
     */
    Account,

    /**
     * The AccountLinks model constructor.
     * @property {module:model/AccountLinks}
     */
    AccountLinks,

    /**
     * The AppUser model constructor.
     * @property {module:model/AppUser}
     */
    AppUser,

    /**
     * The ApplicationProperty model constructor.
     * @property {module:model/ApplicationProperty}
     */
    ApplicationProperty,

    /**
     * The Author model constructor.
     * @property {module:model/Author}
     */
    Author,

    /**
     * The BaseCommit model constructor.
     * @property {module:model/BaseCommit}
     */
    BaseCommit,

    /**
     * The BaseCommitSummary model constructor.
     * @property {module:model/BaseCommitSummary}
     */
    BaseCommitSummary,

    /**
     * The Branch model constructor.
     * @property {module:model/Branch}
     */
    Branch,

    /**
     * The BranchingModel model constructor.
     * @property {module:model/BranchingModel}
     */
    BranchingModel,

    /**
     * The BranchingModelBranchTypes model constructor.
     * @property {module:model/BranchingModelBranchTypes}
     */
    BranchingModelBranchTypes,

    /**
     * The BranchingModelDevelopment model constructor.
     * @property {module:model/BranchingModelDevelopment}
     */
    BranchingModelDevelopment,

    /**
     * The BranchingModelSettings model constructor.
     * @property {module:model/BranchingModelSettings}
     */
    BranchingModelSettings,

    /**
     * The BranchingModelSettingsBranchTypes model constructor.
     * @property {module:model/BranchingModelSettingsBranchTypes}
     */
    BranchingModelSettingsBranchTypes,

    /**
     * The BranchingModelSettingsDevelopment model constructor.
     * @property {module:model/BranchingModelSettingsDevelopment}
     */
    BranchingModelSettingsDevelopment,

    /**
     * The BranchingModelSettingsLinks model constructor.
     * @property {module:model/BranchingModelSettingsLinks}
     */
    BranchingModelSettingsLinks,

    /**
     * The BranchingModelSettingsProduction model constructor.
     * @property {module:model/BranchingModelSettingsProduction}
     */
    BranchingModelSettingsProduction,

    /**
     * The Branchrestriction model constructor.
     * @property {module:model/Branchrestriction}
     */
    Branchrestriction,

    /**
     * The Comment model constructor.
     * @property {module:model/Comment}
     */
    Comment,

    /**
     * The CommentInline model constructor.
     * @property {module:model/CommentInline}
     */
    CommentInline,

    /**
     * The CommentLinks model constructor.
     * @property {module:model/CommentLinks}
     */
    CommentLinks,

    /**
     * The CommentResolution model constructor.
     * @property {module:model/CommentResolution}
     */
    CommentResolution,

    /**
     * The Commit model constructor.
     * @property {module:model/Commit}
     */
    Commit,

    /**
     * The CommitComment model constructor.
     * @property {module:model/CommitComment}
     */
    CommitComment,

    /**
     * The CommitFile model constructor.
     * @property {module:model/CommitFile}
     */
    CommitFile,

    /**
     * The CommitStatusLinks model constructor.
     * @property {module:model/CommitStatusLinks}
     */
    CommitStatusLinks,

    /**
     * The Commitstatus model constructor.
     * @property {module:model/Commitstatus}
     */
    Commitstatus,

    /**
     * The Component model constructor.
     * @property {module:model/Component}
     */
    Component,

    /**
     * The DdevReport model constructor.
     * @property {module:model/DdevReport}
     */
    DdevReport,

    /**
     * The DefaultReviewerAndType model constructor.
     * @property {module:model/DefaultReviewerAndType}
     */
    DefaultReviewerAndType,

    /**
     * The DeployKey model constructor.
     * @property {module:model/DeployKey}
     */
    DeployKey,

    /**
     * The Deployment model constructor.
     * @property {module:model/Deployment}
     */
    Deployment,

    /**
     * The DeploymentEnvironment model constructor.
     * @property {module:model/DeploymentEnvironment}
     */
    DeploymentEnvironment,

    /**
     * The DeploymentEnvironmentLock model constructor.
     * @property {module:model/DeploymentEnvironmentLock}
     */
    DeploymentEnvironmentLock,

    /**
     * The DeploymentRelease model constructor.
     * @property {module:model/DeploymentRelease}
     */
    DeploymentRelease,

    /**
     * The DeploymentState model constructor.
     * @property {module:model/DeploymentState}
     */
    DeploymentState,

    /**
     * The DeploymentStateCompleted model constructor.
     * @property {module:model/DeploymentStateCompleted}
     */
    DeploymentStateCompleted,

    /**
     * The DeploymentStateCompletedStatus model constructor.
     * @property {module:model/DeploymentStateCompletedStatus}
     */
    DeploymentStateCompletedStatus,

    /**
     * The DeploymentStateCompletedStatusFailed model constructor.
     * @property {module:model/DeploymentStateCompletedStatusFailed}
     */
    DeploymentStateCompletedStatusFailed,

    /**
     * The DeploymentStateCompletedStatusStopped model constructor.
     * @property {module:model/DeploymentStateCompletedStatusStopped}
     */
    DeploymentStateCompletedStatusStopped,

    /**
     * The DeploymentStateCompletedStatusSuccessful model constructor.
     * @property {module:model/DeploymentStateCompletedStatusSuccessful}
     */
    DeploymentStateCompletedStatusSuccessful,

    /**
     * The DeploymentStateInProgress model constructor.
     * @property {module:model/DeploymentStateInProgress}
     */
    DeploymentStateInProgress,

    /**
     * The DeploymentStateUndeployed model constructor.
     * @property {module:model/DeploymentStateUndeployed}
     */
    DeploymentStateUndeployed,

    /**
     * The DeploymentVariable model constructor.
     * @property {module:model/DeploymentVariable}
     */
    DeploymentVariable,

    /**
     * The DeploymentsDdevDeploymentEnvironment model constructor.
     * @property {module:model/DeploymentsDdevDeploymentEnvironment}
     */
    DeploymentsDdevDeploymentEnvironment,

    /**
     * The DeploymentsDdevDeploymentEnvironmentLock model constructor.
     * @property {module:model/DeploymentsDdevDeploymentEnvironmentLock}
     */
    DeploymentsDdevDeploymentEnvironmentLock,

    /**
     * The DeploymentsDdevPaginatedEnvironments model constructor.
     * @property {module:model/DeploymentsDdevPaginatedEnvironments}
     */
    DeploymentsDdevPaginatedEnvironments,

    /**
     * The DeploymentsStgWestDeploymentEnvironment model constructor.
     * @property {module:model/DeploymentsStgWestDeploymentEnvironment}
     */
    DeploymentsStgWestDeploymentEnvironment,

    /**
     * The DeploymentsStgWestDeploymentEnvironmentLock model constructor.
     * @property {module:model/DeploymentsStgWestDeploymentEnvironmentLock}
     */
    DeploymentsStgWestDeploymentEnvironmentLock,

    /**
     * The DeploymentsStgWestPaginatedEnvironments model constructor.
     * @property {module:model/DeploymentsStgWestPaginatedEnvironments}
     */
    DeploymentsStgWestPaginatedEnvironments,

    /**
     * The Diffstat model constructor.
     * @property {module:model/Diffstat}
     */
    Diffstat,

    /**
     * The EffectiveRepoBranchingModel model constructor.
     * @property {module:model/EffectiveRepoBranchingModel}
     */
    EffectiveRepoBranchingModel,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The ErrorError model constructor.
     * @property {module:model/ErrorError}
     */
    ErrorError,

    /**
     * The ExportOptions model constructor.
     * @property {module:model/ExportOptions}
     */
    ExportOptions,

    /**
     * The Group model constructor.
     * @property {module:model/Group}
     */
    Group,

    /**
     * The GroupLinks model constructor.
     * @property {module:model/GroupLinks}
     */
    GroupLinks,

    /**
     * The HookEvent model constructor.
     * @property {module:model/HookEvent}
     */
    HookEvent,

    /**
     * The Issue model constructor.
     * @property {module:model/Issue}
     */
    Issue,

    /**
     * The IssueAttachment model constructor.
     * @property {module:model/IssueAttachment}
     */
    IssueAttachment,

    /**
     * The IssueChange model constructor.
     * @property {module:model/IssueChange}
     */
    IssueChange,

    /**
     * The IssueChangeChanges model constructor.
     * @property {module:model/IssueChangeChanges}
     */
    IssueChangeChanges,

    /**
     * The IssueChangeChangesAssignee model constructor.
     * @property {module:model/IssueChangeChangesAssignee}
     */
    IssueChangeChangesAssignee,

    /**
     * The IssueChangeLinks model constructor.
     * @property {module:model/IssueChangeLinks}
     */
    IssueChangeLinks,

    /**
     * The IssueChangeMessage model constructor.
     * @property {module:model/IssueChangeMessage}
     */
    IssueChangeMessage,

    /**
     * The IssueComment model constructor.
     * @property {module:model/IssueComment}
     */
    IssueComment,

    /**
     * The IssueJobStatus model constructor.
     * @property {module:model/IssueJobStatus}
     */
    IssueJobStatus,

    /**
     * The IssueLinks model constructor.
     * @property {module:model/IssueLinks}
     */
    IssueLinks,

    /**
     * The JiraProject model constructor.
     * @property {module:model/JiraProject}
     */
    JiraProject,

    /**
     * The JiraSite model constructor.
     * @property {module:model/JiraSite}
     */
    JiraSite,

    /**
     * The Link model constructor.
     * @property {module:model/Link}
     */
    Link,

    /**
     * The Link1 model constructor.
     * @property {module:model/Link1}
     */
    Link1,

    /**
     * The Milestone model constructor.
     * @property {module:model/Milestone}
     */
    Milestone,

    /**
     * The ModelObject model constructor.
     * @property {module:model/ModelObject}
     */
    ModelObject,

    /**
     * The Page model constructor.
     * @property {module:model/Page}
     */
    Page,

    /**
     * The PaginatedAccounts model constructor.
     * @property {module:model/PaginatedAccounts}
     */
    PaginatedAccounts,

    /**
     * The PaginatedAnnotations model constructor.
     * @property {module:model/PaginatedAnnotations}
     */
    PaginatedAnnotations,

    /**
     * The PaginatedBranches model constructor.
     * @property {module:model/PaginatedBranches}
     */
    PaginatedBranches,

    /**
     * The PaginatedBranchrestrictions model constructor.
     * @property {module:model/PaginatedBranchrestrictions}
     */
    PaginatedBranchrestrictions,

    /**
     * The PaginatedChangeset model constructor.
     * @property {module:model/PaginatedChangeset}
     */
    PaginatedChangeset,

    /**
     * The PaginatedCommitComments model constructor.
     * @property {module:model/PaginatedCommitComments}
     */
    PaginatedCommitComments,

    /**
     * The PaginatedCommitstatuses model constructor.
     * @property {module:model/PaginatedCommitstatuses}
     */
    PaginatedCommitstatuses,

    /**
     * The PaginatedComponents model constructor.
     * @property {module:model/PaginatedComponents}
     */
    PaginatedComponents,

    /**
     * The PaginatedDefaultReviewerAndType model constructor.
     * @property {module:model/PaginatedDefaultReviewerAndType}
     */
    PaginatedDefaultReviewerAndType,

    /**
     * The PaginatedDeployKeys model constructor.
     * @property {module:model/PaginatedDeployKeys}
     */
    PaginatedDeployKeys,

    /**
     * The PaginatedDeploymentVariable model constructor.
     * @property {module:model/PaginatedDeploymentVariable}
     */
    PaginatedDeploymentVariable,

    /**
     * The PaginatedDeployments model constructor.
     * @property {module:model/PaginatedDeployments}
     */
    PaginatedDeployments,

    /**
     * The PaginatedDiffstats model constructor.
     * @property {module:model/PaginatedDiffstats}
     */
    PaginatedDiffstats,

    /**
     * The PaginatedEnvironments model constructor.
     * @property {module:model/PaginatedEnvironments}
     */
    PaginatedEnvironments,

    /**
     * The PaginatedFiles model constructor.
     * @property {module:model/PaginatedFiles}
     */
    PaginatedFiles,

    /**
     * The PaginatedHookEvents model constructor.
     * @property {module:model/PaginatedHookEvents}
     */
    PaginatedHookEvents,

    /**
     * The PaginatedIssueAttachments model constructor.
     * @property {module:model/PaginatedIssueAttachments}
     */
    PaginatedIssueAttachments,

    /**
     * The PaginatedIssueComments model constructor.
     * @property {module:model/PaginatedIssueComments}
     */
    PaginatedIssueComments,

    /**
     * The PaginatedIssues model constructor.
     * @property {module:model/PaginatedIssues}
     */
    PaginatedIssues,

    /**
     * The PaginatedLogEntries model constructor.
     * @property {module:model/PaginatedLogEntries}
     */
    PaginatedLogEntries,

    /**
     * The PaginatedMilestones model constructor.
     * @property {module:model/PaginatedMilestones}
     */
    PaginatedMilestones,

    /**
     * The PaginatedPipelineCaches model constructor.
     * @property {module:model/PaginatedPipelineCaches}
     */
    PaginatedPipelineCaches,

    /**
     * The PaginatedPipelineKnownHosts model constructor.
     * @property {module:model/PaginatedPipelineKnownHosts}
     */
    PaginatedPipelineKnownHosts,

    /**
     * The PaginatedPipelineScheduleExecutions model constructor.
     * @property {module:model/PaginatedPipelineScheduleExecutions}
     */
    PaginatedPipelineScheduleExecutions,

    /**
     * The PaginatedPipelineSchedules model constructor.
     * @property {module:model/PaginatedPipelineSchedules}
     */
    PaginatedPipelineSchedules,

    /**
     * The PaginatedPipelineSteps model constructor.
     * @property {module:model/PaginatedPipelineSteps}
     */
    PaginatedPipelineSteps,

    /**
     * The PaginatedPipelineVariables model constructor.
     * @property {module:model/PaginatedPipelineVariables}
     */
    PaginatedPipelineVariables,

    /**
     * The PaginatedPipelines model constructor.
     * @property {module:model/PaginatedPipelines}
     */
    PaginatedPipelines,

    /**
     * The PaginatedProjectDeployKeys model constructor.
     * @property {module:model/PaginatedProjectDeployKeys}
     */
    PaginatedProjectDeployKeys,

    /**
     * The PaginatedProjects model constructor.
     * @property {module:model/PaginatedProjects}
     */
    PaginatedProjects,

    /**
     * The PaginatedPullrequestComments model constructor.
     * @property {module:model/PaginatedPullrequestComments}
     */
    PaginatedPullrequestComments,

    /**
     * The PaginatedPullrequests model constructor.
     * @property {module:model/PaginatedPullrequests}
     */
    PaginatedPullrequests,

    /**
     * The PaginatedRefs model constructor.
     * @property {module:model/PaginatedRefs}
     */
    PaginatedRefs,

    /**
     * The PaginatedReports model constructor.
     * @property {module:model/PaginatedReports}
     */
    PaginatedReports,

    /**
     * The PaginatedRepositories model constructor.
     * @property {module:model/PaginatedRepositories}
     */
    PaginatedRepositories,

    /**
     * The PaginatedRepositoryGroupPermissions model constructor.
     * @property {module:model/PaginatedRepositoryGroupPermissions}
     */
    PaginatedRepositoryGroupPermissions,

    /**
     * The PaginatedRepositoryPermissions model constructor.
     * @property {module:model/PaginatedRepositoryPermissions}
     */
    PaginatedRepositoryPermissions,

    /**
     * The PaginatedRepositoryUserPermissions model constructor.
     * @property {module:model/PaginatedRepositoryUserPermissions}
     */
    PaginatedRepositoryUserPermissions,

    /**
     * The PaginatedSnippetComments model constructor.
     * @property {module:model/PaginatedSnippetComments}
     */
    PaginatedSnippetComments,

    /**
     * The PaginatedSnippetCommit model constructor.
     * @property {module:model/PaginatedSnippetCommit}
     */
    PaginatedSnippetCommit,

    /**
     * The PaginatedSnippets model constructor.
     * @property {module:model/PaginatedSnippets}
     */
    PaginatedSnippets,

    /**
     * The PaginatedSshUserKeys model constructor.
     * @property {module:model/PaginatedSshUserKeys}
     */
    PaginatedSshUserKeys,

    /**
     * The PaginatedTags model constructor.
     * @property {module:model/PaginatedTags}
     */
    PaginatedTags,

    /**
     * The PaginatedTreeentries model constructor.
     * @property {module:model/PaginatedTreeentries}
     */
    PaginatedTreeentries,

    /**
     * The PaginatedVersions model constructor.
     * @property {module:model/PaginatedVersions}
     */
    PaginatedVersions,

    /**
     * The PaginatedWebhookSubscriptions model constructor.
     * @property {module:model/PaginatedWebhookSubscriptions}
     */
    PaginatedWebhookSubscriptions,

    /**
     * The PaginatedWorkspaceMemberships model constructor.
     * @property {module:model/PaginatedWorkspaceMemberships}
     */
    PaginatedWorkspaceMemberships,

    /**
     * The PaginatedWorkspaces model constructor.
     * @property {module:model/PaginatedWorkspaces}
     */
    PaginatedWorkspaces,

    /**
     * The Participant model constructor.
     * @property {module:model/Participant}
     */
    Participant,

    /**
     * The Pipeline model constructor.
     * @property {module:model/Pipeline}
     */
    Pipeline,

    /**
     * The PipelineBuildNumber model constructor.
     * @property {module:model/PipelineBuildNumber}
     */
    PipelineBuildNumber,

    /**
     * The PipelineCache model constructor.
     * @property {module:model/PipelineCache}
     */
    PipelineCache,

    /**
     * The PipelineCacheContentUri model constructor.
     * @property {module:model/PipelineCacheContentUri}
     */
    PipelineCacheContentUri,

    /**
     * The PipelineCommand model constructor.
     * @property {module:model/PipelineCommand}
     */
    PipelineCommand,

    /**
     * The PipelineCommitTarget model constructor.
     * @property {module:model/PipelineCommitTarget}
     */
    PipelineCommitTarget,

    /**
     * The PipelineError model constructor.
     * @property {module:model/PipelineError}
     */
    PipelineError,

    /**
     * The PipelineImage model constructor.
     * @property {module:model/PipelineImage}
     */
    PipelineImage,

    /**
     * The PipelineKnownHost model constructor.
     * @property {module:model/PipelineKnownHost}
     */
    PipelineKnownHost,

    /**
     * The PipelineRefTarget model constructor.
     * @property {module:model/PipelineRefTarget}
     */
    PipelineRefTarget,

    /**
     * The PipelineSchedule model constructor.
     * @property {module:model/PipelineSchedule}
     */
    PipelineSchedule,

    /**
     * The PipelineScheduleExecution model constructor.
     * @property {module:model/PipelineScheduleExecution}
     */
    PipelineScheduleExecution,

    /**
     * The PipelineScheduleExecutionErrored model constructor.
     * @property {module:model/PipelineScheduleExecutionErrored}
     */
    PipelineScheduleExecutionErrored,

    /**
     * The PipelineScheduleExecutionExecuted model constructor.
     * @property {module:model/PipelineScheduleExecutionExecuted}
     */
    PipelineScheduleExecutionExecuted,

    /**
     * The PipelineSchedulePostRequestBody model constructor.
     * @property {module:model/PipelineSchedulePostRequestBody}
     */
    PipelineSchedulePostRequestBody,

    /**
     * The PipelineSchedulePutRequestBody model constructor.
     * @property {module:model/PipelineSchedulePutRequestBody}
     */
    PipelineSchedulePutRequestBody,

    /**
     * The PipelineSelector model constructor.
     * @property {module:model/PipelineSelector}
     */
    PipelineSelector,

    /**
     * The PipelineSshKeyPair model constructor.
     * @property {module:model/PipelineSshKeyPair}
     */
    PipelineSshKeyPair,

    /**
     * The PipelineSshPublicKey model constructor.
     * @property {module:model/PipelineSshPublicKey}
     */
    PipelineSshPublicKey,

    /**
     * The PipelineState model constructor.
     * @property {module:model/PipelineState}
     */
    PipelineState,

    /**
     * The PipelineStateCompleted model constructor.
     * @property {module:model/PipelineStateCompleted}
     */
    PipelineStateCompleted,

    /**
     * The PipelineStateCompletedError model constructor.
     * @property {module:model/PipelineStateCompletedError}
     */
    PipelineStateCompletedError,

    /**
     * The PipelineStateCompletedExpired model constructor.
     * @property {module:model/PipelineStateCompletedExpired}
     */
    PipelineStateCompletedExpired,

    /**
     * The PipelineStateCompletedFailed model constructor.
     * @property {module:model/PipelineStateCompletedFailed}
     */
    PipelineStateCompletedFailed,

    /**
     * The PipelineStateCompletedResult model constructor.
     * @property {module:model/PipelineStateCompletedResult}
     */
    PipelineStateCompletedResult,

    /**
     * The PipelineStateCompletedStopped model constructor.
     * @property {module:model/PipelineStateCompletedStopped}
     */
    PipelineStateCompletedStopped,

    /**
     * The PipelineStateCompletedSuccessful model constructor.
     * @property {module:model/PipelineStateCompletedSuccessful}
     */
    PipelineStateCompletedSuccessful,

    /**
     * The PipelineStateInProgress model constructor.
     * @property {module:model/PipelineStateInProgress}
     */
    PipelineStateInProgress,

    /**
     * The PipelineStateInProgressPaused model constructor.
     * @property {module:model/PipelineStateInProgressPaused}
     */
    PipelineStateInProgressPaused,

    /**
     * The PipelineStateInProgressRunning model constructor.
     * @property {module:model/PipelineStateInProgressRunning}
     */
    PipelineStateInProgressRunning,

    /**
     * The PipelineStateInProgressStage model constructor.
     * @property {module:model/PipelineStateInProgressStage}
     */
    PipelineStateInProgressStage,

    /**
     * The PipelineStatePending model constructor.
     * @property {module:model/PipelineStatePending}
     */
    PipelineStatePending,

    /**
     * The PipelineStep model constructor.
     * @property {module:model/PipelineStep}
     */
    PipelineStep,

    /**
     * The PipelineStepError model constructor.
     * @property {module:model/PipelineStepError}
     */
    PipelineStepError,

    /**
     * The PipelineStepState model constructor.
     * @property {module:model/PipelineStepState}
     */
    PipelineStepState,

    /**
     * The PipelineStepStateCompleted model constructor.
     * @property {module:model/PipelineStepStateCompleted}
     */
    PipelineStepStateCompleted,

    /**
     * The PipelineStepStateCompletedError model constructor.
     * @property {module:model/PipelineStepStateCompletedError}
     */
    PipelineStepStateCompletedError,

    /**
     * The PipelineStepStateCompletedExpired model constructor.
     * @property {module:model/PipelineStepStateCompletedExpired}
     */
    PipelineStepStateCompletedExpired,

    /**
     * The PipelineStepStateCompletedFailed model constructor.
     * @property {module:model/PipelineStepStateCompletedFailed}
     */
    PipelineStepStateCompletedFailed,

    /**
     * The PipelineStepStateCompletedNotRun model constructor.
     * @property {module:model/PipelineStepStateCompletedNotRun}
     */
    PipelineStepStateCompletedNotRun,

    /**
     * The PipelineStepStateCompletedResult model constructor.
     * @property {module:model/PipelineStepStateCompletedResult}
     */
    PipelineStepStateCompletedResult,

    /**
     * The PipelineStepStateCompletedStopped model constructor.
     * @property {module:model/PipelineStepStateCompletedStopped}
     */
    PipelineStepStateCompletedStopped,

    /**
     * The PipelineStepStateCompletedSuccessful model constructor.
     * @property {module:model/PipelineStepStateCompletedSuccessful}
     */
    PipelineStepStateCompletedSuccessful,

    /**
     * The PipelineStepStateInProgress model constructor.
     * @property {module:model/PipelineStepStateInProgress}
     */
    PipelineStepStateInProgress,

    /**
     * The PipelineStepStatePending model constructor.
     * @property {module:model/PipelineStepStatePending}
     */
    PipelineStepStatePending,

    /**
     * The PipelineStepStateReady model constructor.
     * @property {module:model/PipelineStepStateReady}
     */
    PipelineStepStateReady,

    /**
     * The PipelineTarget model constructor.
     * @property {module:model/PipelineTarget}
     */
    PipelineTarget,

    /**
     * The PipelineTrigger model constructor.
     * @property {module:model/PipelineTrigger}
     */
    PipelineTrigger,

    /**
     * The PipelineTriggerManual model constructor.
     * @property {module:model/PipelineTriggerManual}
     */
    PipelineTriggerManual,

    /**
     * The PipelineTriggerPush model constructor.
     * @property {module:model/PipelineTriggerPush}
     */
    PipelineTriggerPush,

    /**
     * The PipelineVariable model constructor.
     * @property {module:model/PipelineVariable}
     */
    PipelineVariable,

    /**
     * The PipelinesConfig model constructor.
     * @property {module:model/PipelinesConfig}
     */
    PipelinesConfig,

    /**
     * The PipelinesDdevPipelineStep model constructor.
     * @property {module:model/PipelinesDdevPipelineStep}
     */
    PipelinesDdevPipelineStep,

    /**
     * The PipelinesStgWestPipelineStep model constructor.
     * @property {module:model/PipelinesStgWestPipelineStep}
     */
    PipelinesStgWestPipelineStep,

    /**
     * The Project model constructor.
     * @property {module:model/Project}
     */
    Project,

    /**
     * The ProjectBranchingModel model constructor.
     * @property {module:model/ProjectBranchingModel}
     */
    ProjectBranchingModel,

    /**
     * The ProjectBranchingModelDevelopment model constructor.
     * @property {module:model/ProjectBranchingModelDevelopment}
     */
    ProjectBranchingModelDevelopment,

    /**
     * The ProjectDeployKey model constructor.
     * @property {module:model/ProjectDeployKey}
     */
    ProjectDeployKey,

    /**
     * The ProjectLinks model constructor.
     * @property {module:model/ProjectLinks}
     */
    ProjectLinks,

    /**
     * The PullRequestBranch model constructor.
     * @property {module:model/PullRequestBranch}
     */
    PullRequestBranch,

    /**
     * The PullRequestCommit model constructor.
     * @property {module:model/PullRequestCommit}
     */
    PullRequestCommit,

    /**
     * The PullRequestCommit1 model constructor.
     * @property {module:model/PullRequestCommit1}
     */
    PullRequestCommit1,

    /**
     * The PullRequestLinks model constructor.
     * @property {module:model/PullRequestLinks}
     */
    PullRequestLinks,

    /**
     * The Pullrequest model constructor.
     * @property {module:model/Pullrequest}
     */
    Pullrequest,

    /**
     * The PullrequestComment model constructor.
     * @property {module:model/PullrequestComment}
     */
    PullrequestComment,

    /**
     * The PullrequestEndpoint model constructor.
     * @property {module:model/PullrequestEndpoint}
     */
    PullrequestEndpoint,

    /**
     * The PullrequestMergeParameters model constructor.
     * @property {module:model/PullrequestMergeParameters}
     */
    PullrequestMergeParameters,

    /**
     * The Ref model constructor.
     * @property {module:model/Ref}
     */
    Ref,

    /**
     * The RefLinks model constructor.
     * @property {module:model/RefLinks}
     */
    RefLinks,

    /**
     * The RenderedPullRequestMarkup model constructor.
     * @property {module:model/RenderedPullRequestMarkup}
     */
    RenderedPullRequestMarkup,

    /**
     * The Report model constructor.
     * @property {module:model/Report}
     */
    Report,

    /**
     * The ReportAnnotation model constructor.
     * @property {module:model/ReportAnnotation}
     */
    ReportAnnotation,

    /**
     * The ReportData model constructor.
     * @property {module:model/ReportData}
     */
    ReportData,

    /**
     * The Repository model constructor.
     * @property {module:model/Repository}
     */
    Repository,

    /**
     * The RepositoryGroupPermission model constructor.
     * @property {module:model/RepositoryGroupPermission}
     */
    RepositoryGroupPermission,

    /**
     * The RepositoryGroupPermissionLinks model constructor.
     * @property {module:model/RepositoryGroupPermissionLinks}
     */
    RepositoryGroupPermissionLinks,

    /**
     * The RepositoryInheritanceState model constructor.
     * @property {module:model/RepositoryInheritanceState}
     */
    RepositoryInheritanceState,

    /**
     * The RepositoryLinks model constructor.
     * @property {module:model/RepositoryLinks}
     */
    RepositoryLinks,

    /**
     * The RepositoryPermission model constructor.
     * @property {module:model/RepositoryPermission}
     */
    RepositoryPermission,

    /**
     * The RepositoryUserPermission model constructor.
     * @property {module:model/RepositoryUserPermission}
     */
    RepositoryUserPermission,

    /**
     * The RequestBodyForPipelineSchedulePOSTRequestTarget model constructor.
     * @property {module:model/RequestBodyForPipelineSchedulePOSTRequestTarget}
     */
    RequestBodyForPipelineSchedulePOSTRequestTarget,

    /**
     * The SearchCodeSearchResult model constructor.
     * @property {module:model/SearchCodeSearchResult}
     */
    SearchCodeSearchResult,

    /**
     * The SearchContentMatch model constructor.
     * @property {module:model/SearchContentMatch}
     */
    SearchContentMatch,

    /**
     * The SearchLine model constructor.
     * @property {module:model/SearchLine}
     */
    SearchLine,

    /**
     * The SearchResultPage model constructor.
     * @property {module:model/SearchResultPage}
     */
    SearchResultPage,

    /**
     * The SearchSegment model constructor.
     * @property {module:model/SearchSegment}
     */
    SearchSegment,

    /**
     * The Snippet model constructor.
     * @property {module:model/Snippet}
     */
    Snippet,

    /**
     * The SnippetComment model constructor.
     * @property {module:model/SnippetComment}
     */
    SnippetComment,

    /**
     * The SnippetCommit model constructor.
     * @property {module:model/SnippetCommit}
     */
    SnippetCommit,

    /**
     * The SnippetCommitLinks model constructor.
     * @property {module:model/SnippetCommitLinks}
     */
    SnippetCommitLinks,

    /**
     * The SshAccountKey model constructor.
     * @property {module:model/SshAccountKey}
     */
    SshAccountKey,

    /**
     * The SshKey model constructor.
     * @property {module:model/SshKey}
     */
    SshKey,

    /**
     * The StgWestReport model constructor.
     * @property {module:model/StgWestReport}
     */
    StgWestReport,

    /**
     * The SubjectTypes model constructor.
     * @property {module:model/SubjectTypes}
     */
    SubjectTypes,

    /**
     * The SubjectTypesRepository model constructor.
     * @property {module:model/SubjectTypesRepository}
     */
    SubjectTypesRepository,

    /**
     * The Tag model constructor.
     * @property {module:model/Tag}
     */
    Tag,

    /**
     * The Team model constructor.
     * @property {module:model/Team}
     */
    Team,

    /**
     * The TeamLinks model constructor.
     * @property {module:model/TeamLinks}
     */
    TeamLinks,

    /**
     * The Treeentry model constructor.
     * @property {module:model/Treeentry}
     */
    Treeentry,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserLinks model constructor.
     * @property {module:model/UserLinks}
     */
    UserLinks,

    /**
     * The Version model constructor.
     * @property {module:model/Version}
     */
    Version,

    /**
     * The WebhookSubscription model constructor.
     * @property {module:model/WebhookSubscription}
     */
    WebhookSubscription,

    /**
     * The Workspace model constructor.
     * @property {module:model/Workspace}
     */
    Workspace,

    /**
     * The WorkspaceLinks model constructor.
     * @property {module:model/WorkspaceLinks}
     */
    WorkspaceLinks,

    /**
     * The WorkspaceMembership model constructor.
     * @property {module:model/WorkspaceMembership}
     */
    WorkspaceMembership,

    /**
    * The AddonApi service constructor.
    * @property {module:api/AddonApi}
    */
    AddonApi,

    /**
    * The BranchRestrictionsApi service constructor.
    * @property {module:api/BranchRestrictionsApi}
    */
    BranchRestrictionsApi,

    /**
    * The BranchingModelApi service constructor.
    * @property {module:api/BranchingModelApi}
    */
    BranchingModelApi,

    /**
    * The CommitStatusesApi service constructor.
    * @property {module:api/CommitStatusesApi}
    */
    CommitStatusesApi,

    /**
    * The CommitsApi service constructor.
    * @property {module:api/CommitsApi}
    */
    CommitsApi,

    /**
    * The DeploymentsApi service constructor.
    * @property {module:api/DeploymentsApi}
    */
    DeploymentsApi,

    /**
    * The DownloadsApi service constructor.
    * @property {module:api/DownloadsApi}
    */
    DownloadsApi,

    /**
    * The IssueTrackerApi service constructor.
    * @property {module:api/IssueTrackerApi}
    */
    IssueTrackerApi,

    /**
    * The PipelinesApi service constructor.
    * @property {module:api/PipelinesApi}
    */
    PipelinesApi,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi,

    /**
    * The PropertiesApi service constructor.
    * @property {module:api/PropertiesApi}
    */
    PropertiesApi,

    /**
    * The PullrequestsApi service constructor.
    * @property {module:api/PullrequestsApi}
    */
    PullrequestsApi,

    /**
    * The RefsApi service constructor.
    * @property {module:api/RefsApi}
    */
    RefsApi,

    /**
    * The ReportsApi service constructor.
    * @property {module:api/ReportsApi}
    */
    ReportsApi,

    /**
    * The RepositoriesApi service constructor.
    * @property {module:api/RepositoriesApi}
    */
    RepositoriesApi,

    /**
    * The SearchApi service constructor.
    * @property {module:api/SearchApi}
    */
    SearchApi,

    /**
    * The SnippetsApi service constructor.
    * @property {module:api/SnippetsApi}
    */
    SnippetsApi,

    /**
    * The SourceApi service constructor.
    * @property {module:api/SourceApi}
    */
    SourceApi,

    /**
    * The SshApi service constructor.
    * @property {module:api/SshApi}
    */
    SshApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi,

    /**
    * The WebhooksApi service constructor.
    * @property {module:api/WebhooksApi}
    */
    WebhooksApi,

    /**
    * The WorkspacesApi service constructor.
    * @property {module:api/WorkspacesApi}
    */
    WorkspacesApi
};
