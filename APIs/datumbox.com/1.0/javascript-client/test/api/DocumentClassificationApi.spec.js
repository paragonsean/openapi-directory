/**
 * api.datumbox.com
 * Datumbox offers a Machine Learning platform composed of 14 classifiers and Natural Language processing functions. Functions include sentiment analysis, topic classification, readability assessment, language detection, and much more.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ApiDatumboxCom);
  }
}(this, function(expect, ApiDatumboxCom) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ApiDatumboxCom.DocumentClassificationApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DocumentClassificationApi', function() {
    describe('adultContentDetection', function() {
      it('should call adultContentDetection successfully', function(done) {
        //uncomment below and update the code to test adultContentDetection
        //instance.adultContentDetection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('commercialDetection', function() {
      it('should call commercialDetection successfully', function(done) {
        //uncomment below and update the code to test commercialDetection
        //instance.commercialDetection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('educationalDetection', function() {
      it('should call educationalDetection successfully', function(done) {
        //uncomment below and update the code to test educationalDetection
        //instance.educationalDetection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('genderDetection', function() {
      it('should call genderDetection successfully', function(done) {
        //uncomment below and update the code to test genderDetection
        //instance.genderDetection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('languageDetection', function() {
      it('should call languageDetection successfully', function(done) {
        //uncomment below and update the code to test languageDetection
        //instance.languageDetection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readabilityAssessment', function() {
      it('should call readabilityAssessment successfully', function(done) {
        //uncomment below and update the code to test readabilityAssessment
        //instance.readabilityAssessment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sentimentAnalysis', function() {
      it('should call sentimentAnalysis successfully', function(done) {
        //uncomment below and update the code to test sentimentAnalysis
        //instance.sentimentAnalysis(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spamDetection', function() {
      it('should call spamDetection successfully', function(done) {
        //uncomment below and update the code to test spamDetection
        //instance.spamDetection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subjectivityAnalysis', function() {
      it('should call subjectivityAnalysis successfully', function(done) {
        //uncomment below and update the code to test subjectivityAnalysis
        //instance.subjectivityAnalysis(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('topicClassification', function() {
      it('should call topicClassification successfully', function(done) {
        //uncomment below and update the code to test topicClassification
        //instance.topicClassification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('twitterSentimentAnalysis', function() {
      it('should call twitterSentimentAnalysis successfully', function(done) {
        //uncomment below and update the code to test twitterSentimentAnalysis
        //instance.twitterSentimentAnalysis(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
