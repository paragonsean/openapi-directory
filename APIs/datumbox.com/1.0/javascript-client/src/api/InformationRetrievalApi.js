/**
 * api.datumbox.com
 * Datumbox offers a Machine Learning platform composed of 14 classifiers and Natural Language processing functions. Functions include sentiment analysis, topic classification, readability assessment, language detection, and much more.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* InformationRetrieval service.
* @module api/InformationRetrievalApi
* @version 1.0
*/
export default class InformationRetrievalApi {

    /**
    * Constructs a new InformationRetrievalApi. 
    * @alias module:api/InformationRetrievalApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the keywordExtraction operation.
     * @callback module:api/InformationRetrievalApi~keywordExtractionCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Extracts the Keywords of the Document
     * The Keyword Extraction function enables you to extract from an arbitrary document all the keywords and word-combinations along with their occurrences in the text.
     * @param {String} apiKey Your API Key
     * @param {Object} opts Optional parameters
     * @param {Number} [n] The number of keyword combinations (n-grams) that you wish to extract.
     * @param {String} [text] The text that you want to analyze. It should not contain HTML tags.
     * @param {module:api/InformationRetrievalApi~keywordExtractionCallback} callback The callback function, accepting three arguments: error, data, response
     */
    keywordExtraction(apiKey, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling keywordExtraction");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'api_key': apiKey,
        'n': opts['n'],
        'text': opts['text']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/1.0/KeywordExtraction.json', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the textExtraction operation.
     * @callback module:api/InformationRetrievalApi~textExtractionCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Extracts the clear text from Webpage
     * The Text Extraction function enables you to extract the important information from a given webpage. Extracting the clear text of the documents is an important step before any other analysis.
     * @param {String} apiKey Your API Key
     * @param {Object} opts Optional parameters
     * @param {String} [text] The HTML source of the webpage.
     * @param {module:api/InformationRetrievalApi~textExtractionCallback} callback The callback function, accepting three arguments: error, data, response
     */
    textExtraction(apiKey, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling textExtraction");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'api_key': apiKey,
        'text': opts['text']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/1.0/TextExtraction.json', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
