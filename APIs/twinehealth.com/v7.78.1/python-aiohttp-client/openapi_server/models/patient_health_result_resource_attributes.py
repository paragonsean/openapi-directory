# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.patient_health_result_resource_attributes_annotations_inner import PatientHealthResultResourceAttributesAnnotationsInner
from openapi_server.models.patient_health_result_resource_attributes_data import PatientHealthResultResourceAttributesData
from openapi_server.models.patient_health_result_resource_attributes_source import PatientHealthResultResourceAttributesSource
from openapi_server import util


class PatientHealthResultResourceAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, thread: str=None, aggregation: str=None, annotations: List[PatientHealthResultResourceAttributesAnnotationsInner]=None, channel: str=None, data: PatientHealthResultResourceAttributesData=None, external_id: str=None, metric_type: str=None, occurred_at: str=None, occurred_at_time_zone: str=None, skipped: bool=None, source: PatientHealthResultResourceAttributesSource=None, type: str=None, window: str=None):
        """PatientHealthResultResourceAttributes - a model defined in OpenAPI

        :param thread: The thread of this PatientHealthResultResourceAttributes.
        :param aggregation: The aggregation of this PatientHealthResultResourceAttributes.
        :param annotations: The annotations of this PatientHealthResultResourceAttributes.
        :param channel: The channel of this PatientHealthResultResourceAttributes.
        :param data: The data of this PatientHealthResultResourceAttributes.
        :param external_id: The external_id of this PatientHealthResultResourceAttributes.
        :param metric_type: The metric_type of this PatientHealthResultResourceAttributes.
        :param occurred_at: The occurred_at of this PatientHealthResultResourceAttributes.
        :param occurred_at_time_zone: The occurred_at_time_zone of this PatientHealthResultResourceAttributes.
        :param skipped: The skipped of this PatientHealthResultResourceAttributes.
        :param source: The source of this PatientHealthResultResourceAttributes.
        :param type: The type of this PatientHealthResultResourceAttributes.
        :param window: The window of this PatientHealthResultResourceAttributes.
        """
        self.openapi_types = {
            'thread': str,
            'aggregation': str,
            'annotations': List[PatientHealthResultResourceAttributesAnnotationsInner],
            'channel': str,
            'data': PatientHealthResultResourceAttributesData,
            'external_id': str,
            'metric_type': str,
            'occurred_at': str,
            'occurred_at_time_zone': str,
            'skipped': bool,
            'source': PatientHealthResultResourceAttributesSource,
            'type': str,
            'window': str
        }

        self.attribute_map = {
            'thread': '_thread',
            'aggregation': 'aggregation',
            'annotations': 'annotations',
            'channel': 'channel',
            'data': 'data',
            'external_id': 'external_id',
            'metric_type': 'metric_type',
            'occurred_at': 'occurred_at',
            'occurred_at_time_zone': 'occurred_at_time_zone',
            'skipped': 'skipped',
            'source': 'source',
            'type': 'type',
            'window': 'window'
        }

        self._thread = thread
        self._aggregation = aggregation
        self._annotations = annotations
        self._channel = channel
        self._data = data
        self._external_id = external_id
        self._metric_type = metric_type
        self._occurred_at = occurred_at
        self._occurred_at_time_zone = occurred_at_time_zone
        self._skipped = skipped
        self._source = source
        self._type = type
        self._window = window

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PatientHealthResultResourceAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PatientHealthResultResource_attributes of this PatientHealthResultResourceAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def thread(self):
        """Gets the thread of this PatientHealthResultResourceAttributes.

        Links together results. This should be the same as the thread of _action, if it is defined

        :return: The thread of this PatientHealthResultResourceAttributes.
        :rtype: str
        """
        return self._thread

    @thread.setter
    def thread(self, thread):
        """Sets the thread of this PatientHealthResultResourceAttributes.

        Links together results. This should be the same as the thread of _action, if it is defined

        :param thread: The thread of this PatientHealthResultResourceAttributes.
        :type thread: str
        """

        self._thread = thread

    @property
    def aggregation(self):
        """Gets the aggregation of this PatientHealthResultResourceAttributes.


        :return: The aggregation of this PatientHealthResultResourceAttributes.
        :rtype: str
        """
        return self._aggregation

    @aggregation.setter
    def aggregation(self, aggregation):
        """Sets the aggregation of this PatientHealthResultResourceAttributes.


        :param aggregation: The aggregation of this PatientHealthResultResourceAttributes.
        :type aggregation: str
        """

        self._aggregation = aggregation

    @property
    def annotations(self):
        """Gets the annotations of this PatientHealthResultResourceAttributes.


        :return: The annotations of this PatientHealthResultResourceAttributes.
        :rtype: List[PatientHealthResultResourceAttributesAnnotationsInner]
        """
        return self._annotations

    @annotations.setter
    def annotations(self, annotations):
        """Sets the annotations of this PatientHealthResultResourceAttributes.


        :param annotations: The annotations of this PatientHealthResultResourceAttributes.
        :type annotations: List[PatientHealthResultResourceAttributesAnnotationsInner]
        """

        self._annotations = annotations

    @property
    def channel(self):
        """Gets the channel of this PatientHealthResultResourceAttributes.


        :return: The channel of this PatientHealthResultResourceAttributes.
        :rtype: str
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this PatientHealthResultResourceAttributes.


        :param channel: The channel of this PatientHealthResultResourceAttributes.
        :type channel: str
        """

        self._channel = channel

    @property
    def data(self):
        """Gets the data of this PatientHealthResultResourceAttributes.


        :return: The data of this PatientHealthResultResourceAttributes.
        :rtype: PatientHealthResultResourceAttributesData
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this PatientHealthResultResourceAttributes.


        :param data: The data of this PatientHealthResultResourceAttributes.
        :type data: PatientHealthResultResourceAttributesData
        """

        self._data = data

    @property
    def external_id(self):
        """Gets the external_id of this PatientHealthResultResourceAttributes.


        :return: The external_id of this PatientHealthResultResourceAttributes.
        :rtype: str
        """
        return self._external_id

    @external_id.setter
    def external_id(self, external_id):
        """Sets the external_id of this PatientHealthResultResourceAttributes.


        :param external_id: The external_id of this PatientHealthResultResourceAttributes.
        :type external_id: str
        """

        self._external_id = external_id

    @property
    def metric_type(self):
        """Gets the metric_type of this PatientHealthResultResourceAttributes.


        :return: The metric_type of this PatientHealthResultResourceAttributes.
        :rtype: str
        """
        return self._metric_type

    @metric_type.setter
    def metric_type(self, metric_type):
        """Sets the metric_type of this PatientHealthResultResourceAttributes.


        :param metric_type: The metric_type of this PatientHealthResultResourceAttributes.
        :type metric_type: str
        """
        allowed_values = ["blood_pressure_systolic", "blood_pressure_diastolic", "hemoglobin_a1c", "hdl_cholesterol", "ldl_cholesterol", "total_cholesterol", "triglycerides", "blood_urea_nitrogen", "creatinine", "hemoglobin", "hematocrit", "total_serum_iron", "thyroid_stimulating_hormone", "free_thyroxine", "free_triiodothyronine", "total_triiodothyronine", "cd4_cell_count", "hiv_viral_load", "inr", "free_testosterone", "total_testosterone", "c_reactive_protein", "prostate_specific_antigen", "cotinine", "c_peptide", "blood_pressure", "blood_glucose", "weight", "heart_rate", "body_fat_percentage", "body_mass_index", "body_temperature", "forced_expiratory_volume1", "forced_vital_capacity", "lean_body_mass", "nausea_level", "oxygen_saturation", "pain_level", "peak_expiratory_flow_rate", "peripheral_perfusion_index", "respiratory_rate", "inhaler_usage"]  # noqa: E501
        if metric_type not in allowed_values:
            raise ValueError(
                "Invalid value for `metric_type` ({0}), must be one of {1}"
                .format(metric_type, allowed_values)
            )

        self._metric_type = metric_type

    @property
    def occurred_at(self):
        """Gets the occurred_at of this PatientHealthResultResourceAttributes.


        :return: The occurred_at of this PatientHealthResultResourceAttributes.
        :rtype: str
        """
        return self._occurred_at

    @occurred_at.setter
    def occurred_at(self, occurred_at):
        """Sets the occurred_at of this PatientHealthResultResourceAttributes.


        :param occurred_at: The occurred_at of this PatientHealthResultResourceAttributes.
        :type occurred_at: str
        """

        self._occurred_at = occurred_at

    @property
    def occurred_at_time_zone(self):
        """Gets the occurred_at_time_zone of this PatientHealthResultResourceAttributes.


        :return: The occurred_at_time_zone of this PatientHealthResultResourceAttributes.
        :rtype: str
        """
        return self._occurred_at_time_zone

    @occurred_at_time_zone.setter
    def occurred_at_time_zone(self, occurred_at_time_zone):
        """Sets the occurred_at_time_zone of this PatientHealthResultResourceAttributes.


        :param occurred_at_time_zone: The occurred_at_time_zone of this PatientHealthResultResourceAttributes.
        :type occurred_at_time_zone: str
        """

        self._occurred_at_time_zone = occurred_at_time_zone

    @property
    def skipped(self):
        """Gets the skipped of this PatientHealthResultResourceAttributes.


        :return: The skipped of this PatientHealthResultResourceAttributes.
        :rtype: bool
        """
        return self._skipped

    @skipped.setter
    def skipped(self, skipped):
        """Sets the skipped of this PatientHealthResultResourceAttributes.


        :param skipped: The skipped of this PatientHealthResultResourceAttributes.
        :type skipped: bool
        """

        self._skipped = skipped

    @property
    def source(self):
        """Gets the source of this PatientHealthResultResourceAttributes.


        :return: The source of this PatientHealthResultResourceAttributes.
        :rtype: PatientHealthResultResourceAttributesSource
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this PatientHealthResultResourceAttributes.


        :param source: The source of this PatientHealthResultResourceAttributes.
        :type source: PatientHealthResultResourceAttributesSource
        """

        self._source = source

    @property
    def type(self):
        """Gets the type of this PatientHealthResultResourceAttributes.

        Type of result. Usually the same as metric_type except for lifestyle actions

        :return: The type of this PatientHealthResultResourceAttributes.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PatientHealthResultResourceAttributes.

        Type of result. Usually the same as metric_type except for lifestyle actions

        :param type: The type of this PatientHealthResultResourceAttributes.
        :type type: str
        """

        self._type = type

    @property
    def window(self):
        """Gets the window of this PatientHealthResultResourceAttributes.


        :return: The window of this PatientHealthResultResourceAttributes.
        :rtype: str
        """
        return self._window

    @window.setter
    def window(self, window):
        """Sets the window of this PatientHealthResultResourceAttributes.


        :param window: The window of this PatientHealthResultResourceAttributes.
        :type window: str
        """

        self._window = window
