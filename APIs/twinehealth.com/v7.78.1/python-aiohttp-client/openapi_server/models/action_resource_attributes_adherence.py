# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.action_resource_attributes_adherence_streak import ActionResourceAttributesAdherenceStreak
from openapi_server import util


class ActionResourceAttributesAdherence(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, complete: int=None, due: int=None, streak: ActionResourceAttributesAdherenceStreak=None):
        """ActionResourceAttributesAdherence - a model defined in OpenAPI

        :param complete: The complete of this ActionResourceAttributesAdherence.
        :param due: The due of this ActionResourceAttributesAdherence.
        :param streak: The streak of this ActionResourceAttributesAdherence.
        """
        self.openapi_types = {
            'complete': int,
            'due': int,
            'streak': ActionResourceAttributesAdherenceStreak
        }

        self.attribute_map = {
            'complete': 'complete',
            'due': 'due',
            'streak': 'streak'
        }

        self._complete = complete
        self._due = due
        self._streak = streak

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActionResourceAttributesAdherence':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActionResource_attributes_adherence of this ActionResourceAttributesAdherence.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def complete(self):
        """Gets the complete of this ActionResourceAttributesAdherence.


        :return: The complete of this ActionResourceAttributesAdherence.
        :rtype: int
        """
        return self._complete

    @complete.setter
    def complete(self, complete):
        """Sets the complete of this ActionResourceAttributesAdherence.


        :param complete: The complete of this ActionResourceAttributesAdherence.
        :type complete: int
        """

        self._complete = complete

    @property
    def due(self):
        """Gets the due of this ActionResourceAttributesAdherence.


        :return: The due of this ActionResourceAttributesAdherence.
        :rtype: int
        """
        return self._due

    @due.setter
    def due(self, due):
        """Sets the due of this ActionResourceAttributesAdherence.


        :param due: The due of this ActionResourceAttributesAdherence.
        :type due: int
        """

        self._due = due

    @property
    def streak(self):
        """Gets the streak of this ActionResourceAttributesAdherence.


        :return: The streak of this ActionResourceAttributesAdherence.
        :rtype: ActionResourceAttributesAdherenceStreak
        """
        return self._streak

    @streak.setter
    def streak(self, streak):
        """Sets the streak of this ActionResourceAttributesAdherence.


        :param streak: The streak of this ActionResourceAttributesAdherence.
        :type streak: ActionResourceAttributesAdherenceStreak
        """

        self._streak = streak
