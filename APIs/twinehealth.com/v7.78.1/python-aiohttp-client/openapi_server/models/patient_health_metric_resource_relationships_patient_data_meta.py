# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.patient_health_metric_resource_relationships_patient_data_meta_query import PatientHealthMetricResourceRelationshipsPatientDataMetaQuery
from openapi_server import util


class PatientHealthMetricResourceRelationshipsPatientDataMeta(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, query: PatientHealthMetricResourceRelationshipsPatientDataMetaQuery=None):
        """PatientHealthMetricResourceRelationshipsPatientDataMeta - a model defined in OpenAPI

        :param query: The query of this PatientHealthMetricResourceRelationshipsPatientDataMeta.
        """
        self.openapi_types = {
            'query': PatientHealthMetricResourceRelationshipsPatientDataMetaQuery
        }

        self.attribute_map = {
            'query': 'query'
        }

        self._query = query

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PatientHealthMetricResourceRelationshipsPatientDataMeta':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PatientHealthMetricResource_relationships_patient_data_meta of this PatientHealthMetricResourceRelationshipsPatientDataMeta.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def query(self):
        """Gets the query of this PatientHealthMetricResourceRelationshipsPatientDataMeta.


        :return: The query of this PatientHealthMetricResourceRelationshipsPatientDataMeta.
        :rtype: PatientHealthMetricResourceRelationshipsPatientDataMetaQuery
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this PatientHealthMetricResourceRelationshipsPatientDataMeta.


        :param query: The query of this PatientHealthMetricResourceRelationshipsPatientDataMeta.
        :type query: PatientHealthMetricResourceRelationshipsPatientDataMetaQuery
        """
        if query is None:
            raise ValueError("Invalid value for `query`, must not be `None`")

        self._query = query
