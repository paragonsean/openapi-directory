# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.fetch_meta_response import FetchMetaResponse
from openapi_server.models.patient_plan_summary_resource import PatientPlanSummaryResource
from openapi_server.models.resource import Resource
from openapi_server import util


class FetchPatientPlanSummaryResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data: PatientPlanSummaryResource=None, included: List[Resource]=None, meta: FetchMetaResponse=None):
        """FetchPatientPlanSummaryResponse - a model defined in OpenAPI

        :param data: The data of this FetchPatientPlanSummaryResponse.
        :param included: The included of this FetchPatientPlanSummaryResponse.
        :param meta: The meta of this FetchPatientPlanSummaryResponse.
        """
        self.openapi_types = {
            'data': PatientPlanSummaryResource,
            'included': List[Resource],
            'meta': FetchMetaResponse
        }

        self.attribute_map = {
            'data': 'data',
            'included': 'included',
            'meta': 'meta'
        }

        self._data = data
        self._included = included
        self._meta = meta

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FetchPatientPlanSummaryResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FetchPatientPlanSummaryResponse of this FetchPatientPlanSummaryResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self):
        """Gets the data of this FetchPatientPlanSummaryResponse.


        :return: The data of this FetchPatientPlanSummaryResponse.
        :rtype: PatientPlanSummaryResource
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this FetchPatientPlanSummaryResponse.


        :param data: The data of this FetchPatientPlanSummaryResponse.
        :type data: PatientPlanSummaryResource
        """
        if data is None:
            raise ValueError("Invalid value for `data`, must not be `None`")

        self._data = data

    @property
    def included(self):
        """Gets the included of this FetchPatientPlanSummaryResponse.

        Related resources which are included in the response based on the `include` param. Attributes of each resource will vary depending on the type. See [action](#operation/fetchAction), [bundle](#operation/fetchBundle) and [patient](#operation/fetchPatient) 

        :return: The included of this FetchPatientPlanSummaryResponse.
        :rtype: List[Resource]
        """
        return self._included

    @included.setter
    def included(self, included):
        """Sets the included of this FetchPatientPlanSummaryResponse.

        Related resources which are included in the response based on the `include` param. Attributes of each resource will vary depending on the type. See [action](#operation/fetchAction), [bundle](#operation/fetchBundle) and [patient](#operation/fetchPatient) 

        :param included: The included of this FetchPatientPlanSummaryResponse.
        :type included: List[Resource]
        """

        self._included = included

    @property
    def meta(self):
        """Gets the meta of this FetchPatientPlanSummaryResponse.


        :return: The meta of this FetchPatientPlanSummaryResponse.
        :rtype: FetchMetaResponse
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this FetchPatientPlanSummaryResponse.


        :param meta: The meta of this FetchPatientPlanSummaryResponse.
        :type meta: FetchMetaResponse
        """

        self._meta = meta
