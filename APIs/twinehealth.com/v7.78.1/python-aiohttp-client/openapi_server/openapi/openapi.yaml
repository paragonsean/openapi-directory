openapi: 3.0.0
info:
  contact:
    email: apiteam@twinehealth.com
  description: |
    # Overview
    The Fitbit Plus API is a RESTful API. The requests and responses are formated according to the
    [JSON API](http://jsonapi.org/format/1.0/) specification.

    In addition to this documentation, we also provide an
    [OpenAPI](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md) "yaml" file describing the API:
    [Fitbit Plus API Specification](swagger.yaml).

    # Authentication
    Authentication for the Fitbit Plus API is based on the
    [OAuth 2.0 Authorization Framework](https://tools.ietf.org/html/rfc6749). Fitbit Plus currently supports grant
    types of **client_credentials** and **refresh_token**.

    See [POST /oauth/token](#operation/createToken) for details on the request and response formats.
    <!-- ReDoc-Inject: <security-definitions> -->

    ## Building Integrations
    We will provide customers with unique client credentials for each application/integration they build, allowing us
    to enforce appropriate access controls and monitor API usage.
    The client credentials will be scoped to the organization, and allow full access to all patients and related data
    within that organization.

    These credentials are appropriate for creating an integration that does one of the following:
     - background reporting/analysis
     - synchronizing data with another system (such as an EMR)

    The API credentials and oauth flows we currently support are **not** well suited for creating a user-facing
    application that allows a user (patient, coach, or admin) to login and have access to data which is appropriate to
    that specific user. It is possible to build such an application, but it is not possible to use Fitbit Plus as a
    federated identity provider. You would need to have a separate means of verifying a user's identity. We do not
    currently support the required password-based oauth flow to make this possible.

    # Paging
    The Fitbit Plus API supports two different pagination strategies for GET collection endpoints.

    #### Skip-based paging

    Skip-based paging uses the query parameters `page[size]` and `page[number]` to specify the max number of resources returned and the page number. We default to skip-based paging if there are no page parameters. The response will include a `links` object containing links to the first, last, prev, and next pages of data.

    If the contents of the collection change while you are iterating through the collection, you will see duplicate or missing documents. For example, if you are iterating through the `calender_event` resource via `GET /pub/calendar_event?sort=start_at&page[size]=50&page[number]=1`, and a new `calendar_event` is created that has a `start_at` value before the first `calendar_event`, when you fetch the next page at `GET /pub/calendar_event?sort=start_at&page[size]=50&page[number]=2`, the first entry in the second response will be a duplicate of the last entry in the first response.

    #### Cursor-based paging
    Cursor-based paging uses the query parameters `page[limit]` and `page[after]` to specify the max number of entries returned and identify where to begin the next page. Add `page[limit]` to the parameters to use cursor-based paging. The response will include a `links` object containing a link to the next page of data, if the next page exists.

    Cursor-based paging is not subject to duplication if new resources are added to the collection. For example, if you are iterating through the `calender_event` resource via `GET /pub/calendar_event?sort=start_at&page[limit]=50`, and a new `calendar_event` is created that has a `start_at` value before the first `calendar_event`, you will not see a duplicate entry when you fetch the next page at `GET /pub/calendar_event?sort=start_at&page[limit]=50&page[after]=<cursor>`.

    We encourage the use of cursor-based paging for performance reasons.

    In either form of paging, you can determine whether any resources were missed by comparing the number of fetched resources against `meta.count`. Set `page[size]` or `page[limit]` to 0 to get only the count.

    It is not valid to mix the two strategies.
  title: Fitbit Plus API
  version: v7.78.1
  x-apisguru-categories:
  - support
  x-logo:
    url: http://developer.twinehealth.com/images/Fitbit_Plus_lockup_2C_RGB-32.png
  x-origin:
  - format: openapi
    url: https://raw.githubusercontent.com/TwineHealth/TwineDeveloperDocs/master/spec/swagger.yaml
    version: "3.0"
  x-providerName: twinehealth.com
servers:
- url: https://api.twinehealth.com/pub
tags:
- description: Authentication operations
  name: oauth
- description: An organization is a Fitbit Plus customer. No data is accessible across
    organizations.
  name: organization
- description: "A group is a cohort of patients within an organization. The creation\
    \ of groups allows for the segmentation of dashboards and analytics. For example,\
    \ a group might correspond to the patients in a particular practice or the employees\
    \ of a particular employer."
  name: group
- description: A coach is a person that supports a patient
  name: coach
- description: A reward program provides the details for a rewards program for a group.
    Different rewards programs can be created for different periods of time specified
    by the start_at and end_at dates. A reward program can activated for a patient
    any time between these dates. An activated reward program for a patient is called
    a reward program activation.
  name: reward program
- description: An action is an actionable item in a patient's plan.
  name: action
- description: A bundle is a collection of actions (an action plan) in a patient's
    plan summary.
  name: bundle
- description: A calendar event represents an event involving or relevant to a patient
    which will or has occurred on a specific date or during a specific period of time.
  name: calendar event
- description: A calendar event response indicates the attendee's response to a calendar
    event.  Only `POST` for creation is allowed as the responses are updated into
    the corresponding calendar events.
  name: calendar event response
- description: Email history represents a single email that was sent using Fitbit
    Plus.
  name: email history
- description: A health profile contains a set of health questions and answers for
    a patient.
  name: health profile
- description: A health profile answer is the answer to a question for a patient.
  name: health profile answer
- description: A health profile question contains a health question and the corresponding
    answer for a patient.
  name: health profile question
- description: A health question definition specifies a health question and the corresponding
    answer choices.
  name: health question definition
- description: "A metric is a quantitative result for a patient. For example, vital\
    \ signs, lab results, etc. are all metrics."
  name: metric
- description: A patient is the core user of Fitbit Plus.
  name: patient
- description: A plan is the set of actions and associated goals for a patient.
  name: plan
- description: A patient health result is a quantitative result for a patient.
  name: result
- description: A reward allocates a portion of the budget from the reward program
    activation for achieving a particular goal and sets a target date.
  name: reward
- description: A reward earning specifies the portion of a reward that was earned
    and at what date.
  name: reward earning
- description: A reward earning fulfillment specifies the portion of a reward earning
    that was fulfilled and at what date.
  name: reward earning fulfillment
- description: A reward program activation is the activation of a reward program for
    a specific patient.
  name: reward program activation
paths:
  /action:
    post:
      description: Create a plan action
      operationId: create_action
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateActionRequest'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateActionResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Invalid Request
      summary: Create action
      tags:
      - action
      x-openapi-router-controller: openapi_server.controllers.action_controller
      x-codegen-request-body-name: body
  /action/{id}:
    get:
      description: Get a health action from a patient's plan.
      operationId: fetch_action
      parameters:
      - description: Action identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchActionResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: Get an action
      tags:
      - action
      x-openapi-router-controller: openapi_server.controllers.action_controller
    patch:
      description: Update a health action from a patient's plan.
      operationId: update_action
      parameters:
      - description: Action identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateActionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UpdateActionResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Invalid Request
      summary: Update an action
      tags:
      - action
      x-openapi-router-controller: openapi_server.controllers.action_controller
      x-codegen-request-body-name: body
  /bundle:
    post:
      description: Create a bundle in a patient's plan
      operationId: create_bundle
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateBundleRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateBundleResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Invalid Request
      summary: Create bundle
      tags:
      - bundle
      x-openapi-router-controller: openapi_server.controllers.bundle_controller
      x-codegen-request-body-name: body
  /bundle/{id}:
    get:
      description: Get a bundle from a patient's plan.
      operationId: fetch_bundle
      parameters:
      - description: Bundle identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchBundleResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: Get a bundle
      tags:
      - bundle
      x-openapi-router-controller: openapi_server.controllers.bundle_controller
    patch:
      description: Updte a bundle from a patient's plan.
      operationId: update_bundle
      parameters:
      - description: Bundle identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateBundleRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UpdateBundleResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Invalid Request
      summary: Update a bundle
      tags:
      - bundle
      x-openapi-router-controller: openapi_server.controllers.bundle_controller
      x-codegen-request-body-name: body
  /calendar_event:
    get:
      description: Get a list of calendar events
      operationId: fetch_calendar_events
      parameters:
      - description: |
          Patient id to fetch calendar event. Note that one of the following filters must be specified: `filter[patient]`, `filter[group]`, `filter[organization]`, or `filter[attendees]`.
        explode: true
        in: query
        name: "filter[patient]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of group ids. Note that one of the following filters must be specified: `filter[patient]`, `filter[group]`, `filter[organization]`, or `filter[attendees]`.
        explode: true
        in: query
        name: "filter[groups]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          Fitbit Plus organization id. Note that one of the following filters must be specified: `filter[patient]`, `filter[group]`, `filter[organization]`, or `filter[attendees]`.
        explode: true
        in: query
        name: "filter[organization]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of coach or patient ids. Note that one of the following filters must be specified: `filter[patient]`, `filter[group]`, `filter[organization]`, or `filter[attendees]`.
        explode: true
        in: query
        name: "filter[attendees]"
        required: false
        schema:
          type: string
        style: form
      - description: Calendar event type
        explode: true
        in: query
        name: "filter[type]"
        required: false
        schema:
          enum:
          - plan-check-in
          - reminder
          - telephone-call
          - office-visit
          - video-call
          type: string
        style: form
      - description: "If not specified, return all calendar events. If set to `true`\
          \ return only events marked as completed, if set to `false`, return only\
          \ events not marked as completed yet."
        explode: true
        in: query
        name: "filter[completed]"
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          The start (inclusive) and end (exclusive) dates are ISO date and time strings separated by `..`. Example for events starting in November 2017 (America/New_York): `filter[start_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`
        explode: true
        in: query
        name: "filter[start_at]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          The start (inclusive) and end (exclusive) dates are ISO date and time strings separated by `..`. Example for events ending in November 2017 (America/New_York): `filter[end_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`
        explode: true
        in: query
        name: "filter[end_at]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          The start (inclusive) and end (exclusive) dates are ISO date and time strings separated by `..`. Example for events completed in November 2017 (America/New_York): `filter[completed_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`
        explode: true
        in: query
        name: "filter[completed_at]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          The start (inclusive) and end (exclusive) dates are ISO date and time strings separated by `..`. Example for events created in November 2017 (America/New_York): `filter[created_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`
        explode: true
        in: query
        name: "filter[created_at]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          The start (inclusive) and end (exclusive) dates are ISO date and time strings separated by `..`. Example for events updated in November 2017 (America/New_York): `filter[updated_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`
        explode: true
        in: query
        name: "filter[updated_at]"
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: "page[number]"
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: "page[size]"
        required: false
        schema:
          default: 10
          maximum: 50
          minimum: 0
          type: integer
        style: form
      - description: Page limit
        explode: true
        in: query
        name: "page[limit]"
        required: false
        schema:
          default: 50
          minimum: 0
          type: integer
        style: form
      - description: Page cursor
        explode: true
        in: query
        name: "page[cursor]"
        required: false
        schema:
          type: string
        style: form
      - description: List of related resources to include in the response
        explode: true
        in: query
        name: include
        required: false
        schema:
          enum:
          - owner
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchCalendarEventsResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Invalid Request
      summary: List calendar events
      tags:
      - calendar event
      x-openapi-router-controller: openapi_server.controllers.calendar_event_controller
    post:
      description: Create a calendar event for a patient. Attribute `all_day` must
        be set to `true` and `end_at` cannot be set for `plan-check-in` event type.
      operationId: create_calendar_event
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateCalendarEventRequest'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateCalendarEventResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Invalid Request
      summary: Create calendar event
      tags:
      - calendar event
      x-openapi-router-controller: openapi_server.controllers.calendar_event_controller
      x-codegen-request-body-name: body
  /calendar_event/{id}:
    delete:
      description: Delete a calendar event by id
      operationId: delete_calendar_event
      parameters:
      - description: Calendar event identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: Delete a calendar event
      tags:
      - calendar event
      x-openapi-router-controller: openapi_server.controllers.calendar_event_controller
    get:
      description: Get a calendar event by id
      operationId: fetch_calendar_event
      parameters:
      - description: Calendar event identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchCalendarEventResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: Get a calendar event
      tags:
      - calendar event
      x-openapi-router-controller: openapi_server.controllers.calendar_event_controller
    patch:
      description: "Update a calendar event for a patient. Attribute `all_day` must\
        \ be true and `end_at` cannot be specified for `plan-check-in` event type.\
        \ To mark a calendar event as 'completed', set `completed_at` and `completed_by`\
        \ to desired values.  To mark a completed calendar event as 'not completed',\
        \ set `completed_at` and `completed_by` to `null`. Attendees can be added\
        \ or removed, but response status cannot be updated. Use the calendar event\
        \ response api for response status updates instead."
      operationId: update_calendar_event
      parameters:
      - description: Calendar event identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateCalendarEventRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UpdateCalendarEventResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Invalid Request
      summary: Update a calendar event
      tags:
      - calendar event
      x-openapi-router-controller: openapi_server.controllers.calendar_event_controller
      x-codegen-request-body-name: body
  /calendar_event_response:
    post:
      description: "Create a calendar event response for an attendee of a calendar\
        \ event, the attendee can be a coach or patient.  Calendar event responses\
        \ cannot be fetched, updated nor deleted.  Use calendar event api to fetch\
        \ the response status for attendees."
      operationId: create_calendar_event_response
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateCalendarEventResponseRequest'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateCalendarEventResponseRequest'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Invalid Request
      summary: Create calendar event response
      tags:
      - calendar event response
      x-openapi-router-controller: openapi_server.controllers.calendar_event_response_controller
      x-codegen-request-body-name: body
  /coach:
    get:
      description: Get a list of coaches matching the specified filters.
      operationId: fetch_coaches
      parameters:
      - description: |
          Comma-separated list of group ids. Note that one of the following filters must be specified: `filter[groups]`, `filter[organization]`.
        explode: true
        in: query
        name: "filter[groups]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          Fitbit Plus organization id. Note that one of the following filters must be specified: `filter[groups]`, `filter[organization]`.
        explode: true
        in: query
        name: "filter[organization]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchCoachesResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: List coaches
      tags:
      - coach
      x-openapi-router-controller: openapi_server.controllers.coach_controller
  /coach/{id}:
    get:
      description: Get a coach record by id.
      operationId: fetch_coach
      parameters:
      - description: Coach identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchCoachResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: Get a coach
      tags:
      - coach
      x-openapi-router-controller: openapi_server.controllers.coach_controller
  /email_history:
    get:
      description: Get a list of email histories
      operationId: fetch_email_histories
      parameters:
      - description: "Fitbit Plus user id of email recipient. Required if filter[sender]\
          \ is not defined."
        explode: true
        in: query
        name: "filter[receiver]"
        required: false
        schema:
          type: string
        style: form
      - description: "Fitbit Plus user id of email sender. Required if filter[receiver]\
          \ is not defined."
        explode: true
        in: query
        name: "filter[sender]"
        required: false
        schema:
          type: string
        style: form
      - description: Type of email
        explode: true
        in: query
        name: "filter[emailType]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          valid sorts:
            * send_time - ascending by send_time
            * -send_time - descending by send_time
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - send_time
          - -send_time
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchEmailHistoriesResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Invalid Request
      summary: List email histories
      tags:
      - email history
      x-openapi-router-controller: openapi_server.controllers.email_history_controller
  /email_history/{id}:
    get:
      description: Get an email history by id
      operationId: fetch_email_history
      parameters:
      - description: Email history identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchEmailHistoryResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: Get an email history
      tags:
      - email history
      x-openapi-router-controller: openapi_server.controllers.email_history_controller
  /group:
    get:
      description: Get a list of groups matching the specified filters.
      operationId: fetch_groups
      parameters:
      - description: Organization identifier
        explode: true
        in: query
        name: "filter[organization]"
        required: true
        schema:
          type: string
        style: form
      - description: Group name
        explode: true
        in: query
        name: "filter[name]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchGroupsResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: List groups
      tags:
      - group
      x-openapi-router-controller: openapi_server.controllers.group_controller
    post:
      description: Create a group record.
      operationId: create_group
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateGroupResponse'
          description: Created
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Invalid Request
      summary: Create a group
      tags:
      - group
      x-openapi-router-controller: openapi_server.controllers.group_controller
      x-codegen-request-body-name: body
  /group/{id}:
    get:
      description: Get a group record by id.
      operationId: fetch_group
      parameters:
      - description: Group identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchGroupResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: Get a group
      tags:
      - group
      x-openapi-router-controller: openapi_server.controllers.group_controller
  /health_profile:
    get:
      description: Get a list of health profiles
      operationId: fetch_health_profiles
      parameters:
      - description: |
          Patient id to fetch health profile. Note that one of the following filters must be specified: `filter[patient]`, `filter[group]`, or `filter[organization]`.
        explode: true
        in: query
        name: "filter[patient]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of group ids. Note that one of the following filters must be specified: `filter[patient]`, `filter[group]`, or `filter[organization]`.
        explode: true
        in: query
        name: "filter[groups]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          Fitbit Plus organization id. Note that one of the following filters must be specified: `filter[patient]`, `filter[group]`, or `filter[organization]`.
        explode: true
        in: query
        name: "filter[organization]"
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: "page[number]"
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: "page[size]"
        required: false
        schema:
          default: 10
          maximum: 50
          minimum: 0
          type: integer
        style: form
      - description: Page limit
        explode: true
        in: query
        name: "page[limit]"
        required: false
        schema:
          default: 50
          minimum: 0
          type: integer
        style: form
      - description: Page cursor
        explode: true
        in: query
        name: "page[cursor]"
        required: false
        schema:
          type: string
        style: form
      - description: List of related resources to include in the response
        explode: true
        in: query
        name: include
        required: false
        schema:
          enum:
          - patient
          - questions
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchHealthProfilesResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Invalid Request
      summary: List health profiles
      tags:
      - health profile
      x-openapi-router-controller: openapi_server.controllers.health_profile_controller
  /health_profile/{id}:
    get:
      description: Get a health profile by id
      operationId: fetch_health_profile
      parameters:
      - description: Health profile identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: List of related resources to include in the response
        explode: true
        in: query
        name: include
        required: false
        schema:
          enum:
          - patient
          - questions
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchHealthProfileResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: Get a health profile
      tags:
      - health profile
      x-openapi-router-controller: openapi_server.controllers.health_profile_controller
  /health_profile_answer:
    get:
      description: Get a list of health profile answers
      operationId: fetch_health_profile_answers
      parameters:
      - description: |
          Patient id to fetch healt profile answers. Note that one of the following filters must be specified: `filter[patient]`, `filter[group]`, or `filter[organization]`.
        explode: true
        in: query
        name: "filter[patient]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of group ids. Note that one of the following filters must be specified: `filter[patient]`, `filter[group]`, or `filter[organization]`.
        explode: true
        in: query
        name: "filter[groups]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          Fitbit Plus organization id. Note that one of the following filters must be specified: `filter[patient]`, `filter[group]`, or `filter[organization]`.
        explode: true
        in: query
        name: "filter[organization]"
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: "page[number]"
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: "page[size]"
        required: false
        schema:
          default: 50
          maximum: 100
          minimum: 0
          type: integer
        style: form
      - description: Page limit
        explode: true
        in: query
        name: "page[limit]"
        required: false
        schema:
          default: 50
          minimum: 0
          type: integer
        style: form
      - description: Page cursor
        explode: true
        in: query
        name: "page[cursor]"
        required: false
        schema:
          type: string
        style: form
      - description: List of related resources to include in the response
        explode: true
        in: query
        name: include
        required: false
        schema:
          enum:
          - patient
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchHealthProfileAnswersResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Invalid Request
      summary: List health profile answers
      tags:
      - health profile answer
      x-openapi-router-controller: openapi_server.controllers.health_profile_answer_controller
  /health_profile_answer/{id}:
    get:
      description: Get a health profile answer by id
      operationId: fetch_health_profile_answer
      parameters:
      - description: Health profile answer identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: List of related resources to include in the response
        explode: true
        in: query
        name: include
        required: false
        schema:
          enum:
          - patient
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchHealthProfileAnswerResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: Get a health profile answer
      tags:
      - health profile answer
      x-openapi-router-controller: openapi_server.controllers.health_profile_answer_controller
  /health_profile_question:
    get:
      description: Get a list of health profile questions
      operationId: fetch_health_profile_questions
      parameters:
      - description: |
          Patient id to fetch healt profile questions. Note that one of the following filters must be specified: `filter[patient]`, `filter[group]`, or `filter[organization]`.
        explode: true
        in: query
        name: "filter[patient]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of group ids. Note that one of the following filters must be specified: `filter[patient]`, `filter[group]`, or `filter[organization]`.
        explode: true
        in: query
        name: "filter[groups]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          Fitbit Plus organization id. Note that one of the following filters must be specified: `filter[patient]`, `filter[group]`, or `filter[organization]`.
        explode: true
        in: query
        name: "filter[organization]"
        required: false
        schema:
          type: string
        style: form
      - description: List of related resources to include in the response
        explode: true
        in: query
        name: include
        required: false
        schema:
          enum:
          - question_definition
          - answer
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchHealthProfileQuestionsResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Invalid Request
      summary: List health profile questions
      tags:
      - health profile question
      x-openapi-router-controller: openapi_server.controllers.health_profile_question_controller
  /health_profile_question/{id}:
    get:
      description: Get a health profile by id
      operationId: fetch_health_profile_question
      parameters:
      - description: Health profile question identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: List of related resources to include in the response
        explode: true
        in: query
        name: include
        required: false
        schema:
          enum:
          - question_definition
          - answer
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchHealthProfileQuestionResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: Get a health profile question
      tags:
      - health profile question
      x-openapi-router-controller: openapi_server.controllers.health_profile_question_controller
  /health_question_definition:
    get:
      description: Get a list of all health question definitions
      operationId: fetch_health_question_definitions
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchHealthQuestionDefinitionsResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Invalid Request
      summary: List health question definitions
      tags:
      - health question definition
      x-openapi-router-controller: openapi_server.controllers.health_question_definition_controller
  /health_question_definition/{id}:
    get:
      description: Get a health question definition by id
      operationId: fetch_health_question_definition
      parameters:
      - description: Health question definition identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchHealthQuestionDefinitionResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: Get a health question definition
      tags:
      - health question definition
      x-openapi-router-controller: openapi_server.controllers.health_question_definition_controller
  /oauth/token:
    post:
      description: |
        Create an OAuth 2.0 Bearer token. A valid bearer token is required for all other API requests.

        Be sure to set the header `Content-Type: "application/vnd.api+json"`. Otherwise, you will get an error
        403 Forbidden. Using `Content-Type: "application/json"` is permitted (to support older oauth clients) but when
        using `application/json` the body should have a body in the following format instead of nesting under
        `data.attributes`:
        ```
        {
          "grant_type": "client_credentials",
          "client_id": "95c78ab2-167f-40b8-8bec-8398d4b87454",
          "client_secret": "35d18dc9-a3dd-4948-b787-063a490b9354"
        }
        ```
      operationId: create_token
      parameters:
      - description: List of related resources to include in the response
        explode: true
        in: query
        name: include
        required: false
        schema:
          enum:
          - groups
          - organization
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTokenRequest'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateTokenRequest'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateTokenResponse'
          description: Created
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Invalid Request
      security:
      - OAuth2:
        - group
        - organization
      summary: Create an oauth token
      tags:
      - oauth
      x-openapi-router-controller: openapi_server.controllers.oauth_controller
      x-codegen-request-body-name: body
  /oauth/token/{id}/groups:
    get:
      description: Get the list of groups a token can be used to access.
      operationId: fetch_token_groups
      parameters:
      - description: Token identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchGroupsResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      security:
      - OAuth2:
        - group
        - organization
      summary: Get the groups for a token
      tags:
      - oauth
      x-openapi-router-controller: openapi_server.controllers.oauth_controller
  /oauth/token/{id}/organization:
    get:
      description: Get the organization a token can be used to access.
      operationId: fetch_token_organization
      parameters:
      - description: Token identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchOrganizationResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: Get the organization for a token
      tags:
      - oauth
      x-openapi-router-controller: openapi_server.controllers.oauth_controller
  /organization/{id}:
    get:
      description: Get an organization record by id.
      operationId: fetch_organization
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchOrganizationResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: Get an organization
      tags:
      - organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
  /patient:
    get:
      description: Get a list of patients.
      operationId: fetch_patients
      parameters:
      - description: "Comma-separated list of group ids. Note that either `filter[group]`\
          \ or `filter[organization]` must be specified."
        explode: true
        in: query
        name: "filter[groups]"
        required: false
        schema:
          type: string
        style: form
      - description: "Fitbit Plus organization id. Note that either `filter[group]`\
          \ or `filter[organization]` must be specified."
        explode: true
        in: query
        name: "filter[organization]"
        required: false
        schema:
          type: string
        style: form
      - description: "Identifier system (example: \"MyEHR\") - requires a \"filter[identifier][value]\"\
          \ parameter"
        explode: true
        in: query
        name: "filter[identifier][system]"
        required: false
        schema:
          type: string
        style: form
      - description: "Identifier value (example: \"12345\") - requires a \"filter[identifier][system]\"\
          \ parameter"
        explode: true
        in: query
        name: "filter[identifier][value]"
        required: false
        schema:
          type: string
        style: form
      - description: "If not specified, return all patients. If set to 'true' return\
          \ only archived patients, if set to 'false', return only patients who are\
          \ not archived."
        explode: true
        in: query
        name: "filter[archived]"
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          The start (inclusive) and end (exclusive) dates are ISO date and time strings separated by `..`. Example for patients created in November 2017 (America/New_York): `filter[created_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`
        explode: true
        in: query
        name: "filter[created_at]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          The start (inclusive) and end (exclusive) dates are ISO date and time strings separated by `..`. Example for patients updated in November 2017 (America/New_York): `filter[updated_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`
        explode: true
        in: query
        name: "filter[updated_at]"
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: "page[number]"
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: "page[size]"
        required: false
        schema:
          default: 10
          maximum: 50
          minimum: 0
          type: integer
        style: form
      - description: Page limit
        explode: true
        in: query
        name: "page[limit]"
        required: false
        schema:
          default: 50
          minimum: 0
          type: integer
        style: form
      - description: Page cursor
        explode: true
        in: query
        name: "page[cursor]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchPatientsResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Invalid Request
      summary: List patients
      tags:
      - patient
      x-openapi-router-controller: openapi_server.controllers.patient_controller
    post:
      description: |
        Create a patient record.

        Example for creating a patient with a group specified using `meta.query` instead of `id`:

        ```JSON
        {
          "data": {
            "type": "patient",
            "attributes": {
              "first_name": "Andrew",
              "last_name": "Smith"
            },
            "relationships": {
              "groups": {
                "data": [
                  {
                    "type": "group",
                    "meta": {
                      "query": {
                        "organization": "58c88de7c93eb96357a87033",
                        "name": "Patients Lead"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
        ```
      operationId: create_patient
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreatePatientRequest'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreatePatientResponse'
          description: Created
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Invalid Request
      summary: Create a patient
      tags:
      - patient
      x-openapi-router-controller: openapi_server.controllers.patient_controller
      x-codegen-request-body-name: body
    put:
      description: Create a new patient or update an existing patient
      operationId: upsert_patient
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpsertPatientRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreatePatientResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Invalid Request
      summary: Upsert patient
      tags:
      - patient
      x-openapi-router-controller: openapi_server.controllers.patient_controller
      x-codegen-request-body-name: body
  /patient/{id}:
    get:
      description: Gets a patient record by id.
      operationId: fetch_patient
      parameters:
      - description: Patient identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchPatientResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: Get a patient
      tags:
      - patient
      x-openapi-router-controller: openapi_server.controllers.patient_controller
    patch:
      description: Update a patient record.
      operationId: update_patient
      parameters:
      - description: Patient identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdatePatientRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UpdatePatientResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Invalid Request
      summary: Update a patient
      tags:
      - patient
      x-openapi-router-controller: openapi_server.controllers.patient_controller
      x-codegen-request-body-name: body
  /patient/{id}/coaches:
    get:
      description: Get the list of coaches for a patient.
      operationId: fetch_patient_coaches
      parameters:
      - description: Patient identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchCoachesResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: List coaches for a patient
      tags:
      - patient
      x-openapi-router-controller: openapi_server.controllers.patient_controller
  /patient/{id}/groups:
    get:
      description: Get the list of groups for a patient.
      operationId: fetch_patient_groups
      parameters:
      - description: Patient identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchGroupsResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: List groups for a patient
      tags:
      - patient
      x-openapi-router-controller: openapi_server.controllers.patient_controller
  /patient_health_metric:
    get:
      description: Get a list of patient health metrics.
      operationId: fetch_patient_health_metrics
      parameters:
      - description: |
          Filter the patient health metrics for a specified patient. Note that one of the following filters must be specified: `filter[patient]`, `filter[groups]`, `filter[organization]`.
        explode: true
        in: query
        name: "filter[patient]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of group ids. Note that one of the following filters must be specified: `filter[patient]`, `filter[groups]`, `filter[organization]`.
        explode: true
        in: query
        name: "filter[groups]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          Fitbit Plus organization id. Note that one of the following filters must be specified: `filter[patient]`, `filter[groups]`, `filter[organization]`.
        explode: true
        in: query
        name: "filter[organization]"
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: "page[number]"
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: "page[size]"
        required: false
        schema:
          default: 10
          maximum: 50
          minimum: 0
          type: integer
        style: form
      - description: Page limit
        explode: true
        in: query
        name: "page[limit]"
        required: false
        schema:
          default: 50
          minimum: 0
          type: integer
        style: form
      - description: Page cursor
        explode: true
        in: query
        name: "page[cursor]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchPatientHealthMetricResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Invalid Request
      summary: List patient health metrics
      tags:
      - metric
      x-openapi-router-controller: openapi_server.controllers.metric_controller
    post:
      description: |
        Create one or more patient health metrics.

        Example for creating a patient health result with a patient specified using `meta.query` instead of `id`:

        ```JSON
          {
            "data": {
              "type": "patient_health_metric",
               "attributes": {
                 "code": {
                   "system": "LOINC",
                   "value": "13457-7"
                 },
                 "type": "ldl_cholesterol",
                 "occurred_at": "2017-03-14T11:00:57.000Z",
                 "value": 121,
                 "unit": "mg/dl"
              },
              "relationships": {
                "patient": {
                  "data": {
                    "type": "patient",
                    "meta": {
                      "query": {
                        "identifier": {
                          "system": "medical-record-number",
                          "value": "121212"
                        },
                        "organization": "58c4554710123c5c40dbab81"
                      }
                    }
                  }
                }
              }
            }
          }
        ```
      operationId: create_patient_health_metric
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreatePatientHealthMetricRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreatePatientHealthMetricResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Invalid Request
      summary: Create patient health metrics
      tags:
      - metric
      x-openapi-router-controller: openapi_server.controllers.metric_controller
      x-codegen-request-body-name: body
  /patient_health_metric/{id}:
    get:
      description: Get the plan summary for a patient.
      operationId: fetch_patient_health_metric
      parameters:
      - description: Patient health metric identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchPatientHealthMetricResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: Get a patient health metric
      tags:
      - metric
      x-openapi-router-controller: openapi_server.controllers.metric_controller
  /patient_plan_summary:
    get:
      description: Get a list of patient plan summaries
      operationId: fetch_patient_plan_summaries
      parameters:
      - description: |
          Patient id to fetch plan summary for. Note that one of the following filters must be specified: `filter[patient]`, `filter[groups]`, `filter[organization]`.
        explode: true
        in: query
        name: "filter[patient]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of group ids. Note that one of the following filters must be specified: `filter[patient]`, `filter[groups]`, `filter[organization]`.
        explode: true
        in: query
        name: "filter[groups]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          Fitbit Plus organization id. Note that one of the following filters must be specified: `filter[patient]`, `filter[groups]`, `filter[organization]`.
        explode: true
        in: query
        name: "filter[organization]"
        required: false
        schema:
          type: string
        style: form
      - description: List of related resources to include in the response
        explode: true
        in: query
        name: include
        required: false
        schema:
          enum:
          - actions
          - bundles
          - patient
          - current_results
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchPatientPlanSummariesResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: List patient plan summaries
      tags:
      - plan
      x-openapi-router-controller: openapi_server.controllers.plan_controller
  /patient_plan_summary/{id}:
    get:
      description: Get the plan summary for a patient.
      operationId: fetch_patient_plan_summary
      parameters:
      - description: Plan summary identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: List of related resources to include in the response
        explode: true
        in: query
        name: include
        required: false
        schema:
          enum:
          - actions
          - bundles
          - patient
          - current_results
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchPatientPlanSummaryResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: Get the plan summary for a patient
      tags:
      - plan
      x-openapi-router-controller: openapi_server.controllers.plan_controller
    patch:
      description: Update a plan summary record for a patient.
      operationId: update_patient_plan_summary
      parameters:
      - description: Plan summary identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdatePatientPlanSummaryRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UpdatePatientPlanSummaryResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Invalid Request
      summary: Update a plan summary
      tags:
      - plan
      x-openapi-router-controller: openapi_server.controllers.plan_controller
      x-codegen-request-body-name: body
  /result:
    get:
      description: Get a list of patient health results.
      operationId: fetch_patient_health_results
      parameters:
      - description: Filter the patient health results for a specified patient
        explode: true
        in: query
        name: "filter[patient]"
        required: true
        schema:
          type: string
        style: form
      - description: A comma-separated list of action identifiers
        explode: true
        in: query
        name: "filter[actions]"
        required: false
        schema:
          type: string
        style: form
      - description: Filter results that occurred after the passed ISO date and time
          string
        explode: true
        in: query
        name: "filter[start_at]"
        required: false
        schema:
          format: dateTime
          type: string
        style: form
      - description: Filter results that occurred before the passed ISO date and time
          string
        explode: true
        in: query
        name: "filter[end_at]"
        required: false
        schema:
          format: dateTime
          type: string
        style: form
      - description: A comma-separated list of thread identifiers
        explode: true
        in: query
        name: "filter[threads]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          The start (inclusive) and end (exclusive) dates are ISO date and time strings separated by `..`. Example for results created in November 2017 (America/New_York): `filter[created_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`
        explode: true
        in: query
        name: "filter[created_at]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          The start (inclusive) and end (exclusive) dates are ISO date and time strings separated by `..`. Example for results updated in November 2017 (America/New_York): `filter[updated_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`
        explode: true
        in: query
        name: "filter[updated_at]"
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: "page[number]"
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: "page[size]"
        required: false
        schema:
          default: 10
          maximum: 50
          minimum: 0
          type: integer
        style: form
      - description: Page limit
        explode: true
        in: query
        name: "page[limit]"
        required: false
        schema:
          default: 50
          minimum: 0
          type: integer
        style: form
      - description: Page cursor
        explode: true
        in: query
        name: "page[after]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchPatientHealthResultResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Invalid Request
      summary: List patient health results
      tags:
      - result
      x-openapi-router-controller: openapi_server.controllers.result_controller
  /result/{id}:
    get:
      description: Get patient health result by id.
      operationId: fetch_patient_health_result
      parameters:
      - description: Patient health result identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchPatientHealthResultResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: Get a patient health result
      tags:
      - result
      x-openapi-router-controller: openapi_server.controllers.result_controller
  /reward:
    get:
      description: Get a list of rewards matching the specified filters.
      operationId: fetch_rewards
      parameters:
      - description: |
          Patient identifier. Note that one of the following filters must be specified: `filter[patient]`, `filter[groups]`, `filter[organization]`.
        explode: true
        in: query
        name: "filter[patient]"
        required: false
        schema:
          type: string
        style: form
      - description: Reward program activation identifier
        explode: true
        in: query
        name: "filter[reward_program_activation]"
        required: false
        schema:
          type: string
        style: form
      - description: Thread identifier
        explode: true
        in: query
        name: "filter[thread]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of group ids. Note that one of the following filters must be specified: `filter[patient]`, `filter[groups]`, `filter[organization]`.
        explode: true
        in: query
        name: "filter[groups]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          Fitbit Plus organization id. Note that one of the following filters must be specified: `filter[patient]`, `filter[groups]`, `filter[organization]`.
        explode: true
        in: query
        name: "filter[organization]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchRewardsResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: List rewards
      tags:
      - reward
      x-openapi-router-controller: openapi_server.controllers.reward_controller
    post:
      description: Create a reward for a patient.
      operationId: create_reward
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateRewardRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateRewardResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Invalid Request
      summary: Create a reward
      tags:
      - reward
      x-openapi-router-controller: openapi_server.controllers.reward_controller
      x-codegen-request-body-name: body
  /reward/{id}:
    get:
      description: Get a reward record by id.
      operationId: fetch_reward
      parameters:
      - description: Reward identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchRewardResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: Get a reward
      tags:
      - reward
      x-openapi-router-controller: openapi_server.controllers.reward_controller
  /reward_earning:
    get:
      description: Get a list of reward earnings matching the specified filters.
      operationId: fetch_reward_earnings
      parameters:
      - description: Group identifiers
        explode: true
        in: query
        name: "filter[groups]"
        required: true
        schema:
          type: string
        style: form
      - description: Patient identifier
        explode: true
        in: query
        name: "filter[patient]"
        required: true
        schema:
          type: string
        style: form
      - description: "If true, only returns those reward earnings for which ready_for_fulfillment\
          \ is true and fulfilled_at is null. If false, only returns those reward\
          \ earnings for which ready_for_fulfillment is false and fulfilled_at is\
          \ null."
        explode: true
        in: query
        name: "filter[ready_for_fulfillment]"
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchRewardEarningsResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: List reward earnings
      tags:
      - reward earning
      x-openapi-router-controller: openapi_server.controllers.reward_earning_controller
    post:
      description: Create a reward earning for a reward. There can only be one earning
        for a reward. It is possilble to create multiple reward earnings simultaneously
        by providing and array of reward earnings in the data property.
      operationId: create_reward_earning
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateRewardEarningRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateRewardEarningResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Invalid Request
      summary: Create a reward earning
      tags:
      - reward earning
      x-openapi-router-controller: openapi_server.controllers.reward_earning_controller
      x-codegen-request-body-name: body
  /reward_earning/{id}:
    get:
      description: Get a reward earning record by id.
      operationId: fetch_reward_earning
      parameters:
      - description: Reward earning identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchRewardEarningResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: Get a reward earning
      tags:
      - reward earning
      x-openapi-router-controller: openapi_server.controllers.reward_earning_controller
  /reward_earning_fulfillment:
    get:
      description: Get a list of reward earning fulfillments matching the specified
        filters.
      operationId: fetch_reward_earning_fulfillments
      parameters:
      - description: Patient identifier
        explode: true
        in: query
        name: "filter[patient]"
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchRewardEarningFulfillmentsResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: List reward earning fulfillments
      tags:
      - reward earning fulfillment
      x-openapi-router-controller: openapi_server.controllers.reward_earning_fulfillment_controller
    post:
      description: Create a reward earning fulfillment for a reward earning. There
        can only be one fulfillment for each earning.
      operationId: create_reward_earning_fulfillment
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateRewardEarningFulfillmentRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateRewardEarningFulfillmentResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Invalid Request
      summary: Create a reward earning fulfillment
      tags:
      - reward earning fulfillment
      x-openapi-router-controller: openapi_server.controllers.reward_earning_fulfillment_controller
      x-codegen-request-body-name: body
  /reward_earning_fulfillment/{id}:
    get:
      description: Get a reward earning fulfillment record by id.
      operationId: fetch_reward_earning_fulfillment
      parameters:
      - description: Reward earning fulfillment identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchRewardEarningFulfillmentResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: Get a reward earning fulfillment
      tags:
      - reward earning fulfillment
      x-openapi-router-controller: openapi_server.controllers.reward_earning_fulfillment_controller
  /reward_program:
    get:
      description: Get a list of reward programs matching the specified filters.
      operationId: fetch_reward_programs
      parameters:
      - description: |
          Comma-separated list of group identifiers. Note that one of the following filters must be specified: `filter[groups]`, `filter[organization]`.
        explode: true
        in: query
        name: "filter[groups]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          Fitbit Plus organization id. Note that one of the following filters must be specified: `filter[groups]`, `filter[organization]`.
        explode: true
        in: query
        name: "filter[organization]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchRewardProgramsResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: List reward programs
      tags:
      - reward program
      x-openapi-router-controller: openapi_server.controllers.reward_program_controller
    post:
      description: Create a reward program for a group.
      operationId: create_reward_program
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateRewardProgramRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateRewardProgramResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Invalid Request
      summary: Create a reward program
      tags:
      - reward program
      x-openapi-router-controller: openapi_server.controllers.reward_program_controller
      x-codegen-request-body-name: body
  /reward_program/{id}:
    get:
      description: Get a reward program record by id.
      operationId: fetch_reward_program
      parameters:
      - description: Reward program identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchRewardProgramResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: Get a reward program
      tags:
      - reward program
      x-openapi-router-controller: openapi_server.controllers.reward_program_controller
  /reward_program/{id}/group:
    get:
      description: Get the group related to a reward program.
      operationId: fetch_reward_program_group
      parameters:
      - description: Reward program identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchGroupsResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: Get group for a reward program
      tags:
      - reward program
      x-openapi-router-controller: openapi_server.controllers.reward_program_controller
  /reward_program_activation:
    get:
      description: Get a list of reward program activations matching the specified
        filters.
      operationId: fetch_reward_program_activations
      parameters:
      - description: |
          Patient identifier. Note that one of the following filters must be specified: `filter[patient]`, `filter[groups]`, `filter[organization]`.
        explode: true
        in: query
        name: "filter[patient]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          Comma-separated list of group ids. Note that one of the following filters must be specified: `filter[patient]`, `filter[groups]`, `filter[organization]`.
        explode: true
        in: query
        name: "filter[groups]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          Fitbit Plus organization id. Note that one of the following filters must be specified: `filter[patient]`, `filter[groups]`, `filter[organization]`.
        explode: true
        in: query
        name: "filter[organization]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchRewardProgramActivationsResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: List reward program activations
      tags:
      - reward program activation
      x-openapi-router-controller: openapi_server.controllers.reward_program_activation_controller
    post:
      description: Create a reward program activation for a patient. There can only
        be one activation for a patient for a given reward program.
      operationId: create_reward_program_activation
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateRewardProgramActivationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateRewardProgramActivationResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Forbidden
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateErrorResponse'
          description: Invalid Request
      summary: Create a reward program activation
      tags:
      - reward program activation
      x-openapi-router-controller: openapi_server.controllers.reward_program_activation_controller
      x-codegen-request-body-name: body
  /reward_program_activation/{id}:
    get:
      description: Get a reward program activationrecord by id.
      operationId: fetch_reward_program_activation
      parameters:
      - description: Reward program activation identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchRewardProgramActivationResponse'
          description: OK
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchErrorResponse'
          description: Forbidden
      summary: Get a reward program activation
      tags:
      - reward program activation
      x-openapi-router-controller: openapi_server.controllers.reward_program_activation_controller
components:
  schemas:
    ActionMetric:
      properties:
        goal:
          title: goal
          type: object
        metric_type:
          title: metric_type
          type: string
        unit:
          title: unit
          type: string
        validations:
          $ref: '#/components/schemas/ActionMetric_validations'
      title: ActionMetric
      type: object
    ActionResource:
      properties:
        attributes:
          $ref: '#/components/schemas/ActionResource_attributes'
        id:
          title: id
          type: string
        relationships:
          $ref: '#/components/schemas/ActionResource_relationships'
        type:
          title: type
          type: string
      required:
      - id
      - type
      title: ActionResource
      type: object
    ActionWindow:
      properties:
        _id:
          title: _id
          type: string
        title:
          title: title
          type: string
        type:
          title: type
          type: string
      required:
      - type
      title: ActionWindow
      type: object
    Address:
      properties:
        city:
          example: Cambridge
          title: city
          type: string
        country:
          title: country
          type: string
        district:
          title: district
          type: string
        lines:
          example:
          - 1234 Any St.
          items:
            type: string
          title: lines
          type: array
        postal_code:
          example: "02138"
          title: postal_code
          type: string
        state:
          example: MA
          title: state
          type: string
        text:
          title: text
          type: string
        type:
          title: type
          type: string
        use:
          title: use
          type: string
      title: Address
      type: object
    ArchiveHistory:
      properties:
        archived:
          example: true
          title: archived
          type: boolean
        modified_at:
          example: 2016-06-03T13:15:22.000Z
          format: dateTime
          title: modified_at
          type: string
        notes:
          example: Patient called requesting opt out of coaching
          title: notes
          type: string
        reason:
          example: Opted out of coaching
          title: reason
          type: string
      title: ArchiveHistory
      type: object
    BundleResource:
      properties:
        attributes:
          $ref: '#/components/schemas/BundleResource_attributes'
        id:
          title: id
          type: string
        relationships:
          $ref: '#/components/schemas/BundleResource_relationships'
        type:
          title: type
          type: string
      required:
      - id
      - type
      title: BundleResource
      type: object
    CalendarEventResource:
      example:
        attributes:
          all_day: true
          attendees:
          - _id: 5ac7e74679f6868274a42e28
            response_status: needsAction
            user: 5a0c8e27a9d454cc150997c9
          - _id: 5ac7e74679f6868274a42e27
            response_status: needsAction
            user: 5a0c8e27a9d454cc150997f7
          completed_at: 2017-11-03T06:17:34.652Z
          completed_by: 5a0c8e27a9d454cc150997c9
          created_at: 2017-10-20T10:59:40.000Z
          created_by: 5a0c8e27a9d454cc150997c9
          end_at: 2017-11-03T08:00:00.000Z
          start_at: 2017-11-03T04:00:00.000Z
          time_zone: America/New_York
          title: Plan Check-In
          type: plan-check-in
          updated_at: 2017-10-20T10:59:40.000Z
          updated_by: 5a0c8e27a9d454cc150997c9
        id: 5a0c8e2aa9d454cc1509a142
        links:
          self: /pub/calendar_event/5a0c8e2aa9d454cc1509a142
        relationships:
          owner:
            data:
              id: 5a0c8e27a9d454cc150997f7
              type: patient
            links:
              related: /pub/calendar_event/5a0c8e2aa9d454cc1509a142/owner
        type: calendar_event
      properties:
        attributes:
          $ref: '#/components/schemas/CalendarEventResource_attributes'
        id:
          type: string
        links:
          $ref: '#/components/schemas/CalendarEventResource_links'
        relationships:
          $ref: '#/components/schemas/CalendarEventResource_relationships'
        type:
          enum:
          - calendar_event
          type: string
      title: CalendarEventResource
      type: object
    CalendarEventResponseResource:
      example:
        attributes:
          attendee: 5ac7e74679f6868274a42e28
          response_status: accepted
        id: 5ad0f966ceb0909e4bfa84dd
        links:
          self: /pub/calendar_event_response/5ad0f966ceb0909e4bfa84dd
        relationships:
          calendar_event:
            data:
              id: 5755db2a3db4179179999acf
              type: calendar_event
            links:
              related: /pub/calendar_event_response/5ad0f966ceb0909e4bfa84dd/calendar_event
          user:
            data:
              id: 5a0c8e27a9d454cc150997f7
              type: user
            links:
              related: /pub/calendar_event_response/5ad0f966ceb0909e4bfa84dd/user
        type: calendar_event_response
      properties:
        attributes:
          $ref: '#/components/schemas/CalendarEventResponseResource_attributes'
        id:
          type: string
        links:
          $ref: '#/components/schemas/CalendarEventResponseResource_links'
        relationships:
          $ref: '#/components/schemas/CalendarEventResponseResource_relationships'
        type:
          enum:
          - calendar_event_response
          type: string
      type: object
    CoachResource:
      properties:
        attributes:
          $ref: '#/components/schemas/CoachResource_attributes'
        id:
          example: 57b36e3c04ad8c2224f2af38
          title: id
          type: string
        links:
          $ref: '#/components/schemas/CoachResource_links'
        type:
          enum:
          - coach
          example: coach
          title: type
          type: string
      required:
      - attributes
      - id
      - type
      title: CoachResource
      type: object
    CollectionResponseLinks:
      properties:
        last:
          title: last
          type: string
        next:
          title: next
          type: string
        prev:
          title: prev
          type: string
        self:
          title: self
          type: string
      title: CollectionResponseLinks
      type: object
    CreateActionRequest:
      example:
        data:
          attributes:
            effective_from: 2017-02-20T11:12:13.000Z
            frequency_goal:
              weeks:
                days:
                - 0
            metrics:
            - goal:
                data:
                  diastolic:
                    unit: mmHg
                    value: 95
                  systolic:
                    unit: mmHg
                    value: 150
              metric_type: blood_pressure
              unit: mmHg
            title: Record Blood Pressure
            type: blood_pressure
          relationships:
            bundles:
              data:
              - id: 58aacf0d076adcef394bac30
                type: bundle
            plan:
              data:
                id: 58aacf0d076adcef394bac35
                type: patient_plan_summary
          type: action
      properties:
        data:
          $ref: '#/components/schemas/ActionResource'
      required:
      - data
      title: CreateActionRequest
      type: object
    CreateActionResponse:
      example:
        data:
          attributes:
            _thread: blood_pressure
            adherence:
              complete: 0
              due: 0
              streak:
                count: 0
            created_at: 2017-02-20T11:12:13.000Z
            created_by: 596541ec076adcef394bac2d
            effective_from: 2017-02-20T11:12:13.000Z
            frequency_goal:
              weeks:
                days:
                - 0
            frequency_goal_prorated: 0
            identifiers: []
            metric_required: false
            metrics:
            - _id: 58aacf0d076adcef394bac37
              accepted_values: []
              goal:
                data:
                  diastolic:
                    unit: mmHg
                    value: 95
                  systolic:
                    unit: mmHg
                    value: 150
              metric_type: blood_pressure
              unit: mmHg
            options: []
            title: Record Blood Pressure
            tracking: true
            type: blood_pressure
            updated_at: 2017-02-20T11:12:13.000Z
            updated_by: 596541ec076adcef394bac2d
            windows: []
          id: 58aacf0d076adcef394bac36
          links:
            self: /action/58aacf0d076adcef394bac36
          relationships:
            bundles:
              data:
              - id: 58aacf0d076adcef394bac30
                type: bundle
              links:
                related: /action/58aacf0d076adcef394bac36/bundles
            plan:
              data:
                id: 58aacf0d076adcef394bac35
                type: patient_plan_summary
              links:
                related: /action/58aacf0d076adcef394bac36/plan
          type: action
        included: []
        meta:
          req_id: 014ea6d2-4717-4915-b4bc-98454180614e
      properties:
        data:
          $ref: '#/components/schemas/ActionResource'
        meta:
          $ref: '#/components/schemas/CreateOrUpdateMetaResponse'
      required:
      - data
      title: CreateActionResponse
      type: object
    CreateBundleRequest:
      properties:
        data:
          $ref: '#/components/schemas/BundleResource'
      required:
      - data
      title: CreateBundleRequest
      type: object
    CreateBundleResponse:
      properties:
        data:
          $ref: '#/components/schemas/BundleResource'
        meta:
          $ref: '#/components/schemas/CreateOrUpdateMetaResponse'
      required:
      - data
      title: CreateBundleResponse
      type: object
    CreateCalendarEventRequest:
      example:
        data:
          attributes:
            all_day: true
            attendees:
            - user: 5a0c8e27a9d454cc150997c9
            - user: 5a0c8e27a9d454cc150997f7
            start_at: 2018-02-20T00:00:00Z
            time_zone: America/New_York
            title: Plan Check-In
            type: plan-check-in
          relationships:
            owner:
              data:
                id: 5a0c8e27a9d454cc150997f7
                type: patient
          type: calendar_event
      properties:
        data:
          $ref: '#/components/schemas/CreateCalendarEventRequest_data'
      required:
      - data
      title: CreateCalendarEventRequest
      type: object
    CreateCalendarEventResponse:
      properties:
        data:
          $ref: '#/components/schemas/CalendarEventResource'
        meta:
          $ref: '#/components/schemas/CreateOrUpdateMetaResponse'
      title: CreateCalendarEventResponse
      type: object
    CreateCalendarEventResponseRequest:
      example:
        data:
          attributes:
            attendee: 5ac7e74679f6868274a42e28
            response_status: accepted
          relationships:
            calendar_event:
              data:
                id: 5755db2a3db4179179999acf
                type: calendar_event
            user:
              data:
                id: 5a0c8e27a9d454cc150997f7
                type: user
          type: calendar_event_response
      properties:
        data:
          $ref: '#/components/schemas/CreateCalendarEventResponseRequest_data'
      required:
      - data
      title: CreateCalendarEventResponseRequest
      type: object
    CreateGroupRequest:
      example:
        data:
          attributes:
            name: New Group
          type: group
      properties:
        data:
          $ref: '#/components/schemas/GroupResource'
      required:
      - data
      title: CreateGroupRequest
      type: object
    CreateGroupResponse:
      example:
        data:
          attributes:
            name: New Group
          id: 5817acae6f5316c0d05ba8b8
          links:
            self: /pub/group/5817acae6f5316c0d05ba8b8
          type: group
        meta:
          req_id: 6ac6d0f2-00b2-4031-8c35-97b2bfb0aced
      properties:
        data:
          $ref: '#/components/schemas/GroupResource'
        meta:
          $ref: '#/components/schemas/CreateOrUpdateMetaResponse'
      required:
      - data
      title: CreateGroupResponse
      type: object
    CreateOrUpdateErrorResponse:
      example:
        errors:
        - code: Unauthorized
          detail: A valid bearer token is required
          status: "401"
        meta:
          req_id: d07c8b12-c95e-4a06-8424-92aac94bb445
      properties:
        errors:
          $ref: '#/components/schemas/Error'
        meta:
          $ref: '#/components/schemas/CreateOrUpdateMetaResponse'
      title: CreateOrUpdateErrorResponse
      type: object
    CreateOrUpdateMetaResponse:
      properties:
        ignored:
          items:
            type: string
          title: ignored
          type: array
        req_id:
          title: req_id
          type: string
      title: CreateOrUpdateMetaResponse
      type: object
    CreatePatientHealthMetricRequest:
      properties:
        data:
          $ref: '#/components/schemas/PatientHealthMetricCreateResource'
        meta:
          $ref: '#/components/schemas/CreatePatientHealthMetricRequest_meta'
      required:
      - data
      title: CreatePatientHealthMetricRequest
      type: object
    CreatePatientHealthMetricResponse:
      properties:
        data:
          $ref: '#/components/schemas/PatientHealthMetricResource'
        meta:
          $ref: '#/components/schemas/CreateOrUpdateMetaResponse'
      required:
      - data
      title: CreatePatientHealthMetricResponse
      type: object
    CreatePatientRequest:
      example:
        data:
          attributes:
            first_name: Jack
            last_name: Frost
          relationships:
            groups:
              data:
              - id: 5755db2a3db4179179999acf
                type: group
          type: patient
      properties:
        data:
          $ref: '#/components/schemas/PatientCreateResource'
        meta:
          $ref: '#/components/schemas/CreatePatientRequest_meta'
      required:
      - data
      title: CreatePatientRequest
      type: object
    CreatePatientResponse:
      example:
        data:
          attributes:
            addresses: []
            archive_history: []
            archived: false
            first_name: Jack
            identifiers: []
            last_name: Frost
            phone_numbers: []
            updated_at: 2016-11-01T01:07:33.121Z
          id: 5817ead56f5316c0d05ba8bf
          links:
            self: /pub/patient/5817ead56f5316c0d05ba8bf
            twine_web_app: http://10.0.1.55:9000/#/coach/patient/5817ead56f5316c0d05ba8bf
          relationships:
            coaches:
              data: []
              links:
                related: /pub/patient/5817ead56f5316c0d05ba8bf/coaches
            groups:
              data:
              - id: 5755db2a3db4179179999acf
                type: group
              links:
                related: /pub/patient/5817ead56f5316c0d05ba8bf/groups
          type: patient
        included: []
        meta:
          req_id: 5b813ad3-cabc-418f-add4-1e53bc69f7cb
      properties:
        data:
          $ref: '#/components/schemas/PatientResource'
        meta:
          $ref: '#/components/schemas/CreateOrUpdateMetaResponse'
      required:
      - data
      title: CreatePatientResponse
      type: object
    CreateRewardEarningFulfillmentRequest:
      properties:
        data:
          $ref: '#/components/schemas/RewardEarningFulfillmentResource'
      required:
      - data
      title: CreateRewardEarningFulfillmentRequest
      type: object
    CreateRewardEarningFulfillmentResponse:
      properties:
        data:
          $ref: '#/components/schemas/RewardEarningFulfillmentResource'
        meta:
          $ref: '#/components/schemas/CreateOrUpdateMetaResponse'
      required:
      - data
      title: CreateRewardEarningFulfillmentResponse
      type: object
    CreateRewardEarningRequest:
      properties:
        data:
          $ref: '#/components/schemas/RewardEarningResource'
      required:
      - data
      title: CreateRewardEarningRequest
      type: object
    CreateRewardEarningResponse:
      properties:
        data:
          $ref: '#/components/schemas/RewardEarningResource'
        meta:
          $ref: '#/components/schemas/CreateOrUpdateMetaResponse'
      required:
      - data
      title: CreateRewardEarningResponse
      type: object
    CreateRewardProgramActivationRequest:
      properties:
        data:
          $ref: '#/components/schemas/RewardProgramActivationResource'
      required:
      - data
      title: CreateRewardProgramActivationRequest
      type: object
    CreateRewardProgramActivationResponse:
      properties:
        data:
          $ref: '#/components/schemas/RewardProgramActivationResource'
        meta:
          $ref: '#/components/schemas/CreateOrUpdateMetaResponse'
      required:
      - data
      title: CreateRewardProgramActivationResponse
      type: object
    CreateRewardProgramRequest:
      properties:
        data:
          $ref: '#/components/schemas/RewardProgramResource'
      required:
      - data
      title: CreateRewardProgramRequest
      type: object
    CreateRewardProgramResponse:
      properties:
        data:
          $ref: '#/components/schemas/RewardProgramResource'
        meta:
          $ref: '#/components/schemas/CreateOrUpdateMetaResponse'
      required:
      - data
      title: CreateRewardProgramResponse
      type: object
    CreateRewardRequest:
      properties:
        data:
          $ref: '#/components/schemas/RewardResource'
      required:
      - data
      title: CreateRewardRequest
      type: object
    CreateRewardResponse:
      properties:
        data:
          $ref: '#/components/schemas/RewardResource'
        meta:
          $ref: '#/components/schemas/CreateOrUpdateMetaResponse'
      required:
      - data
      title: CreateRewardResponse
      type: object
    CreateTokenRequest:
      example:
        data:
          attributes:
            client_id: 95c78ab2-167f-40b8-8bec-8398d4b87454
            client_secret: 35d18dc9-a3dd-4948-b787-063a490b9354
            grant_type: client_credentials
          type: oauth/token
      properties:
        data:
          $ref: '#/components/schemas/CreateTokenRequest_data'
      required:
      - data
      title: CreateTokenRequest
      type: object
    CreateTokenResponse:
      example:
        data:
          attributes:
            access_token: c1b83534-76c1-4a27-b1d4-8140e24dd7c6
            expires_in: 3601
            refresh_token: a38d192a-76fd-4b1d-954c-893c9d29c8f4
            token_type: bearer
          id: 5817a24d678a7c2cbf5df3ee
          relationships:
            groups:
              data:
              - id: 5755db2a3db4179179999acf
                type: group
              links:
                related: /pub/oauth/token/5817a24d678a7c2cbf5df3ee/groups
          type: oauth/token
        meta:
          req_id: 2de51f1a-bafa-4e48-a0d0-cd8d4a9ffb28
      properties:
        data:
          $ref: '#/components/schemas/TokenResource'
        included:
          items:
            $ref: '#/components/schemas/GroupResource'
          type: array
        meta:
          $ref: '#/components/schemas/CreateOrUpdateMetaResponse'
      required:
      - data
      title: CreateTokenResponse
      type: object
    EmailHistoryResource:
      example:
        attributes:
          created_at: 2017-07-07T19:15:56.229Z
          created_by: 595fd88ef4be5b1a797ff19b
          email_address: tony@example.com
          email_type: invite
          send_time: 2017-02-25T13:35:01.000Z
          status_times:
            delivered: 2017-02-25T13:35:03.000Z
            open: 2017-02-25T14:20:00.000Z
            processed: 2017-02-25T13:35:02.000Z
          twine_email_id: 576226e5-7e25-4469-b10d-2bc6a725bfbc
          updated_at: 2017-07-07T19:15:56.229Z
          updated_by: 595fd88ef4be5b1a797ff19b
        id: 595fddec28c5041b84467592
        links:
          self: /pub/email_history/595fddec28c5041b84467592
        relationships:
          receiver:
            data:
              id: 595fddea28c5041b84466bbe
              type: patient
            links:
              related: /pub/email_history/595fddec28c5041b84467592/receiver
          sender:
            links:
              related: /pub/email_history/595fddec28c5041b84467592/sender
        type: email_history
      properties:
        attributes:
          $ref: '#/components/schemas/EmailHistoryResource_attributes'
        id:
          type: string
        relationships:
          $ref: '#/components/schemas/EmailHistoryResource_relationships'
        type:
          type: string
      required:
      - type
      title: EmailHistoryResource
      type: object
    Error:
      properties:
        code:
          enum:
          - Forbidden
          - InvalidParameter
          - InvalidBodyParameter
          - ResourceNotFound
          - Unauthorized
          - InvalidCredentials
          - InvalidGrantType
          title: code
          type: string
        detail:
          title: detail
          type: string
        source:
          $ref: '#/components/schemas/Error_source'
        status:
          title: status
          type: string
        title:
          title: title
          type: string
      title: Error
      type: object
    FetchActionResponse:
      example:
        data:
          attributes:
            _thread: weight
            adherence:
              complete: 1
              due: 1
              streak:
                count: 1
                updated_at: 2017-07-11T21:13:13.215Z
            details:
              some: mixed value
            effective_from: 2017-07-10T21:13:13.212Z
            effective_to: 2017-07-11T21:13:13.215Z
            frequency_goal:
              weeks:
                days:
                - 0
            frequency_goal_prorated: 0
            identifiers:
            - _id: 59653f699fc8be3938f04494
              label: Super Health Actions
              system: http://super.health.example.com
              value: action-0123
            metric_required: true
            metrics:
            - _id: 59653f699fc8be3938f04493
              accepted_values: []
              goal:
                data:
                  unit: lb
                  value: 210
              metric_type: weight
              unit: lb
              validations:
                maximum:
                  unit: lb
                  value: 999
                minimum:
                  unit: lb
                  value: 0
            options: []
            title: Measure Weight
            tracking: true
            type: weight
            windows:
            - _id: 59653f699fc8be3938f04492
              title: Morning
              type: morning
          id: 59653f699fc8be3938f04491
          links:
            self: /action/59653f699fc8be3938f04491
          relationships:
            bundles:
              data: []
              links:
                related: /action/59653f699fc8be3938f04491/bundles
            plan:
              links:
                related: /action/59653f699fc8be3938f04491/plan
          type: action
        included: []
        meta:
          req_id: 63bf4340-f256-400e-b391-d801d2a251f6
      properties:
        data:
          $ref: '#/components/schemas/ActionResource'
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchActionResponse
      type: object
    FetchBundleResponse:
      example:
        data:
          attributes:
            _actions:
            - 596535d9608f63d531b7e344
            _thread: "123"
            effective_from: 2017-07-11T20:31:25.000Z
            effective_to: 2017-07-11T20:32:25.000Z
            title: Weight
            type: weight
          id: 596535d9608f63d531b7e34a
          links:
            self: /bundle/596535d9608f63d531b7e34a
          relationships:
            actions:
              data:
              - id: 596535d9608f63d531b7e344
                type: action
              links:
                related: /bundle/596535d9608f63d531b7e34a/actions
            plan:
              links:
                related: /bundle/596535d9608f63d531b7e34a/plan
          type: bundle
        included: []
        meta:
          req_id: c0f8d53a-d763-4beb-b0b1-9ec6da146a14
      properties:
        data:
          $ref: '#/components/schemas/BundleResource'
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchBundleResponse
      type: object
    FetchCalendarEventResponse:
      properties:
        data:
          $ref: '#/components/schemas/CalendarEventResource'
        included:
          description: |
            Related resources which are included in the response based on the `include` param.
            Attributes of each resource will vary depending on the type.
            See [patient](#operation/fetchPatient)
          items:
            $ref: '#/components/schemas/Resource'
          title: included
          type: array
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      title: FetchCalendarEventResponse
      type: object
    FetchCalendarEventsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CalendarEventResource'
          title: data
          type: array
        included:
          description: |
            Related resources which are included in the response based on the `include` param.
            Attributes of each resource will vary depending on the type.
            See [patient](#operation/fetchPatient)
          items:
            $ref: '#/components/schemas/Resource'
          title: included
          type: array
        links:
          $ref: '#/components/schemas/CollectionResponseLinks'
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      title: FetchCalendarEventsResponse
      type: object
    FetchCoachResponse:
      example:
        data:
          attributes:
            first_name: Clarisa
            last_name: Rivera
          id: 581630c3237d84a9403533c6
          links:
            self: /pub/coach/581630c3237d84a9403533c6
          type: coach
        included: []
        meta:
          req_id: b928037e-98ed-434f-b0c4-d74b1a38a560
      properties:
        data:
          $ref: '#/components/schemas/CoachResource'
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchCoachResponse
      type: object
    FetchCoachesResponse:
      example:
        data:
        - attributes:
            first_name: Clarisa
            last_name: Rivera
          id: 581630c3237d84a9403533c6
          links:
            self: /pub/coach/581630c3237d84a9403533c6
          type: coach
        included: []
        links:
          self: /pub/patient/58163112237d84a94035f78b/coaches
        meta:
          count: 1
          req_id: 48c47326-0c8b-4c5e-85da-7fc0d00f1e4d
      properties:
        data:
          items:
            $ref: '#/components/schemas/CoachResource'
          type: array
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchCoachesResponse
      type: object
    FetchEmailHistoriesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/EmailHistoryResource'
          title: data
          type: array
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchEmailHistoriesResponse
      type: object
    FetchEmailHistoryResponse:
      properties:
        data:
          $ref: '#/components/schemas/EmailHistoryResource'
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchEmailHistoryResponse
      type: object
    FetchErrorResponse:
      example:
        errors:
        - code: Unauthorized
          detail: A valid bearer token is required
          status: "401"
        meta:
          req_id: d07c8b12-c95e-4a06-8424-92aac94bb445
      properties:
        errors:
          $ref: '#/components/schemas/Error'
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      title: FetchErrorResponse
      type: object
    FetchGroupResponse:
      example:
        data:
          attributes:
            name: Patients Lead
          id: 5755db2a3db4179179999acf
          links:
            self: /pub/group/5755db2a3db4179179999acf
          type: group
        meta:
          req_id: 2b59851e-0f6c-4a8f-a8a6-15bd7c0346e7
      properties:
        data:
          $ref: '#/components/schemas/GroupResource'
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchGroupResponse
      type: object
    FetchGroupsResponse:
      example:
        data:
        - attributes:
            name: Patients Lead
          id: 5755db2a3db4179179999acf
          links:
            self: /pub/group/5755db2a3db4179179999acf
          type: group
        links:
          self: /pub/oauth/token/5817a24d678a7c2cbf5df3ee/groups
        meta:
          count: 1
          req_id: ab554093-6081-4d37-aa7b-ca6312367ca4
      properties:
        data:
          items:
            $ref: '#/components/schemas/GroupResource'
          type: array
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchGroupsResponse
      type: object
    FetchHealthProfileAnswerResponse:
      properties:
        data:
          $ref: '#/components/schemas/HealthProfileAnswerResource'
        included:
          description: |
            Related resources which are included in the response based on the `include` param.
            Attributes of each resource will vary depending on the type.
            See [patient](#operation/fetchPatient)
          items:
            $ref: '#/components/schemas/Resource'
          title: included
          type: array
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchHealthProfileAnswerResponse
      type: object
    FetchHealthProfileAnswersResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/HealthProfileAnswerResource'
          title: data
          type: array
        included:
          description: |
            Related resources which are included in the response based on the `include` param.
            Attributes of each resource will vary depending on the type.
            See [patient](#operation/fetchPatient)
          items:
            $ref: '#/components/schemas/Resource'
          title: included
          type: array
        links:
          $ref: '#/components/schemas/CollectionResponseLinks'
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchHealthProfileAnswersResponse
      type: object
    FetchHealthProfileQuestionResponse:
      properties:
        data:
          $ref: '#/components/schemas/HealthProfileQuestionResource'
        included:
          description: |
            Related resources which are included in the response based on the `include` param.
            Attributes of each resource will vary depending on the type.
            See [question_definition](#operation/fetchHealthQuestionDefinition), [answer](#operation/fetchHealthProfileAnswer)
          items:
            $ref: '#/components/schemas/Resource'
          title: included
          type: array
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchHealthProfileQuestionResponse
      type: object
    FetchHealthProfileQuestionsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/HealthProfileQuestionResource'
          title: data
          type: array
        included:
          description: |
            Related resources which are included in the response based on the `include` param.
            Attributes of each resource will vary depending on the type.
            See [question_definition](#operation/fetchHealthQuestionDefinition), [answer](#operation/fetchHealthProfileAnswer)
          items:
            $ref: '#/components/schemas/Resource'
          title: included
          type: array
        links:
          $ref: '#/components/schemas/CollectionResponseLinks'
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchHealthProfileQuestionsResponse
      type: object
    FetchHealthProfileResponse:
      properties:
        data:
          $ref: '#/components/schemas/HealthProfileResource'
        included:
          description: |
            Related resources which are included in the response based on the `include` param.
            Attributes of each resource will vary depending on the type.
            See [patient](#operation/fetchPatient), [question](#operation/fetchHealthProfileQuestion)
          items:
            $ref: '#/components/schemas/Resource'
          title: included
          type: array
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchHealthProfileResponse
      type: object
    FetchHealthProfilesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/HealthProfileResource'
          title: data
          type: array
        included:
          description: |
            Related resources which are included in the response based on the `include` param.
            Attributes of each resource will vary depending on the type.
            See [patient](#operation/fetchPatient), [question](#operation/fetchHealthProfileQuestion)
          items:
            $ref: '#/components/schemas/Resource'
          title: included
          type: array
        links:
          $ref: '#/components/schemas/CollectionResponseLinks'
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchHealthProfilesResponse
      type: object
    FetchHealthQuestionDefinitionResponse:
      properties:
        data:
          $ref: '#/components/schemas/HealthQuestionDefinitionResource'
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchHealthQuestionDefinitionResponse
      type: object
    FetchHealthQuestionDefinitionsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/HealthQuestionDefinitionResource'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/CollectionResponseLinks'
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchHealthQuestionDefinitionsResponse
      type: object
    FetchMetaResponse:
      properties:
        count:
          title: count
          type: integer
        req_id:
          title: req_id
          type: string
      title: FetchMetaResponse
      type: object
    FetchOrganizationResponse:
      example:
        data:
          attributes:
            name: Health Activation Partners
          id: 5873b63605376e337a89d64a
          links:
            self: /pub/organization/5873b63605376e337a89d64a
          type: organization
        meta:
          req_id: aeb94ed8-d7f9-4e72-a78f-e276c4f52c2a
      properties:
        data:
          $ref: '#/components/schemas/OrganizationResource'
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchOrganizationResponse
      type: object
    FetchPatientHealthMetricResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/PatientHealthMetricResource'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/CollectionResponseLinks'
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchPatientHealthMetricResponse
      type: object
    FetchPatientHealthResultResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/PatientHealthResultResource'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/CollectionResponseLinks'
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchPatientHealthResultResponse
      type: object
    FetchPatientPlanSummariesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/PatientPlanSummaryResource'
          title: data
          type: array
        included:
          description: |
            Related resources which are included in the response based on the `include` param.
            Attributes of each resource will vary depending on the type.
            See [action](#operation/fetchAction), [bundle](#operation/fetchBundle) and [patient](#operation/fetchPatient)
          items:
            $ref: '#/components/schemas/Resource'
          title: included
          type: array
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchPatientPlanSummariesResponse
      type: object
    FetchPatientPlanSummaryResponse:
      example:
        data:
          attributes:
            adherence:
              complete: 0
              due: 0
              streak:
                count: 0
            critical:
              blood_glucose:
                data:
                  maximum:
                    unit: mg/dL
                    value: 300
                  minimum:
                    unit: mg/dL
                    value: 70
              effective_from: 2017-07-01T04:00:00.000Z
            effective_from: 2017-07-01T04:00:00.000Z
            window_notification_times:
              afternoon: 43200
              evening: 64800
              morning: 25200
              night: 75600
            window_order: []
          id: 5964f831f65725bf25558b50
          links:
            self: /patient_plan_summary/5964f831f65725bf25558b50
          relationships:
            actions:
              data:
              - id: 5964f831f65725bf25558b4b
                type: action
              links:
                related: /patient_plan_summary/5964f831f65725bf25558b50/actions
            bundles:
              data: []
              links:
                related: /patient_plan_summary/5964f831f65725bf25558b50/bundles
            current_results:
              data: []
              links:
                related: /patient_plan_summary/5964f831f65725bf25558b50/current_results
            patient:
              data:
                id: 5964f831f65725bf25558b4f
                type: patient
              links:
                related: /patient_plan_summary/5964f831f65725bf25558b50/patient
          type: patient_plan_summary
        included:
        - attributes:
            _thread: blood_pressure
            adherence:
              complete: 0
              due: 0
              streak:
                count: 0
            effective_from: 2017-07-01T04:00:00.000Z
            frequency_goal:
              weeks:
                days:
                - 0
                - 1
                - 2
                - 3
                - 4
                - 5
                - 6
            frequency_goal_prorated: 0
            identifiers: []
            metric_required: false
            metrics:
            - _id: 5964f831f65725bf25558b51
              accepted_values: []
              goal:
                data:
                  diastolic:
                    unit: mmHg
                    value: 95
                  systolic:
                    unit: mmHg
                    value: 150
              metric_type: blood_pressure
              unit: mmHg
            options: []
            title: Record Blood Pressure
            tracking: true
            type: blood_pressure
            windows: []
          id: 5964f831f65725bf25558b4b
          links:
            self: /action/5964f831f65725bf25558b4b
          relationships:
            bundles:
              data: []
              links:
                related: /action/5964f831f65725bf25558b4b/bundles
            plan:
              links:
                related: /action/5964f831f65725bf25558b4b/plan
          type: action
        meta:
          req_id: e0e78ef5-c0fd-415b-9b9f-a1b5c77c1198
      properties:
        data:
          $ref: '#/components/schemas/PatientPlanSummaryResource'
        included:
          description: |
            Related resources which are included in the response based on the `include` param.
            Attributes of each resource will vary depending on the type.
            See [action](#operation/fetchAction), [bundle](#operation/fetchBundle) and [patient](#operation/fetchPatient)
          items:
            $ref: '#/components/schemas/Resource'
          type: array
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchPatientPlanSummaryResponse
      type: object
    FetchPatientResponse:
      example:
        data:
          attributes:
            addresses: []
            archive_history: []
            archived: false
            birth_date: 1938-10-04
            first_name: Lucy
            identifiers:
            - label: Fitbit Plus Sample Data Filler Patient
              system: twine-filler-patient
              value: filler-92
            last_name: Bernhard
            phone_numbers:
            - primary: true
              value: 880-136-7979 x6183
            - primary: false
              value: 919.814.3552 x40123
            statement:
              updated_at: 2016-03-16T13:32:57.000Z
              updated_by: 5c509cc2f60e34018180b57c
              value: Enjoying nature.
            updated_at: 2016-03-16T13:32:57.000Z
          id: 58163112237d84a94035f78b
          links:
            self: /pub/patient/58163112237d84a94035f78b
            twine_web_app: http://10.0.1.55:9000/#/coach/admin/coaches/58163112237d84a94035f78b/profile
          relationships:
            coaches:
              data:
              - id: 581630c3237d84a9403533c6
                meta:
                  primary: true
                type: coach
              links:
                related: /pub/patient/58163112237d84a94035f78b/coaches
            groups:
              data:
              - id: 5755db2a3db4179179999acf
                type: group
              links:
                related: /pub/patient/58163112237d84a94035f78b/groups
          type: patient
        included: []
        meta:
          req_id: 23001d51-669b-4948-b9fa-11dbffdf8ced
      properties:
        data:
          $ref: '#/components/schemas/PatientResource'
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchPatientResponse
      type: object
    FetchPatientsResponse:
      example:
        data:
        - attributes:
            addresses: []
            archive_history: []
            archived: false
            birth_date: 1938-10-04
            first_name: Lucy
            identifiers:
            - label: Fitbit Plus Sample Data Filler Patient
              system: twine-filler-patient
              value: filler-92
            last_name: Bernhard
            phone_numbers:
            - primary: true
              value: 880-136-7979 x6183
            - primary: false
              value: 919.814.3552 x40123
            statement:
              updated_at: 2016-03-16T13:32:57.000Z
              updated_by: 5c509cc2f60e34018180b57c
              value: Enjoying nature.
            updated_at: 2016-03-16T13:32:57.000Z
          id: 58163112237d84a94035f78b
          links:
            self: /pub/patient/58163112237d84a94035f78b
            twine_web_app: http://10.0.1.55:9000/#/coach/admin/coaches/58163112237d84a94035f78b/profile
          relationships:
            coaches:
              data:
              - id: 581630c3237d84a9403533c6
                meta:
                  primary: true
                type: coach
              links:
                related: /pub/patient/58163112237d84a94035f78b/coaches
            groups:
              data:
              - id: 5755db2a3db4179179999acf
                type: group
              links:
                related: /pub/patient/58163112237d84a94035f78b/groups
          type: patient
        - attributes:
            addresses: []
            birth_date: 1983-03-16
            email_address: annette.parisian@example.com
            first_name: Annette
            identifiers:
            - label: Fitbit Plus Sample Data Filler Patient
              system: twine-filler-patient
              value: filler-5
            last_name: Parisian
            phone_numbers:
            - primary: true
              value: 044.758.5704 x1965
            updated_at: 2016-02-04T12:55:03.000Z
          id: 58163103237d84a94035f0b3
          links:
            self: /pub/patient/58163103237d84a94035f0b3
            twine_web_app: http://10.0.1.55:9000/#/coach/admin/coaches/58163103237d84a94035f0b3/profile
          relationships:
            coaches:
              data:
              - id: 581630c3237d84a9403533c6
                meta:
                  primary: true
                type: coach
              links:
                related: /pub/patient/58163103237d84a94035f0b3/coaches
            groups:
              data:
              - id: 5755db2a3db4179179999acf
                type: group
              links:
                related: /pub/patient/58163103237d84a94035f0b3/groups
          type: patient
        - attributes:
            addresses: []
            birth_date: 1932-04-06
            email_address: lexi.thompson@example.com
            first_name: Lexi
            identifiers:
            - label: Fitbit Plus Sample Data Filler Patient
              system: twine-filler-patient
              value: filler-3
            last_name: Thompson
            phone_numbers:
            - primary: true
              value: 1-977-830-6179 x26334
            updated_at: 2016-01-23T16:12:07.000Z
          id: 58163103237d84a94035f043
          links:
            self: /pub/patient/58163103237d84a94035f043
            twine_web_app: http://10.0.1.55:9000/#/coach/admin/coaches/58163103237d84a94035f043/profile
          relationships:
            coaches:
              data:
              - id: 581630c3237d84a9403533c6
                meta:
                  primary: true
                type: coach
              links:
                related: /pub/patient/58163103237d84a94035f043/coaches
            groups:
              data:
              - id: 5755db2a3db4179179999acf
                type: group
              links:
                related: /pub/patient/58163103237d84a94035f043/groups
          type: patient
        links:
          last: "/pub/patient?filter[groups]=5755db2a3db4179179999acf&page[number]=88&page[size]=3"
          next: "/pub/patient?filter[groups]=5755db2a3db4179179999acf&page[number]=2&page[size]=3"
          self: "/pub/patient?filter[groups]=5755db2a3db4179179999acf&page[number]=1&page[size]=3"
        meta:
          count: 263
          req_id: 155c690b-50b2-4ff2-8abe-b809a8a51e53
      properties:
        data:
          items:
            $ref: '#/components/schemas/PatientResource'
          type: array
        links:
          $ref: '#/components/schemas/CollectionResponseLinks'
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchPatientsResponse
      type: object
    FetchRewardEarningFulfillmentResponse:
      properties:
        data:
          $ref: '#/components/schemas/RewardEarningFulfillmentResource'
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchRewardEarningFulfillmentResponse
      type: object
    FetchRewardEarningFulfillmentsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/RewardEarningFulfillmentResource'
          title: data
          type: array
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchRewardEarningFulfillmentsResponse
      type: object
    FetchRewardEarningResponse:
      properties:
        data:
          $ref: '#/components/schemas/RewardEarningResource'
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchRewardEarningResponse
      type: object
    FetchRewardEarningsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/RewardEarningResource'
          title: data
          type: array
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchRewardEarningsResponse
      type: object
    FetchRewardProgramActivationResponse:
      properties:
        data:
          $ref: '#/components/schemas/RewardProgramActivationResource'
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchRewardProgramActivationResponse
      type: object
    FetchRewardProgramActivationsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/RewardProgramActivationResource'
          title: data
          type: array
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchRewardProgramActivationsResponse
      type: object
    FetchRewardProgramResponse:
      properties:
        data:
          $ref: '#/components/schemas/RewardProgramResource'
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchRewardProgramResponse
      type: object
    FetchRewardProgramsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/RewardProgramResource'
          title: data
          type: array
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchRewardProgramsResponse
      type: object
    FetchRewardResponse:
      properties:
        data:
          $ref: '#/components/schemas/RewardResource'
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchRewardResponse
      type: object
    FetchRewardsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/RewardResource'
          title: data
          type: array
        meta:
          $ref: '#/components/schemas/FetchMetaResponse'
      required:
      - data
      title: FetchRewardsResponse
      type: object
    GroupResource:
      properties:
        attributes:
          $ref: '#/components/schemas/GroupResource_attributes'
        id:
          example: 57b36e3c04ad8c2224f2af38
          title: id
          type: string
        links:
          $ref: '#/components/schemas/GroupResource_links'
        type:
          enum:
          - group
          example: group
          title: type
          type: string
      required:
      - attributes
      - id
      - type
      title: GroupResource
      type: object
    HealthProfileAnswerResource:
      example:
        attributes:
          created_at: 2017-07-07T19:15:56.229Z
          history:
          - _created_by: 59d4d7dcd843ee01be71fcf8
            _id: 59d4d7dcd843ee01be71fcfb
            answered_at: 2017-10-03T12:45:16.720Z
            value: "2"
          latest:
            _created_by: 59d4d7dcd843ee01be71fcf8
            answered_at: 2017-10-04T12:45:16.720Z
            value: "1"
          question_id: "4"
          updated_at: 2017-07-07T19:15:56.229Z
        id: 59d441ac21741161bbe266b5
        links:
          self: /pub/health_profile_answer/59d441ac21741161bbe266b5
        relationships:
          patient:
            data:
              id: 595fddea28c5041b84466bbe
              type: patient
            links:
              related: /pub/health_profile_answer/59d441ac21741161bbe266b5/patient
        type: health_profile_answer
      properties:
        attributes:
          $ref: '#/components/schemas/HealthProfileAnswerResource_attributes'
        id:
          type: string
        links:
          $ref: '#/components/schemas/HealthProfileAnswerResource_links'
        relationships:
          $ref: '#/components/schemas/HealthProfileAnswerResource_relationships'
        type:
          type: string
      required:
      - id
      - type
      title: HealthProfileAnswerResource
      type: object
    HealthProfileQuestionResource:
      example:
        attribute: {}
        id: 52b36e3c04ad8c2224f2aa67
        links:
          self: /pub/health_profile_question/59d435931d078505ba744e88
        relationships:
          answer:
            data:
              id: 595fddea28c5041b84466bbe
              type: health_profile_answer
            links:
              related: /pub/health_profile_question/59d435931d078505ba744e88/answer
          profile:
            links:
              related: /pub/health_profile_question/59d435931d078505ba744e88/profile
          question_definition:
            data:
              id: "4"
              type: health_question_definition
            links:
              related: /pub/health_profile_question/59d435931d078505ba744e88/question_definition
        type: health_profile_question
      properties:
        attributes:
          description: |
            A health profile question does not have any attribute since it only relates an answer to the corresponding question definition.
          type: object
        id:
          type: string
        links:
          $ref: '#/components/schemas/HealthProfileQuestionResource_links'
        relationships:
          $ref: '#/components/schemas/HealthProfileQuestionResource_relationships'
        type:
          type: string
      required:
      - id
      - type
      title: HealthProfileQuestionResource
      type: object
    HealthProfileResource:
      example:
        attributes:
          created_at: 2017-07-07T19:15:56.229Z
          stats:
          - answered: 5
            category: lifestyle_behaviors
            total: 11
          - answered: 3
            category: mental_wellbeing
            total: 5
          - answered: 1
            category: preventative_care
            total: 3
          - answered: 9
            category: overall
            total: 19
          updated_at: 2017-07-07T19:15:56.229Z
        id: 59d441ac21741161bbe266b5
        links:
          self: /pub/health_profile/59d441ac21741161bbe266b5
        relationships:
          patient:
            data:
              id: 595fddea28c5041b84466bbe
              type: patient
            links:
              related: /pub/health_profile/59d441ac21741161bbe266b5/patient
          questions:
            data:
            - id: 595fddea28c5041b84466bbe
              type: health_profile_question
            links:
              related: /pub/health_profile/59d441ac21741161bbe266b5/questions
        type: health_profile
      properties:
        attributes:
          $ref: '#/components/schemas/HealthProfileResource_attributes'
        id:
          type: string
        links:
          $ref: '#/components/schemas/HealthProfileResource_links'
        relationships:
          $ref: '#/components/schemas/HealthProfileResource_relationships'
        type:
          type: string
      required:
      - type
      title: HealthProfileResource
      type: object
    HealthQuestionDefinitionResource:
      example:
        attributes:
          category: preventative_care
          format:
            data:
            - label: I Don't know
              value: "0"
            - label: I've never had a colonoscopy
              value: "1"
            type: last_occurrence
          requirements:
          - property: age
            shouldBeGreaterThan: 49
            shouldBeLessThan: 76
          text: When was your last colonoscopy?
        id: "21"
        links:
          self: /pub/health_question_definition/21
        type: health_question_definition
      properties:
        attributes:
          $ref: '#/components/schemas/HealthQuestionDefinitionResource_attributes'
        id:
          type: string
        links:
          $ref: '#/components/schemas/HealthQuestionDefinitionResource_links'
        relationships:
          type: object
        type:
          type: string
      required:
      - id
      - type
      title: HealthQuestionDefinitionResource
      type: object
    Identifier:
      properties:
        label:
          title: label
          type: string
        system:
          title: system
          type: string
        value:
          title: value
          type: string
      required:
      - system
      - value
      title: Identifier
      type: object
    OrganizationResource:
      properties:
        attributes:
          $ref: '#/components/schemas/OrganizationResource_attributes'
        id:
          example: 57b36e3c04ad8c2224f2af38
          title: id
          type: string
        links:
          $ref: '#/components/schemas/OrganizationResource_links'
        type:
          enum:
          - organization
          example: organization
          title: type
          type: string
      required:
      - attributes
      - id
      - type
      title: OrganizationResource
      type: object
    PatientCreateResource:
      allOf:
      - $ref: '#/components/schemas/PatientResource'
      - description: |
          Note that `data` can either be a single object or an array of objects matching the schema specified here
          (bulk create).
      - properties:
          relationships:
            $ref: '#/components/schemas/PatientCreateResource_allOf_relationships'
      title: PatientCreateResource
      type: object
    PatientHealthMetricCreateResource:
      allOf:
      - $ref: '#/components/schemas/PatientHealthMetricResource'
      - description: |
          Note that `data` can either be a single object or an array of objects matching the schema specified here
          (bulk create).
      title: PatientHealthMetricCreateResource
      type: object
    PatientHealthMetricResource:
      example:
        data:
          attributes:
            code:
              system: LOINC
              value: 13457-7
            occurred_at: 2017-03-14T11:00:57.000Z
            type: ldl_cholesterol
            unit: mg/dl
            value: 121
          relationships:
            patient:
              data:
                id: ""
                type: patient
          type: patient_health_metric
      properties:
        attributes:
          $ref: '#/components/schemas/PatientHealthMetricResource_attributes'
        id:
          type: string
        relationships:
          $ref: '#/components/schemas/PatientHealthMetricResource_relationships'
        type:
          type: string
      required:
      - id
      - type
      title: PatientHealthMetricResource
      type: object
    PatientHealthResultResource:
      example:
        data:
          attributes:
            _thread: 569c631f4b378f51306324f2d69fd29aa0c034ac
            annotations: []
            created_at: 2018-09-18T12:24:37.000Z
            created_by: 5c0fc0d02d02421ed70ca1d1
            data:
              value: 1
            occurred_at: 2018-09-18T12:24:37.000Z
            occurred_at_time_zone: America/New_York
            source: {}
            type: medication
            updated_at: 2018-09-18T12:24:37.000Z
            updated_by: 5c0fc0d02d02421ed70ca1d1
            window: 5c0fc0d42d02421ed70cae01
          id: 5c0fc0d42d02421ed70cae16
          relationships:
            action:
              data:
                id: 5ada648779672451a6c1b095
                type: action
            metric:
              data:
                id: 5c0fc0d42d02421ed70cae16
                type: patient_health_metric
            patient:
              data:
                id: 5c0fc0d02d02421ed70ca1d1
                type: patient
          type: result
      properties:
        attributes:
          $ref: '#/components/schemas/PatientHealthResultResource_attributes'
        id:
          type: string
        relationships:
          $ref: '#/components/schemas/PatientHealthResultResource_relationships'
        type:
          type: string
      required:
      - id
      - type
      title: PatientHealthResultResource
      type: object
    PatientIdentifier:
      properties:
        label:
          title: label
          type: string
        system:
          title: system
          type: string
        unique:
          default: true
          description: "If `true`, the combination of system and value must be global\
            \ unique among all patients and coaches in Fitbit Plus."
          title: unique
          type: boolean
        value:
          title: value
          type: string
      required:
      - system
      - value
      title: PatientIdentifier
      type: object
    PatientPlanSummaryResource:
      properties:
        attributes:
          $ref: '#/components/schemas/PatientPlanSummaryResource_attributes'
        id:
          example: 57b36e3c04ad8c2224f2af38
          title: id
          type: string
        links:
          $ref: '#/components/schemas/PatientPlanSummaryResource_links'
        relationships:
          $ref: '#/components/schemas/PatientPlanSummaryResource_relationships'
        type:
          enum:
          - patient_plan_summary
          example: patient_plan_summary
          title: type
          type: string
      required:
      - id
      - type
      title: PatientPlanSummaryResource
      type: object
    PatientResource:
      properties:
        attributes:
          $ref: '#/components/schemas/PatientResource_attributes'
        id:
          example: 57b36ef304ad8c2224f2af3a
          title: id
          type: string
        links:
          $ref: '#/components/schemas/PatientResource_links'
        relationships:
          $ref: '#/components/schemas/PatientResource_relationships'
        type:
          enum:
          - patient
          example: patient
          title: type
          type: string
      required:
      - attributes
      - type
      title: PatientResource
      type: object
    PhoneNumber:
      properties:
        primary:
          example: true
          title: primary
          type: boolean
        type:
          enum:
          - home
          - work
          - mobile
          - home-fax
          - work-fax
          - other
          example: mobile
          title: type
          type: string
        value:
          example: 555-555-1234
          title: value
          type: string
      required:
      - primary
      - type
      - value
      title: PhoneNumber
      type: object
    Resource:
      properties:
        attributes:
          title: attributes
          type: object
        id:
          title: id
          type: string
        type:
          title: type
          type: string
      title: Resource
      type: object
    RewardEarningFulfillmentResource:
      properties:
        attributes:
          $ref: '#/components/schemas/RewardEarningFulfillmentResource_attributes'
        id:
          title: id
          type: string
        relationships:
          $ref: '#/components/schemas/RewardEarningFulfillmentResource_relationships'
        type:
          title: type
          type: string
      required:
      - type
      title: RewardEarningFulfillmentResource
      type: object
    RewardEarningResource:
      properties:
        attributes:
          $ref: '#/components/schemas/RewardEarningResource_attributes'
        id:
          title: id
          type: string
        relationships:
          $ref: '#/components/schemas/RewardEarningResource_relationships'
        type:
          title: type
          type: string
      required:
      - type
      title: RewardEarningResource
      type: object
    RewardProgramActivationResource:
      properties:
        attributes:
          $ref: '#/components/schemas/RewardProgramActivationResource_attributes'
        id:
          title: id
          type: string
        relationships:
          $ref: '#/components/schemas/RewardProgramActivationResource_relationships'
        type:
          title: type
          type: string
      required:
      - type
      title: RewardProgramActivationResource
      type: object
    RewardProgramResource:
      properties:
        attributes:
          $ref: '#/components/schemas/RewardProgramResource_attributes'
        id:
          title: id
          type: string
        relationships:
          $ref: '#/components/schemas/RewardProgramResource_relationships'
        type:
          title: type
          type: string
      required:
      - type
      title: RewardProgramResource
      type: object
    RewardResource:
      properties:
        attributes:
          $ref: '#/components/schemas/RewardResource_attributes'
        id:
          title: id
          type: string
        relationships:
          $ref: '#/components/schemas/RewardResource_relationships'
        type:
          title: type
          type: string
      required:
      - type
      title: RewardResource
      type: object
    TokenResource:
      properties:
        attributes:
          $ref: '#/components/schemas/TokenResource_attributes'
        id:
          example: 57b36c9a04ad8c2224f2af35
          title: id
          type: string
        relationships:
          $ref: '#/components/schemas/TokenResource_relationships'
        type:
          enum:
          - token
          example: token
          title: type
          type: string
      required:
      - id
      - type
      title: TokenResource
      type: object
    UpdateActionRequest:
      properties:
        data:
          $ref: '#/components/schemas/ActionResource'
      required:
      - data
      title: UpdateActionRequest
      type: object
    UpdateActionResponse:
      properties:
        data:
          $ref: '#/components/schemas/ActionResource'
        meta:
          $ref: '#/components/schemas/CreateOrUpdateMetaResponse'
      required:
      - data
      title: UpdateActionResponse
      type: object
    UpdateBundleRequest:
      properties:
        data:
          $ref: '#/components/schemas/BundleResource'
      required:
      - data
      title: UpdateBundleRequest
      type: object
    UpdateBundleResponse:
      properties:
        data:
          $ref: '#/components/schemas/BundleResource'
        meta:
          $ref: '#/components/schemas/CreateOrUpdateMetaResponse'
      required:
      - data
      title: UpdateBundleResponse
      type: object
    UpdateCalendarEventRequest:
      example:
        data:
          attributes:
            all_day: false
            attendees:
            - user: 5a0c8e27a9d454cc150997c9
            - user: 5a0c8e27a9d454cc150997f7
            completed_at: 2017-11-03T06:17:34.652Z
            completed_by: 5a0c8e27a9d454cc150997c9
            end_at: 2018-02-20T18:00:00Z
            start_at: 2018-02-20T14:00:00Z
            time_zone: America/New_York
            title: Telephone Call
            type: telephone-call
          id: 42ba7c2da9d45415234345b3
          relationships:
            owner:
              data:
                id: 5a0c8e27a9d454cc150997f7
                type: patient
          type: calendar_event
      properties:
        data:
          $ref: '#/components/schemas/UpdateCalendarEventRequest_data'
      title: UpdateCalendarEventRequest
      type: object
    UpdateCalendarEventResponse:
      properties:
        data:
          $ref: '#/components/schemas/CalendarEventResource'
        meta:
          $ref: '#/components/schemas/CreateOrUpdateMetaResponse'
      title: UpdateCalendarEventResponse
      type: object
    UpdatePatientPlanSummaryRequest:
      properties:
        data:
          $ref: '#/components/schemas/PatientPlanSummaryResource'
      required:
      - data
      title: UpdatePatientPlanSummaryRequest
      type: object
    UpdatePatientPlanSummaryResponse:
      properties:
        data:
          $ref: '#/components/schemas/PatientPlanSummaryResource'
        meta:
          $ref: '#/components/schemas/CreateOrUpdateMetaResponse'
      required:
      - data
      title: UpdatePatientPlanSummaryResponse
      type: object
    UpdatePatientRequest:
      example:
        data:
          attributes:
            first_name: Jonathon
          id: 5817ead56f5316c0d05ba8bf
          type: patient
      properties:
        data:
          $ref: '#/components/schemas/PatientResource'
      required:
      - data
      title: UpdatePatientRequest
      type: object
    UpdatePatientResponse:
      example:
        data:
          attributes:
            addresses: []
            archive_history: []
            archived: false
            first_name: Jack
            identifiers: []
            last_name: Frost
            phone_numbers: []
            updated_at: 2016-11-01T01:07:33.121Z
          id: 5817ead56f5316c0d05ba8bf
          links:
            self: /pub/patient/5817ead56f5316c0d05ba8bf
            twine_web_app: http://10.0.1.55:9000/#/coach/patient/5817ead56f5316c0d05ba8bf
          relationships:
            coaches:
              data: []
              links:
                related: /pub/patient/5817ead56f5316c0d05ba8bf/coaches
            groups:
              data:
              - id: 5755db2a3db4179179999acf
                type: group
              links:
                related: /pub/patient/5817ead56f5316c0d05ba8bf/groups
          type: patient
        included: []
        meta:
          req_id: 5b813ad3-cabc-418f-add4-1e53bc69f7cb
      properties:
        data:
          $ref: '#/components/schemas/PatientResource'
        meta:
          $ref: '#/components/schemas/CreateOrUpdateMetaResponse'
      required:
      - data
      title: UpdatePatientResponse
      type: object
    UpsertPatientRequest:
      example:
        data:
          attributes:
            first_name: Jack
            last_name: Frost
          relationships:
            groups:
              data:
              - id: 5755db2a3db4179179999acf
                type: group
          type: patient
        meta:
          query:
            groups:
            - 5755db2a3db4179179999acf
            identifier:
              system: OtherPlace
              value: "123456"
      properties:
        data:
          $ref: '#/components/schemas/PatientResource'
        meta:
          $ref: '#/components/schemas/UpsertPatientRequest_meta'
      required:
      - data
      - meta
      title: UpsertPatientRequest
      type: object
    ActionMetric_validations_maximum:
      properties:
        unit:
          title: unit
          type: string
        value:
          title: value
          type: number
      title: ActionMetric_validations_maximum
      type: object
    ActionMetric_validations:
      properties:
        maximum:
          $ref: '#/components/schemas/ActionMetric_validations_maximum'
        minimum:
          $ref: '#/components/schemas/ActionMetric_validations_maximum'
      title: ActionMetric_validations
      type: object
    ActionResource_attributes_adherence_streak:
      properties:
        count:
          title: count
          type: integer
        updated_at:
          format: dateTime
          title: updated_at
          type: string
      title: ActionResource_attributes_adherence_streak
      type: object
    ActionResource_attributes_adherence:
      properties:
        complete:
          title: complete
          type: integer
        due:
          title: due
          type: integer
        streak:
          $ref: '#/components/schemas/ActionResource_attributes_adherence_streak'
      readOnly: true
      title: ActionResource_attributes_adherence
      type: object
    ActionResource_attributes_frequency_goal_weeks:
      properties:
        days:
          items:
            description: "Days of week that the action is scheduled for. Zero-indexed,\
              \ ex 0 represents Sunday, etc."
            enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            maxItems: 7
            type: integer
          title: days
          type: array
      title: ActionResource_attributes_frequency_goal_weeks
      type: object
    ActionResource_attributes_frequency_goal:
      properties:
        weeks:
          $ref: '#/components/schemas/ActionResource_attributes_frequency_goal_weeks'
      title: ActionResource_attributes_frequency_goal
      type: object
    ActionResource_attributes:
      properties:
        _thread:
          title: _thread
          type: string
        adherence:
          $ref: '#/components/schemas/ActionResource_attributes_adherence'
        details:
          additionalProperties: true
          title: details
          type: object
        effective_from:
          format: dateTime
          title: effective_from
          type: string
        effective_to:
          format: dateTime
          title: effective_to
          type: string
        frequency_goal:
          $ref: '#/components/schemas/ActionResource_attributes_frequency_goal'
        identifiers:
          items:
            $ref: '#/components/schemas/Identifier'
          title: identifiers
          type: array
        intake:
          additionalProperties: true
          title: intake
          type: object
        metric_required:
          title: metric_required
          type: boolean
        metrics:
          items:
            $ref: '#/components/schemas/ActionMetric'
          title: metrics
          type: array
        static_title:
          readOnly: true
          title: static_title
          type: string
        title:
          title: title
          type: string
        tracking:
          title: tracking
          type: boolean
        type:
          enum:
          - other_lifestyle
          title: type
          type: string
        windows:
          items:
            $ref: '#/components/schemas/ActionWindow'
          title: windows
          type: array
      required:
      - effective_from
      - title
      - type
      title: ActionResource_attributes
      type: object
    ActionResource_relationships_plan_data:
      properties:
        id:
          title: id
          type: string
        type:
          title: type
          type: string
      title: ActionResource_relationships_plan_data
      type: object
    ActionResource_relationships_plan:
      properties:
        data:
          $ref: '#/components/schemas/ActionResource_relationships_plan_data'
        links:
          title: links
          type: object
      title: ActionResource_relationships_plan
      type: object
    ActionResource_relationships:
      properties:
        plan:
          $ref: '#/components/schemas/ActionResource_relationships_plan'
      title: ActionResource_relationships
      type: object
    BundleResource_attributes:
      properties:
        _thread:
          title: _thread
          type: string
        effective_from:
          format: dateTime
          title: effective_from
          type: string
        effective_to:
          format: dateTime
          title: effective_to
          type: string
        title:
          title: title
          type: string
        type:
          title: type
          type: string
      required:
      - effective_from
      - title
      - type
      title: BundleResource_attributes
      type: object
    BundleResource_relationships:
      properties:
        actions:
          $ref: '#/components/schemas/ActionResource_relationships_plan'
        plan:
          $ref: '#/components/schemas/ActionResource_relationships_plan'
      title: BundleResource_relationships
      type: object
    CalendarEventResource_attributes_attendees_inner:
      properties:
        response_status:
          description: Status of responses from attendees
          enum:
          - needsAction
          - declined
          - tentative
          - accepted
          title: response_status
          type: string
        user:
          title: user
          type: string
      title: CalendarEventResource_attributes_attendees_inner
      type: object
    CalendarEventResource_attributes:
      properties:
        all_day:
          description: "True if the calendar event is an all day event, false otherwise.\
            \ Must be set to true for `plan-check-in` event type. If it is true, then\
            \ `start_at` and `end_at` must also be set to beginning of day, except\
            \ `plan-check-in` event type does not need an `end_at` date. If it is\
            \ false, then `start_at` and `end_at` must be on the same day."
          title: all_day
          type: boolean
        attendees:
          description: List of attendees for the calendar event
          items:
            $ref: '#/components/schemas/CalendarEventResource_attributes_attendees_inner'
          title: attendees
          type: array
        completed_at:
          description: The date and time when the calendar event is marked as completed.
            Only valid for `plan-check-in` event type.
          example: 2017-11-03T06:17:34.652Z
          format: ISODate
          title: completed_at
          type: string
        completed_by:
          description: The coach who marked the calendar event as completed. Only
            valid for `plan-check-in` event type.
          title: completed_by
          type: object
        description:
          title: description
          type: string
        end_at:
          description: The date and time when the calendar event ends. Not valid for
            `plan-check-in` event type.
          example: 2017-11-03T08:00:00.000Z
          format: ISODate
          title: end_at
          type: string
        location:
          title: location
          type: string
        start_at:
          description: The date and time when the calendar event starts
          example: 2017-11-03T04:00:00.000Z
          format: ISODate
          title: start_at
          type: string
        time_zone:
          description: The time zone in which the dates for the calendar event are
            specified
          example: America/New_York
          title: time_zone
          type: string
        title:
          description: The title of the calendar event. Must not be empty or null
          title: title
          type: string
        type:
          description: The type of calendar event. Immutable after event creation.
          enum:
          - plan-check-in
          - reminder
          - telephone-call
          - office-visit
          - video-call
          title: type
          type: string
      title: CalendarEventResource_attributes
      type: object
    CalendarEventResource_links:
      properties:
        self:
          example: /calendar_event/5a0c8e2aa9d454cc1509a142
          pattern: "/calendar_event/[0-9a-z]+"
          title: self
          type: string
      title: CalendarEventResource_links
      type: object
    CalendarEventResource_relationships_owner_links:
      properties:
        related:
          example: /pub/calendar_event/5a0c8e2aa9d454cc1509a142/owner
          pattern: "/pub/calendar_event/[0-9a-z]+"
          title: related
          type: string
      title: CalendarEventResource_relationships_owner_links
      type: object
    CalendarEventResource_relationships_owner:
      description: The owner is the patient for whom the calendar event is created
        specificially for
      properties:
        data:
          $ref: '#/components/schemas/ActionResource_relationships_plan_data'
        links:
          $ref: '#/components/schemas/CalendarEventResource_relationships_owner_links'
      required:
      - data
      title: CalendarEventResource_relationships_owner
      type: object
    CalendarEventResource_relationships:
      properties:
        owner:
          $ref: '#/components/schemas/CalendarEventResource_relationships_owner'
      title: CalendarEventResource_relationships
      type: object
    CalendarEventResponseResource_attributes:
      properties:
        attendee:
          description: The attendee in the attendees list of the calendar event.
          title: attendee
          type: object
        response_status:
          description: The response status for the attendee.
          enum:
          - accepted
          - declined
          - tentative
          title: response_status
          type: string
      title: CalendarEventResponseResource_attributes
      type: object
    CalendarEventResponseResource_links:
      properties:
        self:
          example: /calendar_event_response/5ad0f966ceb0909e4bfa84dd
          pattern: "/calendar_event_response/[0-9a-z]+"
          title: self
          type: string
      title: CalendarEventResponseResource_links
      type: object
    CalendarEventResponseResource_relationships_calendar_event_links:
      properties:
        related:
          example: /pub/calendar_event_response/5ad0f966ceb0909e4bfa84dd/calendar_event
          pattern: "/pub/calendar_event_response/[0-9a-z]+"
          title: related
          type: string
      title: CalendarEventResponseResource_relationships_calendar_event_links
      type: object
    CalendarEventResponseResource_relationships_calendar_event:
      description: The calendar_event is the calendar event for which the calendar
        event response is created specificially for
      properties:
        data:
          $ref: '#/components/schemas/ActionResource_relationships_plan_data'
        links:
          $ref: '#/components/schemas/CalendarEventResponseResource_relationships_calendar_event_links'
      required:
      - data
      title: CalendarEventResponseResource_relationships_calendar_event
      type: object
    CalendarEventResponseResource_relationships_user_links:
      properties:
        related:
          example: /pub/calendar_event_response/5ad0f966ceb0909e4bfa84dd/user
          pattern: "/pub/calendar_event_response/[0-9a-z]+"
          title: related
          type: string
      title: CalendarEventResponseResource_relationships_user_links
      type: object
    CalendarEventResponseResource_relationships_user:
      description: The user is the coach or patient for whom the calendar event response
        is created specificially for
      properties:
        data:
          $ref: '#/components/schemas/ActionResource_relationships_plan_data'
        links:
          $ref: '#/components/schemas/CalendarEventResponseResource_relationships_user_links'
      required:
      - data
      title: CalendarEventResponseResource_relationships_user
      type: object
    CalendarEventResponseResource_relationships:
      properties:
        calendar_event:
          $ref: '#/components/schemas/CalendarEventResponseResource_relationships_calendar_event'
        user:
          $ref: '#/components/schemas/CalendarEventResponseResource_relationships_user'
      title: CalendarEventResponseResource_relationships
      type: object
    CoachResource_attributes:
      properties:
        first_name:
          example: Clarisa
          title: first_name
          type: string
        last_name:
          example: Rivera
          title: last_name
          type: string
      title: CoachResource_attributes
      type: object
    CoachResource_links:
      properties:
        self:
          example: /coach/57b36e3c04ad8c2224f2af38
          pattern: "/coach/[0-9a-z]+"
          title: self
          type: string
      readOnly: true
      required:
      - self
      title: CoachResource_links
      type: object
    CreateCalendarEventRequest_data_relationships_owner:
      properties:
        data:
          $ref: '#/components/schemas/CalendarEventResource/properties/relationships/properties/owner/properties/data'
      required:
      - data
      title: CreateCalendarEventRequest_data_relationships_owner
      type: object
    CreateCalendarEventRequest_data_relationships:
      properties:
        owner:
          $ref: '#/components/schemas/CreateCalendarEventRequest_data_relationships_owner'
      title: CreateCalendarEventRequest_data_relationships
      type: object
    CreateCalendarEventRequest_data:
      properties:
        attributes:
          allOf:
          - $ref: '#/components/schemas/CalendarEventResource/properties/attributes'
          required:
          - attendees
          - start_at
          - title
          - type
          title: attributes
        relationships:
          $ref: '#/components/schemas/CreateCalendarEventRequest_data_relationships'
        type:
          $ref: '#/components/schemas/CalendarEventResource/properties/type'
      required:
      - attributes
      - relationships
      - type
      title: CreateCalendarEventRequest_data
      type: object
    CreateCalendarEventResponseRequest_data_relationships_calendar_event:
      properties:
        data:
          $ref: '#/components/schemas/CalendarEventResponseResource/properties/relationships/properties/calendar_event/properties/data'
      required:
      - data
      title: CreateCalendarEventResponseRequest_data_relationships_calendar_event
      type: object
    CreateCalendarEventResponseRequest_data_relationships_user:
      properties:
        data:
          $ref: '#/components/schemas/CalendarEventResponseResource/properties/relationships/properties/user/properties/data'
      required:
      - data
      title: CreateCalendarEventResponseRequest_data_relationships_user
      type: object
    CreateCalendarEventResponseRequest_data_relationships:
      properties:
        calendar_event:
          $ref: '#/components/schemas/CreateCalendarEventResponseRequest_data_relationships_calendar_event'
        user:
          $ref: '#/components/schemas/CreateCalendarEventResponseRequest_data_relationships_user'
      title: CreateCalendarEventResponseRequest_data_relationships
      type: object
    CreateCalendarEventResponseRequest_data:
      properties:
        attributes:
          allOf:
          - $ref: '#/components/schemas/CalendarEventResponseResource/properties/attributes'
          required:
          - attendee
          - response_status
          title: attributes
        relationships:
          $ref: '#/components/schemas/CreateCalendarEventResponseRequest_data_relationships'
        type:
          $ref: '#/components/schemas/CalendarEventResponseResource/properties/type'
      required:
      - attributes
      - relationships
      - type
      title: CreateCalendarEventResponseRequest_data
      type: object
    CreatePatientHealthMetricRequest_meta:
      properties:
        ignore_duplicates:
          description: |
            If `true`, the patient health metric will be ignored if there is an existing patient health metric for
            the same patient, with the same `type` and same `occurred_at`.
          title: ignore_duplicates
          type: boolean
      title: CreatePatientHealthMetricRequest_meta
      type: object
    CreatePatientRequest_meta:
      properties:
        ignore_duplicates:
          default: false
          description: |
            If `true`, patients with any conflicting identifiers (same `system` and `value`) will be ignored.
            Useful for gracefully skipping duplicates after errors occur during bulk create.
          title: ignore_duplicates
          type: boolean
      title: CreatePatientRequest_meta
      type: object
    CreateTokenRequest_data_attributes:
      properties:
        client_id:
          description: Contact Fitbit Plus API Support to get a client id and secret.
          example: 19391dc5-8af8-4152-93e8-74ff9361607e
          title: client_id
          type: string
        client_secret:
          description: Contact Fitbit Plus API Support to get a client id and secret.
            Secret is required if grant_type is "client_credentials"
          example: 63eca384-7a65-42e2-872b-afd3e8659d0a
          title: client_secret
          type: string
        grant_type:
          enum:
          - refresh_token
          - client_credentials
          example: client_credentials
          title: grant_type
          type: string
        refresh_token:
          description: Required if grant_type is "refresh_token"
          example: b7dcc4a4-593b-4410-a0c5-97ae48939396
          title: refresh_token
          type: string
      required:
      - client_id
      - grant_type
      title: CreateTokenRequest_data_attributes
      type: object
    CreateTokenRequest_data:
      properties:
        attributes:
          $ref: '#/components/schemas/CreateTokenRequest_data_attributes'
        type:
          enum:
          - token
          example: token
          title: type
          type: string
      required:
      - attributes
      title: CreateTokenRequest_data
      type: object
    EmailHistoryResource_attributes_status_times:
      description: Status of email. Multiple statuses may be defined. The current
        status is the one with the most recent date.
      properties:
        bounce:
          description: Time email was bounced.
          format: dateTime
          title: bounce
          type: string
        click:
          description: Time email was clicked.
          format: dateTime
          title: click
          type: string
        deferred:
          description: Time email was deferred.
          format: dateTime
          title: deferred
          type: string
        delivered:
          description: Time email was delivered.
          format: dateTime
          title: delivered
          type: string
        dropped:
          description: Time email was dropped.
          format: dateTime
          title: dropped
          type: string
        open:
          description: Time email was opened.
          format: dateTime
          title: open
          type: string
        processed:
          description: Time email was processed.
          format: dateTime
          title: processed
          type: string
        spamreport:
          description: Time email was reported as spam.
          format: dateTime
          title: spamreport
          type: string
        unsubscribe:
          description: Time email was unsubscribed from.
          format: dateTime
          title: unsubscribe
          type: string
      title: EmailHistoryResource_attributes_status_times
      type: object
    EmailHistoryResource_attributes:
      properties:
        email_address:
          description: Address email was sent to.
          title: email_address
          type: string
        email_type:
          description: Type of email.
          title: email_type
          type: string
        send_time:
          description: Time email was sent.
          format: dateTime
          title: send_time
          type: string
        status_times:
          $ref: '#/components/schemas/EmailHistoryResource_attributes_status_times'
        twine_email_id:
          description: Unique identifier for this email.
          title: twine_email_id
          type: string
      title: EmailHistoryResource_attributes
      type: object
    EmailHistoryResource_relationships_receiver:
      properties:
        data:
          $ref: '#/components/schemas/ActionResource_relationships_plan_data'
      title: EmailHistoryResource_relationships_receiver
      type: object
    EmailHistoryResource_relationships:
      properties:
        receiver:
          $ref: '#/components/schemas/EmailHistoryResource_relationships_receiver'
        sender:
          $ref: '#/components/schemas/EmailHistoryResource_relationships_receiver'
      title: EmailHistoryResource_relationships
      type: object
    Error_source:
      properties:
        parameter:
          title: parameter
          type: string
        pointer:
          title: pointer
          type: string
      title: Error_source
      type: object
    GroupResource_attributes:
      properties:
        bio:
          description: A description of the group
          example: Team Health is all about the patient experience.
          title: bio
          type: string
        name:
          description: The name of the group
          example: Team Health
          title: name
          type: string
      required:
      - name
      title: GroupResource_attributes
      type: object
    GroupResource_links:
      properties:
        self:
          example: /group/57b36e3c04ad8c2224f2af38
          pattern: "/group/[0-9a-z]+"
          title: self
          type: string
      readOnly: true
      required:
      - self
      title: GroupResource_links
      type: object
    HealthProfileAnswerResource_attributes_history_inner:
      description: The details of a previous answer for a health profile question
      properties:
        _created_by:
          description: The id of the patient or coach who answered the health profile
            question
          title: _created_by
          type: string
        answered_at:
          description: The date when the health profile question is answered
          format: dateTime
          title: answered_at
          type: string
        value:
          description: The value of the answer entered for the health profile question
          title: value
          type: string
      title: HealthProfileAnswerResource_attributes_history_inner
      type: object
    HealthProfileAnswerResource_attributes_latest:
      description: The details of the latest answer for a health profile question
      properties:
        _created_by:
          description: The id of the patient or coach who answered the health profile
            question
          title: _created_by
          type: string
        answered_at:
          description: The date when the health profile question is answered
          format: dateTime
          title: answered_at
          type: string
        value:
          description: The value of the answer entered for the health profile question
          title: value
          type: string
      title: HealthProfileAnswerResource_attributes_latest
      type: object
    HealthProfileAnswerResource_attributes:
      properties:
        history:
          description: List of details of previous answers for a health profile question
          items:
            $ref: '#/components/schemas/HealthProfileAnswerResource_attributes_history_inner'
          title: history
          type: array
        latest:
          $ref: '#/components/schemas/HealthProfileAnswerResource_attributes_latest'
        question_id:
          title: question_id
          type: string
      title: HealthProfileAnswerResource_attributes
      type: object
    HealthProfileAnswerResource_links:
      properties:
        self:
          example: /health_profile_answer/59d441ac21741161bbe266b5
          pattern: "/health_profile_answer/[0-9a-z]+"
          title: self
          type: string
      readOnly: true
      required:
      - self
      title: HealthProfileAnswerResource_links
      type: object
    HealthProfileAnswerResource_relationships_patient_links:
      properties:
        related:
          example: /pub/health_profile_answer/59d441ac21741161bbe266b5/patient
          pattern: "/pub/health_profile_answer/[0-9a-z]+"
          title: related
          type: string
      readOnly: true
      title: HealthProfileAnswerResource_relationships_patient_links
      type: object
    HealthProfileAnswerResource_relationships_patient:
      properties:
        data:
          $ref: '#/components/schemas/ActionResource_relationships_plan_data'
        links:
          $ref: '#/components/schemas/HealthProfileAnswerResource_relationships_patient_links'
      readOnly: true
      title: HealthProfileAnswerResource_relationships_patient
      type: object
    HealthProfileAnswerResource_relationships:
      properties:
        patient:
          $ref: '#/components/schemas/HealthProfileAnswerResource_relationships_patient'
      title: HealthProfileAnswerResource_relationships
      type: object
    HealthProfileQuestionResource_links:
      properties:
        self:
          example: /pub/health_profile_question/59d435931d078505ba744e88
          pattern: "/pub/health_profile_question/[0-9a-z]+"
          title: self
          type: string
      readOnly: true
      required:
      - self
      title: HealthProfileQuestionResource_links
      type: object
    HealthProfileQuestionResource_relationships_answer_links:
      properties:
        related:
          example: /pub/health_profile_question/59d435931d078505ba744e88/answer
          pattern: "/pub/health_profile_question/[0-9a-z]+/answer"
          title: related
          type: string
      readOnly: true
      title: HealthProfileQuestionResource_relationships_answer_links
      type: object
    HealthProfileQuestionResource_relationships_answer:
      properties:
        data:
          $ref: '#/components/schemas/ActionResource_relationships_plan_data'
        links:
          $ref: '#/components/schemas/HealthProfileQuestionResource_relationships_answer_links'
      title: HealthProfileQuestionResource_relationships_answer
      type: object
    HealthProfileQuestionResource_relationships_profile_links:
      properties:
        related:
          example: /pub/health_profile_question/59d435931d078505ba744e88/profile
          pattern: "/pub/health_profile_question/[0-9a-z]+/profile"
          title: related
          type: string
      readOnly: true
      title: HealthProfileQuestionResource_relationships_profile_links
      type: object
    HealthProfileQuestionResource_relationships_profile:
      properties:
        links:
          $ref: '#/components/schemas/HealthProfileQuestionResource_relationships_profile_links'
      title: HealthProfileQuestionResource_relationships_profile
      type: object
    HealthProfileQuestionResource_relationships_question_definition_links_links:
      properties:
        related:
          example: /pub/health_profile_question/59d435931d078505ba744e88/question_definition
          pattern: "/pub/health_profile_question/[0-9a-z]+/question_definition"
          title: related
          type: string
      readOnly: true
      title: HealthProfileQuestionResource_relationships_question_definition_links_links
      type: object
    HealthProfileQuestionResource_relationships_question_definition_links:
      properties:
        links:
          $ref: '#/components/schemas/HealthProfileQuestionResource_relationships_question_definition_links_links'
      readOnly: true
      title: HealthProfileQuestionResource_relationships_question_definition_links
    HealthProfileQuestionResource_relationships_question_definition:
      properties:
        data:
          $ref: '#/components/schemas/ActionResource_relationships_plan_data'
        links:
          $ref: '#/components/schemas/HealthProfileQuestionResource_relationships_question_definition_links'
      title: HealthProfileQuestionResource_relationships_question_definition
      type: object
    HealthProfileQuestionResource_relationships:
      properties:
        answer:
          $ref: '#/components/schemas/HealthProfileQuestionResource_relationships_answer'
        profile:
          $ref: '#/components/schemas/HealthProfileQuestionResource_relationships_profile'
        question_definition:
          $ref: '#/components/schemas/HealthProfileQuestionResource_relationships_question_definition'
      title: HealthProfileQuestionResource_relationships
      type: object
    HealthProfileResource_attributes_stats_inner:
      description: "The category, answered and total counts for questions in the health\
        \ profile"
      properties:
        answered:
          title: answered
          type: number
        category:
          enum:
          - lifestyle_behaviors
          - mental_wellbeing
          - preventative_care
          - overall
          title: category
          type: string
        total:
          title: total
          type: number
      title: HealthProfileResource_attributes_stats_inner
      type: object
    HealthProfileResource_attributes:
      properties:
        stats:
          description: "List of category, answered and total counts for questions\
            \ in the health profile"
          items:
            $ref: '#/components/schemas/HealthProfileResource_attributes_stats_inner'
          title: stats
          type: array
      title: HealthProfileResource_attributes
      type: object
    HealthProfileResource_links:
      properties:
        self:
          example: /health_profile/59d441ac21741161bbe266b5
          pattern: "/health_profile/[0-9a-z]+"
          title: self
          type: string
      readOnly: true
      required:
      - self
      title: HealthProfileResource_links
      type: object
    HealthProfileResource_relationships_patient_links:
      properties:
        related:
          example: /pub/health_profile/59d441ac21741161bbe266b5/patient
          pattern: "/pub/health_profile/[0-9a-z]+"
          title: related
          type: string
      readOnly: true
      title: HealthProfileResource_relationships_patient_links
      type: object
    HealthProfileResource_relationships_patient:
      properties:
        data:
          $ref: '#/components/schemas/ActionResource_relationships_plan_data'
        links:
          $ref: '#/components/schemas/HealthProfileResource_relationships_patient_links'
      readOnly: true
      title: HealthProfileResource_relationships_patient
      type: object
    HealthProfileResource_relationships_questions_links:
      properties:
        related:
          example: /pub/health_profile/59d441ac21741161bbe266b5/questions
          pattern: "/pub/health_profile/[0-9a-z]+"
          title: related
          type: string
      readOnly: true
      title: HealthProfileResource_relationships_questions_links
      type: object
    HealthProfileResource_relationships_questions:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ActionResource_relationships_plan_data'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/HealthProfileResource_relationships_questions_links'
      readOnly: true
      title: HealthProfileResource_relationships_questions
      type: object
    HealthProfileResource_relationships:
      properties:
        patient:
          $ref: '#/components/schemas/HealthProfileResource_relationships_patient'
        questions:
          $ref: '#/components/schemas/HealthProfileResource_relationships_questions'
      title: HealthProfileResource_relationships
      type: object
    HealthQuestionDefinitionResource_attributes_format_data_inner:
      description: "The label, value and icon for the answer choices for the question"
      properties:
        icon:
          title: icon
          type: string
        label:
          title: label
          type: string
        value:
          title: value
          type: string
      title: HealthQuestionDefinitionResource_attributes_format_data_inner
      type: object
    HealthQuestionDefinitionResource_attributes_format:
      description: The list of formats for the health profile definition
      properties:
        data:
          items:
            $ref: '#/components/schemas/HealthQuestionDefinitionResource_attributes_format_data_inner'
          title: data
          type: array
        type:
          title: type
          type: string
      title: HealthQuestionDefinitionResource_attributes_format
      type: object
    HealthQuestionDefinitionResource_attributes_requirements_inner:
      description: The age and gender requirement for the question to be included
      properties:
        property:
          title: property
          type: string
        shouldBeEqual:
          description: Specifies if the value in property should be equal to the one
            in value
          title: shouldBeEqual
          type: boolean
        shouldBeGreaterThan:
          description: Specifies if the value in property should be greater than the
            one in value
          title: shouldBeGreaterThan
          type: number
        shouldBeLessThan:
          description: Specifies if the value in property should be less than the
            one in value
          title: shouldBeLessThan
          type: number
        value:
          description: "The value to be compared with the one in property, based on\
            \ shouldBeEqual, shouldBeGreaterThan, or shouldBeLessThan"
          title: value
          type: string
      title: HealthQuestionDefinitionResource_attributes_requirements_inner
      type: object
    HealthQuestionDefinitionResource_attributes:
      properties:
        category:
          description: The category for the health profile definition
          enum:
          - lifestyle_behaviors
          - mental_wellbeing
          - preventative_care
          title: category
          type: string
        format:
          $ref: '#/components/schemas/HealthQuestionDefinitionResource_attributes_format'
        requirements:
          description: The lsit of age and gender requirements for the question to
            be included
          items:
            $ref: '#/components/schemas/HealthQuestionDefinitionResource_attributes_requirements_inner'
          title: requirements
          type: array
        text:
          description: The question text which corresponds to the answer choices
          title: text
          type: string
      title: HealthQuestionDefinitionResource_attributes
      type: object
    HealthQuestionDefinitionResource_links:
      properties:
        self:
          example: /health_question_definition/4
          pattern: "/health_question_definition/[0-9]+"
          title: self
          type: string
      readOnly: true
      required:
      - self
      title: HealthQuestionDefinitionResource_links
      type: object
    OrganizationResource_attributes:
      properties:
        name:
          example: Health Activation Partners
          title: name
          type: string
      required:
      - name
      title: OrganizationResource_attributes
    OrganizationResource_links:
      properties:
        self:
          example: /organization/57b36e3c04ad8c2224f2af38
          pattern: "/organization/[0-9a-z]+"
          title: self
          type: string
      readOnly: true
      required:
      - self
      title: OrganizationResource_links
    PatientCreateResource_allOf_relationships_coaches_meta:
      properties:
        primary:
          title: primary
          type: boolean
      title: PatientCreateResource_allOf_relationships_coaches_meta
      type: object
    PatientCreateResource_allOf_relationships_coaches_data:
      properties:
        id:
          example: 57fee2a66b49113551658505
          title: id
          type: string
        meta:
          $ref: '#/components/schemas/PatientCreateResource_allOf_relationships_coaches_meta'
        type:
          enum:
          - coach
          example: coach
          title: type
          type: string
      required:
      - id
      - type
      title: PatientCreateResource_allOf_relationships_coaches_data
      type: object
    PatientCreateResource_allOf_relationships_coaches_links:
      properties:
        related:
          example: /patient/57b36ef304ad8c2224f2af3a/coaches
          pattern: "/patient/[0-9a-z]+/coaches"
          title: related
          type: string
      readOnly: true
      title: PatientCreateResource_allOf_relationships_coaches_links
    PatientCreateResource_allOf_relationships_coaches:
      properties:
        data:
          items:
            $ref: '#/components/schemas/PatientCreateResource_allOf_relationships_coaches_data'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/PatientCreateResource_allOf_relationships_coaches_links'
      required:
      - data
      title: PatientCreateResource_allOf_relationships_coaches
      type: object
    PatientCreateResource_allOf_relationships_groups_meta_query:
      description: |
        1. If the query does not return any groups, a group with the specified name will be created and related to the patient.
        2. If the query returns one group, that group will be related to the patient.
        3. If the query returns more than one group, the creation of the patient will fail.
      properties:
        name:
          title: name
          type: string
        organization:
          title: organization
          type: string
      required:
      - name
      - organization
      title: PatientCreateResource_allOf_relationships_groups_meta_query
      type: object
    PatientCreateResource_allOf_relationships_groups_meta:
      description: Allows the specification of a query for a group rather than providing
        a group id directly
      properties:
        query:
          $ref: '#/components/schemas/PatientCreateResource_allOf_relationships_groups_meta_query'
      required:
      - query
      title: PatientCreateResource_allOf_relationships_groups_meta
      type: object
    PatientCreateResource_allOf_relationships_groups_data:
      properties:
        id:
          description: Required if the `meta.query` is not defined.
          example: 57b3708b04ad8c2224f2af3b
          title: id
          type: string
        meta:
          $ref: '#/components/schemas/PatientCreateResource_allOf_relationships_groups_meta'
        type:
          enum:
          - group
          example: group
          title: type
          type: string
      required:
      - type
      title: PatientCreateResource_allOf_relationships_groups_data
      type: object
    PatientCreateResource_allOf_relationships_groups:
      properties:
        data:
          items:
            $ref: '#/components/schemas/PatientCreateResource_allOf_relationships_groups_data'
          title: data
          type: array
      required:
      - data
      title: PatientCreateResource_allOf_relationships_groups
      type: object
    PatientCreateResource_allOf_relationships:
      properties:
        coaches:
          $ref: '#/components/schemas/PatientCreateResource_allOf_relationships_coaches'
        groups:
          $ref: '#/components/schemas/PatientCreateResource_allOf_relationships_groups'
      required:
      - groups
      title: PatientCreateResource_allOf_relationships
      type: object
    PatientHealthMetricResource_attributes_code:
      properties:
        system:
          title: system
          type: string
        value:
          title: value
          type: string
      required:
      - system
      - value
      title: PatientHealthMetricResource_attributes_code
      type: object
    PatientHealthMetricResource_attributes:
      properties:
        code:
          $ref: '#/components/schemas/PatientHealthMetricResource_attributes_code'
        diastolic:
          title: diastolic
          type: number
        occurred_at:
          format: dateTime
          title: occurred_at
          type: string
        systolic:
          title: systolic
          type: number
        type:
          enum:
          - blood_pressure_systolic
          - blood_pressure_diastolic
          - hemoglobin_a1c
          - hdl_cholesterol
          - ldl_cholesterol
          - total_cholesterol
          - triglycerides
          - blood_urea_nitrogen
          - creatinine
          - hemoglobin
          - hematocrit
          - total_serum_iron
          - thyroid_stimulating_hormone
          - free_thyroxine
          - free_triiodothyronine
          - total_triiodothyronine
          - cd4_cell_count
          - hiv_viral_load
          - inr
          - free_testosterone
          - total_testosterone
          - c_reactive_protein
          - prostate_specific_antigen
          - cotinine
          - c_peptide
          - blood_pressure
          - blood_glucose
          - weight
          - heart_rate
          - body_fat_percentage
          - body_mass_index
          - body_temperature
          - forced_expiratory_volume1
          - forced_vital_capacity
          - lean_body_mass
          - nausea_level
          - oxygen_saturation
          - pain_level
          - peak_expiratory_flow_rate
          - peripheral_perfusion_index
          - respiratory_rate
          - inhaler_usage
          title: type
          type: string
        unit:
          title: unit
          type: string
        value:
          description: "Can be any value (number, boolean, string, object) depending\
            \ on the metric type. Most values are of type number."
          title: value
      title: PatientHealthMetricResource_attributes
      type: object
    PatientHealthMetricResource_relationships_patient_data_meta_query:
      description: The query must return one and only one patient.
      properties:
        groups:
          items:
            type: string
          title: groups
          type: array
        identifier:
          $ref: '#/components/schemas/PatientHealthMetricResource_attributes_code'
        organization:
          title: organization
          type: string
      required:
      - identifier
      title: PatientHealthMetricResource_relationships_patient_data_meta_query
      type: object
    PatientHealthMetricResource_relationships_patient_data_meta:
      description: Allows the specification of a query for a patient rather than providing
        a patient id directly
      properties:
        query:
          $ref: '#/components/schemas/PatientHealthMetricResource_relationships_patient_data_meta_query'
      required:
      - query
      title: PatientHealthMetricResource_relationships_patient_data_meta
      type: object
    PatientHealthMetricResource_relationships_patient_data:
      properties:
        id:
          description: Required if the `meta.query` is not defined.
          example: 5817ead56f5316c0d05ba8bf
          title: id
          type: string
        meta:
          $ref: '#/components/schemas/PatientHealthMetricResource_relationships_patient_data_meta'
        type:
          title: type
          type: string
      title: PatientHealthMetricResource_relationships_patient_data
      type: object
    PatientHealthMetricResource_relationships_patient:
      properties:
        data:
          $ref: '#/components/schemas/PatientHealthMetricResource_relationships_patient_data'
        links:
          title: links
          type: object
      title: PatientHealthMetricResource_relationships_patient
      type: object
    PatientHealthMetricResource_relationships:
      properties:
        patient:
          $ref: '#/components/schemas/PatientHealthMetricResource_relationships_patient'
      title: PatientHealthMetricResource_relationships
      type: object
    PatientHealthResultResource_attributes_annotations_inner:
      properties:
        text:
          title: text
          type: string
        title:
          title: title
          type: string
      title: PatientHealthResultResource_attributes_annotations_inner
      type: object
    PatientHealthResultResource_attributes_data:
      properties:
        value:
          description: "Can be any value (number, boolean, string, object) depending\
            \ on the metric type. Most values are of type number"
          title: value
      title: PatientHealthResultResource_attributes_data
      type: object
    PatientHealthResultResource_attributes_source:
      properties:
        metadata:
          description: Can be any value
          title: metadata
        name:
          title: name
          type: string
        source_id:
          title: source_id
          type: string
      title: PatientHealthResultResource_attributes_source
      type: object
    PatientHealthResultResource_attributes:
      properties:
        _thread:
          description: "Links together results. This should be the same as the thread\
            \ of _action, if it is defined"
          title: _thread
          type: string
        aggregation:
          title: aggregation
          type: string
        annotations:
          items:
            $ref: '#/components/schemas/PatientHealthResultResource_attributes_annotations_inner'
          title: annotations
          type: array
        channel:
          title: channel
          type: string
        data:
          $ref: '#/components/schemas/PatientHealthResultResource_attributes_data'
        external_id:
          title: external_id
          type: string
        metric_type:
          enum:
          - blood_pressure_systolic
          - blood_pressure_diastolic
          - hemoglobin_a1c
          - hdl_cholesterol
          - ldl_cholesterol
          - total_cholesterol
          - triglycerides
          - blood_urea_nitrogen
          - creatinine
          - hemoglobin
          - hematocrit
          - total_serum_iron
          - thyroid_stimulating_hormone
          - free_thyroxine
          - free_triiodothyronine
          - total_triiodothyronine
          - cd4_cell_count
          - hiv_viral_load
          - inr
          - free_testosterone
          - total_testosterone
          - c_reactive_protein
          - prostate_specific_antigen
          - cotinine
          - c_peptide
          - blood_pressure
          - blood_glucose
          - weight
          - heart_rate
          - body_fat_percentage
          - body_mass_index
          - body_temperature
          - forced_expiratory_volume1
          - forced_vital_capacity
          - lean_body_mass
          - nausea_level
          - oxygen_saturation
          - pain_level
          - peak_expiratory_flow_rate
          - peripheral_perfusion_index
          - respiratory_rate
          - inhaler_usage
          title: metric_type
          type: string
        occurred_at:
          example: 2018-09-18T12:24:37.000Z
          format: dateTime
          title: occurred_at
          type: string
        occurred_at_time_zone:
          example: America/New_York
          title: occurred_at_time_zone
          type: string
        skipped:
          title: skipped
          type: boolean
        source:
          $ref: '#/components/schemas/PatientHealthResultResource_attributes_source'
        type:
          description: Type of result. Usually the same as metric_type except for
            lifestyle actions
          title: type
          type: string
        window:
          title: window
          type: string
      title: PatientHealthResultResource_attributes
      type: object
    PatientHealthResultResource_relationships_patient_data:
      properties:
        id:
          description: Required if the `meta.query` is not defined.
          example: 5c0fc0d02d02421ed70ca1d1
          title: id
          type: string
        meta:
          $ref: '#/components/schemas/PatientHealthMetricResource_relationships_patient_data_meta'
        type:
          title: type
          type: string
      title: PatientHealthResultResource_relationships_patient_data
      type: object
    PatientHealthResultResource_relationships_patient:
      properties:
        data:
          $ref: '#/components/schemas/PatientHealthResultResource_relationships_patient_data'
        links:
          title: links
          type: object
      title: PatientHealthResultResource_relationships_patient
      type: object
    PatientHealthResultResource_relationships:
      properties:
        action:
          $ref: '#/components/schemas/ActionResource_relationships_plan'
        metric:
          $ref: '#/components/schemas/ActionResource_relationships_plan'
        patient:
          $ref: '#/components/schemas/PatientHealthResultResource_relationships_patient'
      title: PatientHealthResultResource_relationships
      type: object
    PatientPlanSummaryResource_attributes_window_notification_times:
      properties:
        afternoon:
          title: afternoon
          type: integer
        evening:
          title: evening
          type: integer
        morning:
          title: morning
          type: integer
        night:
          title: night
          type: integer
      readOnly: true
      title: PatientPlanSummaryResource_attributes_window_notification_times
      type: object
    PatientPlanSummaryResource_attributes_window_order_inner:
      properties:
        _actions:
          items:
            type: string
          title: _actions
          type: array
        type:
          title: type
          type: string
      title: PatientPlanSummaryResource_attributes_window_order_inner
      type: object
    PatientPlanSummaryResource_attributes:
      properties:
        adherence:
          readOnly: true
          title: adherence
          type: object
        critical:
          additionalProperties: true
          title: critical
          type: object
        effective_from:
          format: dateTime
          readOnly: true
          title: effective_from
          type: string
        time_zone:
          title: time_zone
          type: string
        window_notification_times:
          $ref: '#/components/schemas/PatientPlanSummaryResource_attributes_window_notification_times'
        window_order:
          items:
            $ref: '#/components/schemas/PatientPlanSummaryResource_attributes_window_order_inner'
          title: window_order
          type: array
      title: PatientPlanSummaryResource_attributes
      type: object
    PatientPlanSummaryResource_links:
      properties:
        self:
          example: /patient_plan_summary/57b36e3c04ad8c2224f2af38
          pattern: "/patient_plan_summary/[0-9a-z]+"
          title: self
          type: string
      readOnly: true
      required:
      - self
      title: PatientPlanSummaryResource_links
      type: object
    PatientPlanSummaryResource_relationships_actions_data_inner:
      properties:
        id:
          title: id
          type: string
        type:
          title: type
          type: string
      required:
      - id
      - type
      title: PatientPlanSummaryResource_relationships_actions_data_inner
      type: object
    PatientPlanSummaryResource_relationships_actions_links:
      properties:
        related:
          title: related
          type: string
      title: PatientPlanSummaryResource_relationships_actions_links
      type: object
    PatientPlanSummaryResource_relationships_actions:
      properties:
        data:
          items:
            $ref: '#/components/schemas/PatientPlanSummaryResource_relationships_actions_data_inner'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/PatientPlanSummaryResource_relationships_actions_links'
      title: PatientPlanSummaryResource_relationships_actions
      type: object
    PatientPlanSummaryResource_relationships_patient:
      properties:
        data:
          $ref: '#/components/schemas/ActionResource_relationships_plan_data'
        links:
          $ref: '#/components/schemas/PatientPlanSummaryResource_relationships_actions_links'
      title: PatientPlanSummaryResource_relationships_patient
      type: object
    PatientPlanSummaryResource_relationships:
      properties:
        actions:
          $ref: '#/components/schemas/PatientPlanSummaryResource_relationships_actions'
        bundles:
          $ref: '#/components/schemas/PatientPlanSummaryResource_relationships_actions'
        current_results:
          $ref: '#/components/schemas/PatientPlanSummaryResource_relationships_actions'
        patient:
          $ref: '#/components/schemas/PatientPlanSummaryResource_relationships_patient'
      required:
      - actions
      - bundles
      - patient
      title: PatientPlanSummaryResource_relationships
      type: object
    PatientResource_attributes_statement:
      description: A patient's motivation statement.
      properties:
        updated_at:
          example: 2016-06-03T13:15:22.000Z
          format: dateTime
          title: updated_at
          type: string
        updated_by:
          example: 5c509cc2f60e34018180b57c
          title: updated_by
          type: string
        value:
          example: Enjoying nature.
          title: value
          type: string
      readOnly: true
      title: PatientResource_attributes_statement
      type: object
    PatientResource_attributes:
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/Address'
          title: addresses
          type: array
        archive_history:
          items:
            $ref: '#/components/schemas/ArchiveHistory'
          title: archive_history
          type: array
        archived:
          example: true
          readOnly: true
          title: archived
          type: boolean
        birth_date:
          example: 1944-03-06
          format: date
          title: birth_date
          type: string
        email_address:
          example: fiona@example.com
          title: email_address
          type: string
        enrolled_at:
          example: 2016-05-26T15:25:54.000Z
          format: dateTime
          readOnly: true
          title: enrolled_at
          type: string
        first_access_at:
          example: 2016-06-03T13:15:22.000Z
          format: dateTime
          readOnly: true
          title: first_access_at
          type: string
        first_name:
          example: Fiona
          title: first_name
          type: string
        gender:
          enum:
          - male
          - female
          - other
          example: female
          title: gender
          type: string
        identifiers:
          items:
            $ref: '#/components/schemas/PatientIdentifier'
          title: identifiers
          type: array
        invited_at:
          example: 2016-06-01T16:20:16.000Z
          format: dateTime
          readOnly: true
          title: invited_at
          type: string
        last_access_at:
          example: 2016-07-11T17:50:49.400Z
          format: dateTime
          readOnly: true
          title: last_access_at
          type: string
        last_name:
          example: Reeves
          title: last_name
          type: string
        note:
          description: Coach's note about the patient. Not visible to the patient.
          example: Relies on daughter to get around
          title: note
          type: string
        phone_numbers:
          items:
            $ref: '#/components/schemas/PhoneNumber'
          title: phone_numbers
          type: array
        statement:
          $ref: '#/components/schemas/PatientResource_attributes_statement'
        updated_at:
          example: 2016-07-11T17:13:57.027Z
          format: dateTime
          readOnly: true
          title: updated_at
          type: string
      title: PatientResource_attributes
      type: object
    PatientResource_links:
      properties:
        self:
          example: /patient/57b36ef304ad8c2224f2af3a
          pattern: "/patient/[0-9a-z]+"
          title: self
          type: string
        twine_web_app:
          description: A link to the patient record in the Fitbit Plus web application.
          example: https://app.plus.fitbit.com/#/coach/patient/5367c6300b7bb6e94188c02c/overview
          title: twine_web_app
          type: string
      readOnly: true
      title: PatientResource_links
      type: object
    PatientResource_relationships_coaches_links:
      properties:
        related:
          example: /patient/57b36ef304ad8c2224f2af3a/groups
          pattern: "/patient/[0-9a-z]+/groups"
          title: related
          type: string
      readOnly: true
      title: PatientResource_relationships_coaches_links
    PatientResource_relationships_coaches:
      properties:
        data:
          items:
            $ref: '#/components/schemas/PatientCreateResource_allOf_relationships_coaches_data'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/PatientResource_relationships_coaches_links'
      required:
      - data
      title: PatientResource_relationships_coaches
    PatientResource_relationships_groups_data_inner:
      properties:
        id:
          example: 57b3708b04ad8c2224f2af3b
          title: id
          type: string
        type:
          enum:
          - group
          example: group
          title: type
          type: string
      required:
      - type
      title: PatientResource_relationships_groups_data_inner
      type: object
    PatientResource_relationships_groups:
      properties:
        data:
          items:
            $ref: '#/components/schemas/PatientResource_relationships_groups_data_inner'
          title: data
          type: array
      required:
      - data
      title: PatientResource_relationships_groups
    PatientResource_relationships:
      properties:
        coaches:
          $ref: '#/components/schemas/PatientResource_relationships_coaches'
        groups:
          $ref: '#/components/schemas/PatientResource_relationships_groups'
      required:
      - groups
      title: PatientResource_relationships
      type: object
    RewardEarningFulfillmentResource_attributes:
      properties:
        fulfilled_at:
          description: Date at which the reward earning was fulfilled. (Must be at
            the same time or after the reward was earned)
          format: dateTime
          title: fulfilled_at
          type: string
        fulfilled_unit:
          description: Unit of the earned reward that has been fulfilled. (Read-only
            property)
          readOnly: true
          title: fulfilled_unit
          type: string
        fulfilled_value:
          description: Value of the earned reward that has been fulfilled. (Must be
            greater than or equal to 0)
          title: fulfilled_value
          type: number
      required:
      - fulfilled_at
      - fulfilled_value
      title: RewardEarningFulfillmentResource_attributes
      type: object
    RewardEarningFulfillmentResource_relationships_patient:
      properties:
        data:
          $ref: '#/components/schemas/ActionResource_relationships_plan_data'
      readOnly: true
      title: RewardEarningFulfillmentResource_relationships_patient
      type: object
    RewardEarningFulfillmentResource_relationships:
      properties:
        patient:
          $ref: '#/components/schemas/RewardEarningFulfillmentResource_relationships_patient'
        reward_earning:
          $ref: '#/components/schemas/EmailHistoryResource_relationships_receiver'
      required:
      - reward_earning
      title: RewardEarningFulfillmentResource_relationships
      type: object
    RewardEarningResource_attributes:
      properties:
        earned_at:
          description: Date at which the reward was earned. (Must be after the reward
            was allocated and before the reward program activation was deactivated
            or expired)
          format: dateTime
          title: earned_at
          type: string
        earned_unit:
          description: Unit of the reward that has been earned. (Read-only property)
          readOnly: true
          title: earned_unit
          type: string
        earned_value:
          description: Value of the reward that has been earned. (Must not exceed
            the allocated value for the reward)
          title: earned_value
          type: number
        fulfilled_at:
          description: Date at which the reward earning was fulfilled. (Read-only
            property)
          format: dateTime
          readOnly: true
          title: fulfilled_at
          type: string
        fulfilled_value:
          description: Value of the earned reward that has been fulfilled. (Read-only
            property)
          readOnly: true
          title: fulfilled_value
          type: number
        ready_for_fulfillment:
          description: "If true, the reward earning is ready to be fulfilled, either\
            \ because the reward program activation was fulfill_as_earned or because\
            \ the reward program activation has been deactivated. (Read-only property)"
          readOnly: true
          title: ready_for_fulfillment
          type: boolean
      required:
      - earned_at
      - earned_value
      title: RewardEarningResource_attributes
      type: object
    RewardEarningResource_relationships:
      properties:
        group:
          $ref: '#/components/schemas/RewardEarningFulfillmentResource_relationships_patient'
        patient:
          $ref: '#/components/schemas/RewardEarningFulfillmentResource_relationships_patient'
        reward:
          $ref: '#/components/schemas/EmailHistoryResource_relationships_receiver'
        reward_program_activation:
          $ref: '#/components/schemas/RewardEarningFulfillmentResource_relationships_patient'
      required:
      - reward
      title: RewardEarningResource_relationships
      type: object
    RewardProgramActivationResource_attributes:
      properties:
        activated_at:
          description: Date at which the reward program was activated for the patient.
            (Must be between the start_at and end_at dates for the reward program)
          format: dateTime
          title: activated_at
          type: string
        active:
          default: true
          description: "If true, the reward program is currently active."
          title: active
          type: boolean
        allocated_count:
          description: Number of rewards allocated. (Read-only property)
          readOnly: true
          title: allocated_count
          type: number
        budget_unit:
          description: Unit of the reward program budget. (Read-only property)
          readOnly: true
          title: budget_unit
          type: string
        deactivated_at:
          description: Date at which the reward program was deactivated. (Must be
            after the activated_at date)
          format: dateTime
          title: deactivated_at
          type: string
        earned_count:
          description: Number of reward earnings. (Read-only property)
          readOnly: true
          title: earned_count
          type: number
        expires_at:
          description: Date at which the reward program activation expires. (Read-only
            property set by adding the days_active from the reward program to the
            activated_at date)
          format: dateTime
          readOnly: true
          title: expires_at
          type: string
        fulfill_as_earned:
          description: "If true, the rewards created for a patient for the program\
            \ can be fulfulled as they are earned. If false, the rewards should only\
            \ be fulfilled when the program is deactivated. (Read-only property denormalized\
            \ from the reward program)"
          readOnly: true
          title: fulfill_as_earned
          type: boolean
        total_allocated_value:
          description: Total value of reward allocated. (Read-only property)
          readOnly: true
          title: total_allocated_value
          type: number
        total_earned_value:
          description: Total value of reward earnings. (Read-only property)
          readOnly: true
          title: total_earned_value
          type: number
      required:
      - activated_at
      title: RewardProgramActivationResource_attributes
      type: object
    RewardProgramActivationResource_relationships:
      properties:
        patient:
          $ref: '#/components/schemas/EmailHistoryResource_relationships_receiver'
        reward_program:
          $ref: '#/components/schemas/EmailHistoryResource_relationships_receiver'
      required:
      - patient
      - reward_program
      title: RewardProgramActivationResource_relationships
      type: object
    RewardProgramResource_attributes:
      properties:
        budget_unit:
          default: dollar
          description: Unit of the budget for the reard program.
          enum:
          - dollar
          - point
          - credit
          title: budget_unit
          type: string
        budget_value:
          description: Value of the budget for the reward program. (Must be greater
            than 0)
          title: budget_value
          type: number
        description:
          description: Description of the reward program - designed to be a comprehensive
            text description
          title: description
          type: string
        duration_active:
          default: 540
          description: Number of days that a program can be active after it has been
            activated for a patient. (Must be greater than 0)
          title: duration_active
          type: number
        end_at:
          description: Date at which the reward program ends. (Must be after the start_at)
          format: dateTime
          title: end_at
          type: string
        frozen:
          default: false
          description: "If true, the reward program cannot be activated for a patient\
            \ and new rewards cannot be created for the program."
          title: frozen
          type: boolean
        fulfill_as_earned:
          default: false
          description: "If true, the rewards created for a patient for the program\
            \ can be fulfulled as they are earned. If false, the rewards should only\
            \ be fulfilled when the program is deactivated."
          title: fulfill_as_earned
          type: boolean
        name:
          description: Name of the reward program
          title: name
          type: string
        start_at:
          description: Date at which the reward program starts.
          format: dateTime
          title: start_at
          type: string
        tagline:
          description: Tagline of the reward program - designed to be one line
          title: tagline
          type: string
      required:
      - budget_value
      - end_at
      - name
      - start_at
      title: RewardProgramResource_attributes
      type: object
    RewardProgramResource_relationships_group:
      properties:
        data:
          $ref: '#/components/schemas/PatientPlanSummaryResource_relationships_actions_data_inner'
      required:
      - data
      title: RewardProgramResource_relationships_group
      type: object
    RewardProgramResource_relationships:
      properties:
        group:
          $ref: '#/components/schemas/RewardProgramResource_relationships_group'
      required:
      - group
      title: RewardProgramResource_relationships
      type: object
    RewardResource_attributes:
      properties:
        _thread:
          description: Unique string identifying the health action with which the
            reward is associated.
          title: _thread
          type: string
        allocated_at:
          description: Date at which the reward was allocated. (Must be after the
            reward program is activated and before it is deactivated or expires)
          format: dateTime
          title: allocated_at
          type: string
        allocated_unit:
          description: Unit of the reward program. (Read-only property)
          readOnly: true
          title: allocated_unit
          type: string
        allocated_value:
          description: Value of the reward program budget allocated for the reward.
            (Must not exceed the remaining budget for the reward program activation)
          title: allocated_value
          type: number
        description:
          description: Description of the reward.
          title: description
          type: string
        earned_at:
          description: Date at which the reward was earned. (Read-only property)
          format: dateTime
          readOnly: true
          title: earned_at
          type: string
        earned_value:
          description: Value of the reward that has been earned. (Read-only property)
          readOnly: true
          title: earned_value
          type: number
        fulfilled_at:
          description: Date at which the reward earning was fulfilled. (Read-only
            property)
          format: dateTime
          readOnly: true
          title: fulfilled_at
          type: string
        fulfilled_value:
          description: Value of the earned reward that has been fulfilled. (Read-only
            property)
          readOnly: true
          title: fulfilled_value
          type: number
        target_at:
          description: Date at which the patient aspires to achieve the reward. (Must
            be the same or after the allocated_at date)
          format: dateTime
          title: target_at
          type: string
      required:
      - allocated_at
      - allocated_value
      - description
      title: RewardResource_attributes
      type: object
    RewardResource_relationships:
      properties:
        patient:
          $ref: '#/components/schemas/RewardEarningFulfillmentResource_relationships_patient'
        reward_program_activation:
          $ref: '#/components/schemas/EmailHistoryResource_relationships_receiver'
      required:
      - reward_program_activation
      title: RewardResource_relationships
      type: object
    TokenResource_attributes:
      properties:
        access_token:
          example: a01fe2bb-1977-48d9-b722-ac7f9135143f
          title: access_token
          type: string
        expires_in:
          example: 3600
          title: expires_in
          type: integer
        refresh_token:
          example: b452cb17-72e2-4e90-b9c6-d77a0b66cf7c
          title: refresh_token
          type: string
        token_type:
          enum:
          - bearer
          example: bearer
          title: token_type
          type: string
      required:
      - access_token
      - expires_in
      - refresh_token
      - token_type
      title: TokenResource_attributes
    TokenResource_relationships_groups_data_inner:
      properties:
        id:
          example: 57b36d6f04ad8c2224f2af36
          title: id
          type: string
        type:
          enum:
          - group
          example: group
          title: type
          type: string
      required:
      - id
      - type
      title: TokenResource_relationships_groups_data_inner
      type: object
    TokenResource_relationships_groups_links:
      properties:
        related:
          example: /oauth/token/57b36d8804ad8c2224f2af37/groups
          pattern: "/oauth/token/[0-9a-z]+/groups"
          title: related
          type: string
      required:
      - related
      title: TokenResource_relationships_groups_links
    TokenResource_relationships_groups:
      properties:
        data:
          items:
            $ref: '#/components/schemas/TokenResource_relationships_groups_data_inner'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/TokenResource_relationships_groups_links'
      required:
      - data
      - links
      title: TokenResource_relationships_groups
    TokenResource_relationships_organization_data:
      properties:
        id:
          example: 57b36d6f04ad8c2224f2af36
          title: id
          type: string
        type:
          enum:
          - organization
          example: organization
          title: type
          type: string
      required:
      - id
      - type
      title: TokenResource_relationships_organization_data
    TokenResource_relationships_organization_links:
      properties:
        related:
          example: /oauth/token/57b36d8804ad8c2224f2af37/organization
          pattern: "/oauth/token/[0-9a-z]+/organization"
          title: related
          type: string
      required:
      - related
      title: TokenResource_relationships_organization_links
    TokenResource_relationships_organization:
      properties:
        data:
          $ref: '#/components/schemas/TokenResource_relationships_organization_data'
        links:
          $ref: '#/components/schemas/TokenResource_relationships_organization_links'
      required:
      - data
      - links
      title: TokenResource_relationships_organization
    TokenResource_relationships:
      properties:
        groups:
          $ref: '#/components/schemas/TokenResource_relationships_groups'
        organization:
          $ref: '#/components/schemas/TokenResource_relationships_organization'
      title: TokenResource_relationships
      type: object
    UpdateCalendarEventRequest_data_relationships_owner:
      properties:
        data:
          $ref: '#/components/schemas/CalendarEventResource/properties/relationships/properties/owner/properties/data'
      title: UpdateCalendarEventRequest_data_relationships_owner
      type: object
    UpdateCalendarEventRequest_data_relationships:
      properties:
        owner:
          $ref: '#/components/schemas/UpdateCalendarEventRequest_data_relationships_owner'
      title: UpdateCalendarEventRequest_data_relationships
      type: object
    UpdateCalendarEventRequest_data:
      properties:
        attributes:
          allOf:
          - $ref: '#/components/schemas/CalendarEventResource/properties/attributes'
          title: attributes
        id:
          $ref: '#/components/schemas/CalendarEventResource/properties/id'
        relationships:
          $ref: '#/components/schemas/UpdateCalendarEventRequest_data_relationships'
        type:
          $ref: '#/components/schemas/CalendarEventResource/properties/type'
      required:
      - id
      - type
      title: UpdateCalendarEventRequest_data
      type: object
    UpsertPatientRequest_meta_query_identifier:
      description: Identifier to match patient
      properties:
        system:
          description: Name of system
          title: system
          type: string
        value:
          description: Value in system
          title: value
          type: string
      title: UpsertPatientRequest_meta_query_identifier
      type: object
    UpsertPatientRequest_meta_query:
      properties:
        groups:
          description: Group to create/update patient in.
          items:
            description: ID of group
            type: string
          title: groups
          type: array
        identifier:
          $ref: '#/components/schemas/UpsertPatientRequest_meta_query_identifier'
      required:
      - groups
      - identifier
      title: UpsertPatientRequest_meta_query
      type: object
    UpsertPatientRequest_meta:
      properties:
        query:
          $ref: '#/components/schemas/UpsertPatientRequest_meta_query'
      required:
      - query
      title: UpsertPatientRequest_meta
      type: object
  securitySchemes:
    OAuth2:
      description: |
        Fitbit Plus allows customers to access data for their organization using client credentials.
        OAuth2 is a safe and secure way to give you access.
      flows:
        clientCredentials:
          scopes:
            group: access patients and data within a group
            organization: access patients and data within an organization
          tokenUrl: /oauth/token
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_OAuth2
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_OAuth2
x-tagGroups:
- name: Authentication (oauth)
  tags:
  - oauth
- name: Admin
  tags:
  - organization
  - group
  - coach
  - reward program
- name: Patient Data
  tags:
  - action
  - bundle
  - calendar event
  - calendar event response
  - email history
  - health profile
  - health profile answer
  - health profile question
  - health question definition
  - metric
  - patient
  - plan
  - result
  - reward
  - reward earning
  - reward earning fulfillment
  - reward program activation
