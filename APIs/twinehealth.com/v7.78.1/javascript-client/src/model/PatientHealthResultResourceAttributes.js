/**
 * Fitbit Plus API
 * # Overview The Fitbit Plus API is a RESTful API. The requests and responses are formated according to the [JSON API](http://jsonapi.org/format/1.0/) specification.  In addition to this documentation, we also provide an [OpenAPI](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md) \"yaml\" file describing the API: [Fitbit Plus API Specification](swagger.yaml).  # Authentication Authentication for the Fitbit Plus API is based on the [OAuth 2.0 Authorization Framework](https://tools.ietf.org/html/rfc6749). Fitbit Plus currently supports grant types of **client_credentials** and **refresh_token**.  See [POST /oauth/token](#operation/createToken) for details on the request and response formats. <!-- ReDoc-Inject: <security-definitions> -->  ## Building Integrations We will provide customers with unique client credentials for each application/integration they build, allowing us to enforce appropriate access controls and monitor API usage. The client credentials will be scoped to the organization, and allow full access to all patients and related data within that organization.  These credentials are appropriate for creating an integration that does one of the following:  - background reporting/analysis  - synchronizing data with another system (such as an EMR)  The API credentials and oauth flows we currently support are **not** well suited for creating a user-facing application that allows a user (patient, coach, or admin) to login and have access to data which is appropriate to that specific user. It is possible to build such an application, but it is not possible to use Fitbit Plus as a federated identity provider. You would need to have a separate means of verifying a user's identity. We do not currently support the required password-based oauth flow to make this possible.  # Paging The Fitbit Plus API supports two different pagination strategies for GET collection endpoints.  #### Skip-based paging  Skip-based paging uses the query parameters `page[size]` and `page[number]` to specify the max number of resources returned and the page number. We default to skip-based paging if there are no page parameters. The response will include a `links` object containing links to the first, last, prev, and next pages of data.  If the contents of the collection change while you are iterating through the collection, you will see duplicate or missing documents. For example, if you are iterating through the `calender_event` resource via `GET /pub/calendar_event?sort=start_at&page[size]=50&page[number]=1`, and a new `calendar_event` is created that has a `start_at` value before the first `calendar_event`, when you fetch the next page at `GET /pub/calendar_event?sort=start_at&page[size]=50&page[number]=2`, the first entry in the second response will be a duplicate of the last entry in the first response.  #### Cursor-based paging Cursor-based paging uses the query parameters `page[limit]` and `page[after]` to specify the max number of entries returned and identify where to begin the next page. Add `page[limit]` to the parameters to use cursor-based paging. The response will include a `links` object containing a link to the next page of data, if the next page exists.  Cursor-based paging is not subject to duplication if new resources are added to the collection. For example, if you are iterating through the `calender_event` resource via `GET /pub/calendar_event?sort=start_at&page[limit]=50`, and a new `calendar_event` is created that has a `start_at` value before the first `calendar_event`, you will not see a duplicate entry when you fetch the next page at `GET /pub/calendar_event?sort=start_at&page[limit]=50&page[after]=<cursor>`.  We encourage the use of cursor-based paging for performance reasons.  In either form of paging, you can determine whether any resources were missed by comparing the number of fetched resources against `meta.count`. Set `page[size]` or `page[limit]` to 0 to get only the count.  It is not valid to mix the two strategies. 
 *
 * The version of the OpenAPI document: v7.78.1
 * Contact: apiteam@twinehealth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PatientHealthResultResourceAttributesAnnotationsInner from './PatientHealthResultResourceAttributesAnnotationsInner';
import PatientHealthResultResourceAttributesData from './PatientHealthResultResourceAttributesData';
import PatientHealthResultResourceAttributesSource from './PatientHealthResultResourceAttributesSource';

/**
 * The PatientHealthResultResourceAttributes model module.
 * @module model/PatientHealthResultResourceAttributes
 * @version v7.78.1
 */
class PatientHealthResultResourceAttributes {
    /**
     * Constructs a new <code>PatientHealthResultResourceAttributes</code>.
     * @alias module:model/PatientHealthResultResourceAttributes
     */
    constructor() { 
        
        PatientHealthResultResourceAttributes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PatientHealthResultResourceAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PatientHealthResultResourceAttributes} obj Optional instance to populate.
     * @return {module:model/PatientHealthResultResourceAttributes} The populated <code>PatientHealthResultResourceAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PatientHealthResultResourceAttributes();

            if (data.hasOwnProperty('_thread')) {
                obj['_thread'] = ApiClient.convertToType(data['_thread'], 'String');
            }
            if (data.hasOwnProperty('aggregation')) {
                obj['aggregation'] = ApiClient.convertToType(data['aggregation'], 'String');
            }
            if (data.hasOwnProperty('annotations')) {
                obj['annotations'] = ApiClient.convertToType(data['annotations'], [PatientHealthResultResourceAttributesAnnotationsInner]);
            }
            if (data.hasOwnProperty('channel')) {
                obj['channel'] = ApiClient.convertToType(data['channel'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = PatientHealthResultResourceAttributesData.constructFromObject(data['data']);
            }
            if (data.hasOwnProperty('external_id')) {
                obj['external_id'] = ApiClient.convertToType(data['external_id'], 'String');
            }
            if (data.hasOwnProperty('metric_type')) {
                obj['metric_type'] = ApiClient.convertToType(data['metric_type'], 'String');
            }
            if (data.hasOwnProperty('occurred_at')) {
                obj['occurred_at'] = ApiClient.convertToType(data['occurred_at'], 'String');
            }
            if (data.hasOwnProperty('occurred_at_time_zone')) {
                obj['occurred_at_time_zone'] = ApiClient.convertToType(data['occurred_at_time_zone'], 'String');
            }
            if (data.hasOwnProperty('skipped')) {
                obj['skipped'] = ApiClient.convertToType(data['skipped'], 'Boolean');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = PatientHealthResultResourceAttributesSource.constructFromObject(data['source']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('window')) {
                obj['window'] = ApiClient.convertToType(data['window'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PatientHealthResultResourceAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PatientHealthResultResourceAttributes</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['_thread'] && !(typeof data['_thread'] === 'string' || data['_thread'] instanceof String)) {
            throw new Error("Expected the field `_thread` to be a primitive type in the JSON string but got " + data['_thread']);
        }
        // ensure the json data is a string
        if (data['aggregation'] && !(typeof data['aggregation'] === 'string' || data['aggregation'] instanceof String)) {
            throw new Error("Expected the field `aggregation` to be a primitive type in the JSON string but got " + data['aggregation']);
        }
        if (data['annotations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['annotations'])) {
                throw new Error("Expected the field `annotations` to be an array in the JSON data but got " + data['annotations']);
            }
            // validate the optional field `annotations` (array)
            for (const item of data['annotations']) {
                PatientHealthResultResourceAttributesAnnotationsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['channel'] && !(typeof data['channel'] === 'string' || data['channel'] instanceof String)) {
            throw new Error("Expected the field `channel` to be a primitive type in the JSON string but got " + data['channel']);
        }
        // validate the optional field `data`
        if (data['data']) { // data not null
          PatientHealthResultResourceAttributesData.validateJSON(data['data']);
        }
        // ensure the json data is a string
        if (data['external_id'] && !(typeof data['external_id'] === 'string' || data['external_id'] instanceof String)) {
            throw new Error("Expected the field `external_id` to be a primitive type in the JSON string but got " + data['external_id']);
        }
        // ensure the json data is a string
        if (data['metric_type'] && !(typeof data['metric_type'] === 'string' || data['metric_type'] instanceof String)) {
            throw new Error("Expected the field `metric_type` to be a primitive type in the JSON string but got " + data['metric_type']);
        }
        // ensure the json data is a string
        if (data['occurred_at'] && !(typeof data['occurred_at'] === 'string' || data['occurred_at'] instanceof String)) {
            throw new Error("Expected the field `occurred_at` to be a primitive type in the JSON string but got " + data['occurred_at']);
        }
        // ensure the json data is a string
        if (data['occurred_at_time_zone'] && !(typeof data['occurred_at_time_zone'] === 'string' || data['occurred_at_time_zone'] instanceof String)) {
            throw new Error("Expected the field `occurred_at_time_zone` to be a primitive type in the JSON string but got " + data['occurred_at_time_zone']);
        }
        // validate the optional field `source`
        if (data['source']) { // data not null
          PatientHealthResultResourceAttributesSource.validateJSON(data['source']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['window'] && !(typeof data['window'] === 'string' || data['window'] instanceof String)) {
            throw new Error("Expected the field `window` to be a primitive type in the JSON string but got " + data['window']);
        }

        return true;
    }


}



/**
 * Links together results. This should be the same as the thread of _action, if it is defined
 * @member {String} _thread
 */
PatientHealthResultResourceAttributes.prototype['_thread'] = undefined;

/**
 * @member {String} aggregation
 */
PatientHealthResultResourceAttributes.prototype['aggregation'] = undefined;

/**
 * @member {Array.<module:model/PatientHealthResultResourceAttributesAnnotationsInner>} annotations
 */
PatientHealthResultResourceAttributes.prototype['annotations'] = undefined;

/**
 * @member {String} channel
 */
PatientHealthResultResourceAttributes.prototype['channel'] = undefined;

/**
 * @member {module:model/PatientHealthResultResourceAttributesData} data
 */
PatientHealthResultResourceAttributes.prototype['data'] = undefined;

/**
 * @member {String} external_id
 */
PatientHealthResultResourceAttributes.prototype['external_id'] = undefined;

/**
 * @member {module:model/PatientHealthResultResourceAttributes.MetricTypeEnum} metric_type
 */
PatientHealthResultResourceAttributes.prototype['metric_type'] = undefined;

/**
 * @member {String} occurred_at
 */
PatientHealthResultResourceAttributes.prototype['occurred_at'] = undefined;

/**
 * @member {String} occurred_at_time_zone
 */
PatientHealthResultResourceAttributes.prototype['occurred_at_time_zone'] = undefined;

/**
 * @member {Boolean} skipped
 */
PatientHealthResultResourceAttributes.prototype['skipped'] = undefined;

/**
 * @member {module:model/PatientHealthResultResourceAttributesSource} source
 */
PatientHealthResultResourceAttributes.prototype['source'] = undefined;

/**
 * Type of result. Usually the same as metric_type except for lifestyle actions
 * @member {String} type
 */
PatientHealthResultResourceAttributes.prototype['type'] = undefined;

/**
 * @member {String} window
 */
PatientHealthResultResourceAttributes.prototype['window'] = undefined;





/**
 * Allowed values for the <code>metric_type</code> property.
 * @enum {String}
 * @readonly
 */
PatientHealthResultResourceAttributes['MetricTypeEnum'] = {

    /**
     * value: "blood_pressure_systolic"
     * @const
     */
    "blood_pressure_systolic": "blood_pressure_systolic",

    /**
     * value: "blood_pressure_diastolic"
     * @const
     */
    "blood_pressure_diastolic": "blood_pressure_diastolic",

    /**
     * value: "hemoglobin_a1c"
     * @const
     */
    "hemoglobin_a1c": "hemoglobin_a1c",

    /**
     * value: "hdl_cholesterol"
     * @const
     */
    "hdl_cholesterol": "hdl_cholesterol",

    /**
     * value: "ldl_cholesterol"
     * @const
     */
    "ldl_cholesterol": "ldl_cholesterol",

    /**
     * value: "total_cholesterol"
     * @const
     */
    "total_cholesterol": "total_cholesterol",

    /**
     * value: "triglycerides"
     * @const
     */
    "triglycerides": "triglycerides",

    /**
     * value: "blood_urea_nitrogen"
     * @const
     */
    "blood_urea_nitrogen": "blood_urea_nitrogen",

    /**
     * value: "creatinine"
     * @const
     */
    "creatinine": "creatinine",

    /**
     * value: "hemoglobin"
     * @const
     */
    "hemoglobin": "hemoglobin",

    /**
     * value: "hematocrit"
     * @const
     */
    "hematocrit": "hematocrit",

    /**
     * value: "total_serum_iron"
     * @const
     */
    "total_serum_iron": "total_serum_iron",

    /**
     * value: "thyroid_stimulating_hormone"
     * @const
     */
    "thyroid_stimulating_hormone": "thyroid_stimulating_hormone",

    /**
     * value: "free_thyroxine"
     * @const
     */
    "free_thyroxine": "free_thyroxine",

    /**
     * value: "free_triiodothyronine"
     * @const
     */
    "free_triiodothyronine": "free_triiodothyronine",

    /**
     * value: "total_triiodothyronine"
     * @const
     */
    "total_triiodothyronine": "total_triiodothyronine",

    /**
     * value: "cd4_cell_count"
     * @const
     */
    "cd4_cell_count": "cd4_cell_count",

    /**
     * value: "hiv_viral_load"
     * @const
     */
    "hiv_viral_load": "hiv_viral_load",

    /**
     * value: "inr"
     * @const
     */
    "inr": "inr",

    /**
     * value: "free_testosterone"
     * @const
     */
    "free_testosterone": "free_testosterone",

    /**
     * value: "total_testosterone"
     * @const
     */
    "total_testosterone": "total_testosterone",

    /**
     * value: "c_reactive_protein"
     * @const
     */
    "c_reactive_protein": "c_reactive_protein",

    /**
     * value: "prostate_specific_antigen"
     * @const
     */
    "prostate_specific_antigen": "prostate_specific_antigen",

    /**
     * value: "cotinine"
     * @const
     */
    "cotinine": "cotinine",

    /**
     * value: "c_peptide"
     * @const
     */
    "c_peptide": "c_peptide",

    /**
     * value: "blood_pressure"
     * @const
     */
    "blood_pressure": "blood_pressure",

    /**
     * value: "blood_glucose"
     * @const
     */
    "blood_glucose": "blood_glucose",

    /**
     * value: "weight"
     * @const
     */
    "weight": "weight",

    /**
     * value: "heart_rate"
     * @const
     */
    "heart_rate": "heart_rate",

    /**
     * value: "body_fat_percentage"
     * @const
     */
    "body_fat_percentage": "body_fat_percentage",

    /**
     * value: "body_mass_index"
     * @const
     */
    "body_mass_index": "body_mass_index",

    /**
     * value: "body_temperature"
     * @const
     */
    "body_temperature": "body_temperature",

    /**
     * value: "forced_expiratory_volume1"
     * @const
     */
    "forced_expiratory_volume1": "forced_expiratory_volume1",

    /**
     * value: "forced_vital_capacity"
     * @const
     */
    "forced_vital_capacity": "forced_vital_capacity",

    /**
     * value: "lean_body_mass"
     * @const
     */
    "lean_body_mass": "lean_body_mass",

    /**
     * value: "nausea_level"
     * @const
     */
    "nausea_level": "nausea_level",

    /**
     * value: "oxygen_saturation"
     * @const
     */
    "oxygen_saturation": "oxygen_saturation",

    /**
     * value: "pain_level"
     * @const
     */
    "pain_level": "pain_level",

    /**
     * value: "peak_expiratory_flow_rate"
     * @const
     */
    "peak_expiratory_flow_rate": "peak_expiratory_flow_rate",

    /**
     * value: "peripheral_perfusion_index"
     * @const
     */
    "peripheral_perfusion_index": "peripheral_perfusion_index",

    /**
     * value: "respiratory_rate"
     * @const
     */
    "respiratory_rate": "respiratory_rate",

    /**
     * value: "inhaler_usage"
     * @const
     */
    "inhaler_usage": "inhaler_usage"
};



export default PatientHealthResultResourceAttributes;

