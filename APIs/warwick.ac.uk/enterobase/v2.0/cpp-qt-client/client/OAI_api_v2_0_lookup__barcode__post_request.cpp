/**
 * Enterobase-API
 *  API for EnteroBase (https://enterobase.warwick.ac.uk)   EnteroBase is a user-friendly online resource, where users can upload their  own sequencing data for de novo assembly by a stream-lined pipeline. The assemblies  are used for calling MLST and wgMLST patterns, allowing users to compare their strains  to publically available genotyping data from other EnteroBase users, GenBank and classical MLST databases.  Click here to find how to get and use an API token: http://bit.ly/1TKlaOU 
 *
 * The version of the OpenAPI document: v2.0
 * Contact: enterobase@warwick.ac.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_api_v2_0_lookup__barcode__post_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_api_v2_0_lookup__barcode__post_request::OAI_api_v2_0_lookup__barcode__post_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_api_v2_0_lookup__barcode__post_request::OAI_api_v2_0_lookup__barcode__post_request() {
    this->initializeModel();
}

OAI_api_v2_0_lookup__barcode__post_request::~OAI_api_v2_0_lookup__barcode__post_request() {}

void OAI_api_v2_0_lookup__barcode__post_request::initializeModel() {

    m_barcode_isSet = false;
    m_barcode_isValid = false;
}

void OAI_api_v2_0_lookup__barcode__post_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_api_v2_0_lookup__barcode__post_request::fromJsonObject(QJsonObject json) {

    m_barcode_isValid = ::OpenAPI::fromJsonValue(m_barcode, json[QString("barcode")]);
    m_barcode_isSet = !json[QString("barcode")].isNull() && m_barcode_isValid;
}

QString OAI_api_v2_0_lookup__barcode__post_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_api_v2_0_lookup__barcode__post_request::asJsonObject() const {
    QJsonObject obj;
    if (m_barcode_isSet) {
        obj.insert(QString("barcode"), ::OpenAPI::toJsonValue(m_barcode));
    }
    return obj;
}

QString OAI_api_v2_0_lookup__barcode__post_request::getBarcode() const {
    return m_barcode;
}
void OAI_api_v2_0_lookup__barcode__post_request::setBarcode(const QString &barcode) {
    m_barcode = barcode;
    m_barcode_isSet = true;
}

bool OAI_api_v2_0_lookup__barcode__post_request::is_barcode_Set() const{
    return m_barcode_isSet;
}

bool OAI_api_v2_0_lookup__barcode__post_request::is_barcode_Valid() const{
    return m_barcode_isValid;
}

bool OAI_api_v2_0_lookup__barcode__post_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_barcode_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_api_v2_0_lookup__barcode__post_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
