/*
 * Enterobase-API
 *  API for EnteroBase (https://enterobase.warwick.ac.uk)   EnteroBase is a user-friendly online resource, where users can upload their  own sequencing data for de novo assembly by a stream-lined pipeline. The assemblies  are used for calling MLST and wgMLST patterns, allowing users to compare their strains  to publically available genotyping data from other EnteroBase users, GenBank and classical MLST databases.  Click here to find how to get and use an API token: http://bit.ly/1TKlaOU 
 *
 * The version of the OpenAPI document: v2.0
 * Contact: enterobase@warwick.ac.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ApiV20DatabaseAssembliesBarcodeGetRequest
 */
public class ApiV20DatabaseAssembliesBarcodeGetRequestTest {
    private final ApiV20DatabaseAssembliesBarcodeGetRequest model = new ApiV20DatabaseAssembliesBarcodeGetRequest();

    /**
     * Model tests for ApiV20DatabaseAssembliesBarcodeGetRequest
     */
    @Test
    public void testApiV20DatabaseAssembliesBarcodeGetRequest() {
        // TODO: test ApiV20DatabaseAssembliesBarcodeGetRequest
    }

    /**
     * Test the property 'assemblyStatus'
     */
    @Test
    public void assemblyStatusTest() {
        // TODO: test assemblyStatus
    }

    /**
     * Test the property 'barcode'
     */
    @Test
    public void barcodeTest() {
        // TODO: test barcode
    }

    /**
     * Test the property 'limit'
     */
    @Test
    public void limitTest() {
        // TODO: test limit
    }

    /**
     * Test the property 'n50'
     */
    @Test
    public void n50Test() {
        // TODO: test n50
    }

    /**
     * Test the property 'offset'
     */
    @Test
    public void offsetTest() {
        // TODO: test offset
    }

    /**
     * Test the property 'onlyFields'
     */
    @Test
    public void onlyFieldsTest() {
        // TODO: test onlyFields
    }

    /**
     * Test the property 'orderby'
     */
    @Test
    public void orderbyTest() {
        // TODO: test orderby
    }

    /**
     * Test the property 'reldate'
     */
    @Test
    public void reldateTest() {
        // TODO: test reldate
    }

    /**
     * Test the property 'sortorder'
     */
    @Test
    public void sortorderTest() {
        // TODO: test sortorder
    }

    /**
     * Test the property 'topSpecies'
     */
    @Test
    public void topSpeciesTest() {
        // TODO: test topSpecies
    }

    /**
     * Test the property 'uberstrain'
     */
    @Test
    public void uberstrainTest() {
        // TODO: test uberstrain
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

}
