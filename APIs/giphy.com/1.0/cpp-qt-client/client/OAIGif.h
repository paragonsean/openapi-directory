/**
 * Giphy API
 * Giphy API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@giphy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGif.h
 *
 * 
 */

#ifndef OAIGif_H
#define OAIGif_H

#include <QJsonObject>

#include "OAIGif_images.h"
#include "OAIUser.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGif_images;
class OAIUser;

class OAIGif : public OAIObject {
public:
    OAIGif();
    OAIGif(QString json);
    ~OAIGif() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBitlyUrl() const;
    void setBitlyUrl(const QString &bitly_url);
    bool is_bitly_url_Set() const;
    bool is_bitly_url_Valid() const;

    QString getContentUrl() const;
    void setContentUrl(const QString &content_url);
    bool is_content_url_Set() const;
    bool is_content_url_Valid() const;

    QDateTime getCreateDatetime() const;
    void setCreateDatetime(const QDateTime &create_datetime);
    bool is_create_datetime_Set() const;
    bool is_create_datetime_Valid() const;

    QString getEmbdedUrl() const;
    void setEmbdedUrl(const QString &embded_url);
    bool is_embded_url_Set() const;
    bool is_embded_url_Valid() const;

    QList<QString> getFeaturedTags() const;
    void setFeaturedTags(const QList<QString> &featured_tags);
    bool is_featured_tags_Set() const;
    bool is_featured_tags_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIGif_images getImages() const;
    void setImages(const OAIGif_images &images);
    bool is_images_Set() const;
    bool is_images_Valid() const;

    QDateTime getImportDatetime() const;
    void setImportDatetime(const QDateTime &import_datetime);
    bool is_import_datetime_Set() const;
    bool is_import_datetime_Valid() const;

    QString getRating() const;
    void setRating(const QString &rating);
    bool is_rating_Set() const;
    bool is_rating_Valid() const;

    QString getSlug() const;
    void setSlug(const QString &slug);
    bool is_slug_Set() const;
    bool is_slug_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getSourcePostUrl() const;
    void setSourcePostUrl(const QString &source_post_url);
    bool is_source_post_url_Set() const;
    bool is_source_post_url_Valid() const;

    QString getSourceTld() const;
    void setSourceTld(const QString &source_tld);
    bool is_source_tld_Set() const;
    bool is_source_tld_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QDateTime getTrendingDatetime() const;
    void setTrendingDatetime(const QDateTime &trending_datetime);
    bool is_trending_datetime_Set() const;
    bool is_trending_datetime_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QDateTime getUpdateDatetime() const;
    void setUpdateDatetime(const QDateTime &update_datetime);
    bool is_update_datetime_Set() const;
    bool is_update_datetime_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    OAIUser getUser() const;
    void setUser(const OAIUser &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bitly_url;
    bool m_bitly_url_isSet;
    bool m_bitly_url_isValid;

    QString m_content_url;
    bool m_content_url_isSet;
    bool m_content_url_isValid;

    QDateTime m_create_datetime;
    bool m_create_datetime_isSet;
    bool m_create_datetime_isValid;

    QString m_embded_url;
    bool m_embded_url_isSet;
    bool m_embded_url_isValid;

    QList<QString> m_featured_tags;
    bool m_featured_tags_isSet;
    bool m_featured_tags_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIGif_images m_images;
    bool m_images_isSet;
    bool m_images_isValid;

    QDateTime m_import_datetime;
    bool m_import_datetime_isSet;
    bool m_import_datetime_isValid;

    QString m_rating;
    bool m_rating_isSet;
    bool m_rating_isValid;

    QString m_slug;
    bool m_slug_isSet;
    bool m_slug_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_source_post_url;
    bool m_source_post_url_isSet;
    bool m_source_post_url_isValid;

    QString m_source_tld;
    bool m_source_tld_isSet;
    bool m_source_tld_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QDateTime m_trending_datetime;
    bool m_trending_datetime_isSet;
    bool m_trending_datetime_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QDateTime m_update_datetime;
    bool m_update_datetime_isSet;
    bool m_update_datetime_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    OAIUser m_user;
    bool m_user_isSet;
    bool m_user_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGif)

#endif // OAIGif_H
