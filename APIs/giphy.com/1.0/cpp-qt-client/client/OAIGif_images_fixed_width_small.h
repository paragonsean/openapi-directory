/**
 * Giphy API
 * Giphy API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@giphy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGif_images_fixed_width_small.h
 *
 * 
 */

#ifndef OAIGif_images_fixed_width_small_H
#define OAIGif_images_fixed_width_small_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGif_images_fixed_width_small : public OAIObject {
public:
    OAIGif_images_fixed_width_small();
    OAIGif_images_fixed_width_small(QString json);
    ~OAIGif_images_fixed_width_small() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFrames() const;
    void setFrames(const QString &frames);
    bool is_frames_Set() const;
    bool is_frames_Valid() const;

    QString getHeight() const;
    void setHeight(const QString &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    QString getMp4() const;
    void setMp4(const QString &mp4);
    bool is_mp4_Set() const;
    bool is_mp4_Valid() const;

    QString getMp4Size() const;
    void setMp4Size(const QString &mp4_size);
    bool is_mp4_size_Set() const;
    bool is_mp4_size_Valid() const;

    QString getSize() const;
    void setSize(const QString &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getWebp() const;
    void setWebp(const QString &webp);
    bool is_webp_Set() const;
    bool is_webp_Valid() const;

    QString getWebpSize() const;
    void setWebpSize(const QString &webp_size);
    bool is_webp_size_Set() const;
    bool is_webp_size_Valid() const;

    QString getWidth() const;
    void setWidth(const QString &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_frames;
    bool m_frames_isSet;
    bool m_frames_isValid;

    QString m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    QString m_mp4;
    bool m_mp4_isSet;
    bool m_mp4_isValid;

    QString m_mp4_size;
    bool m_mp4_size_isSet;
    bool m_mp4_size_isValid;

    QString m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_webp;
    bool m_webp_isSet;
    bool m_webp_isValid;

    QString m_webp_size;
    bool m_webp_size_isSet;
    bool m_webp_size_isValid;

    QString m_width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGif_images_fixed_width_small)

#endif // OAIGif_images_fixed_width_small_H
