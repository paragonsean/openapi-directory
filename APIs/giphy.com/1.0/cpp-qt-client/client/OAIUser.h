/**
 * Giphy API
 * Giphy API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@giphy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUser.h
 *
 * The User Object contains information about the user associated with a GIF and URLs to assets such as that user&#39;s avatar image, profile, and more.
 */

#ifndef OAIUser_H
#define OAIUser_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUser : public OAIObject {
public:
    OAIUser();
    OAIUser(QString json);
    ~OAIUser() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAvatarUrl() const;
    void setAvatarUrl(const QString &avatar_url);
    bool is_avatar_url_Set() const;
    bool is_avatar_url_Valid() const;

    QString getBannerUrl() const;
    void setBannerUrl(const QString &banner_url);
    bool is_banner_url_Set() const;
    bool is_banner_url_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getProfileUrl() const;
    void setProfileUrl(const QString &profile_url);
    bool is_profile_url_Set() const;
    bool is_profile_url_Valid() const;

    QString getTwitter() const;
    void setTwitter(const QString &twitter);
    bool is_twitter_Set() const;
    bool is_twitter_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_avatar_url;
    bool m_avatar_url_isSet;
    bool m_avatar_url_isValid;

    QString m_banner_url;
    bool m_banner_url_isSet;
    bool m_banner_url_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_profile_url;
    bool m_profile_url_isSet;
    bool m_profile_url_isValid;

    QString m_twitter;
    bool m_twitter_isSet;
    bool m_twitter_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUser)

#endif // OAIUser_H
