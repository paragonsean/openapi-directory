# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.gif_images import GifImages
from openapi_server.models.user import User
from openapi_server import util


class Gif(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bitly_url: str=None, content_url: str=None, create_datetime: datetime=None, embded_url: str=None, featured_tags: List[str]=None, id: str=None, images: GifImages=None, import_datetime: datetime=None, rating: str=None, slug: str=None, source: str=None, source_post_url: str=None, source_tld: str=None, tags: List[str]=None, trending_datetime: datetime=None, type: str='gif', update_datetime: datetime=None, url: str=None, user: User=None, username: str=None):
        """Gif - a model defined in OpenAPI

        :param bitly_url: The bitly_url of this Gif.
        :param content_url: The content_url of this Gif.
        :param create_datetime: The create_datetime of this Gif.
        :param embded_url: The embded_url of this Gif.
        :param featured_tags: The featured_tags of this Gif.
        :param id: The id of this Gif.
        :param images: The images of this Gif.
        :param import_datetime: The import_datetime of this Gif.
        :param rating: The rating of this Gif.
        :param slug: The slug of this Gif.
        :param source: The source of this Gif.
        :param source_post_url: The source_post_url of this Gif.
        :param source_tld: The source_tld of this Gif.
        :param tags: The tags of this Gif.
        :param trending_datetime: The trending_datetime of this Gif.
        :param type: The type of this Gif.
        :param update_datetime: The update_datetime of this Gif.
        :param url: The url of this Gif.
        :param user: The user of this Gif.
        :param username: The username of this Gif.
        """
        self.openapi_types = {
            'bitly_url': str,
            'content_url': str,
            'create_datetime': datetime,
            'embded_url': str,
            'featured_tags': List[str],
            'id': str,
            'images': GifImages,
            'import_datetime': datetime,
            'rating': str,
            'slug': str,
            'source': str,
            'source_post_url': str,
            'source_tld': str,
            'tags': List[str],
            'trending_datetime': datetime,
            'type': str,
            'update_datetime': datetime,
            'url': str,
            'user': User,
            'username': str
        }

        self.attribute_map = {
            'bitly_url': 'bitly_url',
            'content_url': 'content_url',
            'create_datetime': 'create_datetime',
            'embded_url': 'embded_url',
            'featured_tags': 'featured_tags',
            'id': 'id',
            'images': 'images',
            'import_datetime': 'import_datetime',
            'rating': 'rating',
            'slug': 'slug',
            'source': 'source',
            'source_post_url': 'source_post_url',
            'source_tld': 'source_tld',
            'tags': 'tags',
            'trending_datetime': 'trending_datetime',
            'type': 'type',
            'update_datetime': 'update_datetime',
            'url': 'url',
            'user': 'user',
            'username': 'username'
        }

        self._bitly_url = bitly_url
        self._content_url = content_url
        self._create_datetime = create_datetime
        self._embded_url = embded_url
        self._featured_tags = featured_tags
        self._id = id
        self._images = images
        self._import_datetime = import_datetime
        self._rating = rating
        self._slug = slug
        self._source = source
        self._source_post_url = source_post_url
        self._source_tld = source_tld
        self._tags = tags
        self._trending_datetime = trending_datetime
        self._type = type
        self._update_datetime = update_datetime
        self._url = url
        self._user = user
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Gif':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Gif of this Gif.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bitly_url(self):
        """Gets the bitly_url of this Gif.

        The unique bit.ly URL for this GIF

        :return: The bitly_url of this Gif.
        :rtype: str
        """
        return self._bitly_url

    @bitly_url.setter
    def bitly_url(self, bitly_url):
        """Sets the bitly_url of this Gif.

        The unique bit.ly URL for this GIF

        :param bitly_url: The bitly_url of this Gif.
        :type bitly_url: str
        """

        self._bitly_url = bitly_url

    @property
    def content_url(self):
        """Gets the content_url of this Gif.

        Currently unused

        :return: The content_url of this Gif.
        :rtype: str
        """
        return self._content_url

    @content_url.setter
    def content_url(self, content_url):
        """Sets the content_url of this Gif.

        Currently unused

        :param content_url: The content_url of this Gif.
        :type content_url: str
        """

        self._content_url = content_url

    @property
    def create_datetime(self):
        """Gets the create_datetime of this Gif.

        The date this GIF was added to the GIPHY database.

        :return: The create_datetime of this Gif.
        :rtype: datetime
        """
        return self._create_datetime

    @create_datetime.setter
    def create_datetime(self, create_datetime):
        """Sets the create_datetime of this Gif.

        The date this GIF was added to the GIPHY database.

        :param create_datetime: The create_datetime of this Gif.
        :type create_datetime: datetime
        """

        self._create_datetime = create_datetime

    @property
    def embded_url(self):
        """Gets the embded_url of this Gif.

        A URL used for embedding this GIF

        :return: The embded_url of this Gif.
        :rtype: str
        """
        return self._embded_url

    @embded_url.setter
    def embded_url(self, embded_url):
        """Sets the embded_url of this Gif.

        A URL used for embedding this GIF

        :param embded_url: The embded_url of this Gif.
        :type embded_url: str
        """

        self._embded_url = embded_url

    @property
    def featured_tags(self):
        """Gets the featured_tags of this Gif.

        An array of featured tags for this GIF (Note: Not available when using the Public Beta Key) 

        :return: The featured_tags of this Gif.
        :rtype: List[str]
        """
        return self._featured_tags

    @featured_tags.setter
    def featured_tags(self, featured_tags):
        """Sets the featured_tags of this Gif.

        An array of featured tags for this GIF (Note: Not available when using the Public Beta Key) 

        :param featured_tags: The featured_tags of this Gif.
        :type featured_tags: List[str]
        """

        self._featured_tags = featured_tags

    @property
    def id(self):
        """Gets the id of this Gif.

        This GIF's unique ID

        :return: The id of this Gif.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Gif.

        This GIF's unique ID

        :param id: The id of this Gif.
        :type id: str
        """

        self._id = id

    @property
    def images(self):
        """Gets the images of this Gif.


        :return: The images of this Gif.
        :rtype: GifImages
        """
        return self._images

    @images.setter
    def images(self, images):
        """Sets the images of this Gif.


        :param images: The images of this Gif.
        :type images: GifImages
        """

        self._images = images

    @property
    def import_datetime(self):
        """Gets the import_datetime of this Gif.

        The creation or upload date from this GIF's source.

        :return: The import_datetime of this Gif.
        :rtype: datetime
        """
        return self._import_datetime

    @import_datetime.setter
    def import_datetime(self, import_datetime):
        """Sets the import_datetime of this Gif.

        The creation or upload date from this GIF's source.

        :param import_datetime: The import_datetime of this Gif.
        :type import_datetime: datetime
        """

        self._import_datetime = import_datetime

    @property
    def rating(self):
        """Gets the rating of this Gif.

        The MPAA-style rating for this content. Examples include Y, G, PG, PG-13 and R

        :return: The rating of this Gif.
        :rtype: str
        """
        return self._rating

    @rating.setter
    def rating(self, rating):
        """Sets the rating of this Gif.

        The MPAA-style rating for this content. Examples include Y, G, PG, PG-13 and R

        :param rating: The rating of this Gif.
        :type rating: str
        """

        self._rating = rating

    @property
    def slug(self):
        """Gets the slug of this Gif.

        The unique slug used in this GIF's URL

        :return: The slug of this Gif.
        :rtype: str
        """
        return self._slug

    @slug.setter
    def slug(self, slug):
        """Sets the slug of this Gif.

        The unique slug used in this GIF's URL

        :param slug: The slug of this Gif.
        :type slug: str
        """

        self._slug = slug

    @property
    def source(self):
        """Gets the source of this Gif.

        The page on which this GIF was found

        :return: The source of this Gif.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this Gif.

        The page on which this GIF was found

        :param source: The source of this Gif.
        :type source: str
        """

        self._source = source

    @property
    def source_post_url(self):
        """Gets the source_post_url of this Gif.

        The URL of the webpage on which this GIF was found.

        :return: The source_post_url of this Gif.
        :rtype: str
        """
        return self._source_post_url

    @source_post_url.setter
    def source_post_url(self, source_post_url):
        """Sets the source_post_url of this Gif.

        The URL of the webpage on which this GIF was found.

        :param source_post_url: The source_post_url of this Gif.
        :type source_post_url: str
        """

        self._source_post_url = source_post_url

    @property
    def source_tld(self):
        """Gets the source_tld of this Gif.

        The top level domain of the source URL.

        :return: The source_tld of this Gif.
        :rtype: str
        """
        return self._source_tld

    @source_tld.setter
    def source_tld(self, source_tld):
        """Sets the source_tld of this Gif.

        The top level domain of the source URL.

        :param source_tld: The source_tld of this Gif.
        :type source_tld: str
        """

        self._source_tld = source_tld

    @property
    def tags(self):
        """Gets the tags of this Gif.

        An array of tags for this GIF (Note: Not available when using the Public Beta Key) 

        :return: The tags of this Gif.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this Gif.

        An array of tags for this GIF (Note: Not available when using the Public Beta Key) 

        :param tags: The tags of this Gif.
        :type tags: List[str]
        """

        self._tags = tags

    @property
    def trending_datetime(self):
        """Gets the trending_datetime of this Gif.

        The date on which this gif was marked trending, if applicable.

        :return: The trending_datetime of this Gif.
        :rtype: datetime
        """
        return self._trending_datetime

    @trending_datetime.setter
    def trending_datetime(self, trending_datetime):
        """Sets the trending_datetime of this Gif.

        The date on which this gif was marked trending, if applicable.

        :param trending_datetime: The trending_datetime of this Gif.
        :type trending_datetime: datetime
        """

        self._trending_datetime = trending_datetime

    @property
    def type(self):
        """Gets the type of this Gif.

        Type of the gif. By default, this is almost always gif

        :return: The type of this Gif.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Gif.

        Type of the gif. By default, this is almost always gif

        :param type: The type of this Gif.
        :type type: str
        """
        allowed_values = ["gif"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def update_datetime(self):
        """Gets the update_datetime of this Gif.

        The date on which this GIF was last updated.

        :return: The update_datetime of this Gif.
        :rtype: datetime
        """
        return self._update_datetime

    @update_datetime.setter
    def update_datetime(self, update_datetime):
        """Sets the update_datetime of this Gif.

        The date on which this GIF was last updated.

        :param update_datetime: The update_datetime of this Gif.
        :type update_datetime: datetime
        """

        self._update_datetime = update_datetime

    @property
    def url(self):
        """Gets the url of this Gif.

        The unique URL for this GIF

        :return: The url of this Gif.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Gif.

        The unique URL for this GIF

        :param url: The url of this Gif.
        :type url: str
        """

        self._url = url

    @property
    def user(self):
        """Gets the user of this Gif.


        :return: The user of this Gif.
        :rtype: User
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this Gif.


        :param user: The user of this Gif.
        :type user: User
        """

        self._user = user

    @property
    def username(self):
        """Gets the username of this Gif.

        The username this GIF is attached to, if applicable

        :return: The username of this Gif.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this Gif.

        The username this GIF is attached to, if applicable

        :param username: The username of this Gif.
        :type username: str
        """

        self._username = username
