/*
 * Giphy API
 * Giphy API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@giphy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GetGifsById200Response;
import org.openapitools.client.model.RandomGif200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GifsApi
 */
@Disabled
public class GifsApiTest {

    private final GifsApi api = new GifsApi();

    /**
     * Get GIF by Id
     *
     * Returns a GIF given that GIF&#39;s unique ID 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGifByIdTest() throws ApiException {
        Integer gifId = null;
        RandomGif200Response response = api.getGifById(gifId);
        // TODO: test validations
    }

    /**
     * Get GIFs by ID
     *
     * A multiget version of the get GIF by ID endpoint. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGifsByIdTest() throws ApiException {
        String ids = null;
        GetGifsById200Response response = api.getGifsById(ids);
        // TODO: test validations
    }

    /**
     * Random GIF
     *
     * Returns a random GIF, limited by tag. Excluding the tag parameter will return a random GIF from the GIPHY catalog. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void randomGifTest() throws ApiException {
        String tag = null;
        String rating = null;
        RandomGif200Response response = api.randomGif(tag, rating);
        // TODO: test validations
    }

    /**
     * Search GIFs
     *
     * Search all GIPHY GIFs for a word or phrase. Punctuation will be stripped and ignored.  Use a plus or url encode for phrases. Example paul+rudd, ryan+gosling or american+psycho. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchGifsTest() throws ApiException {
        String q = null;
        Integer limit = null;
        Integer offset = null;
        String rating = null;
        String lang = null;
        GetGifsById200Response response = api.searchGifs(q, limit, offset, rating, lang);
        // TODO: test validations
    }

    /**
     * Translate phrase to GIF
     *
     * The translate API draws on search, but uses the GIPHY &#x60;special sauce&#x60; to handle translating from one vocabulary to another. In this case, words and phrases to GIF 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void translateGifTest() throws ApiException {
        String s = null;
        RandomGif200Response response = api.translateGif(s);
        // TODO: test validations
    }

    /**
     * Trending GIFs
     *
     * Fetch GIFs currently trending online. Hand curated by the GIPHY editorial team.  The data returned mirrors the GIFs showcased on the GIPHY homepage. Returns 25 results by default. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void trendingGifsTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        String rating = null;
        GetGifsById200Response response = api.trendingGifs(limit, offset, rating);
        // TODO: test validations
    }

}
