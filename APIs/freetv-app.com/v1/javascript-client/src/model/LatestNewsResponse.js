/**
 * News Plugin
 * A plugin that allows the user to obtain latest news using ChatGPT.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NewsItem from './NewsItem';

/**
 * The LatestNewsResponse model module.
 * @module model/LatestNewsResponse
 * @version v1
 */
class LatestNewsResponse {
    /**
     * Constructs a new <code>LatestNewsResponse</code>.
     * @alias module:model/LatestNewsResponse
     * @param getLatestNews {Array.<module:model/NewsItem>} Result of latest news list.
     */
    constructor(getLatestNews) { 
        
        LatestNewsResponse.initialize(this, getLatestNews);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, getLatestNews) { 
        obj['getLatestNews'] = getLatestNews;
    }

    /**
     * Constructs a <code>LatestNewsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LatestNewsResponse} obj Optional instance to populate.
     * @return {module:model/LatestNewsResponse} The populated <code>LatestNewsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LatestNewsResponse();

            if (data.hasOwnProperty('getLatestNews')) {
                obj['getLatestNews'] = ApiClient.convertToType(data['getLatestNews'], [NewsItem]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LatestNewsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LatestNewsResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LatestNewsResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['getLatestNews']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['getLatestNews'])) {
                throw new Error("Expected the field `getLatestNews` to be an array in the JSON data but got " + data['getLatestNews']);
            }
            // validate the optional field `getLatestNews` (array)
            for (const item of data['getLatestNews']) {
                NewsItem.validateJSON(item);
            };
        }

        return true;
    }


}

LatestNewsResponse.RequiredProperties = ["getLatestNews"];

/**
 * Result of latest news list.
 * @member {Array.<module:model/NewsItem>} getLatestNews
 */
LatestNewsResponse.prototype['getLatestNews'] = undefined;






export default LatestNewsResponse;

