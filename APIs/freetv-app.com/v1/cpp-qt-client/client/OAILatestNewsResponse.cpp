/**
 * News Plugin
 * A plugin that allows the user to obtain latest news using ChatGPT.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILatestNewsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILatestNewsResponse::OAILatestNewsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILatestNewsResponse::OAILatestNewsResponse() {
    this->initializeModel();
}

OAILatestNewsResponse::~OAILatestNewsResponse() {}

void OAILatestNewsResponse::initializeModel() {

    m_get_latest_news_isSet = false;
    m_get_latest_news_isValid = false;
}

void OAILatestNewsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILatestNewsResponse::fromJsonObject(QJsonObject json) {

    m_get_latest_news_isValid = ::OpenAPI::fromJsonValue(m_get_latest_news, json[QString("getLatestNews")]);
    m_get_latest_news_isSet = !json[QString("getLatestNews")].isNull() && m_get_latest_news_isValid;
}

QString OAILatestNewsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILatestNewsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_get_latest_news.size() > 0) {
        obj.insert(QString("getLatestNews"), ::OpenAPI::toJsonValue(m_get_latest_news));
    }
    return obj;
}

QList<OAINewsItem> OAILatestNewsResponse::getGetLatestNews() const {
    return m_get_latest_news;
}
void OAILatestNewsResponse::setGetLatestNews(const QList<OAINewsItem> &get_latest_news) {
    m_get_latest_news = get_latest_news;
    m_get_latest_news_isSet = true;
}

bool OAILatestNewsResponse::is_get_latest_news_Set() const{
    return m_get_latest_news_isSet;
}

bool OAILatestNewsResponse::is_get_latest_news_Valid() const{
    return m_get_latest_news_isValid;
}

bool OAILatestNewsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_get_latest_news.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILatestNewsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_get_latest_news_isValid && true;
}

} // namespace OpenAPI
