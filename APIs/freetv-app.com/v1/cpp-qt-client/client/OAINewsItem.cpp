/**
 * News Plugin
 * A plugin that allows the user to obtain latest news using ChatGPT.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINewsItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINewsItem::OAINewsItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINewsItem::OAINewsItem() {
    this->initializeModel();
}

OAINewsItem::~OAINewsItem() {}

void OAINewsItem::initializeModel() {

    m_created_isSet = false;
    m_created_isValid = false;

    m_ref_isSet = false;
    m_ref_isValid = false;

    m_subtitle_isSet = false;
    m_subtitle_isValid = false;

    m_thumbnail_isSet = false;
    m_thumbnail_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAINewsItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINewsItem::fromJsonObject(QJsonObject json) {

    m_created_isValid = ::OpenAPI::fromJsonValue(m_created, json[QString("created")]);
    m_created_isSet = !json[QString("created")].isNull() && m_created_isValid;

    m_ref_isValid = ::OpenAPI::fromJsonValue(m_ref, json[QString("ref")]);
    m_ref_isSet = !json[QString("ref")].isNull() && m_ref_isValid;

    m_subtitle_isValid = ::OpenAPI::fromJsonValue(m_subtitle, json[QString("subtitle")]);
    m_subtitle_isSet = !json[QString("subtitle")].isNull() && m_subtitle_isValid;

    m_thumbnail_isValid = ::OpenAPI::fromJsonValue(m_thumbnail, json[QString("thumbnail")]);
    m_thumbnail_isSet = !json[QString("thumbnail")].isNull() && m_thumbnail_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAINewsItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINewsItem::asJsonObject() const {
    QJsonObject obj;
    if (m_created_isSet) {
        obj.insert(QString("created"), ::OpenAPI::toJsonValue(m_created));
    }
    if (m_ref_isSet) {
        obj.insert(QString("ref"), ::OpenAPI::toJsonValue(m_ref));
    }
    if (m_subtitle_isSet) {
        obj.insert(QString("subtitle"), ::OpenAPI::toJsonValue(m_subtitle));
    }
    if (m_thumbnail_isSet) {
        obj.insert(QString("thumbnail"), ::OpenAPI::toJsonValue(m_thumbnail));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAINewsItem::getCreated() const {
    return m_created;
}
void OAINewsItem::setCreated(const QString &created) {
    m_created = created;
    m_created_isSet = true;
}

bool OAINewsItem::is_created_Set() const{
    return m_created_isSet;
}

bool OAINewsItem::is_created_Valid() const{
    return m_created_isValid;
}

QString OAINewsItem::getRef() const {
    return m_ref;
}
void OAINewsItem::setRef(const QString &ref) {
    m_ref = ref;
    m_ref_isSet = true;
}

bool OAINewsItem::is_ref_Set() const{
    return m_ref_isSet;
}

bool OAINewsItem::is_ref_Valid() const{
    return m_ref_isValid;
}

QString OAINewsItem::getSubtitle() const {
    return m_subtitle;
}
void OAINewsItem::setSubtitle(const QString &subtitle) {
    m_subtitle = subtitle;
    m_subtitle_isSet = true;
}

bool OAINewsItem::is_subtitle_Set() const{
    return m_subtitle_isSet;
}

bool OAINewsItem::is_subtitle_Valid() const{
    return m_subtitle_isValid;
}

QString OAINewsItem::getThumbnail() const {
    return m_thumbnail;
}
void OAINewsItem::setThumbnail(const QString &thumbnail) {
    m_thumbnail = thumbnail;
    m_thumbnail_isSet = true;
}

bool OAINewsItem::is_thumbnail_Set() const{
    return m_thumbnail_isSet;
}

bool OAINewsItem::is_thumbnail_Valid() const{
    return m_thumbnail_isValid;
}

QString OAINewsItem::getTitle() const {
    return m_title;
}
void OAINewsItem::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAINewsItem::is_title_Set() const{
    return m_title_isSet;
}

bool OAINewsItem::is_title_Valid() const{
    return m_title_isValid;
}

bool OAINewsItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ref_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subtitle_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_thumbnail_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINewsItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
