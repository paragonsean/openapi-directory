/**
 * IoTVAS API
 * IOTVAS API enables you to discover IoT/Connected devices in the network and provides      detailed real-time risk analysis, including firmware vulnerability analysis without requiring the user to upload the firmware file.     Please visit the [signup page](https://iotvas-api.firmalyzer.com/portal/signup) to create an API key.     IoTVAS API can be easily integrated with vulnerability scanning and network port scanner tools. For example,     we have also released the [IOTVAS NSE script](https://github.com/firmalyzer/iotvas-nmap) that turns the nmap port scanner      to a IoT/connected device discovery and real-time risk assessment tool. For more infromation on IoTVAS and other      solutions please visit [Firmalyzer web site](https://www.firmalyzer.com).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFirmwareRisk.h
 *
 * 
 */

#ifndef OAIFirmwareRisk_H
#define OAIFirmwareRisk_H

#include <QJsonObject>

#include "OAIRiskSummary.h"
#include "OAIVulnerableComponent.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRiskSummary;
class OAIVulnerableComponent;

class OAIFirmwareRisk : public OAIObject {
public:
    OAIFirmwareRisk();
    OAIFirmwareRisk(QString json);
    ~OAIFirmwareRisk() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRiskSummary getRiskSummary() const;
    void setRiskSummary(const OAIRiskSummary &risk_summary);
    bool is_risk_summary_Set() const;
    bool is_risk_summary_Valid() const;

    QList<OAIVulnerableComponent> getVulnerableComponents() const;
    void setVulnerableComponents(const QList<OAIVulnerableComponent> &vulnerable_components);
    bool is_vulnerable_components_Set() const;
    bool is_vulnerable_components_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRiskSummary m_risk_summary;
    bool m_risk_summary_isSet;
    bool m_risk_summary_isValid;

    QList<OAIVulnerableComponent> m_vulnerable_components;
    bool m_vulnerable_components_isSet;
    bool m_vulnerable_components_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFirmwareRisk)

#endif // OAIFirmwareRisk_H
