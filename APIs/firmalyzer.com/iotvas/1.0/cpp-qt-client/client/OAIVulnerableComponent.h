/**
 * IoTVAS API
 * IOTVAS API enables you to discover IoT/Connected devices in the network and provides      detailed real-time risk analysis, including firmware vulnerability analysis without requiring the user to upload the firmware file.     Please visit the [signup page](https://iotvas-api.firmalyzer.com/portal/signup) to create an API key.     IoTVAS API can be easily integrated with vulnerability scanning and network port scanner tools. For example,     we have also released the [IOTVAS NSE script](https://github.com/firmalyzer/iotvas-nmap) that turns the nmap port scanner      to a IoT/connected device discovery and real-time risk assessment tool. For more infromation on IoTVAS and other      solutions please visit [Firmalyzer web site](https://www.firmalyzer.com).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVulnerableComponent.h
 *
 * 
 */

#ifndef OAIVulnerableComponent_H
#define OAIVulnerableComponent_H

#include <QJsonObject>

#include "OAIVulnerability.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVulnerability;

class OAIVulnerableComponent : public OAIObject {
public:
    OAIVulnerableComponent();
    OAIVulnerableComponent(QString json);
    ~OAIVulnerableComponent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    double getCvssMax() const;
    void setCvssMax(const double &cvss_max);
    bool is_cvss_max_Set() const;
    bool is_cvss_max_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QList<OAIVulnerability> getVulnerabilities() const;
    void setVulnerabilities(const QList<OAIVulnerability> &vulnerabilities);
    bool is_vulnerabilities_Set() const;
    bool is_vulnerabilities_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    double m_cvss_max;
    bool m_cvss_max_isSet;
    bool m_cvss_max_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QList<OAIVulnerability> m_vulnerabilities;
    bool m_vulnerabilities_isSet;
    bool m_vulnerabilities_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVulnerableComponent)

#endif // OAIVulnerableComponent_H
