/**
 * IoTVAS API
 * IOTVAS API enables you to discover IoT/Connected devices in the network and provides      detailed real-time risk analysis, including firmware vulnerability analysis without requiring the user to upload the firmware file.     Please visit the [signup page](https://iotvas-api.firmalyzer.com/portal/signup) to create an API key.     IoTVAS API can be easily integrated with vulnerability scanning and network port scanner tools. For example,     we have also released the [IOTVAS NSE script](https://github.com/firmalyzer/iotvas-nmap) that turns the nmap port scanner      to a IoT/connected device discovery and real-time risk assessment tool. For more infromation on IoTVAS and other      solutions please visit [Firmalyzer web site](https://www.firmalyzer.com).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFirmwareInfo.h
 *
 * 
 */

#ifndef OAIFirmwareInfo_H
#define OAIFirmwareInfo_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFirmwareInfo : public OAIObject {
public:
    OAIFirmwareInfo();
    OAIFirmwareInfo(QString json);
    ~OAIFirmwareInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDownloadUrl() const;
    void setDownloadUrl(const QString &download_url);
    bool is_download_url_Set() const;
    bool is_download_url_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getReleaseDate() const;
    void setReleaseDate(const QString &release_date);
    bool is_release_date_Set() const;
    bool is_release_date_Valid() const;

    QString getSha2() const;
    void setSha2(const QString &sha2);
    bool is_sha2_Set() const;
    bool is_sha2_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_download_url;
    bool m_download_url_isSet;
    bool m_download_url_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_release_date;
    bool m_release_date_isSet;
    bool m_release_date_isValid;

    QString m_sha2;
    bool m_sha2_isSet;
    bool m_sha2_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFirmwareInfo)

#endif // OAIFirmwareInfo_H
