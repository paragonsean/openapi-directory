# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Vulnerability(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cve_id: str=None, cvss: float=None):
        """Vulnerability - a model defined in OpenAPI

        :param cve_id: The cve_id of this Vulnerability.
        :param cvss: The cvss of this Vulnerability.
        """
        self.openapi_types = {
            'cve_id': str,
            'cvss': float
        }

        self.attribute_map = {
            'cve_id': 'cve_id',
            'cvss': 'cvss'
        }

        self._cve_id = cve_id
        self._cvss = cvss

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Vulnerability':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Vulnerability of this Vulnerability.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cve_id(self):
        """Gets the cve_id of this Vulnerability.


        :return: The cve_id of this Vulnerability.
        :rtype: str
        """
        return self._cve_id

    @cve_id.setter
    def cve_id(self, cve_id):
        """Sets the cve_id of this Vulnerability.


        :param cve_id: The cve_id of this Vulnerability.
        :type cve_id: str
        """

        self._cve_id = cve_id

    @property
    def cvss(self):
        """Gets the cvss of this Vulnerability.


        :return: The cvss of this Vulnerability.
        :rtype: float
        """
        return self._cvss

    @cvss.setter
    def cvss(self, cvss):
        """Sets the cvss of this Vulnerability.


        :param cvss: The cvss of this Vulnerability.
        :type cvss: float
        """

        self._cvss = cvss
