# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PublicKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, algorithm: str=None, bits: int=None):
        """PublicKey - a model defined in OpenAPI

        :param algorithm: The algorithm of this PublicKey.
        :param bits: The bits of this PublicKey.
        """
        self.openapi_types = {
            'algorithm': str,
            'bits': int
        }

        self.attribute_map = {
            'algorithm': 'algorithm',
            'bits': 'bits'
        }

        self._algorithm = algorithm
        self._bits = bits

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PublicKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PublicKey of this PublicKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def algorithm(self):
        """Gets the algorithm of this PublicKey.


        :return: The algorithm of this PublicKey.
        :rtype: str
        """
        return self._algorithm

    @algorithm.setter
    def algorithm(self, algorithm):
        """Sets the algorithm of this PublicKey.


        :param algorithm: The algorithm of this PublicKey.
        :type algorithm: str
        """

        self._algorithm = algorithm

    @property
    def bits(self):
        """Gets the bits of this PublicKey.


        :return: The bits of this PublicKey.
        :rtype: int
        """
        return self._bits

    @bits.setter
    def bits(self, bits):
        """Sets the bits of this PublicKey.


        :param bits: The bits of this PublicKey.
        :type bits: int
        """

        self._bits = bits
