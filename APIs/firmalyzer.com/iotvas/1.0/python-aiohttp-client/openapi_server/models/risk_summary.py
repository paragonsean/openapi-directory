# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RiskSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_tools_risk: str=None, crypto_risk: str=None, kernel_risk: str=None, net_services_risk: str=None):
        """RiskSummary - a model defined in OpenAPI

        :param client_tools_risk: The client_tools_risk of this RiskSummary.
        :param crypto_risk: The crypto_risk of this RiskSummary.
        :param kernel_risk: The kernel_risk of this RiskSummary.
        :param net_services_risk: The net_services_risk of this RiskSummary.
        """
        self.openapi_types = {
            'client_tools_risk': str,
            'crypto_risk': str,
            'kernel_risk': str,
            'net_services_risk': str
        }

        self.attribute_map = {
            'client_tools_risk': 'client_tools_risk',
            'crypto_risk': 'crypto_risk',
            'kernel_risk': 'kernel_risk',
            'net_services_risk': 'net_services_risk'
        }

        self._client_tools_risk = client_tools_risk
        self._crypto_risk = crypto_risk
        self._kernel_risk = kernel_risk
        self._net_services_risk = net_services_risk

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RiskSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RiskSummary of this RiskSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_tools_risk(self):
        """Gets the client_tools_risk of this RiskSummary.


        :return: The client_tools_risk of this RiskSummary.
        :rtype: str
        """
        return self._client_tools_risk

    @client_tools_risk.setter
    def client_tools_risk(self, client_tools_risk):
        """Sets the client_tools_risk of this RiskSummary.


        :param client_tools_risk: The client_tools_risk of this RiskSummary.
        :type client_tools_risk: str
        """

        self._client_tools_risk = client_tools_risk

    @property
    def crypto_risk(self):
        """Gets the crypto_risk of this RiskSummary.


        :return: The crypto_risk of this RiskSummary.
        :rtype: str
        """
        return self._crypto_risk

    @crypto_risk.setter
    def crypto_risk(self, crypto_risk):
        """Sets the crypto_risk of this RiskSummary.


        :param crypto_risk: The crypto_risk of this RiskSummary.
        :type crypto_risk: str
        """

        self._crypto_risk = crypto_risk

    @property
    def kernel_risk(self):
        """Gets the kernel_risk of this RiskSummary.


        :return: The kernel_risk of this RiskSummary.
        :rtype: str
        """
        return self._kernel_risk

    @kernel_risk.setter
    def kernel_risk(self, kernel_risk):
        """Sets the kernel_risk of this RiskSummary.


        :param kernel_risk: The kernel_risk of this RiskSummary.
        :type kernel_risk: str
        """

        self._kernel_risk = kernel_risk

    @property
    def net_services_risk(self):
        """Gets the net_services_risk of this RiskSummary.


        :return: The net_services_risk of this RiskSummary.
        :rtype: str
        """
        return self._net_services_risk

    @net_services_risk.setter
    def net_services_risk(self, net_services_risk):
        """Sets the net_services_risk of this RiskSummary.


        :param net_services_risk: The net_services_risk of this RiskSummary.
        :type net_services_risk: str
        """

        self._net_services_risk = net_services_risk
