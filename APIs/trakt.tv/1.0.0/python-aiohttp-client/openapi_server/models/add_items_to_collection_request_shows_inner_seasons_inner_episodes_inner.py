# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio: str=None, audio_channels: str=None, media_type: str=None, number: float=None, resolution: str=None):
        """AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner - a model defined in OpenAPI

        :param audio: The audio of this AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner.
        :param audio_channels: The audio_channels of this AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner.
        :param media_type: The media_type of this AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner.
        :param number: The number of this AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner.
        :param resolution: The resolution of this AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner.
        """
        self.openapi_types = {
            'audio': str,
            'audio_channels': str,
            'media_type': str,
            'number': float,
            'resolution': str
        }

        self.attribute_map = {
            'audio': 'audio',
            'audio_channels': 'audio_channels',
            'media_type': 'media_type',
            'number': 'number',
            'resolution': 'resolution'
        }

        self._audio = audio
        self._audio_channels = audio_channels
        self._media_type = media_type
        self._number = number
        self._resolution = resolution

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Add_items_to_collection_request_shows_inner_seasons_inner_episodes_inner of this AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio(self):
        """Gets the audio of this AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner.


        :return: The audio of this AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner.
        :rtype: str
        """
        return self._audio

    @audio.setter
    def audio(self, audio):
        """Sets the audio of this AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner.


        :param audio: The audio of this AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner.
        :type audio: str
        """

        self._audio = audio

    @property
    def audio_channels(self):
        """Gets the audio_channels of this AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner.


        :return: The audio_channels of this AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner.
        :rtype: str
        """
        return self._audio_channels

    @audio_channels.setter
    def audio_channels(self, audio_channels):
        """Sets the audio_channels of this AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner.


        :param audio_channels: The audio_channels of this AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner.
        :type audio_channels: str
        """

        self._audio_channels = audio_channels

    @property
    def media_type(self):
        """Gets the media_type of this AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner.


        :return: The media_type of this AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner.
        :rtype: str
        """
        return self._media_type

    @media_type.setter
    def media_type(self, media_type):
        """Sets the media_type of this AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner.


        :param media_type: The media_type of this AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner.
        :type media_type: str
        """

        self._media_type = media_type

    @property
    def number(self):
        """Gets the number of this AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner.


        :return: The number of this AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner.
        :rtype: float
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner.


        :param number: The number of this AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner.
        :type number: float
        """
        if number is None:
            raise ValueError("Invalid value for `number`, must not be `None`")

        self._number = number

    @property
    def resolution(self):
        """Gets the resolution of this AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner.


        :return: The resolution of this AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner.
        :rtype: str
        """
        return self._resolution

    @resolution.setter
    def resolution(self, resolution):
        """Sets the resolution of this AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner.


        :param resolution: The resolution of this AddItemsToCollectionRequestShowsInnerSeasonsInnerEpisodesInner.
        :type resolution: str
        """

        self._resolution = resolution
