# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.remove_items_from_collection_request_shows_inner_seasons_inner_episodes_inner import RemoveItemsFromCollectionRequestShowsInnerSeasonsInnerEpisodesInner
from openapi_server import util


class RemoveItemsFromCollectionRequestShowsInnerSeasonsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, episodes: List[RemoveItemsFromCollectionRequestShowsInnerSeasonsInnerEpisodesInner]=None, number: float=None):
        """RemoveItemsFromCollectionRequestShowsInnerSeasonsInner - a model defined in OpenAPI

        :param episodes: The episodes of this RemoveItemsFromCollectionRequestShowsInnerSeasonsInner.
        :param number: The number of this RemoveItemsFromCollectionRequestShowsInnerSeasonsInner.
        """
        self.openapi_types = {
            'episodes': List[RemoveItemsFromCollectionRequestShowsInnerSeasonsInnerEpisodesInner],
            'number': float
        }

        self.attribute_map = {
            'episodes': 'episodes',
            'number': 'number'
        }

        self._episodes = episodes
        self._number = number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RemoveItemsFromCollectionRequestShowsInnerSeasonsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Remove_items_from_collection_request_shows_inner_seasons_inner of this RemoveItemsFromCollectionRequestShowsInnerSeasonsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def episodes(self):
        """Gets the episodes of this RemoveItemsFromCollectionRequestShowsInnerSeasonsInner.


        :return: The episodes of this RemoveItemsFromCollectionRequestShowsInnerSeasonsInner.
        :rtype: List[RemoveItemsFromCollectionRequestShowsInnerSeasonsInnerEpisodesInner]
        """
        return self._episodes

    @episodes.setter
    def episodes(self, episodes):
        """Sets the episodes of this RemoveItemsFromCollectionRequestShowsInnerSeasonsInner.


        :param episodes: The episodes of this RemoveItemsFromCollectionRequestShowsInnerSeasonsInner.
        :type episodes: List[RemoveItemsFromCollectionRequestShowsInnerSeasonsInnerEpisodesInner]
        """

        self._episodes = episodes

    @property
    def number(self):
        """Gets the number of this RemoveItemsFromCollectionRequestShowsInnerSeasonsInner.


        :return: The number of this RemoveItemsFromCollectionRequestShowsInnerSeasonsInner.
        :rtype: float
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this RemoveItemsFromCollectionRequestShowsInnerSeasonsInner.


        :param number: The number of this RemoveItemsFromCollectionRequestShowsInnerSeasonsInner.
        :type number: float
        """
        if number is None:
            raise ValueError("Invalid value for `number`, must not be `None`")

        self._number = number
