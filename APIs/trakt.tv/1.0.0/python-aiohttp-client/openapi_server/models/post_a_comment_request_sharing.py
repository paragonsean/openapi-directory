# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PostACommentRequestSharing(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, medium: bool=None, tumblr: bool=None, twitter: bool=None):
        """PostACommentRequestSharing - a model defined in OpenAPI

        :param medium: The medium of this PostACommentRequestSharing.
        :param tumblr: The tumblr of this PostACommentRequestSharing.
        :param twitter: The twitter of this PostACommentRequestSharing.
        """
        self.openapi_types = {
            'medium': bool,
            'tumblr': bool,
            'twitter': bool
        }

        self.attribute_map = {
            'medium': 'medium',
            'tumblr': 'tumblr',
            'twitter': 'twitter'
        }

        self._medium = medium
        self._tumblr = tumblr
        self._twitter = twitter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PostACommentRequestSharing':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Post_a_comment_request_sharing of this PostACommentRequestSharing.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def medium(self):
        """Gets the medium of this PostACommentRequestSharing.


        :return: The medium of this PostACommentRequestSharing.
        :rtype: bool
        """
        return self._medium

    @medium.setter
    def medium(self, medium):
        """Sets the medium of this PostACommentRequestSharing.


        :param medium: The medium of this PostACommentRequestSharing.
        :type medium: bool
        """

        self._medium = medium

    @property
    def tumblr(self):
        """Gets the tumblr of this PostACommentRequestSharing.


        :return: The tumblr of this PostACommentRequestSharing.
        :rtype: bool
        """
        return self._tumblr

    @tumblr.setter
    def tumblr(self, tumblr):
        """Sets the tumblr of this PostACommentRequestSharing.


        :param tumblr: The tumblr of this PostACommentRequestSharing.
        :type tumblr: bool
        """

        self._tumblr = tumblr

    @property
    def twitter(self):
        """Gets the twitter of this PostACommentRequestSharing.


        :return: The twitter of this PostACommentRequestSharing.
        :rtype: bool
        """
        return self._twitter

    @twitter.setter
    def twitter(self, twitter):
        """Sets the twitter of this PostACommentRequestSharing.


        :param twitter: The twitter of this PostACommentRequestSharing.
        :type twitter: bool
        """

        self._twitter = twitter
