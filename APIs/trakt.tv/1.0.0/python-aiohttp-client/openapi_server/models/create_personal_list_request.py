# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreatePersonalListRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_comments: bool=None, description: str=None, display_numbers: bool=None, name: str=None, privacy: str=None, sort_by: str=None, sort_how: str=None):
        """CreatePersonalListRequest - a model defined in OpenAPI

        :param allow_comments: The allow_comments of this CreatePersonalListRequest.
        :param description: The description of this CreatePersonalListRequest.
        :param display_numbers: The display_numbers of this CreatePersonalListRequest.
        :param name: The name of this CreatePersonalListRequest.
        :param privacy: The privacy of this CreatePersonalListRequest.
        :param sort_by: The sort_by of this CreatePersonalListRequest.
        :param sort_how: The sort_how of this CreatePersonalListRequest.
        """
        self.openapi_types = {
            'allow_comments': bool,
            'description': str,
            'display_numbers': bool,
            'name': str,
            'privacy': str,
            'sort_by': str,
            'sort_how': str
        }

        self.attribute_map = {
            'allow_comments': 'allow_comments',
            'description': 'description',
            'display_numbers': 'display_numbers',
            'name': 'name',
            'privacy': 'privacy',
            'sort_by': 'sort_by',
            'sort_how': 'sort_how'
        }

        self._allow_comments = allow_comments
        self._description = description
        self._display_numbers = display_numbers
        self._name = name
        self._privacy = privacy
        self._sort_by = sort_by
        self._sort_how = sort_how

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreatePersonalListRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Create_personal_list_request of this CreatePersonalListRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_comments(self):
        """Gets the allow_comments of this CreatePersonalListRequest.


        :return: The allow_comments of this CreatePersonalListRequest.
        :rtype: bool
        """
        return self._allow_comments

    @allow_comments.setter
    def allow_comments(self, allow_comments):
        """Sets the allow_comments of this CreatePersonalListRequest.


        :param allow_comments: The allow_comments of this CreatePersonalListRequest.
        :type allow_comments: bool
        """

        self._allow_comments = allow_comments

    @property
    def description(self):
        """Gets the description of this CreatePersonalListRequest.


        :return: The description of this CreatePersonalListRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreatePersonalListRequest.


        :param description: The description of this CreatePersonalListRequest.
        :type description: str
        """

        self._description = description

    @property
    def display_numbers(self):
        """Gets the display_numbers of this CreatePersonalListRequest.


        :return: The display_numbers of this CreatePersonalListRequest.
        :rtype: bool
        """
        return self._display_numbers

    @display_numbers.setter
    def display_numbers(self, display_numbers):
        """Sets the display_numbers of this CreatePersonalListRequest.


        :param display_numbers: The display_numbers of this CreatePersonalListRequest.
        :type display_numbers: bool
        """

        self._display_numbers = display_numbers

    @property
    def name(self):
        """Gets the name of this CreatePersonalListRequest.


        :return: The name of this CreatePersonalListRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreatePersonalListRequest.


        :param name: The name of this CreatePersonalListRequest.
        :type name: str
        """

        self._name = name

    @property
    def privacy(self):
        """Gets the privacy of this CreatePersonalListRequest.


        :return: The privacy of this CreatePersonalListRequest.
        :rtype: str
        """
        return self._privacy

    @privacy.setter
    def privacy(self, privacy):
        """Sets the privacy of this CreatePersonalListRequest.


        :param privacy: The privacy of this CreatePersonalListRequest.
        :type privacy: str
        """

        self._privacy = privacy

    @property
    def sort_by(self):
        """Gets the sort_by of this CreatePersonalListRequest.


        :return: The sort_by of this CreatePersonalListRequest.
        :rtype: str
        """
        return self._sort_by

    @sort_by.setter
    def sort_by(self, sort_by):
        """Sets the sort_by of this CreatePersonalListRequest.


        :param sort_by: The sort_by of this CreatePersonalListRequest.
        :type sort_by: str
        """

        self._sort_by = sort_by

    @property
    def sort_how(self):
        """Gets the sort_how of this CreatePersonalListRequest.


        :return: The sort_how of this CreatePersonalListRequest.
        :rtype: str
        """
        return self._sort_how

    @sort_how.setter
    def sort_how(self, sort_how):
        """Sets the sort_how of this CreatePersonalListRequest.


        :param sort_how: The sort_how of this CreatePersonalListRequest.
        :type sort_how: str
        """

        self._sort_how = sort_how
