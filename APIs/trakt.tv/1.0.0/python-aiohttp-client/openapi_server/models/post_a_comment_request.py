# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.check_into_an_item_request_movie import CheckIntoAnItemRequestMovie
from openapi_server.models.post_a_comment_request_sharing import PostACommentRequestSharing
from openapi_server import util


class PostACommentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comment: str=None, movie: CheckIntoAnItemRequestMovie=None, sharing: PostACommentRequestSharing=None, spoiler: bool=None):
        """PostACommentRequest - a model defined in OpenAPI

        :param comment: The comment of this PostACommentRequest.
        :param movie: The movie of this PostACommentRequest.
        :param sharing: The sharing of this PostACommentRequest.
        :param spoiler: The spoiler of this PostACommentRequest.
        """
        self.openapi_types = {
            'comment': str,
            'movie': CheckIntoAnItemRequestMovie,
            'sharing': PostACommentRequestSharing,
            'spoiler': bool
        }

        self.attribute_map = {
            'comment': 'comment',
            'movie': 'movie',
            'sharing': 'sharing',
            'spoiler': 'spoiler'
        }

        self._comment = comment
        self._movie = movie
        self._sharing = sharing
        self._spoiler = spoiler

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PostACommentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Post_a_comment_request of this PostACommentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comment(self):
        """Gets the comment of this PostACommentRequest.


        :return: The comment of this PostACommentRequest.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this PostACommentRequest.


        :param comment: The comment of this PostACommentRequest.
        :type comment: str
        """

        self._comment = comment

    @property
    def movie(self):
        """Gets the movie of this PostACommentRequest.


        :return: The movie of this PostACommentRequest.
        :rtype: CheckIntoAnItemRequestMovie
        """
        return self._movie

    @movie.setter
    def movie(self, movie):
        """Sets the movie of this PostACommentRequest.


        :param movie: The movie of this PostACommentRequest.
        :type movie: CheckIntoAnItemRequestMovie
        """

        self._movie = movie

    @property
    def sharing(self):
        """Gets the sharing of this PostACommentRequest.


        :return: The sharing of this PostACommentRequest.
        :rtype: PostACommentRequestSharing
        """
        return self._sharing

    @sharing.setter
    def sharing(self, sharing):
        """Sets the sharing of this PostACommentRequest.


        :param sharing: The sharing of this PostACommentRequest.
        :type sharing: PostACommentRequestSharing
        """

        self._sharing = sharing

    @property
    def spoiler(self):
        """Gets the spoiler of this PostACommentRequest.


        :return: The spoiler of this PostACommentRequest.
        :rtype: bool
        """
        return self._spoiler

    @spoiler.setter
    def spoiler(self, spoiler):
        """Sets the spoiler of this PostACommentRequest.


        :param spoiler: The spoiler of this PostACommentRequest.
        :type spoiler: bool
        """

        self._spoiler = spoiler
