/**
 * Bulk WHOIS API
 * Domain API (WHOIS, Check, Batch)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Batch from './Batch';

/**
 * The ArrayOfBatch model module.
 * @module model/ArrayOfBatch
 * @version 2.0
 */
class ArrayOfBatch {
    /**
     * Constructs a new <code>ArrayOfBatch</code>.
     * @alias module:model/ArrayOfBatch
     */
    constructor() { 
        
        ArrayOfBatch.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ArrayOfBatch</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ArrayOfBatch} obj Optional instance to populate.
     * @return {module:model/ArrayOfBatch} The populated <code>ArrayOfBatch</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ArrayOfBatch();

            if (data.hasOwnProperty('batches')) {
                obj['batches'] = ApiClient.convertToType(data['batches'], [Batch]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ArrayOfBatch</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ArrayOfBatch</code>.
     */
    static validateJSON(data) {
        if (data['batches']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['batches'])) {
                throw new Error("Expected the field `batches` to be an array in the JSON data but got " + data['batches']);
            }
            // validate the optional field `batches` (array)
            for (const item of data['batches']) {
                Batch.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/Batch>} batches
 */
ArrayOfBatch.prototype['batches'] = undefined;






export default ArrayOfBatch;

