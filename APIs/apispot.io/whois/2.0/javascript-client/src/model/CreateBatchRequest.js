/**
 * Bulk WHOIS API
 * Domain API (WHOIS, Check, Batch)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateBatchRequestOptions from './CreateBatchRequestOptions';

/**
 * The CreateBatchRequest model module.
 * @module model/CreateBatchRequest
 * @version 2.0
 */
class CreateBatchRequest {
    /**
     * Constructs a new <code>CreateBatchRequest</code>.
     * @alias module:model/CreateBatchRequest
     * @param domains {Array.<String>} 
     * @param operation {module:model/CreateBatchRequest.OperationEnum} 
     */
    constructor(domains, operation) { 
        
        CreateBatchRequest.initialize(this, domains, operation);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, domains, operation) { 
        obj['domains'] = domains;
        obj['operation'] = operation;
    }

    /**
     * Constructs a <code>CreateBatchRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateBatchRequest} obj Optional instance to populate.
     * @return {module:model/CreateBatchRequest} The populated <code>CreateBatchRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateBatchRequest();

            if (data.hasOwnProperty('domains')) {
                obj['domains'] = ApiClient.convertToType(data['domains'], ['String']);
            }
            if (data.hasOwnProperty('operation')) {
                obj['operation'] = ApiClient.convertToType(data['operation'], 'String');
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = CreateBatchRequestOptions.constructFromObject(data['options']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateBatchRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateBatchRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateBatchRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['domains'])) {
            throw new Error("Expected the field `domains` to be an array in the JSON data but got " + data['domains']);
        }
        // ensure the json data is a string
        if (data['operation'] && !(typeof data['operation'] === 'string' || data['operation'] instanceof String)) {
            throw new Error("Expected the field `operation` to be a primitive type in the JSON string but got " + data['operation']);
        }
        // validate the optional field `options`
        if (data['options']) { // data not null
          CreateBatchRequestOptions.validateJSON(data['options']);
        }

        return true;
    }


}

CreateBatchRequest.RequiredProperties = ["domains", "operation"];

/**
 * @member {Array.<String>} domains
 */
CreateBatchRequest.prototype['domains'] = undefined;

/**
 * @member {module:model/CreateBatchRequest.OperationEnum} operation
 */
CreateBatchRequest.prototype['operation'] = undefined;

/**
 * @member {module:model/CreateBatchRequestOptions} options
 */
CreateBatchRequest.prototype['options'] = undefined;





/**
 * Allowed values for the <code>operation</code> property.
 * @enum {String}
 * @readonly
 */
CreateBatchRequest['OperationEnum'] = {

    /**
     * value: "whois"
     * @const
     */
    "whois": "whois",

    /**
     * value: "check"
     * @const
     */
    "check": "check"
};



export default CreateBatchRequest;

