/**
 * Bulk WHOIS API
 * Domain API (WHOIS, Check, Batch)
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIArrayOfBatch.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIArrayOfBatch::OAIArrayOfBatch(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIArrayOfBatch::OAIArrayOfBatch() {
    this->initializeModel();
}

OAIArrayOfBatch::~OAIArrayOfBatch() {}

void OAIArrayOfBatch::initializeModel() {

    m_batches_isSet = false;
    m_batches_isValid = false;
}

void OAIArrayOfBatch::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIArrayOfBatch::fromJsonObject(QJsonObject json) {

    m_batches_isValid = ::OpenAPI::fromJsonValue(m_batches, json[QString("batches")]);
    m_batches_isSet = !json[QString("batches")].isNull() && m_batches_isValid;
}

QString OAIArrayOfBatch::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIArrayOfBatch::asJsonObject() const {
    QJsonObject obj;
    if (m_batches.size() > 0) {
        obj.insert(QString("batches"), ::OpenAPI::toJsonValue(m_batches));
    }
    return obj;
}

QList<OAIBatch> OAIArrayOfBatch::getBatches() const {
    return m_batches;
}
void OAIArrayOfBatch::setBatches(const QList<OAIBatch> &batches) {
    m_batches = batches;
    m_batches_isSet = true;
}

bool OAIArrayOfBatch::is_batches_Set() const{
    return m_batches_isSet;
}

bool OAIArrayOfBatch::is_batches_Valid() const{
    return m_batches_isValid;
}

bool OAIArrayOfBatch::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_batches.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIArrayOfBatch::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
