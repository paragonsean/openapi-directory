/**
 * Bulk WHOIS API
 * Domain API (WHOIS, Check, Batch)
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateBatch_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateBatch_request::OAICreateBatch_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateBatch_request::OAICreateBatch_request() {
    this->initializeModel();
}

OAICreateBatch_request::~OAICreateBatch_request() {}

void OAICreateBatch_request::initializeModel() {

    m_domains_isSet = false;
    m_domains_isValid = false;

    m_operation_isSet = false;
    m_operation_isValid = false;

    m_options_isSet = false;
    m_options_isValid = false;
}

void OAICreateBatch_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateBatch_request::fromJsonObject(QJsonObject json) {

    m_domains_isValid = ::OpenAPI::fromJsonValue(m_domains, json[QString("domains")]);
    m_domains_isSet = !json[QString("domains")].isNull() && m_domains_isValid;

    m_operation_isValid = ::OpenAPI::fromJsonValue(m_operation, json[QString("operation")]);
    m_operation_isSet = !json[QString("operation")].isNull() && m_operation_isValid;

    m_options_isValid = ::OpenAPI::fromJsonValue(m_options, json[QString("options")]);
    m_options_isSet = !json[QString("options")].isNull() && m_options_isValid;
}

QString OAICreateBatch_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateBatch_request::asJsonObject() const {
    QJsonObject obj;
    if (m_domains.size() > 0) {
        obj.insert(QString("domains"), ::OpenAPI::toJsonValue(m_domains));
    }
    if (m_operation_isSet) {
        obj.insert(QString("operation"), ::OpenAPI::toJsonValue(m_operation));
    }
    if (m_options.isSet()) {
        obj.insert(QString("options"), ::OpenAPI::toJsonValue(m_options));
    }
    return obj;
}

QList<QString> OAICreateBatch_request::getDomains() const {
    return m_domains;
}
void OAICreateBatch_request::setDomains(const QList<QString> &domains) {
    m_domains = domains;
    m_domains_isSet = true;
}

bool OAICreateBatch_request::is_domains_Set() const{
    return m_domains_isSet;
}

bool OAICreateBatch_request::is_domains_Valid() const{
    return m_domains_isValid;
}

QString OAICreateBatch_request::getOperation() const {
    return m_operation;
}
void OAICreateBatch_request::setOperation(const QString &operation) {
    m_operation = operation;
    m_operation_isSet = true;
}

bool OAICreateBatch_request::is_operation_Set() const{
    return m_operation_isSet;
}

bool OAICreateBatch_request::is_operation_Valid() const{
    return m_operation_isValid;
}

OAICreateBatch_request_options OAICreateBatch_request::getOptions() const {
    return m_options;
}
void OAICreateBatch_request::setOptions(const OAICreateBatch_request_options &options) {
    m_options = options;
    m_options_isSet = true;
}

bool OAICreateBatch_request::is_options_Set() const{
    return m_options_isSet;
}

bool OAICreateBatch_request::is_options_Valid() const{
    return m_options_isValid;
}

bool OAICreateBatch_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_domains.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_options.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateBatch_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_domains_isValid && m_operation_isValid && true;
}

} // namespace OpenAPI
