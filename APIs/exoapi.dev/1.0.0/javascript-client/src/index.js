/**
 * ExoAPI
 * Universal API for developers - Geocoding, HTML rendering, barcode generation & more
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@exoapi.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import BarcodeGeneratorPost400Response from './model/BarcodeGeneratorPost400Response';
import BarcodeGeneratorPostRequest from './model/BarcodeGeneratorPostRequest';
import HtmlRendererPostRequest from './model/HtmlRendererPostRequest';
import ReverseGeocodingGet200Response from './model/ReverseGeocodingGet200Response';
import UnitConverterGet200Response from './model/UnitConverterGet200Response';
import BarcodeGeneratorApi from './api/BarcodeGeneratorApi';
import HTMLRendererApi from './api/HTMLRendererApi';
import ReverseGeocodingApi from './api/ReverseGeocodingApi';
import UnitConverterApi from './api/UnitConverterApi';


/**
* Universal API for developers - Geocoding, HTML rendering, barcode generation &amp; more.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ExoApi = require('index'); // See note below*.
* var xxxSvc = new ExoApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ExoApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ExoApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ExoApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The BarcodeGeneratorPost400Response model constructor.
     * @property {module:model/BarcodeGeneratorPost400Response}
     */
    BarcodeGeneratorPost400Response,

    /**
     * The BarcodeGeneratorPostRequest model constructor.
     * @property {module:model/BarcodeGeneratorPostRequest}
     */
    BarcodeGeneratorPostRequest,

    /**
     * The HtmlRendererPostRequest model constructor.
     * @property {module:model/HtmlRendererPostRequest}
     */
    HtmlRendererPostRequest,

    /**
     * The ReverseGeocodingGet200Response model constructor.
     * @property {module:model/ReverseGeocodingGet200Response}
     */
    ReverseGeocodingGet200Response,

    /**
     * The UnitConverterGet200Response model constructor.
     * @property {module:model/UnitConverterGet200Response}
     */
    UnitConverterGet200Response,

    /**
    * The BarcodeGeneratorApi service constructor.
    * @property {module:api/BarcodeGeneratorApi}
    */
    BarcodeGeneratorApi,

    /**
    * The HTMLRendererApi service constructor.
    * @property {module:api/HTMLRendererApi}
    */
    HTMLRendererApi,

    /**
    * The ReverseGeocodingApi service constructor.
    * @property {module:api/ReverseGeocodingApi}
    */
    ReverseGeocodingApi,

    /**
    * The UnitConverterApi service constructor.
    * @property {module:api/UnitConverterApi}
    */
    UnitConverterApi
};
