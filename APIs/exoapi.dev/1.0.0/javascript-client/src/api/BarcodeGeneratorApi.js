/**
 * ExoAPI
 * Universal API for developers - Geocoding, HTML rendering, barcode generation & more
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@exoapi.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BarcodeGeneratorPost400Response from '../model/BarcodeGeneratorPost400Response';
import BarcodeGeneratorPostRequest from '../model/BarcodeGeneratorPostRequest';

/**
* BarcodeGenerator service.
* @module api/BarcodeGeneratorApi
* @version 1.0.0
*/
export default class BarcodeGeneratorApi {

    /**
    * Constructs a new BarcodeGeneratorApi. 
    * @alias module:api/BarcodeGeneratorApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the barcodeGeneratorPost operation.
     * @callback module:api/BarcodeGeneratorApi~barcodeGeneratorPostCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate high quality QR code & barcode images in a matter of seconds
     * @param {module:model/BarcodeGeneratorPostRequest} barcodeGeneratorPostRequest 
     * @param {module:api/BarcodeGeneratorApi~barcodeGeneratorPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    barcodeGeneratorPost(barcodeGeneratorPostRequest, callback) {
      let postBody = barcodeGeneratorPostRequest;
      // verify the required parameter 'barcodeGeneratorPostRequest' is set
      if (barcodeGeneratorPostRequest === undefined || barcodeGeneratorPostRequest === null) {
        throw new Error("Missing the required parameter 'barcodeGeneratorPostRequest' when calling barcodeGeneratorPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['image/png', 'image/svg+xml', 'application/json'];
      let returnType = File;
      return this.apiClient.callApi(
        '/barcode-generator', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
