/**
 * ExoAPI
 * Universal API for developers - Geocoding, HTML rendering, barcode generation & more
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@exoapi.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UnitConverterGet200Response model module.
 * @module model/UnitConverterGet200Response
 * @version 1.0.0
 */
class UnitConverterGet200Response {
    /**
     * Constructs a new <code>UnitConverterGet200Response</code>.
     * @alias module:model/UnitConverterGet200Response
     */
    constructor() { 
        
        UnitConverterGet200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UnitConverterGet200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UnitConverterGet200Response} obj Optional instance to populate.
     * @return {module:model/UnitConverterGet200Response} The populated <code>UnitConverterGet200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UnitConverterGet200Response();

            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'String');
            }
            if (data.hasOwnProperty('result')) {
                obj['result'] = ApiClient.convertToType(data['result'], 'Number');
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UnitConverterGet200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UnitConverterGet200Response</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['from'] && !(typeof data['from'] === 'string' || data['from'] instanceof String)) {
            throw new Error("Expected the field `from` to be a primitive type in the JSON string but got " + data['from']);
        }
        // ensure the json data is a string
        if (data['to'] && !(typeof data['to'] === 'string' || data['to'] instanceof String)) {
            throw new Error("Expected the field `to` to be a primitive type in the JSON string but got " + data['to']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Source unit
 * @member {module:model/UnitConverterGet200Response.FromEnum} from
 */
UnitConverterGet200Response.prototype['from'] = undefined;

/**
 * Result of the conversion
 * @member {Number} result
 */
UnitConverterGet200Response.prototype['result'] = undefined;

/**
 * Target unit
 * @member {module:model/UnitConverterGet200Response.ToEnum} to
 */
UnitConverterGet200Response.prototype['to'] = undefined;

/**
 * @member {module:model/UnitConverterGet200Response.TypeEnum} type
 */
UnitConverterGet200Response.prototype['type'] = undefined;

/**
 * Value to convert
 * @member {Number} value
 */
UnitConverterGet200Response.prototype['value'] = undefined;





/**
 * Allowed values for the <code>from</code> property.
 * @enum {String}
 * @readonly
 */
UnitConverterGet200Response['FromEnum'] = {

    /**
     * value: "m/s2"
     * @const
     */
    "m/s2": "m/s2",

    /**
     * value: "'"
     * @const
     */
    "QUOTE": "'",

    /**
     * value: "''"
     * @const
     */
    "&#39;&#39;": "''",

    /**
     * value: "deg"
     * @const
     */
    "deg": "deg",

    /**
     * value: "gon"
     * @const
     */
    "gon": "gon",

    /**
     * value: "rad"
     * @const
     */
    "rad": "rad",

    /**
     * value: "rad/s"
     * @const
     */
    "rad/s": "rad/s",

    /**
     * value: "[acr_us]"
     * @const
     */
    "[acr_us]": "[acr_us]",

    /**
     * value: "[sft_i]"
     * @const
     */
    "[sft_i]": "[sft_i]",

    /**
     * value: "[sin_i]"
     * @const
     */
    "[sin_i]": "[sin_i]",

    /**
     * value: "[smi_us]"
     * @const
     */
    "[smi_us]": "[smi_us]",

    /**
     * value: "[syd_i]"
     * @const
     */
    "[syd_i]": "[syd_i]",

    /**
     * value: "ar"
     * @const
     */
    "ar": "ar",

    /**
     * value: "cm2"
     * @const
     */
    "cm2": "cm2",

    /**
     * value: "har"
     * @const
     */
    "har": "har",

    /**
     * value: "km2"
     * @const
     */
    "km2": "km2",

    /**
     * value: "m2"
     * @const
     */
    "m2": "m2",

    /**
     * value: "mm2"
     * @const
     */
    "mm2": "mm2",

    /**
     * value: "AUD"
     * @const
     */
    "AUD": "AUD",

    /**
     * value: "BGN"
     * @const
     */
    "BGN": "BGN",

    /**
     * value: "BRL"
     * @const
     */
    "BRL": "BRL",

    /**
     * value: "CAD"
     * @const
     */
    "CAD": "CAD",

    /**
     * value: "CHF"
     * @const
     */
    "CHF": "CHF",

    /**
     * value: "CNY"
     * @const
     */
    "CNY": "CNY",

    /**
     * value: "CZK"
     * @const
     */
    "CZK": "CZK",

    /**
     * value: "DKK"
     * @const
     */
    "DKK": "DKK",

    /**
     * value: "EUR"
     * @const
     */
    "EUR": "EUR",

    /**
     * value: "GBP"
     * @const
     */
    "GBP": "GBP",

    /**
     * value: "HKD"
     * @const
     */
    "HKD": "HKD",

    /**
     * value: "HUF"
     * @const
     */
    "HUF": "HUF",

    /**
     * value: "IDR"
     * @const
     */
    "IDR": "IDR",

    /**
     * value: "ILS"
     * @const
     */
    "ILS": "ILS",

    /**
     * value: "INR"
     * @const
     */
    "INR": "INR",

    /**
     * value: "ISK"
     * @const
     */
    "ISK": "ISK",

    /**
     * value: "JPY"
     * @const
     */
    "JPY": "JPY",

    /**
     * value: "KRW"
     * @const
     */
    "KRW": "KRW",

    /**
     * value: "MXN"
     * @const
     */
    "MXN": "MXN",

    /**
     * value: "MYR"
     * @const
     */
    "MYR": "MYR",

    /**
     * value: "NOK"
     * @const
     */
    "NOK": "NOK",

    /**
     * value: "NZD"
     * @const
     */
    "NZD": "NZD",

    /**
     * value: "PHP"
     * @const
     */
    "PHP": "PHP",

    /**
     * value: "PLN"
     * @const
     */
    "PLN": "PLN",

    /**
     * value: "RON"
     * @const
     */
    "RON": "RON",

    /**
     * value: "SEK"
     * @const
     */
    "SEK": "SEK",

    /**
     * value: "SGD"
     * @const
     */
    "SGD": "SGD",

    /**
     * value: "THB"
     * @const
     */
    "THB": "THB",

    /**
     * value: "TRY"
     * @const
     */
    "TRY": "TRY",

    /**
     * value: "USD"
     * @const
     */
    "USD": "USD",

    /**
     * value: "ZAR"
     * @const
     */
    "ZAR": "ZAR",

    /**
     * value: "F"
     * @const
     */
    "F": "F",

    /**
     * value: "C"
     * @const
     */
    "C": "C",

    /**
     * value: "S"
     * @const
     */
    "S": "S",

    /**
     * value: "A"
     * @const
     */
    "A": "A",

    /**
     * value: "V"
     * @const
     */
    "V": "V",

    /**
     * value: "Ohm"
     * @const
     */
    "Ohm": "Ohm",

    /**
     * value: "[Btu_IT]"
     * @const
     */
    "[Btu_IT]": "[Btu_IT]",

    /**
     * value: "J"
     * @const
     */
    "J": "J",

    /**
     * value: "kW.h"
     * @const
     */
    "kW.h": "kW.h",

    /**
     * value: "MJ"
     * @const
     */
    "MJ": "MJ",

    /**
     * value: "kW.h/100km"
     * @const
     */
    "kW.h/100km": "kW.h/100km",

    /**
     * value: "m/J"
     * @const
     */
    "m/J": "m/J",

    /**
     * value: "W.h/km"
     * @const
     */
    "W.h/km": "W.h/km",

    /**
     * value: "N"
     * @const
     */
    "N": "N",

    /**
     * value: "%"
     * @const
     */
    "PERCENT": "%",

    /**
     * value: "bpm"
     * @const
     */
    "bpm": "bpm",

    /**
     * value: "Hz"
     * @const
     */
    "Hz": "Hz",

    /**
     * value: "rpm"
     * @const
     */
    "rpm": "rpm",

    /**
     * value: "[mi_i]/[gal_br]"
     * @const
     */
    "[mi_i]/[gal_br]": "[mi_i]/[gal_br]",

    /**
     * value: "L/100km"
     * @const
     */
    "L/100km": "L/100km",

    /**
     * value: "m/m3"
     * @const
     */
    "m/m3": "m/m3",

    /**
     * value: "lx"
     * @const
     */
    "lx": "lx",

    /**
     * value: "H"
     * @const
     */
    "H": "H",

    /**
     * value: "[ft_i]"
     * @const
     */
    "[ft_i]": "[ft_i]",

    /**
     * value: "[in_i]"
     * @const
     */
    "[in_i]": "[in_i]",

    /**
     * value: "[mi_i]"
     * @const
     */
    "[mi_i]": "[mi_i]",

    /**
     * value: "[nmi_i]"
     * @const
     */
    "[nmi_i]": "[nmi_i]",

    /**
     * value: "[yd_i]"
     * @const
     */
    "[yd_i]": "[yd_i]",

    /**
     * value: "cm"
     * @const
     */
    "cm": "cm",

    /**
     * value: "dm"
     * @const
     */
    "dm": "dm",

    /**
     * value: "km"
     * @const
     */
    "km": "km",

    /**
     * value: "m"
     * @const
     */
    "m": "m",

    /**
     * value: "mm"
     * @const
     */
    "mm": "mm",

    /**
     * value: "g/km"
     * @const
     */
    "g/km": "g/km",

    /**
     * value: "kg/m"
     * @const
     */
    "kg/m": "kg/m",

    /**
     * value: "lm"
     * @const
     */
    "lm": "lm",

    /**
     * value: "Wb"
     * @const
     */
    "Wb": "Wb",

    /**
     * value: "T"
     * @const
     */
    "T": "T",

    /**
     * value: "[lb_av]"
     * @const
     */
    "[lb_av]": "[lb_av]",

    /**
     * value: "g"
     * @const
     */
    "g": "g",

    /**
     * value: "kg"
     * @const
     */
    "kg": "kg",

    /**
     * value: "t"
     * @const
     */
    "t": "t",

    /**
     * value: "[HP_e]"
     * @const
     */
    "[HP_e]": "[HP_e]",

    /**
     * value: "[HP_m]"
     * @const
     */
    "[HP_m]": "[HP_m]",

    /**
     * value: "[HP_s]"
     * @const
     */
    "[HP_s]": "[HP_s]",

    /**
     * value: "[HP]"
     * @const
     */
    "[HP]": "[HP]",

    /**
     * value: "kW"
     * @const
     */
    "kW": "kW",

    /**
     * value: "W"
     * @const
     */
    "W": "W",

    /**
     * value: "Pa"
     * @const
     */
    "Pa": "Pa",

    /**
     * value: "Bq"
     * @const
     */
    "Bq": "Bq",

    /**
     * value: "[kn_i]"
     * @const
     */
    "[kn_i]": "[kn_i]",

    /**
     * value: "km/h"
     * @const
     */
    "km/h": "km/h",

    /**
     * value: "m/s"
     * @const
     */
    "m/s": "m/s",

    /**
     * value: "[degF]"
     * @const
     */
    "[degF]": "[degF]",

    /**
     * value: "Cel"
     * @const
     */
    "Cel": "Cel",

    /**
     * value: "K"
     * @const
     */
    "K": "K",

    /**
     * value: "a"
     * @const
     */
    "a": "a",

    /**
     * value: "d"
     * @const
     */
    "d": "d",

    /**
     * value: "h"
     * @const
     */
    "h": "h",

    /**
     * value: "min"
     * @const
     */
    "min": "min",

    /**
     * value: "mo"
     * @const
     */
    "mo": "mo",

    /**
     * value: "s"
     * @const
     */
    "s": "s",

    /**
     * value: "wk"
     * @const
     */
    "wk": "wk",

    /**
     * value: "N.m"
     * @const
     */
    "N.m": "N.m",

    /**
     * value: "[gal_br]"
     * @const
     */
    "[gal_br]": "[gal_br]",

    /**
     * value: "[pk_br]"
     * @const
     */
    "[pk_br]": "[pk_br]",

    /**
     * value: "L"
     * @const
     */
    "L": "L",

    /**
     * value: "m3"
     * @const
     */
    "m3": "m3"
};


/**
 * Allowed values for the <code>to</code> property.
 * @enum {String}
 * @readonly
 */
UnitConverterGet200Response['ToEnum'] = {

    /**
     * value: "m/s2"
     * @const
     */
    "m/s2": "m/s2",

    /**
     * value: "'"
     * @const
     */
    "QUOTE": "'",

    /**
     * value: "''"
     * @const
     */
    "&#39;&#39;": "''",

    /**
     * value: "deg"
     * @const
     */
    "deg": "deg",

    /**
     * value: "gon"
     * @const
     */
    "gon": "gon",

    /**
     * value: "rad"
     * @const
     */
    "rad": "rad",

    /**
     * value: "rad/s"
     * @const
     */
    "rad/s": "rad/s",

    /**
     * value: "[acr_us]"
     * @const
     */
    "[acr_us]": "[acr_us]",

    /**
     * value: "[sft_i]"
     * @const
     */
    "[sft_i]": "[sft_i]",

    /**
     * value: "[sin_i]"
     * @const
     */
    "[sin_i]": "[sin_i]",

    /**
     * value: "[smi_us]"
     * @const
     */
    "[smi_us]": "[smi_us]",

    /**
     * value: "[syd_i]"
     * @const
     */
    "[syd_i]": "[syd_i]",

    /**
     * value: "ar"
     * @const
     */
    "ar": "ar",

    /**
     * value: "cm2"
     * @const
     */
    "cm2": "cm2",

    /**
     * value: "har"
     * @const
     */
    "har": "har",

    /**
     * value: "km2"
     * @const
     */
    "km2": "km2",

    /**
     * value: "m2"
     * @const
     */
    "m2": "m2",

    /**
     * value: "mm2"
     * @const
     */
    "mm2": "mm2",

    /**
     * value: "AUD"
     * @const
     */
    "AUD": "AUD",

    /**
     * value: "BGN"
     * @const
     */
    "BGN": "BGN",

    /**
     * value: "BRL"
     * @const
     */
    "BRL": "BRL",

    /**
     * value: "CAD"
     * @const
     */
    "CAD": "CAD",

    /**
     * value: "CHF"
     * @const
     */
    "CHF": "CHF",

    /**
     * value: "CNY"
     * @const
     */
    "CNY": "CNY",

    /**
     * value: "CZK"
     * @const
     */
    "CZK": "CZK",

    /**
     * value: "DKK"
     * @const
     */
    "DKK": "DKK",

    /**
     * value: "EUR"
     * @const
     */
    "EUR": "EUR",

    /**
     * value: "GBP"
     * @const
     */
    "GBP": "GBP",

    /**
     * value: "HKD"
     * @const
     */
    "HKD": "HKD",

    /**
     * value: "HUF"
     * @const
     */
    "HUF": "HUF",

    /**
     * value: "IDR"
     * @const
     */
    "IDR": "IDR",

    /**
     * value: "ILS"
     * @const
     */
    "ILS": "ILS",

    /**
     * value: "INR"
     * @const
     */
    "INR": "INR",

    /**
     * value: "ISK"
     * @const
     */
    "ISK": "ISK",

    /**
     * value: "JPY"
     * @const
     */
    "JPY": "JPY",

    /**
     * value: "KRW"
     * @const
     */
    "KRW": "KRW",

    /**
     * value: "MXN"
     * @const
     */
    "MXN": "MXN",

    /**
     * value: "MYR"
     * @const
     */
    "MYR": "MYR",

    /**
     * value: "NOK"
     * @const
     */
    "NOK": "NOK",

    /**
     * value: "NZD"
     * @const
     */
    "NZD": "NZD",

    /**
     * value: "PHP"
     * @const
     */
    "PHP": "PHP",

    /**
     * value: "PLN"
     * @const
     */
    "PLN": "PLN",

    /**
     * value: "RON"
     * @const
     */
    "RON": "RON",

    /**
     * value: "SEK"
     * @const
     */
    "SEK": "SEK",

    /**
     * value: "SGD"
     * @const
     */
    "SGD": "SGD",

    /**
     * value: "THB"
     * @const
     */
    "THB": "THB",

    /**
     * value: "TRY"
     * @const
     */
    "TRY": "TRY",

    /**
     * value: "USD"
     * @const
     */
    "USD": "USD",

    /**
     * value: "ZAR"
     * @const
     */
    "ZAR": "ZAR",

    /**
     * value: "F"
     * @const
     */
    "F": "F",

    /**
     * value: "C"
     * @const
     */
    "C": "C",

    /**
     * value: "S"
     * @const
     */
    "S": "S",

    /**
     * value: "A"
     * @const
     */
    "A": "A",

    /**
     * value: "V"
     * @const
     */
    "V": "V",

    /**
     * value: "Ohm"
     * @const
     */
    "Ohm": "Ohm",

    /**
     * value: "[Btu_IT]"
     * @const
     */
    "[Btu_IT]": "[Btu_IT]",

    /**
     * value: "J"
     * @const
     */
    "J": "J",

    /**
     * value: "kW.h"
     * @const
     */
    "kW.h": "kW.h",

    /**
     * value: "MJ"
     * @const
     */
    "MJ": "MJ",

    /**
     * value: "kW.h/100km"
     * @const
     */
    "kW.h/100km": "kW.h/100km",

    /**
     * value: "m/J"
     * @const
     */
    "m/J": "m/J",

    /**
     * value: "W.h/km"
     * @const
     */
    "W.h/km": "W.h/km",

    /**
     * value: "N"
     * @const
     */
    "N": "N",

    /**
     * value: "%"
     * @const
     */
    "PERCENT": "%",

    /**
     * value: "bpm"
     * @const
     */
    "bpm": "bpm",

    /**
     * value: "Hz"
     * @const
     */
    "Hz": "Hz",

    /**
     * value: "rpm"
     * @const
     */
    "rpm": "rpm",

    /**
     * value: "[mi_i]/[gal_br]"
     * @const
     */
    "[mi_i]/[gal_br]": "[mi_i]/[gal_br]",

    /**
     * value: "L/100km"
     * @const
     */
    "L/100km": "L/100km",

    /**
     * value: "m/m3"
     * @const
     */
    "m/m3": "m/m3",

    /**
     * value: "lx"
     * @const
     */
    "lx": "lx",

    /**
     * value: "H"
     * @const
     */
    "H": "H",

    /**
     * value: "[ft_i]"
     * @const
     */
    "[ft_i]": "[ft_i]",

    /**
     * value: "[in_i]"
     * @const
     */
    "[in_i]": "[in_i]",

    /**
     * value: "[mi_i]"
     * @const
     */
    "[mi_i]": "[mi_i]",

    /**
     * value: "[nmi_i]"
     * @const
     */
    "[nmi_i]": "[nmi_i]",

    /**
     * value: "[yd_i]"
     * @const
     */
    "[yd_i]": "[yd_i]",

    /**
     * value: "cm"
     * @const
     */
    "cm": "cm",

    /**
     * value: "dm"
     * @const
     */
    "dm": "dm",

    /**
     * value: "km"
     * @const
     */
    "km": "km",

    /**
     * value: "m"
     * @const
     */
    "m": "m",

    /**
     * value: "mm"
     * @const
     */
    "mm": "mm",

    /**
     * value: "g/km"
     * @const
     */
    "g/km": "g/km",

    /**
     * value: "kg/m"
     * @const
     */
    "kg/m": "kg/m",

    /**
     * value: "lm"
     * @const
     */
    "lm": "lm",

    /**
     * value: "Wb"
     * @const
     */
    "Wb": "Wb",

    /**
     * value: "T"
     * @const
     */
    "T": "T",

    /**
     * value: "[lb_av]"
     * @const
     */
    "[lb_av]": "[lb_av]",

    /**
     * value: "g"
     * @const
     */
    "g": "g",

    /**
     * value: "kg"
     * @const
     */
    "kg": "kg",

    /**
     * value: "t"
     * @const
     */
    "t": "t",

    /**
     * value: "[HP_e]"
     * @const
     */
    "[HP_e]": "[HP_e]",

    /**
     * value: "[HP_m]"
     * @const
     */
    "[HP_m]": "[HP_m]",

    /**
     * value: "[HP_s]"
     * @const
     */
    "[HP_s]": "[HP_s]",

    /**
     * value: "[HP]"
     * @const
     */
    "[HP]": "[HP]",

    /**
     * value: "kW"
     * @const
     */
    "kW": "kW",

    /**
     * value: "W"
     * @const
     */
    "W": "W",

    /**
     * value: "Pa"
     * @const
     */
    "Pa": "Pa",

    /**
     * value: "Bq"
     * @const
     */
    "Bq": "Bq",

    /**
     * value: "[kn_i]"
     * @const
     */
    "[kn_i]": "[kn_i]",

    /**
     * value: "km/h"
     * @const
     */
    "km/h": "km/h",

    /**
     * value: "m/s"
     * @const
     */
    "m/s": "m/s",

    /**
     * value: "[degF]"
     * @const
     */
    "[degF]": "[degF]",

    /**
     * value: "Cel"
     * @const
     */
    "Cel": "Cel",

    /**
     * value: "K"
     * @const
     */
    "K": "K",

    /**
     * value: "a"
     * @const
     */
    "a": "a",

    /**
     * value: "d"
     * @const
     */
    "d": "d",

    /**
     * value: "h"
     * @const
     */
    "h": "h",

    /**
     * value: "min"
     * @const
     */
    "min": "min",

    /**
     * value: "mo"
     * @const
     */
    "mo": "mo",

    /**
     * value: "s"
     * @const
     */
    "s": "s",

    /**
     * value: "wk"
     * @const
     */
    "wk": "wk",

    /**
     * value: "N.m"
     * @const
     */
    "N.m": "N.m",

    /**
     * value: "[gal_br]"
     * @const
     */
    "[gal_br]": "[gal_br]",

    /**
     * value: "[pk_br]"
     * @const
     */
    "[pk_br]": "[pk_br]",

    /**
     * value: "L"
     * @const
     */
    "L": "L",

    /**
     * value: "m3"
     * @const
     */
    "m3": "m3"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
UnitConverterGet200Response['TypeEnum'] = {

    /**
     * value: "acceleration"
     * @const
     */
    "acceleration": "acceleration",

    /**
     * value: "angle"
     * @const
     */
    "angle": "angle",

    /**
     * value: "angularVelocity"
     * @const
     */
    "angularVelocity": "angularVelocity",

    /**
     * value: "area"
     * @const
     */
    "area": "area",

    /**
     * value: "currency"
     * @const
     */
    "currency": "currency",

    /**
     * value: "electricCapacitance"
     * @const
     */
    "electricCapacitance": "electricCapacitance",

    /**
     * value: "electricCharge"
     * @const
     */
    "electricCharge": "electricCharge",

    /**
     * value: "electricConductance"
     * @const
     */
    "electricConductance": "electricConductance",

    /**
     * value: "electricCurrent"
     * @const
     */
    "electricCurrent": "electricCurrent",

    /**
     * value: "electricPotential"
     * @const
     */
    "electricPotential": "electricPotential",

    /**
     * value: "electricResistance"
     * @const
     */
    "electricResistance": "electricResistance",

    /**
     * value: "energy"
     * @const
     */
    "energy": "energy",

    /**
     * value: "energyEfficiency"
     * @const
     */
    "energyEfficiency": "energyEfficiency",

    /**
     * value: "force"
     * @const
     */
    "force": "force",

    /**
     * value: "fraction"
     * @const
     */
    "fraction": "fraction",

    /**
     * value: "frequency"
     * @const
     */
    "frequency": "frequency",

    /**
     * value: "fuelEfficiency"
     * @const
     */
    "fuelEfficiency": "fuelEfficiency",

    /**
     * value: "illuminance"
     * @const
     */
    "illuminance": "illuminance",

    /**
     * value: "inductance"
     * @const
     */
    "inductance": "inductance",

    /**
     * value: "length"
     * @const
     */
    "length": "length",

    /**
     * value: "linearMassDensity"
     * @const
     */
    "linearMassDensity": "linearMassDensity",

    /**
     * value: "luminousFlux"
     * @const
     */
    "luminousFlux": "luminousFlux",

    /**
     * value: "magneticFlux"
     * @const
     */
    "magneticFlux": "magneticFlux",

    /**
     * value: "magneticFluxDensity"
     * @const
     */
    "magneticFluxDensity": "magneticFluxDensity",

    /**
     * value: "mass"
     * @const
     */
    "mass": "mass",

    /**
     * value: "power"
     * @const
     */
    "power": "power",

    /**
     * value: "pressure"
     * @const
     */
    "pressure": "pressure",

    /**
     * value: "radioactivity"
     * @const
     */
    "radioactivity": "radioactivity",

    /**
     * value: "speed"
     * @const
     */
    "speed": "speed",

    /**
     * value: "temperature"
     * @const
     */
    "temperature": "temperature",

    /**
     * value: "time"
     * @const
     */
    "time": "time",

    /**
     * value: "torque"
     * @const
     */
    "torque": "torque",

    /**
     * value: "volume"
     * @const
     */
    "volume": "volume"
};



export default UnitConverterGet200Response;

