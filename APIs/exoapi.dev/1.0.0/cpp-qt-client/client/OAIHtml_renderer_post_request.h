/**
 * ExoAPI
 * Universal API for developers - Geocoding, HTML rendering, barcode generation & more
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@exoapi.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHtml_renderer_post_request.h
 *
 * 
 */

#ifndef OAIHtml_renderer_post_request_H
#define OAIHtml_renderer_post_request_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHtml_renderer_post_request : public OAIObject {
public:
    OAIHtml_renderer_post_request();
    OAIHtml_renderer_post_request(QString json);
    ~OAIHtml_renderer_post_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCss() const;
    void setCss(const QString &css);
    bool is_css_Set() const;
    bool is_css_Valid() const;

    QString getFooter() const;
    void setFooter(const QString &footer);
    bool is_footer_Set() const;
    bool is_footer_Valid() const;

    QString getFormat() const;
    void setFormat(const QString &format);
    bool is_format_Set() const;
    bool is_format_Valid() const;

    QString getHeader() const;
    void setHeader(const QString &header);
    bool is_header_Set() const;
    bool is_header_Valid() const;

    QString getHtml() const;
    void setHtml(const QString &html);
    bool is_html_Set() const;
    bool is_html_Valid() const;

    qint32 getImageHeight() const;
    void setImageHeight(const qint32 &image_height);
    bool is_image_height_Set() const;
    bool is_image_height_Valid() const;

    qint32 getImageWidth() const;
    void setImageWidth(const qint32 &image_width);
    bool is_image_width_Set() const;
    bool is_image_width_Valid() const;

    bool isLandscape() const;
    void setLandscape(const bool &landscape);
    bool is_landscape_Set() const;
    bool is_landscape_Valid() const;

    QString getMargin() const;
    void setMargin(const QString &margin);
    bool is_margin_Set() const;
    bool is_margin_Valid() const;

    QString getMarginBottom() const;
    void setMarginBottom(const QString &margin_bottom);
    bool is_margin_bottom_Set() const;
    bool is_margin_bottom_Valid() const;

    QString getMarginLeft() const;
    void setMarginLeft(const QString &margin_left);
    bool is_margin_left_Set() const;
    bool is_margin_left_Valid() const;

    QString getMarginRight() const;
    void setMarginRight(const QString &margin_right);
    bool is_margin_right_Set() const;
    bool is_margin_right_Valid() const;

    QString getMarginTop() const;
    void setMarginTop(const QString &margin_top);
    bool is_margin_top_Set() const;
    bool is_margin_top_Valid() const;

    QString getPageHeight() const;
    void setPageHeight(const QString &page_height);
    bool is_page_height_Set() const;
    bool is_page_height_Valid() const;

    QString getPageSize() const;
    void setPageSize(const QString &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    QString getPageWidth() const;
    void setPageWidth(const QString &page_width);
    bool is_page_width_Set() const;
    bool is_page_width_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_css;
    bool m_css_isSet;
    bool m_css_isValid;

    QString m_footer;
    bool m_footer_isSet;
    bool m_footer_isValid;

    QString m_format;
    bool m_format_isSet;
    bool m_format_isValid;

    QString m_header;
    bool m_header_isSet;
    bool m_header_isValid;

    QString m_html;
    bool m_html_isSet;
    bool m_html_isValid;

    qint32 m_image_height;
    bool m_image_height_isSet;
    bool m_image_height_isValid;

    qint32 m_image_width;
    bool m_image_width_isSet;
    bool m_image_width_isValid;

    bool m_landscape;
    bool m_landscape_isSet;
    bool m_landscape_isValid;

    QString m_margin;
    bool m_margin_isSet;
    bool m_margin_isValid;

    QString m_margin_bottom;
    bool m_margin_bottom_isSet;
    bool m_margin_bottom_isValid;

    QString m_margin_left;
    bool m_margin_left_isSet;
    bool m_margin_left_isValid;

    QString m_margin_right;
    bool m_margin_right_isSet;
    bool m_margin_right_isValid;

    QString m_margin_top;
    bool m_margin_top_isSet;
    bool m_margin_top_isValid;

    QString m_page_height;
    bool m_page_height_isSet;
    bool m_page_height_isValid;

    QString m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;

    QString m_page_width;
    bool m_page_width_isSet;
    bool m_page_width_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHtml_renderer_post_request)

#endif // OAIHtml_renderer_post_request_H
