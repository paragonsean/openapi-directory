# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BarcodeGeneratorPost400Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, detail: str=None, status: str=None, title: str=None):
        """BarcodeGeneratorPost400Response - a model defined in OpenAPI

        :param detail: The detail of this BarcodeGeneratorPost400Response.
        :param status: The status of this BarcodeGeneratorPost400Response.
        :param title: The title of this BarcodeGeneratorPost400Response.
        """
        self.openapi_types = {
            'detail': str,
            'status': str,
            'title': str
        }

        self.attribute_map = {
            'detail': 'detail',
            'status': 'status',
            'title': 'title'
        }

        self._detail = detail
        self._status = status
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BarcodeGeneratorPost400Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The barcode_generator_post_400_response of this BarcodeGeneratorPost400Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def detail(self):
        """Gets the detail of this BarcodeGeneratorPost400Response.

        Error description

        :return: The detail of this BarcodeGeneratorPost400Response.
        :rtype: str
        """
        return self._detail

    @detail.setter
    def detail(self, detail):
        """Sets the detail of this BarcodeGeneratorPost400Response.

        Error description

        :param detail: The detail of this BarcodeGeneratorPost400Response.
        :type detail: str
        """

        self._detail = detail

    @property
    def status(self):
        """Gets the status of this BarcodeGeneratorPost400Response.

        Status code

        :return: The status of this BarcodeGeneratorPost400Response.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this BarcodeGeneratorPost400Response.

        Status code

        :param status: The status of this BarcodeGeneratorPost400Response.
        :type status: str
        """

        self._status = status

    @property
    def title(self):
        """Gets the title of this BarcodeGeneratorPost400Response.

        Error type

        :return: The title of this BarcodeGeneratorPost400Response.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this BarcodeGeneratorPost400Response.

        Error type

        :param title: The title of this BarcodeGeneratorPost400Response.
        :type title: str
        """

        self._title = title
