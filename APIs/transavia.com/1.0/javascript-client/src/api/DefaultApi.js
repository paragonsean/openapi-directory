/**
 * Airports API v2
 * Returns all airports
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AirportDetailsDto from '../model/AirportDetailsDto';
import AirportDto from '../model/AirportDto';
import BadRequestResponse from '../model/BadRequestResponse';
import InternalServerErrorResponse from '../model/InternalServerErrorResponse';
import NearestAirportDto from '../model/NearestAirportDto';

/**
* Default service.
* @module api/DefaultApi
* @version 1.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the call58d8bcb7a9e6240e200cff24 operation.
     * @callback module:api/DefaultApi~call58d8bcb7a9e6240e200cff24Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/AirportDto>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * All airports
     * Retrieve all airports.
     * @param {module:api/DefaultApi~call58d8bcb7a9e6240e200cff24Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/AirportDto>}
     */
    call58d8bcb7a9e6240e200cff24(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKeyQuery', 'apiKeyHeader'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [AirportDto];
      return this.apiClient.callApi(
        '/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the call58d8bcb7a9e6240e200cff25 operation.
     * @callback module:api/DefaultApi~call58d8bcb7a9e6240e200cff25Callback
     * @param {String} error Error message, if any.
     * @param {module:model/AirportDetailsDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Airport by id.
     * Retrieve airport by id.
     * @param {String} id Airport code (3-character IATA code).
     * @param {module:api/DefaultApi~call58d8bcb7a9e6240e200cff25Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AirportDetailsDto}
     */
    call58d8bcb7a9e6240e200cff25(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling call58d8bcb7a9e6240e200cff25");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKeyQuery', 'apiKeyHeader'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = AirportDetailsDto;
      return this.apiClient.callApi(
        '/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the call58d8bcb8a9e6240e200cff26 operation.
     * @callback module:api/DefaultApi~call58d8bcb8a9e6240e200cff26Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/AirportDto>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Airport(s) by country code.
     * Retrieve airports by country code.
     * @param {String} countryCode Comma-separated list of country codes (2-character ISO 3166-1). More than 3 country codes is not allowed.
     * @param {module:api/DefaultApi~call58d8bcb8a9e6240e200cff26Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/AirportDto>}
     */
    call58d8bcb8a9e6240e200cff26(countryCode, callback) {
      let postBody = null;
      // verify the required parameter 'countryCode' is set
      if (countryCode === undefined || countryCode === null) {
        throw new Error("Missing the required parameter 'countryCode' when calling call58d8bcb8a9e6240e200cff26");
      }

      let pathParams = {
        'countryCode': countryCode
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKeyQuery', 'apiKeyHeader'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [AirportDto];
      return this.apiClient.callApi(
        '/countrycode/{countryCode}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the call58d8bcb8a9e6240e200cff27 operation.
     * @callback module:api/DefaultApi~call58d8bcb8a9e6240e200cff27Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/NearestAirportDto>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Nearest airport(s) by geo coordinates.
     * Retrieve nearest airports by geo coordinates (latitude/longitude).
     * @param {Object} opts Optional parameters
     * @param {String} [latitude] Latitude in decimals, lower than -90.0 and higher than 90.0 is not allowed.
     * @param {String} [longitude] Longitude in decimals, lower than -180.0 and higher than 180.0 is not allowed.
     * @param {String} [maxDistanceInKm] Maximum distance in kilometers, lower than 1 and higher than 500 is not allowed. If not set, max value is applied.
     * @param {String} [limit] Limits the result, lower than 0 is not allowed. If not set, the result is not limited.
     * @param {module:api/DefaultApi~call58d8bcb8a9e6240e200cff27Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/NearestAirportDto>}
     */
    call58d8bcb8a9e6240e200cff27(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'latitude': opts['latitude'],
        'longitude': opts['longitude'],
        'maxDistanceInKm': opts['maxDistanceInKm'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKeyQuery', 'apiKeyHeader'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [NearestAirportDto];
      return this.apiClient.callApi(
        '/nearest', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the call58d8bcb8a9e6240e200cff28 operation.
     * @callback module:api/DefaultApi~call58d8bcb8a9e6240e200cff28Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/NearestAirportDto>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Nearest airport(s) by airport id.
     * Retrieve nearest airports by station id.
     * @param {String} id Airport (IATA code) to search nearest airports for.
     * @param {Object} opts Optional parameters
     * @param {String} [maxDistanceInKm] Maximum distance in kilometers, lower than 1 and higher than 500 is not allowed. If not set, max value is applied.
     * @param {String} [limit] Limits the result, lower than 0 is not allowed. If not set, the result is not limited.
     * @param {module:api/DefaultApi~call58d8bcb8a9e6240e200cff28Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/NearestAirportDto>}
     */
    call58d8bcb8a9e6240e200cff28(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling call58d8bcb8a9e6240e200cff28");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'maxDistanceInKm': opts['maxDistanceInKm'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKeyQuery', 'apiKeyHeader'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [NearestAirportDto];
      return this.apiClient.callApi(
        '/nearest/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
