/*
 * Airports API v2
 * Returns all airports
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AirportDetailsDto;
import org.openapitools.client.model.AirportDto;
import org.openapitools.client.model.BadRequestResponse;
import org.openapitools.client.model.InternalServerErrorResponse;
import org.openapitools.client.model.NearestAirportDto;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * All airports
     *
     * Retrieve all airports.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void call58d8bcb7a9e6240e200cff24Test() throws ApiException {
        List<AirportDto> response = api.call58d8bcb7a9e6240e200cff24();
        // TODO: test validations
    }

    /**
     * Airport by id.
     *
     * Retrieve airport by id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void call58d8bcb7a9e6240e200cff25Test() throws ApiException {
        String id = null;
        AirportDetailsDto response = api.call58d8bcb7a9e6240e200cff25(id);
        // TODO: test validations
    }

    /**
     * Airport(s) by country code.
     *
     * Retrieve airports by country code.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void call58d8bcb8a9e6240e200cff26Test() throws ApiException {
        String countryCode = null;
        List<AirportDto> response = api.call58d8bcb8a9e6240e200cff26(countryCode);
        // TODO: test validations
    }

    /**
     * Nearest airport(s) by geo coordinates.
     *
     * Retrieve nearest airports by geo coordinates (latitude/longitude).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void call58d8bcb8a9e6240e200cff27Test() throws ApiException {
        String latitude = null;
        String longitude = null;
        String maxDistanceInKm = null;
        String limit = null;
        List<NearestAirportDto> response = api.call58d8bcb8a9e6240e200cff27(latitude, longitude, maxDistanceInKm, limit);
        // TODO: test validations
    }

    /**
     * Nearest airport(s) by airport id.
     *
     * Retrieve nearest airports by station id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void call58d8bcb8a9e6240e200cff28Test() throws ApiException {
        String id = null;
        String maxDistanceInKm = null;
        String limit = null;
        List<NearestAirportDto> response = api.call58d8bcb8a9e6240e200cff28(id, maxDistanceInKm, limit);
        // TODO: test validations
    }

}
