/**
 * Microcks API v1.7
 * API offered by Microcks, the Kubernetes native tools for API and microservices mocking and testing (microcks.io)
 *
 * The version of the OpenAPI document: 1.7.0
 * Contact: laurent@microcks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FeaturesConfigAsyncApi from './FeaturesConfigAsyncApi';
import FeaturesConfigMicrocksHub from './FeaturesConfigMicrocksHub';
import FeaturesConfigRepositoryFilter from './FeaturesConfigRepositoryFilter';
import FeaturesConfigRepositoryTenancy from './FeaturesConfigRepositoryTenancy';

/**
 * The FeaturesConfig model module.
 * @module model/FeaturesConfig
 * @version 1.7.0
 */
class FeaturesConfig {
    /**
     * Constructs a new <code>FeaturesConfig</code>.
     * Representation of optional features configuration used by Microcks server
     * @alias module:model/FeaturesConfig
     * @extends Object
     */
    constructor() { 
        
        FeaturesConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FeaturesConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FeaturesConfig} obj Optional instance to populate.
     * @return {module:model/FeaturesConfig} The populated <code>FeaturesConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FeaturesConfig();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('async-api')) {
                obj['async-api'] = FeaturesConfigAsyncApi.constructFromObject(data['async-api']);
            }
            if (data.hasOwnProperty('microcks-hub')) {
                obj['microcks-hub'] = FeaturesConfigMicrocksHub.constructFromObject(data['microcks-hub']);
            }
            if (data.hasOwnProperty('repository-filter')) {
                obj['repository-filter'] = FeaturesConfigRepositoryFilter.constructFromObject(data['repository-filter']);
            }
            if (data.hasOwnProperty('repository-tenancy')) {
                obj['repository-tenancy'] = FeaturesConfigRepositoryTenancy.constructFromObject(data['repository-tenancy']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FeaturesConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FeaturesConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `async-api`
        if (data['async-api']) { // data not null
          FeaturesConfigAsyncApi.validateJSON(data['async-api']);
        }
        // validate the optional field `microcks-hub`
        if (data['microcks-hub']) { // data not null
          FeaturesConfigMicrocksHub.validateJSON(data['microcks-hub']);
        }
        // validate the optional field `repository-filter`
        if (data['repository-filter']) { // data not null
          FeaturesConfigRepositoryFilter.validateJSON(data['repository-filter']);
        }
        // validate the optional field `repository-tenancy`
        if (data['repository-tenancy']) { // data not null
          FeaturesConfigRepositoryTenancy.validateJSON(data['repository-tenancy']);
        }

        return true;
    }


}



/**
 * @member {module:model/FeaturesConfigAsyncApi} async-api
 */
FeaturesConfig.prototype['async-api'] = undefined;

/**
 * @member {module:model/FeaturesConfigMicrocksHub} microcks-hub
 */
FeaturesConfig.prototype['microcks-hub'] = undefined;

/**
 * @member {module:model/FeaturesConfigRepositoryFilter} repository-filter
 */
FeaturesConfig.prototype['repository-filter'] = undefined;

/**
 * @member {module:model/FeaturesConfigRepositoryTenancy} repository-tenancy
 */
FeaturesConfig.prototype['repository-tenancy'] = undefined;






export default FeaturesConfig;

