/**
 * Microcks API v1.7
 * API offered by Microcks, the Kubernetes native tools for API and microservices mocking and testing (microcks.io)
 *
 * The version of the OpenAPI document: 1.7.0
 * Contact: laurent@microcks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ParameterConstraint from './ParameterConstraint';

/**
 * The OperationOverrideDTO model module.
 * @module model/OperationOverrideDTO
 * @version 1.7.0
 */
class OperationOverrideDTO {
    /**
     * Constructs a new <code>OperationOverrideDTO</code>.
     * Data Transfer object for grouping the mutable properties of an Operation
     * @alias module:model/OperationOverrideDTO
     */
    constructor() { 
        
        OperationOverrideDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OperationOverrideDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OperationOverrideDTO} obj Optional instance to populate.
     * @return {module:model/OperationOverrideDTO} The populated <code>OperationOverrideDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OperationOverrideDTO();

            if (data.hasOwnProperty('defaultDelay')) {
                obj['defaultDelay'] = ApiClient.convertToType(data['defaultDelay'], 'Number');
            }
            if (data.hasOwnProperty('dispatcher')) {
                obj['dispatcher'] = ApiClient.convertToType(data['dispatcher'], 'String');
            }
            if (data.hasOwnProperty('dispatcherRules')) {
                obj['dispatcherRules'] = ApiClient.convertToType(data['dispatcherRules'], 'String');
            }
            if (data.hasOwnProperty('parameterConstraints')) {
                obj['parameterConstraints'] = ApiClient.convertToType(data['parameterConstraints'], [ParameterConstraint]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OperationOverrideDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OperationOverrideDTO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dispatcher'] && !(typeof data['dispatcher'] === 'string' || data['dispatcher'] instanceof String)) {
            throw new Error("Expected the field `dispatcher` to be a primitive type in the JSON string but got " + data['dispatcher']);
        }
        // ensure the json data is a string
        if (data['dispatcherRules'] && !(typeof data['dispatcherRules'] === 'string' || data['dispatcherRules'] instanceof String)) {
            throw new Error("Expected the field `dispatcherRules` to be a primitive type in the JSON string but got " + data['dispatcherRules']);
        }
        if (data['parameterConstraints']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['parameterConstraints'])) {
                throw new Error("Expected the field `parameterConstraints` to be an array in the JSON data but got " + data['parameterConstraints']);
            }
            // validate the optional field `parameterConstraints` (array)
            for (const item of data['parameterConstraints']) {
                ParameterConstraint.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Default delay in milliseconds to apply to mock responses on this operation
 * @member {Number} defaultDelay
 */
OperationOverrideDTO.prototype['defaultDelay'] = undefined;

/**
 * Type of dispatcher to apply for this operation
 * @member {String} dispatcher
 */
OperationOverrideDTO.prototype['dispatcher'] = undefined;

/**
 * Rules of dispatcher for this operation
 * @member {String} dispatcherRules
 */
OperationOverrideDTO.prototype['dispatcherRules'] = undefined;

/**
 * Constraints that may apply to incoming parameters on this operation
 * @member {Array.<module:model/ParameterConstraint>} parameterConstraints
 */
OperationOverrideDTO.prototype['parameterConstraints'] = undefined;






export default OperationOverrideDTO;

