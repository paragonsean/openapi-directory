/**
 * Microcks API v1.7
 * API offered by Microcks, the Kubernetes native tools for API and microservices mocking and testing (microcks.io)
 *
 * The version of the OpenAPI document: 1.7.0
 * Contact: laurent@microcks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FeaturesConfigRepositoryTenancy model module.
 * @module model/FeaturesConfigRepositoryTenancy
 * @version 1.7.0
 */
class FeaturesConfigRepositoryTenancy {
    /**
     * Constructs a new <code>FeaturesConfigRepositoryTenancy</code>.
     * Repository tenancy feature properties
     * @alias module:model/FeaturesConfigRepositoryTenancy
     */
    constructor() { 
        
        FeaturesConfigRepositoryTenancy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FeaturesConfigRepositoryTenancy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FeaturesConfigRepositoryTenancy} obj Optional instance to populate.
     * @return {module:model/FeaturesConfigRepositoryTenancy} The populated <code>FeaturesConfigRepositoryTenancy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FeaturesConfigRepositoryTenancy();

            if (data.hasOwnProperty('artifact-import-allowed-roles')) {
                obj['artifact-import-allowed-roles'] = ApiClient.convertToType(data['artifact-import-allowed-roles'], 'String');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FeaturesConfigRepositoryTenancy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FeaturesConfigRepositoryTenancy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['artifact-import-allowed-roles'] && !(typeof data['artifact-import-allowed-roles'] === 'string' || data['artifact-import-allowed-roles'] instanceof String)) {
            throw new Error("Expected the field `artifact-import-allowed-roles` to be a primitive type in the JSON string but got " + data['artifact-import-allowed-roles']);
        }
        // ensure the json data is a string
        if (data['enabled'] && !(typeof data['enabled'] === 'string' || data['enabled'] instanceof String)) {
            throw new Error("Expected the field `enabled` to be a primitive type in the JSON string but got " + data['enabled']);
        }

        return true;
    }


}



/**
 * @member {String} artifact-import-allowed-roles
 */
FeaturesConfigRepositoryTenancy.prototype['artifact-import-allowed-roles'] = undefined;

/**
 * @member {String} enabled
 */
FeaturesConfigRepositoryTenancy.prototype['enabled'] = undefined;






export default FeaturesConfigRepositoryTenancy;

