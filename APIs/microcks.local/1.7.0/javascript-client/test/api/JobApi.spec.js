/**
 * Microcks API v1.7
 * API offered by Microcks, the Kubernetes native tools for API and microservices mocking and testing (microcks.io)
 *
 * The version of the OpenAPI document: 1.7.0
 * Contact: laurent@microcks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MicrocksApiV17);
  }
}(this, function(expect, MicrocksApiV17) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MicrocksApiV17.JobApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('JobApi', function() {
    describe('activateImportJob', function() {
      it('should call activateImportJob successfully', function(done) {
        //uncomment below and update the code to test activateImportJob
        //instance.activateImportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createImportJob', function() {
      it('should call createImportJob successfully', function(done) {
        //uncomment below and update the code to test createImportJob
        //instance.createImportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteImportJob', function() {
      it('should call deleteImportJob successfully', function(done) {
        //uncomment below and update the code to test deleteImportJob
        //instance.deleteImportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getImportJobCounter', function() {
      it('should call getImportJobCounter successfully', function(done) {
        //uncomment below and update the code to test getImportJobCounter
        //instance.getImportJobCounter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getImportJobs', function() {
      it('should call getImportJobs successfully', function(done) {
        //uncomment below and update the code to test getImportJobs
        //instance.getImportJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('jobsIdGet', function() {
      it('should call jobsIdGet successfully', function(done) {
        //uncomment below and update the code to test jobsIdGet
        //instance.jobsIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('jobsIdPost', function() {
      it('should call jobsIdPost successfully', function(done) {
        //uncomment below and update the code to test jobsIdPost
        //instance.jobsIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startImportJob', function() {
      it('should call startImportJob successfully', function(done) {
        //uncomment below and update the code to test startImportJob
        //instance.startImportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopImportJob', function() {
      it('should call stopImportJob successfully', function(done) {
        //uncomment below and update the code to test stopImportJob
        //instance.stopImportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uploadArtifact', function() {
      it('should call uploadArtifact successfully', function(done) {
        //uncomment below and update the code to test uploadArtifact
        //instance.uploadArtifact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
