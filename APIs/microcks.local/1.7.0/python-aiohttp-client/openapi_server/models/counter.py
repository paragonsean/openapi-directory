# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Counter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, counter: int=None):
        """Counter - a model defined in OpenAPI

        :param counter: The counter of this Counter.
        """
        self.openapi_types = {
            'counter': int
        }

        self.attribute_map = {
            'counter': 'counter'
        }

        self._counter = counter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Counter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Counter of this Counter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def counter(self):
        """Gets the counter of this Counter.

        Number of items in a resource collection

        :return: The counter of this Counter.
        :rtype: int
        """
        return self._counter

    @counter.setter
    def counter(self, counter):
        """Sets the counter of this Counter.

        Number of items in a resource collection

        :param counter: The counter of this Counter.
        :type counter: int
        """

        self._counter = counter
