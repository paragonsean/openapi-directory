# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FeaturesConfigMicrocksHub(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_roles: str=None, enabled: str=None, endpoint: str=None):
        """FeaturesConfigMicrocksHub - a model defined in OpenAPI

        :param allowed_roles: The allowed_roles of this FeaturesConfigMicrocksHub.
        :param enabled: The enabled of this FeaturesConfigMicrocksHub.
        :param endpoint: The endpoint of this FeaturesConfigMicrocksHub.
        """
        self.openapi_types = {
            'allowed_roles': str,
            'enabled': str,
            'endpoint': str
        }

        self.attribute_map = {
            'allowed_roles': 'allowed-roles',
            'enabled': 'enabled',
            'endpoint': 'endpoint'
        }

        self._allowed_roles = allowed_roles
        self._enabled = enabled
        self._endpoint = endpoint

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FeaturesConfigMicrocksHub':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FeaturesConfig_microcks_hub of this FeaturesConfigMicrocksHub.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_roles(self):
        """Gets the allowed_roles of this FeaturesConfigMicrocksHub.


        :return: The allowed_roles of this FeaturesConfigMicrocksHub.
        :rtype: str
        """
        return self._allowed_roles

    @allowed_roles.setter
    def allowed_roles(self, allowed_roles):
        """Sets the allowed_roles of this FeaturesConfigMicrocksHub.


        :param allowed_roles: The allowed_roles of this FeaturesConfigMicrocksHub.
        :type allowed_roles: str
        """

        self._allowed_roles = allowed_roles

    @property
    def enabled(self):
        """Gets the enabled of this FeaturesConfigMicrocksHub.


        :return: The enabled of this FeaturesConfigMicrocksHub.
        :rtype: str
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this FeaturesConfigMicrocksHub.


        :param enabled: The enabled of this FeaturesConfigMicrocksHub.
        :type enabled: str
        """

        self._enabled = enabled

    @property
    def endpoint(self):
        """Gets the endpoint of this FeaturesConfigMicrocksHub.


        :return: The endpoint of this FeaturesConfigMicrocksHub.
        :rtype: str
        """
        return self._endpoint

    @endpoint.setter
    def endpoint(self, endpoint):
        """Sets the endpoint of this FeaturesConfigMicrocksHub.


        :param endpoint: The endpoint of this FeaturesConfigMicrocksHub.
        :type endpoint: str
        """

        self._endpoint = endpoint
