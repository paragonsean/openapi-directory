/**
 * Microcks API v1.7
 * API offered by Microcks, the Kubernetes native tools for API and microservices mocking and testing (microcks.io)
 *
 * The version of the OpenAPI document: 1.7.0
 * Contact: laurent@microcks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITestCaseResult.h
 *
 * Companion objects for TestResult. Each TestCaseResult correspond to a particuliar service operation / action reference by the operationName field. TestCaseResults owns a collection of TestStepResults (one for every request associated to service operation / action).
 */

#ifndef OAITestCaseResult_H
#define OAITestCaseResult_H

#include <QJsonObject>

#include "OAITestStepResult.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITestStepResult;

class OAITestCaseResult : public OAIObject {
public:
    OAITestCaseResult();
    OAITestCaseResult(QString json);
    ~OAITestCaseResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getElapsedTime() const;
    void setElapsedTime(const double &elapsed_time);
    bool is_elapsed_time_Set() const;
    bool is_elapsed_time_Valid() const;

    QString getOperationName() const;
    void setOperationName(const QString &operation_name);
    bool is_operation_name_Set() const;
    bool is_operation_name_Valid() const;

    bool isSuccess() const;
    void setSuccess(const bool &success);
    bool is_success_Set() const;
    bool is_success_Valid() const;

    QList<OAITestStepResult> getTestStepResults() const;
    void setTestStepResults(const QList<OAITestStepResult> &test_step_results);
    bool is_test_step_results_Set() const;
    bool is_test_step_results_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_elapsed_time;
    bool m_elapsed_time_isSet;
    bool m_elapsed_time_isValid;

    QString m_operation_name;
    bool m_operation_name_isSet;
    bool m_operation_name_isValid;

    bool m_success;
    bool m_success_isSet;
    bool m_success_isValid;

    QList<OAITestStepResult> m_test_step_results;
    bool m_test_step_results_isSet;
    bool m_test_step_results_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITestCaseResult)

#endif // OAITestCaseResult_H
