/**
 * Microcks API v1.7
 * API offered by Microcks, the Kubernetes native tools for API and microservices mocking and testing (microcks.io)
 *
 * The version of the OpenAPI document: 1.7.0
 * Contact: laurent@microcks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOperationOverrideDTO.h
 *
 * Data Transfer object for grouping the mutable properties of an Operation
 */

#ifndef OAIOperationOverrideDTO_H
#define OAIOperationOverrideDTO_H

#include <QJsonObject>

#include "OAIParameterConstraint.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIParameterConstraint;

class OAIOperationOverrideDTO : public OAIObject {
public:
    OAIOperationOverrideDTO();
    OAIOperationOverrideDTO(QString json);
    ~OAIOperationOverrideDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDefaultDelay() const;
    void setDefaultDelay(const qint32 &default_delay);
    bool is_default_delay_Set() const;
    bool is_default_delay_Valid() const;

    QString getDispatcher() const;
    void setDispatcher(const QString &dispatcher);
    bool is_dispatcher_Set() const;
    bool is_dispatcher_Valid() const;

    QString getDispatcherRules() const;
    void setDispatcherRules(const QString &dispatcher_rules);
    bool is_dispatcher_rules_Set() const;
    bool is_dispatcher_rules_Valid() const;

    QList<OAIParameterConstraint> getParameterConstraints() const;
    void setParameterConstraints(const QList<OAIParameterConstraint> &parameter_constraints);
    bool is_parameter_constraints_Set() const;
    bool is_parameter_constraints_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_default_delay;
    bool m_default_delay_isSet;
    bool m_default_delay_isValid;

    QString m_dispatcher;
    bool m_dispatcher_isSet;
    bool m_dispatcher_isValid;

    QString m_dispatcher_rules;
    bool m_dispatcher_rules_isSet;
    bool m_dispatcher_rules_isValid;

    QList<OAIParameterConstraint> m_parameter_constraints;
    bool m_parameter_constraints_isSet;
    bool m_parameter_constraints_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOperationOverrideDTO)

#endif // OAIOperationOverrideDTO_H
