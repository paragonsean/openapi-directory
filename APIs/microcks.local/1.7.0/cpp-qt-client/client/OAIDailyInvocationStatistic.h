/**
 * Microcks API v1.7
 * API offered by Microcks, the Kubernetes native tools for API and microservices mocking and testing (microcks.io)
 *
 * The version of the OpenAPI document: 1.7.0
 * Contact: laurent@microcks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDailyInvocationStatistic.h
 *
 * The daily statistic of a service mock invocations
 */

#ifndef OAIDailyInvocationStatistic_H
#define OAIDailyInvocationStatistic_H

#include <QJsonObject>

#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDailyInvocationStatistic : public OAIObject {
public:
    OAIDailyInvocationStatistic();
    OAIDailyInvocationStatistic(QString json);
    ~OAIDailyInvocationStatistic() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getDailyCount() const;
    void setDailyCount(const double &daily_count);
    bool is_daily_count_Set() const;
    bool is_daily_count_Valid() const;

    QString getDay() const;
    void setDay(const QString &day);
    bool is_day_Set() const;
    bool is_day_Valid() const;

    QMap<QString, QJsonValue> getHourlyCount() const;
    void setHourlyCount(const QMap<QString, QJsonValue> &hourly_count);
    bool is_hourly_count_Set() const;
    bool is_hourly_count_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QMap<QString, QJsonValue> getMinuteCount() const;
    void setMinuteCount(const QMap<QString, QJsonValue> &minute_count);
    bool is_minute_count_Set() const;
    bool is_minute_count_Valid() const;

    QString getServiceName() const;
    void setServiceName(const QString &service_name);
    bool is_service_name_Set() const;
    bool is_service_name_Valid() const;

    QString getServiceVersion() const;
    void setServiceVersion(const QString &service_version);
    bool is_service_version_Set() const;
    bool is_service_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_daily_count;
    bool m_daily_count_isSet;
    bool m_daily_count_isValid;

    QString m_day;
    bool m_day_isSet;
    bool m_day_isValid;

    QMap<QString, QJsonValue> m_hourly_count;
    bool m_hourly_count_isSet;
    bool m_hourly_count_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QMap<QString, QJsonValue> m_minute_count;
    bool m_minute_count_isSet;
    bool m_minute_count_isValid;

    QString m_service_name;
    bool m_service_name_isSet;
    bool m_service_name_isValid;

    QString m_service_version;
    bool m_service_version_isSet;
    bool m_service_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDailyInvocationStatistic)

#endif // OAIDailyInvocationStatistic_H
