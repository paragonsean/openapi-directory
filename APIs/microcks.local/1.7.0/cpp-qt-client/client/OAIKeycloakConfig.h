/**
 * Microcks API v1.7
 * API offered by Microcks, the Kubernetes native tools for API and microservices mocking and testing (microcks.io)
 *
 * The version of the OpenAPI document: 1.7.0
 * Contact: laurent@microcks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIKeycloakConfig.h
 *
 * Representation of Keycloak / SSO configuration used by Microcks server
 */

#ifndef OAIKeycloakConfig_H
#define OAIKeycloakConfig_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIKeycloakConfig : public OAIObject {
public:
    OAIKeycloakConfig();
    OAIKeycloakConfig(QString json);
    ~OAIKeycloakConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthServerUrl() const;
    void setAuthServerUrl(const QString &auth_server_url);
    bool is_auth_server_url_Set() const;
    bool is_auth_server_url_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QString getPublicClient() const;
    void setPublicClient(const QString &public_client);
    bool is_public_client_Set() const;
    bool is_public_client_Valid() const;

    QString getRealm() const;
    void setRealm(const QString &realm);
    bool is_realm_Set() const;
    bool is_realm_Valid() const;

    QString getResource() const;
    void setResource(const QString &resource);
    bool is_resource_Set() const;
    bool is_resource_Valid() const;

    QString getSslRequired() const;
    void setSslRequired(const QString &ssl_required);
    bool is_ssl_required_Set() const;
    bool is_ssl_required_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_auth_server_url;
    bool m_auth_server_url_isSet;
    bool m_auth_server_url_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QString m_public_client;
    bool m_public_client_isSet;
    bool m_public_client_isValid;

    QString m_realm;
    bool m_realm_isSet;
    bool m_realm_isValid;

    QString m_resource;
    bool m_resource_isSet;
    bool m_resource_isValid;

    QString m_ssl_required;
    bool m_ssl_required_isSet;
    bool m_ssl_required_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIKeycloakConfig)

#endif // OAIKeycloakConfig_H
