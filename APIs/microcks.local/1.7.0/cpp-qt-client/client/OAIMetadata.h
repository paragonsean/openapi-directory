/**
 * Microcks API v1.7
 * API offered by Microcks, the Kubernetes native tools for API and microservices mocking and testing (microcks.io)
 *
 * The version of the OpenAPI document: 1.7.0
 * Contact: laurent@microcks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMetadata.h
 *
 * Commodity object for holding metadata on any entity. This object is inspired by Kubernetes metadata.
 */

#ifndef OAIMetadata_H
#define OAIMetadata_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMetadata : public OAIObject {
public:
    OAIMetadata();
    OAIMetadata(QString json);
    ~OAIMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getAnnotations() const;
    void setAnnotations(const QMap<QString, QString> &annotations);
    bool is_annotations_Set() const;
    bool is_annotations_Valid() const;

    qint32 getCreatedOn() const;
    void setCreatedOn(const qint32 &created_on);
    bool is_created_on_Set() const;
    bool is_created_on_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    qint32 getLastUpdate() const;
    void setLastUpdate(const qint32 &last_update);
    bool is_last_update_Set() const;
    bool is_last_update_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_annotations;
    bool m_annotations_isSet;
    bool m_annotations_isValid;

    qint32 m_created_on;
    bool m_created_on_isSet;
    bool m_created_on_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    qint32 m_last_update;
    bool m_last_update_isSet;
    bool m_last_update_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMetadata)

#endif // OAIMetadata_H
