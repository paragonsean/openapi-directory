/**
 * Microcks API v1.7
 * API offered by Microcks, the Kubernetes native tools for API and microservices mocking and testing (microcks.io)
 *
 * The version of the OpenAPI document: 1.7.0
 * Contact: laurent@microcks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITestCaseReturnDTO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITestCaseReturnDTO::OAITestCaseReturnDTO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITestCaseReturnDTO::OAITestCaseReturnDTO() {
    this->initializeModel();
}

OAITestCaseReturnDTO::~OAITestCaseReturnDTO() {}

void OAITestCaseReturnDTO::initializeModel() {

    m_operation_name_isSet = false;
    m_operation_name_isValid = false;
}

void OAITestCaseReturnDTO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITestCaseReturnDTO::fromJsonObject(QJsonObject json) {

    m_operation_name_isValid = ::OpenAPI::fromJsonValue(m_operation_name, json[QString("operationName")]);
    m_operation_name_isSet = !json[QString("operationName")].isNull() && m_operation_name_isValid;
}

QString OAITestCaseReturnDTO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITestCaseReturnDTO::asJsonObject() const {
    QJsonObject obj;
    if (m_operation_name_isSet) {
        obj.insert(QString("operationName"), ::OpenAPI::toJsonValue(m_operation_name));
    }
    return obj;
}

QString OAITestCaseReturnDTO::getOperationName() const {
    return m_operation_name;
}
void OAITestCaseReturnDTO::setOperationName(const QString &operation_name) {
    m_operation_name = operation_name;
    m_operation_name_isSet = true;
}

bool OAITestCaseReturnDTO::is_operation_name_Set() const{
    return m_operation_name_isSet;
}

bool OAITestCaseReturnDTO::is_operation_name_Valid() const{
    return m_operation_name_isValid;
}

bool OAITestCaseReturnDTO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_operation_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITestCaseReturnDTO::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_operation_name_isValid && true;
}

} // namespace OpenAPI
