/**
 * Microcks API v1.7
 * API offered by Microcks, the Kubernetes native tools for API and microservices mocking and testing (microcks.io)
 *
 * The version of the OpenAPI document: 1.7.0
 * Contact: laurent@microcks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFeaturesConfig_repository_tenancy.h
 *
 * Repository tenancy feature properties
 */

#ifndef OAIFeaturesConfig_repository_tenancy_H
#define OAIFeaturesConfig_repository_tenancy_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFeaturesConfig_repository_tenancy : public OAIObject {
public:
    OAIFeaturesConfig_repository_tenancy();
    OAIFeaturesConfig_repository_tenancy(QString json);
    ~OAIFeaturesConfig_repository_tenancy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArtifactImportAllowedRoles() const;
    void setArtifactImportAllowedRoles(const QString &artifact_import_allowed_roles);
    bool is_artifact_import_allowed_roles_Set() const;
    bool is_artifact_import_allowed_roles_Valid() const;

    QString getEnabled() const;
    void setEnabled(const QString &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_artifact_import_allowed_roles;
    bool m_artifact_import_allowed_roles_isSet;
    bool m_artifact_import_allowed_roles_isValid;

    QString m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFeaturesConfig_repository_tenancy)

#endif // OAIFeaturesConfig_repository_tenancy_H
