/**
 * Microcks API v1.7
 * API offered by Microcks, the Kubernetes native tools for API and microservices mocking and testing (microcks.io)
 *
 * The version of the OpenAPI document: 1.7.0
 * Contact: laurent@microcks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITestReturn.h
 *
 * TestReturn is used for wrapping the return code of a test step execution
 */

#ifndef OAITestReturn_H
#define OAITestReturn_H

#include <QJsonObject>

#include "OAIEventMessage.h"
#include "OAIRequest.h"
#include "OAIResponse.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEventMessage;
class OAIRequest;
class OAIResponse;

class OAITestReturn : public OAIObject {
public:
    OAITestReturn();
    OAITestReturn(QString json);
    ~OAITestReturn() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCode() const;
    void setCode(const qint32 &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    qint64 getElapsedTime() const;
    void setElapsedTime(const qint64 &elapsed_time);
    bool is_elapsed_time_Set() const;
    bool is_elapsed_time_Valid() const;

    OAIEventMessage getEventMessage() const;
    void setEventMessage(const OAIEventMessage &event_message);
    bool is_event_message_Set() const;
    bool is_event_message_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    OAIRequest getRequest() const;
    void setRequest(const OAIRequest &request);
    bool is_request_Set() const;
    bool is_request_Valid() const;

    OAIResponse getResponse() const;
    void setResponse(const OAIResponse &response);
    bool is_response_Set() const;
    bool is_response_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    qint64 m_elapsed_time;
    bool m_elapsed_time_isSet;
    bool m_elapsed_time_isValid;

    OAIEventMessage m_event_message;
    bool m_event_message_isSet;
    bool m_event_message_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    OAIRequest m_request;
    bool m_request_isSet;
    bool m_request_isValid;

    OAIResponse m_response;
    bool m_response_isSet;
    bool m_response_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITestReturn)

#endif // OAITestReturn_H
