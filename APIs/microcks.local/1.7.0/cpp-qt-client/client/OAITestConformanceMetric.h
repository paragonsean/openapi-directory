/**
 * Microcks API v1.7
 * API offered by Microcks, the Kubernetes native tools for API and microservices mocking and testing (microcks.io)
 *
 * The version of the OpenAPI document: 1.7.0
 * Contact: laurent@microcks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITestConformanceMetric.h
 *
 * Represents the test conformance metrics (current score, history and evolution trend) of a Service
 */

#ifndef OAITestConformanceMetric_H
#define OAITestConformanceMetric_H

#include <QJsonObject>

#include "OAITrend.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITestConformanceMetric : public OAIObject {
public:
    OAITestConformanceMetric();
    OAITestConformanceMetric(QString json);
    ~OAITestConformanceMetric() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAggregationLabelValue() const;
    void setAggregationLabelValue(const QString &aggregation_label_value);
    bool is_aggregation_label_value_Set() const;
    bool is_aggregation_label_value_Valid() const;

    double getCurrentScore() const;
    void setCurrentScore(const double &current_score);
    bool is_current_score_Set() const;
    bool is_current_score_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLastUpdateDay() const;
    void setLastUpdateDay(const QString &last_update_day);
    bool is_last_update_day_Set() const;
    bool is_last_update_day_Valid() const;

    QMap<QString, double> getLatestScores() const;
    void setLatestScores(const QMap<QString, double> &latest_scores);
    bool is_latest_scores_Set() const;
    bool is_latest_scores_Valid() const;

    OAITrend getLatestTrend() const;
    void setLatestTrend(const OAITrend &latest_trend);
    bool is_latest_trend_Set() const;
    bool is_latest_trend_Valid() const;

    double getMaxPossibleScore() const;
    void setMaxPossibleScore(const double &max_possible_score);
    bool is_max_possible_score_Set() const;
    bool is_max_possible_score_Valid() const;

    QString getServiceId() const;
    void setServiceId(const QString &service_id);
    bool is_service_id_Set() const;
    bool is_service_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_aggregation_label_value;
    bool m_aggregation_label_value_isSet;
    bool m_aggregation_label_value_isValid;

    double m_current_score;
    bool m_current_score_isSet;
    bool m_current_score_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_last_update_day;
    bool m_last_update_day_isSet;
    bool m_last_update_day_isValid;

    QMap<QString, double> m_latest_scores;
    bool m_latest_scores_isSet;
    bool m_latest_scores_isValid;

    OAITrend m_latest_trend;
    bool m_latest_trend_isSet;
    bool m_latest_trend_isValid;

    double m_max_possible_score;
    bool m_max_possible_score_isSet;
    bool m_max_possible_score_isValid;

    QString m_service_id;
    bool m_service_id_isSet;
    bool m_service_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITestConformanceMetric)

#endif // OAITestConformanceMetric_H
