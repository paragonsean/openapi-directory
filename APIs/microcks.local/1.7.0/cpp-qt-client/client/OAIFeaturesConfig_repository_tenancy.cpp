/**
 * Microcks API v1.7
 * API offered by Microcks, the Kubernetes native tools for API and microservices mocking and testing (microcks.io)
 *
 * The version of the OpenAPI document: 1.7.0
 * Contact: laurent@microcks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFeaturesConfig_repository_tenancy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFeaturesConfig_repository_tenancy::OAIFeaturesConfig_repository_tenancy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFeaturesConfig_repository_tenancy::OAIFeaturesConfig_repository_tenancy() {
    this->initializeModel();
}

OAIFeaturesConfig_repository_tenancy::~OAIFeaturesConfig_repository_tenancy() {}

void OAIFeaturesConfig_repository_tenancy::initializeModel() {

    m_artifact_import_allowed_roles_isSet = false;
    m_artifact_import_allowed_roles_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;
}

void OAIFeaturesConfig_repository_tenancy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFeaturesConfig_repository_tenancy::fromJsonObject(QJsonObject json) {

    m_artifact_import_allowed_roles_isValid = ::OpenAPI::fromJsonValue(m_artifact_import_allowed_roles, json[QString("artifact-import-allowed-roles")]);
    m_artifact_import_allowed_roles_isSet = !json[QString("artifact-import-allowed-roles")].isNull() && m_artifact_import_allowed_roles_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;
}

QString OAIFeaturesConfig_repository_tenancy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFeaturesConfig_repository_tenancy::asJsonObject() const {
    QJsonObject obj;
    if (m_artifact_import_allowed_roles_isSet) {
        obj.insert(QString("artifact-import-allowed-roles"), ::OpenAPI::toJsonValue(m_artifact_import_allowed_roles));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    return obj;
}

QString OAIFeaturesConfig_repository_tenancy::getArtifactImportAllowedRoles() const {
    return m_artifact_import_allowed_roles;
}
void OAIFeaturesConfig_repository_tenancy::setArtifactImportAllowedRoles(const QString &artifact_import_allowed_roles) {
    m_artifact_import_allowed_roles = artifact_import_allowed_roles;
    m_artifact_import_allowed_roles_isSet = true;
}

bool OAIFeaturesConfig_repository_tenancy::is_artifact_import_allowed_roles_Set() const{
    return m_artifact_import_allowed_roles_isSet;
}

bool OAIFeaturesConfig_repository_tenancy::is_artifact_import_allowed_roles_Valid() const{
    return m_artifact_import_allowed_roles_isValid;
}

QString OAIFeaturesConfig_repository_tenancy::getEnabled() const {
    return m_enabled;
}
void OAIFeaturesConfig_repository_tenancy::setEnabled(const QString &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIFeaturesConfig_repository_tenancy::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIFeaturesConfig_repository_tenancy::is_enabled_Valid() const{
    return m_enabled_isValid;
}

bool OAIFeaturesConfig_repository_tenancy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_artifact_import_allowed_roles_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFeaturesConfig_repository_tenancy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
