/*
 * Microcks API v1.7
 * API offered by Microcks, the Kubernetes native tools for API and microservices mocking and testing (microcks.io)
 *
 * The version of the OpenAPI document: 1.7.0
 * Contact: laurent@microcks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Counter;
import java.io.File;
import org.openapitools.client.model.ImportJob;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for JobApi
 */
@Disabled
public class JobApiTest {

    private final JobApi api = new JobApi();

    /**
     * Activate an ImportJob
     *
     * Make an ImportJob active, so that it is executed
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void activateImportJobTest() throws ApiException {
        String id = null;
        ImportJob response = api.activateImportJob(id);
        // TODO: test validations
    }

    /**
     * Create ImportJob
     *
     * Create a new ImportJob
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createImportJobTest() throws ApiException {
        ImportJob importJob = null;
        ImportJob response = api.createImportJob(importJob);
        // TODO: test validations
    }

    /**
     * Delete ImportJob
     *
     * Delete an ImportJob
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteImportJobTest() throws ApiException {
        String id = null;
        api.deleteImportJob(id);
        // TODO: test validations
    }

    /**
     * Get the ImportJobs counter
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getImportJobCounterTest() throws ApiException {
        Counter response = api.getImportJobCounter();
        // TODO: test validations
    }

    /**
     * Get ImportJobs
     *
     * Retrieve a list of ImportJobs
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getImportJobsTest() throws ApiException {
        Integer page = null;
        Integer size = null;
        String name = null;
        List<ImportJob> response = api.getImportJobs(page, size, name);
        // TODO: test validations
    }

    /**
     * Get ImportJob
     *
     * Retrieve an ImportJob using its identifier
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsIdGetTest() throws ApiException {
        String id = null;
        ImportJob response = api.jobsIdGet(id);
        // TODO: test validations
    }

    /**
     * Update ImportJob
     *
     * Update an ImportJob
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsIdPostTest() throws ApiException {
        String id = null;
        ImportJob importJob = null;
        ImportJob response = api.jobsIdPost(id, importJob);
        // TODO: test validations
    }

    /**
     * Start an ImportJob
     *
     * Starting an ImportJob forces it to immediatly import mock definitions
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void startImportJobTest() throws ApiException {
        String id = null;
        ImportJob response = api.startImportJob(id);
        // TODO: test validations
    }

    /**
     * Stop an ImportJob
     *
     * Stopping an ImportJob desactivate it, so that it won&#39;t execute at next schedule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void stopImportJobTest() throws ApiException {
        String id = null;
        ImportJob response = api.stopImportJob(id);
        // TODO: test validations
    }

    /**
     * Upload an artifact
     *
     * Uploads an artifact to be imported by Microcks.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadArtifactTest() throws ApiException {
        Boolean mainArtifact = null;
        File _file = null;
        String response = api.uploadArtifact(mainArtifact, _file);
        // TODO: test validations
    }

}
