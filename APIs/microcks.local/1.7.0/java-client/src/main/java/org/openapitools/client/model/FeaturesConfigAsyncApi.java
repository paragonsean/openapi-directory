/*
 * Microcks API v1.7
 * API offered by Microcks, the Kubernetes native tools for API and microservices mocking and testing (microcks.io)
 *
 * The version of the OpenAPI document: 1.7.0
 * Contact: laurent@microcks.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Asynchronous feature properties
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:29.619783-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class FeaturesConfigAsyncApi {
  public static final String SERIALIZED_NAME_DEFAULT_BINDING = "default-binding";
  @SerializedName(SERIALIZED_NAME_DEFAULT_BINDING)
  private String defaultBinding;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private String enabled;

  public static final String SERIALIZED_NAME_ENDPOINT_A_M_Q_P = "endpoint-AMQP";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_A_M_Q_P)
  private String endpointAMQP;

  public static final String SERIALIZED_NAME_ENDPOINT_G_O_O_G_L_E_P_U_B_S_U_B = "endpoint-GOOGLEPUBSUB";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_G_O_O_G_L_E_P_U_B_S_U_B)
  private String endpointGOOGLEPUBSUB;

  public static final String SERIALIZED_NAME_ENDPOINT_K_A_F_K_A = "endpoint-KAFKA";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_K_A_F_K_A)
  private String endpointKAFKA;

  public static final String SERIALIZED_NAME_ENDPOINT_M_Q_T_T = "endpoint-MQTT";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_M_Q_T_T)
  private String endpointMQTT;

  public static final String SERIALIZED_NAME_ENDPOINT_N_A_T_S = "endpoint-NATS";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_N_A_T_S)
  private String endpointNATS;

  public static final String SERIALIZED_NAME_ENDPOINT_W_S = "endpoint-WS";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_W_S)
  private String endpointWS;

  public static final String SERIALIZED_NAME_FREQUENCIES = "frequencies";
  @SerializedName(SERIALIZED_NAME_FREQUENCIES)
  private String frequencies;

  public FeaturesConfigAsyncApi() {
  }

  public FeaturesConfigAsyncApi defaultBinding(String defaultBinding) {
    this.defaultBinding = defaultBinding;
    return this;
  }

  /**
   * Get defaultBinding
   * @return defaultBinding
   */
  @javax.annotation.Nullable
  public String getDefaultBinding() {
    return defaultBinding;
  }

  public void setDefaultBinding(String defaultBinding) {
    this.defaultBinding = defaultBinding;
  }


  public FeaturesConfigAsyncApi enabled(String enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   * @return enabled
   */
  @javax.annotation.Nullable
  public String getEnabled() {
    return enabled;
  }

  public void setEnabled(String enabled) {
    this.enabled = enabled;
  }


  public FeaturesConfigAsyncApi endpointAMQP(String endpointAMQP) {
    this.endpointAMQP = endpointAMQP;
    return this;
  }

  /**
   * Get endpointAMQP
   * @return endpointAMQP
   */
  @javax.annotation.Nullable
  public String getEndpointAMQP() {
    return endpointAMQP;
  }

  public void setEndpointAMQP(String endpointAMQP) {
    this.endpointAMQP = endpointAMQP;
  }


  public FeaturesConfigAsyncApi endpointGOOGLEPUBSUB(String endpointGOOGLEPUBSUB) {
    this.endpointGOOGLEPUBSUB = endpointGOOGLEPUBSUB;
    return this;
  }

  /**
   * Get endpointGOOGLEPUBSUB
   * @return endpointGOOGLEPUBSUB
   */
  @javax.annotation.Nullable
  public String getEndpointGOOGLEPUBSUB() {
    return endpointGOOGLEPUBSUB;
  }

  public void setEndpointGOOGLEPUBSUB(String endpointGOOGLEPUBSUB) {
    this.endpointGOOGLEPUBSUB = endpointGOOGLEPUBSUB;
  }


  public FeaturesConfigAsyncApi endpointKAFKA(String endpointKAFKA) {
    this.endpointKAFKA = endpointKAFKA;
    return this;
  }

  /**
   * Get endpointKAFKA
   * @return endpointKAFKA
   */
  @javax.annotation.Nullable
  public String getEndpointKAFKA() {
    return endpointKAFKA;
  }

  public void setEndpointKAFKA(String endpointKAFKA) {
    this.endpointKAFKA = endpointKAFKA;
  }


  public FeaturesConfigAsyncApi endpointMQTT(String endpointMQTT) {
    this.endpointMQTT = endpointMQTT;
    return this;
  }

  /**
   * Get endpointMQTT
   * @return endpointMQTT
   */
  @javax.annotation.Nullable
  public String getEndpointMQTT() {
    return endpointMQTT;
  }

  public void setEndpointMQTT(String endpointMQTT) {
    this.endpointMQTT = endpointMQTT;
  }


  public FeaturesConfigAsyncApi endpointNATS(String endpointNATS) {
    this.endpointNATS = endpointNATS;
    return this;
  }

  /**
   * Get endpointNATS
   * @return endpointNATS
   */
  @javax.annotation.Nullable
  public String getEndpointNATS() {
    return endpointNATS;
  }

  public void setEndpointNATS(String endpointNATS) {
    this.endpointNATS = endpointNATS;
  }


  public FeaturesConfigAsyncApi endpointWS(String endpointWS) {
    this.endpointWS = endpointWS;
    return this;
  }

  /**
   * Get endpointWS
   * @return endpointWS
   */
  @javax.annotation.Nullable
  public String getEndpointWS() {
    return endpointWS;
  }

  public void setEndpointWS(String endpointWS) {
    this.endpointWS = endpointWS;
  }


  public FeaturesConfigAsyncApi frequencies(String frequencies) {
    this.frequencies = frequencies;
    return this;
  }

  /**
   * Get frequencies
   * @return frequencies
   */
  @javax.annotation.Nullable
  public String getFrequencies() {
    return frequencies;
  }

  public void setFrequencies(String frequencies) {
    this.frequencies = frequencies;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeaturesConfigAsyncApi featuresConfigAsyncApi = (FeaturesConfigAsyncApi) o;
    return Objects.equals(this.defaultBinding, featuresConfigAsyncApi.defaultBinding) &&
        Objects.equals(this.enabled, featuresConfigAsyncApi.enabled) &&
        Objects.equals(this.endpointAMQP, featuresConfigAsyncApi.endpointAMQP) &&
        Objects.equals(this.endpointGOOGLEPUBSUB, featuresConfigAsyncApi.endpointGOOGLEPUBSUB) &&
        Objects.equals(this.endpointKAFKA, featuresConfigAsyncApi.endpointKAFKA) &&
        Objects.equals(this.endpointMQTT, featuresConfigAsyncApi.endpointMQTT) &&
        Objects.equals(this.endpointNATS, featuresConfigAsyncApi.endpointNATS) &&
        Objects.equals(this.endpointWS, featuresConfigAsyncApi.endpointWS) &&
        Objects.equals(this.frequencies, featuresConfigAsyncApi.frequencies);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultBinding, enabled, endpointAMQP, endpointGOOGLEPUBSUB, endpointKAFKA, endpointMQTT, endpointNATS, endpointWS, frequencies);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeaturesConfigAsyncApi {\n");
    sb.append("    defaultBinding: ").append(toIndentedString(defaultBinding)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    endpointAMQP: ").append(toIndentedString(endpointAMQP)).append("\n");
    sb.append("    endpointGOOGLEPUBSUB: ").append(toIndentedString(endpointGOOGLEPUBSUB)).append("\n");
    sb.append("    endpointKAFKA: ").append(toIndentedString(endpointKAFKA)).append("\n");
    sb.append("    endpointMQTT: ").append(toIndentedString(endpointMQTT)).append("\n");
    sb.append("    endpointNATS: ").append(toIndentedString(endpointNATS)).append("\n");
    sb.append("    endpointWS: ").append(toIndentedString(endpointWS)).append("\n");
    sb.append("    frequencies: ").append(toIndentedString(frequencies)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("default-binding");
    openapiFields.add("enabled");
    openapiFields.add("endpoint-AMQP");
    openapiFields.add("endpoint-GOOGLEPUBSUB");
    openapiFields.add("endpoint-KAFKA");
    openapiFields.add("endpoint-MQTT");
    openapiFields.add("endpoint-NATS");
    openapiFields.add("endpoint-WS");
    openapiFields.add("frequencies");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FeaturesConfigAsyncApi
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FeaturesConfigAsyncApi.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FeaturesConfigAsyncApi is not found in the empty JSON string", FeaturesConfigAsyncApi.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FeaturesConfigAsyncApi.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FeaturesConfigAsyncApi` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("default-binding") != null && !jsonObj.get("default-binding").isJsonNull()) && !jsonObj.get("default-binding").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default-binding` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default-binding").toString()));
      }
      if ((jsonObj.get("enabled") != null && !jsonObj.get("enabled").isJsonNull()) && !jsonObj.get("enabled").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enabled` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enabled").toString()));
      }
      if ((jsonObj.get("endpoint-AMQP") != null && !jsonObj.get("endpoint-AMQP").isJsonNull()) && !jsonObj.get("endpoint-AMQP").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint-AMQP` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpoint-AMQP").toString()));
      }
      if ((jsonObj.get("endpoint-GOOGLEPUBSUB") != null && !jsonObj.get("endpoint-GOOGLEPUBSUB").isJsonNull()) && !jsonObj.get("endpoint-GOOGLEPUBSUB").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint-GOOGLEPUBSUB` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpoint-GOOGLEPUBSUB").toString()));
      }
      if ((jsonObj.get("endpoint-KAFKA") != null && !jsonObj.get("endpoint-KAFKA").isJsonNull()) && !jsonObj.get("endpoint-KAFKA").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint-KAFKA` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpoint-KAFKA").toString()));
      }
      if ((jsonObj.get("endpoint-MQTT") != null && !jsonObj.get("endpoint-MQTT").isJsonNull()) && !jsonObj.get("endpoint-MQTT").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint-MQTT` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpoint-MQTT").toString()));
      }
      if ((jsonObj.get("endpoint-NATS") != null && !jsonObj.get("endpoint-NATS").isJsonNull()) && !jsonObj.get("endpoint-NATS").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint-NATS` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpoint-NATS").toString()));
      }
      if ((jsonObj.get("endpoint-WS") != null && !jsonObj.get("endpoint-WS").isJsonNull()) && !jsonObj.get("endpoint-WS").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint-WS` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpoint-WS").toString()));
      }
      if ((jsonObj.get("frequencies") != null && !jsonObj.get("frequencies").isJsonNull()) && !jsonObj.get("frequencies").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `frequencies` to be a primitive type in the JSON string but got `%s`", jsonObj.get("frequencies").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FeaturesConfigAsyncApi.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FeaturesConfigAsyncApi' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FeaturesConfigAsyncApi> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FeaturesConfigAsyncApi.class));

       return (TypeAdapter<T>) new TypeAdapter<FeaturesConfigAsyncApi>() {
           @Override
           public void write(JsonWriter out, FeaturesConfigAsyncApi value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FeaturesConfigAsyncApi read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FeaturesConfigAsyncApi given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FeaturesConfigAsyncApi
   * @throws IOException if the JSON string is invalid with respect to FeaturesConfigAsyncApi
   */
  public static FeaturesConfigAsyncApi fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FeaturesConfigAsyncApi.class);
  }

  /**
   * Convert an instance of FeaturesConfigAsyncApi to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

