/*
 * Wolfram
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;



import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DefaultApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public DefaultApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DefaultApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for getWolframAlphaResults
     * @param input the input (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The result of the Wolfram|Alpha query </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The request is missing the &#39;input&#39; parameter </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Wolfram|Alpha was unable to generate a result </td><td>  -  </td></tr>
        <tr><td> 501 </td><td> Wolfram|Alpha was unable to generate a result </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> Service temporarily unavailable. This may be the result of too many requests. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://products.wolframalpha.com/api">Get Wolfram|Alpha results Documentation</a>
     */
    public okhttp3.Call getWolframAlphaResultsCall(String input, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/llm-api";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (input != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("input", input));
        }

        final String[] localVarAccepts = {
            "text/plain"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getWolframAlphaResultsValidateBeforeCall(String input, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'input' is set
        if (input == null) {
            throw new ApiException("Missing the required parameter 'input' when calling getWolframAlphaResults(Async)");
        }

        return getWolframAlphaResultsCall(input, _callback);

    }

    /**
     * Get Wolfram|Alpha results
     * 
     * @param input the input (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The result of the Wolfram|Alpha query </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The request is missing the &#39;input&#39; parameter </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Wolfram|Alpha was unable to generate a result </td><td>  -  </td></tr>
        <tr><td> 501 </td><td> Wolfram|Alpha was unable to generate a result </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> Service temporarily unavailable. This may be the result of too many requests. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://products.wolframalpha.com/api">Get Wolfram|Alpha results Documentation</a>
     */
    public void getWolframAlphaResults(String input) throws ApiException {
        getWolframAlphaResultsWithHttpInfo(input);
    }

    /**
     * Get Wolfram|Alpha results
     * 
     * @param input the input (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The result of the Wolfram|Alpha query </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The request is missing the &#39;input&#39; parameter </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Wolfram|Alpha was unable to generate a result </td><td>  -  </td></tr>
        <tr><td> 501 </td><td> Wolfram|Alpha was unable to generate a result </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> Service temporarily unavailable. This may be the result of too many requests. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://products.wolframalpha.com/api">Get Wolfram|Alpha results Documentation</a>
     */
    public ApiResponse<Void> getWolframAlphaResultsWithHttpInfo(String input) throws ApiException {
        okhttp3.Call localVarCall = getWolframAlphaResultsValidateBeforeCall(input, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Get Wolfram|Alpha results (asynchronously)
     * 
     * @param input the input (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The result of the Wolfram|Alpha query </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The request is missing the &#39;input&#39; parameter </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Wolfram|Alpha was unable to generate a result </td><td>  -  </td></tr>
        <tr><td> 501 </td><td> Wolfram|Alpha was unable to generate a result </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> Service temporarily unavailable. This may be the result of too many requests. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://products.wolframalpha.com/api">Get Wolfram|Alpha results Documentation</a>
     */
    public okhttp3.Call getWolframAlphaResultsAsync(String input, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = getWolframAlphaResultsValidateBeforeCall(input, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for getWolframCloudResults
     * @param input the input expression (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The result of the Wolfram Language evaluation </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The request is missing the &#39;input&#39; parameter </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Wolfram Cloud was unable to generate a result </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> Service temporarily unavailable. This may be the result of too many requests. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://reference.wolfram.com/language/">Evaluate Wolfram Language code Documentation</a>
     */
    public okhttp3.Call getWolframCloudResultsCall(String input, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/cloud-plugin";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (input != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("input", input));
        }

        final String[] localVarAccepts = {
            "text/plain"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getWolframCloudResultsValidateBeforeCall(String input, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'input' is set
        if (input == null) {
            throw new ApiException("Missing the required parameter 'input' when calling getWolframCloudResults(Async)");
        }

        return getWolframCloudResultsCall(input, _callback);

    }

    /**
     * Evaluate Wolfram Language code
     * 
     * @param input the input expression (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The result of the Wolfram Language evaluation </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The request is missing the &#39;input&#39; parameter </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Wolfram Cloud was unable to generate a result </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> Service temporarily unavailable. This may be the result of too many requests. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://reference.wolfram.com/language/">Evaluate Wolfram Language code Documentation</a>
     */
    public void getWolframCloudResults(String input) throws ApiException {
        getWolframCloudResultsWithHttpInfo(input);
    }

    /**
     * Evaluate Wolfram Language code
     * 
     * @param input the input expression (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The result of the Wolfram Language evaluation </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The request is missing the &#39;input&#39; parameter </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Wolfram Cloud was unable to generate a result </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> Service temporarily unavailable. This may be the result of too many requests. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://reference.wolfram.com/language/">Evaluate Wolfram Language code Documentation</a>
     */
    public ApiResponse<Void> getWolframCloudResultsWithHttpInfo(String input) throws ApiException {
        okhttp3.Call localVarCall = getWolframCloudResultsValidateBeforeCall(input, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Evaluate Wolfram Language code (asynchronously)
     * 
     * @param input the input expression (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The result of the Wolfram Language evaluation </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The request is missing the &#39;input&#39; parameter </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Wolfram Cloud was unable to generate a result </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> Service temporarily unavailable. This may be the result of too many requests. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://reference.wolfram.com/language/">Evaluate Wolfram Language code Documentation</a>
     */
    public okhttp3.Call getWolframCloudResultsAsync(String input, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = getWolframCloudResultsValidateBeforeCall(input, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
