/**
 * elmah.io API
 * This is the public REST API for elmah.io. All of the integrations communicates with elmah.io through this API.<br/><br/>For additional help getting started with the API, visit the following help articles:<br/><ul><li>[Using the REST API](https://docs.elmah.io/using-the-rest-api/)</li><li>[Where is my API key?](https://docs.elmah.io/where-is-my-api-key/)</li><li>[Where is my log ID?](https://docs.elmah.io/where-is-my-log-id/)</li><li>[How to configure API key permissions](https://docs.elmah.io/how-to-configure-api-key-permissions/)</li></ul>
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateMessage.h
 *
 * 
 */

#ifndef OAICreateMessage_H
#define OAICreateMessage_H

#include <QJsonObject>

#include "OAIBreadcrumb.h"
#include "OAIItem.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBreadcrumb;
class OAIItem;

class OAICreateMessage : public OAIObject {
public:
    OAICreateMessage();
    OAICreateMessage(QString json);
    ~OAICreateMessage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplication() const;
    void setApplication(const QString &application);
    bool is_application_Set() const;
    bool is_application_Valid() const;

    QList<OAIBreadcrumb> getBreadcrumbs() const;
    void setBreadcrumbs(const QList<OAIBreadcrumb> &breadcrumbs);
    bool is_breadcrumbs_Set() const;
    bool is_breadcrumbs_Valid() const;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    QList<OAIItem> getCookies() const;
    void setCookies(const QList<OAIItem> &cookies);
    bool is_cookies_Set() const;
    bool is_cookies_Valid() const;

    QString getCorrelationId() const;
    void setCorrelationId(const QString &correlation_id);
    bool is_correlation_id_Set() const;
    bool is_correlation_id_Valid() const;

    QList<OAIItem> getData() const;
    void setData(const QList<OAIItem> &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    QDateTime getDateTime() const;
    void setDateTime(const QDateTime &date_time);
    bool is_date_time_Set() const;
    bool is_date_time_Valid() const;

    QString getDetail() const;
    void setDetail(const QString &detail);
    bool is_detail_Set() const;
    bool is_detail_Valid() const;

    QList<OAIItem> getForm() const;
    void setForm(const QList<OAIItem> &form);
    bool is_form_Set() const;
    bool is_form_Valid() const;

    QString getHostname() const;
    void setHostname(const QString &hostname);
    bool is_hostname_Set() const;
    bool is_hostname_Valid() const;

    QString getMethod() const;
    void setMethod(const QString &method);
    bool is_method_Set() const;
    bool is_method_Valid() const;

    QList<OAIItem> getQueryString() const;
    void setQueryString(const QList<OAIItem> &query_string);
    bool is_query_string_Set() const;
    bool is_query_string_Valid() const;

    QList<OAIItem> getServerVariables() const;
    void setServerVariables(const QList<OAIItem> &server_variables);
    bool is_server_variables_Set() const;
    bool is_server_variables_Valid() const;

    QString getSeverity() const;
    void setSeverity(const QString &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    qint32 getStatusCode() const;
    void setStatusCode(const qint32 &status_code);
    bool is_status_code_Set() const;
    bool is_status_code_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getTitleTemplate() const;
    void setTitleTemplate(const QString &title_template);
    bool is_title_template_Set() const;
    bool is_title_template_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getUser() const;
    void setUser(const QString &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application;
    bool m_application_isSet;
    bool m_application_isValid;

    QList<OAIBreadcrumb> m_breadcrumbs;
    bool m_breadcrumbs_isSet;
    bool m_breadcrumbs_isValid;

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    QList<OAIItem> m_cookies;
    bool m_cookies_isSet;
    bool m_cookies_isValid;

    QString m_correlation_id;
    bool m_correlation_id_isSet;
    bool m_correlation_id_isValid;

    QList<OAIItem> m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    QDateTime m_date_time;
    bool m_date_time_isSet;
    bool m_date_time_isValid;

    QString m_detail;
    bool m_detail_isSet;
    bool m_detail_isValid;

    QList<OAIItem> m_form;
    bool m_form_isSet;
    bool m_form_isValid;

    QString m_hostname;
    bool m_hostname_isSet;
    bool m_hostname_isValid;

    QString m_method;
    bool m_method_isSet;
    bool m_method_isValid;

    QList<OAIItem> m_query_string;
    bool m_query_string_isSet;
    bool m_query_string_isValid;

    QList<OAIItem> m_server_variables;
    bool m_server_variables_isSet;
    bool m_server_variables_isValid;

    QString m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    qint32 m_status_code;
    bool m_status_code_isSet;
    bool m_status_code_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_title_template;
    bool m_title_template_isSet;
    bool m_title_template_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_user;
    bool m_user_isSet;
    bool m_user_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateMessage)

#endif // OAICreateMessage_H
