/**
 * elmah.io API
 * This is the public REST API for elmah.io. All of the integrations communicates with elmah.io through this API.<br/><br/>For additional help getting started with the API, visit the following help articles:<br/><ul><li>[Using the REST API](https://docs.elmah.io/using-the-rest-api/)</li><li>[Where is my API key?](https://docs.elmah.io/where-is-my-api-key/)</li><li>[Where is my log ID?](https://docs.elmah.io/where-is-my-log-id/)</li><li>[How to configure API key permissions](https://docs.elmah.io/how-to-configure-api-key-permissions/)</li></ul>
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ElmahIoApi);
  }
}(this, function(expect, ElmahIoApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ElmahIoApi.MessageOverview();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MessageOverview', function() {
    it('should create an instance of MessageOverview', function() {
      // uncomment below and update the code to test MessageOverview
      //var instance = new ElmahIoApi.MessageOverview();
      //expect(instance).to.be.a(ElmahIoApi.MessageOverview);
    });

    it('should have the property application (base name: "application")', function() {
      // uncomment below and update the code to test the property application
      //var instance = new ElmahIoApi.MessageOverview();
      //expect(instance).to.be();
    });

    it('should have the property breadcrumbs (base name: "breadcrumbs")', function() {
      // uncomment below and update the code to test the property breadcrumbs
      //var instance = new ElmahIoApi.MessageOverview();
      //expect(instance).to.be();
    });

    it('should have the property category (base name: "category")', function() {
      // uncomment below and update the code to test the property category
      //var instance = new ElmahIoApi.MessageOverview();
      //expect(instance).to.be();
    });

    it('should have the property code (base name: "code")', function() {
      // uncomment below and update the code to test the property code
      //var instance = new ElmahIoApi.MessageOverview();
      //expect(instance).to.be();
    });

    it('should have the property cookies (base name: "cookies")', function() {
      // uncomment below and update the code to test the property cookies
      //var instance = new ElmahIoApi.MessageOverview();
      //expect(instance).to.be();
    });

    it('should have the property correlationId (base name: "correlationId")', function() {
      // uncomment below and update the code to test the property correlationId
      //var instance = new ElmahIoApi.MessageOverview();
      //expect(instance).to.be();
    });

    it('should have the property data (base name: "data")', function() {
      // uncomment below and update the code to test the property data
      //var instance = new ElmahIoApi.MessageOverview();
      //expect(instance).to.be();
    });

    it('should have the property dateTime (base name: "dateTime")', function() {
      // uncomment below and update the code to test the property dateTime
      //var instance = new ElmahIoApi.MessageOverview();
      //expect(instance).to.be();
    });

    it('should have the property detail (base name: "detail")', function() {
      // uncomment below and update the code to test the property detail
      //var instance = new ElmahIoApi.MessageOverview();
      //expect(instance).to.be();
    });

    it('should have the property form (base name: "form")', function() {
      // uncomment below and update the code to test the property form
      //var instance = new ElmahIoApi.MessageOverview();
      //expect(instance).to.be();
    });

    it('should have the property hostname (base name: "hostname")', function() {
      // uncomment below and update the code to test the property hostname
      //var instance = new ElmahIoApi.MessageOverview();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new ElmahIoApi.MessageOverview();
      //expect(instance).to.be();
    });

    it('should have the property method (base name: "method")', function() {
      // uncomment below and update the code to test the property method
      //var instance = new ElmahIoApi.MessageOverview();
      //expect(instance).to.be();
    });

    it('should have the property queryString (base name: "queryString")', function() {
      // uncomment below and update the code to test the property queryString
      //var instance = new ElmahIoApi.MessageOverview();
      //expect(instance).to.be();
    });

    it('should have the property serverVariables (base name: "serverVariables")', function() {
      // uncomment below and update the code to test the property serverVariables
      //var instance = new ElmahIoApi.MessageOverview();
      //expect(instance).to.be();
    });

    it('should have the property severity (base name: "severity")', function() {
      // uncomment below and update the code to test the property severity
      //var instance = new ElmahIoApi.MessageOverview();
      //expect(instance).to.be();
    });

    it('should have the property source (base name: "source")', function() {
      // uncomment below and update the code to test the property source
      //var instance = new ElmahIoApi.MessageOverview();
      //expect(instance).to.be();
    });

    it('should have the property statusCode (base name: "statusCode")', function() {
      // uncomment below and update the code to test the property statusCode
      //var instance = new ElmahIoApi.MessageOverview();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new ElmahIoApi.MessageOverview();
      //expect(instance).to.be();
    });

    it('should have the property titleTemplate (base name: "titleTemplate")', function() {
      // uncomment below and update the code to test the property titleTemplate
      //var instance = new ElmahIoApi.MessageOverview();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new ElmahIoApi.MessageOverview();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new ElmahIoApi.MessageOverview();
      //expect(instance).to.be();
    });

    it('should have the property user (base name: "user")', function() {
      // uncomment below and update the code to test the property user
      //var instance = new ElmahIoApi.MessageOverview();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new ElmahIoApi.MessageOverview();
      //expect(instance).to.be();
    });

  });

}));
