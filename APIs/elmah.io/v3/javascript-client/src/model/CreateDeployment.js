/**
 * elmah.io API
 * This is the public REST API for elmah.io. All of the integrations communicates with elmah.io through this API.<br/><br/>For additional help getting started with the API, visit the following help articles:<br/><ul><li>[Using the REST API](https://docs.elmah.io/using-the-rest-api/)</li><li>[Where is my API key?](https://docs.elmah.io/where-is-my-api-key/)</li><li>[Where is my log ID?](https://docs.elmah.io/where-is-my-log-id/)</li><li>[How to configure API key permissions](https://docs.elmah.io/how-to-configure-api-key-permissions/)</li></ul>
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateDeployment model module.
 * @module model/CreateDeployment
 * @version v3
 */
class CreateDeployment {
    /**
     * Constructs a new <code>CreateDeployment</code>.
     * @alias module:model/CreateDeployment
     * @param version {String} The version number of this deployment. The value of version can be a SemVer compliant string or any other  syntax that you are using as your version numbering scheme.
     */
    constructor(version) { 
        
        CreateDeployment.initialize(this, version);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, version) { 
        obj['version'] = version;
    }

    /**
     * Constructs a <code>CreateDeployment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateDeployment} obj Optional instance to populate.
     * @return {module:model/CreateDeployment} The populated <code>CreateDeployment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateDeployment();

            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('logId')) {
                obj['logId'] = ApiClient.convertToType(data['logId'], 'String');
            }
            if (data.hasOwnProperty('userEmail')) {
                obj['userEmail'] = ApiClient.convertToType(data['userEmail'], 'String');
            }
            if (data.hasOwnProperty('userName')) {
                obj['userName'] = ApiClient.convertToType(data['userName'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateDeployment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateDeployment</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateDeployment.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['logId'] && !(typeof data['logId'] === 'string' || data['logId'] instanceof String)) {
            throw new Error("Expected the field `logId` to be a primitive type in the JSON string but got " + data['logId']);
        }
        // ensure the json data is a string
        if (data['userEmail'] && !(typeof data['userEmail'] === 'string' || data['userEmail'] instanceof String)) {
            throw new Error("Expected the field `userEmail` to be a primitive type in the JSON string but got " + data['userEmail']);
        }
        // ensure the json data is a string
        if (data['userName'] && !(typeof data['userName'] === 'string' || data['userName'] instanceof String)) {
            throw new Error("Expected the field `userName` to be a primitive type in the JSON string but got " + data['userName']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}

CreateDeployment.RequiredProperties = ["version"];

/**
 * When was this deployment created in UTC. Defaults to current time if not specified.
 * @member {Date} created
 */
CreateDeployment.prototype['created'] = undefined;

/**
 * Optional description of this deployment. Can be markdown or clear text.
 * @member {String} description
 */
CreateDeployment.prototype['description'] = undefined;

/**
 * As default, deployments are attached all logs of the organization. If you want a deployment to  attach to a single log only, set this to the ID of that log.
 * @member {String} logId
 */
CreateDeployment.prototype['logId'] = undefined;

/**
 * The email of the person responsible for creating this deployment. This can be the email taken from  your deployment server (like Azure DevOps or Octopus).
 * @member {String} userEmail
 */
CreateDeployment.prototype['userEmail'] = undefined;

/**
 * The name of the person responsible for creating this deployment. This can be the name taken from  your deployment server (like Azure DevOps or Octopus).
 * @member {String} userName
 */
CreateDeployment.prototype['userName'] = undefined;

/**
 * The version number of this deployment. The value of version can be a SemVer compliant string or any other  syntax that you are using as your version numbering scheme.
 * @member {String} version
 */
CreateDeployment.prototype['version'] = undefined;






export default CreateDeployment;

