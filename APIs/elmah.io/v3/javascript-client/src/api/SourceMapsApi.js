/**
 * elmah.io API
 * This is the public REST API for elmah.io. All of the integrations communicates with elmah.io through this API.<br/><br/>For additional help getting started with the API, visit the following help articles:<br/><ul><li>[Using the REST API](https://docs.elmah.io/using-the-rest-api/)</li><li>[Where is my API key?](https://docs.elmah.io/where-is-my-api-key/)</li><li>[Where is my log ID?](https://docs.elmah.io/where-is-my-log-id/)</li><li>[How to configure API key permissions](https://docs.elmah.io/how-to-configure-api-key-permissions/)</li></ul>
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* SourceMaps service.
* @module api/SourceMapsApi
* @version v3
*/
export default class SourceMapsApi {

    /**
    * Constructs a new SourceMapsApi. 
    * @alias module:api/SourceMapsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the sourceMapsCreateOrUpdate operation.
     * @callback module:api/SourceMapsApi~sourceMapsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update a translation between a minified JavaScript path to the minified JavaScript and source map files.
     * Required permission: `sourcemaps_write`
     * @param {String} logId The ID of the log which should contain the minified JavaScript and source map.
     * @param {File} minifiedJavaScript The minified JavaScript file. Only files with an extension of .js and content type of text/javascript will be accepted.
     * @param {String} path An URL to the online minified JavaScript file. The URL can be absolute or relative but will always be converted to a relative path (no protocol, domain, and query parameters).  elmah.io uses this path to lookup any lines in a JS stack trace that will need de-minification.
     * @param {File} sourceMap The source map file. Only files with an extension of .map and content type of application/json will be accepted.
     * @param {module:api/SourceMapsApi~sourceMapsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     */
    sourceMapsCreateOrUpdate(logId, minifiedJavaScript, path, sourceMap, callback) {
      let postBody = null;
      // verify the required parameter 'logId' is set
      if (logId === undefined || logId === null) {
        throw new Error("Missing the required parameter 'logId' when calling sourceMapsCreateOrUpdate");
      }
      // verify the required parameter 'minifiedJavaScript' is set
      if (minifiedJavaScript === undefined || minifiedJavaScript === null) {
        throw new Error("Missing the required parameter 'minifiedJavaScript' when calling sourceMapsCreateOrUpdate");
      }
      // verify the required parameter 'path' is set
      if (path === undefined || path === null) {
        throw new Error("Missing the required parameter 'path' when calling sourceMapsCreateOrUpdate");
      }
      // verify the required parameter 'sourceMap' is set
      if (sourceMap === undefined || sourceMap === null) {
        throw new Error("Missing the required parameter 'sourceMap' when calling sourceMapsCreateOrUpdate");
      }

      let pathParams = {
        'logId': logId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'MinifiedJavaScript': minifiedJavaScript,
        'Path': path,
        'SourceMap': sourceMap
      };

      let authNames = ['api_key'];
      let contentTypes = ['multipart/form-data'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/v3/sourcemaps/{logId}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
