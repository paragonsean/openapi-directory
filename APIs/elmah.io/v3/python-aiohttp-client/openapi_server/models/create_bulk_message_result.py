# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateBulkMessageResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, location: str=None, status_code: int=None):
        """CreateBulkMessageResult - a model defined in OpenAPI

        :param location: The location of this CreateBulkMessageResult.
        :param status_code: The status_code of this CreateBulkMessageResult.
        """
        self.openapi_types = {
            'location': str,
            'status_code': int
        }

        self.attribute_map = {
            'location': 'location',
            'status_code': 'statusCode'
        }

        self._location = location
        self._status_code = status_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateBulkMessageResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateBulkMessageResult of this CreateBulkMessageResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location(self):
        """Gets the location of this CreateBulkMessageResult.

        The location of the created message if StatusCode equals Created.

        :return: The location of this CreateBulkMessageResult.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this CreateBulkMessageResult.

        The location of the created message if StatusCode equals Created.

        :param location: The location of this CreateBulkMessageResult.
        :type location: str
        """

        self._location = location

    @property
    def status_code(self):
        """Gets the status_code of this CreateBulkMessageResult.

        Status code of the individual messages as if it were being created through the non-bulk endpoint.  If a message was succesfully created, the status code will be 201 and location will contain an URL.  If a message was ignored, the status code will be 200 and the location will be empty.

        :return: The status_code of this CreateBulkMessageResult.
        :rtype: int
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this CreateBulkMessageResult.

        Status code of the individual messages as if it were being created through the non-bulk endpoint.  If a message was succesfully created, the status code will be 201 and location will contain an URL.  If a message was ignored, the status code will be 200 and the location will be empty.

        :param status_code: The status_code of this CreateBulkMessageResult.
        :type status_code: int
        """

        self._status_code = status_code
