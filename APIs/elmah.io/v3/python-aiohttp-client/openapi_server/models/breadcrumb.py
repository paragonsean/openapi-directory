# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Breadcrumb(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: str=None, date_time: datetime=None, message: str=None, severity: str=None):
        """Breadcrumb - a model defined in OpenAPI

        :param action: The action of this Breadcrumb.
        :param date_time: The date_time of this Breadcrumb.
        :param message: The message of this Breadcrumb.
        :param severity: The severity of this Breadcrumb.
        """
        self.openapi_types = {
            'action': str,
            'date_time': datetime,
            'message': str,
            'severity': str
        }

        self.attribute_map = {
            'action': 'action',
            'date_time': 'dateTime',
            'message': 'message',
            'severity': 'severity'
        }

        self._action = action
        self._date_time = date_time
        self._message = message
        self._severity = severity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Breadcrumb':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Breadcrumb of this Breadcrumb.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this Breadcrumb.

        An action representing the breadcrumb. You can set a custom action or use one of the built-in: click, submit, navigation, request, error.

        :return: The action of this Breadcrumb.
        :rtype: str
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this Breadcrumb.

        An action representing the breadcrumb. You can set a custom action or use one of the built-in: click, submit, navigation, request, error.

        :param action: The action of this Breadcrumb.
        :type action: str
        """

        self._action = action

    @property
    def date_time(self):
        """Gets the date_time of this Breadcrumb.

        The date and time in UTC of the breadcrumb. If no date and time is provided, we will use the current date and time in UTC.

        :return: The date_time of this Breadcrumb.
        :rtype: datetime
        """
        return self._date_time

    @date_time.setter
    def date_time(self, date_time):
        """Sets the date_time of this Breadcrumb.

        The date and time in UTC of the breadcrumb. If no date and time is provided, we will use the current date and time in UTC.

        :param date_time: The date_time of this Breadcrumb.
        :type date_time: datetime
        """

        self._date_time = date_time

    @property
    def message(self):
        """Gets the message of this Breadcrumb.

        A message representing the breadcrumb. This should elaborate on the action.

        :return: The message of this Breadcrumb.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this Breadcrumb.

        A message representing the breadcrumb. This should elaborate on the action.

        :param message: The message of this Breadcrumb.
        :type message: str
        """

        self._message = message

    @property
    def severity(self):
        """Gets the severity of this Breadcrumb.

        An enum value representing the severity of this breadcrumb. The following values are allowed: Verbose, Debug, Information, Warning, Error, Fatal.

        :return: The severity of this Breadcrumb.
        :rtype: str
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this Breadcrumb.

        An enum value representing the severity of this breadcrumb. The following values are allowed: Verbose, Debug, Information, Warning, Error, Fatal.

        :param severity: The severity of this Breadcrumb.
        :type severity: str
        """

        self._severity = severity
