# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.message_overview import MessageOverview
from openapi_server import util


class MessagesResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, messages: List[MessageOverview]=None, total: int=None):
        """MessagesResult - a model defined in OpenAPI

        :param messages: The messages of this MessagesResult.
        :param total: The total of this MessagesResult.
        """
        self.openapi_types = {
            'messages': List[MessageOverview],
            'total': int
        }

        self.attribute_map = {
            'messages': 'messages',
            'total': 'total'
        }

        self._messages = messages
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MessagesResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MessagesResult of this MessagesResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def messages(self):
        """Gets the messages of this MessagesResult.

        Log messages.

        :return: The messages of this MessagesResult.
        :rtype: List[MessageOverview]
        """
        return self._messages

    @messages.setter
    def messages(self, messages):
        """Sets the messages of this MessagesResult.

        Log messages.

        :param messages: The messages of this MessagesResult.
        :type messages: List[MessageOverview]
        """

        self._messages = messages

    @property
    def total(self):
        """Gets the total of this MessagesResult.

        The total number of log messages found.

        :return: The total of this MessagesResult.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this MessagesResult.

        The total number of log messages found.

        :param total: The total of this MessagesResult.
        :type total: int
        """

        self._total = total
