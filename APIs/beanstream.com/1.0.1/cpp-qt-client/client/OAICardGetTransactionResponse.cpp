/**
 * Beanstream Payments
 * https://www.beanstream.com/api/v1
 *
 * The version of the OpenAPI document: 1.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICardGetTransactionResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICardGetTransactionResponse::OAICardGetTransactionResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICardGetTransactionResponse::OAICardGetTransactionResponse() {
    this->initializeModel();
}

OAICardGetTransactionResponse::~OAICardGetTransactionResponse() {}

void OAICardGetTransactionResponse::initializeModel() {

    m_address_match_isSet = false;
    m_address_match_isValid = false;

    m_avs_result_isSet = false;
    m_avs_result_isValid = false;

    m_card_type_isSet = false;
    m_card_type_isValid = false;

    m_cvd_match_isSet = false;
    m_cvd_match_isValid = false;

    m_expiry_month_isSet = false;
    m_expiry_month_isValid = false;

    m_expiry_year_isSet = false;
    m_expiry_year_isValid = false;

    m_last_four_isSet = false;
    m_last_four_isValid = false;
}

void OAICardGetTransactionResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICardGetTransactionResponse::fromJsonObject(QJsonObject json) {

    m_address_match_isValid = ::OpenAPI::fromJsonValue(m_address_match, json[QString("address_match")]);
    m_address_match_isSet = !json[QString("address_match")].isNull() && m_address_match_isValid;

    m_avs_result_isValid = ::OpenAPI::fromJsonValue(m_avs_result, json[QString("avs_result")]);
    m_avs_result_isSet = !json[QString("avs_result")].isNull() && m_avs_result_isValid;

    m_card_type_isValid = ::OpenAPI::fromJsonValue(m_card_type, json[QString("card_type")]);
    m_card_type_isSet = !json[QString("card_type")].isNull() && m_card_type_isValid;

    m_cvd_match_isValid = ::OpenAPI::fromJsonValue(m_cvd_match, json[QString("cvd_match")]);
    m_cvd_match_isSet = !json[QString("cvd_match")].isNull() && m_cvd_match_isValid;

    m_expiry_month_isValid = ::OpenAPI::fromJsonValue(m_expiry_month, json[QString("expiry_month")]);
    m_expiry_month_isSet = !json[QString("expiry_month")].isNull() && m_expiry_month_isValid;

    m_expiry_year_isValid = ::OpenAPI::fromJsonValue(m_expiry_year, json[QString("expiry_year")]);
    m_expiry_year_isSet = !json[QString("expiry_year")].isNull() && m_expiry_year_isValid;

    m_last_four_isValid = ::OpenAPI::fromJsonValue(m_last_four, json[QString("last_four")]);
    m_last_four_isSet = !json[QString("last_four")].isNull() && m_last_four_isValid;
}

QString OAICardGetTransactionResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICardGetTransactionResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_address_match_isSet) {
        obj.insert(QString("address_match"), ::OpenAPI::toJsonValue(m_address_match));
    }
    if (m_avs_result_isSet) {
        obj.insert(QString("avs_result"), ::OpenAPI::toJsonValue(m_avs_result));
    }
    if (m_card_type_isSet) {
        obj.insert(QString("card_type"), ::OpenAPI::toJsonValue(m_card_type));
    }
    if (m_cvd_match_isSet) {
        obj.insert(QString("cvd_match"), ::OpenAPI::toJsonValue(m_cvd_match));
    }
    if (m_expiry_month_isSet) {
        obj.insert(QString("expiry_month"), ::OpenAPI::toJsonValue(m_expiry_month));
    }
    if (m_expiry_year_isSet) {
        obj.insert(QString("expiry_year"), ::OpenAPI::toJsonValue(m_expiry_year));
    }
    if (m_last_four_isSet) {
        obj.insert(QString("last_four"), ::OpenAPI::toJsonValue(m_last_four));
    }
    return obj;
}

qint32 OAICardGetTransactionResponse::getAddressMatch() const {
    return m_address_match;
}
void OAICardGetTransactionResponse::setAddressMatch(const qint32 &address_match) {
    m_address_match = address_match;
    m_address_match_isSet = true;
}

bool OAICardGetTransactionResponse::is_address_match_Set() const{
    return m_address_match_isSet;
}

bool OAICardGetTransactionResponse::is_address_match_Valid() const{
    return m_address_match_isValid;
}

QString OAICardGetTransactionResponse::getAvsResult() const {
    return m_avs_result;
}
void OAICardGetTransactionResponse::setAvsResult(const QString &avs_result) {
    m_avs_result = avs_result;
    m_avs_result_isSet = true;
}

bool OAICardGetTransactionResponse::is_avs_result_Set() const{
    return m_avs_result_isSet;
}

bool OAICardGetTransactionResponse::is_avs_result_Valid() const{
    return m_avs_result_isValid;
}

QString OAICardGetTransactionResponse::getCardType() const {
    return m_card_type;
}
void OAICardGetTransactionResponse::setCardType(const QString &card_type) {
    m_card_type = card_type;
    m_card_type_isSet = true;
}

bool OAICardGetTransactionResponse::is_card_type_Set() const{
    return m_card_type_isSet;
}

bool OAICardGetTransactionResponse::is_card_type_Valid() const{
    return m_card_type_isValid;
}

qint32 OAICardGetTransactionResponse::getCvdMatch() const {
    return m_cvd_match;
}
void OAICardGetTransactionResponse::setCvdMatch(const qint32 &cvd_match) {
    m_cvd_match = cvd_match;
    m_cvd_match_isSet = true;
}

bool OAICardGetTransactionResponse::is_cvd_match_Set() const{
    return m_cvd_match_isSet;
}

bool OAICardGetTransactionResponse::is_cvd_match_Valid() const{
    return m_cvd_match_isValid;
}

QString OAICardGetTransactionResponse::getExpiryMonth() const {
    return m_expiry_month;
}
void OAICardGetTransactionResponse::setExpiryMonth(const QString &expiry_month) {
    m_expiry_month = expiry_month;
    m_expiry_month_isSet = true;
}

bool OAICardGetTransactionResponse::is_expiry_month_Set() const{
    return m_expiry_month_isSet;
}

bool OAICardGetTransactionResponse::is_expiry_month_Valid() const{
    return m_expiry_month_isValid;
}

QString OAICardGetTransactionResponse::getExpiryYear() const {
    return m_expiry_year;
}
void OAICardGetTransactionResponse::setExpiryYear(const QString &expiry_year) {
    m_expiry_year = expiry_year;
    m_expiry_year_isSet = true;
}

bool OAICardGetTransactionResponse::is_expiry_year_Set() const{
    return m_expiry_year_isSet;
}

bool OAICardGetTransactionResponse::is_expiry_year_Valid() const{
    return m_expiry_year_isValid;
}

QString OAICardGetTransactionResponse::getLastFour() const {
    return m_last_four;
}
void OAICardGetTransactionResponse::setLastFour(const QString &last_four) {
    m_last_four = last_four;
    m_last_four_isSet = true;
}

bool OAICardGetTransactionResponse::is_last_four_Set() const{
    return m_last_four_isSet;
}

bool OAICardGetTransactionResponse::is_last_four_Valid() const{
    return m_last_four_isValid;
}

bool OAICardGetTransactionResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_match_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_avs_result_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_card_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cvd_match_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiry_month_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiry_year_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_four_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICardGetTransactionResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
