/**
 * Beanstream Payments
 * https://www.beanstream.com/api/v1
 *
 * The version of the OpenAPI document: 1.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISearchRecord.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISearchRecord::OAISearchRecord(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISearchRecord::OAISearchRecord() {
    this->initializeModel();
}

OAISearchRecord::~OAISearchRecord() {}

void OAISearchRecord::initializeModel() {

    m_b_address1_isSet = false;
    m_b_address1_isValid = false;

    m_b_address2_isSet = false;
    m_b_address2_isValid = false;

    m_b_city_isSet = false;
    m_b_city_isValid = false;

    m_b_country_isSet = false;
    m_b_country_isValid = false;

    m_b_email_isSet = false;
    m_b_email_isValid = false;

    m_b_name_isSet = false;
    m_b_name_isValid = false;

    m_b_phone_isSet = false;
    m_b_phone_isValid = false;

    m_b_postal_isSet = false;
    m_b_postal_isValid = false;

    m_b_province_isSet = false;
    m_b_province_isValid = false;

    m_customer_code_isSet = false;
    m_customer_code_isValid = false;

    m_message_id_isSet = false;
    m_message_id_isValid = false;

    m_message_text_isSet = false;
    m_message_text_isValid = false;

    m_product_id_isSet = false;
    m_product_id_isValid = false;

    m_product_name_isSet = false;
    m_product_name_isValid = false;

    m_ref1_isSet = false;
    m_ref1_isValid = false;

    m_ref2_isSet = false;
    m_ref2_isValid = false;

    m_ref3_isSet = false;
    m_ref3_isValid = false;

    m_ref4_isSet = false;
    m_ref4_isValid = false;

    m_ref5_isSet = false;
    m_ref5_isValid = false;

    m_row_id_isSet = false;
    m_row_id_isValid = false;

    m_s_address1_isSet = false;
    m_s_address1_isValid = false;

    m_s_address2_isSet = false;
    m_s_address2_isValid = false;

    m_s_city_isSet = false;
    m_s_city_isValid = false;

    m_s_country_isSet = false;
    m_s_country_isValid = false;

    m_s_email_isSet = false;
    m_s_email_isValid = false;

    m_s_name_isSet = false;
    m_s_name_isValid = false;

    m_s_phone_isSet = false;
    m_s_phone_isValid = false;

    m_s_postal_isSet = false;
    m_s_postal_isValid = false;

    m_s_province_isSet = false;
    m_s_province_isValid = false;

    m_trn_amount_isSet = false;
    m_trn_amount_isValid = false;

    m_trn_approval_code_isSet = false;
    m_trn_approval_code_isValid = false;

    m_trn_avs_result_isSet = false;
    m_trn_avs_result_isValid = false;

    m_trn_batch_no_isSet = false;
    m_trn_batch_no_isValid = false;

    m_trn_card_expiry_isSet = false;
    m_trn_card_expiry_isValid = false;

    m_trn_card_owner_isSet = false;
    m_trn_card_owner_isValid = false;

    m_trn_card_type_isSet = false;
    m_trn_card_type_isValid = false;

    m_trn_completions_isSet = false;
    m_trn_completions_isValid = false;

    m_trn_cvd_result_isSet = false;
    m_trn_cvd_result_isValid = false;

    m_trn_date_time_isSet = false;
    m_trn_date_time_isValid = false;

    m_trn_id_isSet = false;
    m_trn_id_isValid = false;

    m_trn_ip_isSet = false;
    m_trn_ip_isValid = false;

    m_trn_masked_card_isSet = false;
    m_trn_masked_card_isValid = false;

    m_trn_order_number_isSet = false;
    m_trn_order_number_isValid = false;

    m_trn_payment_method_isSet = false;
    m_trn_payment_method_isValid = false;

    m_trn_reference_isSet = false;
    m_trn_reference_isValid = false;

    m_trn_response_isSet = false;
    m_trn_response_isValid = false;

    m_trn_returns_isSet = false;
    m_trn_returns_isValid = false;

    m_trn_type_isSet = false;
    m_trn_type_isValid = false;

    m_trn_voided_isSet = false;
    m_trn_voided_isValid = false;
}

void OAISearchRecord::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISearchRecord::fromJsonObject(QJsonObject json) {

    m_b_address1_isValid = ::OpenAPI::fromJsonValue(m_b_address1, json[QString("b_address1")]);
    m_b_address1_isSet = !json[QString("b_address1")].isNull() && m_b_address1_isValid;

    m_b_address2_isValid = ::OpenAPI::fromJsonValue(m_b_address2, json[QString("b_address2")]);
    m_b_address2_isSet = !json[QString("b_address2")].isNull() && m_b_address2_isValid;

    m_b_city_isValid = ::OpenAPI::fromJsonValue(m_b_city, json[QString("b_city")]);
    m_b_city_isSet = !json[QString("b_city")].isNull() && m_b_city_isValid;

    m_b_country_isValid = ::OpenAPI::fromJsonValue(m_b_country, json[QString("b_country")]);
    m_b_country_isSet = !json[QString("b_country")].isNull() && m_b_country_isValid;

    m_b_email_isValid = ::OpenAPI::fromJsonValue(m_b_email, json[QString("b_email")]);
    m_b_email_isSet = !json[QString("b_email")].isNull() && m_b_email_isValid;

    m_b_name_isValid = ::OpenAPI::fromJsonValue(m_b_name, json[QString("b_name")]);
    m_b_name_isSet = !json[QString("b_name")].isNull() && m_b_name_isValid;

    m_b_phone_isValid = ::OpenAPI::fromJsonValue(m_b_phone, json[QString("b_phone")]);
    m_b_phone_isSet = !json[QString("b_phone")].isNull() && m_b_phone_isValid;

    m_b_postal_isValid = ::OpenAPI::fromJsonValue(m_b_postal, json[QString("b_postal")]);
    m_b_postal_isSet = !json[QString("b_postal")].isNull() && m_b_postal_isValid;

    m_b_province_isValid = ::OpenAPI::fromJsonValue(m_b_province, json[QString("b_province")]);
    m_b_province_isSet = !json[QString("b_province")].isNull() && m_b_province_isValid;

    m_customer_code_isValid = ::OpenAPI::fromJsonValue(m_customer_code, json[QString("customer_code")]);
    m_customer_code_isSet = !json[QString("customer_code")].isNull() && m_customer_code_isValid;

    m_message_id_isValid = ::OpenAPI::fromJsonValue(m_message_id, json[QString("message_id")]);
    m_message_id_isSet = !json[QString("message_id")].isNull() && m_message_id_isValid;

    m_message_text_isValid = ::OpenAPI::fromJsonValue(m_message_text, json[QString("message_text")]);
    m_message_text_isSet = !json[QString("message_text")].isNull() && m_message_text_isValid;

    m_product_id_isValid = ::OpenAPI::fromJsonValue(m_product_id, json[QString("product_id")]);
    m_product_id_isSet = !json[QString("product_id")].isNull() && m_product_id_isValid;

    m_product_name_isValid = ::OpenAPI::fromJsonValue(m_product_name, json[QString("product_name")]);
    m_product_name_isSet = !json[QString("product_name")].isNull() && m_product_name_isValid;

    m_ref1_isValid = ::OpenAPI::fromJsonValue(m_ref1, json[QString("ref1")]);
    m_ref1_isSet = !json[QString("ref1")].isNull() && m_ref1_isValid;

    m_ref2_isValid = ::OpenAPI::fromJsonValue(m_ref2, json[QString("ref2")]);
    m_ref2_isSet = !json[QString("ref2")].isNull() && m_ref2_isValid;

    m_ref3_isValid = ::OpenAPI::fromJsonValue(m_ref3, json[QString("ref3")]);
    m_ref3_isSet = !json[QString("ref3")].isNull() && m_ref3_isValid;

    m_ref4_isValid = ::OpenAPI::fromJsonValue(m_ref4, json[QString("ref4")]);
    m_ref4_isSet = !json[QString("ref4")].isNull() && m_ref4_isValid;

    m_ref5_isValid = ::OpenAPI::fromJsonValue(m_ref5, json[QString("ref5")]);
    m_ref5_isSet = !json[QString("ref5")].isNull() && m_ref5_isValid;

    m_row_id_isValid = ::OpenAPI::fromJsonValue(m_row_id, json[QString("row_id")]);
    m_row_id_isSet = !json[QString("row_id")].isNull() && m_row_id_isValid;

    m_s_address1_isValid = ::OpenAPI::fromJsonValue(m_s_address1, json[QString("s_address1")]);
    m_s_address1_isSet = !json[QString("s_address1")].isNull() && m_s_address1_isValid;

    m_s_address2_isValid = ::OpenAPI::fromJsonValue(m_s_address2, json[QString("s_address2")]);
    m_s_address2_isSet = !json[QString("s_address2")].isNull() && m_s_address2_isValid;

    m_s_city_isValid = ::OpenAPI::fromJsonValue(m_s_city, json[QString("s_city")]);
    m_s_city_isSet = !json[QString("s_city")].isNull() && m_s_city_isValid;

    m_s_country_isValid = ::OpenAPI::fromJsonValue(m_s_country, json[QString("s_country")]);
    m_s_country_isSet = !json[QString("s_country")].isNull() && m_s_country_isValid;

    m_s_email_isValid = ::OpenAPI::fromJsonValue(m_s_email, json[QString("s_email")]);
    m_s_email_isSet = !json[QString("s_email")].isNull() && m_s_email_isValid;

    m_s_name_isValid = ::OpenAPI::fromJsonValue(m_s_name, json[QString("s_name")]);
    m_s_name_isSet = !json[QString("s_name")].isNull() && m_s_name_isValid;

    m_s_phone_isValid = ::OpenAPI::fromJsonValue(m_s_phone, json[QString("s_phone")]);
    m_s_phone_isSet = !json[QString("s_phone")].isNull() && m_s_phone_isValid;

    m_s_postal_isValid = ::OpenAPI::fromJsonValue(m_s_postal, json[QString("s_postal")]);
    m_s_postal_isSet = !json[QString("s_postal")].isNull() && m_s_postal_isValid;

    m_s_province_isValid = ::OpenAPI::fromJsonValue(m_s_province, json[QString("s_province")]);
    m_s_province_isSet = !json[QString("s_province")].isNull() && m_s_province_isValid;

    m_trn_amount_isValid = ::OpenAPI::fromJsonValue(m_trn_amount, json[QString("trn_amount")]);
    m_trn_amount_isSet = !json[QString("trn_amount")].isNull() && m_trn_amount_isValid;

    m_trn_approval_code_isValid = ::OpenAPI::fromJsonValue(m_trn_approval_code, json[QString("trn_approval_code")]);
    m_trn_approval_code_isSet = !json[QString("trn_approval_code")].isNull() && m_trn_approval_code_isValid;

    m_trn_avs_result_isValid = ::OpenAPI::fromJsonValue(m_trn_avs_result, json[QString("trn_avs_result")]);
    m_trn_avs_result_isSet = !json[QString("trn_avs_result")].isNull() && m_trn_avs_result_isValid;

    m_trn_batch_no_isValid = ::OpenAPI::fromJsonValue(m_trn_batch_no, json[QString("trn_batch_no")]);
    m_trn_batch_no_isSet = !json[QString("trn_batch_no")].isNull() && m_trn_batch_no_isValid;

    m_trn_card_expiry_isValid = ::OpenAPI::fromJsonValue(m_trn_card_expiry, json[QString("trn_card_expiry")]);
    m_trn_card_expiry_isSet = !json[QString("trn_card_expiry")].isNull() && m_trn_card_expiry_isValid;

    m_trn_card_owner_isValid = ::OpenAPI::fromJsonValue(m_trn_card_owner, json[QString("trn_card_owner")]);
    m_trn_card_owner_isSet = !json[QString("trn_card_owner")].isNull() && m_trn_card_owner_isValid;

    m_trn_card_type_isValid = ::OpenAPI::fromJsonValue(m_trn_card_type, json[QString("trn_card_type")]);
    m_trn_card_type_isSet = !json[QString("trn_card_type")].isNull() && m_trn_card_type_isValid;

    m_trn_completions_isValid = ::OpenAPI::fromJsonValue(m_trn_completions, json[QString("trn_completions")]);
    m_trn_completions_isSet = !json[QString("trn_completions")].isNull() && m_trn_completions_isValid;

    m_trn_cvd_result_isValid = ::OpenAPI::fromJsonValue(m_trn_cvd_result, json[QString("trn_cvd_result")]);
    m_trn_cvd_result_isSet = !json[QString("trn_cvd_result")].isNull() && m_trn_cvd_result_isValid;

    m_trn_date_time_isValid = ::OpenAPI::fromJsonValue(m_trn_date_time, json[QString("trn_date_time")]);
    m_trn_date_time_isSet = !json[QString("trn_date_time")].isNull() && m_trn_date_time_isValid;

    m_trn_id_isValid = ::OpenAPI::fromJsonValue(m_trn_id, json[QString("trn_id")]);
    m_trn_id_isSet = !json[QString("trn_id")].isNull() && m_trn_id_isValid;

    m_trn_ip_isValid = ::OpenAPI::fromJsonValue(m_trn_ip, json[QString("trn_ip")]);
    m_trn_ip_isSet = !json[QString("trn_ip")].isNull() && m_trn_ip_isValid;

    m_trn_masked_card_isValid = ::OpenAPI::fromJsonValue(m_trn_masked_card, json[QString("trn_masked_card")]);
    m_trn_masked_card_isSet = !json[QString("trn_masked_card")].isNull() && m_trn_masked_card_isValid;

    m_trn_order_number_isValid = ::OpenAPI::fromJsonValue(m_trn_order_number, json[QString("trn_order_number")]);
    m_trn_order_number_isSet = !json[QString("trn_order_number")].isNull() && m_trn_order_number_isValid;

    m_trn_payment_method_isValid = ::OpenAPI::fromJsonValue(m_trn_payment_method, json[QString("trn_payment_method")]);
    m_trn_payment_method_isSet = !json[QString("trn_payment_method")].isNull() && m_trn_payment_method_isValid;

    m_trn_reference_isValid = ::OpenAPI::fromJsonValue(m_trn_reference, json[QString("trn_reference")]);
    m_trn_reference_isSet = !json[QString("trn_reference")].isNull() && m_trn_reference_isValid;

    m_trn_response_isValid = ::OpenAPI::fromJsonValue(m_trn_response, json[QString("trn_response")]);
    m_trn_response_isSet = !json[QString("trn_response")].isNull() && m_trn_response_isValid;

    m_trn_returns_isValid = ::OpenAPI::fromJsonValue(m_trn_returns, json[QString("trn_returns")]);
    m_trn_returns_isSet = !json[QString("trn_returns")].isNull() && m_trn_returns_isValid;

    m_trn_type_isValid = ::OpenAPI::fromJsonValue(m_trn_type, json[QString("trn_type")]);
    m_trn_type_isSet = !json[QString("trn_type")].isNull() && m_trn_type_isValid;

    m_trn_voided_isValid = ::OpenAPI::fromJsonValue(m_trn_voided, json[QString("trn_voided")]);
    m_trn_voided_isSet = !json[QString("trn_voided")].isNull() && m_trn_voided_isValid;
}

QString OAISearchRecord::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISearchRecord::asJsonObject() const {
    QJsonObject obj;
    if (m_b_address1_isSet) {
        obj.insert(QString("b_address1"), ::OpenAPI::toJsonValue(m_b_address1));
    }
    if (m_b_address2_isSet) {
        obj.insert(QString("b_address2"), ::OpenAPI::toJsonValue(m_b_address2));
    }
    if (m_b_city_isSet) {
        obj.insert(QString("b_city"), ::OpenAPI::toJsonValue(m_b_city));
    }
    if (m_b_country_isSet) {
        obj.insert(QString("b_country"), ::OpenAPI::toJsonValue(m_b_country));
    }
    if (m_b_email_isSet) {
        obj.insert(QString("b_email"), ::OpenAPI::toJsonValue(m_b_email));
    }
    if (m_b_name_isSet) {
        obj.insert(QString("b_name"), ::OpenAPI::toJsonValue(m_b_name));
    }
    if (m_b_phone_isSet) {
        obj.insert(QString("b_phone"), ::OpenAPI::toJsonValue(m_b_phone));
    }
    if (m_b_postal_isSet) {
        obj.insert(QString("b_postal"), ::OpenAPI::toJsonValue(m_b_postal));
    }
    if (m_b_province_isSet) {
        obj.insert(QString("b_province"), ::OpenAPI::toJsonValue(m_b_province));
    }
    if (m_customer_code_isSet) {
        obj.insert(QString("customer_code"), ::OpenAPI::toJsonValue(m_customer_code));
    }
    if (m_message_id_isSet) {
        obj.insert(QString("message_id"), ::OpenAPI::toJsonValue(m_message_id));
    }
    if (m_message_text_isSet) {
        obj.insert(QString("message_text"), ::OpenAPI::toJsonValue(m_message_text));
    }
    if (m_product_id_isSet) {
        obj.insert(QString("product_id"), ::OpenAPI::toJsonValue(m_product_id));
    }
    if (m_product_name_isSet) {
        obj.insert(QString("product_name"), ::OpenAPI::toJsonValue(m_product_name));
    }
    if (m_ref1_isSet) {
        obj.insert(QString("ref1"), ::OpenAPI::toJsonValue(m_ref1));
    }
    if (m_ref2_isSet) {
        obj.insert(QString("ref2"), ::OpenAPI::toJsonValue(m_ref2));
    }
    if (m_ref3_isSet) {
        obj.insert(QString("ref3"), ::OpenAPI::toJsonValue(m_ref3));
    }
    if (m_ref4_isSet) {
        obj.insert(QString("ref4"), ::OpenAPI::toJsonValue(m_ref4));
    }
    if (m_ref5_isSet) {
        obj.insert(QString("ref5"), ::OpenAPI::toJsonValue(m_ref5));
    }
    if (m_row_id_isSet) {
        obj.insert(QString("row_id"), ::OpenAPI::toJsonValue(m_row_id));
    }
    if (m_s_address1_isSet) {
        obj.insert(QString("s_address1"), ::OpenAPI::toJsonValue(m_s_address1));
    }
    if (m_s_address2_isSet) {
        obj.insert(QString("s_address2"), ::OpenAPI::toJsonValue(m_s_address2));
    }
    if (m_s_city_isSet) {
        obj.insert(QString("s_city"), ::OpenAPI::toJsonValue(m_s_city));
    }
    if (m_s_country_isSet) {
        obj.insert(QString("s_country"), ::OpenAPI::toJsonValue(m_s_country));
    }
    if (m_s_email_isSet) {
        obj.insert(QString("s_email"), ::OpenAPI::toJsonValue(m_s_email));
    }
    if (m_s_name_isSet) {
        obj.insert(QString("s_name"), ::OpenAPI::toJsonValue(m_s_name));
    }
    if (m_s_phone_isSet) {
        obj.insert(QString("s_phone"), ::OpenAPI::toJsonValue(m_s_phone));
    }
    if (m_s_postal_isSet) {
        obj.insert(QString("s_postal"), ::OpenAPI::toJsonValue(m_s_postal));
    }
    if (m_s_province_isSet) {
        obj.insert(QString("s_province"), ::OpenAPI::toJsonValue(m_s_province));
    }
    if (m_trn_amount_isSet) {
        obj.insert(QString("trn_amount"), ::OpenAPI::toJsonValue(m_trn_amount));
    }
    if (m_trn_approval_code_isSet) {
        obj.insert(QString("trn_approval_code"), ::OpenAPI::toJsonValue(m_trn_approval_code));
    }
    if (m_trn_avs_result_isSet) {
        obj.insert(QString("trn_avs_result"), ::OpenAPI::toJsonValue(m_trn_avs_result));
    }
    if (m_trn_batch_no_isSet) {
        obj.insert(QString("trn_batch_no"), ::OpenAPI::toJsonValue(m_trn_batch_no));
    }
    if (m_trn_card_expiry_isSet) {
        obj.insert(QString("trn_card_expiry"), ::OpenAPI::toJsonValue(m_trn_card_expiry));
    }
    if (m_trn_card_owner_isSet) {
        obj.insert(QString("trn_card_owner"), ::OpenAPI::toJsonValue(m_trn_card_owner));
    }
    if (m_trn_card_type_isSet) {
        obj.insert(QString("trn_card_type"), ::OpenAPI::toJsonValue(m_trn_card_type));
    }
    if (m_trn_completions_isSet) {
        obj.insert(QString("trn_completions"), ::OpenAPI::toJsonValue(m_trn_completions));
    }
    if (m_trn_cvd_result_isSet) {
        obj.insert(QString("trn_cvd_result"), ::OpenAPI::toJsonValue(m_trn_cvd_result));
    }
    if (m_trn_date_time_isSet) {
        obj.insert(QString("trn_date_time"), ::OpenAPI::toJsonValue(m_trn_date_time));
    }
    if (m_trn_id_isSet) {
        obj.insert(QString("trn_id"), ::OpenAPI::toJsonValue(m_trn_id));
    }
    if (m_trn_ip_isSet) {
        obj.insert(QString("trn_ip"), ::OpenAPI::toJsonValue(m_trn_ip));
    }
    if (m_trn_masked_card_isSet) {
        obj.insert(QString("trn_masked_card"), ::OpenAPI::toJsonValue(m_trn_masked_card));
    }
    if (m_trn_order_number_isSet) {
        obj.insert(QString("trn_order_number"), ::OpenAPI::toJsonValue(m_trn_order_number));
    }
    if (m_trn_payment_method_isSet) {
        obj.insert(QString("trn_payment_method"), ::OpenAPI::toJsonValue(m_trn_payment_method));
    }
    if (m_trn_reference_isSet) {
        obj.insert(QString("trn_reference"), ::OpenAPI::toJsonValue(m_trn_reference));
    }
    if (m_trn_response_isSet) {
        obj.insert(QString("trn_response"), ::OpenAPI::toJsonValue(m_trn_response));
    }
    if (m_trn_returns_isSet) {
        obj.insert(QString("trn_returns"), ::OpenAPI::toJsonValue(m_trn_returns));
    }
    if (m_trn_type_isSet) {
        obj.insert(QString("trn_type"), ::OpenAPI::toJsonValue(m_trn_type));
    }
    if (m_trn_voided_isSet) {
        obj.insert(QString("trn_voided"), ::OpenAPI::toJsonValue(m_trn_voided));
    }
    return obj;
}

QString OAISearchRecord::getBAddress1() const {
    return m_b_address1;
}
void OAISearchRecord::setBAddress1(const QString &b_address1) {
    m_b_address1 = b_address1;
    m_b_address1_isSet = true;
}

bool OAISearchRecord::is_b_address1_Set() const{
    return m_b_address1_isSet;
}

bool OAISearchRecord::is_b_address1_Valid() const{
    return m_b_address1_isValid;
}

QString OAISearchRecord::getBAddress2() const {
    return m_b_address2;
}
void OAISearchRecord::setBAddress2(const QString &b_address2) {
    m_b_address2 = b_address2;
    m_b_address2_isSet = true;
}

bool OAISearchRecord::is_b_address2_Set() const{
    return m_b_address2_isSet;
}

bool OAISearchRecord::is_b_address2_Valid() const{
    return m_b_address2_isValid;
}

QString OAISearchRecord::getBCity() const {
    return m_b_city;
}
void OAISearchRecord::setBCity(const QString &b_city) {
    m_b_city = b_city;
    m_b_city_isSet = true;
}

bool OAISearchRecord::is_b_city_Set() const{
    return m_b_city_isSet;
}

bool OAISearchRecord::is_b_city_Valid() const{
    return m_b_city_isValid;
}

QString OAISearchRecord::getBCountry() const {
    return m_b_country;
}
void OAISearchRecord::setBCountry(const QString &b_country) {
    m_b_country = b_country;
    m_b_country_isSet = true;
}

bool OAISearchRecord::is_b_country_Set() const{
    return m_b_country_isSet;
}

bool OAISearchRecord::is_b_country_Valid() const{
    return m_b_country_isValid;
}

QString OAISearchRecord::getBEmail() const {
    return m_b_email;
}
void OAISearchRecord::setBEmail(const QString &b_email) {
    m_b_email = b_email;
    m_b_email_isSet = true;
}

bool OAISearchRecord::is_b_email_Set() const{
    return m_b_email_isSet;
}

bool OAISearchRecord::is_b_email_Valid() const{
    return m_b_email_isValid;
}

QString OAISearchRecord::getBName() const {
    return m_b_name;
}
void OAISearchRecord::setBName(const QString &b_name) {
    m_b_name = b_name;
    m_b_name_isSet = true;
}

bool OAISearchRecord::is_b_name_Set() const{
    return m_b_name_isSet;
}

bool OAISearchRecord::is_b_name_Valid() const{
    return m_b_name_isValid;
}

QString OAISearchRecord::getBPhone() const {
    return m_b_phone;
}
void OAISearchRecord::setBPhone(const QString &b_phone) {
    m_b_phone = b_phone;
    m_b_phone_isSet = true;
}

bool OAISearchRecord::is_b_phone_Set() const{
    return m_b_phone_isSet;
}

bool OAISearchRecord::is_b_phone_Valid() const{
    return m_b_phone_isValid;
}

QString OAISearchRecord::getBPostal() const {
    return m_b_postal;
}
void OAISearchRecord::setBPostal(const QString &b_postal) {
    m_b_postal = b_postal;
    m_b_postal_isSet = true;
}

bool OAISearchRecord::is_b_postal_Set() const{
    return m_b_postal_isSet;
}

bool OAISearchRecord::is_b_postal_Valid() const{
    return m_b_postal_isValid;
}

QString OAISearchRecord::getBProvince() const {
    return m_b_province;
}
void OAISearchRecord::setBProvince(const QString &b_province) {
    m_b_province = b_province;
    m_b_province_isSet = true;
}

bool OAISearchRecord::is_b_province_Set() const{
    return m_b_province_isSet;
}

bool OAISearchRecord::is_b_province_Valid() const{
    return m_b_province_isValid;
}

QString OAISearchRecord::getCustomerCode() const {
    return m_customer_code;
}
void OAISearchRecord::setCustomerCode(const QString &customer_code) {
    m_customer_code = customer_code;
    m_customer_code_isSet = true;
}

bool OAISearchRecord::is_customer_code_Set() const{
    return m_customer_code_isSet;
}

bool OAISearchRecord::is_customer_code_Valid() const{
    return m_customer_code_isValid;
}

double OAISearchRecord::getMessageId() const {
    return m_message_id;
}
void OAISearchRecord::setMessageId(const double &message_id) {
    m_message_id = message_id;
    m_message_id_isSet = true;
}

bool OAISearchRecord::is_message_id_Set() const{
    return m_message_id_isSet;
}

bool OAISearchRecord::is_message_id_Valid() const{
    return m_message_id_isValid;
}

QString OAISearchRecord::getMessageText() const {
    return m_message_text;
}
void OAISearchRecord::setMessageText(const QString &message_text) {
    m_message_text = message_text;
    m_message_text_isSet = true;
}

bool OAISearchRecord::is_message_text_Set() const{
    return m_message_text_isSet;
}

bool OAISearchRecord::is_message_text_Valid() const{
    return m_message_text_isValid;
}

QString OAISearchRecord::getProductId() const {
    return m_product_id;
}
void OAISearchRecord::setProductId(const QString &product_id) {
    m_product_id = product_id;
    m_product_id_isSet = true;
}

bool OAISearchRecord::is_product_id_Set() const{
    return m_product_id_isSet;
}

bool OAISearchRecord::is_product_id_Valid() const{
    return m_product_id_isValid;
}

QString OAISearchRecord::getProductName() const {
    return m_product_name;
}
void OAISearchRecord::setProductName(const QString &product_name) {
    m_product_name = product_name;
    m_product_name_isSet = true;
}

bool OAISearchRecord::is_product_name_Set() const{
    return m_product_name_isSet;
}

bool OAISearchRecord::is_product_name_Valid() const{
    return m_product_name_isValid;
}

QString OAISearchRecord::getRef1() const {
    return m_ref1;
}
void OAISearchRecord::setRef1(const QString &ref1) {
    m_ref1 = ref1;
    m_ref1_isSet = true;
}

bool OAISearchRecord::is_ref1_Set() const{
    return m_ref1_isSet;
}

bool OAISearchRecord::is_ref1_Valid() const{
    return m_ref1_isValid;
}

QString OAISearchRecord::getRef2() const {
    return m_ref2;
}
void OAISearchRecord::setRef2(const QString &ref2) {
    m_ref2 = ref2;
    m_ref2_isSet = true;
}

bool OAISearchRecord::is_ref2_Set() const{
    return m_ref2_isSet;
}

bool OAISearchRecord::is_ref2_Valid() const{
    return m_ref2_isValid;
}

QString OAISearchRecord::getRef3() const {
    return m_ref3;
}
void OAISearchRecord::setRef3(const QString &ref3) {
    m_ref3 = ref3;
    m_ref3_isSet = true;
}

bool OAISearchRecord::is_ref3_Set() const{
    return m_ref3_isSet;
}

bool OAISearchRecord::is_ref3_Valid() const{
    return m_ref3_isValid;
}

QString OAISearchRecord::getRef4() const {
    return m_ref4;
}
void OAISearchRecord::setRef4(const QString &ref4) {
    m_ref4 = ref4;
    m_ref4_isSet = true;
}

bool OAISearchRecord::is_ref4_Set() const{
    return m_ref4_isSet;
}

bool OAISearchRecord::is_ref4_Valid() const{
    return m_ref4_isValid;
}

QString OAISearchRecord::getRef5() const {
    return m_ref5;
}
void OAISearchRecord::setRef5(const QString &ref5) {
    m_ref5 = ref5;
    m_ref5_isSet = true;
}

bool OAISearchRecord::is_ref5_Set() const{
    return m_ref5_isSet;
}

bool OAISearchRecord::is_ref5_Valid() const{
    return m_ref5_isValid;
}

double OAISearchRecord::getRowId() const {
    return m_row_id;
}
void OAISearchRecord::setRowId(const double &row_id) {
    m_row_id = row_id;
    m_row_id_isSet = true;
}

bool OAISearchRecord::is_row_id_Set() const{
    return m_row_id_isSet;
}

bool OAISearchRecord::is_row_id_Valid() const{
    return m_row_id_isValid;
}

QString OAISearchRecord::getSAddress1() const {
    return m_s_address1;
}
void OAISearchRecord::setSAddress1(const QString &s_address1) {
    m_s_address1 = s_address1;
    m_s_address1_isSet = true;
}

bool OAISearchRecord::is_s_address1_Set() const{
    return m_s_address1_isSet;
}

bool OAISearchRecord::is_s_address1_Valid() const{
    return m_s_address1_isValid;
}

QString OAISearchRecord::getSAddress2() const {
    return m_s_address2;
}
void OAISearchRecord::setSAddress2(const QString &s_address2) {
    m_s_address2 = s_address2;
    m_s_address2_isSet = true;
}

bool OAISearchRecord::is_s_address2_Set() const{
    return m_s_address2_isSet;
}

bool OAISearchRecord::is_s_address2_Valid() const{
    return m_s_address2_isValid;
}

QString OAISearchRecord::getSCity() const {
    return m_s_city;
}
void OAISearchRecord::setSCity(const QString &s_city) {
    m_s_city = s_city;
    m_s_city_isSet = true;
}

bool OAISearchRecord::is_s_city_Set() const{
    return m_s_city_isSet;
}

bool OAISearchRecord::is_s_city_Valid() const{
    return m_s_city_isValid;
}

QString OAISearchRecord::getSCountry() const {
    return m_s_country;
}
void OAISearchRecord::setSCountry(const QString &s_country) {
    m_s_country = s_country;
    m_s_country_isSet = true;
}

bool OAISearchRecord::is_s_country_Set() const{
    return m_s_country_isSet;
}

bool OAISearchRecord::is_s_country_Valid() const{
    return m_s_country_isValid;
}

QString OAISearchRecord::getSEmail() const {
    return m_s_email;
}
void OAISearchRecord::setSEmail(const QString &s_email) {
    m_s_email = s_email;
    m_s_email_isSet = true;
}

bool OAISearchRecord::is_s_email_Set() const{
    return m_s_email_isSet;
}

bool OAISearchRecord::is_s_email_Valid() const{
    return m_s_email_isValid;
}

QString OAISearchRecord::getSName() const {
    return m_s_name;
}
void OAISearchRecord::setSName(const QString &s_name) {
    m_s_name = s_name;
    m_s_name_isSet = true;
}

bool OAISearchRecord::is_s_name_Set() const{
    return m_s_name_isSet;
}

bool OAISearchRecord::is_s_name_Valid() const{
    return m_s_name_isValid;
}

QString OAISearchRecord::getSPhone() const {
    return m_s_phone;
}
void OAISearchRecord::setSPhone(const QString &s_phone) {
    m_s_phone = s_phone;
    m_s_phone_isSet = true;
}

bool OAISearchRecord::is_s_phone_Set() const{
    return m_s_phone_isSet;
}

bool OAISearchRecord::is_s_phone_Valid() const{
    return m_s_phone_isValid;
}

QString OAISearchRecord::getSPostal() const {
    return m_s_postal;
}
void OAISearchRecord::setSPostal(const QString &s_postal) {
    m_s_postal = s_postal;
    m_s_postal_isSet = true;
}

bool OAISearchRecord::is_s_postal_Set() const{
    return m_s_postal_isSet;
}

bool OAISearchRecord::is_s_postal_Valid() const{
    return m_s_postal_isValid;
}

QString OAISearchRecord::getSProvince() const {
    return m_s_province;
}
void OAISearchRecord::setSProvince(const QString &s_province) {
    m_s_province = s_province;
    m_s_province_isSet = true;
}

bool OAISearchRecord::is_s_province_Set() const{
    return m_s_province_isSet;
}

bool OAISearchRecord::is_s_province_Valid() const{
    return m_s_province_isValid;
}

double OAISearchRecord::getTrnAmount() const {
    return m_trn_amount;
}
void OAISearchRecord::setTrnAmount(const double &trn_amount) {
    m_trn_amount = trn_amount;
    m_trn_amount_isSet = true;
}

bool OAISearchRecord::is_trn_amount_Set() const{
    return m_trn_amount_isSet;
}

bool OAISearchRecord::is_trn_amount_Valid() const{
    return m_trn_amount_isValid;
}

QString OAISearchRecord::getTrnApprovalCode() const {
    return m_trn_approval_code;
}
void OAISearchRecord::setTrnApprovalCode(const QString &trn_approval_code) {
    m_trn_approval_code = trn_approval_code;
    m_trn_approval_code_isSet = true;
}

bool OAISearchRecord::is_trn_approval_code_Set() const{
    return m_trn_approval_code_isSet;
}

bool OAISearchRecord::is_trn_approval_code_Valid() const{
    return m_trn_approval_code_isValid;
}

QString OAISearchRecord::getTrnAvsResult() const {
    return m_trn_avs_result;
}
void OAISearchRecord::setTrnAvsResult(const QString &trn_avs_result) {
    m_trn_avs_result = trn_avs_result;
    m_trn_avs_result_isSet = true;
}

bool OAISearchRecord::is_trn_avs_result_Set() const{
    return m_trn_avs_result_isSet;
}

bool OAISearchRecord::is_trn_avs_result_Valid() const{
    return m_trn_avs_result_isValid;
}

double OAISearchRecord::getTrnBatchNo() const {
    return m_trn_batch_no;
}
void OAISearchRecord::setTrnBatchNo(const double &trn_batch_no) {
    m_trn_batch_no = trn_batch_no;
    m_trn_batch_no_isSet = true;
}

bool OAISearchRecord::is_trn_batch_no_Set() const{
    return m_trn_batch_no_isSet;
}

bool OAISearchRecord::is_trn_batch_no_Valid() const{
    return m_trn_batch_no_isValid;
}

QString OAISearchRecord::getTrnCardExpiry() const {
    return m_trn_card_expiry;
}
void OAISearchRecord::setTrnCardExpiry(const QString &trn_card_expiry) {
    m_trn_card_expiry = trn_card_expiry;
    m_trn_card_expiry_isSet = true;
}

bool OAISearchRecord::is_trn_card_expiry_Set() const{
    return m_trn_card_expiry_isSet;
}

bool OAISearchRecord::is_trn_card_expiry_Valid() const{
    return m_trn_card_expiry_isValid;
}

QString OAISearchRecord::getTrnCardOwner() const {
    return m_trn_card_owner;
}
void OAISearchRecord::setTrnCardOwner(const QString &trn_card_owner) {
    m_trn_card_owner = trn_card_owner;
    m_trn_card_owner_isSet = true;
}

bool OAISearchRecord::is_trn_card_owner_Set() const{
    return m_trn_card_owner_isSet;
}

bool OAISearchRecord::is_trn_card_owner_Valid() const{
    return m_trn_card_owner_isValid;
}

QString OAISearchRecord::getTrnCardType() const {
    return m_trn_card_type;
}
void OAISearchRecord::setTrnCardType(const QString &trn_card_type) {
    m_trn_card_type = trn_card_type;
    m_trn_card_type_isSet = true;
}

bool OAISearchRecord::is_trn_card_type_Set() const{
    return m_trn_card_type_isSet;
}

bool OAISearchRecord::is_trn_card_type_Valid() const{
    return m_trn_card_type_isValid;
}

double OAISearchRecord::getTrnCompletions() const {
    return m_trn_completions;
}
void OAISearchRecord::setTrnCompletions(const double &trn_completions) {
    m_trn_completions = trn_completions;
    m_trn_completions_isSet = true;
}

bool OAISearchRecord::is_trn_completions_Set() const{
    return m_trn_completions_isSet;
}

bool OAISearchRecord::is_trn_completions_Valid() const{
    return m_trn_completions_isValid;
}

double OAISearchRecord::getTrnCvdResult() const {
    return m_trn_cvd_result;
}
void OAISearchRecord::setTrnCvdResult(const double &trn_cvd_result) {
    m_trn_cvd_result = trn_cvd_result;
    m_trn_cvd_result_isSet = true;
}

bool OAISearchRecord::is_trn_cvd_result_Set() const{
    return m_trn_cvd_result_isSet;
}

bool OAISearchRecord::is_trn_cvd_result_Valid() const{
    return m_trn_cvd_result_isValid;
}

QString OAISearchRecord::getTrnDateTime() const {
    return m_trn_date_time;
}
void OAISearchRecord::setTrnDateTime(const QString &trn_date_time) {
    m_trn_date_time = trn_date_time;
    m_trn_date_time_isSet = true;
}

bool OAISearchRecord::is_trn_date_time_Set() const{
    return m_trn_date_time_isSet;
}

bool OAISearchRecord::is_trn_date_time_Valid() const{
    return m_trn_date_time_isValid;
}

double OAISearchRecord::getTrnId() const {
    return m_trn_id;
}
void OAISearchRecord::setTrnId(const double &trn_id) {
    m_trn_id = trn_id;
    m_trn_id_isSet = true;
}

bool OAISearchRecord::is_trn_id_Set() const{
    return m_trn_id_isSet;
}

bool OAISearchRecord::is_trn_id_Valid() const{
    return m_trn_id_isValid;
}

QString OAISearchRecord::getTrnIp() const {
    return m_trn_ip;
}
void OAISearchRecord::setTrnIp(const QString &trn_ip) {
    m_trn_ip = trn_ip;
    m_trn_ip_isSet = true;
}

bool OAISearchRecord::is_trn_ip_Set() const{
    return m_trn_ip_isSet;
}

bool OAISearchRecord::is_trn_ip_Valid() const{
    return m_trn_ip_isValid;
}

QString OAISearchRecord::getTrnMaskedCard() const {
    return m_trn_masked_card;
}
void OAISearchRecord::setTrnMaskedCard(const QString &trn_masked_card) {
    m_trn_masked_card = trn_masked_card;
    m_trn_masked_card_isSet = true;
}

bool OAISearchRecord::is_trn_masked_card_Set() const{
    return m_trn_masked_card_isSet;
}

bool OAISearchRecord::is_trn_masked_card_Valid() const{
    return m_trn_masked_card_isValid;
}

QString OAISearchRecord::getTrnOrderNumber() const {
    return m_trn_order_number;
}
void OAISearchRecord::setTrnOrderNumber(const QString &trn_order_number) {
    m_trn_order_number = trn_order_number;
    m_trn_order_number_isSet = true;
}

bool OAISearchRecord::is_trn_order_number_Set() const{
    return m_trn_order_number_isSet;
}

bool OAISearchRecord::is_trn_order_number_Valid() const{
    return m_trn_order_number_isValid;
}

QString OAISearchRecord::getTrnPaymentMethod() const {
    return m_trn_payment_method;
}
void OAISearchRecord::setTrnPaymentMethod(const QString &trn_payment_method) {
    m_trn_payment_method = trn_payment_method;
    m_trn_payment_method_isSet = true;
}

bool OAISearchRecord::is_trn_payment_method_Set() const{
    return m_trn_payment_method_isSet;
}

bool OAISearchRecord::is_trn_payment_method_Valid() const{
    return m_trn_payment_method_isValid;
}

double OAISearchRecord::getTrnReference() const {
    return m_trn_reference;
}
void OAISearchRecord::setTrnReference(const double &trn_reference) {
    m_trn_reference = trn_reference;
    m_trn_reference_isSet = true;
}

bool OAISearchRecord::is_trn_reference_Set() const{
    return m_trn_reference_isSet;
}

bool OAISearchRecord::is_trn_reference_Valid() const{
    return m_trn_reference_isValid;
}

double OAISearchRecord::getTrnResponse() const {
    return m_trn_response;
}
void OAISearchRecord::setTrnResponse(const double &trn_response) {
    m_trn_response = trn_response;
    m_trn_response_isSet = true;
}

bool OAISearchRecord::is_trn_response_Set() const{
    return m_trn_response_isSet;
}

bool OAISearchRecord::is_trn_response_Valid() const{
    return m_trn_response_isValid;
}

double OAISearchRecord::getTrnReturns() const {
    return m_trn_returns;
}
void OAISearchRecord::setTrnReturns(const double &trn_returns) {
    m_trn_returns = trn_returns;
    m_trn_returns_isSet = true;
}

bool OAISearchRecord::is_trn_returns_Set() const{
    return m_trn_returns_isSet;
}

bool OAISearchRecord::is_trn_returns_Valid() const{
    return m_trn_returns_isValid;
}

QString OAISearchRecord::getTrnType() const {
    return m_trn_type;
}
void OAISearchRecord::setTrnType(const QString &trn_type) {
    m_trn_type = trn_type;
    m_trn_type_isSet = true;
}

bool OAISearchRecord::is_trn_type_Set() const{
    return m_trn_type_isSet;
}

bool OAISearchRecord::is_trn_type_Valid() const{
    return m_trn_type_isValid;
}

double OAISearchRecord::getTrnVoided() const {
    return m_trn_voided;
}
void OAISearchRecord::setTrnVoided(const double &trn_voided) {
    m_trn_voided = trn_voided;
    m_trn_voided_isSet = true;
}

bool OAISearchRecord::is_trn_voided_Set() const{
    return m_trn_voided_isSet;
}

bool OAISearchRecord::is_trn_voided_Valid() const{
    return m_trn_voided_isValid;
}

bool OAISearchRecord::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_b_address1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_address2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_postal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_province_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ref1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ref2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ref3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ref4_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ref5_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_row_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_address1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_address2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_postal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_province_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trn_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trn_approval_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trn_avs_result_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trn_batch_no_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trn_card_expiry_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trn_card_owner_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trn_card_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trn_completions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trn_cvd_result_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trn_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trn_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trn_ip_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trn_masked_card_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trn_order_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trn_payment_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trn_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trn_response_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trn_returns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trn_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trn_voided_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISearchRecord::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
