/**
 * Beanstream Payments
 * https://www.beanstream.com/api/v1
 *
 * The version of the OpenAPI document: 1.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateProfileBody.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateProfileBody::OAICreateProfileBody(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateProfileBody::OAICreateProfileBody() {
    this->initializeModel();
}

OAICreateProfileBody::~OAICreateProfileBody() {}

void OAICreateProfileBody::initializeModel() {

    m_billing_isSet = false;
    m_billing_isValid = false;

    m_card_isSet = false;
    m_card_isValid = false;

    m_comment_isSet = false;
    m_comment_isValid = false;

    m_custom_isSet = false;
    m_custom_isValid = false;

    m_language_isSet = false;
    m_language_isValid = false;

    m_token_isSet = false;
    m_token_isValid = false;
}

void OAICreateProfileBody::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateProfileBody::fromJsonObject(QJsonObject json) {

    m_billing_isValid = ::OpenAPI::fromJsonValue(m_billing, json[QString("billing")]);
    m_billing_isSet = !json[QString("billing")].isNull() && m_billing_isValid;

    m_card_isValid = ::OpenAPI::fromJsonValue(m_card, json[QString("card")]);
    m_card_isSet = !json[QString("card")].isNull() && m_card_isValid;

    m_comment_isValid = ::OpenAPI::fromJsonValue(m_comment, json[QString("comment")]);
    m_comment_isSet = !json[QString("comment")].isNull() && m_comment_isValid;

    m_custom_isValid = ::OpenAPI::fromJsonValue(m_custom, json[QString("custom")]);
    m_custom_isSet = !json[QString("custom")].isNull() && m_custom_isValid;

    m_language_isValid = ::OpenAPI::fromJsonValue(m_language, json[QString("language")]);
    m_language_isSet = !json[QString("language")].isNull() && m_language_isValid;

    m_token_isValid = ::OpenAPI::fromJsonValue(m_token, json[QString("token")]);
    m_token_isSet = !json[QString("token")].isNull() && m_token_isValid;
}

QString OAICreateProfileBody::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateProfileBody::asJsonObject() const {
    QJsonObject obj;
    if (m_billing.isSet()) {
        obj.insert(QString("billing"), ::OpenAPI::toJsonValue(m_billing));
    }
    if (m_card.isSet()) {
        obj.insert(QString("card"), ::OpenAPI::toJsonValue(m_card));
    }
    if (m_comment_isSet) {
        obj.insert(QString("comment"), ::OpenAPI::toJsonValue(m_comment));
    }
    if (m_custom.isSet()) {
        obj.insert(QString("custom"), ::OpenAPI::toJsonValue(m_custom));
    }
    if (m_language_isSet) {
        obj.insert(QString("language"), ::OpenAPI::toJsonValue(m_language));
    }
    if (m_token.isSet()) {
        obj.insert(QString("token"), ::OpenAPI::toJsonValue(m_token));
    }
    return obj;
}

OAIAddress OAICreateProfileBody::getBilling() const {
    return m_billing;
}
void OAICreateProfileBody::setBilling(const OAIAddress &billing) {
    m_billing = billing;
    m_billing_isSet = true;
}

bool OAICreateProfileBody::is_billing_Set() const{
    return m_billing_isSet;
}

bool OAICreateProfileBody::is_billing_Valid() const{
    return m_billing_isValid;
}

OAIProfileFromCard OAICreateProfileBody::getCard() const {
    return m_card;
}
void OAICreateProfileBody::setCard(const OAIProfileFromCard &card) {
    m_card = card;
    m_card_isSet = true;
}

bool OAICreateProfileBody::is_card_Set() const{
    return m_card_isSet;
}

bool OAICreateProfileBody::is_card_Valid() const{
    return m_card_isValid;
}

QString OAICreateProfileBody::getComment() const {
    return m_comment;
}
void OAICreateProfileBody::setComment(const QString &comment) {
    m_comment = comment;
    m_comment_isSet = true;
}

bool OAICreateProfileBody::is_comment_Set() const{
    return m_comment_isSet;
}

bool OAICreateProfileBody::is_comment_Valid() const{
    return m_comment_isValid;
}

OAICustom OAICreateProfileBody::getCustom() const {
    return m_custom;
}
void OAICreateProfileBody::setCustom(const OAICustom &custom) {
    m_custom = custom;
    m_custom_isSet = true;
}

bool OAICreateProfileBody::is_custom_Set() const{
    return m_custom_isSet;
}

bool OAICreateProfileBody::is_custom_Valid() const{
    return m_custom_isValid;
}

QString OAICreateProfileBody::getLanguage() const {
    return m_language;
}
void OAICreateProfileBody::setLanguage(const QString &language) {
    m_language = language;
    m_language_isSet = true;
}

bool OAICreateProfileBody::is_language_Set() const{
    return m_language_isSet;
}

bool OAICreateProfileBody::is_language_Valid() const{
    return m_language_isValid;
}

OAIProfileFromToken OAICreateProfileBody::getToken() const {
    return m_token;
}
void OAICreateProfileBody::setToken(const OAIProfileFromToken &token) {
    m_token = token;
    m_token_isSet = true;
}

bool OAICreateProfileBody::is_token_Set() const{
    return m_token_isSet;
}

bool OAICreateProfileBody::is_token_Valid() const{
    return m_token_isValid;
}

bool OAICreateProfileBody::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_billing.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_card.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_comment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_token.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateProfileBody::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
