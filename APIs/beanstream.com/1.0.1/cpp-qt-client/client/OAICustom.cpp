/**
 * Beanstream Payments
 * https://www.beanstream.com/api/v1
 *
 * The version of the OpenAPI document: 1.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustom.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustom::OAICustom(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustom::OAICustom() {
    this->initializeModel();
}

OAICustom::~OAICustom() {}

void OAICustom::initializeModel() {

    m_ref1_isSet = false;
    m_ref1_isValid = false;

    m_ref2_isSet = false;
    m_ref2_isValid = false;

    m_ref3_isSet = false;
    m_ref3_isValid = false;

    m_ref4_isSet = false;
    m_ref4_isValid = false;

    m_ref5_isSet = false;
    m_ref5_isValid = false;
}

void OAICustom::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustom::fromJsonObject(QJsonObject json) {

    m_ref1_isValid = ::OpenAPI::fromJsonValue(m_ref1, json[QString("ref1")]);
    m_ref1_isSet = !json[QString("ref1")].isNull() && m_ref1_isValid;

    m_ref2_isValid = ::OpenAPI::fromJsonValue(m_ref2, json[QString("ref2")]);
    m_ref2_isSet = !json[QString("ref2")].isNull() && m_ref2_isValid;

    m_ref3_isValid = ::OpenAPI::fromJsonValue(m_ref3, json[QString("ref3")]);
    m_ref3_isSet = !json[QString("ref3")].isNull() && m_ref3_isValid;

    m_ref4_isValid = ::OpenAPI::fromJsonValue(m_ref4, json[QString("ref4")]);
    m_ref4_isSet = !json[QString("ref4")].isNull() && m_ref4_isValid;

    m_ref5_isValid = ::OpenAPI::fromJsonValue(m_ref5, json[QString("ref5")]);
    m_ref5_isSet = !json[QString("ref5")].isNull() && m_ref5_isValid;
}

QString OAICustom::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustom::asJsonObject() const {
    QJsonObject obj;
    if (m_ref1_isSet) {
        obj.insert(QString("ref1"), ::OpenAPI::toJsonValue(m_ref1));
    }
    if (m_ref2_isSet) {
        obj.insert(QString("ref2"), ::OpenAPI::toJsonValue(m_ref2));
    }
    if (m_ref3_isSet) {
        obj.insert(QString("ref3"), ::OpenAPI::toJsonValue(m_ref3));
    }
    if (m_ref4_isSet) {
        obj.insert(QString("ref4"), ::OpenAPI::toJsonValue(m_ref4));
    }
    if (m_ref5_isSet) {
        obj.insert(QString("ref5"), ::OpenAPI::toJsonValue(m_ref5));
    }
    return obj;
}

QString OAICustom::getRef1() const {
    return m_ref1;
}
void OAICustom::setRef1(const QString &ref1) {
    m_ref1 = ref1;
    m_ref1_isSet = true;
}

bool OAICustom::is_ref1_Set() const{
    return m_ref1_isSet;
}

bool OAICustom::is_ref1_Valid() const{
    return m_ref1_isValid;
}

QString OAICustom::getRef2() const {
    return m_ref2;
}
void OAICustom::setRef2(const QString &ref2) {
    m_ref2 = ref2;
    m_ref2_isSet = true;
}

bool OAICustom::is_ref2_Set() const{
    return m_ref2_isSet;
}

bool OAICustom::is_ref2_Valid() const{
    return m_ref2_isValid;
}

QString OAICustom::getRef3() const {
    return m_ref3;
}
void OAICustom::setRef3(const QString &ref3) {
    m_ref3 = ref3;
    m_ref3_isSet = true;
}

bool OAICustom::is_ref3_Set() const{
    return m_ref3_isSet;
}

bool OAICustom::is_ref3_Valid() const{
    return m_ref3_isValid;
}

QString OAICustom::getRef4() const {
    return m_ref4;
}
void OAICustom::setRef4(const QString &ref4) {
    m_ref4 = ref4;
    m_ref4_isSet = true;
}

bool OAICustom::is_ref4_Set() const{
    return m_ref4_isSet;
}

bool OAICustom::is_ref4_Valid() const{
    return m_ref4_isValid;
}

QString OAICustom::getRef5() const {
    return m_ref5;
}
void OAICustom::setRef5(const QString &ref5) {
    m_ref5 = ref5;
    m_ref5_isSet = true;
}

bool OAICustom::is_ref5_Set() const{
    return m_ref5_isSet;
}

bool OAICustom::is_ref5_Valid() const{
    return m_ref5_isValid;
}

bool OAICustom::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ref1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ref2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ref3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ref4_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ref5_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustom::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
