/**
 * Beanstream Payments
 * https://www.beanstream.com/api/v1
 *
 * The version of the OpenAPI document: 1.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaymentRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaymentRequest::OAIPaymentRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaymentRequest::OAIPaymentRequest() {
    this->initializeModel();
}

OAIPaymentRequest::~OAIPaymentRequest() {}

void OAIPaymentRequest::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_billing_isSet = false;
    m_billing_isValid = false;

    m_card_isSet = false;
    m_card_isValid = false;

    m_comments_isSet = false;
    m_comments_isValid = false;

    m_custom_isSet = false;
    m_custom_isValid = false;

    m_customer_ip_isSet = false;
    m_customer_ip_isValid = false;

    m_language_isSet = false;
    m_language_isValid = false;

    m_order_number_isSet = false;
    m_order_number_isValid = false;

    m_payment_method_isSet = false;
    m_payment_method_isValid = false;

    m_payment_profile_isSet = false;
    m_payment_profile_isValid = false;

    m_shipping_isSet = false;
    m_shipping_isValid = false;

    m_term_url_isSet = false;
    m_term_url_isValid = false;

    m_token_isSet = false;
    m_token_isValid = false;
}

void OAIPaymentRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPaymentRequest::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_billing_isValid = ::OpenAPI::fromJsonValue(m_billing, json[QString("billing")]);
    m_billing_isSet = !json[QString("billing")].isNull() && m_billing_isValid;

    m_card_isValid = ::OpenAPI::fromJsonValue(m_card, json[QString("card")]);
    m_card_isSet = !json[QString("card")].isNull() && m_card_isValid;

    m_comments_isValid = ::OpenAPI::fromJsonValue(m_comments, json[QString("comments")]);
    m_comments_isSet = !json[QString("comments")].isNull() && m_comments_isValid;

    m_custom_isValid = ::OpenAPI::fromJsonValue(m_custom, json[QString("custom")]);
    m_custom_isSet = !json[QString("custom")].isNull() && m_custom_isValid;

    m_customer_ip_isValid = ::OpenAPI::fromJsonValue(m_customer_ip, json[QString("customer_ip")]);
    m_customer_ip_isSet = !json[QString("customer_ip")].isNull() && m_customer_ip_isValid;

    m_language_isValid = ::OpenAPI::fromJsonValue(m_language, json[QString("language")]);
    m_language_isSet = !json[QString("language")].isNull() && m_language_isValid;

    m_order_number_isValid = ::OpenAPI::fromJsonValue(m_order_number, json[QString("order_number")]);
    m_order_number_isSet = !json[QString("order_number")].isNull() && m_order_number_isValid;

    m_payment_method_isValid = ::OpenAPI::fromJsonValue(m_payment_method, json[QString("payment_method")]);
    m_payment_method_isSet = !json[QString("payment_method")].isNull() && m_payment_method_isValid;

    m_payment_profile_isValid = ::OpenAPI::fromJsonValue(m_payment_profile, json[QString("payment_profile")]);
    m_payment_profile_isSet = !json[QString("payment_profile")].isNull() && m_payment_profile_isValid;

    m_shipping_isValid = ::OpenAPI::fromJsonValue(m_shipping, json[QString("shipping")]);
    m_shipping_isSet = !json[QString("shipping")].isNull() && m_shipping_isValid;

    m_term_url_isValid = ::OpenAPI::fromJsonValue(m_term_url, json[QString("term_url")]);
    m_term_url_isSet = !json[QString("term_url")].isNull() && m_term_url_isValid;

    m_token_isValid = ::OpenAPI::fromJsonValue(m_token, json[QString("token")]);
    m_token_isSet = !json[QString("token")].isNull() && m_token_isValid;
}

QString OAIPaymentRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPaymentRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_billing.isSet()) {
        obj.insert(QString("billing"), ::OpenAPI::toJsonValue(m_billing));
    }
    if (m_card.isSet()) {
        obj.insert(QString("card"), ::OpenAPI::toJsonValue(m_card));
    }
    if (m_comments_isSet) {
        obj.insert(QString("comments"), ::OpenAPI::toJsonValue(m_comments));
    }
    if (m_custom.isSet()) {
        obj.insert(QString("custom"), ::OpenAPI::toJsonValue(m_custom));
    }
    if (m_customer_ip_isSet) {
        obj.insert(QString("customer_ip"), ::OpenAPI::toJsonValue(m_customer_ip));
    }
    if (m_language_isSet) {
        obj.insert(QString("language"), ::OpenAPI::toJsonValue(m_language));
    }
    if (m_order_number_isSet) {
        obj.insert(QString("order_number"), ::OpenAPI::toJsonValue(m_order_number));
    }
    if (m_payment_method_isSet) {
        obj.insert(QString("payment_method"), ::OpenAPI::toJsonValue(m_payment_method));
    }
    if (m_payment_profile.isSet()) {
        obj.insert(QString("payment_profile"), ::OpenAPI::toJsonValue(m_payment_profile));
    }
    if (m_shipping.isSet()) {
        obj.insert(QString("shipping"), ::OpenAPI::toJsonValue(m_shipping));
    }
    if (m_term_url_isSet) {
        obj.insert(QString("term_url"), ::OpenAPI::toJsonValue(m_term_url));
    }
    if (m_token.isSet()) {
        obj.insert(QString("token"), ::OpenAPI::toJsonValue(m_token));
    }
    return obj;
}

double OAIPaymentRequest::getAmount() const {
    return m_amount;
}
void OAIPaymentRequest::setAmount(const double &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIPaymentRequest::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIPaymentRequest::is_amount_Valid() const{
    return m_amount_isValid;
}

OAIAddress OAIPaymentRequest::getBilling() const {
    return m_billing;
}
void OAIPaymentRequest::setBilling(const OAIAddress &billing) {
    m_billing = billing;
    m_billing_isSet = true;
}

bool OAIPaymentRequest::is_billing_Set() const{
    return m_billing_isSet;
}

bool OAIPaymentRequest::is_billing_Valid() const{
    return m_billing_isValid;
}

OAICard OAIPaymentRequest::getCard() const {
    return m_card;
}
void OAIPaymentRequest::setCard(const OAICard &card) {
    m_card = card;
    m_card_isSet = true;
}

bool OAIPaymentRequest::is_card_Set() const{
    return m_card_isSet;
}

bool OAIPaymentRequest::is_card_Valid() const{
    return m_card_isValid;
}

QString OAIPaymentRequest::getComments() const {
    return m_comments;
}
void OAIPaymentRequest::setComments(const QString &comments) {
    m_comments = comments;
    m_comments_isSet = true;
}

bool OAIPaymentRequest::is_comments_Set() const{
    return m_comments_isSet;
}

bool OAIPaymentRequest::is_comments_Valid() const{
    return m_comments_isValid;
}

OAICustom OAIPaymentRequest::getCustom() const {
    return m_custom;
}
void OAIPaymentRequest::setCustom(const OAICustom &custom) {
    m_custom = custom;
    m_custom_isSet = true;
}

bool OAIPaymentRequest::is_custom_Set() const{
    return m_custom_isSet;
}

bool OAIPaymentRequest::is_custom_Valid() const{
    return m_custom_isValid;
}

QString OAIPaymentRequest::getCustomerIp() const {
    return m_customer_ip;
}
void OAIPaymentRequest::setCustomerIp(const QString &customer_ip) {
    m_customer_ip = customer_ip;
    m_customer_ip_isSet = true;
}

bool OAIPaymentRequest::is_customer_ip_Set() const{
    return m_customer_ip_isSet;
}

bool OAIPaymentRequest::is_customer_ip_Valid() const{
    return m_customer_ip_isValid;
}

QString OAIPaymentRequest::getLanguage() const {
    return m_language;
}
void OAIPaymentRequest::setLanguage(const QString &language) {
    m_language = language;
    m_language_isSet = true;
}

bool OAIPaymentRequest::is_language_Set() const{
    return m_language_isSet;
}

bool OAIPaymentRequest::is_language_Valid() const{
    return m_language_isValid;
}

QString OAIPaymentRequest::getOrderNumber() const {
    return m_order_number;
}
void OAIPaymentRequest::setOrderNumber(const QString &order_number) {
    m_order_number = order_number;
    m_order_number_isSet = true;
}

bool OAIPaymentRequest::is_order_number_Set() const{
    return m_order_number_isSet;
}

bool OAIPaymentRequest::is_order_number_Valid() const{
    return m_order_number_isValid;
}

QString OAIPaymentRequest::getPaymentMethod() const {
    return m_payment_method;
}
void OAIPaymentRequest::setPaymentMethod(const QString &payment_method) {
    m_payment_method = payment_method;
    m_payment_method_isSet = true;
}

bool OAIPaymentRequest::is_payment_method_Set() const{
    return m_payment_method_isSet;
}

bool OAIPaymentRequest::is_payment_method_Valid() const{
    return m_payment_method_isValid;
}

OAIProfilePurchase OAIPaymentRequest::getPaymentProfile() const {
    return m_payment_profile;
}
void OAIPaymentRequest::setPaymentProfile(const OAIProfilePurchase &payment_profile) {
    m_payment_profile = payment_profile;
    m_payment_profile_isSet = true;
}

bool OAIPaymentRequest::is_payment_profile_Set() const{
    return m_payment_profile_isSet;
}

bool OAIPaymentRequest::is_payment_profile_Valid() const{
    return m_payment_profile_isValid;
}

OAIAddress OAIPaymentRequest::getShipping() const {
    return m_shipping;
}
void OAIPaymentRequest::setShipping(const OAIAddress &shipping) {
    m_shipping = shipping;
    m_shipping_isSet = true;
}

bool OAIPaymentRequest::is_shipping_Set() const{
    return m_shipping_isSet;
}

bool OAIPaymentRequest::is_shipping_Valid() const{
    return m_shipping_isValid;
}

QString OAIPaymentRequest::getTermUrl() const {
    return m_term_url;
}
void OAIPaymentRequest::setTermUrl(const QString &term_url) {
    m_term_url = term_url;
    m_term_url_isSet = true;
}

bool OAIPaymentRequest::is_term_url_Set() const{
    return m_term_url_isSet;
}

bool OAIPaymentRequest::is_term_url_Valid() const{
    return m_term_url_isValid;
}

OAITokenPurchase OAIPaymentRequest::getToken() const {
    return m_token;
}
void OAIPaymentRequest::setToken(const OAITokenPurchase &token) {
    m_token = token;
    m_token_isSet = true;
}

bool OAIPaymentRequest::is_token_Set() const{
    return m_token_isSet;
}

bool OAIPaymentRequest::is_token_Valid() const{
    return m_token_isValid;
}

bool OAIPaymentRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_card.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_comments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_ip_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_profile.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_term_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_token.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPaymentRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_amount_isValid && m_payment_method_isValid && true;
}

} // namespace OpenAPI
