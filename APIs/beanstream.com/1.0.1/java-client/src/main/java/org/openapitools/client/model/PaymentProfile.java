/*
 * Beanstream Payments
 * https://www.beanstream.com/api/v1
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Address;
import org.openapitools.client.model.Custom;
import org.openapitools.client.model.GetProfileDefaultCard;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PaymentProfile
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:31:42.785280-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PaymentProfile {
  public static final String SERIALIZED_NAME_ACCOUNT_REF = "account_ref";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_REF)
  private String accountRef;

  public static final String SERIALIZED_NAME_BILLING = "billing";
  @SerializedName(SERIALIZED_NAME_BILLING)
  private Address billing;

  public static final String SERIALIZED_NAME_CARD = "card";
  @SerializedName(SERIALIZED_NAME_CARD)
  private GetProfileDefaultCard card;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private Integer code;

  public static final String SERIALIZED_NAME_CUSTOM = "custom";
  @SerializedName(SERIALIZED_NAME_CUSTOM)
  private Custom custom;

  public static final String SERIALIZED_NAME_CUSTOMER_CODE = "customer_code";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_CODE)
  private String customerCode;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private String language;

  public static final String SERIALIZED_NAME_LAST_TRANSACTION = "last_transaction";
  @SerializedName(SERIALIZED_NAME_LAST_TRANSACTION)
  private String lastTransaction;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_MODIFIED_DATE = "modified_date";
  @SerializedName(SERIALIZED_NAME_MODIFIED_DATE)
  private String modifiedDate;

  public static final String SERIALIZED_NAME_PROFILE_GROUP = "profile_group";
  @SerializedName(SERIALIZED_NAME_PROFILE_GROUP)
  private String profileGroup;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_VELOCITY_GROUP = "velocity_group";
  @SerializedName(SERIALIZED_NAME_VELOCITY_GROUP)
  private String velocityGroup;

  public PaymentProfile() {
  }

  public PaymentProfile accountRef(String accountRef) {
    this.accountRef = accountRef;
    return this;
  }

  /**
   * Get accountRef
   * @return accountRef
   */
  @javax.annotation.Nullable
  public String getAccountRef() {
    return accountRef;
  }

  public void setAccountRef(String accountRef) {
    this.accountRef = accountRef;
  }


  public PaymentProfile billing(Address billing) {
    this.billing = billing;
    return this;
  }

  /**
   * Get billing
   * @return billing
   */
  @javax.annotation.Nullable
  public Address getBilling() {
    return billing;
  }

  public void setBilling(Address billing) {
    this.billing = billing;
  }


  public PaymentProfile card(GetProfileDefaultCard card) {
    this.card = card;
    return this;
  }

  /**
   * Get card
   * @return card
   */
  @javax.annotation.Nullable
  public GetProfileDefaultCard getCard() {
    return card;
  }

  public void setCard(GetProfileDefaultCard card) {
    this.card = card;
  }


  public PaymentProfile code(Integer code) {
    this.code = code;
    return this;
  }

  /**
   * digits(2)
   * @return code
   */
  @javax.annotation.Nullable
  public Integer getCode() {
    return code;
  }

  public void setCode(Integer code) {
    this.code = code;
  }


  public PaymentProfile custom(Custom custom) {
    this.custom = custom;
    return this;
  }

  /**
   * Get custom
   * @return custom
   */
  @javax.annotation.Nullable
  public Custom getCustom() {
    return custom;
  }

  public void setCustom(Custom custom) {
    this.custom = custom;
  }


  public PaymentProfile customerCode(String customerCode) {
    this.customerCode = customerCode;
    return this;
  }

  /**
   * alphanumeric(32)
   * @return customerCode
   */
  @javax.annotation.Nullable
  public String getCustomerCode() {
    return customerCode;
  }

  public void setCustomerCode(String customerCode) {
    this.customerCode = customerCode;
  }


  public PaymentProfile language(String language) {
    this.language = language;
    return this;
  }

  /**
   * characters(2)
   * @return language
   */
  @javax.annotation.Nullable
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }


  public PaymentProfile lastTransaction(String lastTransaction) {
    this.lastTransaction = lastTransaction;
    return this;
  }

  /**
   * date and time alphanumeric(24)
   * @return lastTransaction
   */
  @javax.annotation.Nullable
  public String getLastTransaction() {
    return lastTransaction;
  }

  public void setLastTransaction(String lastTransaction) {
    this.lastTransaction = lastTransaction;
  }


  public PaymentProfile message(String message) {
    this.message = message;
    return this;
  }

  /**
   * alphanumeric(64)
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  public PaymentProfile modifiedDate(String modifiedDate) {
    this.modifiedDate = modifiedDate;
    return this;
  }

  /**
   * date and time it was last modified alphanumeric(24)
   * @return modifiedDate
   */
  @javax.annotation.Nullable
  public String getModifiedDate() {
    return modifiedDate;
  }

  public void setModifiedDate(String modifiedDate) {
    this.modifiedDate = modifiedDate;
  }


  public PaymentProfile profileGroup(String profileGroup) {
    this.profileGroup = profileGroup;
    return this;
  }

  /**
   * Get profileGroup
   * @return profileGroup
   */
  @javax.annotation.Nullable
  public String getProfileGroup() {
    return profileGroup;
  }

  public void setProfileGroup(String profileGroup) {
    this.profileGroup = profileGroup;
  }


  public PaymentProfile status(String status) {
    this.status = status;
    return this;
  }

  /**
   * characters(1)
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public PaymentProfile velocityGroup(String velocityGroup) {
    this.velocityGroup = velocityGroup;
    return this;
  }

  /**
   * Get velocityGroup
   * @return velocityGroup
   */
  @javax.annotation.Nullable
  public String getVelocityGroup() {
    return velocityGroup;
  }

  public void setVelocityGroup(String velocityGroup) {
    this.velocityGroup = velocityGroup;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentProfile paymentProfile = (PaymentProfile) o;
    return Objects.equals(this.accountRef, paymentProfile.accountRef) &&
        Objects.equals(this.billing, paymentProfile.billing) &&
        Objects.equals(this.card, paymentProfile.card) &&
        Objects.equals(this.code, paymentProfile.code) &&
        Objects.equals(this.custom, paymentProfile.custom) &&
        Objects.equals(this.customerCode, paymentProfile.customerCode) &&
        Objects.equals(this.language, paymentProfile.language) &&
        Objects.equals(this.lastTransaction, paymentProfile.lastTransaction) &&
        Objects.equals(this.message, paymentProfile.message) &&
        Objects.equals(this.modifiedDate, paymentProfile.modifiedDate) &&
        Objects.equals(this.profileGroup, paymentProfile.profileGroup) &&
        Objects.equals(this.status, paymentProfile.status) &&
        Objects.equals(this.velocityGroup, paymentProfile.velocityGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountRef, billing, card, code, custom, customerCode, language, lastTransaction, message, modifiedDate, profileGroup, status, velocityGroup);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentProfile {\n");
    sb.append("    accountRef: ").append(toIndentedString(accountRef)).append("\n");
    sb.append("    billing: ").append(toIndentedString(billing)).append("\n");
    sb.append("    card: ").append(toIndentedString(card)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    custom: ").append(toIndentedString(custom)).append("\n");
    sb.append("    customerCode: ").append(toIndentedString(customerCode)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    lastTransaction: ").append(toIndentedString(lastTransaction)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    profileGroup: ").append(toIndentedString(profileGroup)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    velocityGroup: ").append(toIndentedString(velocityGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_ref");
    openapiFields.add("billing");
    openapiFields.add("card");
    openapiFields.add("code");
    openapiFields.add("custom");
    openapiFields.add("customer_code");
    openapiFields.add("language");
    openapiFields.add("last_transaction");
    openapiFields.add("message");
    openapiFields.add("modified_date");
    openapiFields.add("profile_group");
    openapiFields.add("status");
    openapiFields.add("velocity_group");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PaymentProfile
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PaymentProfile.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PaymentProfile is not found in the empty JSON string", PaymentProfile.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PaymentProfile.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PaymentProfile` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_ref") != null && !jsonObj.get("account_ref").isJsonNull()) && !jsonObj.get("account_ref").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_ref` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_ref").toString()));
      }
      // validate the optional field `billing`
      if (jsonObj.get("billing") != null && !jsonObj.get("billing").isJsonNull()) {
        Address.validateJsonElement(jsonObj.get("billing"));
      }
      // validate the optional field `card`
      if (jsonObj.get("card") != null && !jsonObj.get("card").isJsonNull()) {
        GetProfileDefaultCard.validateJsonElement(jsonObj.get("card"));
      }
      // validate the optional field `custom`
      if (jsonObj.get("custom") != null && !jsonObj.get("custom").isJsonNull()) {
        Custom.validateJsonElement(jsonObj.get("custom"));
      }
      if ((jsonObj.get("customer_code") != null && !jsonObj.get("customer_code").isJsonNull()) && !jsonObj.get("customer_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customer_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customer_code").toString()));
      }
      if ((jsonObj.get("language") != null && !jsonObj.get("language").isJsonNull()) && !jsonObj.get("language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("language").toString()));
      }
      if ((jsonObj.get("last_transaction") != null && !jsonObj.get("last_transaction").isJsonNull()) && !jsonObj.get("last_transaction").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_transaction` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_transaction").toString()));
      }
      if ((jsonObj.get("message") != null && !jsonObj.get("message").isJsonNull()) && !jsonObj.get("message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message").toString()));
      }
      if ((jsonObj.get("modified_date") != null && !jsonObj.get("modified_date").isJsonNull()) && !jsonObj.get("modified_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modified_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modified_date").toString()));
      }
      if ((jsonObj.get("profile_group") != null && !jsonObj.get("profile_group").isJsonNull()) && !jsonObj.get("profile_group").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profile_group` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profile_group").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("velocity_group") != null && !jsonObj.get("velocity_group").isJsonNull()) && !jsonObj.get("velocity_group").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `velocity_group` to be a primitive type in the JSON string but got `%s`", jsonObj.get("velocity_group").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PaymentProfile.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PaymentProfile' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PaymentProfile> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PaymentProfile.class));

       return (TypeAdapter<T>) new TypeAdapter<PaymentProfile>() {
           @Override
           public void write(JsonWriter out, PaymentProfile value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PaymentProfile read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PaymentProfile given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PaymentProfile
   * @throws IOException if the JSON string is invalid with respect to PaymentProfile
   */
  public static PaymentProfile fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PaymentProfile.class);
  }

  /**
   * Convert an instance of PaymentProfile to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

