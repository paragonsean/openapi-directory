# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.address import Address
from openapi_server.models.custom import Custom
from openapi_server.models.profile_from_card import ProfileFromCard
from openapi_server.models.profile_from_token import ProfileFromToken
from openapi_server import util


class CreateProfileBody(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing: Address=None, card: ProfileFromCard=None, comment: str=None, custom: Custom=None, language: str=None, token: ProfileFromToken=None):
        """CreateProfileBody - a model defined in OpenAPI

        :param billing: The billing of this CreateProfileBody.
        :param card: The card of this CreateProfileBody.
        :param comment: The comment of this CreateProfileBody.
        :param custom: The custom of this CreateProfileBody.
        :param language: The language of this CreateProfileBody.
        :param token: The token of this CreateProfileBody.
        """
        self.openapi_types = {
            'billing': Address,
            'card': ProfileFromCard,
            'comment': str,
            'custom': Custom,
            'language': str,
            'token': ProfileFromToken
        }

        self.attribute_map = {
            'billing': 'billing',
            'card': 'card',
            'comment': 'comment',
            'custom': 'custom',
            'language': 'language',
            'token': 'token'
        }

        self._billing = billing
        self._card = card
        self._comment = comment
        self._custom = custom
        self._language = language
        self._token = token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateProfileBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateProfileBody of this CreateProfileBody.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing(self):
        """Gets the billing of this CreateProfileBody.


        :return: The billing of this CreateProfileBody.
        :rtype: Address
        """
        return self._billing

    @billing.setter
    def billing(self, billing):
        """Sets the billing of this CreateProfileBody.


        :param billing: The billing of this CreateProfileBody.
        :type billing: Address
        """

        self._billing = billing

    @property
    def card(self):
        """Gets the card of this CreateProfileBody.


        :return: The card of this CreateProfileBody.
        :rtype: ProfileFromCard
        """
        return self._card

    @card.setter
    def card(self, card):
        """Sets the card of this CreateProfileBody.


        :param card: The card of this CreateProfileBody.
        :type card: ProfileFromCard
        """

        self._card = card

    @property
    def comment(self):
        """Gets the comment of this CreateProfileBody.

        alphanumeric(256)

        :return: The comment of this CreateProfileBody.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this CreateProfileBody.

        alphanumeric(256)

        :param comment: The comment of this CreateProfileBody.
        :type comment: str
        """

        self._comment = comment

    @property
    def custom(self):
        """Gets the custom of this CreateProfileBody.


        :return: The custom of this CreateProfileBody.
        :rtype: Custom
        """
        return self._custom

    @custom.setter
    def custom(self, custom):
        """Sets the custom of this CreateProfileBody.


        :param custom: The custom of this CreateProfileBody.
        :type custom: Custom
        """

        self._custom = custom

    @property
    def language(self):
        """Gets the language of this CreateProfileBody.

        characters(2)

        :return: The language of this CreateProfileBody.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this CreateProfileBody.

        characters(2)

        :param language: The language of this CreateProfileBody.
        :type language: str
        """

        self._language = language

    @property
    def token(self):
        """Gets the token of this CreateProfileBody.


        :return: The token of this CreateProfileBody.
        :rtype: ProfileFromToken
        """
        return self._token

    @token.setter
    def token(self, token):
        """Sets the token of this CreateProfileBody.


        :param token: The token of this CreateProfileBody.
        :type token: ProfileFromToken
        """

        self._token = token
