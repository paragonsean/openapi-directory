# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Custom(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ref1: str=None, ref2: str=None, ref3: str=None, ref4: str=None, ref5: str=None):
        """Custom - a model defined in OpenAPI

        :param ref1: The ref1 of this Custom.
        :param ref2: The ref2 of this Custom.
        :param ref3: The ref3 of this Custom.
        :param ref4: The ref4 of this Custom.
        :param ref5: The ref5 of this Custom.
        """
        self.openapi_types = {
            'ref1': str,
            'ref2': str,
            'ref3': str,
            'ref4': str,
            'ref5': str
        }

        self.attribute_map = {
            'ref1': 'ref1',
            'ref2': 'ref2',
            'ref3': 'ref3',
            'ref4': 'ref4',
            'ref5': 'ref5'
        }

        self._ref1 = ref1
        self._ref2 = ref2
        self._ref3 = ref3
        self._ref4 = ref4
        self._ref5 = ref5

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Custom':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Custom of this Custom.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ref1(self):
        """Gets the ref1 of this Custom.

        alphanumeric (256)

        :return: The ref1 of this Custom.
        :rtype: str
        """
        return self._ref1

    @ref1.setter
    def ref1(self, ref1):
        """Sets the ref1 of this Custom.

        alphanumeric (256)

        :param ref1: The ref1 of this Custom.
        :type ref1: str
        """

        self._ref1 = ref1

    @property
    def ref2(self):
        """Gets the ref2 of this Custom.

        alphanumeric (256)

        :return: The ref2 of this Custom.
        :rtype: str
        """
        return self._ref2

    @ref2.setter
    def ref2(self, ref2):
        """Sets the ref2 of this Custom.

        alphanumeric (256)

        :param ref2: The ref2 of this Custom.
        :type ref2: str
        """

        self._ref2 = ref2

    @property
    def ref3(self):
        """Gets the ref3 of this Custom.

        alphanumeric (256)

        :return: The ref3 of this Custom.
        :rtype: str
        """
        return self._ref3

    @ref3.setter
    def ref3(self, ref3):
        """Sets the ref3 of this Custom.

        alphanumeric (256)

        :param ref3: The ref3 of this Custom.
        :type ref3: str
        """

        self._ref3 = ref3

    @property
    def ref4(self):
        """Gets the ref4 of this Custom.

        alphanumeric (256)

        :return: The ref4 of this Custom.
        :rtype: str
        """
        return self._ref4

    @ref4.setter
    def ref4(self, ref4):
        """Sets the ref4 of this Custom.

        alphanumeric (256)

        :param ref4: The ref4 of this Custom.
        :type ref4: str
        """

        self._ref4 = ref4

    @property
    def ref5(self):
        """Gets the ref5 of this Custom.

        alphanumeric (256)

        :return: The ref5 of this Custom.
        :rtype: str
        """
        return self._ref5

    @ref5.setter
    def ref5(self, ref5):
        """Sets the ref5 of this Custom.

        alphanumeric (256)

        :param ref5: The ref5 of this Custom.
        :type ref5: str
        """

        self._ref5 = ref5
