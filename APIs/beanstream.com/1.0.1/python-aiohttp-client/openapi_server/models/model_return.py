# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ModelReturn(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: float=None, order_number: str=None):
        """ModelReturn - a model defined in OpenAPI

        :param amount: The amount of this ModelReturn.
        :param order_number: The order_number of this ModelReturn.
        """
        self.openapi_types = {
            'amount': float,
            'order_number': str
        }

        self.attribute_map = {
            'amount': 'amount',
            'order_number': 'order_number'
        }

        self._amount = amount
        self._order_number = order_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModelReturn':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Return of this ModelReturn.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this ModelReturn.

        The amount of the transaction to return. Must be less than or equal to the original purchase amount.

        :return: The amount of this ModelReturn.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this ModelReturn.

        The amount of the transaction to return. Must be less than or equal to the original purchase amount.

        :param amount: The amount of this ModelReturn.
        :type amount: float
        """
        if amount is None:
            raise ValueError("Invalid value for `amount`, must not be `None`")

        self._amount = amount

    @property
    def order_number(self):
        """Gets the order_number of this ModelReturn.

        alphanumeric (30)

        :return: The order_number of this ModelReturn.
        :rtype: str
        """
        return self._order_number

    @order_number.setter
    def order_number(self, order_number):
        """Sets the order_number of this ModelReturn.

        alphanumeric (30)

        :param order_number: The order_number of this ModelReturn.
        :type order_number: str
        """

        self._order_number = order_number
