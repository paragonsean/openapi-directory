# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.address import Address
from openapi_server.models.custom import Custom
from openapi_server.models.get_profile_default_card import GetProfileDefaultCard
from openapi_server import util


class PaymentProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_ref: str=None, billing: Address=None, card: GetProfileDefaultCard=None, code: int=None, custom: Custom=None, customer_code: str=None, language: str=None, last_transaction: str=None, message: str=None, modified_date: str=None, profile_group: str=None, status: str=None, velocity_group: str=None):
        """PaymentProfile - a model defined in OpenAPI

        :param account_ref: The account_ref of this PaymentProfile.
        :param billing: The billing of this PaymentProfile.
        :param card: The card of this PaymentProfile.
        :param code: The code of this PaymentProfile.
        :param custom: The custom of this PaymentProfile.
        :param customer_code: The customer_code of this PaymentProfile.
        :param language: The language of this PaymentProfile.
        :param last_transaction: The last_transaction of this PaymentProfile.
        :param message: The message of this PaymentProfile.
        :param modified_date: The modified_date of this PaymentProfile.
        :param profile_group: The profile_group of this PaymentProfile.
        :param status: The status of this PaymentProfile.
        :param velocity_group: The velocity_group of this PaymentProfile.
        """
        self.openapi_types = {
            'account_ref': str,
            'billing': Address,
            'card': GetProfileDefaultCard,
            'code': int,
            'custom': Custom,
            'customer_code': str,
            'language': str,
            'last_transaction': str,
            'message': str,
            'modified_date': str,
            'profile_group': str,
            'status': str,
            'velocity_group': str
        }

        self.attribute_map = {
            'account_ref': 'account_ref',
            'billing': 'billing',
            'card': 'card',
            'code': 'code',
            'custom': 'custom',
            'customer_code': 'customer_code',
            'language': 'language',
            'last_transaction': 'last_transaction',
            'message': 'message',
            'modified_date': 'modified_date',
            'profile_group': 'profile_group',
            'status': 'status',
            'velocity_group': 'velocity_group'
        }

        self._account_ref = account_ref
        self._billing = billing
        self._card = card
        self._code = code
        self._custom = custom
        self._customer_code = customer_code
        self._language = language
        self._last_transaction = last_transaction
        self._message = message
        self._modified_date = modified_date
        self._profile_group = profile_group
        self._status = status
        self._velocity_group = velocity_group

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PaymentProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PaymentProfile of this PaymentProfile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_ref(self):
        """Gets the account_ref of this PaymentProfile.


        :return: The account_ref of this PaymentProfile.
        :rtype: str
        """
        return self._account_ref

    @account_ref.setter
    def account_ref(self, account_ref):
        """Sets the account_ref of this PaymentProfile.


        :param account_ref: The account_ref of this PaymentProfile.
        :type account_ref: str
        """

        self._account_ref = account_ref

    @property
    def billing(self):
        """Gets the billing of this PaymentProfile.


        :return: The billing of this PaymentProfile.
        :rtype: Address
        """
        return self._billing

    @billing.setter
    def billing(self, billing):
        """Sets the billing of this PaymentProfile.


        :param billing: The billing of this PaymentProfile.
        :type billing: Address
        """

        self._billing = billing

    @property
    def card(self):
        """Gets the card of this PaymentProfile.


        :return: The card of this PaymentProfile.
        :rtype: GetProfileDefaultCard
        """
        return self._card

    @card.setter
    def card(self, card):
        """Sets the card of this PaymentProfile.


        :param card: The card of this PaymentProfile.
        :type card: GetProfileDefaultCard
        """

        self._card = card

    @property
    def code(self):
        """Gets the code of this PaymentProfile.

        digits(2)

        :return: The code of this PaymentProfile.
        :rtype: int
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this PaymentProfile.

        digits(2)

        :param code: The code of this PaymentProfile.
        :type code: int
        """

        self._code = code

    @property
    def custom(self):
        """Gets the custom of this PaymentProfile.


        :return: The custom of this PaymentProfile.
        :rtype: Custom
        """
        return self._custom

    @custom.setter
    def custom(self, custom):
        """Sets the custom of this PaymentProfile.


        :param custom: The custom of this PaymentProfile.
        :type custom: Custom
        """

        self._custom = custom

    @property
    def customer_code(self):
        """Gets the customer_code of this PaymentProfile.

        alphanumeric(32)

        :return: The customer_code of this PaymentProfile.
        :rtype: str
        """
        return self._customer_code

    @customer_code.setter
    def customer_code(self, customer_code):
        """Sets the customer_code of this PaymentProfile.

        alphanumeric(32)

        :param customer_code: The customer_code of this PaymentProfile.
        :type customer_code: str
        """

        self._customer_code = customer_code

    @property
    def language(self):
        """Gets the language of this PaymentProfile.

        characters(2)

        :return: The language of this PaymentProfile.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this PaymentProfile.

        characters(2)

        :param language: The language of this PaymentProfile.
        :type language: str
        """

        self._language = language

    @property
    def last_transaction(self):
        """Gets the last_transaction of this PaymentProfile.

        date and time alphanumeric(24)

        :return: The last_transaction of this PaymentProfile.
        :rtype: str
        """
        return self._last_transaction

    @last_transaction.setter
    def last_transaction(self, last_transaction):
        """Sets the last_transaction of this PaymentProfile.

        date and time alphanumeric(24)

        :param last_transaction: The last_transaction of this PaymentProfile.
        :type last_transaction: str
        """

        self._last_transaction = last_transaction

    @property
    def message(self):
        """Gets the message of this PaymentProfile.

        alphanumeric(64)

        :return: The message of this PaymentProfile.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this PaymentProfile.

        alphanumeric(64)

        :param message: The message of this PaymentProfile.
        :type message: str
        """

        self._message = message

    @property
    def modified_date(self):
        """Gets the modified_date of this PaymentProfile.

        date and time it was last modified alphanumeric(24)

        :return: The modified_date of this PaymentProfile.
        :rtype: str
        """
        return self._modified_date

    @modified_date.setter
    def modified_date(self, modified_date):
        """Sets the modified_date of this PaymentProfile.

        date and time it was last modified alphanumeric(24)

        :param modified_date: The modified_date of this PaymentProfile.
        :type modified_date: str
        """

        self._modified_date = modified_date

    @property
    def profile_group(self):
        """Gets the profile_group of this PaymentProfile.


        :return: The profile_group of this PaymentProfile.
        :rtype: str
        """
        return self._profile_group

    @profile_group.setter
    def profile_group(self, profile_group):
        """Sets the profile_group of this PaymentProfile.


        :param profile_group: The profile_group of this PaymentProfile.
        :type profile_group: str
        """

        self._profile_group = profile_group

    @property
    def status(self):
        """Gets the status of this PaymentProfile.

        characters(1)

        :return: The status of this PaymentProfile.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this PaymentProfile.

        characters(1)

        :param status: The status of this PaymentProfile.
        :type status: str
        """

        self._status = status

    @property
    def velocity_group(self):
        """Gets the velocity_group of this PaymentProfile.


        :return: The velocity_group of this PaymentProfile.
        :rtype: str
        """
        return self._velocity_group

    @velocity_group.setter
    def velocity_group(self, velocity_group):
        """Sets the velocity_group of this PaymentProfile.


        :param velocity_group: The velocity_group of this PaymentProfile.
        :type velocity_group: str
        """

        self._velocity_group = velocity_group
