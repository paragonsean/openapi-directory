/**
 * Beanstream Payments
 * https://www.beanstream.com/api/v1
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BeanstreamPayments);
  }
}(this, function(expect, BeanstreamPayments) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BeanstreamPayments.SearchRecord();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SearchRecord', function() {
    it('should create an instance of SearchRecord', function() {
      // uncomment below and update the code to test SearchRecord
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be.a(BeanstreamPayments.SearchRecord);
    });

    it('should have the property bAddress1 (base name: "b_address1")', function() {
      // uncomment below and update the code to test the property bAddress1
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property bAddress2 (base name: "b_address2")', function() {
      // uncomment below and update the code to test the property bAddress2
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property bCity (base name: "b_city")', function() {
      // uncomment below and update the code to test the property bCity
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property bCountry (base name: "b_country")', function() {
      // uncomment below and update the code to test the property bCountry
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property bEmail (base name: "b_email")', function() {
      // uncomment below and update the code to test the property bEmail
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property bName (base name: "b_name")', function() {
      // uncomment below and update the code to test the property bName
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property bPhone (base name: "b_phone")', function() {
      // uncomment below and update the code to test the property bPhone
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property bPostal (base name: "b_postal")', function() {
      // uncomment below and update the code to test the property bPostal
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property bProvince (base name: "b_province")', function() {
      // uncomment below and update the code to test the property bProvince
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property customerCode (base name: "customer_code")', function() {
      // uncomment below and update the code to test the property customerCode
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property messageId (base name: "message_id")', function() {
      // uncomment below and update the code to test the property messageId
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property messageText (base name: "message_text")', function() {
      // uncomment below and update the code to test the property messageText
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property productId (base name: "product_id")', function() {
      // uncomment below and update the code to test the property productId
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property productName (base name: "product_name")', function() {
      // uncomment below and update the code to test the property productName
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property ref1 (base name: "ref1")', function() {
      // uncomment below and update the code to test the property ref1
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property ref2 (base name: "ref2")', function() {
      // uncomment below and update the code to test the property ref2
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property ref3 (base name: "ref3")', function() {
      // uncomment below and update the code to test the property ref3
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property ref4 (base name: "ref4")', function() {
      // uncomment below and update the code to test the property ref4
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property ref5 (base name: "ref5")', function() {
      // uncomment below and update the code to test the property ref5
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property rowId (base name: "row_id")', function() {
      // uncomment below and update the code to test the property rowId
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property sAddress1 (base name: "s_address1")', function() {
      // uncomment below and update the code to test the property sAddress1
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property sAddress2 (base name: "s_address2")', function() {
      // uncomment below and update the code to test the property sAddress2
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property sCity (base name: "s_city")', function() {
      // uncomment below and update the code to test the property sCity
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property sCountry (base name: "s_country")', function() {
      // uncomment below and update the code to test the property sCountry
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property sEmail (base name: "s_email")', function() {
      // uncomment below and update the code to test the property sEmail
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property sName (base name: "s_name")', function() {
      // uncomment below and update the code to test the property sName
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property sPhone (base name: "s_phone")', function() {
      // uncomment below and update the code to test the property sPhone
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property sPostal (base name: "s_postal")', function() {
      // uncomment below and update the code to test the property sPostal
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property sProvince (base name: "s_province")', function() {
      // uncomment below and update the code to test the property sProvince
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property trnAmount (base name: "trn_amount")', function() {
      // uncomment below and update the code to test the property trnAmount
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property trnApprovalCode (base name: "trn_approval_code")', function() {
      // uncomment below and update the code to test the property trnApprovalCode
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property trnAvsResult (base name: "trn_avs_result")', function() {
      // uncomment below and update the code to test the property trnAvsResult
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property trnBatchNo (base name: "trn_batch_no")', function() {
      // uncomment below and update the code to test the property trnBatchNo
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property trnCardExpiry (base name: "trn_card_expiry")', function() {
      // uncomment below and update the code to test the property trnCardExpiry
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property trnCardOwner (base name: "trn_card_owner")', function() {
      // uncomment below and update the code to test the property trnCardOwner
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property trnCardType (base name: "trn_card_type")', function() {
      // uncomment below and update the code to test the property trnCardType
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property trnCompletions (base name: "trn_completions")', function() {
      // uncomment below and update the code to test the property trnCompletions
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property trnCvdResult (base name: "trn_cvd_result")', function() {
      // uncomment below and update the code to test the property trnCvdResult
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property trnDateTime (base name: "trn_date_time")', function() {
      // uncomment below and update the code to test the property trnDateTime
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property trnId (base name: "trn_id")', function() {
      // uncomment below and update the code to test the property trnId
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property trnIp (base name: "trn_ip")', function() {
      // uncomment below and update the code to test the property trnIp
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property trnMaskedCard (base name: "trn_masked_card")', function() {
      // uncomment below and update the code to test the property trnMaskedCard
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property trnOrderNumber (base name: "trn_order_number")', function() {
      // uncomment below and update the code to test the property trnOrderNumber
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property trnPaymentMethod (base name: "trn_payment_method")', function() {
      // uncomment below and update the code to test the property trnPaymentMethod
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property trnReference (base name: "trn_reference")', function() {
      // uncomment below and update the code to test the property trnReference
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property trnResponse (base name: "trn_response")', function() {
      // uncomment below and update the code to test the property trnResponse
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property trnReturns (base name: "trn_returns")', function() {
      // uncomment below and update the code to test the property trnReturns
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property trnType (base name: "trn_type")', function() {
      // uncomment below and update the code to test the property trnType
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

    it('should have the property trnVoided (base name: "trn_voided")', function() {
      // uncomment below and update the code to test the property trnVoided
      //var instance = new BeanstreamPayments.SearchRecord();
      //expect(instance).to.be();
    });

  });

}));
