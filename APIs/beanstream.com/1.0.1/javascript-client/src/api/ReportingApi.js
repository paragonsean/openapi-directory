/**
 * Beanstream Payments
 * https://www.beanstream.com/api/v1
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BeanstreamException from '../model/BeanstreamException';
import SearchQuery from '../model/SearchQuery';
import SearchResult from '../model/SearchResult';

/**
* Reporting service.
* @module api/ReportingApi
* @version 1.0.1
*/
export default class ReportingApi {

    /**
    * Constructs a new ReportingApi. 
    * @alias module:api/ReportingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the reportsPost operation.
     * @callback module:api/ReportingApi~reportsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SearchResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search Query
     * Query for transactions using a date range and optional search criteria. This method allows you to page your search results if you are expecting a lot of results to be returned. The page start value begins at 1. If no records are found the API will return a 404 error message. For details on the parameters and allowed values for Criteria please visit the documentation http://developer.beanstream.com/documentation/analyze-payments/search-specific-criteria/
     * @param {Object} opts Optional parameters
     * @param {module:model/SearchQuery} [searchQuery] 
     * @param {module:api/ReportingApi~reportsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SearchResult}
     */
    reportsPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['searchQuery'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SearchResult;
      return this.apiClient.callApi(
        '/reports', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
