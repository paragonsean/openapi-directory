/**
 * Beanstream Payments
 * https://www.beanstream.com/api/v1
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CardPurchaseResponse model module.
 * @module model/CardPurchaseResponse
 * @version 1.0.1
 */
class CardPurchaseResponse {
    /**
     * Constructs a new <code>CardPurchaseResponse</code>.
     * @alias module:model/CardPurchaseResponse
     */
    constructor() { 
        
        CardPurchaseResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CardPurchaseResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CardPurchaseResponse} obj Optional instance to populate.
     * @return {module:model/CardPurchaseResponse} The populated <code>CardPurchaseResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CardPurchaseResponse();

            if (data.hasOwnProperty('address_match')) {
                obj['address_match'] = ApiClient.convertToType(data['address_match'], 'Number');
            }
            if (data.hasOwnProperty('card_type')) {
                obj['card_type'] = ApiClient.convertToType(data['card_type'], 'String');
            }
            if (data.hasOwnProperty('cvd_match')) {
                obj['cvd_match'] = ApiClient.convertToType(data['cvd_match'], 'Number');
            }
            if (data.hasOwnProperty('last_four')) {
                obj['last_four'] = ApiClient.convertToType(data['last_four'], 'String');
            }
            if (data.hasOwnProperty('postal_result')) {
                obj['postal_result'] = ApiClient.convertToType(data['postal_result'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CardPurchaseResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CardPurchaseResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['card_type'] && !(typeof data['card_type'] === 'string' || data['card_type'] instanceof String)) {
            throw new Error("Expected the field `card_type` to be a primitive type in the JSON string but got " + data['card_type']);
        }
        // ensure the json data is a string
        if (data['last_four'] && !(typeof data['last_four'] === 'string' || data['last_four'] instanceof String)) {
            throw new Error("Expected the field `last_four` to be a primitive type in the JSON string but got " + data['last_four']);
        }

        return true;
    }


}



/**
 * digits (1)
 * @member {Number} address_match
 */
CardPurchaseResponse.prototype['address_match'] = undefined;

/**
 * characters (2)
 * @member {String} card_type
 */
CardPurchaseResponse.prototype['card_type'] = undefined;

/**
 * digits (2)
 * @member {Number} cvd_match
 */
CardPurchaseResponse.prototype['cvd_match'] = undefined;

/**
 * digits (4)
 * @member {String} last_four
 */
CardPurchaseResponse.prototype['last_four'] = undefined;

/**
 * digits (1)
 * @member {Number} postal_result
 */
CardPurchaseResponse.prototype['postal_result'] = undefined;






export default CardPurchaseResponse;

