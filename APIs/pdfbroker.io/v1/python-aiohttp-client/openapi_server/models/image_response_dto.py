# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImageResponseDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error_message: str=None, image_base64_string: str=None):
        """ImageResponseDto - a model defined in OpenAPI

        :param error_message: The error_message of this ImageResponseDto.
        :param image_base64_string: The image_base64_string of this ImageResponseDto.
        """
        self.openapi_types = {
            'error_message': str,
            'image_base64_string': str
        }

        self.attribute_map = {
            'error_message': 'errorMessage',
            'image_base64_string': 'imageBase64String'
        }

        self._error_message = error_message
        self._image_base64_string = image_base64_string

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImageResponseDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImageResponseDto of this ImageResponseDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_message(self):
        """Gets the error_message of this ImageResponseDto.

        If any error occurs the message will be displayed in here

        :return: The error_message of this ImageResponseDto.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this ImageResponseDto.

        If any error occurs the message will be displayed in here

        :param error_message: The error_message of this ImageResponseDto.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def image_base64_string(self):
        """Gets the image_base64_string of this ImageResponseDto.

        The Base64 encoded string that is the image file. This is a complete data uri, including media type that can be used directly as src on a img-tag e.g.

        :return: The image_base64_string of this ImageResponseDto.
        :rtype: str
        """
        return self._image_base64_string

    @image_base64_string.setter
    def image_base64_string(self, image_base64_string):
        """Sets the image_base64_string of this ImageResponseDto.

        The Base64 encoded string that is the image file. This is a complete data uri, including media type that can be used directly as src on a img-tag e.g.

        :param image_base64_string: The image_base64_string of this ImageResponseDto.
        :type image_base64_string: str
        """

        self._image_base64_string = image_base64_string
