# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.font_style import FontStyle
from openapi_server import util


class FontDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, size: float=None, style: FontStyle=None):
        """FontDto - a model defined in OpenAPI

        :param name: The name of this FontDto.
        :param size: The size of this FontDto.
        :param style: The style of this FontDto.
        """
        self.openapi_types = {
            'name': str,
            'size': float,
            'style': FontStyle
        }

        self.attribute_map = {
            'name': 'name',
            'size': 'size',
            'style': 'style'
        }

        self._name = name
        self._size = size
        self._style = style

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FontDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FontDto of this FontDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this FontDto.

        Gets the name of the font

        :return: The name of this FontDto.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this FontDto.

        Gets the name of the font

        :param name: The name of this FontDto.
        :type name: str
        """

        self._name = name

    @property
    def size(self):
        """Gets the size of this FontDto.

        Gets the size of the font

        :return: The size of this FontDto.
        :rtype: float
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this FontDto.

        Gets the size of the font

        :param size: The size of this FontDto.
        :type size: float
        """

        self._size = size

    @property
    def style(self):
        """Gets the style of this FontDto.


        :return: The style of this FontDto.
        :rtype: FontStyle
        """
        return self._style

    @style.setter
    def style(self, style):
        """Sets the style of this FontDto.


        :param style: The style of this FontDto.
        :type style: FontStyle
        """

        self._style = style
