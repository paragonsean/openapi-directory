/**
 * PdfBroker.io API
 * PdfBroker.io is an api for creating pdf files from Xsl-Fo or Html and other useful pdf utilities.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pdfbroker.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ColorDto from './model/ColorDto';
import ErrorResponseDto from './model/ErrorResponseDto';
import FoRequestDto from './model/FoRequestDto';
import FoTransformRequestDto from './model/FoTransformRequestDto';
import FontDto from './model/FontDto';
import FontStyle from './model/FontStyle';
import ImageResponseDto from './model/ImageResponseDto';
import PdfConcatenationRequestDto from './model/PdfConcatenationRequestDto';
import PdfMetadataDto from './model/PdfMetadataDto';
import PdfResponseDto from './model/PdfResponseDto';
import PdfToImageOptions from './model/PdfToImageOptions';
import PdfToImageRequestDto from './model/PdfToImageRequestDto';
import PdfWriteStringOptions from './model/PdfWriteStringOptions';
import PdfWriteStringRequestDto from './model/PdfWriteStringRequestDto';
import WkHtmlToPdfRequestDto from './model/WkHtmlToPdfRequestDto';
import XOriginPoint from './model/XOriginPoint';
import YOriginPoint from './model/YOriginPoint';
import PdfApi from './api/PdfApi';


/**
* PdfBroker.io is an api for creating pdf files from Xsl-Fo or Html and other useful pdf utilities..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var PdfBrokerIoApi = require('index'); // See note below*.
* var xxxSvc = new PdfBrokerIoApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new PdfBrokerIoApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new PdfBrokerIoApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new PdfBrokerIoApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ColorDto model constructor.
     * @property {module:model/ColorDto}
     */
    ColorDto,

    /**
     * The ErrorResponseDto model constructor.
     * @property {module:model/ErrorResponseDto}
     */
    ErrorResponseDto,

    /**
     * The FoRequestDto model constructor.
     * @property {module:model/FoRequestDto}
     */
    FoRequestDto,

    /**
     * The FoTransformRequestDto model constructor.
     * @property {module:model/FoTransformRequestDto}
     */
    FoTransformRequestDto,

    /**
     * The FontDto model constructor.
     * @property {module:model/FontDto}
     */
    FontDto,

    /**
     * The FontStyle model constructor.
     * @property {module:model/FontStyle}
     */
    FontStyle,

    /**
     * The ImageResponseDto model constructor.
     * @property {module:model/ImageResponseDto}
     */
    ImageResponseDto,

    /**
     * The PdfConcatenationRequestDto model constructor.
     * @property {module:model/PdfConcatenationRequestDto}
     */
    PdfConcatenationRequestDto,

    /**
     * The PdfMetadataDto model constructor.
     * @property {module:model/PdfMetadataDto}
     */
    PdfMetadataDto,

    /**
     * The PdfResponseDto model constructor.
     * @property {module:model/PdfResponseDto}
     */
    PdfResponseDto,

    /**
     * The PdfToImageOptions model constructor.
     * @property {module:model/PdfToImageOptions}
     */
    PdfToImageOptions,

    /**
     * The PdfToImageRequestDto model constructor.
     * @property {module:model/PdfToImageRequestDto}
     */
    PdfToImageRequestDto,

    /**
     * The PdfWriteStringOptions model constructor.
     * @property {module:model/PdfWriteStringOptions}
     */
    PdfWriteStringOptions,

    /**
     * The PdfWriteStringRequestDto model constructor.
     * @property {module:model/PdfWriteStringRequestDto}
     */
    PdfWriteStringRequestDto,

    /**
     * The WkHtmlToPdfRequestDto model constructor.
     * @property {module:model/WkHtmlToPdfRequestDto}
     */
    WkHtmlToPdfRequestDto,

    /**
     * The XOriginPoint model constructor.
     * @property {module:model/XOriginPoint}
     */
    XOriginPoint,

    /**
     * The YOriginPoint model constructor.
     * @property {module:model/YOriginPoint}
     */
    YOriginPoint,

    /**
    * The PdfApi service constructor.
    * @property {module:api/PdfApi}
    */
    PdfApi
};
