/**
 * api.video
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPagination_link.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPagination_link::OAIPagination_link(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPagination_link::OAIPagination_link() {
    this->initializeModel();
}

OAIPagination_link::~OAIPagination_link() {}

void OAIPagination_link::initializeModel() {

    m_rel_isSet = false;
    m_rel_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;
}

void OAIPagination_link::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPagination_link::fromJsonObject(QJsonObject json) {

    m_rel_isValid = ::OpenAPI::fromJsonValue(m_rel, json[QString("rel")]);
    m_rel_isSet = !json[QString("rel")].isNull() && m_rel_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;
}

QString OAIPagination_link::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPagination_link::asJsonObject() const {
    QJsonObject obj;
    if (m_rel_isSet) {
        obj.insert(QString("rel"), ::OpenAPI::toJsonValue(m_rel));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    return obj;
}

QString OAIPagination_link::getRel() const {
    return m_rel;
}
void OAIPagination_link::setRel(const QString &rel) {
    m_rel = rel;
    m_rel_isSet = true;
}

bool OAIPagination_link::is_rel_Set() const{
    return m_rel_isSet;
}

bool OAIPagination_link::is_rel_Valid() const{
    return m_rel_isValid;
}

QString OAIPagination_link::getUri() const {
    return m_uri;
}
void OAIPagination_link::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIPagination_link::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIPagination_link::is_uri_Valid() const{
    return m_uri_isValid;
}

bool OAIPagination_link::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_rel_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPagination_link::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
