/**
 * api.video
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVideo_session_location.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVideo_session_location::OAIVideo_session_location(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVideo_session_location::OAIVideo_session_location() {
    this->initializeModel();
}

OAIVideo_session_location::~OAIVideo_session_location() {}

void OAIVideo_session_location::initializeModel() {

    m_city_isSet = false;
    m_city_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;
}

void OAIVideo_session_location::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVideo_session_location::fromJsonObject(QJsonObject json) {

    m_city_isValid = ::OpenAPI::fromJsonValue(m_city, json[QString("city")]);
    m_city_isSet = !json[QString("city")].isNull() && m_city_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;
}

QString OAIVideo_session_location::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVideo_session_location::asJsonObject() const {
    QJsonObject obj;
    if (m_city_isSet) {
        obj.insert(QString("city"), ::OpenAPI::toJsonValue(m_city));
    }
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    return obj;
}

QString OAIVideo_session_location::getCity() const {
    return m_city;
}
void OAIVideo_session_location::setCity(const QString &city) {
    m_city = city;
    m_city_isSet = true;
}

bool OAIVideo_session_location::is_city_Set() const{
    return m_city_isSet;
}

bool OAIVideo_session_location::is_city_Valid() const{
    return m_city_isValid;
}

QString OAIVideo_session_location::getCountry() const {
    return m_country;
}
void OAIVideo_session_location::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAIVideo_session_location::is_country_Set() const{
    return m_country_isSet;
}

bool OAIVideo_session_location::is_country_Valid() const{
    return m_country_isValid;
}

bool OAIVideo_session_location::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVideo_session_location::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
