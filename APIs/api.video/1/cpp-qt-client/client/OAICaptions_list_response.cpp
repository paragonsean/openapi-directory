/**
 * api.video
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICaptions_list_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICaptions_list_response::OAICaptions_list_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICaptions_list_response::OAICaptions_list_response() {
    this->initializeModel();
}

OAICaptions_list_response::~OAICaptions_list_response() {}

void OAICaptions_list_response::initializeModel() {

    m_data_isSet = false;
    m_data_isValid = false;

    m_pagination_isSet = false;
    m_pagination_isValid = false;
}

void OAICaptions_list_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICaptions_list_response::fromJsonObject(QJsonObject json) {

    m_data_isValid = ::OpenAPI::fromJsonValue(m_data, json[QString("data")]);
    m_data_isSet = !json[QString("data")].isNull() && m_data_isValid;

    m_pagination_isValid = ::OpenAPI::fromJsonValue(m_pagination, json[QString("pagination")]);
    m_pagination_isSet = !json[QString("pagination")].isNull() && m_pagination_isValid;
}

QString OAICaptions_list_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICaptions_list_response::asJsonObject() const {
    QJsonObject obj;
    if (m_data.size() > 0) {
        obj.insert(QString("data"), ::OpenAPI::toJsonValue(m_data));
    }
    if (m_pagination.isSet()) {
        obj.insert(QString("pagination"), ::OpenAPI::toJsonValue(m_pagination));
    }
    return obj;
}

QList<OAISubtitle> OAICaptions_list_response::getData() const {
    return m_data;
}
void OAICaptions_list_response::setData(const QList<OAISubtitle> &data) {
    m_data = data;
    m_data_isSet = true;
}

bool OAICaptions_list_response::is_data_Set() const{
    return m_data_isSet;
}

bool OAICaptions_list_response::is_data_Valid() const{
    return m_data_isValid;
}

OAIPagination OAICaptions_list_response::getPagination() const {
    return m_pagination;
}
void OAICaptions_list_response::setPagination(const OAIPagination &pagination) {
    m_pagination = pagination;
    m_pagination_isSet = true;
}

bool OAICaptions_list_response::is_pagination_Set() const{
    return m_pagination_isSet;
}

bool OAICaptions_list_response::is_pagination_Valid() const{
    return m_pagination_isValid;
}

bool OAICaptions_list_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_pagination.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICaptions_list_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
