/**
 * api.video
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPlayer_allOf_assets.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPlayer_allOf_assets::OAIPlayer_allOf_assets(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPlayer_allOf_assets::OAIPlayer_allOf_assets() {
    this->initializeModel();
}

OAIPlayer_allOf_assets::~OAIPlayer_allOf_assets() {}

void OAIPlayer_allOf_assets::initializeModel() {

    m_link_isSet = false;
    m_link_isValid = false;

    m_logo_isSet = false;
    m_logo_isValid = false;
}

void OAIPlayer_allOf_assets::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPlayer_allOf_assets::fromJsonObject(QJsonObject json) {

    m_link_isValid = ::OpenAPI::fromJsonValue(m_link, json[QString("link")]);
    m_link_isSet = !json[QString("link")].isNull() && m_link_isValid;

    m_logo_isValid = ::OpenAPI::fromJsonValue(m_logo, json[QString("logo")]);
    m_logo_isSet = !json[QString("logo")].isNull() && m_logo_isValid;
}

QString OAIPlayer_allOf_assets::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPlayer_allOf_assets::asJsonObject() const {
    QJsonObject obj;
    if (m_link_isSet) {
        obj.insert(QString("link"), ::OpenAPI::toJsonValue(m_link));
    }
    if (m_logo_isSet) {
        obj.insert(QString("logo"), ::OpenAPI::toJsonValue(m_logo));
    }
    return obj;
}

QString OAIPlayer_allOf_assets::getLink() const {
    return m_link;
}
void OAIPlayer_allOf_assets::setLink(const QString &link) {
    m_link = link;
    m_link_isSet = true;
}

bool OAIPlayer_allOf_assets::is_link_Set() const{
    return m_link_isSet;
}

bool OAIPlayer_allOf_assets::is_link_Valid() const{
    return m_link_isValid;
}

QString OAIPlayer_allOf_assets::getLogo() const {
    return m_logo;
}
void OAIPlayer_allOf_assets::setLogo(const QString &logo) {
    m_logo = logo;
    m_logo_isSet = true;
}

bool OAIPlayer_allOf_assets::is_logo_Set() const{
    return m_logo_isSet;
}

bool OAIPlayer_allOf_assets::is_logo_Valid() const{
    return m_logo_isValid;
}

bool OAIPlayer_allOf_assets::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_logo_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPlayer_allOf_assets::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
