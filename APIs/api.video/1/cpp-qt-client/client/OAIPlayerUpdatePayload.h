/**
 * api.video
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlayerUpdatePayload.h
 *
 * 
 */

#ifndef OAIPlayerUpdatePayload_H
#define OAIPlayerUpdatePayload_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPlayerUpdatePayload : public OAIObject {
public:
    OAIPlayerUpdatePayload();
    OAIPlayerUpdatePayload(QString json);
    ~OAIPlayerUpdatePayload() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBackgroundBottom() const;
    void setBackgroundBottom(const QString &background_bottom);
    bool is_background_bottom_Set() const;
    bool is_background_bottom_Valid() const;

    QString getBackgroundText() const;
    void setBackgroundText(const QString &background_text);
    bool is_background_text_Set() const;
    bool is_background_text_Valid() const;

    QString getBackgroundTop() const;
    void setBackgroundTop(const QString &background_top);
    bool is_background_top_Set() const;
    bool is_background_top_Valid() const;

    bool isEnableApi() const;
    void setEnableApi(const bool &enable_api);
    bool is_enable_api_Set() const;
    bool is_enable_api_Valid() const;

    bool isEnableControls() const;
    void setEnableControls(const bool &enable_controls);
    bool is_enable_controls_Set() const;
    bool is_enable_controls_Valid() const;

    bool isForceAutoplay() const;
    void setForceAutoplay(const bool &force_autoplay);
    bool is_force_autoplay_Set() const;
    bool is_force_autoplay_Valid() const;

    bool isForceLoop() const;
    void setForceLoop(const bool &force_loop);
    bool is_force_loop_Set() const;
    bool is_force_loop_Valid() const;

    bool isHideTitle() const;
    void setHideTitle(const bool &hide_title);
    bool is_hide_title_Set() const;
    bool is_hide_title_Valid() const;

    QString getLink() const;
    void setLink(const QString &link);
    bool is_link_Set() const;
    bool is_link_Valid() const;

    QString getLinkHover() const;
    void setLinkHover(const QString &link_hover);
    bool is_link_hover_Set() const;
    bool is_link_hover_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getTrackBackground() const;
    void setTrackBackground(const QString &track_background);
    bool is_track_background_Set() const;
    bool is_track_background_Valid() const;

    QString getTrackPlayed() const;
    void setTrackPlayed(const QString &track_played);
    bool is_track_played_Set() const;
    bool is_track_played_Valid() const;

    QString getTrackUnplayed() const;
    void setTrackUnplayed(const QString &track_unplayed);
    bool is_track_unplayed_Set() const;
    bool is_track_unplayed_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_background_bottom;
    bool m_background_bottom_isSet;
    bool m_background_bottom_isValid;

    QString m_background_text;
    bool m_background_text_isSet;
    bool m_background_text_isValid;

    QString m_background_top;
    bool m_background_top_isSet;
    bool m_background_top_isValid;

    bool m_enable_api;
    bool m_enable_api_isSet;
    bool m_enable_api_isValid;

    bool m_enable_controls;
    bool m_enable_controls_isSet;
    bool m_enable_controls_isValid;

    bool m_force_autoplay;
    bool m_force_autoplay_isSet;
    bool m_force_autoplay_isValid;

    bool m_force_loop;
    bool m_force_loop_isSet;
    bool m_force_loop_isValid;

    bool m_hide_title;
    bool m_hide_title_isSet;
    bool m_hide_title_isValid;

    QString m_link;
    bool m_link_isSet;
    bool m_link_isValid;

    QString m_link_hover;
    bool m_link_hover_isSet;
    bool m_link_hover_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_track_background;
    bool m_track_background_isSet;
    bool m_track_background_isValid;

    QString m_track_played;
    bool m_track_played_isSet;
    bool m_track_played_isValid;

    QString m_track_unplayed;
    bool m_track_unplayed_isSet;
    bool m_track_unplayed_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlayerUpdatePayload)

#endif // OAIPlayerUpdatePayload_H
