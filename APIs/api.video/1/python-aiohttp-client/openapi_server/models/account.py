# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_quota import AccountQuota
from openapi_server import util


class Account(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, environment: str=None, features: List[str]=None, quota: AccountQuota=None):
        """Account - a model defined in OpenAPI

        :param environment: The environment of this Account.
        :param features: The features of this Account.
        :param quota: The quota of this Account.
        """
        self.openapi_types = {
            'environment': str,
            'features': List[str],
            'quota': AccountQuota
        }

        self.attribute_map = {
            'environment': 'environment',
            'features': 'features',
            'quota': 'quota'
        }

        self._environment = environment
        self._features = features
        self._quota = quota

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Account':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The account of this Account.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def environment(self):
        """Gets the environment of this Account.

        Deprecated. Whether you are using your production or sandbox API key will impact what environment is displayed here, as well as stats and features information. If you use your sandbox key, the environment is \"sandbox.\" If you use your production key, the environment is \"production.\"

        :return: The environment of this Account.
        :rtype: str
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this Account.

        Deprecated. Whether you are using your production or sandbox API key will impact what environment is displayed here, as well as stats and features information. If you use your sandbox key, the environment is \"sandbox.\" If you use your production key, the environment is \"production.\"

        :param environment: The environment of this Account.
        :type environment: str
        """

        self._environment = environment

    @property
    def features(self):
        """Gets the features of this Account.

        Deprecated. What features are enabled for your account. Choices include: app.dynamic_metadata - the ability to dynamically tag videos to better segment and understand your audiences, app.event_log - the ability to create and retrieve a log detailing how your videos were interacted with, player.white_label - the ability to customise your player, stats.player_events - the ability to see statistics about how your player is being used, transcode.mp4_support - the ability to reformat content into mp4 using the H264 codec.

        :return: The features of this Account.
        :rtype: List[str]
        """
        return self._features

    @features.setter
    def features(self, features):
        """Sets the features of this Account.

        Deprecated. What features are enabled for your account. Choices include: app.dynamic_metadata - the ability to dynamically tag videos to better segment and understand your audiences, app.event_log - the ability to create and retrieve a log detailing how your videos were interacted with, player.white_label - the ability to customise your player, stats.player_events - the ability to see statistics about how your player is being used, transcode.mp4_support - the ability to reformat content into mp4 using the H264 codec.

        :param features: The features of this Account.
        :type features: List[str]
        """

        self._features = features

    @property
    def quota(self):
        """Gets the quota of this Account.


        :return: The quota of this Account.
        :rtype: AccountQuota
        """
        return self._quota

    @quota.setter
    def quota(self, quota):
        """Sets the quota of this Account.


        :param quota: The quota of this Account.
        :type quota: AccountQuota
        """

        self._quota = quota
