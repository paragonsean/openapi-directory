# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.live_stream_session_client import LiveStreamSessionClient
from openapi_server.models.live_stream_session_device import LiveStreamSessionDevice
from openapi_server.models.live_stream_session_location import LiveStreamSessionLocation
from openapi_server.models.live_stream_session_referrer import LiveStreamSessionReferrer
from openapi_server.models.live_stream_session_session import LiveStreamSessionSession
from openapi_server.models.video_session_os import VideoSessionOs
from openapi_server import util


class LiveStreamSession(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client: LiveStreamSessionClient=None, device: LiveStreamSessionDevice=None, location: LiveStreamSessionLocation=None, os: VideoSessionOs=None, referrer: LiveStreamSessionReferrer=None, session: LiveStreamSessionSession=None):
        """LiveStreamSession - a model defined in OpenAPI

        :param client: The client of this LiveStreamSession.
        :param device: The device of this LiveStreamSession.
        :param location: The location of this LiveStreamSession.
        :param os: The os of this LiveStreamSession.
        :param referrer: The referrer of this LiveStreamSession.
        :param session: The session of this LiveStreamSession.
        """
        self.openapi_types = {
            'client': LiveStreamSessionClient,
            'device': LiveStreamSessionDevice,
            'location': LiveStreamSessionLocation,
            'os': VideoSessionOs,
            'referrer': LiveStreamSessionReferrer,
            'session': LiveStreamSessionSession
        }

        self.attribute_map = {
            'client': 'client',
            'device': 'device',
            'location': 'location',
            'os': 'os',
            'referrer': 'referrer',
            'session': 'session'
        }

        self._client = client
        self._device = device
        self._location = location
        self._os = os
        self._referrer = referrer
        self._session = session

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LiveStreamSession':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The live-stream-session of this LiveStreamSession.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client(self):
        """Gets the client of this LiveStreamSession.


        :return: The client of this LiveStreamSession.
        :rtype: LiveStreamSessionClient
        """
        return self._client

    @client.setter
    def client(self, client):
        """Sets the client of this LiveStreamSession.


        :param client: The client of this LiveStreamSession.
        :type client: LiveStreamSessionClient
        """

        self._client = client

    @property
    def device(self):
        """Gets the device of this LiveStreamSession.


        :return: The device of this LiveStreamSession.
        :rtype: LiveStreamSessionDevice
        """
        return self._device

    @device.setter
    def device(self, device):
        """Sets the device of this LiveStreamSession.


        :param device: The device of this LiveStreamSession.
        :type device: LiveStreamSessionDevice
        """

        self._device = device

    @property
    def location(self):
        """Gets the location of this LiveStreamSession.


        :return: The location of this LiveStreamSession.
        :rtype: LiveStreamSessionLocation
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this LiveStreamSession.


        :param location: The location of this LiveStreamSession.
        :type location: LiveStreamSessionLocation
        """

        self._location = location

    @property
    def os(self):
        """Gets the os of this LiveStreamSession.


        :return: The os of this LiveStreamSession.
        :rtype: VideoSessionOs
        """
        return self._os

    @os.setter
    def os(self, os):
        """Sets the os of this LiveStreamSession.


        :param os: The os of this LiveStreamSession.
        :type os: VideoSessionOs
        """

        self._os = os

    @property
    def referrer(self):
        """Gets the referrer of this LiveStreamSession.


        :return: The referrer of this LiveStreamSession.
        :rtype: LiveStreamSessionReferrer
        """
        return self._referrer

    @referrer.setter
    def referrer(self, referrer):
        """Sets the referrer of this LiveStreamSession.


        :param referrer: The referrer of this LiveStreamSession.
        :type referrer: LiveStreamSessionReferrer
        """

        self._referrer = referrer

    @property
    def session(self):
        """Gets the session of this LiveStreamSession.


        :return: The session of this LiveStreamSession.
        :rtype: LiveStreamSessionSession
        """
        return self._session

    @session.setter
    def session(self, session):
        """Sets the session of this LiveStreamSession.


        :param session: The session of this LiveStreamSession.
        :type session: LiveStreamSessionSession
        """

        self._session = session
