# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.quality import Quality
from openapi_server.models.videostatus_encoding_metadata import VideostatusEncodingMetadata
from openapi_server import util


class VideostatusEncoding(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metadata: VideostatusEncodingMetadata=None, playable: bool=None, qualities: List[Quality]=None):
        """VideostatusEncoding - a model defined in OpenAPI

        :param metadata: The metadata of this VideostatusEncoding.
        :param playable: The playable of this VideostatusEncoding.
        :param qualities: The qualities of this VideostatusEncoding.
        """
        self.openapi_types = {
            'metadata': VideostatusEncodingMetadata,
            'playable': bool,
            'qualities': List[Quality]
        }

        self.attribute_map = {
            'metadata': 'metadata',
            'playable': 'playable',
            'qualities': 'qualities'
        }

        self._metadata = metadata
        self._playable = playable
        self._qualities = qualities

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideostatusEncoding':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The videostatus_encoding of this VideostatusEncoding.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metadata(self):
        """Gets the metadata of this VideostatusEncoding.


        :return: The metadata of this VideostatusEncoding.
        :rtype: VideostatusEncodingMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this VideostatusEncoding.


        :param metadata: The metadata of this VideostatusEncoding.
        :type metadata: VideostatusEncodingMetadata
        """

        self._metadata = metadata

    @property
    def playable(self):
        """Gets the playable of this VideostatusEncoding.

        Whether the video is playable or not.

        :return: The playable of this VideostatusEncoding.
        :rtype: bool
        """
        return self._playable

    @playable.setter
    def playable(self, playable):
        """Sets the playable of this VideostatusEncoding.

        Whether the video is playable or not.

        :param playable: The playable of this VideostatusEncoding.
        :type playable: bool
        """

        self._playable = playable

    @property
    def qualities(self):
        """Gets the qualities of this VideostatusEncoding.

        Available qualities the video can be viewed in.

        :return: The qualities of this VideostatusEncoding.
        :rtype: List[Quality]
        """
        return self._qualities

    @qualities.setter
    def qualities(self, qualities):
        """Sets the qualities of this VideostatusEncoding.

        Available qualities the video can be viewed in.

        :param qualities: The qualities of this VideostatusEncoding.
        :type qualities: List[Quality]
        """

        self._qualities = qualities
