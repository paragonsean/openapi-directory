# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VideoSessionReferrer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, medium: str=None, search_term: str=None, source: str=None, url: str=None):
        """VideoSessionReferrer - a model defined in OpenAPI

        :param medium: The medium of this VideoSessionReferrer.
        :param search_term: The search_term of this VideoSessionReferrer.
        :param source: The source of this VideoSessionReferrer.
        :param url: The url of this VideoSessionReferrer.
        """
        self.openapi_types = {
            'medium': str,
            'search_term': str,
            'source': str,
            'url': str
        }

        self.attribute_map = {
            'medium': 'medium',
            'search_term': 'searchTerm',
            'source': 'source',
            'url': 'url'
        }

        self._medium = medium
        self._search_term = search_term
        self._source = source
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoSessionReferrer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The video_session_referrer of this VideoSessionReferrer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def medium(self):
        """Gets the medium of this VideoSessionReferrer.

        How they arrived at the site, for example organic or paid. Organic meaning they found it themselves and paid meaning they followed a link from an advertisement.

        :return: The medium of this VideoSessionReferrer.
        :rtype: str
        """
        return self._medium

    @medium.setter
    def medium(self, medium):
        """Sets the medium of this VideoSessionReferrer.

        How they arrived at the site, for example organic or paid. Organic meaning they found it themselves and paid meaning they followed a link from an advertisement.

        :param medium: The medium of this VideoSessionReferrer.
        :type medium: str
        """

        self._medium = medium

    @property
    def search_term(self):
        """Gets the search_term of this VideoSessionReferrer.

        The search term they typed to arrive at the video session.

        :return: The search_term of this VideoSessionReferrer.
        :rtype: str
        """
        return self._search_term

    @search_term.setter
    def search_term(self, search_term):
        """Sets the search_term of this VideoSessionReferrer.

        The search term they typed to arrive at the video session.

        :param search_term: The search_term of this VideoSessionReferrer.
        :type search_term: str
        """

        self._search_term = search_term

    @property
    def source(self):
        """Gets the source of this VideoSessionReferrer.

        The source the referrer came from to the video session. For example if they searched through google to find the stream.

        :return: The source of this VideoSessionReferrer.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this VideoSessionReferrer.

        The source the referrer came from to the video session. For example if they searched through google to find the stream.

        :param source: The source of this VideoSessionReferrer.
        :type source: str
        """

        self._source = source

    @property
    def url(self):
        """Gets the url of this VideoSessionReferrer.

        The link the viewer used to reach the video session.

        :return: The url of this VideoSessionReferrer.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this VideoSessionReferrer.

        The link the viewer used to reach the video session.

        :param url: The url of this VideoSessionReferrer.
        :type url: str
        """

        self._url = url
