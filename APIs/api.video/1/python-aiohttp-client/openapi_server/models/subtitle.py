# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Subtitle(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default: bool=False, src: str=None, srclang: str=None, uri: str=None):
        """Subtitle - a model defined in OpenAPI

        :param default: The default of this Subtitle.
        :param src: The src of this Subtitle.
        :param srclang: The srclang of this Subtitle.
        :param uri: The uri of this Subtitle.
        """
        self.openapi_types = {
            'default': bool,
            'src': str,
            'srclang': str,
            'uri': str
        }

        self.attribute_map = {
            'default': 'default',
            'src': 'src',
            'srclang': 'srclang',
            'uri': 'uri'
        }

        self._default = default
        self._src = src
        self._srclang = srclang
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Subtitle':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The subtitle of this Subtitle.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default(self):
        """Gets the default of this Subtitle.

        Whether you will have subtitles or not. True for yes you will have subtitles, false for no you will not have subtitles.

        :return: The default of this Subtitle.
        :rtype: bool
        """
        return self._default

    @default.setter
    def default(self, default):
        """Sets the default of this Subtitle.

        Whether you will have subtitles or not. True for yes you will have subtitles, false for no you will not have subtitles.

        :param default: The default of this Subtitle.
        :type default: bool
        """

        self._default = default

    @property
    def src(self):
        """Gets the src of this Subtitle.


        :return: The src of this Subtitle.
        :rtype: str
        """
        return self._src

    @src.setter
    def src(self, src):
        """Sets the src of this Subtitle.


        :param src: The src of this Subtitle.
        :type src: str
        """

        self._src = src

    @property
    def srclang(self):
        """Gets the srclang of this Subtitle.


        :return: The srclang of this Subtitle.
        :rtype: str
        """
        return self._srclang

    @srclang.setter
    def srclang(self, srclang):
        """Sets the srclang of this Subtitle.


        :param srclang: The srclang of this Subtitle.
        :type srclang: str
        """

        self._srclang = srclang

    @property
    def uri(self):
        """Gets the uri of this Subtitle.


        :return: The uri of this Subtitle.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this Subtitle.


        :param uri: The uri of this Subtitle.
        :type uri: str
        """

        self._uri = uri
