# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.videostatus_encoding import VideostatusEncoding
from openapi_server.models.videostatus_ingest import VideostatusIngest
from openapi_server import util


class Videostatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, encoding: VideostatusEncoding=None, ingest: VideostatusIngest=None):
        """Videostatus - a model defined in OpenAPI

        :param encoding: The encoding of this Videostatus.
        :param ingest: The ingest of this Videostatus.
        """
        self.openapi_types = {
            'encoding': VideostatusEncoding,
            'ingest': VideostatusIngest
        }

        self.attribute_map = {
            'encoding': 'encoding',
            'ingest': 'ingest'
        }

        self._encoding = encoding
        self._ingest = ingest

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Videostatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The videostatus of this Videostatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def encoding(self):
        """Gets the encoding of this Videostatus.


        :return: The encoding of this Videostatus.
        :rtype: VideostatusEncoding
        """
        return self._encoding

    @encoding.setter
    def encoding(self, encoding):
        """Sets the encoding of this Videostatus.


        :param encoding: The encoding of this Videostatus.
        :type encoding: VideostatusEncoding
        """

        self._encoding = encoding

    @property
    def ingest(self):
        """Gets the ingest of this Videostatus.


        :return: The ingest of this Videostatus.
        :rtype: VideostatusIngest
        """
        return self._ingest

    @ingest.setter
    def ingest(self, ingest):
        """Sets the ingest of this Videostatus.


        :param ingest: The ingest of this Videostatus.
        :type ingest: VideostatusIngest
        """

        self._ingest = ingest
