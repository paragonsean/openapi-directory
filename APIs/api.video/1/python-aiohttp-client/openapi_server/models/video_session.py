# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.video_session_client import VideoSessionClient
from openapi_server.models.video_session_device import VideoSessionDevice
from openapi_server.models.video_session_location import VideoSessionLocation
from openapi_server.models.video_session_os import VideoSessionOs
from openapi_server.models.video_session_referrer import VideoSessionReferrer
from openapi_server.models.video_session_session import VideoSessionSession
from openapi_server import util


class VideoSession(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client: VideoSessionClient=None, device: VideoSessionDevice=None, location: VideoSessionLocation=None, os: VideoSessionOs=None, referrer: VideoSessionReferrer=None, session: VideoSessionSession=None):
        """VideoSession - a model defined in OpenAPI

        :param client: The client of this VideoSession.
        :param device: The device of this VideoSession.
        :param location: The location of this VideoSession.
        :param os: The os of this VideoSession.
        :param referrer: The referrer of this VideoSession.
        :param session: The session of this VideoSession.
        """
        self.openapi_types = {
            'client': VideoSessionClient,
            'device': VideoSessionDevice,
            'location': VideoSessionLocation,
            'os': VideoSessionOs,
            'referrer': VideoSessionReferrer,
            'session': VideoSessionSession
        }

        self.attribute_map = {
            'client': 'client',
            'device': 'device',
            'location': 'location',
            'os': 'os',
            'referrer': 'referrer',
            'session': 'session'
        }

        self._client = client
        self._device = device
        self._location = location
        self._os = os
        self._referrer = referrer
        self._session = session

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoSession':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The video-session of this VideoSession.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client(self):
        """Gets the client of this VideoSession.


        :return: The client of this VideoSession.
        :rtype: VideoSessionClient
        """
        return self._client

    @client.setter
    def client(self, client):
        """Sets the client of this VideoSession.


        :param client: The client of this VideoSession.
        :type client: VideoSessionClient
        """

        self._client = client

    @property
    def device(self):
        """Gets the device of this VideoSession.


        :return: The device of this VideoSession.
        :rtype: VideoSessionDevice
        """
        return self._device

    @device.setter
    def device(self, device):
        """Sets the device of this VideoSession.


        :param device: The device of this VideoSession.
        :type device: VideoSessionDevice
        """

        self._device = device

    @property
    def location(self):
        """Gets the location of this VideoSession.


        :return: The location of this VideoSession.
        :rtype: VideoSessionLocation
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this VideoSession.


        :param location: The location of this VideoSession.
        :type location: VideoSessionLocation
        """

        self._location = location

    @property
    def os(self):
        """Gets the os of this VideoSession.


        :return: The os of this VideoSession.
        :rtype: VideoSessionOs
        """
        return self._os

    @os.setter
    def os(self, os):
        """Sets the os of this VideoSession.


        :param os: The os of this VideoSession.
        :type os: VideoSessionOs
        """

        self._os = os

    @property
    def referrer(self):
        """Gets the referrer of this VideoSession.


        :return: The referrer of this VideoSession.
        :rtype: VideoSessionReferrer
        """
        return self._referrer

    @referrer.setter
    def referrer(self, referrer):
        """Sets the referrer of this VideoSession.


        :param referrer: The referrer of this VideoSession.
        :type referrer: VideoSessionReferrer
        """

        self._referrer = referrer

    @property
    def session(self):
        """Gets the session of this VideoSession.


        :return: The session of this VideoSession.
        :rtype: VideoSessionSession
        """
        return self._session

    @session.setter
    def session(self, session):
        """Sets the session of this VideoSession.


        :param session: The session of this VideoSession.
        :type session: VideoSessionSession
        """

        self._session = session
