# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VideoSessionDevice(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, model: str=None, type: str=None, vendor: str=None):
        """VideoSessionDevice - a model defined in OpenAPI

        :param model: The model of this VideoSessionDevice.
        :param type: The type of this VideoSessionDevice.
        :param vendor: The vendor of this VideoSessionDevice.
        """
        self.openapi_types = {
            'model': str,
            'type': str,
            'vendor': str
        }

        self.attribute_map = {
            'model': 'model',
            'type': 'type',
            'vendor': 'vendor'
        }

        self._model = model
        self._type = type
        self._vendor = vendor

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoSessionDevice':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The video_session_device of this VideoSessionDevice.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model(self):
        """Gets the model of this VideoSessionDevice.

        The specific model of the device, if known.

        :return: The model of this VideoSessionDevice.
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this VideoSessionDevice.

        The specific model of the device, if known.

        :param model: The model of this VideoSessionDevice.
        :type model: str
        """

        self._model = model

    @property
    def type(self):
        """Gets the type of this VideoSessionDevice.

        What the type is like desktop, laptop, mobile.

        :return: The type of this VideoSessionDevice.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this VideoSessionDevice.

        What the type is like desktop, laptop, mobile.

        :param type: The type of this VideoSessionDevice.
        :type type: str
        """

        self._type = type

    @property
    def vendor(self):
        """Gets the vendor of this VideoSessionDevice.

        If known, what the brand of the device is, like Apple, Dell, etc.

        :return: The vendor of this VideoSessionDevice.
        :rtype: str
        """
        return self._vendor

    @vendor.setter
    def vendor(self, vendor):
        """Sets the vendor of this VideoSessionDevice.

        If known, what the brand of the device is, like Apple, Dell, etc.

        :param vendor: The vendor of this VideoSessionDevice.
        :type vendor: str
        """

        self._vendor = vendor
