/*
 * api.video
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AccessToken;
import org.openapitools.client.model.AuthenticatePayload;
import org.openapitools.client.model.BadRequest;
import org.openapitools.client.model.RefreshTokenPayload;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuthenticationApi
 */
@Disabled
public class AuthenticationApiTest {

    private final AuthenticationApi api = new AuthenticationApi();

    /**
     * Authenticate
     *
     * To get started, submit your API key in the body of your request. api.video returns an access token that is valid for one hour (3600 seconds). A refresh token is also returned. View a [tutorial](https://api.video/blog/tutorials/authentication-tutorial) on authentication. All tutorials using the [authentication endpoint](https://api.video/blog/endpoints/authenticate)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTAuthApiKeyTest() throws ApiException {
        AuthenticatePayload authenticatePayload = null;
        AccessToken response = api.pOSTAuthApiKey(authenticatePayload);
        // TODO: test validations
    }

    /**
     * Refresh token
     *
     * Use the refresh endpoint with the refresh token you received when you first authenticated using the api-key endpoint. Send the refresh token in the body of your request. The api.video API returns a new access token that is valid for one hour (3600 seconds) and a new refresh token.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTAuthRefreshTest() throws ApiException {
        RefreshTokenPayload refreshTokenPayload = null;
        AccessToken response = api.pOSTAuthRefresh(refreshTokenPayload);
        // TODO: test validations
    }

}
