/**
 * api.video
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LiveStreamAssets model module.
 * @module model/LiveStreamAssets
 * @version 1
 */
class LiveStreamAssets {
    /**
     * Constructs a new <code>LiveStreamAssets</code>.
     * @alias module:model/LiveStreamAssets
     */
    constructor() { 
        
        LiveStreamAssets.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LiveStreamAssets</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LiveStreamAssets} obj Optional instance to populate.
     * @return {module:model/LiveStreamAssets} The populated <code>LiveStreamAssets</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LiveStreamAssets();

            if (data.hasOwnProperty('hls')) {
                obj['hls'] = ApiClient.convertToType(data['hls'], 'String');
            }
            if (data.hasOwnProperty('iframe')) {
                obj['iframe'] = ApiClient.convertToType(data['iframe'], 'String');
            }
            if (data.hasOwnProperty('player')) {
                obj['player'] = ApiClient.convertToType(data['player'], 'String');
            }
            if (data.hasOwnProperty('thumbnail')) {
                obj['thumbnail'] = ApiClient.convertToType(data['thumbnail'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LiveStreamAssets</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LiveStreamAssets</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['hls'] && !(typeof data['hls'] === 'string' || data['hls'] instanceof String)) {
            throw new Error("Expected the field `hls` to be a primitive type in the JSON string but got " + data['hls']);
        }
        // ensure the json data is a string
        if (data['iframe'] && !(typeof data['iframe'] === 'string' || data['iframe'] instanceof String)) {
            throw new Error("Expected the field `iframe` to be a primitive type in the JSON string but got " + data['iframe']);
        }
        // ensure the json data is a string
        if (data['player'] && !(typeof data['player'] === 'string' || data['player'] instanceof String)) {
            throw new Error("Expected the field `player` to be a primitive type in the JSON string but got " + data['player']);
        }
        // ensure the json data is a string
        if (data['thumbnail'] && !(typeof data['thumbnail'] === 'string' || data['thumbnail'] instanceof String)) {
            throw new Error("Expected the field `thumbnail` to be a primitive type in the JSON string but got " + data['thumbnail']);
        }

        return true;
    }


}



/**
 * The http live streaming (HLS) link for your live video stream.
 * @member {String} hls
 */
LiveStreamAssets.prototype['hls'] = undefined;

/**
 * The embed code for the iframe containing your live video stream.
 * @member {String} iframe
 */
LiveStreamAssets.prototype['iframe'] = undefined;

/**
 * A link to the video player that is playing your live stream.
 * @member {String} player
 */
LiveStreamAssets.prototype['player'] = undefined;

/**
 * A link to the thumbnail for your video.
 * @member {String} thumbnail
 */
LiveStreamAssets.prototype['thumbnail'] = undefined;






export default LiveStreamAssets;

