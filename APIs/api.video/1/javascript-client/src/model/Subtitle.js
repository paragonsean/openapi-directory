/**
 * api.video
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Subtitle model module.
 * @module model/Subtitle
 * @version 1
 */
class Subtitle {
    /**
     * Constructs a new <code>Subtitle</code>.
     * @alias module:model/Subtitle
     */
    constructor() { 
        
        Subtitle.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['default'] = false;
    }

    /**
     * Constructs a <code>Subtitle</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Subtitle} obj Optional instance to populate.
     * @return {module:model/Subtitle} The populated <code>Subtitle</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Subtitle();

            if (data.hasOwnProperty('default')) {
                obj['default'] = ApiClient.convertToType(data['default'], 'Boolean');
            }
            if (data.hasOwnProperty('src')) {
                obj['src'] = ApiClient.convertToType(data['src'], 'String');
            }
            if (data.hasOwnProperty('srclang')) {
                obj['srclang'] = ApiClient.convertToType(data['srclang'], 'String');
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Subtitle</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Subtitle</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['src'] && !(typeof data['src'] === 'string' || data['src'] instanceof String)) {
            throw new Error("Expected the field `src` to be a primitive type in the JSON string but got " + data['src']);
        }
        // ensure the json data is a string
        if (data['srclang'] && !(typeof data['srclang'] === 'string' || data['srclang'] instanceof String)) {
            throw new Error("Expected the field `srclang` to be a primitive type in the JSON string but got " + data['srclang']);
        }
        // ensure the json data is a string
        if (data['uri'] && !(typeof data['uri'] === 'string' || data['uri'] instanceof String)) {
            throw new Error("Expected the field `uri` to be a primitive type in the JSON string but got " + data['uri']);
        }

        return true;
    }


}



/**
 * Whether you will have subtitles or not. True for yes you will have subtitles, false for no you will not have subtitles.
 * @member {Boolean} default
 * @default false
 */
Subtitle.prototype['default'] = false;

/**
 * @member {String} src
 */
Subtitle.prototype['src'] = undefined;

/**
 * @member {String} srclang
 */
Subtitle.prototype['srclang'] = undefined;

/**
 * @member {String} uri
 */
Subtitle.prototype['uri'] = undefined;






export default Subtitle;

