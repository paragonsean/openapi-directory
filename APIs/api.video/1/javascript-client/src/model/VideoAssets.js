/**
 * api.video
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VideoAssets model module.
 * @module model/VideoAssets
 * @version 1
 */
class VideoAssets {
    /**
     * Constructs a new <code>VideoAssets</code>.
     * Collection of details about the video object that you can use to work with the video object.
     * @alias module:model/VideoAssets
     */
    constructor() { 
        
        VideoAssets.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VideoAssets</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VideoAssets} obj Optional instance to populate.
     * @return {module:model/VideoAssets} The populated <code>VideoAssets</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VideoAssets();

            if (data.hasOwnProperty('hls')) {
                obj['hls'] = ApiClient.convertToType(data['hls'], 'String');
            }
            if (data.hasOwnProperty('iframe')) {
                obj['iframe'] = ApiClient.convertToType(data['iframe'], 'String');
            }
            if (data.hasOwnProperty('mp4')) {
                obj['mp4'] = ApiClient.convertToType(data['mp4'], 'String');
            }
            if (data.hasOwnProperty('player')) {
                obj['player'] = ApiClient.convertToType(data['player'], 'String');
            }
            if (data.hasOwnProperty('thumbnail')) {
                obj['thumbnail'] = ApiClient.convertToType(data['thumbnail'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VideoAssets</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VideoAssets</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['hls'] && !(typeof data['hls'] === 'string' || data['hls'] instanceof String)) {
            throw new Error("Expected the field `hls` to be a primitive type in the JSON string but got " + data['hls']);
        }
        // ensure the json data is a string
        if (data['iframe'] && !(typeof data['iframe'] === 'string' || data['iframe'] instanceof String)) {
            throw new Error("Expected the field `iframe` to be a primitive type in the JSON string but got " + data['iframe']);
        }
        // ensure the json data is a string
        if (data['mp4'] && !(typeof data['mp4'] === 'string' || data['mp4'] instanceof String)) {
            throw new Error("Expected the field `mp4` to be a primitive type in the JSON string but got " + data['mp4']);
        }
        // ensure the json data is a string
        if (data['player'] && !(typeof data['player'] === 'string' || data['player'] instanceof String)) {
            throw new Error("Expected the field `player` to be a primitive type in the JSON string but got " + data['player']);
        }
        // ensure the json data is a string
        if (data['thumbnail'] && !(typeof data['thumbnail'] === 'string' || data['thumbnail'] instanceof String)) {
            throw new Error("Expected the field `thumbnail` to be a primitive type in the JSON string but got " + data['thumbnail']);
        }

        return true;
    }


}



/**
 * This is the manifest URL. For HTTP Live Streaming (HLS), when a HLS video stream is initiated, the first file to download is the manifest. This file has the extension M3U8, and provides the video player with information about the various bitrates available for streaming.
 * @member {String} hls
 */
VideoAssets.prototype['hls'] = undefined;

/**
 * Code to use video from a third party website
 * @member {String} iframe
 */
VideoAssets.prototype['iframe'] = undefined;

/**
 * Available only if mp4Support is enabled. Raw mp4 url.
 * @member {String} mp4
 */
VideoAssets.prototype['mp4'] = undefined;

/**
 * Raw url of the player.
 * @member {String} player
 */
VideoAssets.prototype['player'] = undefined;

/**
 * Poster of the video.
 * @member {String} thumbnail
 */
VideoAssets.prototype['thumbnail'] = undefined;






export default VideoAssets;

