/**
 * api.video
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PaginationLink from './PaginationLink';

/**
 * The Pagination model module.
 * @module model/Pagination
 * @version 1
 */
class Pagination {
    /**
     * Constructs a new <code>Pagination</code>.
     * @alias module:model/Pagination
     * @param links {Array.<module:model/PaginationLink>} 
     */
    constructor(links) { 
        
        Pagination.initialize(this, links);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, links) { 
        obj['links'] = links;
    }

    /**
     * Constructs a <code>Pagination</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Pagination} obj Optional instance to populate.
     * @return {module:model/Pagination} The populated <code>Pagination</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Pagination();

            if (data.hasOwnProperty('currentPage')) {
                obj['currentPage'] = ApiClient.convertToType(data['currentPage'], 'Number');
            }
            if (data.hasOwnProperty('currentPageItems')) {
                obj['currentPageItems'] = ApiClient.convertToType(data['currentPageItems'], 'Number');
            }
            if (data.hasOwnProperty('itemsTotal')) {
                obj['itemsTotal'] = ApiClient.convertToType(data['itemsTotal'], 'Number');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], [PaginationLink]);
            }
            if (data.hasOwnProperty('pageSize')) {
                obj['pageSize'] = ApiClient.convertToType(data['pageSize'], 'Number');
            }
            if (data.hasOwnProperty('pagesTotal')) {
                obj['pagesTotal'] = ApiClient.convertToType(data['pagesTotal'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Pagination</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Pagination</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Pagination.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['links']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['links'])) {
                throw new Error("Expected the field `links` to be an array in the JSON data but got " + data['links']);
            }
            // validate the optional field `links` (array)
            for (const item of data['links']) {
                PaginationLink.validateJSON(item);
            };
        }

        return true;
    }


}

Pagination.RequiredProperties = ["links"];

/**
 * The current page index.
 * @member {Number} currentPage
 */
Pagination.prototype['currentPage'] = undefined;

/**
 * The number of items on the current page.
 * @member {Number} currentPageItems
 */
Pagination.prototype['currentPageItems'] = undefined;

/**
 * Total number of items that exist.
 * @member {Number} itemsTotal
 */
Pagination.prototype['itemsTotal'] = undefined;

/**
 * @member {Array.<module:model/PaginationLink>} links
 */
Pagination.prototype['links'] = undefined;

/**
 * Maximum number of item per page.
 * @member {Number} pageSize
 */
Pagination.prototype['pageSize'] = undefined;

/**
 * Number of items listed in the current page.
 * @member {Number} pagesTotal
 */
Pagination.prototype['pagesTotal'] = undefined;






export default Pagination;

