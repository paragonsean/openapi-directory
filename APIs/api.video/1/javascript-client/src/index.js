/**
 * api.video
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AccessToken from './model/AccessToken';
import Account from './model/Account';
import AccountQuota from './model/AccountQuota';
import AuthenticatePayload from './model/AuthenticatePayload';
import BadRequest from './model/BadRequest';
import BytesRange from './model/BytesRange';
import CaptionsListResponse from './model/CaptionsListResponse';
import CaptionsUpdatePayload from './model/CaptionsUpdatePayload';
import Chapter from './model/Chapter';
import ChaptersListResponse from './model/ChaptersListResponse';
import Link from './model/Link';
import LiveStream from './model/LiveStream';
import LiveStreamAssets from './model/LiveStreamAssets';
import LiveStreamCreatePayload from './model/LiveStreamCreatePayload';
import LiveStreamListResponse from './model/LiveStreamListResponse';
import LiveStreamSession from './model/LiveStreamSession';
import LiveStreamSessionClient from './model/LiveStreamSessionClient';
import LiveStreamSessionDevice from './model/LiveStreamSessionDevice';
import LiveStreamSessionLocation from './model/LiveStreamSessionLocation';
import LiveStreamSessionReferrer from './model/LiveStreamSessionReferrer';
import LiveStreamSessionSession from './model/LiveStreamSessionSession';
import LiveStreamUpdatePayload from './model/LiveStreamUpdatePayload';
import Metadata from './model/Metadata';
import NotFound from './model/NotFound';
import Pagination from './model/Pagination';
import PaginationLink from './model/PaginationLink';
import Player from './model/Player';
import PlayerAllOfAssets from './model/PlayerAllOfAssets';
import PlayerCreationPayload from './model/PlayerCreationPayload';
import PlayerSessionEvent from './model/PlayerSessionEvent';
import PlayerUpdatePayload from './model/PlayerUpdatePayload';
import Playerinput from './model/Playerinput';
import PlayersListResponse from './model/PlayersListResponse';
import Quality from './model/Quality';
import RawStatisticsListLiveStreamAnalyticsResponse from './model/RawStatisticsListLiveStreamAnalyticsResponse';
import RawStatisticsListPlayerSessionEventsResponse from './model/RawStatisticsListPlayerSessionEventsResponse';
import RawStatisticsListSessionsResponse from './model/RawStatisticsListSessionsResponse';
import RefreshTokenPayload from './model/RefreshTokenPayload';
import Subtitle from './model/Subtitle';
import TokenCreatePayload from './model/TokenCreatePayload';
import TokenListResponse from './model/TokenListResponse';
import UploadToken from './model/UploadToken';
import Video from './model/Video';
import VideoAssets from './model/VideoAssets';
import VideoCreatePayload from './model/VideoCreatePayload';
import VideoSession from './model/VideoSession';
import VideoSessionClient from './model/VideoSessionClient';
import VideoSessionDevice from './model/VideoSessionDevice';
import VideoSessionLocation from './model/VideoSessionLocation';
import VideoSessionOs from './model/VideoSessionOs';
import VideoSessionReferrer from './model/VideoSessionReferrer';
import VideoSessionSession from './model/VideoSessionSession';
import VideoSource from './model/VideoSource';
import VideoSourceLiveStream from './model/VideoSourceLiveStream';
import VideoSourceLiveStreamLink from './model/VideoSourceLiveStreamLink';
import VideoThumbnailPickPayload from './model/VideoThumbnailPickPayload';
import VideoUpdatePayload from './model/VideoUpdatePayload';
import VideosListResponse from './model/VideosListResponse';
import Videostatus from './model/Videostatus';
import VideostatusEncoding from './model/VideostatusEncoding';
import VideostatusEncodingMetadata from './model/VideostatusEncodingMetadata';
import VideostatusIngest from './model/VideostatusIngest';
import Webhook from './model/Webhook';
import WebhooksCreatePayload from './model/WebhooksCreatePayload';
import WebhooksListResponse from './model/WebhooksListResponse';
import AccountApi from './api/AccountApi';
import AnalyticsApi from './api/AnalyticsApi';
import AuthenticationApi from './api/AuthenticationApi';
import CaptionsApi from './api/CaptionsApi';
import ChaptersApi from './api/ChaptersApi';
import LiveApi from './api/LiveApi';
import PlayersApi from './api/PlayersApi';
import VideosApi from './api/VideosApi';
import VideosDelegatedUploadApi from './api/VideosDelegatedUploadApi';
import WebhooksApi from './api/WebhooksApi';


/**
* api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ApiVideo = require('index'); // See note below*.
* var xxxSvc = new ApiVideo.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ApiVideo.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ApiVideo.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ApiVideo.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AccessToken model constructor.
     * @property {module:model/AccessToken}
     */
    AccessToken,

    /**
     * The Account model constructor.
     * @property {module:model/Account}
     */
    Account,

    /**
     * The AccountQuota model constructor.
     * @property {module:model/AccountQuota}
     */
    AccountQuota,

    /**
     * The AuthenticatePayload model constructor.
     * @property {module:model/AuthenticatePayload}
     */
    AuthenticatePayload,

    /**
     * The BadRequest model constructor.
     * @property {module:model/BadRequest}
     */
    BadRequest,

    /**
     * The BytesRange model constructor.
     * @property {module:model/BytesRange}
     */
    BytesRange,

    /**
     * The CaptionsListResponse model constructor.
     * @property {module:model/CaptionsListResponse}
     */
    CaptionsListResponse,

    /**
     * The CaptionsUpdatePayload model constructor.
     * @property {module:model/CaptionsUpdatePayload}
     */
    CaptionsUpdatePayload,

    /**
     * The Chapter model constructor.
     * @property {module:model/Chapter}
     */
    Chapter,

    /**
     * The ChaptersListResponse model constructor.
     * @property {module:model/ChaptersListResponse}
     */
    ChaptersListResponse,

    /**
     * The Link model constructor.
     * @property {module:model/Link}
     */
    Link,

    /**
     * The LiveStream model constructor.
     * @property {module:model/LiveStream}
     */
    LiveStream,

    /**
     * The LiveStreamAssets model constructor.
     * @property {module:model/LiveStreamAssets}
     */
    LiveStreamAssets,

    /**
     * The LiveStreamCreatePayload model constructor.
     * @property {module:model/LiveStreamCreatePayload}
     */
    LiveStreamCreatePayload,

    /**
     * The LiveStreamListResponse model constructor.
     * @property {module:model/LiveStreamListResponse}
     */
    LiveStreamListResponse,

    /**
     * The LiveStreamSession model constructor.
     * @property {module:model/LiveStreamSession}
     */
    LiveStreamSession,

    /**
     * The LiveStreamSessionClient model constructor.
     * @property {module:model/LiveStreamSessionClient}
     */
    LiveStreamSessionClient,

    /**
     * The LiveStreamSessionDevice model constructor.
     * @property {module:model/LiveStreamSessionDevice}
     */
    LiveStreamSessionDevice,

    /**
     * The LiveStreamSessionLocation model constructor.
     * @property {module:model/LiveStreamSessionLocation}
     */
    LiveStreamSessionLocation,

    /**
     * The LiveStreamSessionReferrer model constructor.
     * @property {module:model/LiveStreamSessionReferrer}
     */
    LiveStreamSessionReferrer,

    /**
     * The LiveStreamSessionSession model constructor.
     * @property {module:model/LiveStreamSessionSession}
     */
    LiveStreamSessionSession,

    /**
     * The LiveStreamUpdatePayload model constructor.
     * @property {module:model/LiveStreamUpdatePayload}
     */
    LiveStreamUpdatePayload,

    /**
     * The Metadata model constructor.
     * @property {module:model/Metadata}
     */
    Metadata,

    /**
     * The NotFound model constructor.
     * @property {module:model/NotFound}
     */
    NotFound,

    /**
     * The Pagination model constructor.
     * @property {module:model/Pagination}
     */
    Pagination,

    /**
     * The PaginationLink model constructor.
     * @property {module:model/PaginationLink}
     */
    PaginationLink,

    /**
     * The Player model constructor.
     * @property {module:model/Player}
     */
    Player,

    /**
     * The PlayerAllOfAssets model constructor.
     * @property {module:model/PlayerAllOfAssets}
     */
    PlayerAllOfAssets,

    /**
     * The PlayerCreationPayload model constructor.
     * @property {module:model/PlayerCreationPayload}
     */
    PlayerCreationPayload,

    /**
     * The PlayerSessionEvent model constructor.
     * @property {module:model/PlayerSessionEvent}
     */
    PlayerSessionEvent,

    /**
     * The PlayerUpdatePayload model constructor.
     * @property {module:model/PlayerUpdatePayload}
     */
    PlayerUpdatePayload,

    /**
     * The Playerinput model constructor.
     * @property {module:model/Playerinput}
     */
    Playerinput,

    /**
     * The PlayersListResponse model constructor.
     * @property {module:model/PlayersListResponse}
     */
    PlayersListResponse,

    /**
     * The Quality model constructor.
     * @property {module:model/Quality}
     */
    Quality,

    /**
     * The RawStatisticsListLiveStreamAnalyticsResponse model constructor.
     * @property {module:model/RawStatisticsListLiveStreamAnalyticsResponse}
     */
    RawStatisticsListLiveStreamAnalyticsResponse,

    /**
     * The RawStatisticsListPlayerSessionEventsResponse model constructor.
     * @property {module:model/RawStatisticsListPlayerSessionEventsResponse}
     */
    RawStatisticsListPlayerSessionEventsResponse,

    /**
     * The RawStatisticsListSessionsResponse model constructor.
     * @property {module:model/RawStatisticsListSessionsResponse}
     */
    RawStatisticsListSessionsResponse,

    /**
     * The RefreshTokenPayload model constructor.
     * @property {module:model/RefreshTokenPayload}
     */
    RefreshTokenPayload,

    /**
     * The Subtitle model constructor.
     * @property {module:model/Subtitle}
     */
    Subtitle,

    /**
     * The TokenCreatePayload model constructor.
     * @property {module:model/TokenCreatePayload}
     */
    TokenCreatePayload,

    /**
     * The TokenListResponse model constructor.
     * @property {module:model/TokenListResponse}
     */
    TokenListResponse,

    /**
     * The UploadToken model constructor.
     * @property {module:model/UploadToken}
     */
    UploadToken,

    /**
     * The Video model constructor.
     * @property {module:model/Video}
     */
    Video,

    /**
     * The VideoAssets model constructor.
     * @property {module:model/VideoAssets}
     */
    VideoAssets,

    /**
     * The VideoCreatePayload model constructor.
     * @property {module:model/VideoCreatePayload}
     */
    VideoCreatePayload,

    /**
     * The VideoSession model constructor.
     * @property {module:model/VideoSession}
     */
    VideoSession,

    /**
     * The VideoSessionClient model constructor.
     * @property {module:model/VideoSessionClient}
     */
    VideoSessionClient,

    /**
     * The VideoSessionDevice model constructor.
     * @property {module:model/VideoSessionDevice}
     */
    VideoSessionDevice,

    /**
     * The VideoSessionLocation model constructor.
     * @property {module:model/VideoSessionLocation}
     */
    VideoSessionLocation,

    /**
     * The VideoSessionOs model constructor.
     * @property {module:model/VideoSessionOs}
     */
    VideoSessionOs,

    /**
     * The VideoSessionReferrer model constructor.
     * @property {module:model/VideoSessionReferrer}
     */
    VideoSessionReferrer,

    /**
     * The VideoSessionSession model constructor.
     * @property {module:model/VideoSessionSession}
     */
    VideoSessionSession,

    /**
     * The VideoSource model constructor.
     * @property {module:model/VideoSource}
     */
    VideoSource,

    /**
     * The VideoSourceLiveStream model constructor.
     * @property {module:model/VideoSourceLiveStream}
     */
    VideoSourceLiveStream,

    /**
     * The VideoSourceLiveStreamLink model constructor.
     * @property {module:model/VideoSourceLiveStreamLink}
     */
    VideoSourceLiveStreamLink,

    /**
     * The VideoThumbnailPickPayload model constructor.
     * @property {module:model/VideoThumbnailPickPayload}
     */
    VideoThumbnailPickPayload,

    /**
     * The VideoUpdatePayload model constructor.
     * @property {module:model/VideoUpdatePayload}
     */
    VideoUpdatePayload,

    /**
     * The VideosListResponse model constructor.
     * @property {module:model/VideosListResponse}
     */
    VideosListResponse,

    /**
     * The Videostatus model constructor.
     * @property {module:model/Videostatus}
     */
    Videostatus,

    /**
     * The VideostatusEncoding model constructor.
     * @property {module:model/VideostatusEncoding}
     */
    VideostatusEncoding,

    /**
     * The VideostatusEncodingMetadata model constructor.
     * @property {module:model/VideostatusEncodingMetadata}
     */
    VideostatusEncodingMetadata,

    /**
     * The VideostatusIngest model constructor.
     * @property {module:model/VideostatusIngest}
     */
    VideostatusIngest,

    /**
     * The Webhook model constructor.
     * @property {module:model/Webhook}
     */
    Webhook,

    /**
     * The WebhooksCreatePayload model constructor.
     * @property {module:model/WebhooksCreatePayload}
     */
    WebhooksCreatePayload,

    /**
     * The WebhooksListResponse model constructor.
     * @property {module:model/WebhooksListResponse}
     */
    WebhooksListResponse,

    /**
    * The AccountApi service constructor.
    * @property {module:api/AccountApi}
    */
    AccountApi,

    /**
    * The AnalyticsApi service constructor.
    * @property {module:api/AnalyticsApi}
    */
    AnalyticsApi,

    /**
    * The AuthenticationApi service constructor.
    * @property {module:api/AuthenticationApi}
    */
    AuthenticationApi,

    /**
    * The CaptionsApi service constructor.
    * @property {module:api/CaptionsApi}
    */
    CaptionsApi,

    /**
    * The ChaptersApi service constructor.
    * @property {module:api/ChaptersApi}
    */
    ChaptersApi,

    /**
    * The LiveApi service constructor.
    * @property {module:api/LiveApi}
    */
    LiveApi,

    /**
    * The PlayersApi service constructor.
    * @property {module:api/PlayersApi}
    */
    PlayersApi,

    /**
    * The VideosApi service constructor.
    * @property {module:api/VideosApi}
    */
    VideosApi,

    /**
    * The VideosDelegatedUploadApi service constructor.
    * @property {module:api/VideosDelegatedUploadApi}
    */
    VideosDelegatedUploadApi,

    /**
    * The WebhooksApi service constructor.
    * @property {module:api/WebhooksApi}
    */
    WebhooksApi
};
