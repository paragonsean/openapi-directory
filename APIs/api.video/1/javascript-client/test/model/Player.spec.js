/**
 * api.video
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ApiVideo);
  }
}(this, function(expect, ApiVideo) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ApiVideo.Player();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Player', function() {
    it('should create an instance of Player', function() {
      // uncomment below and update the code to test Player
      //var instance = new ApiVideo.Player();
      //expect(instance).to.be.a(ApiVideo.Player);
    });

    it('should have the property backgroundBottom (base name: "backgroundBottom")', function() {
      // uncomment below and update the code to test the property backgroundBottom
      //var instance = new ApiVideo.Player();
      //expect(instance).to.be();
    });

    it('should have the property backgroundText (base name: "backgroundText")', function() {
      // uncomment below and update the code to test the property backgroundText
      //var instance = new ApiVideo.Player();
      //expect(instance).to.be();
    });

    it('should have the property backgroundTop (base name: "backgroundTop")', function() {
      // uncomment below and update the code to test the property backgroundTop
      //var instance = new ApiVideo.Player();
      //expect(instance).to.be();
    });

    it('should have the property enableApi (base name: "enableApi")', function() {
      // uncomment below and update the code to test the property enableApi
      //var instance = new ApiVideo.Player();
      //expect(instance).to.be();
    });

    it('should have the property enableControls (base name: "enableControls")', function() {
      // uncomment below and update the code to test the property enableControls
      //var instance = new ApiVideo.Player();
      //expect(instance).to.be();
    });

    it('should have the property forceAutoplay (base name: "forceAutoplay")', function() {
      // uncomment below and update the code to test the property forceAutoplay
      //var instance = new ApiVideo.Player();
      //expect(instance).to.be();
    });

    it('should have the property forceLoop (base name: "forceLoop")', function() {
      // uncomment below and update the code to test the property forceLoop
      //var instance = new ApiVideo.Player();
      //expect(instance).to.be();
    });

    it('should have the property hideTitle (base name: "hideTitle")', function() {
      // uncomment below and update the code to test the property hideTitle
      //var instance = new ApiVideo.Player();
      //expect(instance).to.be();
    });

    it('should have the property link (base name: "link")', function() {
      // uncomment below and update the code to test the property link
      //var instance = new ApiVideo.Player();
      //expect(instance).to.be();
    });

    it('should have the property linkHover (base name: "linkHover")', function() {
      // uncomment below and update the code to test the property linkHover
      //var instance = new ApiVideo.Player();
      //expect(instance).to.be();
    });

    it('should have the property text (base name: "text")', function() {
      // uncomment below and update the code to test the property text
      //var instance = new ApiVideo.Player();
      //expect(instance).to.be();
    });

    it('should have the property trackBackground (base name: "trackBackground")', function() {
      // uncomment below and update the code to test the property trackBackground
      //var instance = new ApiVideo.Player();
      //expect(instance).to.be();
    });

    it('should have the property trackPlayed (base name: "trackPlayed")', function() {
      // uncomment below and update the code to test the property trackPlayed
      //var instance = new ApiVideo.Player();
      //expect(instance).to.be();
    });

    it('should have the property trackUnplayed (base name: "trackUnplayed")', function() {
      // uncomment below and update the code to test the property trackUnplayed
      //var instance = new ApiVideo.Player();
      //expect(instance).to.be();
    });

    it('should have the property assets (base name: "assets")', function() {
      // uncomment below and update the code to test the property assets
      //var instance = new ApiVideo.Player();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new ApiVideo.Player();
      //expect(instance).to.be();
    });

    it('should have the property linkActive (base name: "linkActive")', function() {
      // uncomment below and update the code to test the property linkActive
      //var instance = new ApiVideo.Player();
      //expect(instance).to.be();
    });

    it('should have the property playerId (base name: "playerId")', function() {
      // uncomment below and update the code to test the property playerId
      //var instance = new ApiVideo.Player();
      //expect(instance).to.be();
    });

    it('should have the property shapeAspect (base name: "shapeAspect")', function() {
      // uncomment below and update the code to test the property shapeAspect
      //var instance = new ApiVideo.Player();
      //expect(instance).to.be();
    });

    it('should have the property shapeBackgroundBottom (base name: "shapeBackgroundBottom")', function() {
      // uncomment below and update the code to test the property shapeBackgroundBottom
      //var instance = new ApiVideo.Player();
      //expect(instance).to.be();
    });

    it('should have the property shapeBackgroundTop (base name: "shapeBackgroundTop")', function() {
      // uncomment below and update the code to test the property shapeBackgroundTop
      //var instance = new ApiVideo.Player();
      //expect(instance).to.be();
    });

    it('should have the property shapeMargin (base name: "shapeMargin")', function() {
      // uncomment below and update the code to test the property shapeMargin
      //var instance = new ApiVideo.Player();
      //expect(instance).to.be();
    });

    it('should have the property shapeRadius (base name: "shapeRadius")', function() {
      // uncomment below and update the code to test the property shapeRadius
      //var instance = new ApiVideo.Player();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updatedAt")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new ApiVideo.Player();
      //expect(instance).to.be();
    });

  });

}));
