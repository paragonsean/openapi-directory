/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIExtrasApi_H
#define OAI_OAIExtrasApi_H

#include "OAIHelpers.h"
#include "OAIHttpRequest.h"
#include "OAIServerConfiguration.h"
#include "OAIOauth.h"

#include "OAIConfigContext.h"
#include "OAIContentType.h"
#include "OAICustomField.h"
#include "OAICustomLink.h"
#include "OAIExportTemplate.h"
#include "OAIExtras_config_contexts_list_200_response.h"
#include "OAIExtras_content_types_list_200_response.h"
#include "OAIExtras_custom_fields_list_200_response.h"
#include "OAIExtras_custom_links_list_200_response.h"
#include "OAIExtras_export_templates_list_200_response.h"
#include "OAIExtras_image_attachments_list_200_response.h"
#include "OAIExtras_job_results_list_200_response.h"
#include "OAIExtras_journal_entries_list_200_response.h"
#include "OAIExtras_object_changes_list_200_response.h"
#include "OAIExtras_saved_filters_list_200_response.h"
#include "OAIExtras_tags_list_200_response.h"
#include "OAIExtras_webhooks_list_200_response.h"
#include "OAIImageAttachment.h"
#include "OAIJobResult.h"
#include "OAIJournalEntry.h"
#include "OAIObjectChange.h"
#include "OAISavedFilter.h"
#include "OAITag.h"
#include "OAIWebhook.h"
#include "OAIWritableConfigContext.h"
#include "OAIWritableCustomField.h"
#include "OAIWritableJournalEntry.h"
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace OpenAPI {

class OAIExtrasApi : public QObject {
    Q_OBJECT

public:
    OAIExtrasApi(const int timeOut = 0);
    ~OAIExtrasApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables = QMap<QString, OAIServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);


    virtual void extrasConfigContextsBulkDelete();

    /**
    * @param[in]  oai_writable_config_context OAIWritableConfigContext [required]
    */
    virtual void extrasConfigContextsBulkPartialUpdate(const OAIWritableConfigContext &oai_writable_config_context);

    /**
    * @param[in]  oai_writable_config_context OAIWritableConfigContext [required]
    */
    virtual void extrasConfigContextsBulkUpdate(const OAIWritableConfigContext &oai_writable_config_context);

    /**
    * @param[in]  oai_writable_config_context OAIWritableConfigContext [required]
    */
    virtual void extrasConfigContextsCreate(const OAIWritableConfigContext &oai_writable_config_context);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasConfigContextsDelete(const qint32 &id);

    /**
    * @param[in]  id QString [optional]
    * @param[in]  name QString [optional]
    * @param[in]  is_active QString [optional]
    * @param[in]  created QString [optional]
    * @param[in]  last_updated QString [optional]
    * @param[in]  q QString [optional]
    * @param[in]  region_id QString [optional]
    * @param[in]  region QString [optional]
    * @param[in]  site_group QString [optional]
    * @param[in]  site_group_id QString [optional]
    * @param[in]  site_id QString [optional]
    * @param[in]  site QString [optional]
    * @param[in]  location_id QString [optional]
    * @param[in]  location QString [optional]
    * @param[in]  device_type_id QString [optional]
    * @param[in]  role_id QString [optional]
    * @param[in]  role QString [optional]
    * @param[in]  platform_id QString [optional]
    * @param[in]  platform QString [optional]
    * @param[in]  cluster_type_id QString [optional]
    * @param[in]  cluster_type QString [optional]
    * @param[in]  cluster_group_id QString [optional]
    * @param[in]  cluster_group QString [optional]
    * @param[in]  cluster_id QString [optional]
    * @param[in]  tenant_group_id QString [optional]
    * @param[in]  tenant_group QString [optional]
    * @param[in]  tenant_id QString [optional]
    * @param[in]  tenant QString [optional]
    * @param[in]  tag_id QString [optional]
    * @param[in]  tag QString [optional]
    * @param[in]  id__n QString [optional]
    * @param[in]  id__lte QString [optional]
    * @param[in]  id__lt QString [optional]
    * @param[in]  id__gte QString [optional]
    * @param[in]  id__gt QString [optional]
    * @param[in]  name__n QString [optional]
    * @param[in]  name__ic QString [optional]
    * @param[in]  name__nic QString [optional]
    * @param[in]  name__iew QString [optional]
    * @param[in]  name__niew QString [optional]
    * @param[in]  name__isw QString [optional]
    * @param[in]  name__nisw QString [optional]
    * @param[in]  name__ie QString [optional]
    * @param[in]  name__nie QString [optional]
    * @param[in]  name__empty QString [optional]
    * @param[in]  created__n QString [optional]
    * @param[in]  created__lte QString [optional]
    * @param[in]  created__lt QString [optional]
    * @param[in]  created__gte QString [optional]
    * @param[in]  created__gt QString [optional]
    * @param[in]  last_updated__n QString [optional]
    * @param[in]  last_updated__lte QString [optional]
    * @param[in]  last_updated__lt QString [optional]
    * @param[in]  last_updated__gte QString [optional]
    * @param[in]  last_updated__gt QString [optional]
    * @param[in]  region_id__n QString [optional]
    * @param[in]  region__n QString [optional]
    * @param[in]  site_group__n QString [optional]
    * @param[in]  site_group_id__n QString [optional]
    * @param[in]  site_id__n QString [optional]
    * @param[in]  site__n QString [optional]
    * @param[in]  location_id__n QString [optional]
    * @param[in]  location__n QString [optional]
    * @param[in]  device_type_id__n QString [optional]
    * @param[in]  role_id__n QString [optional]
    * @param[in]  role__n QString [optional]
    * @param[in]  platform_id__n QString [optional]
    * @param[in]  platform__n QString [optional]
    * @param[in]  cluster_type_id__n QString [optional]
    * @param[in]  cluster_type__n QString [optional]
    * @param[in]  cluster_group_id__n QString [optional]
    * @param[in]  cluster_group__n QString [optional]
    * @param[in]  cluster_id__n QString [optional]
    * @param[in]  tenant_group_id__n QString [optional]
    * @param[in]  tenant_group__n QString [optional]
    * @param[in]  tenant_id__n QString [optional]
    * @param[in]  tenant__n QString [optional]
    * @param[in]  tag_id__n QString [optional]
    * @param[in]  tag__n QString [optional]
    * @param[in]  ordering QString [optional]
    * @param[in]  limit qint32 [optional]
    * @param[in]  offset qint32 [optional]
    */
    virtual void extrasConfigContextsList(const ::OpenAPI::OptionalParam<QString> &id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &is_active = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &created = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_updated = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &q = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &region_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &region = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &site_group = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &site_group_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &site_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &site = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &location_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &location = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &device_type_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &role_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &role = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &platform_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &platform = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &cluster_type_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &cluster_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &cluster_group_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &cluster_group = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &cluster_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &tenant_group_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &tenant_group = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &tenant_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &tenant = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &tag_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &tag = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__empty = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &created__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &created__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &created__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &created__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &created__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_updated__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_updated__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_updated__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_updated__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_updated__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &region_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &region__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &site_group__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &site_group_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &site_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &site__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &location_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &location__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &device_type_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &role_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &role__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &platform_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &platform__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &cluster_type_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &cluster_type__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &cluster_group_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &cluster_group__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &cluster_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &tenant_group_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &tenant_group__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &tenant_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &tenant__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &tag_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &tag__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ordering = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &limit = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &offset = ::OpenAPI::OptionalParam<qint32>());

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_writable_config_context OAIWritableConfigContext [required]
    */
    virtual void extrasConfigContextsPartialUpdate(const qint32 &id, const OAIWritableConfigContext &oai_writable_config_context);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasConfigContextsRead(const qint32 &id);

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_writable_config_context OAIWritableConfigContext [required]
    */
    virtual void extrasConfigContextsUpdate(const qint32 &id, const OAIWritableConfigContext &oai_writable_config_context);

    /**
    * @param[in]  id double [optional]
    * @param[in]  app_label QString [optional]
    * @param[in]  model QString [optional]
    * @param[in]  q QString [optional]
    * @param[in]  ordering QString [optional]
    * @param[in]  limit qint32 [optional]
    * @param[in]  offset qint32 [optional]
    */
    virtual void extrasContentTypesList(const ::OpenAPI::OptionalParam<double> &id = ::OpenAPI::OptionalParam<double>(), const ::OpenAPI::OptionalParam<QString> &app_label = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &model = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &q = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ordering = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &limit = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &offset = ::OpenAPI::OptionalParam<qint32>());

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasContentTypesRead(const qint32 &id);


    virtual void extrasCustomFieldsBulkDelete();

    /**
    * @param[in]  oai_writable_custom_field OAIWritableCustomField [required]
    */
    virtual void extrasCustomFieldsBulkPartialUpdate(const OAIWritableCustomField &oai_writable_custom_field);

    /**
    * @param[in]  oai_writable_custom_field OAIWritableCustomField [required]
    */
    virtual void extrasCustomFieldsBulkUpdate(const OAIWritableCustomField &oai_writable_custom_field);

    /**
    * @param[in]  oai_writable_custom_field OAIWritableCustomField [required]
    */
    virtual void extrasCustomFieldsCreate(const OAIWritableCustomField &oai_writable_custom_field);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasCustomFieldsDelete(const qint32 &id);

    /**
    * @param[in]  id QString [optional]
    * @param[in]  content_types QString [optional]
    * @param[in]  name QString [optional]
    * @param[in]  group_name QString [optional]
    * @param[in]  required QString [optional]
    * @param[in]  search_weight QString [optional]
    * @param[in]  filter_logic QString [optional]
    * @param[in]  ui_visibility QString [optional]
    * @param[in]  weight QString [optional]
    * @param[in]  description QString [optional]
    * @param[in]  q QString [optional]
    * @param[in]  type QString [optional]
    * @param[in]  content_type_id QString [optional]
    * @param[in]  id__n QString [optional]
    * @param[in]  id__lte QString [optional]
    * @param[in]  id__lt QString [optional]
    * @param[in]  id__gte QString [optional]
    * @param[in]  id__gt QString [optional]
    * @param[in]  content_types__n QString [optional]
    * @param[in]  content_types__ic QString [optional]
    * @param[in]  content_types__nic QString [optional]
    * @param[in]  content_types__iew QString [optional]
    * @param[in]  content_types__niew QString [optional]
    * @param[in]  content_types__isw QString [optional]
    * @param[in]  content_types__nisw QString [optional]
    * @param[in]  content_types__ie QString [optional]
    * @param[in]  content_types__nie QString [optional]
    * @param[in]  name__n QString [optional]
    * @param[in]  name__ic QString [optional]
    * @param[in]  name__nic QString [optional]
    * @param[in]  name__iew QString [optional]
    * @param[in]  name__niew QString [optional]
    * @param[in]  name__isw QString [optional]
    * @param[in]  name__nisw QString [optional]
    * @param[in]  name__ie QString [optional]
    * @param[in]  name__nie QString [optional]
    * @param[in]  name__empty QString [optional]
    * @param[in]  group_name__n QString [optional]
    * @param[in]  group_name__ic QString [optional]
    * @param[in]  group_name__nic QString [optional]
    * @param[in]  group_name__iew QString [optional]
    * @param[in]  group_name__niew QString [optional]
    * @param[in]  group_name__isw QString [optional]
    * @param[in]  group_name__nisw QString [optional]
    * @param[in]  group_name__ie QString [optional]
    * @param[in]  group_name__nie QString [optional]
    * @param[in]  group_name__empty QString [optional]
    * @param[in]  search_weight__n QString [optional]
    * @param[in]  search_weight__lte QString [optional]
    * @param[in]  search_weight__lt QString [optional]
    * @param[in]  search_weight__gte QString [optional]
    * @param[in]  search_weight__gt QString [optional]
    * @param[in]  filter_logic__n QString [optional]
    * @param[in]  ui_visibility__n QString [optional]
    * @param[in]  weight__n QString [optional]
    * @param[in]  weight__lte QString [optional]
    * @param[in]  weight__lt QString [optional]
    * @param[in]  weight__gte QString [optional]
    * @param[in]  weight__gt QString [optional]
    * @param[in]  description__n QString [optional]
    * @param[in]  description__ic QString [optional]
    * @param[in]  description__nic QString [optional]
    * @param[in]  description__iew QString [optional]
    * @param[in]  description__niew QString [optional]
    * @param[in]  description__isw QString [optional]
    * @param[in]  description__nisw QString [optional]
    * @param[in]  description__ie QString [optional]
    * @param[in]  description__nie QString [optional]
    * @param[in]  description__empty QString [optional]
    * @param[in]  type__n QString [optional]
    * @param[in]  content_type_id__n QString [optional]
    * @param[in]  content_type_id__lte QString [optional]
    * @param[in]  content_type_id__lt QString [optional]
    * @param[in]  content_type_id__gte QString [optional]
    * @param[in]  content_type_id__gt QString [optional]
    * @param[in]  ordering QString [optional]
    * @param[in]  limit qint32 [optional]
    * @param[in]  offset qint32 [optional]
    */
    virtual void extrasCustomFieldsList(const ::OpenAPI::OptionalParam<QString> &id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &group_name = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &required = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &search_weight = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &filter_logic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ui_visibility = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &weight = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &q = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__empty = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &group_name__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &group_name__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &group_name__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &group_name__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &group_name__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &group_name__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &group_name__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &group_name__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &group_name__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &group_name__empty = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &search_weight__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &search_weight__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &search_weight__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &search_weight__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &search_weight__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &filter_logic__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ui_visibility__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &weight__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &weight__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &weight__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &weight__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &weight__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__empty = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &type__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ordering = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &limit = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &offset = ::OpenAPI::OptionalParam<qint32>());

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_writable_custom_field OAIWritableCustomField [required]
    */
    virtual void extrasCustomFieldsPartialUpdate(const qint32 &id, const OAIWritableCustomField &oai_writable_custom_field);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasCustomFieldsRead(const qint32 &id);

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_writable_custom_field OAIWritableCustomField [required]
    */
    virtual void extrasCustomFieldsUpdate(const qint32 &id, const OAIWritableCustomField &oai_writable_custom_field);


    virtual void extrasCustomLinksBulkDelete();

    /**
    * @param[in]  oai_custom_link OAICustomLink [required]
    */
    virtual void extrasCustomLinksBulkPartialUpdate(const OAICustomLink &oai_custom_link);

    /**
    * @param[in]  oai_custom_link OAICustomLink [required]
    */
    virtual void extrasCustomLinksBulkUpdate(const OAICustomLink &oai_custom_link);

    /**
    * @param[in]  oai_custom_link OAICustomLink [required]
    */
    virtual void extrasCustomLinksCreate(const OAICustomLink &oai_custom_link);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasCustomLinksDelete(const qint32 &id);

    /**
    * @param[in]  id QString [optional]
    * @param[in]  content_types QString [optional]
    * @param[in]  name QString [optional]
    * @param[in]  enabled QString [optional]
    * @param[in]  link_text QString [optional]
    * @param[in]  link_url QString [optional]
    * @param[in]  weight QString [optional]
    * @param[in]  group_name QString [optional]
    * @param[in]  new_window QString [optional]
    * @param[in]  q QString [optional]
    * @param[in]  content_type_id QString [optional]
    * @param[in]  id__n QString [optional]
    * @param[in]  id__lte QString [optional]
    * @param[in]  id__lt QString [optional]
    * @param[in]  id__gte QString [optional]
    * @param[in]  id__gt QString [optional]
    * @param[in]  content_types__n QString [optional]
    * @param[in]  content_types__ic QString [optional]
    * @param[in]  content_types__nic QString [optional]
    * @param[in]  content_types__iew QString [optional]
    * @param[in]  content_types__niew QString [optional]
    * @param[in]  content_types__isw QString [optional]
    * @param[in]  content_types__nisw QString [optional]
    * @param[in]  content_types__ie QString [optional]
    * @param[in]  content_types__nie QString [optional]
    * @param[in]  name__n QString [optional]
    * @param[in]  name__ic QString [optional]
    * @param[in]  name__nic QString [optional]
    * @param[in]  name__iew QString [optional]
    * @param[in]  name__niew QString [optional]
    * @param[in]  name__isw QString [optional]
    * @param[in]  name__nisw QString [optional]
    * @param[in]  name__ie QString [optional]
    * @param[in]  name__nie QString [optional]
    * @param[in]  name__empty QString [optional]
    * @param[in]  link_text__n QString [optional]
    * @param[in]  link_text__ic QString [optional]
    * @param[in]  link_text__nic QString [optional]
    * @param[in]  link_text__iew QString [optional]
    * @param[in]  link_text__niew QString [optional]
    * @param[in]  link_text__isw QString [optional]
    * @param[in]  link_text__nisw QString [optional]
    * @param[in]  link_text__ie QString [optional]
    * @param[in]  link_text__nie QString [optional]
    * @param[in]  link_url__n QString [optional]
    * @param[in]  link_url__ic QString [optional]
    * @param[in]  link_url__nic QString [optional]
    * @param[in]  link_url__iew QString [optional]
    * @param[in]  link_url__niew QString [optional]
    * @param[in]  link_url__isw QString [optional]
    * @param[in]  link_url__nisw QString [optional]
    * @param[in]  link_url__ie QString [optional]
    * @param[in]  link_url__nie QString [optional]
    * @param[in]  weight__n QString [optional]
    * @param[in]  weight__lte QString [optional]
    * @param[in]  weight__lt QString [optional]
    * @param[in]  weight__gte QString [optional]
    * @param[in]  weight__gt QString [optional]
    * @param[in]  group_name__n QString [optional]
    * @param[in]  group_name__ic QString [optional]
    * @param[in]  group_name__nic QString [optional]
    * @param[in]  group_name__iew QString [optional]
    * @param[in]  group_name__niew QString [optional]
    * @param[in]  group_name__isw QString [optional]
    * @param[in]  group_name__nisw QString [optional]
    * @param[in]  group_name__ie QString [optional]
    * @param[in]  group_name__nie QString [optional]
    * @param[in]  group_name__empty QString [optional]
    * @param[in]  content_type_id__n QString [optional]
    * @param[in]  content_type_id__lte QString [optional]
    * @param[in]  content_type_id__lt QString [optional]
    * @param[in]  content_type_id__gte QString [optional]
    * @param[in]  content_type_id__gt QString [optional]
    * @param[in]  ordering QString [optional]
    * @param[in]  limit qint32 [optional]
    * @param[in]  offset qint32 [optional]
    */
    virtual void extrasCustomLinksList(const ::OpenAPI::OptionalParam<QString> &id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &enabled = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &link_text = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &link_url = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &weight = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &group_name = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &new_window = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &q = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__empty = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &link_text__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &link_text__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &link_text__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &link_text__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &link_text__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &link_text__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &link_text__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &link_text__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &link_text__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &link_url__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &link_url__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &link_url__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &link_url__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &link_url__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &link_url__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &link_url__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &link_url__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &link_url__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &weight__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &weight__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &weight__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &weight__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &weight__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &group_name__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &group_name__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &group_name__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &group_name__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &group_name__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &group_name__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &group_name__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &group_name__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &group_name__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &group_name__empty = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ordering = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &limit = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &offset = ::OpenAPI::OptionalParam<qint32>());

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_custom_link OAICustomLink [required]
    */
    virtual void extrasCustomLinksPartialUpdate(const qint32 &id, const OAICustomLink &oai_custom_link);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasCustomLinksRead(const qint32 &id);

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_custom_link OAICustomLink [required]
    */
    virtual void extrasCustomLinksUpdate(const qint32 &id, const OAICustomLink &oai_custom_link);


    virtual void extrasExportTemplatesBulkDelete();

    /**
    * @param[in]  oai_export_template OAIExportTemplate [required]
    */
    virtual void extrasExportTemplatesBulkPartialUpdate(const OAIExportTemplate &oai_export_template);

    /**
    * @param[in]  oai_export_template OAIExportTemplate [required]
    */
    virtual void extrasExportTemplatesBulkUpdate(const OAIExportTemplate &oai_export_template);

    /**
    * @param[in]  oai_export_template OAIExportTemplate [required]
    */
    virtual void extrasExportTemplatesCreate(const OAIExportTemplate &oai_export_template);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasExportTemplatesDelete(const qint32 &id);

    /**
    * @param[in]  id QString [optional]
    * @param[in]  content_types QString [optional]
    * @param[in]  name QString [optional]
    * @param[in]  description QString [optional]
    * @param[in]  q QString [optional]
    * @param[in]  content_type_id QString [optional]
    * @param[in]  id__n QString [optional]
    * @param[in]  id__lte QString [optional]
    * @param[in]  id__lt QString [optional]
    * @param[in]  id__gte QString [optional]
    * @param[in]  id__gt QString [optional]
    * @param[in]  content_types__n QString [optional]
    * @param[in]  content_types__ic QString [optional]
    * @param[in]  content_types__nic QString [optional]
    * @param[in]  content_types__iew QString [optional]
    * @param[in]  content_types__niew QString [optional]
    * @param[in]  content_types__isw QString [optional]
    * @param[in]  content_types__nisw QString [optional]
    * @param[in]  content_types__ie QString [optional]
    * @param[in]  content_types__nie QString [optional]
    * @param[in]  name__n QString [optional]
    * @param[in]  name__ic QString [optional]
    * @param[in]  name__nic QString [optional]
    * @param[in]  name__iew QString [optional]
    * @param[in]  name__niew QString [optional]
    * @param[in]  name__isw QString [optional]
    * @param[in]  name__nisw QString [optional]
    * @param[in]  name__ie QString [optional]
    * @param[in]  name__nie QString [optional]
    * @param[in]  name__empty QString [optional]
    * @param[in]  description__n QString [optional]
    * @param[in]  description__ic QString [optional]
    * @param[in]  description__nic QString [optional]
    * @param[in]  description__iew QString [optional]
    * @param[in]  description__niew QString [optional]
    * @param[in]  description__isw QString [optional]
    * @param[in]  description__nisw QString [optional]
    * @param[in]  description__ie QString [optional]
    * @param[in]  description__nie QString [optional]
    * @param[in]  description__empty QString [optional]
    * @param[in]  content_type_id__n QString [optional]
    * @param[in]  content_type_id__lte QString [optional]
    * @param[in]  content_type_id__lt QString [optional]
    * @param[in]  content_type_id__gte QString [optional]
    * @param[in]  content_type_id__gt QString [optional]
    * @param[in]  ordering QString [optional]
    * @param[in]  limit qint32 [optional]
    * @param[in]  offset qint32 [optional]
    */
    virtual void extrasExportTemplatesList(const ::OpenAPI::OptionalParam<QString> &id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &q = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__empty = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__empty = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ordering = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &limit = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &offset = ::OpenAPI::OptionalParam<qint32>());

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_export_template OAIExportTemplate [required]
    */
    virtual void extrasExportTemplatesPartialUpdate(const qint32 &id, const OAIExportTemplate &oai_export_template);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasExportTemplatesRead(const qint32 &id);

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_export_template OAIExportTemplate [required]
    */
    virtual void extrasExportTemplatesUpdate(const qint32 &id, const OAIExportTemplate &oai_export_template);


    virtual void extrasImageAttachmentsBulkDelete();

    /**
    * @param[in]  oai_image_attachment OAIImageAttachment [required]
    */
    virtual void extrasImageAttachmentsBulkPartialUpdate(const OAIImageAttachment &oai_image_attachment);

    /**
    * @param[in]  oai_image_attachment OAIImageAttachment [required]
    */
    virtual void extrasImageAttachmentsBulkUpdate(const OAIImageAttachment &oai_image_attachment);

    /**
    * @param[in]  oai_image_attachment OAIImageAttachment [required]
    */
    virtual void extrasImageAttachmentsCreate(const OAIImageAttachment &oai_image_attachment);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasImageAttachmentsDelete(const qint32 &id);

    /**
    * @param[in]  id QString [optional]
    * @param[in]  content_type_id QString [optional]
    * @param[in]  object_id QString [optional]
    * @param[in]  name QString [optional]
    * @param[in]  q QString [optional]
    * @param[in]  created QString [optional]
    * @param[in]  content_type QString [optional]
    * @param[in]  id__n QString [optional]
    * @param[in]  id__lte QString [optional]
    * @param[in]  id__lt QString [optional]
    * @param[in]  id__gte QString [optional]
    * @param[in]  id__gt QString [optional]
    * @param[in]  content_type_id__n QString [optional]
    * @param[in]  object_id__n QString [optional]
    * @param[in]  object_id__lte QString [optional]
    * @param[in]  object_id__lt QString [optional]
    * @param[in]  object_id__gte QString [optional]
    * @param[in]  object_id__gt QString [optional]
    * @param[in]  name__n QString [optional]
    * @param[in]  name__ic QString [optional]
    * @param[in]  name__nic QString [optional]
    * @param[in]  name__iew QString [optional]
    * @param[in]  name__niew QString [optional]
    * @param[in]  name__isw QString [optional]
    * @param[in]  name__nisw QString [optional]
    * @param[in]  name__ie QString [optional]
    * @param[in]  name__nie QString [optional]
    * @param[in]  name__empty QString [optional]
    * @param[in]  content_type__n QString [optional]
    * @param[in]  ordering QString [optional]
    * @param[in]  limit qint32 [optional]
    * @param[in]  offset qint32 [optional]
    */
    virtual void extrasImageAttachmentsList(const ::OpenAPI::OptionalParam<QString> &id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &q = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &created = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_id__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_id__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_id__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_id__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__empty = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ordering = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &limit = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &offset = ::OpenAPI::OptionalParam<qint32>());

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_image_attachment OAIImageAttachment [required]
    */
    virtual void extrasImageAttachmentsPartialUpdate(const qint32 &id, const OAIImageAttachment &oai_image_attachment);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasImageAttachmentsRead(const qint32 &id);

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_image_attachment OAIImageAttachment [required]
    */
    virtual void extrasImageAttachmentsUpdate(const qint32 &id, const OAIImageAttachment &oai_image_attachment);

    /**
    * @param[in]  id QString [optional]
    * @param[in]  interval QString [optional]
    * @param[in]  status QString [optional]
    * @param[in]  user QString [optional]
    * @param[in]  obj_type QString [optional]
    * @param[in]  name QString [optional]
    * @param[in]  q QString [optional]
    * @param[in]  created QString [optional]
    * @param[in]  created__before QString [optional]
    * @param[in]  created__after QString [optional]
    * @param[in]  scheduled QString [optional]
    * @param[in]  scheduled__before QString [optional]
    * @param[in]  scheduled__after QString [optional]
    * @param[in]  started QString [optional]
    * @param[in]  started__before QString [optional]
    * @param[in]  started__after QString [optional]
    * @param[in]  completed QString [optional]
    * @param[in]  completed__before QString [optional]
    * @param[in]  completed__after QString [optional]
    * @param[in]  id__n QString [optional]
    * @param[in]  id__lte QString [optional]
    * @param[in]  id__lt QString [optional]
    * @param[in]  id__gte QString [optional]
    * @param[in]  id__gt QString [optional]
    * @param[in]  interval__n QString [optional]
    * @param[in]  interval__lte QString [optional]
    * @param[in]  interval__lt QString [optional]
    * @param[in]  interval__gte QString [optional]
    * @param[in]  interval__gt QString [optional]
    * @param[in]  status__n QString [optional]
    * @param[in]  user__n QString [optional]
    * @param[in]  obj_type__n QString [optional]
    * @param[in]  name__n QString [optional]
    * @param[in]  name__ic QString [optional]
    * @param[in]  name__nic QString [optional]
    * @param[in]  name__iew QString [optional]
    * @param[in]  name__niew QString [optional]
    * @param[in]  name__isw QString [optional]
    * @param[in]  name__nisw QString [optional]
    * @param[in]  name__ie QString [optional]
    * @param[in]  name__nie QString [optional]
    * @param[in]  name__empty QString [optional]
    * @param[in]  ordering QString [optional]
    * @param[in]  limit qint32 [optional]
    * @param[in]  offset qint32 [optional]
    */
    virtual void extrasJobResultsList(const ::OpenAPI::OptionalParam<QString> &id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &interval = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &status = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &obj_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &q = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &created = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &created__before = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &created__after = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &scheduled = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &scheduled__before = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &scheduled__after = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &started = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &started__before = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &started__after = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &completed = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &completed__before = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &completed__after = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &interval__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &interval__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &interval__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &interval__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &interval__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &status__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &obj_type__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__empty = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ordering = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &limit = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &offset = ::OpenAPI::OptionalParam<qint32>());

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasJobResultsRead(const qint32 &id);


    virtual void extrasJournalEntriesBulkDelete();

    /**
    * @param[in]  oai_writable_journal_entry OAIWritableJournalEntry [required]
    */
    virtual void extrasJournalEntriesBulkPartialUpdate(const OAIWritableJournalEntry &oai_writable_journal_entry);

    /**
    * @param[in]  oai_writable_journal_entry OAIWritableJournalEntry [required]
    */
    virtual void extrasJournalEntriesBulkUpdate(const OAIWritableJournalEntry &oai_writable_journal_entry);

    /**
    * @param[in]  oai_writable_journal_entry OAIWritableJournalEntry [required]
    */
    virtual void extrasJournalEntriesCreate(const OAIWritableJournalEntry &oai_writable_journal_entry);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasJournalEntriesDelete(const qint32 &id);

    /**
    * @param[in]  id QString [optional]
    * @param[in]  assigned_object_type_id QString [optional]
    * @param[in]  assigned_object_id QString [optional]
    * @param[in]  created QString [optional]
    * @param[in]  kind QString [optional]
    * @param[in]  last_updated QString [optional]
    * @param[in]  q QString [optional]
    * @param[in]  tag QString [optional]
    * @param[in]  assigned_object_type QString [optional]
    * @param[in]  created_by_id QString [optional]
    * @param[in]  created_by QString [optional]
    * @param[in]  id__n QString [optional]
    * @param[in]  id__lte QString [optional]
    * @param[in]  id__lt QString [optional]
    * @param[in]  id__gte QString [optional]
    * @param[in]  id__gt QString [optional]
    * @param[in]  assigned_object_type_id__n QString [optional]
    * @param[in]  assigned_object_id__n QString [optional]
    * @param[in]  assigned_object_id__lte QString [optional]
    * @param[in]  assigned_object_id__lt QString [optional]
    * @param[in]  assigned_object_id__gte QString [optional]
    * @param[in]  assigned_object_id__gt QString [optional]
    * @param[in]  kind__n QString [optional]
    * @param[in]  last_updated__n QString [optional]
    * @param[in]  last_updated__lte QString [optional]
    * @param[in]  last_updated__lt QString [optional]
    * @param[in]  last_updated__gte QString [optional]
    * @param[in]  last_updated__gt QString [optional]
    * @param[in]  tag__n QString [optional]
    * @param[in]  assigned_object_type__n QString [optional]
    * @param[in]  created_by_id__n QString [optional]
    * @param[in]  created_by__n QString [optional]
    * @param[in]  ordering QString [optional]
    * @param[in]  limit qint32 [optional]
    * @param[in]  offset qint32 [optional]
    */
    virtual void extrasJournalEntriesList(const ::OpenAPI::OptionalParam<QString> &id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &assigned_object_type_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &assigned_object_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &created = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &kind = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_updated = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &q = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &tag = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &assigned_object_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &created_by_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &created_by = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &assigned_object_type_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &assigned_object_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &assigned_object_id__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &assigned_object_id__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &assigned_object_id__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &assigned_object_id__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &kind__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_updated__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_updated__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_updated__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_updated__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_updated__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &tag__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &assigned_object_type__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &created_by_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &created_by__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ordering = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &limit = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &offset = ::OpenAPI::OptionalParam<qint32>());

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_writable_journal_entry OAIWritableJournalEntry [required]
    */
    virtual void extrasJournalEntriesPartialUpdate(const qint32 &id, const OAIWritableJournalEntry &oai_writable_journal_entry);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasJournalEntriesRead(const qint32 &id);

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_writable_journal_entry OAIWritableJournalEntry [required]
    */
    virtual void extrasJournalEntriesUpdate(const qint32 &id, const OAIWritableJournalEntry &oai_writable_journal_entry);

    /**
    * @param[in]  id QString [optional]
    * @param[in]  user QString [optional]
    * @param[in]  user_name QString [optional]
    * @param[in]  request_id QString [optional]
    * @param[in]  action QString [optional]
    * @param[in]  changed_object_type_id QString [optional]
    * @param[in]  changed_object_id QString [optional]
    * @param[in]  object_repr QString [optional]
    * @param[in]  q QString [optional]
    * @param[in]  time QString [optional]
    * @param[in]  changed_object_type QString [optional]
    * @param[in]  user_id QString [optional]
    * @param[in]  id__n QString [optional]
    * @param[in]  id__lte QString [optional]
    * @param[in]  id__lt QString [optional]
    * @param[in]  id__gte QString [optional]
    * @param[in]  id__gt QString [optional]
    * @param[in]  user__n QString [optional]
    * @param[in]  user_name__n QString [optional]
    * @param[in]  user_name__ic QString [optional]
    * @param[in]  user_name__nic QString [optional]
    * @param[in]  user_name__iew QString [optional]
    * @param[in]  user_name__niew QString [optional]
    * @param[in]  user_name__isw QString [optional]
    * @param[in]  user_name__nisw QString [optional]
    * @param[in]  user_name__ie QString [optional]
    * @param[in]  user_name__nie QString [optional]
    * @param[in]  user_name__empty QString [optional]
    * @param[in]  action__n QString [optional]
    * @param[in]  changed_object_type_id__n QString [optional]
    * @param[in]  changed_object_id__n QString [optional]
    * @param[in]  changed_object_id__lte QString [optional]
    * @param[in]  changed_object_id__lt QString [optional]
    * @param[in]  changed_object_id__gte QString [optional]
    * @param[in]  changed_object_id__gt QString [optional]
    * @param[in]  object_repr__n QString [optional]
    * @param[in]  object_repr__ic QString [optional]
    * @param[in]  object_repr__nic QString [optional]
    * @param[in]  object_repr__iew QString [optional]
    * @param[in]  object_repr__niew QString [optional]
    * @param[in]  object_repr__isw QString [optional]
    * @param[in]  object_repr__nisw QString [optional]
    * @param[in]  object_repr__ie QString [optional]
    * @param[in]  object_repr__nie QString [optional]
    * @param[in]  object_repr__empty QString [optional]
    * @param[in]  changed_object_type__n QString [optional]
    * @param[in]  user_id__n QString [optional]
    * @param[in]  ordering QString [optional]
    * @param[in]  limit qint32 [optional]
    * @param[in]  offset qint32 [optional]
    */
    virtual void extrasObjectChangesList(const ::OpenAPI::OptionalParam<QString> &id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user_name = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &request_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &action = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &changed_object_type_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &changed_object_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_repr = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &q = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &time = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &changed_object_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user_name__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user_name__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user_name__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user_name__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user_name__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user_name__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user_name__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user_name__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user_name__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user_name__empty = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &action__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &changed_object_type_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &changed_object_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &changed_object_id__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &changed_object_id__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &changed_object_id__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &changed_object_id__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_repr__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_repr__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_repr__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_repr__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_repr__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_repr__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_repr__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_repr__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_repr__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &object_repr__empty = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &changed_object_type__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ordering = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &limit = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &offset = ::OpenAPI::OptionalParam<qint32>());

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasObjectChangesRead(const qint32 &id);


    virtual void extrasReportsList();

    /**
    * @param[in]  id QString [required]
    */
    virtual void extrasReportsRead(const QString &id);

    /**
    * @param[in]  id QString [required]
    */
    virtual void extrasReportsRun(const QString &id);


    virtual void extrasSavedFiltersBulkDelete();

    /**
    * @param[in]  oai_saved_filter OAISavedFilter [required]
    */
    virtual void extrasSavedFiltersBulkPartialUpdate(const OAISavedFilter &oai_saved_filter);

    /**
    * @param[in]  oai_saved_filter OAISavedFilter [required]
    */
    virtual void extrasSavedFiltersBulkUpdate(const OAISavedFilter &oai_saved_filter);

    /**
    * @param[in]  oai_saved_filter OAISavedFilter [required]
    */
    virtual void extrasSavedFiltersCreate(const OAISavedFilter &oai_saved_filter);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasSavedFiltersDelete(const qint32 &id);

    /**
    * @param[in]  id QString [optional]
    * @param[in]  content_types QString [optional]
    * @param[in]  name QString [optional]
    * @param[in]  slug QString [optional]
    * @param[in]  description QString [optional]
    * @param[in]  enabled QString [optional]
    * @param[in]  shared QString [optional]
    * @param[in]  weight QString [optional]
    * @param[in]  q QString [optional]
    * @param[in]  content_type_id QString [optional]
    * @param[in]  user_id QString [optional]
    * @param[in]  user QString [optional]
    * @param[in]  usable QString [optional]
    * @param[in]  id__n QString [optional]
    * @param[in]  id__lte QString [optional]
    * @param[in]  id__lt QString [optional]
    * @param[in]  id__gte QString [optional]
    * @param[in]  id__gt QString [optional]
    * @param[in]  content_types__n QString [optional]
    * @param[in]  content_types__ic QString [optional]
    * @param[in]  content_types__nic QString [optional]
    * @param[in]  content_types__iew QString [optional]
    * @param[in]  content_types__niew QString [optional]
    * @param[in]  content_types__isw QString [optional]
    * @param[in]  content_types__nisw QString [optional]
    * @param[in]  content_types__ie QString [optional]
    * @param[in]  content_types__nie QString [optional]
    * @param[in]  name__n QString [optional]
    * @param[in]  name__ic QString [optional]
    * @param[in]  name__nic QString [optional]
    * @param[in]  name__iew QString [optional]
    * @param[in]  name__niew QString [optional]
    * @param[in]  name__isw QString [optional]
    * @param[in]  name__nisw QString [optional]
    * @param[in]  name__ie QString [optional]
    * @param[in]  name__nie QString [optional]
    * @param[in]  name__empty QString [optional]
    * @param[in]  slug__n QString [optional]
    * @param[in]  slug__ic QString [optional]
    * @param[in]  slug__nic QString [optional]
    * @param[in]  slug__iew QString [optional]
    * @param[in]  slug__niew QString [optional]
    * @param[in]  slug__isw QString [optional]
    * @param[in]  slug__nisw QString [optional]
    * @param[in]  slug__ie QString [optional]
    * @param[in]  slug__nie QString [optional]
    * @param[in]  slug__empty QString [optional]
    * @param[in]  description__n QString [optional]
    * @param[in]  description__ic QString [optional]
    * @param[in]  description__nic QString [optional]
    * @param[in]  description__iew QString [optional]
    * @param[in]  description__niew QString [optional]
    * @param[in]  description__isw QString [optional]
    * @param[in]  description__nisw QString [optional]
    * @param[in]  description__ie QString [optional]
    * @param[in]  description__nie QString [optional]
    * @param[in]  description__empty QString [optional]
    * @param[in]  weight__n QString [optional]
    * @param[in]  weight__lte QString [optional]
    * @param[in]  weight__lt QString [optional]
    * @param[in]  weight__gte QString [optional]
    * @param[in]  weight__gt QString [optional]
    * @param[in]  content_type_id__n QString [optional]
    * @param[in]  content_type_id__lte QString [optional]
    * @param[in]  content_type_id__lt QString [optional]
    * @param[in]  content_type_id__gte QString [optional]
    * @param[in]  content_type_id__gt QString [optional]
    * @param[in]  user_id__n QString [optional]
    * @param[in]  user__n QString [optional]
    * @param[in]  ordering QString [optional]
    * @param[in]  limit qint32 [optional]
    * @param[in]  offset qint32 [optional]
    */
    virtual void extrasSavedFiltersList(const ::OpenAPI::OptionalParam<QString> &id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &enabled = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &shared = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &weight = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &q = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &usable = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__empty = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__empty = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__empty = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &weight__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &weight__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &weight__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &weight__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &weight__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &user__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ordering = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &limit = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &offset = ::OpenAPI::OptionalParam<qint32>());

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_saved_filter OAISavedFilter [required]
    */
    virtual void extrasSavedFiltersPartialUpdate(const qint32 &id, const OAISavedFilter &oai_saved_filter);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasSavedFiltersRead(const qint32 &id);

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_saved_filter OAISavedFilter [required]
    */
    virtual void extrasSavedFiltersUpdate(const qint32 &id, const OAISavedFilter &oai_saved_filter);


    virtual void extrasScriptsList();

    /**
    * @param[in]  id QString [required]
    */
    virtual void extrasScriptsRead(const QString &id);


    virtual void extrasTagsBulkDelete();

    /**
    * @param[in]  oai_tag OAITag [required]
    */
    virtual void extrasTagsBulkPartialUpdate(const OAITag &oai_tag);

    /**
    * @param[in]  oai_tag OAITag [required]
    */
    virtual void extrasTagsBulkUpdate(const OAITag &oai_tag);

    /**
    * @param[in]  oai_tag OAITag [required]
    */
    virtual void extrasTagsCreate(const OAITag &oai_tag);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasTagsDelete(const qint32 &id);

    /**
    * @param[in]  id QString [optional]
    * @param[in]  name QString [optional]
    * @param[in]  slug QString [optional]
    * @param[in]  color QString [optional]
    * @param[in]  description QString [optional]
    * @param[in]  created QString [optional]
    * @param[in]  last_updated QString [optional]
    * @param[in]  q QString [optional]
    * @param[in]  content_type QString [optional]
    * @param[in]  content_type_id QString [optional]
    * @param[in]  id__n QString [optional]
    * @param[in]  id__lte QString [optional]
    * @param[in]  id__lt QString [optional]
    * @param[in]  id__gte QString [optional]
    * @param[in]  id__gt QString [optional]
    * @param[in]  name__n QString [optional]
    * @param[in]  name__ic QString [optional]
    * @param[in]  name__nic QString [optional]
    * @param[in]  name__iew QString [optional]
    * @param[in]  name__niew QString [optional]
    * @param[in]  name__isw QString [optional]
    * @param[in]  name__nisw QString [optional]
    * @param[in]  name__ie QString [optional]
    * @param[in]  name__nie QString [optional]
    * @param[in]  name__empty QString [optional]
    * @param[in]  slug__n QString [optional]
    * @param[in]  slug__ic QString [optional]
    * @param[in]  slug__nic QString [optional]
    * @param[in]  slug__iew QString [optional]
    * @param[in]  slug__niew QString [optional]
    * @param[in]  slug__isw QString [optional]
    * @param[in]  slug__nisw QString [optional]
    * @param[in]  slug__ie QString [optional]
    * @param[in]  slug__nie QString [optional]
    * @param[in]  slug__empty QString [optional]
    * @param[in]  color__n QString [optional]
    * @param[in]  color__ic QString [optional]
    * @param[in]  color__nic QString [optional]
    * @param[in]  color__iew QString [optional]
    * @param[in]  color__niew QString [optional]
    * @param[in]  color__isw QString [optional]
    * @param[in]  color__nisw QString [optional]
    * @param[in]  color__ie QString [optional]
    * @param[in]  color__nie QString [optional]
    * @param[in]  color__empty QString [optional]
    * @param[in]  description__n QString [optional]
    * @param[in]  description__ic QString [optional]
    * @param[in]  description__nic QString [optional]
    * @param[in]  description__iew QString [optional]
    * @param[in]  description__niew QString [optional]
    * @param[in]  description__isw QString [optional]
    * @param[in]  description__nisw QString [optional]
    * @param[in]  description__ie QString [optional]
    * @param[in]  description__nie QString [optional]
    * @param[in]  description__empty QString [optional]
    * @param[in]  created__n QString [optional]
    * @param[in]  created__lte QString [optional]
    * @param[in]  created__lt QString [optional]
    * @param[in]  created__gte QString [optional]
    * @param[in]  created__gt QString [optional]
    * @param[in]  last_updated__n QString [optional]
    * @param[in]  last_updated__lte QString [optional]
    * @param[in]  last_updated__lt QString [optional]
    * @param[in]  last_updated__gte QString [optional]
    * @param[in]  last_updated__gt QString [optional]
    * @param[in]  ordering QString [optional]
    * @param[in]  limit qint32 [optional]
    * @param[in]  offset qint32 [optional]
    */
    virtual void extrasTagsList(const ::OpenAPI::OptionalParam<QString> &id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &created = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_updated = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &q = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__empty = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &slug__empty = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &color__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &color__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &color__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &color__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &color__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &color__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &color__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &color__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &color__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &color__empty = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &description__empty = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &created__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &created__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &created__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &created__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &created__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_updated__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_updated__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_updated__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_updated__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_updated__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ordering = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &limit = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &offset = ::OpenAPI::OptionalParam<qint32>());

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_tag OAITag [required]
    */
    virtual void extrasTagsPartialUpdate(const qint32 &id, const OAITag &oai_tag);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasTagsRead(const qint32 &id);

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_tag OAITag [required]
    */
    virtual void extrasTagsUpdate(const qint32 &id, const OAITag &oai_tag);


    virtual void extrasWebhooksBulkDelete();

    /**
    * @param[in]  oai_webhook OAIWebhook [required]
    */
    virtual void extrasWebhooksBulkPartialUpdate(const OAIWebhook &oai_webhook);

    /**
    * @param[in]  oai_webhook OAIWebhook [required]
    */
    virtual void extrasWebhooksBulkUpdate(const OAIWebhook &oai_webhook);

    /**
    * @param[in]  oai_webhook OAIWebhook [required]
    */
    virtual void extrasWebhooksCreate(const OAIWebhook &oai_webhook);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasWebhooksDelete(const qint32 &id);

    /**
    * @param[in]  id QString [optional]
    * @param[in]  name QString [optional]
    * @param[in]  type_create QString [optional]
    * @param[in]  type_update QString [optional]
    * @param[in]  type_delete QString [optional]
    * @param[in]  payload_url QString [optional]
    * @param[in]  enabled QString [optional]
    * @param[in]  http_method QString [optional]
    * @param[in]  http_content_type QString [optional]
    * @param[in]  secret QString [optional]
    * @param[in]  ssl_verification QString [optional]
    * @param[in]  ca_file_path QString [optional]
    * @param[in]  q QString [optional]
    * @param[in]  content_type_id QString [optional]
    * @param[in]  content_types QString [optional]
    * @param[in]  id__n QString [optional]
    * @param[in]  id__lte QString [optional]
    * @param[in]  id__lt QString [optional]
    * @param[in]  id__gte QString [optional]
    * @param[in]  id__gt QString [optional]
    * @param[in]  name__n QString [optional]
    * @param[in]  name__ic QString [optional]
    * @param[in]  name__nic QString [optional]
    * @param[in]  name__iew QString [optional]
    * @param[in]  name__niew QString [optional]
    * @param[in]  name__isw QString [optional]
    * @param[in]  name__nisw QString [optional]
    * @param[in]  name__ie QString [optional]
    * @param[in]  name__nie QString [optional]
    * @param[in]  name__empty QString [optional]
    * @param[in]  payload_url__n QString [optional]
    * @param[in]  payload_url__ic QString [optional]
    * @param[in]  payload_url__nic QString [optional]
    * @param[in]  payload_url__iew QString [optional]
    * @param[in]  payload_url__niew QString [optional]
    * @param[in]  payload_url__isw QString [optional]
    * @param[in]  payload_url__nisw QString [optional]
    * @param[in]  payload_url__ie QString [optional]
    * @param[in]  payload_url__nie QString [optional]
    * @param[in]  payload_url__empty QString [optional]
    * @param[in]  http_method__n QString [optional]
    * @param[in]  http_content_type__n QString [optional]
    * @param[in]  http_content_type__ic QString [optional]
    * @param[in]  http_content_type__nic QString [optional]
    * @param[in]  http_content_type__iew QString [optional]
    * @param[in]  http_content_type__niew QString [optional]
    * @param[in]  http_content_type__isw QString [optional]
    * @param[in]  http_content_type__nisw QString [optional]
    * @param[in]  http_content_type__ie QString [optional]
    * @param[in]  http_content_type__nie QString [optional]
    * @param[in]  http_content_type__empty QString [optional]
    * @param[in]  secret__n QString [optional]
    * @param[in]  secret__ic QString [optional]
    * @param[in]  secret__nic QString [optional]
    * @param[in]  secret__iew QString [optional]
    * @param[in]  secret__niew QString [optional]
    * @param[in]  secret__isw QString [optional]
    * @param[in]  secret__nisw QString [optional]
    * @param[in]  secret__ie QString [optional]
    * @param[in]  secret__nie QString [optional]
    * @param[in]  secret__empty QString [optional]
    * @param[in]  ca_file_path__n QString [optional]
    * @param[in]  ca_file_path__ic QString [optional]
    * @param[in]  ca_file_path__nic QString [optional]
    * @param[in]  ca_file_path__iew QString [optional]
    * @param[in]  ca_file_path__niew QString [optional]
    * @param[in]  ca_file_path__isw QString [optional]
    * @param[in]  ca_file_path__nisw QString [optional]
    * @param[in]  ca_file_path__ie QString [optional]
    * @param[in]  ca_file_path__nie QString [optional]
    * @param[in]  ca_file_path__empty QString [optional]
    * @param[in]  content_type_id__n QString [optional]
    * @param[in]  content_type_id__lte QString [optional]
    * @param[in]  content_type_id__lt QString [optional]
    * @param[in]  content_type_id__gte QString [optional]
    * @param[in]  content_type_id__gt QString [optional]
    * @param[in]  content_types__n QString [optional]
    * @param[in]  content_types__ic QString [optional]
    * @param[in]  content_types__nic QString [optional]
    * @param[in]  content_types__iew QString [optional]
    * @param[in]  content_types__niew QString [optional]
    * @param[in]  content_types__isw QString [optional]
    * @param[in]  content_types__nisw QString [optional]
    * @param[in]  content_types__ie QString [optional]
    * @param[in]  content_types__nie QString [optional]
    * @param[in]  ordering QString [optional]
    * @param[in]  limit qint32 [optional]
    * @param[in]  offset qint32 [optional]
    */
    virtual void extrasWebhooksList(const ::OpenAPI::OptionalParam<QString> &id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &type_create = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &type_update = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &type_delete = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &payload_url = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &enabled = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &http_method = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &http_content_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &secret = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ssl_verification = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ca_file_path = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &q = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &name__empty = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &payload_url__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &payload_url__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &payload_url__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &payload_url__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &payload_url__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &payload_url__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &payload_url__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &payload_url__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &payload_url__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &payload_url__empty = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &http_method__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &http_content_type__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &http_content_type__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &http_content_type__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &http_content_type__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &http_content_type__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &http_content_type__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &http_content_type__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &http_content_type__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &http_content_type__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &http_content_type__empty = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &secret__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &secret__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &secret__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &secret__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &secret__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &secret__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &secret__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &secret__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &secret__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &secret__empty = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ca_file_path__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ca_file_path__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ca_file_path__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ca_file_path__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ca_file_path__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ca_file_path__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ca_file_path__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ca_file_path__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ca_file_path__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ca_file_path__empty = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id__lte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id__lt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id__gte = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_type_id__gt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__n = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__ic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__nic = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__iew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__niew = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__isw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__nisw = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__ie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &content_types__nie = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ordering = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &limit = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &offset = ::OpenAPI::OptionalParam<qint32>());

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_webhook OAIWebhook [required]
    */
    virtual void extrasWebhooksPartialUpdate(const qint32 &id, const OAIWebhook &oai_webhook);

    /**
    * @param[in]  id qint32 [required]
    */
    virtual void extrasWebhooksRead(const qint32 &id);

    /**
    * @param[in]  id qint32 [required]
    * @param[in]  oai_webhook OAIWebhook [required]
    */
    virtual void extrasWebhooksUpdate(const qint32 &id, const OAIWebhook &oai_webhook);


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<OAIServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    OAIHttpRequestInput _latestInput;
    OAIHttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void extrasConfigContextsBulkDeleteCallback(OAIHttpRequestWorker *worker);
    void extrasConfigContextsBulkPartialUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasConfigContextsBulkUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasConfigContextsCreateCallback(OAIHttpRequestWorker *worker);
    void extrasConfigContextsDeleteCallback(OAIHttpRequestWorker *worker);
    void extrasConfigContextsListCallback(OAIHttpRequestWorker *worker);
    void extrasConfigContextsPartialUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasConfigContextsReadCallback(OAIHttpRequestWorker *worker);
    void extrasConfigContextsUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasContentTypesListCallback(OAIHttpRequestWorker *worker);
    void extrasContentTypesReadCallback(OAIHttpRequestWorker *worker);
    void extrasCustomFieldsBulkDeleteCallback(OAIHttpRequestWorker *worker);
    void extrasCustomFieldsBulkPartialUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasCustomFieldsBulkUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasCustomFieldsCreateCallback(OAIHttpRequestWorker *worker);
    void extrasCustomFieldsDeleteCallback(OAIHttpRequestWorker *worker);
    void extrasCustomFieldsListCallback(OAIHttpRequestWorker *worker);
    void extrasCustomFieldsPartialUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasCustomFieldsReadCallback(OAIHttpRequestWorker *worker);
    void extrasCustomFieldsUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasCustomLinksBulkDeleteCallback(OAIHttpRequestWorker *worker);
    void extrasCustomLinksBulkPartialUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasCustomLinksBulkUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasCustomLinksCreateCallback(OAIHttpRequestWorker *worker);
    void extrasCustomLinksDeleteCallback(OAIHttpRequestWorker *worker);
    void extrasCustomLinksListCallback(OAIHttpRequestWorker *worker);
    void extrasCustomLinksPartialUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasCustomLinksReadCallback(OAIHttpRequestWorker *worker);
    void extrasCustomLinksUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasExportTemplatesBulkDeleteCallback(OAIHttpRequestWorker *worker);
    void extrasExportTemplatesBulkPartialUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasExportTemplatesBulkUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasExportTemplatesCreateCallback(OAIHttpRequestWorker *worker);
    void extrasExportTemplatesDeleteCallback(OAIHttpRequestWorker *worker);
    void extrasExportTemplatesListCallback(OAIHttpRequestWorker *worker);
    void extrasExportTemplatesPartialUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasExportTemplatesReadCallback(OAIHttpRequestWorker *worker);
    void extrasExportTemplatesUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasImageAttachmentsBulkDeleteCallback(OAIHttpRequestWorker *worker);
    void extrasImageAttachmentsBulkPartialUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasImageAttachmentsBulkUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasImageAttachmentsCreateCallback(OAIHttpRequestWorker *worker);
    void extrasImageAttachmentsDeleteCallback(OAIHttpRequestWorker *worker);
    void extrasImageAttachmentsListCallback(OAIHttpRequestWorker *worker);
    void extrasImageAttachmentsPartialUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasImageAttachmentsReadCallback(OAIHttpRequestWorker *worker);
    void extrasImageAttachmentsUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasJobResultsListCallback(OAIHttpRequestWorker *worker);
    void extrasJobResultsReadCallback(OAIHttpRequestWorker *worker);
    void extrasJournalEntriesBulkDeleteCallback(OAIHttpRequestWorker *worker);
    void extrasJournalEntriesBulkPartialUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasJournalEntriesBulkUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasJournalEntriesCreateCallback(OAIHttpRequestWorker *worker);
    void extrasJournalEntriesDeleteCallback(OAIHttpRequestWorker *worker);
    void extrasJournalEntriesListCallback(OAIHttpRequestWorker *worker);
    void extrasJournalEntriesPartialUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasJournalEntriesReadCallback(OAIHttpRequestWorker *worker);
    void extrasJournalEntriesUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasObjectChangesListCallback(OAIHttpRequestWorker *worker);
    void extrasObjectChangesReadCallback(OAIHttpRequestWorker *worker);
    void extrasReportsListCallback(OAIHttpRequestWorker *worker);
    void extrasReportsReadCallback(OAIHttpRequestWorker *worker);
    void extrasReportsRunCallback(OAIHttpRequestWorker *worker);
    void extrasSavedFiltersBulkDeleteCallback(OAIHttpRequestWorker *worker);
    void extrasSavedFiltersBulkPartialUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasSavedFiltersBulkUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasSavedFiltersCreateCallback(OAIHttpRequestWorker *worker);
    void extrasSavedFiltersDeleteCallback(OAIHttpRequestWorker *worker);
    void extrasSavedFiltersListCallback(OAIHttpRequestWorker *worker);
    void extrasSavedFiltersPartialUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasSavedFiltersReadCallback(OAIHttpRequestWorker *worker);
    void extrasSavedFiltersUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasScriptsListCallback(OAIHttpRequestWorker *worker);
    void extrasScriptsReadCallback(OAIHttpRequestWorker *worker);
    void extrasTagsBulkDeleteCallback(OAIHttpRequestWorker *worker);
    void extrasTagsBulkPartialUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasTagsBulkUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasTagsCreateCallback(OAIHttpRequestWorker *worker);
    void extrasTagsDeleteCallback(OAIHttpRequestWorker *worker);
    void extrasTagsListCallback(OAIHttpRequestWorker *worker);
    void extrasTagsPartialUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasTagsReadCallback(OAIHttpRequestWorker *worker);
    void extrasTagsUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasWebhooksBulkDeleteCallback(OAIHttpRequestWorker *worker);
    void extrasWebhooksBulkPartialUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasWebhooksBulkUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasWebhooksCreateCallback(OAIHttpRequestWorker *worker);
    void extrasWebhooksDeleteCallback(OAIHttpRequestWorker *worker);
    void extrasWebhooksListCallback(OAIHttpRequestWorker *worker);
    void extrasWebhooksPartialUpdateCallback(OAIHttpRequestWorker *worker);
    void extrasWebhooksReadCallback(OAIHttpRequestWorker *worker);
    void extrasWebhooksUpdateCallback(OAIHttpRequestWorker *worker);

Q_SIGNALS:

    void extrasConfigContextsBulkDeleteSignal();
    void extrasConfigContextsBulkPartialUpdateSignal(OAIConfigContext summary);
    void extrasConfigContextsBulkUpdateSignal(OAIConfigContext summary);
    void extrasConfigContextsCreateSignal(OAIConfigContext summary);
    void extrasConfigContextsDeleteSignal();
    void extrasConfigContextsListSignal(OAIExtras_config_contexts_list_200_response summary);
    void extrasConfigContextsPartialUpdateSignal(OAIConfigContext summary);
    void extrasConfigContextsReadSignal(OAIConfigContext summary);
    void extrasConfigContextsUpdateSignal(OAIConfigContext summary);
    void extrasContentTypesListSignal(OAIExtras_content_types_list_200_response summary);
    void extrasContentTypesReadSignal(OAIContentType summary);
    void extrasCustomFieldsBulkDeleteSignal();
    void extrasCustomFieldsBulkPartialUpdateSignal(OAICustomField summary);
    void extrasCustomFieldsBulkUpdateSignal(OAICustomField summary);
    void extrasCustomFieldsCreateSignal(OAICustomField summary);
    void extrasCustomFieldsDeleteSignal();
    void extrasCustomFieldsListSignal(OAIExtras_custom_fields_list_200_response summary);
    void extrasCustomFieldsPartialUpdateSignal(OAICustomField summary);
    void extrasCustomFieldsReadSignal(OAICustomField summary);
    void extrasCustomFieldsUpdateSignal(OAICustomField summary);
    void extrasCustomLinksBulkDeleteSignal();
    void extrasCustomLinksBulkPartialUpdateSignal(OAICustomLink summary);
    void extrasCustomLinksBulkUpdateSignal(OAICustomLink summary);
    void extrasCustomLinksCreateSignal(OAICustomLink summary);
    void extrasCustomLinksDeleteSignal();
    void extrasCustomLinksListSignal(OAIExtras_custom_links_list_200_response summary);
    void extrasCustomLinksPartialUpdateSignal(OAICustomLink summary);
    void extrasCustomLinksReadSignal(OAICustomLink summary);
    void extrasCustomLinksUpdateSignal(OAICustomLink summary);
    void extrasExportTemplatesBulkDeleteSignal();
    void extrasExportTemplatesBulkPartialUpdateSignal(OAIExportTemplate summary);
    void extrasExportTemplatesBulkUpdateSignal(OAIExportTemplate summary);
    void extrasExportTemplatesCreateSignal(OAIExportTemplate summary);
    void extrasExportTemplatesDeleteSignal();
    void extrasExportTemplatesListSignal(OAIExtras_export_templates_list_200_response summary);
    void extrasExportTemplatesPartialUpdateSignal(OAIExportTemplate summary);
    void extrasExportTemplatesReadSignal(OAIExportTemplate summary);
    void extrasExportTemplatesUpdateSignal(OAIExportTemplate summary);
    void extrasImageAttachmentsBulkDeleteSignal();
    void extrasImageAttachmentsBulkPartialUpdateSignal(OAIImageAttachment summary);
    void extrasImageAttachmentsBulkUpdateSignal(OAIImageAttachment summary);
    void extrasImageAttachmentsCreateSignal(OAIImageAttachment summary);
    void extrasImageAttachmentsDeleteSignal();
    void extrasImageAttachmentsListSignal(OAIExtras_image_attachments_list_200_response summary);
    void extrasImageAttachmentsPartialUpdateSignal(OAIImageAttachment summary);
    void extrasImageAttachmentsReadSignal(OAIImageAttachment summary);
    void extrasImageAttachmentsUpdateSignal(OAIImageAttachment summary);
    void extrasJobResultsListSignal(OAIExtras_job_results_list_200_response summary);
    void extrasJobResultsReadSignal(OAIJobResult summary);
    void extrasJournalEntriesBulkDeleteSignal();
    void extrasJournalEntriesBulkPartialUpdateSignal(OAIJournalEntry summary);
    void extrasJournalEntriesBulkUpdateSignal(OAIJournalEntry summary);
    void extrasJournalEntriesCreateSignal(OAIJournalEntry summary);
    void extrasJournalEntriesDeleteSignal();
    void extrasJournalEntriesListSignal(OAIExtras_journal_entries_list_200_response summary);
    void extrasJournalEntriesPartialUpdateSignal(OAIJournalEntry summary);
    void extrasJournalEntriesReadSignal(OAIJournalEntry summary);
    void extrasJournalEntriesUpdateSignal(OAIJournalEntry summary);
    void extrasObjectChangesListSignal(OAIExtras_object_changes_list_200_response summary);
    void extrasObjectChangesReadSignal(OAIObjectChange summary);
    void extrasReportsListSignal();
    void extrasReportsReadSignal();
    void extrasReportsRunSignal();
    void extrasSavedFiltersBulkDeleteSignal();
    void extrasSavedFiltersBulkPartialUpdateSignal(OAISavedFilter summary);
    void extrasSavedFiltersBulkUpdateSignal(OAISavedFilter summary);
    void extrasSavedFiltersCreateSignal(OAISavedFilter summary);
    void extrasSavedFiltersDeleteSignal();
    void extrasSavedFiltersListSignal(OAIExtras_saved_filters_list_200_response summary);
    void extrasSavedFiltersPartialUpdateSignal(OAISavedFilter summary);
    void extrasSavedFiltersReadSignal(OAISavedFilter summary);
    void extrasSavedFiltersUpdateSignal(OAISavedFilter summary);
    void extrasScriptsListSignal();
    void extrasScriptsReadSignal();
    void extrasTagsBulkDeleteSignal();
    void extrasTagsBulkPartialUpdateSignal(OAITag summary);
    void extrasTagsBulkUpdateSignal(OAITag summary);
    void extrasTagsCreateSignal(OAITag summary);
    void extrasTagsDeleteSignal();
    void extrasTagsListSignal(OAIExtras_tags_list_200_response summary);
    void extrasTagsPartialUpdateSignal(OAITag summary);
    void extrasTagsReadSignal(OAITag summary);
    void extrasTagsUpdateSignal(OAITag summary);
    void extrasWebhooksBulkDeleteSignal();
    void extrasWebhooksBulkPartialUpdateSignal(OAIWebhook summary);
    void extrasWebhooksBulkUpdateSignal(OAIWebhook summary);
    void extrasWebhooksCreateSignal(OAIWebhook summary);
    void extrasWebhooksDeleteSignal();
    void extrasWebhooksListSignal(OAIExtras_webhooks_list_200_response summary);
    void extrasWebhooksPartialUpdateSignal(OAIWebhook summary);
    void extrasWebhooksReadSignal(OAIWebhook summary);
    void extrasWebhooksUpdateSignal(OAIWebhook summary);


    void extrasConfigContextsBulkDeleteSignalFull(OAIHttpRequestWorker *worker);
    void extrasConfigContextsBulkPartialUpdateSignalFull(OAIHttpRequestWorker *worker, OAIConfigContext summary);
    void extrasConfigContextsBulkUpdateSignalFull(OAIHttpRequestWorker *worker, OAIConfigContext summary);
    void extrasConfigContextsCreateSignalFull(OAIHttpRequestWorker *worker, OAIConfigContext summary);
    void extrasConfigContextsDeleteSignalFull(OAIHttpRequestWorker *worker);
    void extrasConfigContextsListSignalFull(OAIHttpRequestWorker *worker, OAIExtras_config_contexts_list_200_response summary);
    void extrasConfigContextsPartialUpdateSignalFull(OAIHttpRequestWorker *worker, OAIConfigContext summary);
    void extrasConfigContextsReadSignalFull(OAIHttpRequestWorker *worker, OAIConfigContext summary);
    void extrasConfigContextsUpdateSignalFull(OAIHttpRequestWorker *worker, OAIConfigContext summary);
    void extrasContentTypesListSignalFull(OAIHttpRequestWorker *worker, OAIExtras_content_types_list_200_response summary);
    void extrasContentTypesReadSignalFull(OAIHttpRequestWorker *worker, OAIContentType summary);
    void extrasCustomFieldsBulkDeleteSignalFull(OAIHttpRequestWorker *worker);
    void extrasCustomFieldsBulkPartialUpdateSignalFull(OAIHttpRequestWorker *worker, OAICustomField summary);
    void extrasCustomFieldsBulkUpdateSignalFull(OAIHttpRequestWorker *worker, OAICustomField summary);
    void extrasCustomFieldsCreateSignalFull(OAIHttpRequestWorker *worker, OAICustomField summary);
    void extrasCustomFieldsDeleteSignalFull(OAIHttpRequestWorker *worker);
    void extrasCustomFieldsListSignalFull(OAIHttpRequestWorker *worker, OAIExtras_custom_fields_list_200_response summary);
    void extrasCustomFieldsPartialUpdateSignalFull(OAIHttpRequestWorker *worker, OAICustomField summary);
    void extrasCustomFieldsReadSignalFull(OAIHttpRequestWorker *worker, OAICustomField summary);
    void extrasCustomFieldsUpdateSignalFull(OAIHttpRequestWorker *worker, OAICustomField summary);
    void extrasCustomLinksBulkDeleteSignalFull(OAIHttpRequestWorker *worker);
    void extrasCustomLinksBulkPartialUpdateSignalFull(OAIHttpRequestWorker *worker, OAICustomLink summary);
    void extrasCustomLinksBulkUpdateSignalFull(OAIHttpRequestWorker *worker, OAICustomLink summary);
    void extrasCustomLinksCreateSignalFull(OAIHttpRequestWorker *worker, OAICustomLink summary);
    void extrasCustomLinksDeleteSignalFull(OAIHttpRequestWorker *worker);
    void extrasCustomLinksListSignalFull(OAIHttpRequestWorker *worker, OAIExtras_custom_links_list_200_response summary);
    void extrasCustomLinksPartialUpdateSignalFull(OAIHttpRequestWorker *worker, OAICustomLink summary);
    void extrasCustomLinksReadSignalFull(OAIHttpRequestWorker *worker, OAICustomLink summary);
    void extrasCustomLinksUpdateSignalFull(OAIHttpRequestWorker *worker, OAICustomLink summary);
    void extrasExportTemplatesBulkDeleteSignalFull(OAIHttpRequestWorker *worker);
    void extrasExportTemplatesBulkPartialUpdateSignalFull(OAIHttpRequestWorker *worker, OAIExportTemplate summary);
    void extrasExportTemplatesBulkUpdateSignalFull(OAIHttpRequestWorker *worker, OAIExportTemplate summary);
    void extrasExportTemplatesCreateSignalFull(OAIHttpRequestWorker *worker, OAIExportTemplate summary);
    void extrasExportTemplatesDeleteSignalFull(OAIHttpRequestWorker *worker);
    void extrasExportTemplatesListSignalFull(OAIHttpRequestWorker *worker, OAIExtras_export_templates_list_200_response summary);
    void extrasExportTemplatesPartialUpdateSignalFull(OAIHttpRequestWorker *worker, OAIExportTemplate summary);
    void extrasExportTemplatesReadSignalFull(OAIHttpRequestWorker *worker, OAIExportTemplate summary);
    void extrasExportTemplatesUpdateSignalFull(OAIHttpRequestWorker *worker, OAIExportTemplate summary);
    void extrasImageAttachmentsBulkDeleteSignalFull(OAIHttpRequestWorker *worker);
    void extrasImageAttachmentsBulkPartialUpdateSignalFull(OAIHttpRequestWorker *worker, OAIImageAttachment summary);
    void extrasImageAttachmentsBulkUpdateSignalFull(OAIHttpRequestWorker *worker, OAIImageAttachment summary);
    void extrasImageAttachmentsCreateSignalFull(OAIHttpRequestWorker *worker, OAIImageAttachment summary);
    void extrasImageAttachmentsDeleteSignalFull(OAIHttpRequestWorker *worker);
    void extrasImageAttachmentsListSignalFull(OAIHttpRequestWorker *worker, OAIExtras_image_attachments_list_200_response summary);
    void extrasImageAttachmentsPartialUpdateSignalFull(OAIHttpRequestWorker *worker, OAIImageAttachment summary);
    void extrasImageAttachmentsReadSignalFull(OAIHttpRequestWorker *worker, OAIImageAttachment summary);
    void extrasImageAttachmentsUpdateSignalFull(OAIHttpRequestWorker *worker, OAIImageAttachment summary);
    void extrasJobResultsListSignalFull(OAIHttpRequestWorker *worker, OAIExtras_job_results_list_200_response summary);
    void extrasJobResultsReadSignalFull(OAIHttpRequestWorker *worker, OAIJobResult summary);
    void extrasJournalEntriesBulkDeleteSignalFull(OAIHttpRequestWorker *worker);
    void extrasJournalEntriesBulkPartialUpdateSignalFull(OAIHttpRequestWorker *worker, OAIJournalEntry summary);
    void extrasJournalEntriesBulkUpdateSignalFull(OAIHttpRequestWorker *worker, OAIJournalEntry summary);
    void extrasJournalEntriesCreateSignalFull(OAIHttpRequestWorker *worker, OAIJournalEntry summary);
    void extrasJournalEntriesDeleteSignalFull(OAIHttpRequestWorker *worker);
    void extrasJournalEntriesListSignalFull(OAIHttpRequestWorker *worker, OAIExtras_journal_entries_list_200_response summary);
    void extrasJournalEntriesPartialUpdateSignalFull(OAIHttpRequestWorker *worker, OAIJournalEntry summary);
    void extrasJournalEntriesReadSignalFull(OAIHttpRequestWorker *worker, OAIJournalEntry summary);
    void extrasJournalEntriesUpdateSignalFull(OAIHttpRequestWorker *worker, OAIJournalEntry summary);
    void extrasObjectChangesListSignalFull(OAIHttpRequestWorker *worker, OAIExtras_object_changes_list_200_response summary);
    void extrasObjectChangesReadSignalFull(OAIHttpRequestWorker *worker, OAIObjectChange summary);
    void extrasReportsListSignalFull(OAIHttpRequestWorker *worker);
    void extrasReportsReadSignalFull(OAIHttpRequestWorker *worker);
    void extrasReportsRunSignalFull(OAIHttpRequestWorker *worker);
    void extrasSavedFiltersBulkDeleteSignalFull(OAIHttpRequestWorker *worker);
    void extrasSavedFiltersBulkPartialUpdateSignalFull(OAIHttpRequestWorker *worker, OAISavedFilter summary);
    void extrasSavedFiltersBulkUpdateSignalFull(OAIHttpRequestWorker *worker, OAISavedFilter summary);
    void extrasSavedFiltersCreateSignalFull(OAIHttpRequestWorker *worker, OAISavedFilter summary);
    void extrasSavedFiltersDeleteSignalFull(OAIHttpRequestWorker *worker);
    void extrasSavedFiltersListSignalFull(OAIHttpRequestWorker *worker, OAIExtras_saved_filters_list_200_response summary);
    void extrasSavedFiltersPartialUpdateSignalFull(OAIHttpRequestWorker *worker, OAISavedFilter summary);
    void extrasSavedFiltersReadSignalFull(OAIHttpRequestWorker *worker, OAISavedFilter summary);
    void extrasSavedFiltersUpdateSignalFull(OAIHttpRequestWorker *worker, OAISavedFilter summary);
    void extrasScriptsListSignalFull(OAIHttpRequestWorker *worker);
    void extrasScriptsReadSignalFull(OAIHttpRequestWorker *worker);
    void extrasTagsBulkDeleteSignalFull(OAIHttpRequestWorker *worker);
    void extrasTagsBulkPartialUpdateSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void extrasTagsBulkUpdateSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void extrasTagsCreateSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void extrasTagsDeleteSignalFull(OAIHttpRequestWorker *worker);
    void extrasTagsListSignalFull(OAIHttpRequestWorker *worker, OAIExtras_tags_list_200_response summary);
    void extrasTagsPartialUpdateSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void extrasTagsReadSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void extrasTagsUpdateSignalFull(OAIHttpRequestWorker *worker, OAITag summary);
    void extrasWebhooksBulkDeleteSignalFull(OAIHttpRequestWorker *worker);
    void extrasWebhooksBulkPartialUpdateSignalFull(OAIHttpRequestWorker *worker, OAIWebhook summary);
    void extrasWebhooksBulkUpdateSignalFull(OAIHttpRequestWorker *worker, OAIWebhook summary);
    void extrasWebhooksCreateSignalFull(OAIHttpRequestWorker *worker, OAIWebhook summary);
    void extrasWebhooksDeleteSignalFull(OAIHttpRequestWorker *worker);
    void extrasWebhooksListSignalFull(OAIHttpRequestWorker *worker, OAIExtras_webhooks_list_200_response summary);
    void extrasWebhooksPartialUpdateSignalFull(OAIHttpRequestWorker *worker, OAIWebhook summary);
    void extrasWebhooksReadSignalFull(OAIHttpRequestWorker *worker, OAIWebhook summary);
    void extrasWebhooksUpdateSignalFull(OAIHttpRequestWorker *worker, OAIWebhook summary);

    Q_DECL_DEPRECATED_X("Use extrasConfigContextsBulkDeleteSignalError() instead")
    void extrasConfigContextsBulkDeleteSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsBulkDeleteSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasConfigContextsBulkPartialUpdateSignalError() instead")
    void extrasConfigContextsBulkPartialUpdateSignalE(OAIConfigContext summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsBulkPartialUpdateSignalError(OAIConfigContext summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasConfigContextsBulkUpdateSignalError() instead")
    void extrasConfigContextsBulkUpdateSignalE(OAIConfigContext summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsBulkUpdateSignalError(OAIConfigContext summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasConfigContextsCreateSignalError() instead")
    void extrasConfigContextsCreateSignalE(OAIConfigContext summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsCreateSignalError(OAIConfigContext summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasConfigContextsDeleteSignalError() instead")
    void extrasConfigContextsDeleteSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsDeleteSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasConfigContextsListSignalError() instead")
    void extrasConfigContextsListSignalE(OAIExtras_config_contexts_list_200_response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsListSignalError(OAIExtras_config_contexts_list_200_response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasConfigContextsPartialUpdateSignalError() instead")
    void extrasConfigContextsPartialUpdateSignalE(OAIConfigContext summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsPartialUpdateSignalError(OAIConfigContext summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasConfigContextsReadSignalError() instead")
    void extrasConfigContextsReadSignalE(OAIConfigContext summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsReadSignalError(OAIConfigContext summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasConfigContextsUpdateSignalError() instead")
    void extrasConfigContextsUpdateSignalE(OAIConfigContext summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsUpdateSignalError(OAIConfigContext summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasContentTypesListSignalError() instead")
    void extrasContentTypesListSignalE(OAIExtras_content_types_list_200_response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasContentTypesListSignalError(OAIExtras_content_types_list_200_response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasContentTypesReadSignalError() instead")
    void extrasContentTypesReadSignalE(OAIContentType summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasContentTypesReadSignalError(OAIContentType summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomFieldsBulkDeleteSignalError() instead")
    void extrasCustomFieldsBulkDeleteSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomFieldsBulkDeleteSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomFieldsBulkPartialUpdateSignalError() instead")
    void extrasCustomFieldsBulkPartialUpdateSignalE(OAICustomField summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomFieldsBulkPartialUpdateSignalError(OAICustomField summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomFieldsBulkUpdateSignalError() instead")
    void extrasCustomFieldsBulkUpdateSignalE(OAICustomField summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomFieldsBulkUpdateSignalError(OAICustomField summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomFieldsCreateSignalError() instead")
    void extrasCustomFieldsCreateSignalE(OAICustomField summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomFieldsCreateSignalError(OAICustomField summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomFieldsDeleteSignalError() instead")
    void extrasCustomFieldsDeleteSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomFieldsDeleteSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomFieldsListSignalError() instead")
    void extrasCustomFieldsListSignalE(OAIExtras_custom_fields_list_200_response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomFieldsListSignalError(OAIExtras_custom_fields_list_200_response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomFieldsPartialUpdateSignalError() instead")
    void extrasCustomFieldsPartialUpdateSignalE(OAICustomField summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomFieldsPartialUpdateSignalError(OAICustomField summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomFieldsReadSignalError() instead")
    void extrasCustomFieldsReadSignalE(OAICustomField summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomFieldsReadSignalError(OAICustomField summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomFieldsUpdateSignalError() instead")
    void extrasCustomFieldsUpdateSignalE(OAICustomField summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomFieldsUpdateSignalError(OAICustomField summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomLinksBulkDeleteSignalError() instead")
    void extrasCustomLinksBulkDeleteSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomLinksBulkDeleteSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomLinksBulkPartialUpdateSignalError() instead")
    void extrasCustomLinksBulkPartialUpdateSignalE(OAICustomLink summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomLinksBulkPartialUpdateSignalError(OAICustomLink summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomLinksBulkUpdateSignalError() instead")
    void extrasCustomLinksBulkUpdateSignalE(OAICustomLink summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomLinksBulkUpdateSignalError(OAICustomLink summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomLinksCreateSignalError() instead")
    void extrasCustomLinksCreateSignalE(OAICustomLink summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomLinksCreateSignalError(OAICustomLink summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomLinksDeleteSignalError() instead")
    void extrasCustomLinksDeleteSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomLinksDeleteSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomLinksListSignalError() instead")
    void extrasCustomLinksListSignalE(OAIExtras_custom_links_list_200_response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomLinksListSignalError(OAIExtras_custom_links_list_200_response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomLinksPartialUpdateSignalError() instead")
    void extrasCustomLinksPartialUpdateSignalE(OAICustomLink summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomLinksPartialUpdateSignalError(OAICustomLink summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomLinksReadSignalError() instead")
    void extrasCustomLinksReadSignalE(OAICustomLink summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomLinksReadSignalError(OAICustomLink summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomLinksUpdateSignalError() instead")
    void extrasCustomLinksUpdateSignalE(OAICustomLink summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomLinksUpdateSignalError(OAICustomLink summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesBulkDeleteSignalError() instead")
    void extrasExportTemplatesBulkDeleteSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesBulkDeleteSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesBulkPartialUpdateSignalError() instead")
    void extrasExportTemplatesBulkPartialUpdateSignalE(OAIExportTemplate summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesBulkPartialUpdateSignalError(OAIExportTemplate summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesBulkUpdateSignalError() instead")
    void extrasExportTemplatesBulkUpdateSignalE(OAIExportTemplate summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesBulkUpdateSignalError(OAIExportTemplate summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesCreateSignalError() instead")
    void extrasExportTemplatesCreateSignalE(OAIExportTemplate summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesCreateSignalError(OAIExportTemplate summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesDeleteSignalError() instead")
    void extrasExportTemplatesDeleteSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesDeleteSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesListSignalError() instead")
    void extrasExportTemplatesListSignalE(OAIExtras_export_templates_list_200_response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesListSignalError(OAIExtras_export_templates_list_200_response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesPartialUpdateSignalError() instead")
    void extrasExportTemplatesPartialUpdateSignalE(OAIExportTemplate summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesPartialUpdateSignalError(OAIExportTemplate summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesReadSignalError() instead")
    void extrasExportTemplatesReadSignalE(OAIExportTemplate summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesReadSignalError(OAIExportTemplate summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesUpdateSignalError() instead")
    void extrasExportTemplatesUpdateSignalE(OAIExportTemplate summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesUpdateSignalError(OAIExportTemplate summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsBulkDeleteSignalError() instead")
    void extrasImageAttachmentsBulkDeleteSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsBulkDeleteSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsBulkPartialUpdateSignalError() instead")
    void extrasImageAttachmentsBulkPartialUpdateSignalE(OAIImageAttachment summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsBulkPartialUpdateSignalError(OAIImageAttachment summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsBulkUpdateSignalError() instead")
    void extrasImageAttachmentsBulkUpdateSignalE(OAIImageAttachment summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsBulkUpdateSignalError(OAIImageAttachment summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsCreateSignalError() instead")
    void extrasImageAttachmentsCreateSignalE(OAIImageAttachment summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsCreateSignalError(OAIImageAttachment summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsDeleteSignalError() instead")
    void extrasImageAttachmentsDeleteSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsDeleteSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsListSignalError() instead")
    void extrasImageAttachmentsListSignalE(OAIExtras_image_attachments_list_200_response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsListSignalError(OAIExtras_image_attachments_list_200_response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsPartialUpdateSignalError() instead")
    void extrasImageAttachmentsPartialUpdateSignalE(OAIImageAttachment summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsPartialUpdateSignalError(OAIImageAttachment summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsReadSignalError() instead")
    void extrasImageAttachmentsReadSignalE(OAIImageAttachment summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsReadSignalError(OAIImageAttachment summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsUpdateSignalError() instead")
    void extrasImageAttachmentsUpdateSignalE(OAIImageAttachment summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsUpdateSignalError(OAIImageAttachment summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasJobResultsListSignalError() instead")
    void extrasJobResultsListSignalE(OAIExtras_job_results_list_200_response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasJobResultsListSignalError(OAIExtras_job_results_list_200_response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasJobResultsReadSignalError() instead")
    void extrasJobResultsReadSignalE(OAIJobResult summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasJobResultsReadSignalError(OAIJobResult summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasJournalEntriesBulkDeleteSignalError() instead")
    void extrasJournalEntriesBulkDeleteSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasJournalEntriesBulkDeleteSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasJournalEntriesBulkPartialUpdateSignalError() instead")
    void extrasJournalEntriesBulkPartialUpdateSignalE(OAIJournalEntry summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasJournalEntriesBulkPartialUpdateSignalError(OAIJournalEntry summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasJournalEntriesBulkUpdateSignalError() instead")
    void extrasJournalEntriesBulkUpdateSignalE(OAIJournalEntry summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasJournalEntriesBulkUpdateSignalError(OAIJournalEntry summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasJournalEntriesCreateSignalError() instead")
    void extrasJournalEntriesCreateSignalE(OAIJournalEntry summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasJournalEntriesCreateSignalError(OAIJournalEntry summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasJournalEntriesDeleteSignalError() instead")
    void extrasJournalEntriesDeleteSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasJournalEntriesDeleteSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasJournalEntriesListSignalError() instead")
    void extrasJournalEntriesListSignalE(OAIExtras_journal_entries_list_200_response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasJournalEntriesListSignalError(OAIExtras_journal_entries_list_200_response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasJournalEntriesPartialUpdateSignalError() instead")
    void extrasJournalEntriesPartialUpdateSignalE(OAIJournalEntry summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasJournalEntriesPartialUpdateSignalError(OAIJournalEntry summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasJournalEntriesReadSignalError() instead")
    void extrasJournalEntriesReadSignalE(OAIJournalEntry summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasJournalEntriesReadSignalError(OAIJournalEntry summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasJournalEntriesUpdateSignalError() instead")
    void extrasJournalEntriesUpdateSignalE(OAIJournalEntry summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasJournalEntriesUpdateSignalError(OAIJournalEntry summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasObjectChangesListSignalError() instead")
    void extrasObjectChangesListSignalE(OAIExtras_object_changes_list_200_response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasObjectChangesListSignalError(OAIExtras_object_changes_list_200_response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasObjectChangesReadSignalError() instead")
    void extrasObjectChangesReadSignalE(OAIObjectChange summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasObjectChangesReadSignalError(OAIObjectChange summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasReportsListSignalError() instead")
    void extrasReportsListSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasReportsListSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasReportsReadSignalError() instead")
    void extrasReportsReadSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasReportsReadSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasReportsRunSignalError() instead")
    void extrasReportsRunSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasReportsRunSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasSavedFiltersBulkDeleteSignalError() instead")
    void extrasSavedFiltersBulkDeleteSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasSavedFiltersBulkDeleteSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasSavedFiltersBulkPartialUpdateSignalError() instead")
    void extrasSavedFiltersBulkPartialUpdateSignalE(OAISavedFilter summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasSavedFiltersBulkPartialUpdateSignalError(OAISavedFilter summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasSavedFiltersBulkUpdateSignalError() instead")
    void extrasSavedFiltersBulkUpdateSignalE(OAISavedFilter summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasSavedFiltersBulkUpdateSignalError(OAISavedFilter summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasSavedFiltersCreateSignalError() instead")
    void extrasSavedFiltersCreateSignalE(OAISavedFilter summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasSavedFiltersCreateSignalError(OAISavedFilter summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasSavedFiltersDeleteSignalError() instead")
    void extrasSavedFiltersDeleteSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasSavedFiltersDeleteSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasSavedFiltersListSignalError() instead")
    void extrasSavedFiltersListSignalE(OAIExtras_saved_filters_list_200_response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasSavedFiltersListSignalError(OAIExtras_saved_filters_list_200_response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasSavedFiltersPartialUpdateSignalError() instead")
    void extrasSavedFiltersPartialUpdateSignalE(OAISavedFilter summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasSavedFiltersPartialUpdateSignalError(OAISavedFilter summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasSavedFiltersReadSignalError() instead")
    void extrasSavedFiltersReadSignalE(OAISavedFilter summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasSavedFiltersReadSignalError(OAISavedFilter summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasSavedFiltersUpdateSignalError() instead")
    void extrasSavedFiltersUpdateSignalE(OAISavedFilter summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasSavedFiltersUpdateSignalError(OAISavedFilter summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasScriptsListSignalError() instead")
    void extrasScriptsListSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasScriptsListSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasScriptsReadSignalError() instead")
    void extrasScriptsReadSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasScriptsReadSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsBulkDeleteSignalError() instead")
    void extrasTagsBulkDeleteSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsBulkDeleteSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsBulkPartialUpdateSignalError() instead")
    void extrasTagsBulkPartialUpdateSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsBulkPartialUpdateSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsBulkUpdateSignalError() instead")
    void extrasTagsBulkUpdateSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsBulkUpdateSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsCreateSignalError() instead")
    void extrasTagsCreateSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsCreateSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsDeleteSignalError() instead")
    void extrasTagsDeleteSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsDeleteSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsListSignalError() instead")
    void extrasTagsListSignalE(OAIExtras_tags_list_200_response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsListSignalError(OAIExtras_tags_list_200_response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsPartialUpdateSignalError() instead")
    void extrasTagsPartialUpdateSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsPartialUpdateSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsReadSignalError() instead")
    void extrasTagsReadSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsReadSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsUpdateSignalError() instead")
    void extrasTagsUpdateSignalE(OAITag summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsUpdateSignalError(OAITag summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasWebhooksBulkDeleteSignalError() instead")
    void extrasWebhooksBulkDeleteSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasWebhooksBulkDeleteSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasWebhooksBulkPartialUpdateSignalError() instead")
    void extrasWebhooksBulkPartialUpdateSignalE(OAIWebhook summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasWebhooksBulkPartialUpdateSignalError(OAIWebhook summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasWebhooksBulkUpdateSignalError() instead")
    void extrasWebhooksBulkUpdateSignalE(OAIWebhook summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasWebhooksBulkUpdateSignalError(OAIWebhook summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasWebhooksCreateSignalError() instead")
    void extrasWebhooksCreateSignalE(OAIWebhook summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasWebhooksCreateSignalError(OAIWebhook summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasWebhooksDeleteSignalError() instead")
    void extrasWebhooksDeleteSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void extrasWebhooksDeleteSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasWebhooksListSignalError() instead")
    void extrasWebhooksListSignalE(OAIExtras_webhooks_list_200_response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasWebhooksListSignalError(OAIExtras_webhooks_list_200_response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasWebhooksPartialUpdateSignalError() instead")
    void extrasWebhooksPartialUpdateSignalE(OAIWebhook summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasWebhooksPartialUpdateSignalError(OAIWebhook summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasWebhooksReadSignalError() instead")
    void extrasWebhooksReadSignalE(OAIWebhook summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasWebhooksReadSignalError(OAIWebhook summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasWebhooksUpdateSignalError() instead")
    void extrasWebhooksUpdateSignalE(OAIWebhook summary, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasWebhooksUpdateSignalError(OAIWebhook summary, QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use extrasConfigContextsBulkDeleteSignalErrorFull() instead")
    void extrasConfigContextsBulkDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsBulkDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasConfigContextsBulkPartialUpdateSignalErrorFull() instead")
    void extrasConfigContextsBulkPartialUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsBulkPartialUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasConfigContextsBulkUpdateSignalErrorFull() instead")
    void extrasConfigContextsBulkUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsBulkUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasConfigContextsCreateSignalErrorFull() instead")
    void extrasConfigContextsCreateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsCreateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasConfigContextsDeleteSignalErrorFull() instead")
    void extrasConfigContextsDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasConfigContextsListSignalErrorFull() instead")
    void extrasConfigContextsListSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsListSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasConfigContextsPartialUpdateSignalErrorFull() instead")
    void extrasConfigContextsPartialUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsPartialUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasConfigContextsReadSignalErrorFull() instead")
    void extrasConfigContextsReadSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsReadSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasConfigContextsUpdateSignalErrorFull() instead")
    void extrasConfigContextsUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasConfigContextsUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasContentTypesListSignalErrorFull() instead")
    void extrasContentTypesListSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasContentTypesListSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasContentTypesReadSignalErrorFull() instead")
    void extrasContentTypesReadSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasContentTypesReadSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomFieldsBulkDeleteSignalErrorFull() instead")
    void extrasCustomFieldsBulkDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomFieldsBulkDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomFieldsBulkPartialUpdateSignalErrorFull() instead")
    void extrasCustomFieldsBulkPartialUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomFieldsBulkPartialUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomFieldsBulkUpdateSignalErrorFull() instead")
    void extrasCustomFieldsBulkUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomFieldsBulkUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomFieldsCreateSignalErrorFull() instead")
    void extrasCustomFieldsCreateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomFieldsCreateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomFieldsDeleteSignalErrorFull() instead")
    void extrasCustomFieldsDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomFieldsDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomFieldsListSignalErrorFull() instead")
    void extrasCustomFieldsListSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomFieldsListSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomFieldsPartialUpdateSignalErrorFull() instead")
    void extrasCustomFieldsPartialUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomFieldsPartialUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomFieldsReadSignalErrorFull() instead")
    void extrasCustomFieldsReadSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomFieldsReadSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomFieldsUpdateSignalErrorFull() instead")
    void extrasCustomFieldsUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomFieldsUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomLinksBulkDeleteSignalErrorFull() instead")
    void extrasCustomLinksBulkDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomLinksBulkDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomLinksBulkPartialUpdateSignalErrorFull() instead")
    void extrasCustomLinksBulkPartialUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomLinksBulkPartialUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomLinksBulkUpdateSignalErrorFull() instead")
    void extrasCustomLinksBulkUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomLinksBulkUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomLinksCreateSignalErrorFull() instead")
    void extrasCustomLinksCreateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomLinksCreateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomLinksDeleteSignalErrorFull() instead")
    void extrasCustomLinksDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomLinksDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomLinksListSignalErrorFull() instead")
    void extrasCustomLinksListSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomLinksListSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomLinksPartialUpdateSignalErrorFull() instead")
    void extrasCustomLinksPartialUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomLinksPartialUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomLinksReadSignalErrorFull() instead")
    void extrasCustomLinksReadSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomLinksReadSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasCustomLinksUpdateSignalErrorFull() instead")
    void extrasCustomLinksUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasCustomLinksUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesBulkDeleteSignalErrorFull() instead")
    void extrasExportTemplatesBulkDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesBulkDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesBulkPartialUpdateSignalErrorFull() instead")
    void extrasExportTemplatesBulkPartialUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesBulkPartialUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesBulkUpdateSignalErrorFull() instead")
    void extrasExportTemplatesBulkUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesBulkUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesCreateSignalErrorFull() instead")
    void extrasExportTemplatesCreateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesCreateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesDeleteSignalErrorFull() instead")
    void extrasExportTemplatesDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesListSignalErrorFull() instead")
    void extrasExportTemplatesListSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesListSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesPartialUpdateSignalErrorFull() instead")
    void extrasExportTemplatesPartialUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesPartialUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesReadSignalErrorFull() instead")
    void extrasExportTemplatesReadSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesReadSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasExportTemplatesUpdateSignalErrorFull() instead")
    void extrasExportTemplatesUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasExportTemplatesUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsBulkDeleteSignalErrorFull() instead")
    void extrasImageAttachmentsBulkDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsBulkDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsBulkPartialUpdateSignalErrorFull() instead")
    void extrasImageAttachmentsBulkPartialUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsBulkPartialUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsBulkUpdateSignalErrorFull() instead")
    void extrasImageAttachmentsBulkUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsBulkUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsCreateSignalErrorFull() instead")
    void extrasImageAttachmentsCreateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsCreateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsDeleteSignalErrorFull() instead")
    void extrasImageAttachmentsDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsListSignalErrorFull() instead")
    void extrasImageAttachmentsListSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsListSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsPartialUpdateSignalErrorFull() instead")
    void extrasImageAttachmentsPartialUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsPartialUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsReadSignalErrorFull() instead")
    void extrasImageAttachmentsReadSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsReadSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasImageAttachmentsUpdateSignalErrorFull() instead")
    void extrasImageAttachmentsUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasImageAttachmentsUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasJobResultsListSignalErrorFull() instead")
    void extrasJobResultsListSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasJobResultsListSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasJobResultsReadSignalErrorFull() instead")
    void extrasJobResultsReadSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasJobResultsReadSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasJournalEntriesBulkDeleteSignalErrorFull() instead")
    void extrasJournalEntriesBulkDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasJournalEntriesBulkDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasJournalEntriesBulkPartialUpdateSignalErrorFull() instead")
    void extrasJournalEntriesBulkPartialUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasJournalEntriesBulkPartialUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasJournalEntriesBulkUpdateSignalErrorFull() instead")
    void extrasJournalEntriesBulkUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasJournalEntriesBulkUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasJournalEntriesCreateSignalErrorFull() instead")
    void extrasJournalEntriesCreateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasJournalEntriesCreateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasJournalEntriesDeleteSignalErrorFull() instead")
    void extrasJournalEntriesDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasJournalEntriesDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasJournalEntriesListSignalErrorFull() instead")
    void extrasJournalEntriesListSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasJournalEntriesListSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasJournalEntriesPartialUpdateSignalErrorFull() instead")
    void extrasJournalEntriesPartialUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasJournalEntriesPartialUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasJournalEntriesReadSignalErrorFull() instead")
    void extrasJournalEntriesReadSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasJournalEntriesReadSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasJournalEntriesUpdateSignalErrorFull() instead")
    void extrasJournalEntriesUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasJournalEntriesUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasObjectChangesListSignalErrorFull() instead")
    void extrasObjectChangesListSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasObjectChangesListSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasObjectChangesReadSignalErrorFull() instead")
    void extrasObjectChangesReadSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasObjectChangesReadSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasReportsListSignalErrorFull() instead")
    void extrasReportsListSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasReportsListSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasReportsReadSignalErrorFull() instead")
    void extrasReportsReadSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasReportsReadSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasReportsRunSignalErrorFull() instead")
    void extrasReportsRunSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasReportsRunSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasSavedFiltersBulkDeleteSignalErrorFull() instead")
    void extrasSavedFiltersBulkDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasSavedFiltersBulkDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasSavedFiltersBulkPartialUpdateSignalErrorFull() instead")
    void extrasSavedFiltersBulkPartialUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasSavedFiltersBulkPartialUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasSavedFiltersBulkUpdateSignalErrorFull() instead")
    void extrasSavedFiltersBulkUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasSavedFiltersBulkUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasSavedFiltersCreateSignalErrorFull() instead")
    void extrasSavedFiltersCreateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasSavedFiltersCreateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasSavedFiltersDeleteSignalErrorFull() instead")
    void extrasSavedFiltersDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasSavedFiltersDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasSavedFiltersListSignalErrorFull() instead")
    void extrasSavedFiltersListSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasSavedFiltersListSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasSavedFiltersPartialUpdateSignalErrorFull() instead")
    void extrasSavedFiltersPartialUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasSavedFiltersPartialUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasSavedFiltersReadSignalErrorFull() instead")
    void extrasSavedFiltersReadSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasSavedFiltersReadSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasSavedFiltersUpdateSignalErrorFull() instead")
    void extrasSavedFiltersUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasSavedFiltersUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasScriptsListSignalErrorFull() instead")
    void extrasScriptsListSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasScriptsListSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasScriptsReadSignalErrorFull() instead")
    void extrasScriptsReadSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasScriptsReadSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsBulkDeleteSignalErrorFull() instead")
    void extrasTagsBulkDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsBulkDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsBulkPartialUpdateSignalErrorFull() instead")
    void extrasTagsBulkPartialUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsBulkPartialUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsBulkUpdateSignalErrorFull() instead")
    void extrasTagsBulkUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsBulkUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsCreateSignalErrorFull() instead")
    void extrasTagsCreateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsCreateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsDeleteSignalErrorFull() instead")
    void extrasTagsDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsListSignalErrorFull() instead")
    void extrasTagsListSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsListSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsPartialUpdateSignalErrorFull() instead")
    void extrasTagsPartialUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsPartialUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsReadSignalErrorFull() instead")
    void extrasTagsReadSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsReadSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasTagsUpdateSignalErrorFull() instead")
    void extrasTagsUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasTagsUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasWebhooksBulkDeleteSignalErrorFull() instead")
    void extrasWebhooksBulkDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasWebhooksBulkDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasWebhooksBulkPartialUpdateSignalErrorFull() instead")
    void extrasWebhooksBulkPartialUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasWebhooksBulkPartialUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasWebhooksBulkUpdateSignalErrorFull() instead")
    void extrasWebhooksBulkUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasWebhooksBulkUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasWebhooksCreateSignalErrorFull() instead")
    void extrasWebhooksCreateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasWebhooksCreateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasWebhooksDeleteSignalErrorFull() instead")
    void extrasWebhooksDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasWebhooksDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasWebhooksListSignalErrorFull() instead")
    void extrasWebhooksListSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasWebhooksListSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasWebhooksPartialUpdateSignalErrorFull() instead")
    void extrasWebhooksPartialUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasWebhooksPartialUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasWebhooksReadSignalErrorFull() instead")
    void extrasWebhooksReadSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasWebhooksReadSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use extrasWebhooksUpdateSignalErrorFull() instead")
    void extrasWebhooksUpdateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void extrasWebhooksUpdateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace OpenAPI
#endif
