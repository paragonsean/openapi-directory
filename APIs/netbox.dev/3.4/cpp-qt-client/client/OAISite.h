/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISite.h
 *
 * 
 */

#ifndef OAISite_H
#define OAISite_H

#include <QJsonObject>

#include "OAINestedASN.h"
#include "OAINestedRegion.h"
#include "OAINestedSiteGroup.h"
#include "OAINestedTag.h"
#include "OAINestedTenant.h"
#include "OAIObject.h"
#include "OAIStatus_7.h"
#include <QDateTime>
#include <QList>
#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINestedASN;
class OAINestedSiteGroup;
class OAINestedRegion;
class OAIStatus_7;
class OAINestedTag;
class OAINestedTenant;

class OAISite : public OAIObject {
public:
    OAISite();
    OAISite(QString json);
    ~OAISite() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QSet<OAINestedASN> getAsns() const;
    void setAsns(const QSet<OAINestedASN> &asns);
    bool is_asns_Set() const;
    bool is_asns_Valid() const;

    qint32 getCircuitCount() const;
    void setCircuitCount(const qint32 &circuit_count);
    bool is_circuit_count_Set() const;
    bool is_circuit_count_Valid() const;

    QString getComments() const;
    void setComments(const QString &comments);
    bool is_comments_Set() const;
    bool is_comments_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    OAIObject getCustomFields() const;
    void setCustomFields(const OAIObject &custom_fields);
    bool is_custom_fields_Set() const;
    bool is_custom_fields_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getDeviceCount() const;
    void setDeviceCount(const qint32 &device_count);
    bool is_device_count_Set() const;
    bool is_device_count_Valid() const;

    QString getDisplay() const;
    void setDisplay(const QString &display);
    bool is_display_Set() const;
    bool is_display_Valid() const;

    QString getFacility() const;
    void setFacility(const QString &facility);
    bool is_facility_Set() const;
    bool is_facility_Valid() const;

    OAINestedSiteGroup getGroup() const;
    void setGroup(const OAINestedSiteGroup &group);
    bool is_group_Set() const;
    bool is_group_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    double getLatitude() const;
    void setLatitude(const double &latitude);
    bool is_latitude_Set() const;
    bool is_latitude_Valid() const;

    double getLongitude() const;
    void setLongitude(const double &longitude);
    bool is_longitude_Set() const;
    bool is_longitude_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPhysicalAddress() const;
    void setPhysicalAddress(const QString &physical_address);
    bool is_physical_address_Set() const;
    bool is_physical_address_Valid() const;

    qint32 getPrefixCount() const;
    void setPrefixCount(const qint32 &prefix_count);
    bool is_prefix_count_Set() const;
    bool is_prefix_count_Valid() const;

    qint32 getRackCount() const;
    void setRackCount(const qint32 &rack_count);
    bool is_rack_count_Set() const;
    bool is_rack_count_Valid() const;

    OAINestedRegion getRegion() const;
    void setRegion(const OAINestedRegion &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    QString getShippingAddress() const;
    void setShippingAddress(const QString &shipping_address);
    bool is_shipping_address_Set() const;
    bool is_shipping_address_Valid() const;

    QString getSlug() const;
    void setSlug(const QString &slug);
    bool is_slug_Set() const;
    bool is_slug_Valid() const;

    OAIStatus_7 getStatus() const;
    void setStatus(const OAIStatus_7 &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<OAINestedTag> getTags() const;
    void setTags(const QList<OAINestedTag> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAINestedTenant getTenant() const;
    void setTenant(const OAINestedTenant &tenant);
    bool is_tenant_Set() const;
    bool is_tenant_Valid() const;

    QString getTimeZone() const;
    void setTimeZone(const QString &time_zone);
    bool is_time_zone_Set() const;
    bool is_time_zone_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    qint32 getVirtualmachineCount() const;
    void setVirtualmachineCount(const qint32 &virtualmachine_count);
    bool is_virtualmachine_count_Set() const;
    bool is_virtualmachine_count_Valid() const;

    qint32 getVlanCount() const;
    void setVlanCount(const qint32 &vlan_count);
    bool is_vlan_count_Set() const;
    bool is_vlan_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QSet<OAINestedASN> m_asns;
    bool m_asns_isSet;
    bool m_asns_isValid;

    qint32 m_circuit_count;
    bool m_circuit_count_isSet;
    bool m_circuit_count_isValid;

    QString m_comments;
    bool m_comments_isSet;
    bool m_comments_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    OAIObject m_custom_fields;
    bool m_custom_fields_isSet;
    bool m_custom_fields_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_device_count;
    bool m_device_count_isSet;
    bool m_device_count_isValid;

    QString m_display;
    bool m_display_isSet;
    bool m_display_isValid;

    QString m_facility;
    bool m_facility_isSet;
    bool m_facility_isValid;

    OAINestedSiteGroup m_group;
    bool m_group_isSet;
    bool m_group_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    double m_latitude;
    bool m_latitude_isSet;
    bool m_latitude_isValid;

    double m_longitude;
    bool m_longitude_isSet;
    bool m_longitude_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_physical_address;
    bool m_physical_address_isSet;
    bool m_physical_address_isValid;

    qint32 m_prefix_count;
    bool m_prefix_count_isSet;
    bool m_prefix_count_isValid;

    qint32 m_rack_count;
    bool m_rack_count_isSet;
    bool m_rack_count_isValid;

    OAINestedRegion m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    QString m_shipping_address;
    bool m_shipping_address_isSet;
    bool m_shipping_address_isValid;

    QString m_slug;
    bool m_slug_isSet;
    bool m_slug_isValid;

    OAIStatus_7 m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<OAINestedTag> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAINestedTenant m_tenant;
    bool m_tenant_isSet;
    bool m_tenant_isValid;

    QString m_time_zone;
    bool m_time_zone_isSet;
    bool m_time_zone_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    qint32 m_virtualmachine_count;
    bool m_virtualmachine_count_isSet;
    bool m_virtualmachine_count_isValid;

    qint32 m_vlan_count;
    bool m_vlan_count_isSet;
    bool m_vlan_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISite)

#endif // OAISite_H
