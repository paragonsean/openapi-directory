/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWritableCustomField.h
 *
 * 
 */

#ifndef OAIWritableCustomField_H
#define OAIWritableCustomField_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QDateTime>
#include <QList>
#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWritableCustomField : public OAIObject {
public:
    OAIWritableCustomField();
    OAIWritableCustomField(QString json);
    ~OAIWritableCustomField() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getChoices() const;
    void setChoices(const QList<QString> &choices);
    bool is_choices_Set() const;
    bool is_choices_Valid() const;

    QSet<QString> getContentTypes() const;
    void setContentTypes(const QSet<QString> &content_types);
    bool is_content_types_Set() const;
    bool is_content_types_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QString getDataType() const;
    void setDataType(const QString &data_type);
    bool is_data_type_Set() const;
    bool is_data_type_Valid() const;

    OAIObject getRDefault() const;
    void setRDefault(const OAIObject &r_default);
    bool is_r_default_Set() const;
    bool is_r_default_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplay() const;
    void setDisplay(const QString &display);
    bool is_display_Set() const;
    bool is_display_Valid() const;

    QString getFilterLogic() const;
    void setFilterLogic(const QString &filter_logic);
    bool is_filter_logic_Set() const;
    bool is_filter_logic_Valid() const;

    QString getGroupName() const;
    void setGroupName(const QString &group_name);
    bool is_group_name_Set() const;
    bool is_group_name_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getObjectType() const;
    void setObjectType(const QString &object_type);
    bool is_object_type_Set() const;
    bool is_object_type_Valid() const;

    bool isRequired() const;
    void setRequired(const bool &required);
    bool is_required_Set() const;
    bool is_required_Valid() const;

    qint32 getSearchWeight() const;
    void setSearchWeight(const qint32 &search_weight);
    bool is_search_weight_Set() const;
    bool is_search_weight_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUiVisibility() const;
    void setUiVisibility(const QString &ui_visibility);
    bool is_ui_visibility_Set() const;
    bool is_ui_visibility_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    qint32 getValidationMaximum() const;
    void setValidationMaximum(const qint32 &validation_maximum);
    bool is_validation_maximum_Set() const;
    bool is_validation_maximum_Valid() const;

    qint32 getValidationMinimum() const;
    void setValidationMinimum(const qint32 &validation_minimum);
    bool is_validation_minimum_Set() const;
    bool is_validation_minimum_Valid() const;

    QString getValidationRegex() const;
    void setValidationRegex(const QString &validation_regex);
    bool is_validation_regex_Set() const;
    bool is_validation_regex_Valid() const;

    qint32 getWeight() const;
    void setWeight(const qint32 &weight);
    bool is_weight_Set() const;
    bool is_weight_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_choices;
    bool m_choices_isSet;
    bool m_choices_isValid;

    QSet<QString> m_content_types;
    bool m_content_types_isSet;
    bool m_content_types_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QString m_data_type;
    bool m_data_type_isSet;
    bool m_data_type_isValid;

    OAIObject m_r_default;
    bool m_r_default_isSet;
    bool m_r_default_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display;
    bool m_display_isSet;
    bool m_display_isValid;

    QString m_filter_logic;
    bool m_filter_logic_isSet;
    bool m_filter_logic_isValid;

    QString m_group_name;
    bool m_group_name_isSet;
    bool m_group_name_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_object_type;
    bool m_object_type_isSet;
    bool m_object_type_isValid;

    bool m_required;
    bool m_required_isSet;
    bool m_required_isValid;

    qint32 m_search_weight;
    bool m_search_weight_isSet;
    bool m_search_weight_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_ui_visibility;
    bool m_ui_visibility_isSet;
    bool m_ui_visibility_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    qint32 m_validation_maximum;
    bool m_validation_maximum_isSet;
    bool m_validation_maximum_isValid;

    qint32 m_validation_minimum;
    bool m_validation_minimum_isSet;
    bool m_validation_minimum_isValid;

    QString m_validation_regex;
    bool m_validation_regex_isSet;
    bool m_validation_regex_isValid;

    qint32 m_weight;
    bool m_weight_isSet;
    bool m_weight_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWritableCustomField)

#endif // OAIWritableCustomField_H
