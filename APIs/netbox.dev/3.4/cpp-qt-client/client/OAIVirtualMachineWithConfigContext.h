/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVirtualMachineWithConfigContext.h
 *
 * 
 */

#ifndef OAIVirtualMachineWithConfigContext_H
#define OAIVirtualMachineWithConfigContext_H

#include <QJsonObject>

#include "OAINestedCluster.h"
#include "OAINestedDevice.h"
#include "OAINestedDeviceRole.h"
#include "OAINestedIPAddress.h"
#include "OAINestedPlatform.h"
#include "OAINestedSite.h"
#include "OAINestedTag.h"
#include "OAINestedTenant.h"
#include "OAIObject.h"
#include "OAIStatus_8.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINestedCluster;
class OAINestedDevice;
class OAINestedPlatform;
class OAINestedIPAddress;
class OAINestedDeviceRole;
class OAINestedSite;
class OAIStatus_8;
class OAINestedTag;
class OAINestedTenant;

class OAIVirtualMachineWithConfigContext : public OAIObject {
public:
    OAIVirtualMachineWithConfigContext();
    OAIVirtualMachineWithConfigContext(QString json);
    ~OAIVirtualMachineWithConfigContext() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAINestedCluster getCluster() const;
    void setCluster(const OAINestedCluster &cluster);
    bool is_cluster_Set() const;
    bool is_cluster_Valid() const;

    QString getComments() const;
    void setComments(const QString &comments);
    bool is_comments_Set() const;
    bool is_comments_Valid() const;

    OAIObject getConfigContext() const;
    void setConfigContext(const OAIObject &config_context);
    bool is_config_context_Set() const;
    bool is_config_context_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    OAIObject getCustomFields() const;
    void setCustomFields(const OAIObject &custom_fields);
    bool is_custom_fields_Set() const;
    bool is_custom_fields_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAINestedDevice getDevice() const;
    void setDevice(const OAINestedDevice &device);
    bool is_device_Set() const;
    bool is_device_Valid() const;

    qint32 getDisk() const;
    void setDisk(const qint32 &disk);
    bool is_disk_Set() const;
    bool is_disk_Valid() const;

    QString getDisplay() const;
    void setDisplay(const QString &display);
    bool is_display_Set() const;
    bool is_display_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    OAIObject getLocalContextData() const;
    void setLocalContextData(const OAIObject &local_context_data);
    bool is_local_context_data_Set() const;
    bool is_local_context_data_Valid() const;

    qint32 getMemory() const;
    void setMemory(const qint32 &memory);
    bool is_memory_Set() const;
    bool is_memory_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAINestedPlatform getPlatform() const;
    void setPlatform(const OAINestedPlatform &platform);
    bool is_platform_Set() const;
    bool is_platform_Valid() const;

    OAINestedIPAddress getPrimaryIp() const;
    void setPrimaryIp(const OAINestedIPAddress &primary_ip);
    bool is_primary_ip_Set() const;
    bool is_primary_ip_Valid() const;

    OAINestedIPAddress getPrimaryIp4() const;
    void setPrimaryIp4(const OAINestedIPAddress &primary_ip4);
    bool is_primary_ip4_Set() const;
    bool is_primary_ip4_Valid() const;

    OAINestedIPAddress getPrimaryIp6() const;
    void setPrimaryIp6(const OAINestedIPAddress &primary_ip6);
    bool is_primary_ip6_Set() const;
    bool is_primary_ip6_Valid() const;

    OAINestedDeviceRole getRole() const;
    void setRole(const OAINestedDeviceRole &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    OAINestedSite getSite() const;
    void setSite(const OAINestedSite &site);
    bool is_site_Set() const;
    bool is_site_Valid() const;

    OAIStatus_8 getStatus() const;
    void setStatus(const OAIStatus_8 &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<OAINestedTag> getTags() const;
    void setTags(const QList<OAINestedTag> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAINestedTenant getTenant() const;
    void setTenant(const OAINestedTenant &tenant);
    bool is_tenant_Set() const;
    bool is_tenant_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    double getVcpus() const;
    void setVcpus(const double &vcpus);
    bool is_vcpus_Set() const;
    bool is_vcpus_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAINestedCluster m_cluster;
    bool m_cluster_isSet;
    bool m_cluster_isValid;

    QString m_comments;
    bool m_comments_isSet;
    bool m_comments_isValid;

    OAIObject m_config_context;
    bool m_config_context_isSet;
    bool m_config_context_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    OAIObject m_custom_fields;
    bool m_custom_fields_isSet;
    bool m_custom_fields_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAINestedDevice m_device;
    bool m_device_isSet;
    bool m_device_isValid;

    qint32 m_disk;
    bool m_disk_isSet;
    bool m_disk_isValid;

    QString m_display;
    bool m_display_isSet;
    bool m_display_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    OAIObject m_local_context_data;
    bool m_local_context_data_isSet;
    bool m_local_context_data_isValid;

    qint32 m_memory;
    bool m_memory_isSet;
    bool m_memory_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAINestedPlatform m_platform;
    bool m_platform_isSet;
    bool m_platform_isValid;

    OAINestedIPAddress m_primary_ip;
    bool m_primary_ip_isSet;
    bool m_primary_ip_isValid;

    OAINestedIPAddress m_primary_ip4;
    bool m_primary_ip4_isSet;
    bool m_primary_ip4_isValid;

    OAINestedIPAddress m_primary_ip6;
    bool m_primary_ip6_isSet;
    bool m_primary_ip6_isValid;

    OAINestedDeviceRole m_role;
    bool m_role_isSet;
    bool m_role_isValid;

    OAINestedSite m_site;
    bool m_site_isSet;
    bool m_site_isValid;

    OAIStatus_8 m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<OAINestedTag> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAINestedTenant m_tenant;
    bool m_tenant_isSet;
    bool m_tenant_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    double m_vcpus;
    bool m_vcpus_isSet;
    bool m_vcpus_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVirtualMachineWithConfigContext)

#endif // OAIVirtualMachineWithConfigContext_H
