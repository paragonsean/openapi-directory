/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWritablePowerPortTemplate.h
 *
 * 
 */

#ifndef OAIWritablePowerPortTemplate_H
#define OAIWritablePowerPortTemplate_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWritablePowerPortTemplate : public OAIObject {
public:
    OAIWritablePowerPortTemplate();
    OAIWritablePowerPortTemplate(QString json);
    ~OAIWritablePowerPortTemplate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAllocatedDraw() const;
    void setAllocatedDraw(const qint32 &allocated_draw);
    bool is_allocated_draw_Set() const;
    bool is_allocated_draw_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getDeviceType() const;
    void setDeviceType(const qint32 &device_type);
    bool is_device_type_Set() const;
    bool is_device_type_Valid() const;

    QString getDisplay() const;
    void setDisplay(const QString &display);
    bool is_display_Set() const;
    bool is_display_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    qint32 getMaximumDraw() const;
    void setMaximumDraw(const qint32 &maximum_draw);
    bool is_maximum_draw_Set() const;
    bool is_maximum_draw_Valid() const;

    qint32 getModuleType() const;
    void setModuleType(const qint32 &module_type);
    bool is_module_type_Set() const;
    bool is_module_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_allocated_draw;
    bool m_allocated_draw_isSet;
    bool m_allocated_draw_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_device_type;
    bool m_device_type_isSet;
    bool m_device_type_isValid;

    QString m_display;
    bool m_display_isSet;
    bool m_display_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    qint32 m_maximum_draw;
    bool m_maximum_draw_isSet;
    bool m_maximum_draw_isValid;

    qint32 m_module_type;
    bool m_module_type_isSet;
    bool m_module_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWritablePowerPortTemplate)

#endif // OAIWritablePowerPortTemplate_H
