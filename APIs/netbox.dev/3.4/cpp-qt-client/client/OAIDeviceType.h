/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeviceType.h
 *
 * 
 */

#ifndef OAIDeviceType_H
#define OAIDeviceType_H

#include <QJsonObject>

#include "OAIAirflow.h"
#include "OAINestedManufacturer.h"
#include "OAINestedTag.h"
#include "OAIObject.h"
#include "OAISubdevice_role.h"
#include "OAIWeight_unit.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAirflow;
class OAINestedManufacturer;
class OAISubdevice_role;
class OAINestedTag;
class OAIWeight_unit;

class OAIDeviceType : public OAIObject {
public:
    OAIDeviceType();
    OAIDeviceType(QString json);
    ~OAIDeviceType() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAirflow getAirflow() const;
    void setAirflow(const OAIAirflow &airflow);
    bool is_airflow_Set() const;
    bool is_airflow_Valid() const;

    QString getComments() const;
    void setComments(const QString &comments);
    bool is_comments_Set() const;
    bool is_comments_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    OAIObject getCustomFields() const;
    void setCustomFields(const OAIObject &custom_fields);
    bool is_custom_fields_Set() const;
    bool is_custom_fields_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getDeviceCount() const;
    void setDeviceCount(const qint32 &device_count);
    bool is_device_count_Set() const;
    bool is_device_count_Valid() const;

    QString getDisplay() const;
    void setDisplay(const QString &display);
    bool is_display_Set() const;
    bool is_display_Valid() const;

    QString getFrontImage() const;
    void setFrontImage(const QString &front_image);
    bool is_front_image_Set() const;
    bool is_front_image_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsFullDepth() const;
    void setIsFullDepth(const bool &is_full_depth);
    bool is_is_full_depth_Set() const;
    bool is_is_full_depth_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    OAINestedManufacturer getManufacturer() const;
    void setManufacturer(const OAINestedManufacturer &manufacturer);
    bool is_manufacturer_Set() const;
    bool is_manufacturer_Valid() const;

    QString getModel() const;
    void setModel(const QString &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    QString getPartNumber() const;
    void setPartNumber(const QString &part_number);
    bool is_part_number_Set() const;
    bool is_part_number_Valid() const;

    QString getRearImage() const;
    void setRearImage(const QString &rear_image);
    bool is_rear_image_Set() const;
    bool is_rear_image_Valid() const;

    QString getSlug() const;
    void setSlug(const QString &slug);
    bool is_slug_Set() const;
    bool is_slug_Valid() const;

    OAISubdevice_role getSubdeviceRole() const;
    void setSubdeviceRole(const OAISubdevice_role &subdevice_role);
    bool is_subdevice_role_Set() const;
    bool is_subdevice_role_Valid() const;

    QList<OAINestedTag> getTags() const;
    void setTags(const QList<OAINestedTag> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    double getUHeight() const;
    void setUHeight(const double &u_height);
    bool is_u_height_Set() const;
    bool is_u_height_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    double getWeight() const;
    void setWeight(const double &weight);
    bool is_weight_Set() const;
    bool is_weight_Valid() const;

    OAIWeight_unit getWeightUnit() const;
    void setWeightUnit(const OAIWeight_unit &weight_unit);
    bool is_weight_unit_Set() const;
    bool is_weight_unit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAirflow m_airflow;
    bool m_airflow_isSet;
    bool m_airflow_isValid;

    QString m_comments;
    bool m_comments_isSet;
    bool m_comments_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    OAIObject m_custom_fields;
    bool m_custom_fields_isSet;
    bool m_custom_fields_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_device_count;
    bool m_device_count_isSet;
    bool m_device_count_isValid;

    QString m_display;
    bool m_display_isSet;
    bool m_display_isValid;

    QString m_front_image;
    bool m_front_image_isSet;
    bool m_front_image_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_full_depth;
    bool m_is_full_depth_isSet;
    bool m_is_full_depth_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    OAINestedManufacturer m_manufacturer;
    bool m_manufacturer_isSet;
    bool m_manufacturer_isValid;

    QString m_model;
    bool m_model_isSet;
    bool m_model_isValid;

    QString m_part_number;
    bool m_part_number_isSet;
    bool m_part_number_isValid;

    QString m_rear_image;
    bool m_rear_image_isSet;
    bool m_rear_image_isValid;

    QString m_slug;
    bool m_slug_isSet;
    bool m_slug_isValid;

    OAISubdevice_role m_subdevice_role;
    bool m_subdevice_role_isSet;
    bool m_subdevice_role_isValid;

    QList<OAINestedTag> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    double m_u_height;
    bool m_u_height_isSet;
    bool m_u_height_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    double m_weight;
    bool m_weight_isSet;
    bool m_weight_isValid;

    OAIWeight_unit m_weight_unit;
    bool m_weight_unit_isSet;
    bool m_weight_unit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeviceType)

#endif // OAIDeviceType_H
