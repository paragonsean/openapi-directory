/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIToken.h
 *
 * 
 */

#ifndef OAIToken_H
#define OAIToken_H

#include <QJsonObject>

#include "OAINestedUser.h"
#include "OAIObject.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINestedUser;

class OAIToken : public OAIObject {
public:
    OAIToken();
    OAIToken(QString json);
    ~OAIToken() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIObject> getAllowedIps() const;
    void setAllowedIps(const QList<OAIObject> &allowed_ips);
    bool is_allowed_ips_Set() const;
    bool is_allowed_ips_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplay() const;
    void setDisplay(const QString &display);
    bool is_display_Set() const;
    bool is_display_Valid() const;

    QDateTime getExpires() const;
    void setExpires(const QDateTime &expires);
    bool is_expires_Set() const;
    bool is_expires_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getKey() const;
    void setKey(const QString &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    QDateTime getLastUsed() const;
    void setLastUsed(const QDateTime &last_used);
    bool is_last_used_Set() const;
    bool is_last_used_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    OAINestedUser getUser() const;
    void setUser(const OAINestedUser &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    bool isWriteEnabled() const;
    void setWriteEnabled(const bool &write_enabled);
    bool is_write_enabled_Set() const;
    bool is_write_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIObject> m_allowed_ips;
    bool m_allowed_ips_isSet;
    bool m_allowed_ips_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display;
    bool m_display_isSet;
    bool m_display_isValid;

    QDateTime m_expires;
    bool m_expires_isSet;
    bool m_expires_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    QDateTime m_last_used;
    bool m_last_used_isSet;
    bool m_last_used_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    OAINestedUser m_user;
    bool m_user_isSet;
    bool m_user_isValid;

    bool m_write_enabled;
    bool m_write_enabled_isSet;
    bool m_write_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIToken)

#endif // OAIToken_H
