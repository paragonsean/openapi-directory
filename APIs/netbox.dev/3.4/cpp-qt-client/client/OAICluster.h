/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICluster.h
 *
 * 
 */

#ifndef OAICluster_H
#define OAICluster_H

#include <QJsonObject>

#include "OAINestedClusterGroup.h"
#include "OAINestedClusterType.h"
#include "OAINestedSite.h"
#include "OAINestedTag.h"
#include "OAINestedTenant.h"
#include "OAIObject.h"
#include "OAIStatus_2.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINestedClusterGroup;
class OAINestedSite;
class OAIStatus_2;
class OAINestedTag;
class OAINestedTenant;
class OAINestedClusterType;

class OAICluster : public OAIObject {
public:
    OAICluster();
    OAICluster(QString json);
    ~OAICluster() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getComments() const;
    void setComments(const QString &comments);
    bool is_comments_Set() const;
    bool is_comments_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    OAIObject getCustomFields() const;
    void setCustomFields(const OAIObject &custom_fields);
    bool is_custom_fields_Set() const;
    bool is_custom_fields_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getDeviceCount() const;
    void setDeviceCount(const qint32 &device_count);
    bool is_device_count_Set() const;
    bool is_device_count_Valid() const;

    QString getDisplay() const;
    void setDisplay(const QString &display);
    bool is_display_Set() const;
    bool is_display_Valid() const;

    OAINestedClusterGroup getGroup() const;
    void setGroup(const OAINestedClusterGroup &group);
    bool is_group_Set() const;
    bool is_group_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAINestedSite getSite() const;
    void setSite(const OAINestedSite &site);
    bool is_site_Set() const;
    bool is_site_Valid() const;

    OAIStatus_2 getStatus() const;
    void setStatus(const OAIStatus_2 &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<OAINestedTag> getTags() const;
    void setTags(const QList<OAINestedTag> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAINestedTenant getTenant() const;
    void setTenant(const OAINestedTenant &tenant);
    bool is_tenant_Set() const;
    bool is_tenant_Valid() const;

    OAINestedClusterType getType() const;
    void setType(const OAINestedClusterType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    qint32 getVirtualmachineCount() const;
    void setVirtualmachineCount(const qint32 &virtualmachine_count);
    bool is_virtualmachine_count_Set() const;
    bool is_virtualmachine_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_comments;
    bool m_comments_isSet;
    bool m_comments_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    OAIObject m_custom_fields;
    bool m_custom_fields_isSet;
    bool m_custom_fields_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_device_count;
    bool m_device_count_isSet;
    bool m_device_count_isValid;

    QString m_display;
    bool m_display_isSet;
    bool m_display_isValid;

    OAINestedClusterGroup m_group;
    bool m_group_isSet;
    bool m_group_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAINestedSite m_site;
    bool m_site_isSet;
    bool m_site_isValid;

    OAIStatus_2 m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<OAINestedTag> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAINestedTenant m_tenant;
    bool m_tenant_isSet;
    bool m_tenant_isValid;

    OAINestedClusterType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    qint32 m_virtualmachine_count;
    bool m_virtualmachine_count_isSet;
    bool m_virtualmachine_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICluster)

#endif // OAICluster_H
