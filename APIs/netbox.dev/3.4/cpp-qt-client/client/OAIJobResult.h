/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJobResult.h
 *
 * 
 */

#ifndef OAIJobResult_H
#define OAIJobResult_H

#include <QJsonObject>

#include "OAINestedUser.h"
#include "OAIObject.h"
#include "OAIStatus_6.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStatus_6;
class OAINestedUser;

class OAIJobResult : public OAIObject {
public:
    OAIJobResult();
    OAIJobResult(QString json);
    ~OAIJobResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCompleted() const;
    void setCompleted(const QDateTime &completed);
    bool is_completed_Set() const;
    bool is_completed_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    OAIObject getData() const;
    void setData(const OAIObject &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    QString getDisplay() const;
    void setDisplay(const QString &display);
    bool is_display_Set() const;
    bool is_display_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getInterval() const;
    void setInterval(const qint32 &interval);
    bool is_interval_Set() const;
    bool is_interval_Valid() const;

    QString getJobId() const;
    void setJobId(const QString &job_id);
    bool is_job_id_Set() const;
    bool is_job_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getObjType() const;
    void setObjType(const QString &obj_type);
    bool is_obj_type_Set() const;
    bool is_obj_type_Valid() const;

    QDateTime getScheduled() const;
    void setScheduled(const QDateTime &scheduled);
    bool is_scheduled_Set() const;
    bool is_scheduled_Valid() const;

    QDateTime getStarted() const;
    void setStarted(const QDateTime &started);
    bool is_started_Set() const;
    bool is_started_Valid() const;

    OAIStatus_6 getStatus() const;
    void setStatus(const OAIStatus_6 &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    OAINestedUser getUser() const;
    void setUser(const OAINestedUser &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_completed;
    bool m_completed_isSet;
    bool m_completed_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    OAIObject m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    QString m_display;
    bool m_display_isSet;
    bool m_display_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_interval;
    bool m_interval_isSet;
    bool m_interval_isValid;

    QString m_job_id;
    bool m_job_id_isSet;
    bool m_job_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_obj_type;
    bool m_obj_type_isSet;
    bool m_obj_type_isValid;

    QDateTime m_scheduled;
    bool m_scheduled_isSet;
    bool m_scheduled_isValid;

    QDateTime m_started;
    bool m_started_isSet;
    bool m_started_isValid;

    OAIStatus_6 m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    OAINestedUser m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJobResult)

#endif // OAIJobResult_H
