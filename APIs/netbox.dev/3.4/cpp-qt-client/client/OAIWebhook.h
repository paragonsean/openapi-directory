/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWebhook.h
 *
 * 
 */

#ifndef OAIWebhook_H
#define OAIWebhook_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QDateTime>
#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWebhook : public OAIObject {
public:
    OAIWebhook();
    OAIWebhook(QString json);
    ~OAIWebhook() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdditionalHeaders() const;
    void setAdditionalHeaders(const QString &additional_headers);
    bool is_additional_headers_Set() const;
    bool is_additional_headers_Valid() const;

    QString getBodyTemplate() const;
    void setBodyTemplate(const QString &body_template);
    bool is_body_template_Set() const;
    bool is_body_template_Valid() const;

    QString getCaFilePath() const;
    void setCaFilePath(const QString &ca_file_path);
    bool is_ca_file_path_Set() const;
    bool is_ca_file_path_Valid() const;

    OAIObject getConditions() const;
    void setConditions(const OAIObject &conditions);
    bool is_conditions_Set() const;
    bool is_conditions_Valid() const;

    QSet<QString> getContentTypes() const;
    void setContentTypes(const QSet<QString> &content_types);
    bool is_content_types_Set() const;
    bool is_content_types_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QString getDisplay() const;
    void setDisplay(const QString &display);
    bool is_display_Set() const;
    bool is_display_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QString getHttpContentType() const;
    void setHttpContentType(const QString &http_content_type);
    bool is_http_content_type_Set() const;
    bool is_http_content_type_Valid() const;

    QString getHttpMethod() const;
    void setHttpMethod(const QString &http_method);
    bool is_http_method_Set() const;
    bool is_http_method_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPayloadUrl() const;
    void setPayloadUrl(const QString &payload_url);
    bool is_payload_url_Set() const;
    bool is_payload_url_Valid() const;

    QString getSecret() const;
    void setSecret(const QString &secret);
    bool is_secret_Set() const;
    bool is_secret_Valid() const;

    bool isSslVerification() const;
    void setSslVerification(const bool &ssl_verification);
    bool is_ssl_verification_Set() const;
    bool is_ssl_verification_Valid() const;

    bool isTypeCreate() const;
    void setTypeCreate(const bool &type_create);
    bool is_type_create_Set() const;
    bool is_type_create_Valid() const;

    bool isTypeDelete() const;
    void setTypeDelete(const bool &type_delete);
    bool is_type_delete_Set() const;
    bool is_type_delete_Valid() const;

    bool isTypeUpdate() const;
    void setTypeUpdate(const bool &type_update);
    bool is_type_update_Set() const;
    bool is_type_update_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_additional_headers;
    bool m_additional_headers_isSet;
    bool m_additional_headers_isValid;

    QString m_body_template;
    bool m_body_template_isSet;
    bool m_body_template_isValid;

    QString m_ca_file_path;
    bool m_ca_file_path_isSet;
    bool m_ca_file_path_isValid;

    OAIObject m_conditions;
    bool m_conditions_isSet;
    bool m_conditions_isValid;

    QSet<QString> m_content_types;
    bool m_content_types_isSet;
    bool m_content_types_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QString m_display;
    bool m_display_isSet;
    bool m_display_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QString m_http_content_type;
    bool m_http_content_type_isSet;
    bool m_http_content_type_isValid;

    QString m_http_method;
    bool m_http_method_isSet;
    bool m_http_method_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_payload_url;
    bool m_payload_url_isSet;
    bool m_payload_url_isValid;

    QString m_secret;
    bool m_secret_isSet;
    bool m_secret_isValid;

    bool m_ssl_verification;
    bool m_ssl_verification_isSet;
    bool m_ssl_verification_isValid;

    bool m_type_create;
    bool m_type_create_isSet;
    bool m_type_create_isValid;

    bool m_type_delete;
    bool m_type_delete_isSet;
    bool m_type_delete_isValid;

    bool m_type_update;
    bool m_type_update_isSet;
    bool m_type_update_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWebhook)

#endif // OAIWebhook_H
