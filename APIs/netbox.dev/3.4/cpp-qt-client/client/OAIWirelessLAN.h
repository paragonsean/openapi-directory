/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWirelessLAN.h
 *
 * 
 */

#ifndef OAIWirelessLAN_H
#define OAIWirelessLAN_H

#include <QJsonObject>

#include "OAIAuth_cipher.h"
#include "OAIAuth_type.h"
#include "OAINestedTag.h"
#include "OAINestedTenant.h"
#include "OAINestedVLAN.h"
#include "OAINestedWirelessLANGroup.h"
#include "OAIObject.h"
#include "OAIStatus_12.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAuth_cipher;
class OAIAuth_type;
class OAINestedWirelessLANGroup;
class OAIStatus_12;
class OAINestedTag;
class OAINestedTenant;
class OAINestedVLAN;

class OAIWirelessLAN : public OAIObject {
public:
    OAIWirelessLAN();
    OAIWirelessLAN(QString json);
    ~OAIWirelessLAN() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAuth_cipher getAuthCipher() const;
    void setAuthCipher(const OAIAuth_cipher &auth_cipher);
    bool is_auth_cipher_Set() const;
    bool is_auth_cipher_Valid() const;

    QString getAuthPsk() const;
    void setAuthPsk(const QString &auth_psk);
    bool is_auth_psk_Set() const;
    bool is_auth_psk_Valid() const;

    OAIAuth_type getAuthType() const;
    void setAuthType(const OAIAuth_type &auth_type);
    bool is_auth_type_Set() const;
    bool is_auth_type_Valid() const;

    QString getComments() const;
    void setComments(const QString &comments);
    bool is_comments_Set() const;
    bool is_comments_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    OAIObject getCustomFields() const;
    void setCustomFields(const OAIObject &custom_fields);
    bool is_custom_fields_Set() const;
    bool is_custom_fields_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplay() const;
    void setDisplay(const QString &display);
    bool is_display_Set() const;
    bool is_display_Valid() const;

    OAINestedWirelessLANGroup getGroup() const;
    void setGroup(const OAINestedWirelessLANGroup &group);
    bool is_group_Set() const;
    bool is_group_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    QString getSsid() const;
    void setSsid(const QString &ssid);
    bool is_ssid_Set() const;
    bool is_ssid_Valid() const;

    OAIStatus_12 getStatus() const;
    void setStatus(const OAIStatus_12 &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<OAINestedTag> getTags() const;
    void setTags(const QList<OAINestedTag> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAINestedTenant getTenant() const;
    void setTenant(const OAINestedTenant &tenant);
    bool is_tenant_Set() const;
    bool is_tenant_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    OAINestedVLAN getVlan() const;
    void setVlan(const OAINestedVLAN &vlan);
    bool is_vlan_Set() const;
    bool is_vlan_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAuth_cipher m_auth_cipher;
    bool m_auth_cipher_isSet;
    bool m_auth_cipher_isValid;

    QString m_auth_psk;
    bool m_auth_psk_isSet;
    bool m_auth_psk_isValid;

    OAIAuth_type m_auth_type;
    bool m_auth_type_isSet;
    bool m_auth_type_isValid;

    QString m_comments;
    bool m_comments_isSet;
    bool m_comments_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    OAIObject m_custom_fields;
    bool m_custom_fields_isSet;
    bool m_custom_fields_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display;
    bool m_display_isSet;
    bool m_display_isValid;

    OAINestedWirelessLANGroup m_group;
    bool m_group_isSet;
    bool m_group_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    QString m_ssid;
    bool m_ssid_isSet;
    bool m_ssid_isValid;

    OAIStatus_12 m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<OAINestedTag> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAINestedTenant m_tenant;
    bool m_tenant_isSet;
    bool m_tenant_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    OAINestedVLAN m_vlan;
    bool m_vlan_isSet;
    bool m_vlan_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWirelessLAN)

#endif // OAIWirelessLAN_H
