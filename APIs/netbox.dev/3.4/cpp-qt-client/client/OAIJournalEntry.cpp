/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJournalEntry.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJournalEntry::OAIJournalEntry(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJournalEntry::OAIJournalEntry() {
    this->initializeModel();
}

OAIJournalEntry::~OAIJournalEntry() {}

void OAIJournalEntry::initializeModel() {

    m_assigned_object_isSet = false;
    m_assigned_object_isValid = false;

    m_assigned_object_id_isSet = false;
    m_assigned_object_id_isValid = false;

    m_assigned_object_type_isSet = false;
    m_assigned_object_type_isValid = false;

    m_comments_isSet = false;
    m_comments_isValid = false;

    m_created_isSet = false;
    m_created_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_display_isSet = false;
    m_display_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_last_updated_isSet = false;
    m_last_updated_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIJournalEntry::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJournalEntry::fromJsonObject(QJsonObject json) {

    m_assigned_object_isValid = ::OpenAPI::fromJsonValue(m_assigned_object, json[QString("assigned_object")]);
    m_assigned_object_isSet = !json[QString("assigned_object")].isNull() && m_assigned_object_isValid;

    m_assigned_object_id_isValid = ::OpenAPI::fromJsonValue(m_assigned_object_id, json[QString("assigned_object_id")]);
    m_assigned_object_id_isSet = !json[QString("assigned_object_id")].isNull() && m_assigned_object_id_isValid;

    m_assigned_object_type_isValid = ::OpenAPI::fromJsonValue(m_assigned_object_type, json[QString("assigned_object_type")]);
    m_assigned_object_type_isSet = !json[QString("assigned_object_type")].isNull() && m_assigned_object_type_isValid;

    m_comments_isValid = ::OpenAPI::fromJsonValue(m_comments, json[QString("comments")]);
    m_comments_isSet = !json[QString("comments")].isNull() && m_comments_isValid;

    m_created_isValid = ::OpenAPI::fromJsonValue(m_created, json[QString("created")]);
    m_created_isSet = !json[QString("created")].isNull() && m_created_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("created_by")]);
    m_created_by_isSet = !json[QString("created_by")].isNull() && m_created_by_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_display_isValid = ::OpenAPI::fromJsonValue(m_display, json[QString("display")]);
    m_display_isSet = !json[QString("display")].isNull() && m_display_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_last_updated_isValid = ::OpenAPI::fromJsonValue(m_last_updated, json[QString("last_updated")]);
    m_last_updated_isSet = !json[QString("last_updated")].isNull() && m_last_updated_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIJournalEntry::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJournalEntry::asJsonObject() const {
    QJsonObject obj;
    if (m_assigned_object_isSet) {
        obj.insert(QString("assigned_object"), ::OpenAPI::toJsonValue(m_assigned_object));
    }
    if (m_assigned_object_id_isSet) {
        obj.insert(QString("assigned_object_id"), ::OpenAPI::toJsonValue(m_assigned_object_id));
    }
    if (m_assigned_object_type_isSet) {
        obj.insert(QString("assigned_object_type"), ::OpenAPI::toJsonValue(m_assigned_object_type));
    }
    if (m_comments_isSet) {
        obj.insert(QString("comments"), ::OpenAPI::toJsonValue(m_comments));
    }
    if (m_created_isSet) {
        obj.insert(QString("created"), ::OpenAPI::toJsonValue(m_created));
    }
    if (m_created_by_isSet) {
        obj.insert(QString("created_by"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_custom_fields_isSet) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_display_isSet) {
        obj.insert(QString("display"), ::OpenAPI::toJsonValue(m_display));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_kind.isSet()) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_last_updated_isSet) {
        obj.insert(QString("last_updated"), ::OpenAPI::toJsonValue(m_last_updated));
    }
    if (m_tags.size() > 0) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

OAIObject OAIJournalEntry::getAssignedObject() const {
    return m_assigned_object;
}
void OAIJournalEntry::setAssignedObject(const OAIObject &assigned_object) {
    m_assigned_object = assigned_object;
    m_assigned_object_isSet = true;
}

bool OAIJournalEntry::is_assigned_object_Set() const{
    return m_assigned_object_isSet;
}

bool OAIJournalEntry::is_assigned_object_Valid() const{
    return m_assigned_object_isValid;
}

qint32 OAIJournalEntry::getAssignedObjectId() const {
    return m_assigned_object_id;
}
void OAIJournalEntry::setAssignedObjectId(const qint32 &assigned_object_id) {
    m_assigned_object_id = assigned_object_id;
    m_assigned_object_id_isSet = true;
}

bool OAIJournalEntry::is_assigned_object_id_Set() const{
    return m_assigned_object_id_isSet;
}

bool OAIJournalEntry::is_assigned_object_id_Valid() const{
    return m_assigned_object_id_isValid;
}

QString OAIJournalEntry::getAssignedObjectType() const {
    return m_assigned_object_type;
}
void OAIJournalEntry::setAssignedObjectType(const QString &assigned_object_type) {
    m_assigned_object_type = assigned_object_type;
    m_assigned_object_type_isSet = true;
}

bool OAIJournalEntry::is_assigned_object_type_Set() const{
    return m_assigned_object_type_isSet;
}

bool OAIJournalEntry::is_assigned_object_type_Valid() const{
    return m_assigned_object_type_isValid;
}

QString OAIJournalEntry::getComments() const {
    return m_comments;
}
void OAIJournalEntry::setComments(const QString &comments) {
    m_comments = comments;
    m_comments_isSet = true;
}

bool OAIJournalEntry::is_comments_Set() const{
    return m_comments_isSet;
}

bool OAIJournalEntry::is_comments_Valid() const{
    return m_comments_isValid;
}

QDateTime OAIJournalEntry::getCreated() const {
    return m_created;
}
void OAIJournalEntry::setCreated(const QDateTime &created) {
    m_created = created;
    m_created_isSet = true;
}

bool OAIJournalEntry::is_created_Set() const{
    return m_created_isSet;
}

bool OAIJournalEntry::is_created_Valid() const{
    return m_created_isValid;
}

qint32 OAIJournalEntry::getCreatedBy() const {
    return m_created_by;
}
void OAIJournalEntry::setCreatedBy(const qint32 &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIJournalEntry::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIJournalEntry::is_created_by_Valid() const{
    return m_created_by_isValid;
}

OAIObject OAIJournalEntry::getCustomFields() const {
    return m_custom_fields;
}
void OAIJournalEntry::setCustomFields(const OAIObject &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIJournalEntry::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIJournalEntry::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

QString OAIJournalEntry::getDisplay() const {
    return m_display;
}
void OAIJournalEntry::setDisplay(const QString &display) {
    m_display = display;
    m_display_isSet = true;
}

bool OAIJournalEntry::is_display_Set() const{
    return m_display_isSet;
}

bool OAIJournalEntry::is_display_Valid() const{
    return m_display_isValid;
}

qint32 OAIJournalEntry::getId() const {
    return m_id;
}
void OAIJournalEntry::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIJournalEntry::is_id_Set() const{
    return m_id_isSet;
}

bool OAIJournalEntry::is_id_Valid() const{
    return m_id_isValid;
}

OAIKind OAIJournalEntry::getKind() const {
    return m_kind;
}
void OAIJournalEntry::setKind(const OAIKind &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIJournalEntry::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIJournalEntry::is_kind_Valid() const{
    return m_kind_isValid;
}

QDateTime OAIJournalEntry::getLastUpdated() const {
    return m_last_updated;
}
void OAIJournalEntry::setLastUpdated(const QDateTime &last_updated) {
    m_last_updated = last_updated;
    m_last_updated_isSet = true;
}

bool OAIJournalEntry::is_last_updated_Set() const{
    return m_last_updated_isSet;
}

bool OAIJournalEntry::is_last_updated_Valid() const{
    return m_last_updated_isValid;
}

QList<OAINestedTag> OAIJournalEntry::getTags() const {
    return m_tags;
}
void OAIJournalEntry::setTags(const QList<OAINestedTag> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIJournalEntry::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIJournalEntry::is_tags_Valid() const{
    return m_tags_isValid;
}

QString OAIJournalEntry::getUrl() const {
    return m_url;
}
void OAIJournalEntry::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIJournalEntry::is_url_Set() const{
    return m_url_isSet;
}

bool OAIJournalEntry::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIJournalEntry::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assigned_object_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_assigned_object_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_assigned_object_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_comments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJournalEntry::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_assigned_object_id_isValid && m_assigned_object_type_isValid && m_comments_isValid && true;
}

} // namespace OpenAPI
