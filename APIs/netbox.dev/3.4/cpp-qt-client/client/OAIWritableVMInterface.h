/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWritableVMInterface.h
 *
 * 
 */

#ifndef OAIWritableVMInterface_H
#define OAIWritableVMInterface_H

#include <QJsonObject>

#include "OAINestedTag.h"
#include "OAIObject.h"
#include <QDateTime>
#include <QList>
#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINestedTag;

class OAIWritableVMInterface : public OAIObject {
public:
    OAIWritableVMInterface();
    OAIWritableVMInterface(QString json);
    ~OAIWritableVMInterface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getBridge() const;
    void setBridge(const qint32 &bridge);
    bool is_bridge_Set() const;
    bool is_bridge_Valid() const;

    qint32 getCountFhrpGroups() const;
    void setCountFhrpGroups(const qint32 &count_fhrp_groups);
    bool is_count_fhrp_groups_Set() const;
    bool is_count_fhrp_groups_Valid() const;

    qint32 getCountIpaddresses() const;
    void setCountIpaddresses(const qint32 &count_ipaddresses);
    bool is_count_ipaddresses_Set() const;
    bool is_count_ipaddresses_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    OAIObject getCustomFields() const;
    void setCustomFields(const OAIObject &custom_fields);
    bool is_custom_fields_Set() const;
    bool is_custom_fields_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplay() const;
    void setDisplay(const QString &display);
    bool is_display_Set() const;
    bool is_display_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getL2vpnTermination() const;
    void setL2vpnTermination(const QString &l2vpn_termination);
    bool is_l2vpn_termination_Set() const;
    bool is_l2vpn_termination_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    QString getMacAddress() const;
    void setMacAddress(const QString &mac_address);
    bool is_mac_address_Set() const;
    bool is_mac_address_Valid() const;

    QString getMode() const;
    void setMode(const QString &mode);
    bool is_mode_Set() const;
    bool is_mode_Valid() const;

    qint32 getMtu() const;
    void setMtu(const qint32 &mtu);
    bool is_mtu_Set() const;
    bool is_mtu_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getParent() const;
    void setParent(const qint32 &parent);
    bool is_parent_Set() const;
    bool is_parent_Valid() const;

    QSet<qint32> getTaggedVlans() const;
    void setTaggedVlans(const QSet<qint32> &tagged_vlans);
    bool is_tagged_vlans_Set() const;
    bool is_tagged_vlans_Valid() const;

    QList<OAINestedTag> getTags() const;
    void setTags(const QList<OAINestedTag> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    qint32 getUntaggedVlan() const;
    void setUntaggedVlan(const qint32 &untagged_vlan);
    bool is_untagged_vlan_Set() const;
    bool is_untagged_vlan_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    qint32 getVirtualMachine() const;
    void setVirtualMachine(const qint32 &virtual_machine);
    bool is_virtual_machine_Set() const;
    bool is_virtual_machine_Valid() const;

    qint32 getVrf() const;
    void setVrf(const qint32 &vrf);
    bool is_vrf_Set() const;
    bool is_vrf_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_bridge;
    bool m_bridge_isSet;
    bool m_bridge_isValid;

    qint32 m_count_fhrp_groups;
    bool m_count_fhrp_groups_isSet;
    bool m_count_fhrp_groups_isValid;

    qint32 m_count_ipaddresses;
    bool m_count_ipaddresses_isSet;
    bool m_count_ipaddresses_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    OAIObject m_custom_fields;
    bool m_custom_fields_isSet;
    bool m_custom_fields_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display;
    bool m_display_isSet;
    bool m_display_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_l2vpn_termination;
    bool m_l2vpn_termination_isSet;
    bool m_l2vpn_termination_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    QString m_mac_address;
    bool m_mac_address_isSet;
    bool m_mac_address_isValid;

    QString m_mode;
    bool m_mode_isSet;
    bool m_mode_isValid;

    qint32 m_mtu;
    bool m_mtu_isSet;
    bool m_mtu_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_parent;
    bool m_parent_isSet;
    bool m_parent_isValid;

    QSet<qint32> m_tagged_vlans;
    bool m_tagged_vlans_isSet;
    bool m_tagged_vlans_isValid;

    QList<OAINestedTag> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    qint32 m_untagged_vlan;
    bool m_untagged_vlan_isSet;
    bool m_untagged_vlan_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    qint32 m_virtual_machine;
    bool m_virtual_machine_isSet;
    bool m_virtual_machine_isValid;

    qint32 m_vrf;
    bool m_vrf_isSet;
    bool m_vrf_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWritableVMInterface)

#endif // OAIWritableVMInterface_H
