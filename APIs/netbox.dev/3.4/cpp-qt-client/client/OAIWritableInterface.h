/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWritableInterface.h
 *
 * 
 */

#ifndef OAIWritableInterface_H
#define OAIWritableInterface_H

#include <QJsonObject>

#include "OAINestedCable.h"
#include "OAINestedTag.h"
#include "OAIObject.h"
#include <QDateTime>
#include <QList>
#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINestedCable;
class OAINestedTag;

class OAIWritableInterface : public OAIObject {
public:
    OAIWritableInterface();
    OAIWritableInterface(QString json);
    ~OAIWritableInterface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isOccupied() const;
    void setOccupied(const bool &_occupied);
    bool is__occupied_Set() const;
    bool is__occupied_Valid() const;

    qint32 getBridge() const;
    void setBridge(const qint32 &bridge);
    bool is_bridge_Set() const;
    bool is_bridge_Valid() const;

    OAINestedCable getCable() const;
    void setCable(const OAINestedCable &cable);
    bool is_cable_Set() const;
    bool is_cable_Valid() const;

    QString getCableEnd() const;
    void setCableEnd(const QString &cable_end);
    bool is_cable_end_Set() const;
    bool is_cable_end_Valid() const;

    QList<QString> getConnectedEndpoints() const;
    void setConnectedEndpoints(const QList<QString> &connected_endpoints);
    bool is_connected_endpoints_Set() const;
    bool is_connected_endpoints_Valid() const;

    bool isConnectedEndpointsReachable() const;
    void setConnectedEndpointsReachable(const bool &connected_endpoints_reachable);
    bool is_connected_endpoints_reachable_Set() const;
    bool is_connected_endpoints_reachable_Valid() const;

    QString getConnectedEndpointsType() const;
    void setConnectedEndpointsType(const QString &connected_endpoints_type);
    bool is_connected_endpoints_type_Set() const;
    bool is_connected_endpoints_type_Valid() const;

    qint32 getCountFhrpGroups() const;
    void setCountFhrpGroups(const qint32 &count_fhrp_groups);
    bool is_count_fhrp_groups_Set() const;
    bool is_count_fhrp_groups_Valid() const;

    qint32 getCountIpaddresses() const;
    void setCountIpaddresses(const qint32 &count_ipaddresses);
    bool is_count_ipaddresses_Set() const;
    bool is_count_ipaddresses_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    OAIObject getCustomFields() const;
    void setCustomFields(const OAIObject &custom_fields);
    bool is_custom_fields_Set() const;
    bool is_custom_fields_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getDevice() const;
    void setDevice(const qint32 &device);
    bool is_device_Set() const;
    bool is_device_Valid() const;

    QString getDisplay() const;
    void setDisplay(const QString &display);
    bool is_display_Set() const;
    bool is_display_Valid() const;

    QString getDuplex() const;
    void setDuplex(const QString &duplex);
    bool is_duplex_Set() const;
    bool is_duplex_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getL2vpnTermination() const;
    void setL2vpnTermination(const QString &l2vpn_termination);
    bool is_l2vpn_termination_Set() const;
    bool is_l2vpn_termination_Valid() const;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    qint32 getLag() const;
    void setLag(const qint32 &lag);
    bool is_lag_Set() const;
    bool is_lag_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    QList<QString> getLinkPeers() const;
    void setLinkPeers(const QList<QString> &link_peers);
    bool is_link_peers_Set() const;
    bool is_link_peers_Valid() const;

    QString getLinkPeersType() const;
    void setLinkPeersType(const QString &link_peers_type);
    bool is_link_peers_type_Set() const;
    bool is_link_peers_type_Valid() const;

    QString getMacAddress() const;
    void setMacAddress(const QString &mac_address);
    bool is_mac_address_Set() const;
    bool is_mac_address_Valid() const;

    bool isMarkConnected() const;
    void setMarkConnected(const bool &mark_connected);
    bool is_mark_connected_Set() const;
    bool is_mark_connected_Valid() const;

    bool isMgmtOnly() const;
    void setMgmtOnly(const bool &mgmt_only);
    bool is_mgmt_only_Set() const;
    bool is_mgmt_only_Valid() const;

    QString getMode() const;
    void setMode(const QString &mode);
    bool is_mode_Set() const;
    bool is_mode_Valid() const;

    qint32 getModule() const;
    void setModule(const qint32 &module);
    bool is_module_Set() const;
    bool is_module_Valid() const;

    qint32 getMtu() const;
    void setMtu(const qint32 &mtu);
    bool is_mtu_Set() const;
    bool is_mtu_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getParent() const;
    void setParent(const qint32 &parent);
    bool is_parent_Set() const;
    bool is_parent_Valid() const;

    QString getPoeMode() const;
    void setPoeMode(const QString &poe_mode);
    bool is_poe_mode_Set() const;
    bool is_poe_mode_Valid() const;

    QString getPoeType() const;
    void setPoeType(const QString &poe_type);
    bool is_poe_type_Set() const;
    bool is_poe_type_Valid() const;

    QString getRfChannel() const;
    void setRfChannel(const QString &rf_channel);
    bool is_rf_channel_Set() const;
    bool is_rf_channel_Valid() const;

    double getRfChannelFrequency() const;
    void setRfChannelFrequency(const double &rf_channel_frequency);
    bool is_rf_channel_frequency_Set() const;
    bool is_rf_channel_frequency_Valid() const;

    double getRfChannelWidth() const;
    void setRfChannelWidth(const double &rf_channel_width);
    bool is_rf_channel_width_Set() const;
    bool is_rf_channel_width_Valid() const;

    QString getRfRole() const;
    void setRfRole(const QString &rf_role);
    bool is_rf_role_Set() const;
    bool is_rf_role_Valid() const;

    qint32 getSpeed() const;
    void setSpeed(const qint32 &speed);
    bool is_speed_Set() const;
    bool is_speed_Valid() const;

    QSet<qint32> getTaggedVlans() const;
    void setTaggedVlans(const QSet<qint32> &tagged_vlans);
    bool is_tagged_vlans_Set() const;
    bool is_tagged_vlans_Valid() const;

    QList<OAINestedTag> getTags() const;
    void setTags(const QList<OAINestedTag> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    qint32 getTxPower() const;
    void setTxPower(const qint32 &tx_power);
    bool is_tx_power_Set() const;
    bool is_tx_power_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint32 getUntaggedVlan() const;
    void setUntaggedVlan(const qint32 &untagged_vlan);
    bool is_untagged_vlan_Set() const;
    bool is_untagged_vlan_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QSet<qint32> getVdcs() const;
    void setVdcs(const QSet<qint32> &vdcs);
    bool is_vdcs_Set() const;
    bool is_vdcs_Valid() const;

    qint32 getVrf() const;
    void setVrf(const qint32 &vrf);
    bool is_vrf_Set() const;
    bool is_vrf_Valid() const;

    QSet<qint32> getWirelessLans() const;
    void setWirelessLans(const QSet<qint32> &wireless_lans);
    bool is_wireless_lans_Set() const;
    bool is_wireless_lans_Valid() const;

    qint32 getWirelessLink() const;
    void setWirelessLink(const qint32 &wireless_link);
    bool is_wireless_link_Set() const;
    bool is_wireless_link_Valid() const;

    QString getWwn() const;
    void setWwn(const QString &wwn);
    bool is_wwn_Set() const;
    bool is_wwn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m__occupied;
    bool m__occupied_isSet;
    bool m__occupied_isValid;

    qint32 m_bridge;
    bool m_bridge_isSet;
    bool m_bridge_isValid;

    OAINestedCable m_cable;
    bool m_cable_isSet;
    bool m_cable_isValid;

    QString m_cable_end;
    bool m_cable_end_isSet;
    bool m_cable_end_isValid;

    QList<QString> m_connected_endpoints;
    bool m_connected_endpoints_isSet;
    bool m_connected_endpoints_isValid;

    bool m_connected_endpoints_reachable;
    bool m_connected_endpoints_reachable_isSet;
    bool m_connected_endpoints_reachable_isValid;

    QString m_connected_endpoints_type;
    bool m_connected_endpoints_type_isSet;
    bool m_connected_endpoints_type_isValid;

    qint32 m_count_fhrp_groups;
    bool m_count_fhrp_groups_isSet;
    bool m_count_fhrp_groups_isValid;

    qint32 m_count_ipaddresses;
    bool m_count_ipaddresses_isSet;
    bool m_count_ipaddresses_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    OAIObject m_custom_fields;
    bool m_custom_fields_isSet;
    bool m_custom_fields_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_device;
    bool m_device_isSet;
    bool m_device_isValid;

    QString m_display;
    bool m_display_isSet;
    bool m_display_isValid;

    QString m_duplex;
    bool m_duplex_isSet;
    bool m_duplex_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_l2vpn_termination;
    bool m_l2vpn_termination_isSet;
    bool m_l2vpn_termination_isValid;

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    qint32 m_lag;
    bool m_lag_isSet;
    bool m_lag_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    QList<QString> m_link_peers;
    bool m_link_peers_isSet;
    bool m_link_peers_isValid;

    QString m_link_peers_type;
    bool m_link_peers_type_isSet;
    bool m_link_peers_type_isValid;

    QString m_mac_address;
    bool m_mac_address_isSet;
    bool m_mac_address_isValid;

    bool m_mark_connected;
    bool m_mark_connected_isSet;
    bool m_mark_connected_isValid;

    bool m_mgmt_only;
    bool m_mgmt_only_isSet;
    bool m_mgmt_only_isValid;

    QString m_mode;
    bool m_mode_isSet;
    bool m_mode_isValid;

    qint32 m_module;
    bool m_module_isSet;
    bool m_module_isValid;

    qint32 m_mtu;
    bool m_mtu_isSet;
    bool m_mtu_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_parent;
    bool m_parent_isSet;
    bool m_parent_isValid;

    QString m_poe_mode;
    bool m_poe_mode_isSet;
    bool m_poe_mode_isValid;

    QString m_poe_type;
    bool m_poe_type_isSet;
    bool m_poe_type_isValid;

    QString m_rf_channel;
    bool m_rf_channel_isSet;
    bool m_rf_channel_isValid;

    double m_rf_channel_frequency;
    bool m_rf_channel_frequency_isSet;
    bool m_rf_channel_frequency_isValid;

    double m_rf_channel_width;
    bool m_rf_channel_width_isSet;
    bool m_rf_channel_width_isValid;

    QString m_rf_role;
    bool m_rf_role_isSet;
    bool m_rf_role_isValid;

    qint32 m_speed;
    bool m_speed_isSet;
    bool m_speed_isValid;

    QSet<qint32> m_tagged_vlans;
    bool m_tagged_vlans_isSet;
    bool m_tagged_vlans_isValid;

    QList<OAINestedTag> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    qint32 m_tx_power;
    bool m_tx_power_isSet;
    bool m_tx_power_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint32 m_untagged_vlan;
    bool m_untagged_vlan_isSet;
    bool m_untagged_vlan_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QSet<qint32> m_vdcs;
    bool m_vdcs_isSet;
    bool m_vdcs_isValid;

    qint32 m_vrf;
    bool m_vrf_isSet;
    bool m_vrf_isValid;

    QSet<qint32> m_wireless_lans;
    bool m_wireless_lans_isSet;
    bool m_wireless_lans_isValid;

    qint32 m_wireless_link;
    bool m_wireless_link_isSet;
    bool m_wireless_link_isValid;

    QString m_wwn;
    bool m_wwn_isSet;
    bool m_wwn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWritableInterface)

#endif // OAIWritableInterface_H
