# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeviceNAPALM(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, method: object=None):
        """DeviceNAPALM - a model defined in OpenAPI

        :param method: The method of this DeviceNAPALM.
        """
        self.openapi_types = {
            'method': object
        }

        self.attribute_map = {
            'method': 'method'
        }

        self._method = method

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeviceNAPALM':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeviceNAPALM of this DeviceNAPALM.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def method(self):
        """Gets the method of this DeviceNAPALM.


        :return: The method of this DeviceNAPALM.
        :rtype: object
        """
        return self._method

    @method.setter
    def method(self, method):
        """Sets the method of this DeviceNAPALM.


        :param method: The method of this DeviceNAPALM.
        :type method: object
        """
        if method is None:
            raise ValueError("Invalid value for `method`, must not be `None`")

        self._method = method
