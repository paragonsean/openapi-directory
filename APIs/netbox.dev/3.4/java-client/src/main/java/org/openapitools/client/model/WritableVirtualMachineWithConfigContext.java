/*
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.NestedTag;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * WritableVirtualMachineWithConfigContext
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:59:40.219620-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class WritableVirtualMachineWithConfigContext {
  public static final String SERIALIZED_NAME_CLUSTER = "cluster";
  @SerializedName(SERIALIZED_NAME_CLUSTER)
  private Integer cluster;

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private String comments;

  public static final String SERIALIZED_NAME_CONFIG_CONTEXT = "config_context";
  @SerializedName(SERIALIZED_NAME_CONFIG_CONTEXT)
  private Object configContext;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private Object customFields = {};

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DEVICE = "device";
  @SerializedName(SERIALIZED_NAME_DEVICE)
  private Integer device;

  public static final String SERIALIZED_NAME_DISK = "disk";
  @SerializedName(SERIALIZED_NAME_DISK)
  private Integer disk;

  public static final String SERIALIZED_NAME_DISPLAY = "display";
  @SerializedName(SERIALIZED_NAME_DISPLAY)
  private String display;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_LAST_UPDATED = "last_updated";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED)
  private OffsetDateTime lastUpdated;

  public static final String SERIALIZED_NAME_LOCAL_CONTEXT_DATA = "local_context_data";
  @SerializedName(SERIALIZED_NAME_LOCAL_CONTEXT_DATA)
  private Object localContextData;

  public static final String SERIALIZED_NAME_MEMORY = "memory";
  @SerializedName(SERIALIZED_NAME_MEMORY)
  private Integer memory;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PLATFORM = "platform";
  @SerializedName(SERIALIZED_NAME_PLATFORM)
  private Integer platform;

  public static final String SERIALIZED_NAME_PRIMARY_IP = "primary_ip";
  @SerializedName(SERIALIZED_NAME_PRIMARY_IP)
  private String primaryIp;

  public static final String SERIALIZED_NAME_PRIMARY_IP4 = "primary_ip4";
  @SerializedName(SERIALIZED_NAME_PRIMARY_IP4)
  private Integer primaryIp4;

  public static final String SERIALIZED_NAME_PRIMARY_IP6 = "primary_ip6";
  @SerializedName(SERIALIZED_NAME_PRIMARY_IP6)
  private Integer primaryIp6;

  public static final String SERIALIZED_NAME_ROLE = "role";
  @SerializedName(SERIALIZED_NAME_ROLE)
  private Integer role;

  public static final String SERIALIZED_NAME_SITE = "site";
  @SerializedName(SERIALIZED_NAME_SITE)
  private Integer site;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    OFFLINE("offline"),
    
    ACTIVE("active"),
    
    PLANNED("planned"),
    
    STAGED("staged"),
    
    FAILED("failed"),
    
    DECOMMISSIONING("decommissioning");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<NestedTag> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_TENANT = "tenant";
  @SerializedName(SERIALIZED_NAME_TENANT)
  private Integer tenant;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public static final String SERIALIZED_NAME_VCPUS = "vcpus";
  @SerializedName(SERIALIZED_NAME_VCPUS)
  private BigDecimal vcpus;

  public WritableVirtualMachineWithConfigContext() {
  }

  public WritableVirtualMachineWithConfigContext(
     Object configContext, 
     OffsetDateTime created, 
     String display, 
     Integer id, 
     OffsetDateTime lastUpdated, 
     String primaryIp, 
     URI url
  ) {
    this();
    this.configContext = configContext;
    this.created = created;
    this.display = display;
    this.id = id;
    this.lastUpdated = lastUpdated;
    this.primaryIp = primaryIp;
    this.url = url;
  }

  public WritableVirtualMachineWithConfigContext cluster(Integer cluster) {
    this.cluster = cluster;
    return this;
  }

  /**
   * Get cluster
   * @return cluster
   */
  @javax.annotation.Nullable
  public Integer getCluster() {
    return cluster;
  }

  public void setCluster(Integer cluster) {
    this.cluster = cluster;
  }


  public WritableVirtualMachineWithConfigContext comments(String comments) {
    this.comments = comments;
    return this;
  }

  /**
   * Get comments
   * @return comments
   */
  @javax.annotation.Nullable
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }


  /**
   * Get configContext
   * @return configContext
   */
  @javax.annotation.Nullable
  public Object getConfigContext() {
    return configContext;
  }



  /**
   * Get created
   * @return created
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreated() {
    return created;
  }



  public WritableVirtualMachineWithConfigContext customFields(Object customFields) {
    this.customFields = customFields;
    return this;
  }

  /**
   * Get customFields
   * @return customFields
   */
  @javax.annotation.Nullable
  public Object getCustomFields() {
    return customFields;
  }

  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


  public WritableVirtualMachineWithConfigContext description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public WritableVirtualMachineWithConfigContext device(Integer device) {
    this.device = device;
    return this;
  }

  /**
   * Get device
   * @return device
   */
  @javax.annotation.Nullable
  public Integer getDevice() {
    return device;
  }

  public void setDevice(Integer device) {
    this.device = device;
  }


  public WritableVirtualMachineWithConfigContext disk(Integer disk) {
    this.disk = disk;
    return this;
  }

  /**
   * Get disk
   * minimum: 0
   * maximum: 2147483647
   * @return disk
   */
  @javax.annotation.Nullable
  public Integer getDisk() {
    return disk;
  }

  public void setDisk(Integer disk) {
    this.disk = disk;
  }


  /**
   * Get display
   * @return display
   */
  @javax.annotation.Nullable
  public String getDisplay() {
    return display;
  }



  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }



  /**
   * Get lastUpdated
   * @return lastUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }



  public WritableVirtualMachineWithConfigContext localContextData(Object localContextData) {
    this.localContextData = localContextData;
    return this;
  }

  /**
   * Get localContextData
   * @return localContextData
   */
  @javax.annotation.Nullable
  public Object getLocalContextData() {
    return localContextData;
  }

  public void setLocalContextData(Object localContextData) {
    this.localContextData = localContextData;
  }


  public WritableVirtualMachineWithConfigContext memory(Integer memory) {
    this.memory = memory;
    return this;
  }

  /**
   * Get memory
   * minimum: 0
   * maximum: 2147483647
   * @return memory
   */
  @javax.annotation.Nullable
  public Integer getMemory() {
    return memory;
  }

  public void setMemory(Integer memory) {
    this.memory = memory;
  }


  public WritableVirtualMachineWithConfigContext name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public WritableVirtualMachineWithConfigContext platform(Integer platform) {
    this.platform = platform;
    return this;
  }

  /**
   * Get platform
   * @return platform
   */
  @javax.annotation.Nullable
  public Integer getPlatform() {
    return platform;
  }

  public void setPlatform(Integer platform) {
    this.platform = platform;
  }


  /**
   * Get primaryIp
   * @return primaryIp
   */
  @javax.annotation.Nullable
  public String getPrimaryIp() {
    return primaryIp;
  }



  public WritableVirtualMachineWithConfigContext primaryIp4(Integer primaryIp4) {
    this.primaryIp4 = primaryIp4;
    return this;
  }

  /**
   * Get primaryIp4
   * @return primaryIp4
   */
  @javax.annotation.Nullable
  public Integer getPrimaryIp4() {
    return primaryIp4;
  }

  public void setPrimaryIp4(Integer primaryIp4) {
    this.primaryIp4 = primaryIp4;
  }


  public WritableVirtualMachineWithConfigContext primaryIp6(Integer primaryIp6) {
    this.primaryIp6 = primaryIp6;
    return this;
  }

  /**
   * Get primaryIp6
   * @return primaryIp6
   */
  @javax.annotation.Nullable
  public Integer getPrimaryIp6() {
    return primaryIp6;
  }

  public void setPrimaryIp6(Integer primaryIp6) {
    this.primaryIp6 = primaryIp6;
  }


  public WritableVirtualMachineWithConfigContext role(Integer role) {
    this.role = role;
    return this;
  }

  /**
   * Get role
   * @return role
   */
  @javax.annotation.Nullable
  public Integer getRole() {
    return role;
  }

  public void setRole(Integer role) {
    this.role = role;
  }


  public WritableVirtualMachineWithConfigContext site(Integer site) {
    this.site = site;
    return this;
  }

  /**
   * Get site
   * @return site
   */
  @javax.annotation.Nullable
  public Integer getSite() {
    return site;
  }

  public void setSite(Integer site) {
    this.site = site;
  }


  public WritableVirtualMachineWithConfigContext status(StatusEnum status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public WritableVirtualMachineWithConfigContext tags(List<NestedTag> tags) {
    this.tags = tags;
    return this;
  }

  public WritableVirtualMachineWithConfigContext addTagsItem(NestedTag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List<NestedTag> getTags() {
    return tags;
  }

  public void setTags(List<NestedTag> tags) {
    this.tags = tags;
  }


  public WritableVirtualMachineWithConfigContext tenant(Integer tenant) {
    this.tenant = tenant;
    return this;
  }

  /**
   * Get tenant
   * @return tenant
   */
  @javax.annotation.Nullable
  public Integer getTenant() {
    return tenant;
  }

  public void setTenant(Integer tenant) {
    this.tenant = tenant;
  }


  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }



  public WritableVirtualMachineWithConfigContext vcpus(BigDecimal vcpus) {
    this.vcpus = vcpus;
    return this;
  }

  /**
   * Get vcpus
   * minimum: 0.01
   * @return vcpus
   */
  @javax.annotation.Nullable
  public BigDecimal getVcpus() {
    return vcpus;
  }

  public void setVcpus(BigDecimal vcpus) {
    this.vcpus = vcpus;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WritableVirtualMachineWithConfigContext writableVirtualMachineWithConfigContext = (WritableVirtualMachineWithConfigContext) o;
    return Objects.equals(this.cluster, writableVirtualMachineWithConfigContext.cluster) &&
        Objects.equals(this.comments, writableVirtualMachineWithConfigContext.comments) &&
        Objects.equals(this.configContext, writableVirtualMachineWithConfigContext.configContext) &&
        Objects.equals(this.created, writableVirtualMachineWithConfigContext.created) &&
        Objects.equals(this.customFields, writableVirtualMachineWithConfigContext.customFields) &&
        Objects.equals(this.description, writableVirtualMachineWithConfigContext.description) &&
        Objects.equals(this.device, writableVirtualMachineWithConfigContext.device) &&
        Objects.equals(this.disk, writableVirtualMachineWithConfigContext.disk) &&
        Objects.equals(this.display, writableVirtualMachineWithConfigContext.display) &&
        Objects.equals(this.id, writableVirtualMachineWithConfigContext.id) &&
        Objects.equals(this.lastUpdated, writableVirtualMachineWithConfigContext.lastUpdated) &&
        Objects.equals(this.localContextData, writableVirtualMachineWithConfigContext.localContextData) &&
        Objects.equals(this.memory, writableVirtualMachineWithConfigContext.memory) &&
        Objects.equals(this.name, writableVirtualMachineWithConfigContext.name) &&
        Objects.equals(this.platform, writableVirtualMachineWithConfigContext.platform) &&
        Objects.equals(this.primaryIp, writableVirtualMachineWithConfigContext.primaryIp) &&
        Objects.equals(this.primaryIp4, writableVirtualMachineWithConfigContext.primaryIp4) &&
        Objects.equals(this.primaryIp6, writableVirtualMachineWithConfigContext.primaryIp6) &&
        Objects.equals(this.role, writableVirtualMachineWithConfigContext.role) &&
        Objects.equals(this.site, writableVirtualMachineWithConfigContext.site) &&
        Objects.equals(this.status, writableVirtualMachineWithConfigContext.status) &&
        Objects.equals(this.tags, writableVirtualMachineWithConfigContext.tags) &&
        Objects.equals(this.tenant, writableVirtualMachineWithConfigContext.tenant) &&
        Objects.equals(this.url, writableVirtualMachineWithConfigContext.url) &&
        Objects.equals(this.vcpus, writableVirtualMachineWithConfigContext.vcpus);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(cluster, comments, configContext, created, customFields, description, device, disk, display, id, lastUpdated, localContextData, memory, name, platform, primaryIp, primaryIp4, primaryIp6, role, site, status, tags, tenant, url, vcpus);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WritableVirtualMachineWithConfigContext {\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    configContext: ").append(toIndentedString(configContext)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    device: ").append(toIndentedString(device)).append("\n");
    sb.append("    disk: ").append(toIndentedString(disk)).append("\n");
    sb.append("    display: ").append(toIndentedString(display)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    localContextData: ").append(toIndentedString(localContextData)).append("\n");
    sb.append("    memory: ").append(toIndentedString(memory)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    primaryIp: ").append(toIndentedString(primaryIp)).append("\n");
    sb.append("    primaryIp4: ").append(toIndentedString(primaryIp4)).append("\n");
    sb.append("    primaryIp6: ").append(toIndentedString(primaryIp6)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    site: ").append(toIndentedString(site)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    tenant: ").append(toIndentedString(tenant)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    vcpus: ").append(toIndentedString(vcpus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cluster");
    openapiFields.add("comments");
    openapiFields.add("config_context");
    openapiFields.add("created");
    openapiFields.add("custom_fields");
    openapiFields.add("description");
    openapiFields.add("device");
    openapiFields.add("disk");
    openapiFields.add("display");
    openapiFields.add("id");
    openapiFields.add("last_updated");
    openapiFields.add("local_context_data");
    openapiFields.add("memory");
    openapiFields.add("name");
    openapiFields.add("platform");
    openapiFields.add("primary_ip");
    openapiFields.add("primary_ip4");
    openapiFields.add("primary_ip6");
    openapiFields.add("role");
    openapiFields.add("site");
    openapiFields.add("status");
    openapiFields.add("tags");
    openapiFields.add("tenant");
    openapiFields.add("url");
    openapiFields.add("vcpus");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to WritableVirtualMachineWithConfigContext
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!WritableVirtualMachineWithConfigContext.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WritableVirtualMachineWithConfigContext is not found in the empty JSON string", WritableVirtualMachineWithConfigContext.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!WritableVirtualMachineWithConfigContext.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WritableVirtualMachineWithConfigContext` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : WritableVirtualMachineWithConfigContext.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("comments") != null && !jsonObj.get("comments").isJsonNull()) && !jsonObj.get("comments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comments").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("display") != null && !jsonObj.get("display").isJsonNull()) && !jsonObj.get("display").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `display` to be a primitive type in the JSON string but got `%s`", jsonObj.get("display").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("primary_ip") != null && !jsonObj.get("primary_ip").isJsonNull()) && !jsonObj.get("primary_ip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primary_ip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primary_ip").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        StatusEnum.validateJsonElement(jsonObj.get("status"));
      }
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        JsonArray jsonArraytags = jsonObj.getAsJsonArray("tags");
        if (jsonArraytags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("tags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
          }

          // validate the optional field `tags` (array)
          for (int i = 0; i < jsonArraytags.size(); i++) {
            NestedTag.validateJsonElement(jsonArraytags.get(i));
          };
        }
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WritableVirtualMachineWithConfigContext.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WritableVirtualMachineWithConfigContext' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WritableVirtualMachineWithConfigContext> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WritableVirtualMachineWithConfigContext.class));

       return (TypeAdapter<T>) new TypeAdapter<WritableVirtualMachineWithConfigContext>() {
           @Override
           public void write(JsonWriter out, WritableVirtualMachineWithConfigContext value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WritableVirtualMachineWithConfigContext read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of WritableVirtualMachineWithConfigContext given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of WritableVirtualMachineWithConfigContext
   * @throws IOException if the JSON string is invalid with respect to WritableVirtualMachineWithConfigContext
   */
  public static WritableVirtualMachineWithConfigContext fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WritableVirtualMachineWithConfigContext.class);
  }

  /**
   * Convert an instance of WritableVirtualMachineWithConfigContext to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

