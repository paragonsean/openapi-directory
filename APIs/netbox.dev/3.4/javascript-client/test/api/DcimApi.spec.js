/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetBoxApi);
  }
}(this, function(expect, NetBoxApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetBoxApi.DcimApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DcimApi', function() {
    describe('dcimCableTerminationsBulkDelete', function() {
      it('should call dcimCableTerminationsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimCableTerminationsBulkDelete
        //instance.dcimCableTerminationsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimCableTerminationsBulkPartialUpdate', function() {
      it('should call dcimCableTerminationsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimCableTerminationsBulkPartialUpdate
        //instance.dcimCableTerminationsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimCableTerminationsBulkUpdate', function() {
      it('should call dcimCableTerminationsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimCableTerminationsBulkUpdate
        //instance.dcimCableTerminationsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimCableTerminationsCreate', function() {
      it('should call dcimCableTerminationsCreate successfully', function(done) {
        //uncomment below and update the code to test dcimCableTerminationsCreate
        //instance.dcimCableTerminationsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimCableTerminationsDelete', function() {
      it('should call dcimCableTerminationsDelete successfully', function(done) {
        //uncomment below and update the code to test dcimCableTerminationsDelete
        //instance.dcimCableTerminationsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimCableTerminationsList', function() {
      it('should call dcimCableTerminationsList successfully', function(done) {
        //uncomment below and update the code to test dcimCableTerminationsList
        //instance.dcimCableTerminationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimCableTerminationsPartialUpdate', function() {
      it('should call dcimCableTerminationsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimCableTerminationsPartialUpdate
        //instance.dcimCableTerminationsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimCableTerminationsRead', function() {
      it('should call dcimCableTerminationsRead successfully', function(done) {
        //uncomment below and update the code to test dcimCableTerminationsRead
        //instance.dcimCableTerminationsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimCableTerminationsUpdate', function() {
      it('should call dcimCableTerminationsUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimCableTerminationsUpdate
        //instance.dcimCableTerminationsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimCablesBulkDelete', function() {
      it('should call dcimCablesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimCablesBulkDelete
        //instance.dcimCablesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimCablesBulkPartialUpdate', function() {
      it('should call dcimCablesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimCablesBulkPartialUpdate
        //instance.dcimCablesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimCablesBulkUpdate', function() {
      it('should call dcimCablesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimCablesBulkUpdate
        //instance.dcimCablesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimCablesCreate', function() {
      it('should call dcimCablesCreate successfully', function(done) {
        //uncomment below and update the code to test dcimCablesCreate
        //instance.dcimCablesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimCablesDelete', function() {
      it('should call dcimCablesDelete successfully', function(done) {
        //uncomment below and update the code to test dcimCablesDelete
        //instance.dcimCablesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimCablesList', function() {
      it('should call dcimCablesList successfully', function(done) {
        //uncomment below and update the code to test dcimCablesList
        //instance.dcimCablesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimCablesPartialUpdate', function() {
      it('should call dcimCablesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimCablesPartialUpdate
        //instance.dcimCablesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimCablesRead', function() {
      it('should call dcimCablesRead successfully', function(done) {
        //uncomment below and update the code to test dcimCablesRead
        //instance.dcimCablesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimCablesUpdate', function() {
      it('should call dcimCablesUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimCablesUpdate
        //instance.dcimCablesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConnectedDeviceList', function() {
      it('should call dcimConnectedDeviceList successfully', function(done) {
        //uncomment below and update the code to test dcimConnectedDeviceList
        //instance.dcimConnectedDeviceList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsolePortTemplatesBulkDelete', function() {
      it('should call dcimConsolePortTemplatesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimConsolePortTemplatesBulkDelete
        //instance.dcimConsolePortTemplatesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsolePortTemplatesBulkPartialUpdate', function() {
      it('should call dcimConsolePortTemplatesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimConsolePortTemplatesBulkPartialUpdate
        //instance.dcimConsolePortTemplatesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsolePortTemplatesBulkUpdate', function() {
      it('should call dcimConsolePortTemplatesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimConsolePortTemplatesBulkUpdate
        //instance.dcimConsolePortTemplatesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsolePortTemplatesCreate', function() {
      it('should call dcimConsolePortTemplatesCreate successfully', function(done) {
        //uncomment below and update the code to test dcimConsolePortTemplatesCreate
        //instance.dcimConsolePortTemplatesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsolePortTemplatesDelete', function() {
      it('should call dcimConsolePortTemplatesDelete successfully', function(done) {
        //uncomment below and update the code to test dcimConsolePortTemplatesDelete
        //instance.dcimConsolePortTemplatesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsolePortTemplatesList', function() {
      it('should call dcimConsolePortTemplatesList successfully', function(done) {
        //uncomment below and update the code to test dcimConsolePortTemplatesList
        //instance.dcimConsolePortTemplatesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsolePortTemplatesPartialUpdate', function() {
      it('should call dcimConsolePortTemplatesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimConsolePortTemplatesPartialUpdate
        //instance.dcimConsolePortTemplatesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsolePortTemplatesRead', function() {
      it('should call dcimConsolePortTemplatesRead successfully', function(done) {
        //uncomment below and update the code to test dcimConsolePortTemplatesRead
        //instance.dcimConsolePortTemplatesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsolePortTemplatesUpdate', function() {
      it('should call dcimConsolePortTemplatesUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimConsolePortTemplatesUpdate
        //instance.dcimConsolePortTemplatesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsolePortsBulkDelete', function() {
      it('should call dcimConsolePortsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimConsolePortsBulkDelete
        //instance.dcimConsolePortsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsolePortsBulkPartialUpdate', function() {
      it('should call dcimConsolePortsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimConsolePortsBulkPartialUpdate
        //instance.dcimConsolePortsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsolePortsBulkUpdate', function() {
      it('should call dcimConsolePortsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimConsolePortsBulkUpdate
        //instance.dcimConsolePortsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsolePortsCreate', function() {
      it('should call dcimConsolePortsCreate successfully', function(done) {
        //uncomment below and update the code to test dcimConsolePortsCreate
        //instance.dcimConsolePortsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsolePortsDelete', function() {
      it('should call dcimConsolePortsDelete successfully', function(done) {
        //uncomment below and update the code to test dcimConsolePortsDelete
        //instance.dcimConsolePortsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsolePortsList', function() {
      it('should call dcimConsolePortsList successfully', function(done) {
        //uncomment below and update the code to test dcimConsolePortsList
        //instance.dcimConsolePortsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsolePortsPartialUpdate', function() {
      it('should call dcimConsolePortsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimConsolePortsPartialUpdate
        //instance.dcimConsolePortsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsolePortsRead', function() {
      it('should call dcimConsolePortsRead successfully', function(done) {
        //uncomment below and update the code to test dcimConsolePortsRead
        //instance.dcimConsolePortsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsolePortsTrace', function() {
      it('should call dcimConsolePortsTrace successfully', function(done) {
        //uncomment below and update the code to test dcimConsolePortsTrace
        //instance.dcimConsolePortsTrace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsolePortsUpdate', function() {
      it('should call dcimConsolePortsUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimConsolePortsUpdate
        //instance.dcimConsolePortsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsoleServerPortTemplatesBulkDelete', function() {
      it('should call dcimConsoleServerPortTemplatesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimConsoleServerPortTemplatesBulkDelete
        //instance.dcimConsoleServerPortTemplatesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsoleServerPortTemplatesBulkPartialUpdate', function() {
      it('should call dcimConsoleServerPortTemplatesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimConsoleServerPortTemplatesBulkPartialUpdate
        //instance.dcimConsoleServerPortTemplatesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsoleServerPortTemplatesBulkUpdate', function() {
      it('should call dcimConsoleServerPortTemplatesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimConsoleServerPortTemplatesBulkUpdate
        //instance.dcimConsoleServerPortTemplatesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsoleServerPortTemplatesCreate', function() {
      it('should call dcimConsoleServerPortTemplatesCreate successfully', function(done) {
        //uncomment below and update the code to test dcimConsoleServerPortTemplatesCreate
        //instance.dcimConsoleServerPortTemplatesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsoleServerPortTemplatesDelete', function() {
      it('should call dcimConsoleServerPortTemplatesDelete successfully', function(done) {
        //uncomment below and update the code to test dcimConsoleServerPortTemplatesDelete
        //instance.dcimConsoleServerPortTemplatesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsoleServerPortTemplatesList', function() {
      it('should call dcimConsoleServerPortTemplatesList successfully', function(done) {
        //uncomment below and update the code to test dcimConsoleServerPortTemplatesList
        //instance.dcimConsoleServerPortTemplatesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsoleServerPortTemplatesPartialUpdate', function() {
      it('should call dcimConsoleServerPortTemplatesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimConsoleServerPortTemplatesPartialUpdate
        //instance.dcimConsoleServerPortTemplatesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsoleServerPortTemplatesRead', function() {
      it('should call dcimConsoleServerPortTemplatesRead successfully', function(done) {
        //uncomment below and update the code to test dcimConsoleServerPortTemplatesRead
        //instance.dcimConsoleServerPortTemplatesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsoleServerPortTemplatesUpdate', function() {
      it('should call dcimConsoleServerPortTemplatesUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimConsoleServerPortTemplatesUpdate
        //instance.dcimConsoleServerPortTemplatesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsoleServerPortsBulkDelete', function() {
      it('should call dcimConsoleServerPortsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimConsoleServerPortsBulkDelete
        //instance.dcimConsoleServerPortsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsoleServerPortsBulkPartialUpdate', function() {
      it('should call dcimConsoleServerPortsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimConsoleServerPortsBulkPartialUpdate
        //instance.dcimConsoleServerPortsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsoleServerPortsBulkUpdate', function() {
      it('should call dcimConsoleServerPortsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimConsoleServerPortsBulkUpdate
        //instance.dcimConsoleServerPortsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsoleServerPortsCreate', function() {
      it('should call dcimConsoleServerPortsCreate successfully', function(done) {
        //uncomment below and update the code to test dcimConsoleServerPortsCreate
        //instance.dcimConsoleServerPortsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsoleServerPortsDelete', function() {
      it('should call dcimConsoleServerPortsDelete successfully', function(done) {
        //uncomment below and update the code to test dcimConsoleServerPortsDelete
        //instance.dcimConsoleServerPortsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsoleServerPortsList', function() {
      it('should call dcimConsoleServerPortsList successfully', function(done) {
        //uncomment below and update the code to test dcimConsoleServerPortsList
        //instance.dcimConsoleServerPortsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsoleServerPortsPartialUpdate', function() {
      it('should call dcimConsoleServerPortsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimConsoleServerPortsPartialUpdate
        //instance.dcimConsoleServerPortsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsoleServerPortsRead', function() {
      it('should call dcimConsoleServerPortsRead successfully', function(done) {
        //uncomment below and update the code to test dcimConsoleServerPortsRead
        //instance.dcimConsoleServerPortsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsoleServerPortsTrace', function() {
      it('should call dcimConsoleServerPortsTrace successfully', function(done) {
        //uncomment below and update the code to test dcimConsoleServerPortsTrace
        //instance.dcimConsoleServerPortsTrace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimConsoleServerPortsUpdate', function() {
      it('should call dcimConsoleServerPortsUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimConsoleServerPortsUpdate
        //instance.dcimConsoleServerPortsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceBayTemplatesBulkDelete', function() {
      it('should call dcimDeviceBayTemplatesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceBayTemplatesBulkDelete
        //instance.dcimDeviceBayTemplatesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceBayTemplatesBulkPartialUpdate', function() {
      it('should call dcimDeviceBayTemplatesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceBayTemplatesBulkPartialUpdate
        //instance.dcimDeviceBayTemplatesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceBayTemplatesBulkUpdate', function() {
      it('should call dcimDeviceBayTemplatesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceBayTemplatesBulkUpdate
        //instance.dcimDeviceBayTemplatesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceBayTemplatesCreate', function() {
      it('should call dcimDeviceBayTemplatesCreate successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceBayTemplatesCreate
        //instance.dcimDeviceBayTemplatesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceBayTemplatesDelete', function() {
      it('should call dcimDeviceBayTemplatesDelete successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceBayTemplatesDelete
        //instance.dcimDeviceBayTemplatesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceBayTemplatesList', function() {
      it('should call dcimDeviceBayTemplatesList successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceBayTemplatesList
        //instance.dcimDeviceBayTemplatesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceBayTemplatesPartialUpdate', function() {
      it('should call dcimDeviceBayTemplatesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceBayTemplatesPartialUpdate
        //instance.dcimDeviceBayTemplatesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceBayTemplatesRead', function() {
      it('should call dcimDeviceBayTemplatesRead successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceBayTemplatesRead
        //instance.dcimDeviceBayTemplatesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceBayTemplatesUpdate', function() {
      it('should call dcimDeviceBayTemplatesUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceBayTemplatesUpdate
        //instance.dcimDeviceBayTemplatesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceBaysBulkDelete', function() {
      it('should call dcimDeviceBaysBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceBaysBulkDelete
        //instance.dcimDeviceBaysBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceBaysBulkPartialUpdate', function() {
      it('should call dcimDeviceBaysBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceBaysBulkPartialUpdate
        //instance.dcimDeviceBaysBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceBaysBulkUpdate', function() {
      it('should call dcimDeviceBaysBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceBaysBulkUpdate
        //instance.dcimDeviceBaysBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceBaysCreate', function() {
      it('should call dcimDeviceBaysCreate successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceBaysCreate
        //instance.dcimDeviceBaysCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceBaysDelete', function() {
      it('should call dcimDeviceBaysDelete successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceBaysDelete
        //instance.dcimDeviceBaysDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceBaysList', function() {
      it('should call dcimDeviceBaysList successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceBaysList
        //instance.dcimDeviceBaysList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceBaysPartialUpdate', function() {
      it('should call dcimDeviceBaysPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceBaysPartialUpdate
        //instance.dcimDeviceBaysPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceBaysRead', function() {
      it('should call dcimDeviceBaysRead successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceBaysRead
        //instance.dcimDeviceBaysRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceBaysUpdate', function() {
      it('should call dcimDeviceBaysUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceBaysUpdate
        //instance.dcimDeviceBaysUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceRolesBulkDelete', function() {
      it('should call dcimDeviceRolesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceRolesBulkDelete
        //instance.dcimDeviceRolesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceRolesBulkPartialUpdate', function() {
      it('should call dcimDeviceRolesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceRolesBulkPartialUpdate
        //instance.dcimDeviceRolesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceRolesBulkUpdate', function() {
      it('should call dcimDeviceRolesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceRolesBulkUpdate
        //instance.dcimDeviceRolesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceRolesCreate', function() {
      it('should call dcimDeviceRolesCreate successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceRolesCreate
        //instance.dcimDeviceRolesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceRolesDelete', function() {
      it('should call dcimDeviceRolesDelete successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceRolesDelete
        //instance.dcimDeviceRolesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceRolesList', function() {
      it('should call dcimDeviceRolesList successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceRolesList
        //instance.dcimDeviceRolesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceRolesPartialUpdate', function() {
      it('should call dcimDeviceRolesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceRolesPartialUpdate
        //instance.dcimDeviceRolesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceRolesRead', function() {
      it('should call dcimDeviceRolesRead successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceRolesRead
        //instance.dcimDeviceRolesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceRolesUpdate', function() {
      it('should call dcimDeviceRolesUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceRolesUpdate
        //instance.dcimDeviceRolesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceTypesBulkDelete', function() {
      it('should call dcimDeviceTypesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceTypesBulkDelete
        //instance.dcimDeviceTypesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceTypesBulkPartialUpdate', function() {
      it('should call dcimDeviceTypesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceTypesBulkPartialUpdate
        //instance.dcimDeviceTypesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceTypesBulkUpdate', function() {
      it('should call dcimDeviceTypesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceTypesBulkUpdate
        //instance.dcimDeviceTypesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceTypesCreate', function() {
      it('should call dcimDeviceTypesCreate successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceTypesCreate
        //instance.dcimDeviceTypesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceTypesDelete', function() {
      it('should call dcimDeviceTypesDelete successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceTypesDelete
        //instance.dcimDeviceTypesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceTypesList', function() {
      it('should call dcimDeviceTypesList successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceTypesList
        //instance.dcimDeviceTypesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceTypesPartialUpdate', function() {
      it('should call dcimDeviceTypesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceTypesPartialUpdate
        //instance.dcimDeviceTypesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceTypesRead', function() {
      it('should call dcimDeviceTypesRead successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceTypesRead
        //instance.dcimDeviceTypesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDeviceTypesUpdate', function() {
      it('should call dcimDeviceTypesUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimDeviceTypesUpdate
        //instance.dcimDeviceTypesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDevicesBulkDelete', function() {
      it('should call dcimDevicesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimDevicesBulkDelete
        //instance.dcimDevicesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDevicesBulkPartialUpdate', function() {
      it('should call dcimDevicesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimDevicesBulkPartialUpdate
        //instance.dcimDevicesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDevicesBulkUpdate', function() {
      it('should call dcimDevicesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimDevicesBulkUpdate
        //instance.dcimDevicesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDevicesCreate', function() {
      it('should call dcimDevicesCreate successfully', function(done) {
        //uncomment below and update the code to test dcimDevicesCreate
        //instance.dcimDevicesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDevicesDelete', function() {
      it('should call dcimDevicesDelete successfully', function(done) {
        //uncomment below and update the code to test dcimDevicesDelete
        //instance.dcimDevicesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDevicesList', function() {
      it('should call dcimDevicesList successfully', function(done) {
        //uncomment below and update the code to test dcimDevicesList
        //instance.dcimDevicesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDevicesNapalm', function() {
      it('should call dcimDevicesNapalm successfully', function(done) {
        //uncomment below and update the code to test dcimDevicesNapalm
        //instance.dcimDevicesNapalm(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDevicesPartialUpdate', function() {
      it('should call dcimDevicesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimDevicesPartialUpdate
        //instance.dcimDevicesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDevicesRead', function() {
      it('should call dcimDevicesRead successfully', function(done) {
        //uncomment below and update the code to test dcimDevicesRead
        //instance.dcimDevicesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimDevicesUpdate', function() {
      it('should call dcimDevicesUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimDevicesUpdate
        //instance.dcimDevicesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimFrontPortTemplatesBulkDelete', function() {
      it('should call dcimFrontPortTemplatesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimFrontPortTemplatesBulkDelete
        //instance.dcimFrontPortTemplatesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimFrontPortTemplatesBulkPartialUpdate', function() {
      it('should call dcimFrontPortTemplatesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimFrontPortTemplatesBulkPartialUpdate
        //instance.dcimFrontPortTemplatesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimFrontPortTemplatesBulkUpdate', function() {
      it('should call dcimFrontPortTemplatesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimFrontPortTemplatesBulkUpdate
        //instance.dcimFrontPortTemplatesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimFrontPortTemplatesCreate', function() {
      it('should call dcimFrontPortTemplatesCreate successfully', function(done) {
        //uncomment below and update the code to test dcimFrontPortTemplatesCreate
        //instance.dcimFrontPortTemplatesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimFrontPortTemplatesDelete', function() {
      it('should call dcimFrontPortTemplatesDelete successfully', function(done) {
        //uncomment below and update the code to test dcimFrontPortTemplatesDelete
        //instance.dcimFrontPortTemplatesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimFrontPortTemplatesList', function() {
      it('should call dcimFrontPortTemplatesList successfully', function(done) {
        //uncomment below and update the code to test dcimFrontPortTemplatesList
        //instance.dcimFrontPortTemplatesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimFrontPortTemplatesPartialUpdate', function() {
      it('should call dcimFrontPortTemplatesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimFrontPortTemplatesPartialUpdate
        //instance.dcimFrontPortTemplatesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimFrontPortTemplatesRead', function() {
      it('should call dcimFrontPortTemplatesRead successfully', function(done) {
        //uncomment below and update the code to test dcimFrontPortTemplatesRead
        //instance.dcimFrontPortTemplatesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimFrontPortTemplatesUpdate', function() {
      it('should call dcimFrontPortTemplatesUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimFrontPortTemplatesUpdate
        //instance.dcimFrontPortTemplatesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimFrontPortsBulkDelete', function() {
      it('should call dcimFrontPortsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimFrontPortsBulkDelete
        //instance.dcimFrontPortsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimFrontPortsBulkPartialUpdate', function() {
      it('should call dcimFrontPortsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimFrontPortsBulkPartialUpdate
        //instance.dcimFrontPortsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimFrontPortsBulkUpdate', function() {
      it('should call dcimFrontPortsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimFrontPortsBulkUpdate
        //instance.dcimFrontPortsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimFrontPortsCreate', function() {
      it('should call dcimFrontPortsCreate successfully', function(done) {
        //uncomment below and update the code to test dcimFrontPortsCreate
        //instance.dcimFrontPortsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimFrontPortsDelete', function() {
      it('should call dcimFrontPortsDelete successfully', function(done) {
        //uncomment below and update the code to test dcimFrontPortsDelete
        //instance.dcimFrontPortsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimFrontPortsList', function() {
      it('should call dcimFrontPortsList successfully', function(done) {
        //uncomment below and update the code to test dcimFrontPortsList
        //instance.dcimFrontPortsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimFrontPortsPartialUpdate', function() {
      it('should call dcimFrontPortsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimFrontPortsPartialUpdate
        //instance.dcimFrontPortsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimFrontPortsPaths', function() {
      it('should call dcimFrontPortsPaths successfully', function(done) {
        //uncomment below and update the code to test dcimFrontPortsPaths
        //instance.dcimFrontPortsPaths(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimFrontPortsRead', function() {
      it('should call dcimFrontPortsRead successfully', function(done) {
        //uncomment below and update the code to test dcimFrontPortsRead
        //instance.dcimFrontPortsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimFrontPortsUpdate', function() {
      it('should call dcimFrontPortsUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimFrontPortsUpdate
        //instance.dcimFrontPortsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInterfaceTemplatesBulkDelete', function() {
      it('should call dcimInterfaceTemplatesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimInterfaceTemplatesBulkDelete
        //instance.dcimInterfaceTemplatesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInterfaceTemplatesBulkPartialUpdate', function() {
      it('should call dcimInterfaceTemplatesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimInterfaceTemplatesBulkPartialUpdate
        //instance.dcimInterfaceTemplatesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInterfaceTemplatesBulkUpdate', function() {
      it('should call dcimInterfaceTemplatesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimInterfaceTemplatesBulkUpdate
        //instance.dcimInterfaceTemplatesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInterfaceTemplatesCreate', function() {
      it('should call dcimInterfaceTemplatesCreate successfully', function(done) {
        //uncomment below and update the code to test dcimInterfaceTemplatesCreate
        //instance.dcimInterfaceTemplatesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInterfaceTemplatesDelete', function() {
      it('should call dcimInterfaceTemplatesDelete successfully', function(done) {
        //uncomment below and update the code to test dcimInterfaceTemplatesDelete
        //instance.dcimInterfaceTemplatesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInterfaceTemplatesList', function() {
      it('should call dcimInterfaceTemplatesList successfully', function(done) {
        //uncomment below and update the code to test dcimInterfaceTemplatesList
        //instance.dcimInterfaceTemplatesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInterfaceTemplatesPartialUpdate', function() {
      it('should call dcimInterfaceTemplatesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimInterfaceTemplatesPartialUpdate
        //instance.dcimInterfaceTemplatesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInterfaceTemplatesRead', function() {
      it('should call dcimInterfaceTemplatesRead successfully', function(done) {
        //uncomment below and update the code to test dcimInterfaceTemplatesRead
        //instance.dcimInterfaceTemplatesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInterfaceTemplatesUpdate', function() {
      it('should call dcimInterfaceTemplatesUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimInterfaceTemplatesUpdate
        //instance.dcimInterfaceTemplatesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInterfacesBulkDelete', function() {
      it('should call dcimInterfacesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimInterfacesBulkDelete
        //instance.dcimInterfacesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInterfacesBulkPartialUpdate', function() {
      it('should call dcimInterfacesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimInterfacesBulkPartialUpdate
        //instance.dcimInterfacesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInterfacesBulkUpdate', function() {
      it('should call dcimInterfacesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimInterfacesBulkUpdate
        //instance.dcimInterfacesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInterfacesCreate', function() {
      it('should call dcimInterfacesCreate successfully', function(done) {
        //uncomment below and update the code to test dcimInterfacesCreate
        //instance.dcimInterfacesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInterfacesDelete', function() {
      it('should call dcimInterfacesDelete successfully', function(done) {
        //uncomment below and update the code to test dcimInterfacesDelete
        //instance.dcimInterfacesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInterfacesList', function() {
      it('should call dcimInterfacesList successfully', function(done) {
        //uncomment below and update the code to test dcimInterfacesList
        //instance.dcimInterfacesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInterfacesPartialUpdate', function() {
      it('should call dcimInterfacesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimInterfacesPartialUpdate
        //instance.dcimInterfacesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInterfacesRead', function() {
      it('should call dcimInterfacesRead successfully', function(done) {
        //uncomment below and update the code to test dcimInterfacesRead
        //instance.dcimInterfacesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInterfacesTrace', function() {
      it('should call dcimInterfacesTrace successfully', function(done) {
        //uncomment below and update the code to test dcimInterfacesTrace
        //instance.dcimInterfacesTrace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInterfacesUpdate', function() {
      it('should call dcimInterfacesUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimInterfacesUpdate
        //instance.dcimInterfacesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemRolesBulkDelete', function() {
      it('should call dcimInventoryItemRolesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemRolesBulkDelete
        //instance.dcimInventoryItemRolesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemRolesBulkPartialUpdate', function() {
      it('should call dcimInventoryItemRolesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemRolesBulkPartialUpdate
        //instance.dcimInventoryItemRolesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemRolesBulkUpdate', function() {
      it('should call dcimInventoryItemRolesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemRolesBulkUpdate
        //instance.dcimInventoryItemRolesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemRolesCreate', function() {
      it('should call dcimInventoryItemRolesCreate successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemRolesCreate
        //instance.dcimInventoryItemRolesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemRolesDelete', function() {
      it('should call dcimInventoryItemRolesDelete successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemRolesDelete
        //instance.dcimInventoryItemRolesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemRolesList', function() {
      it('should call dcimInventoryItemRolesList successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemRolesList
        //instance.dcimInventoryItemRolesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemRolesPartialUpdate', function() {
      it('should call dcimInventoryItemRolesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemRolesPartialUpdate
        //instance.dcimInventoryItemRolesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemRolesRead', function() {
      it('should call dcimInventoryItemRolesRead successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemRolesRead
        //instance.dcimInventoryItemRolesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemRolesUpdate', function() {
      it('should call dcimInventoryItemRolesUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemRolesUpdate
        //instance.dcimInventoryItemRolesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemTemplatesBulkDelete', function() {
      it('should call dcimInventoryItemTemplatesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemTemplatesBulkDelete
        //instance.dcimInventoryItemTemplatesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemTemplatesBulkPartialUpdate', function() {
      it('should call dcimInventoryItemTemplatesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemTemplatesBulkPartialUpdate
        //instance.dcimInventoryItemTemplatesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemTemplatesBulkUpdate', function() {
      it('should call dcimInventoryItemTemplatesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemTemplatesBulkUpdate
        //instance.dcimInventoryItemTemplatesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemTemplatesCreate', function() {
      it('should call dcimInventoryItemTemplatesCreate successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemTemplatesCreate
        //instance.dcimInventoryItemTemplatesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemTemplatesDelete', function() {
      it('should call dcimInventoryItemTemplatesDelete successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemTemplatesDelete
        //instance.dcimInventoryItemTemplatesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemTemplatesList', function() {
      it('should call dcimInventoryItemTemplatesList successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemTemplatesList
        //instance.dcimInventoryItemTemplatesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemTemplatesPartialUpdate', function() {
      it('should call dcimInventoryItemTemplatesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemTemplatesPartialUpdate
        //instance.dcimInventoryItemTemplatesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemTemplatesRead', function() {
      it('should call dcimInventoryItemTemplatesRead successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemTemplatesRead
        //instance.dcimInventoryItemTemplatesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemTemplatesUpdate', function() {
      it('should call dcimInventoryItemTemplatesUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemTemplatesUpdate
        //instance.dcimInventoryItemTemplatesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemsBulkDelete', function() {
      it('should call dcimInventoryItemsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemsBulkDelete
        //instance.dcimInventoryItemsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemsBulkPartialUpdate', function() {
      it('should call dcimInventoryItemsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemsBulkPartialUpdate
        //instance.dcimInventoryItemsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemsBulkUpdate', function() {
      it('should call dcimInventoryItemsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemsBulkUpdate
        //instance.dcimInventoryItemsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemsCreate', function() {
      it('should call dcimInventoryItemsCreate successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemsCreate
        //instance.dcimInventoryItemsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemsDelete', function() {
      it('should call dcimInventoryItemsDelete successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemsDelete
        //instance.dcimInventoryItemsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemsList', function() {
      it('should call dcimInventoryItemsList successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemsList
        //instance.dcimInventoryItemsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemsPartialUpdate', function() {
      it('should call dcimInventoryItemsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemsPartialUpdate
        //instance.dcimInventoryItemsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemsRead', function() {
      it('should call dcimInventoryItemsRead successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemsRead
        //instance.dcimInventoryItemsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimInventoryItemsUpdate', function() {
      it('should call dcimInventoryItemsUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimInventoryItemsUpdate
        //instance.dcimInventoryItemsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimLocationsBulkDelete', function() {
      it('should call dcimLocationsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimLocationsBulkDelete
        //instance.dcimLocationsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimLocationsBulkPartialUpdate', function() {
      it('should call dcimLocationsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimLocationsBulkPartialUpdate
        //instance.dcimLocationsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimLocationsBulkUpdate', function() {
      it('should call dcimLocationsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimLocationsBulkUpdate
        //instance.dcimLocationsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimLocationsCreate', function() {
      it('should call dcimLocationsCreate successfully', function(done) {
        //uncomment below and update the code to test dcimLocationsCreate
        //instance.dcimLocationsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimLocationsDelete', function() {
      it('should call dcimLocationsDelete successfully', function(done) {
        //uncomment below and update the code to test dcimLocationsDelete
        //instance.dcimLocationsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimLocationsList', function() {
      it('should call dcimLocationsList successfully', function(done) {
        //uncomment below and update the code to test dcimLocationsList
        //instance.dcimLocationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimLocationsPartialUpdate', function() {
      it('should call dcimLocationsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimLocationsPartialUpdate
        //instance.dcimLocationsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimLocationsRead', function() {
      it('should call dcimLocationsRead successfully', function(done) {
        //uncomment below and update the code to test dcimLocationsRead
        //instance.dcimLocationsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimLocationsUpdate', function() {
      it('should call dcimLocationsUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimLocationsUpdate
        //instance.dcimLocationsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimManufacturersBulkDelete', function() {
      it('should call dcimManufacturersBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimManufacturersBulkDelete
        //instance.dcimManufacturersBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimManufacturersBulkPartialUpdate', function() {
      it('should call dcimManufacturersBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimManufacturersBulkPartialUpdate
        //instance.dcimManufacturersBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimManufacturersBulkUpdate', function() {
      it('should call dcimManufacturersBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimManufacturersBulkUpdate
        //instance.dcimManufacturersBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimManufacturersCreate', function() {
      it('should call dcimManufacturersCreate successfully', function(done) {
        //uncomment below and update the code to test dcimManufacturersCreate
        //instance.dcimManufacturersCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimManufacturersDelete', function() {
      it('should call dcimManufacturersDelete successfully', function(done) {
        //uncomment below and update the code to test dcimManufacturersDelete
        //instance.dcimManufacturersDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimManufacturersList', function() {
      it('should call dcimManufacturersList successfully', function(done) {
        //uncomment below and update the code to test dcimManufacturersList
        //instance.dcimManufacturersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimManufacturersPartialUpdate', function() {
      it('should call dcimManufacturersPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimManufacturersPartialUpdate
        //instance.dcimManufacturersPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimManufacturersRead', function() {
      it('should call dcimManufacturersRead successfully', function(done) {
        //uncomment below and update the code to test dcimManufacturersRead
        //instance.dcimManufacturersRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimManufacturersUpdate', function() {
      it('should call dcimManufacturersUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimManufacturersUpdate
        //instance.dcimManufacturersUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleBayTemplatesBulkDelete', function() {
      it('should call dcimModuleBayTemplatesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimModuleBayTemplatesBulkDelete
        //instance.dcimModuleBayTemplatesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleBayTemplatesBulkPartialUpdate', function() {
      it('should call dcimModuleBayTemplatesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimModuleBayTemplatesBulkPartialUpdate
        //instance.dcimModuleBayTemplatesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleBayTemplatesBulkUpdate', function() {
      it('should call dcimModuleBayTemplatesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimModuleBayTemplatesBulkUpdate
        //instance.dcimModuleBayTemplatesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleBayTemplatesCreate', function() {
      it('should call dcimModuleBayTemplatesCreate successfully', function(done) {
        //uncomment below and update the code to test dcimModuleBayTemplatesCreate
        //instance.dcimModuleBayTemplatesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleBayTemplatesDelete', function() {
      it('should call dcimModuleBayTemplatesDelete successfully', function(done) {
        //uncomment below and update the code to test dcimModuleBayTemplatesDelete
        //instance.dcimModuleBayTemplatesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleBayTemplatesList', function() {
      it('should call dcimModuleBayTemplatesList successfully', function(done) {
        //uncomment below and update the code to test dcimModuleBayTemplatesList
        //instance.dcimModuleBayTemplatesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleBayTemplatesPartialUpdate', function() {
      it('should call dcimModuleBayTemplatesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimModuleBayTemplatesPartialUpdate
        //instance.dcimModuleBayTemplatesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleBayTemplatesRead', function() {
      it('should call dcimModuleBayTemplatesRead successfully', function(done) {
        //uncomment below and update the code to test dcimModuleBayTemplatesRead
        //instance.dcimModuleBayTemplatesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleBayTemplatesUpdate', function() {
      it('should call dcimModuleBayTemplatesUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimModuleBayTemplatesUpdate
        //instance.dcimModuleBayTemplatesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleBaysBulkDelete', function() {
      it('should call dcimModuleBaysBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimModuleBaysBulkDelete
        //instance.dcimModuleBaysBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleBaysBulkPartialUpdate', function() {
      it('should call dcimModuleBaysBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimModuleBaysBulkPartialUpdate
        //instance.dcimModuleBaysBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleBaysBulkUpdate', function() {
      it('should call dcimModuleBaysBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimModuleBaysBulkUpdate
        //instance.dcimModuleBaysBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleBaysCreate', function() {
      it('should call dcimModuleBaysCreate successfully', function(done) {
        //uncomment below and update the code to test dcimModuleBaysCreate
        //instance.dcimModuleBaysCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleBaysDelete', function() {
      it('should call dcimModuleBaysDelete successfully', function(done) {
        //uncomment below and update the code to test dcimModuleBaysDelete
        //instance.dcimModuleBaysDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleBaysList', function() {
      it('should call dcimModuleBaysList successfully', function(done) {
        //uncomment below and update the code to test dcimModuleBaysList
        //instance.dcimModuleBaysList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleBaysPartialUpdate', function() {
      it('should call dcimModuleBaysPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimModuleBaysPartialUpdate
        //instance.dcimModuleBaysPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleBaysRead', function() {
      it('should call dcimModuleBaysRead successfully', function(done) {
        //uncomment below and update the code to test dcimModuleBaysRead
        //instance.dcimModuleBaysRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleBaysUpdate', function() {
      it('should call dcimModuleBaysUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimModuleBaysUpdate
        //instance.dcimModuleBaysUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleTypesBulkDelete', function() {
      it('should call dcimModuleTypesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimModuleTypesBulkDelete
        //instance.dcimModuleTypesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleTypesBulkPartialUpdate', function() {
      it('should call dcimModuleTypesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimModuleTypesBulkPartialUpdate
        //instance.dcimModuleTypesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleTypesBulkUpdate', function() {
      it('should call dcimModuleTypesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimModuleTypesBulkUpdate
        //instance.dcimModuleTypesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleTypesCreate', function() {
      it('should call dcimModuleTypesCreate successfully', function(done) {
        //uncomment below and update the code to test dcimModuleTypesCreate
        //instance.dcimModuleTypesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleTypesDelete', function() {
      it('should call dcimModuleTypesDelete successfully', function(done) {
        //uncomment below and update the code to test dcimModuleTypesDelete
        //instance.dcimModuleTypesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleTypesList', function() {
      it('should call dcimModuleTypesList successfully', function(done) {
        //uncomment below and update the code to test dcimModuleTypesList
        //instance.dcimModuleTypesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleTypesPartialUpdate', function() {
      it('should call dcimModuleTypesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimModuleTypesPartialUpdate
        //instance.dcimModuleTypesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleTypesRead', function() {
      it('should call dcimModuleTypesRead successfully', function(done) {
        //uncomment below and update the code to test dcimModuleTypesRead
        //instance.dcimModuleTypesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModuleTypesUpdate', function() {
      it('should call dcimModuleTypesUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimModuleTypesUpdate
        //instance.dcimModuleTypesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModulesBulkDelete', function() {
      it('should call dcimModulesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimModulesBulkDelete
        //instance.dcimModulesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModulesBulkPartialUpdate', function() {
      it('should call dcimModulesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimModulesBulkPartialUpdate
        //instance.dcimModulesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModulesBulkUpdate', function() {
      it('should call dcimModulesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimModulesBulkUpdate
        //instance.dcimModulesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModulesCreate', function() {
      it('should call dcimModulesCreate successfully', function(done) {
        //uncomment below and update the code to test dcimModulesCreate
        //instance.dcimModulesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModulesDelete', function() {
      it('should call dcimModulesDelete successfully', function(done) {
        //uncomment below and update the code to test dcimModulesDelete
        //instance.dcimModulesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModulesList', function() {
      it('should call dcimModulesList successfully', function(done) {
        //uncomment below and update the code to test dcimModulesList
        //instance.dcimModulesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModulesPartialUpdate', function() {
      it('should call dcimModulesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimModulesPartialUpdate
        //instance.dcimModulesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModulesRead', function() {
      it('should call dcimModulesRead successfully', function(done) {
        //uncomment below and update the code to test dcimModulesRead
        //instance.dcimModulesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimModulesUpdate', function() {
      it('should call dcimModulesUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimModulesUpdate
        //instance.dcimModulesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPlatformsBulkDelete', function() {
      it('should call dcimPlatformsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimPlatformsBulkDelete
        //instance.dcimPlatformsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPlatformsBulkPartialUpdate', function() {
      it('should call dcimPlatformsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPlatformsBulkPartialUpdate
        //instance.dcimPlatformsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPlatformsBulkUpdate', function() {
      it('should call dcimPlatformsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPlatformsBulkUpdate
        //instance.dcimPlatformsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPlatformsCreate', function() {
      it('should call dcimPlatformsCreate successfully', function(done) {
        //uncomment below and update the code to test dcimPlatformsCreate
        //instance.dcimPlatformsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPlatformsDelete', function() {
      it('should call dcimPlatformsDelete successfully', function(done) {
        //uncomment below and update the code to test dcimPlatformsDelete
        //instance.dcimPlatformsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPlatformsList', function() {
      it('should call dcimPlatformsList successfully', function(done) {
        //uncomment below and update the code to test dcimPlatformsList
        //instance.dcimPlatformsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPlatformsPartialUpdate', function() {
      it('should call dcimPlatformsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPlatformsPartialUpdate
        //instance.dcimPlatformsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPlatformsRead', function() {
      it('should call dcimPlatformsRead successfully', function(done) {
        //uncomment below and update the code to test dcimPlatformsRead
        //instance.dcimPlatformsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPlatformsUpdate', function() {
      it('should call dcimPlatformsUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPlatformsUpdate
        //instance.dcimPlatformsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerFeedsBulkDelete', function() {
      it('should call dcimPowerFeedsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimPowerFeedsBulkDelete
        //instance.dcimPowerFeedsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerFeedsBulkPartialUpdate', function() {
      it('should call dcimPowerFeedsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerFeedsBulkPartialUpdate
        //instance.dcimPowerFeedsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerFeedsBulkUpdate', function() {
      it('should call dcimPowerFeedsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerFeedsBulkUpdate
        //instance.dcimPowerFeedsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerFeedsCreate', function() {
      it('should call dcimPowerFeedsCreate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerFeedsCreate
        //instance.dcimPowerFeedsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerFeedsDelete', function() {
      it('should call dcimPowerFeedsDelete successfully', function(done) {
        //uncomment below and update the code to test dcimPowerFeedsDelete
        //instance.dcimPowerFeedsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerFeedsList', function() {
      it('should call dcimPowerFeedsList successfully', function(done) {
        //uncomment below and update the code to test dcimPowerFeedsList
        //instance.dcimPowerFeedsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerFeedsPartialUpdate', function() {
      it('should call dcimPowerFeedsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerFeedsPartialUpdate
        //instance.dcimPowerFeedsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerFeedsRead', function() {
      it('should call dcimPowerFeedsRead successfully', function(done) {
        //uncomment below and update the code to test dcimPowerFeedsRead
        //instance.dcimPowerFeedsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerFeedsTrace', function() {
      it('should call dcimPowerFeedsTrace successfully', function(done) {
        //uncomment below and update the code to test dcimPowerFeedsTrace
        //instance.dcimPowerFeedsTrace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerFeedsUpdate', function() {
      it('should call dcimPowerFeedsUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerFeedsUpdate
        //instance.dcimPowerFeedsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerOutletTemplatesBulkDelete', function() {
      it('should call dcimPowerOutletTemplatesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimPowerOutletTemplatesBulkDelete
        //instance.dcimPowerOutletTemplatesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerOutletTemplatesBulkPartialUpdate', function() {
      it('should call dcimPowerOutletTemplatesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerOutletTemplatesBulkPartialUpdate
        //instance.dcimPowerOutletTemplatesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerOutletTemplatesBulkUpdate', function() {
      it('should call dcimPowerOutletTemplatesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerOutletTemplatesBulkUpdate
        //instance.dcimPowerOutletTemplatesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerOutletTemplatesCreate', function() {
      it('should call dcimPowerOutletTemplatesCreate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerOutletTemplatesCreate
        //instance.dcimPowerOutletTemplatesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerOutletTemplatesDelete', function() {
      it('should call dcimPowerOutletTemplatesDelete successfully', function(done) {
        //uncomment below and update the code to test dcimPowerOutletTemplatesDelete
        //instance.dcimPowerOutletTemplatesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerOutletTemplatesList', function() {
      it('should call dcimPowerOutletTemplatesList successfully', function(done) {
        //uncomment below and update the code to test dcimPowerOutletTemplatesList
        //instance.dcimPowerOutletTemplatesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerOutletTemplatesPartialUpdate', function() {
      it('should call dcimPowerOutletTemplatesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerOutletTemplatesPartialUpdate
        //instance.dcimPowerOutletTemplatesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerOutletTemplatesRead', function() {
      it('should call dcimPowerOutletTemplatesRead successfully', function(done) {
        //uncomment below and update the code to test dcimPowerOutletTemplatesRead
        //instance.dcimPowerOutletTemplatesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerOutletTemplatesUpdate', function() {
      it('should call dcimPowerOutletTemplatesUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerOutletTemplatesUpdate
        //instance.dcimPowerOutletTemplatesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerOutletsBulkDelete', function() {
      it('should call dcimPowerOutletsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimPowerOutletsBulkDelete
        //instance.dcimPowerOutletsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerOutletsBulkPartialUpdate', function() {
      it('should call dcimPowerOutletsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerOutletsBulkPartialUpdate
        //instance.dcimPowerOutletsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerOutletsBulkUpdate', function() {
      it('should call dcimPowerOutletsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerOutletsBulkUpdate
        //instance.dcimPowerOutletsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerOutletsCreate', function() {
      it('should call dcimPowerOutletsCreate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerOutletsCreate
        //instance.dcimPowerOutletsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerOutletsDelete', function() {
      it('should call dcimPowerOutletsDelete successfully', function(done) {
        //uncomment below and update the code to test dcimPowerOutletsDelete
        //instance.dcimPowerOutletsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerOutletsList', function() {
      it('should call dcimPowerOutletsList successfully', function(done) {
        //uncomment below and update the code to test dcimPowerOutletsList
        //instance.dcimPowerOutletsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerOutletsPartialUpdate', function() {
      it('should call dcimPowerOutletsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerOutletsPartialUpdate
        //instance.dcimPowerOutletsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerOutletsRead', function() {
      it('should call dcimPowerOutletsRead successfully', function(done) {
        //uncomment below and update the code to test dcimPowerOutletsRead
        //instance.dcimPowerOutletsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerOutletsTrace', function() {
      it('should call dcimPowerOutletsTrace successfully', function(done) {
        //uncomment below and update the code to test dcimPowerOutletsTrace
        //instance.dcimPowerOutletsTrace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerOutletsUpdate', function() {
      it('should call dcimPowerOutletsUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerOutletsUpdate
        //instance.dcimPowerOutletsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPanelsBulkDelete', function() {
      it('should call dcimPowerPanelsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPanelsBulkDelete
        //instance.dcimPowerPanelsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPanelsBulkPartialUpdate', function() {
      it('should call dcimPowerPanelsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPanelsBulkPartialUpdate
        //instance.dcimPowerPanelsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPanelsBulkUpdate', function() {
      it('should call dcimPowerPanelsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPanelsBulkUpdate
        //instance.dcimPowerPanelsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPanelsCreate', function() {
      it('should call dcimPowerPanelsCreate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPanelsCreate
        //instance.dcimPowerPanelsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPanelsDelete', function() {
      it('should call dcimPowerPanelsDelete successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPanelsDelete
        //instance.dcimPowerPanelsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPanelsList', function() {
      it('should call dcimPowerPanelsList successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPanelsList
        //instance.dcimPowerPanelsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPanelsPartialUpdate', function() {
      it('should call dcimPowerPanelsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPanelsPartialUpdate
        //instance.dcimPowerPanelsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPanelsRead', function() {
      it('should call dcimPowerPanelsRead successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPanelsRead
        //instance.dcimPowerPanelsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPanelsUpdate', function() {
      it('should call dcimPowerPanelsUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPanelsUpdate
        //instance.dcimPowerPanelsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPortTemplatesBulkDelete', function() {
      it('should call dcimPowerPortTemplatesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPortTemplatesBulkDelete
        //instance.dcimPowerPortTemplatesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPortTemplatesBulkPartialUpdate', function() {
      it('should call dcimPowerPortTemplatesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPortTemplatesBulkPartialUpdate
        //instance.dcimPowerPortTemplatesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPortTemplatesBulkUpdate', function() {
      it('should call dcimPowerPortTemplatesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPortTemplatesBulkUpdate
        //instance.dcimPowerPortTemplatesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPortTemplatesCreate', function() {
      it('should call dcimPowerPortTemplatesCreate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPortTemplatesCreate
        //instance.dcimPowerPortTemplatesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPortTemplatesDelete', function() {
      it('should call dcimPowerPortTemplatesDelete successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPortTemplatesDelete
        //instance.dcimPowerPortTemplatesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPortTemplatesList', function() {
      it('should call dcimPowerPortTemplatesList successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPortTemplatesList
        //instance.dcimPowerPortTemplatesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPortTemplatesPartialUpdate', function() {
      it('should call dcimPowerPortTemplatesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPortTemplatesPartialUpdate
        //instance.dcimPowerPortTemplatesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPortTemplatesRead', function() {
      it('should call dcimPowerPortTemplatesRead successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPortTemplatesRead
        //instance.dcimPowerPortTemplatesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPortTemplatesUpdate', function() {
      it('should call dcimPowerPortTemplatesUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPortTemplatesUpdate
        //instance.dcimPowerPortTemplatesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPortsBulkDelete', function() {
      it('should call dcimPowerPortsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPortsBulkDelete
        //instance.dcimPowerPortsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPortsBulkPartialUpdate', function() {
      it('should call dcimPowerPortsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPortsBulkPartialUpdate
        //instance.dcimPowerPortsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPortsBulkUpdate', function() {
      it('should call dcimPowerPortsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPortsBulkUpdate
        //instance.dcimPowerPortsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPortsCreate', function() {
      it('should call dcimPowerPortsCreate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPortsCreate
        //instance.dcimPowerPortsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPortsDelete', function() {
      it('should call dcimPowerPortsDelete successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPortsDelete
        //instance.dcimPowerPortsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPortsList', function() {
      it('should call dcimPowerPortsList successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPortsList
        //instance.dcimPowerPortsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPortsPartialUpdate', function() {
      it('should call dcimPowerPortsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPortsPartialUpdate
        //instance.dcimPowerPortsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPortsRead', function() {
      it('should call dcimPowerPortsRead successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPortsRead
        //instance.dcimPowerPortsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPortsTrace', function() {
      it('should call dcimPowerPortsTrace successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPortsTrace
        //instance.dcimPowerPortsTrace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimPowerPortsUpdate', function() {
      it('should call dcimPowerPortsUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimPowerPortsUpdate
        //instance.dcimPowerPortsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRackReservationsBulkDelete', function() {
      it('should call dcimRackReservationsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimRackReservationsBulkDelete
        //instance.dcimRackReservationsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRackReservationsBulkPartialUpdate', function() {
      it('should call dcimRackReservationsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimRackReservationsBulkPartialUpdate
        //instance.dcimRackReservationsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRackReservationsBulkUpdate', function() {
      it('should call dcimRackReservationsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimRackReservationsBulkUpdate
        //instance.dcimRackReservationsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRackReservationsCreate', function() {
      it('should call dcimRackReservationsCreate successfully', function(done) {
        //uncomment below and update the code to test dcimRackReservationsCreate
        //instance.dcimRackReservationsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRackReservationsDelete', function() {
      it('should call dcimRackReservationsDelete successfully', function(done) {
        //uncomment below and update the code to test dcimRackReservationsDelete
        //instance.dcimRackReservationsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRackReservationsList', function() {
      it('should call dcimRackReservationsList successfully', function(done) {
        //uncomment below and update the code to test dcimRackReservationsList
        //instance.dcimRackReservationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRackReservationsPartialUpdate', function() {
      it('should call dcimRackReservationsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimRackReservationsPartialUpdate
        //instance.dcimRackReservationsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRackReservationsRead', function() {
      it('should call dcimRackReservationsRead successfully', function(done) {
        //uncomment below and update the code to test dcimRackReservationsRead
        //instance.dcimRackReservationsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRackReservationsUpdate', function() {
      it('should call dcimRackReservationsUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimRackReservationsUpdate
        //instance.dcimRackReservationsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRackRolesBulkDelete', function() {
      it('should call dcimRackRolesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimRackRolesBulkDelete
        //instance.dcimRackRolesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRackRolesBulkPartialUpdate', function() {
      it('should call dcimRackRolesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimRackRolesBulkPartialUpdate
        //instance.dcimRackRolesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRackRolesBulkUpdate', function() {
      it('should call dcimRackRolesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimRackRolesBulkUpdate
        //instance.dcimRackRolesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRackRolesCreate', function() {
      it('should call dcimRackRolesCreate successfully', function(done) {
        //uncomment below and update the code to test dcimRackRolesCreate
        //instance.dcimRackRolesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRackRolesDelete', function() {
      it('should call dcimRackRolesDelete successfully', function(done) {
        //uncomment below and update the code to test dcimRackRolesDelete
        //instance.dcimRackRolesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRackRolesList', function() {
      it('should call dcimRackRolesList successfully', function(done) {
        //uncomment below and update the code to test dcimRackRolesList
        //instance.dcimRackRolesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRackRolesPartialUpdate', function() {
      it('should call dcimRackRolesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimRackRolesPartialUpdate
        //instance.dcimRackRolesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRackRolesRead', function() {
      it('should call dcimRackRolesRead successfully', function(done) {
        //uncomment below and update the code to test dcimRackRolesRead
        //instance.dcimRackRolesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRackRolesUpdate', function() {
      it('should call dcimRackRolesUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimRackRolesUpdate
        //instance.dcimRackRolesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRacksBulkDelete', function() {
      it('should call dcimRacksBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimRacksBulkDelete
        //instance.dcimRacksBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRacksBulkPartialUpdate', function() {
      it('should call dcimRacksBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimRacksBulkPartialUpdate
        //instance.dcimRacksBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRacksBulkUpdate', function() {
      it('should call dcimRacksBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimRacksBulkUpdate
        //instance.dcimRacksBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRacksCreate', function() {
      it('should call dcimRacksCreate successfully', function(done) {
        //uncomment below and update the code to test dcimRacksCreate
        //instance.dcimRacksCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRacksDelete', function() {
      it('should call dcimRacksDelete successfully', function(done) {
        //uncomment below and update the code to test dcimRacksDelete
        //instance.dcimRacksDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRacksElevation', function() {
      it('should call dcimRacksElevation successfully', function(done) {
        //uncomment below and update the code to test dcimRacksElevation
        //instance.dcimRacksElevation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRacksList', function() {
      it('should call dcimRacksList successfully', function(done) {
        //uncomment below and update the code to test dcimRacksList
        //instance.dcimRacksList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRacksPartialUpdate', function() {
      it('should call dcimRacksPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimRacksPartialUpdate
        //instance.dcimRacksPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRacksRead', function() {
      it('should call dcimRacksRead successfully', function(done) {
        //uncomment below and update the code to test dcimRacksRead
        //instance.dcimRacksRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRacksUpdate', function() {
      it('should call dcimRacksUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimRacksUpdate
        //instance.dcimRacksUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRearPortTemplatesBulkDelete', function() {
      it('should call dcimRearPortTemplatesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimRearPortTemplatesBulkDelete
        //instance.dcimRearPortTemplatesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRearPortTemplatesBulkPartialUpdate', function() {
      it('should call dcimRearPortTemplatesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimRearPortTemplatesBulkPartialUpdate
        //instance.dcimRearPortTemplatesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRearPortTemplatesBulkUpdate', function() {
      it('should call dcimRearPortTemplatesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimRearPortTemplatesBulkUpdate
        //instance.dcimRearPortTemplatesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRearPortTemplatesCreate', function() {
      it('should call dcimRearPortTemplatesCreate successfully', function(done) {
        //uncomment below and update the code to test dcimRearPortTemplatesCreate
        //instance.dcimRearPortTemplatesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRearPortTemplatesDelete', function() {
      it('should call dcimRearPortTemplatesDelete successfully', function(done) {
        //uncomment below and update the code to test dcimRearPortTemplatesDelete
        //instance.dcimRearPortTemplatesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRearPortTemplatesList', function() {
      it('should call dcimRearPortTemplatesList successfully', function(done) {
        //uncomment below and update the code to test dcimRearPortTemplatesList
        //instance.dcimRearPortTemplatesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRearPortTemplatesPartialUpdate', function() {
      it('should call dcimRearPortTemplatesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimRearPortTemplatesPartialUpdate
        //instance.dcimRearPortTemplatesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRearPortTemplatesRead', function() {
      it('should call dcimRearPortTemplatesRead successfully', function(done) {
        //uncomment below and update the code to test dcimRearPortTemplatesRead
        //instance.dcimRearPortTemplatesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRearPortTemplatesUpdate', function() {
      it('should call dcimRearPortTemplatesUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimRearPortTemplatesUpdate
        //instance.dcimRearPortTemplatesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRearPortsBulkDelete', function() {
      it('should call dcimRearPortsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimRearPortsBulkDelete
        //instance.dcimRearPortsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRearPortsBulkPartialUpdate', function() {
      it('should call dcimRearPortsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimRearPortsBulkPartialUpdate
        //instance.dcimRearPortsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRearPortsBulkUpdate', function() {
      it('should call dcimRearPortsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimRearPortsBulkUpdate
        //instance.dcimRearPortsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRearPortsCreate', function() {
      it('should call dcimRearPortsCreate successfully', function(done) {
        //uncomment below and update the code to test dcimRearPortsCreate
        //instance.dcimRearPortsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRearPortsDelete', function() {
      it('should call dcimRearPortsDelete successfully', function(done) {
        //uncomment below and update the code to test dcimRearPortsDelete
        //instance.dcimRearPortsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRearPortsList', function() {
      it('should call dcimRearPortsList successfully', function(done) {
        //uncomment below and update the code to test dcimRearPortsList
        //instance.dcimRearPortsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRearPortsPartialUpdate', function() {
      it('should call dcimRearPortsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimRearPortsPartialUpdate
        //instance.dcimRearPortsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRearPortsPaths', function() {
      it('should call dcimRearPortsPaths successfully', function(done) {
        //uncomment below and update the code to test dcimRearPortsPaths
        //instance.dcimRearPortsPaths(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRearPortsRead', function() {
      it('should call dcimRearPortsRead successfully', function(done) {
        //uncomment below and update the code to test dcimRearPortsRead
        //instance.dcimRearPortsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRearPortsUpdate', function() {
      it('should call dcimRearPortsUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimRearPortsUpdate
        //instance.dcimRearPortsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRegionsBulkDelete', function() {
      it('should call dcimRegionsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimRegionsBulkDelete
        //instance.dcimRegionsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRegionsBulkPartialUpdate', function() {
      it('should call dcimRegionsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimRegionsBulkPartialUpdate
        //instance.dcimRegionsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRegionsBulkUpdate', function() {
      it('should call dcimRegionsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimRegionsBulkUpdate
        //instance.dcimRegionsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRegionsCreate', function() {
      it('should call dcimRegionsCreate successfully', function(done) {
        //uncomment below and update the code to test dcimRegionsCreate
        //instance.dcimRegionsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRegionsDelete', function() {
      it('should call dcimRegionsDelete successfully', function(done) {
        //uncomment below and update the code to test dcimRegionsDelete
        //instance.dcimRegionsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRegionsList', function() {
      it('should call dcimRegionsList successfully', function(done) {
        //uncomment below and update the code to test dcimRegionsList
        //instance.dcimRegionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRegionsPartialUpdate', function() {
      it('should call dcimRegionsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimRegionsPartialUpdate
        //instance.dcimRegionsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRegionsRead', function() {
      it('should call dcimRegionsRead successfully', function(done) {
        //uncomment below and update the code to test dcimRegionsRead
        //instance.dcimRegionsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimRegionsUpdate', function() {
      it('should call dcimRegionsUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimRegionsUpdate
        //instance.dcimRegionsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimSiteGroupsBulkDelete', function() {
      it('should call dcimSiteGroupsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimSiteGroupsBulkDelete
        //instance.dcimSiteGroupsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimSiteGroupsBulkPartialUpdate', function() {
      it('should call dcimSiteGroupsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimSiteGroupsBulkPartialUpdate
        //instance.dcimSiteGroupsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimSiteGroupsBulkUpdate', function() {
      it('should call dcimSiteGroupsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimSiteGroupsBulkUpdate
        //instance.dcimSiteGroupsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimSiteGroupsCreate', function() {
      it('should call dcimSiteGroupsCreate successfully', function(done) {
        //uncomment below and update the code to test dcimSiteGroupsCreate
        //instance.dcimSiteGroupsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimSiteGroupsDelete', function() {
      it('should call dcimSiteGroupsDelete successfully', function(done) {
        //uncomment below and update the code to test dcimSiteGroupsDelete
        //instance.dcimSiteGroupsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimSiteGroupsList', function() {
      it('should call dcimSiteGroupsList successfully', function(done) {
        //uncomment below and update the code to test dcimSiteGroupsList
        //instance.dcimSiteGroupsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimSiteGroupsPartialUpdate', function() {
      it('should call dcimSiteGroupsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimSiteGroupsPartialUpdate
        //instance.dcimSiteGroupsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimSiteGroupsRead', function() {
      it('should call dcimSiteGroupsRead successfully', function(done) {
        //uncomment below and update the code to test dcimSiteGroupsRead
        //instance.dcimSiteGroupsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimSiteGroupsUpdate', function() {
      it('should call dcimSiteGroupsUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimSiteGroupsUpdate
        //instance.dcimSiteGroupsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimSitesBulkDelete', function() {
      it('should call dcimSitesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimSitesBulkDelete
        //instance.dcimSitesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimSitesBulkPartialUpdate', function() {
      it('should call dcimSitesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimSitesBulkPartialUpdate
        //instance.dcimSitesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimSitesBulkUpdate', function() {
      it('should call dcimSitesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimSitesBulkUpdate
        //instance.dcimSitesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimSitesCreate', function() {
      it('should call dcimSitesCreate successfully', function(done) {
        //uncomment below and update the code to test dcimSitesCreate
        //instance.dcimSitesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimSitesDelete', function() {
      it('should call dcimSitesDelete successfully', function(done) {
        //uncomment below and update the code to test dcimSitesDelete
        //instance.dcimSitesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimSitesList', function() {
      it('should call dcimSitesList successfully', function(done) {
        //uncomment below and update the code to test dcimSitesList
        //instance.dcimSitesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimSitesPartialUpdate', function() {
      it('should call dcimSitesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimSitesPartialUpdate
        //instance.dcimSitesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimSitesRead', function() {
      it('should call dcimSitesRead successfully', function(done) {
        //uncomment below and update the code to test dcimSitesRead
        //instance.dcimSitesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimSitesUpdate', function() {
      it('should call dcimSitesUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimSitesUpdate
        //instance.dcimSitesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimVirtualChassisBulkDelete', function() {
      it('should call dcimVirtualChassisBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimVirtualChassisBulkDelete
        //instance.dcimVirtualChassisBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimVirtualChassisBulkPartialUpdate', function() {
      it('should call dcimVirtualChassisBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimVirtualChassisBulkPartialUpdate
        //instance.dcimVirtualChassisBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimVirtualChassisBulkUpdate', function() {
      it('should call dcimVirtualChassisBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimVirtualChassisBulkUpdate
        //instance.dcimVirtualChassisBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimVirtualChassisCreate', function() {
      it('should call dcimVirtualChassisCreate successfully', function(done) {
        //uncomment below and update the code to test dcimVirtualChassisCreate
        //instance.dcimVirtualChassisCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimVirtualChassisDelete', function() {
      it('should call dcimVirtualChassisDelete successfully', function(done) {
        //uncomment below and update the code to test dcimVirtualChassisDelete
        //instance.dcimVirtualChassisDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimVirtualChassisList', function() {
      it('should call dcimVirtualChassisList successfully', function(done) {
        //uncomment below and update the code to test dcimVirtualChassisList
        //instance.dcimVirtualChassisList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimVirtualChassisPartialUpdate', function() {
      it('should call dcimVirtualChassisPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimVirtualChassisPartialUpdate
        //instance.dcimVirtualChassisPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimVirtualChassisRead', function() {
      it('should call dcimVirtualChassisRead successfully', function(done) {
        //uncomment below and update the code to test dcimVirtualChassisRead
        //instance.dcimVirtualChassisRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimVirtualChassisUpdate', function() {
      it('should call dcimVirtualChassisUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimVirtualChassisUpdate
        //instance.dcimVirtualChassisUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimVirtualDeviceContextsBulkDelete', function() {
      it('should call dcimVirtualDeviceContextsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test dcimVirtualDeviceContextsBulkDelete
        //instance.dcimVirtualDeviceContextsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimVirtualDeviceContextsBulkPartialUpdate', function() {
      it('should call dcimVirtualDeviceContextsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimVirtualDeviceContextsBulkPartialUpdate
        //instance.dcimVirtualDeviceContextsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimVirtualDeviceContextsBulkUpdate', function() {
      it('should call dcimVirtualDeviceContextsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimVirtualDeviceContextsBulkUpdate
        //instance.dcimVirtualDeviceContextsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimVirtualDeviceContextsCreate', function() {
      it('should call dcimVirtualDeviceContextsCreate successfully', function(done) {
        //uncomment below and update the code to test dcimVirtualDeviceContextsCreate
        //instance.dcimVirtualDeviceContextsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimVirtualDeviceContextsDelete', function() {
      it('should call dcimVirtualDeviceContextsDelete successfully', function(done) {
        //uncomment below and update the code to test dcimVirtualDeviceContextsDelete
        //instance.dcimVirtualDeviceContextsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimVirtualDeviceContextsList', function() {
      it('should call dcimVirtualDeviceContextsList successfully', function(done) {
        //uncomment below and update the code to test dcimVirtualDeviceContextsList
        //instance.dcimVirtualDeviceContextsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimVirtualDeviceContextsPartialUpdate', function() {
      it('should call dcimVirtualDeviceContextsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimVirtualDeviceContextsPartialUpdate
        //instance.dcimVirtualDeviceContextsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimVirtualDeviceContextsRead', function() {
      it('should call dcimVirtualDeviceContextsRead successfully', function(done) {
        //uncomment below and update the code to test dcimVirtualDeviceContextsRead
        //instance.dcimVirtualDeviceContextsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dcimVirtualDeviceContextsUpdate', function() {
      it('should call dcimVirtualDeviceContextsUpdate successfully', function(done) {
        //uncomment below and update the code to test dcimVirtualDeviceContextsUpdate
        //instance.dcimVirtualDeviceContextsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
