/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetBoxApi);
  }
}(this, function(expect, NetBoxApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetBoxApi.VirtualizationApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('VirtualizationApi', function() {
    describe('virtualizationClusterGroupsBulkDelete', function() {
      it('should call virtualizationClusterGroupsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test virtualizationClusterGroupsBulkDelete
        //instance.virtualizationClusterGroupsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationClusterGroupsBulkPartialUpdate', function() {
      it('should call virtualizationClusterGroupsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test virtualizationClusterGroupsBulkPartialUpdate
        //instance.virtualizationClusterGroupsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationClusterGroupsBulkUpdate', function() {
      it('should call virtualizationClusterGroupsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test virtualizationClusterGroupsBulkUpdate
        //instance.virtualizationClusterGroupsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationClusterGroupsCreate', function() {
      it('should call virtualizationClusterGroupsCreate successfully', function(done) {
        //uncomment below and update the code to test virtualizationClusterGroupsCreate
        //instance.virtualizationClusterGroupsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationClusterGroupsDelete', function() {
      it('should call virtualizationClusterGroupsDelete successfully', function(done) {
        //uncomment below and update the code to test virtualizationClusterGroupsDelete
        //instance.virtualizationClusterGroupsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationClusterGroupsList', function() {
      it('should call virtualizationClusterGroupsList successfully', function(done) {
        //uncomment below and update the code to test virtualizationClusterGroupsList
        //instance.virtualizationClusterGroupsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationClusterGroupsPartialUpdate', function() {
      it('should call virtualizationClusterGroupsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test virtualizationClusterGroupsPartialUpdate
        //instance.virtualizationClusterGroupsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationClusterGroupsRead', function() {
      it('should call virtualizationClusterGroupsRead successfully', function(done) {
        //uncomment below and update the code to test virtualizationClusterGroupsRead
        //instance.virtualizationClusterGroupsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationClusterGroupsUpdate', function() {
      it('should call virtualizationClusterGroupsUpdate successfully', function(done) {
        //uncomment below and update the code to test virtualizationClusterGroupsUpdate
        //instance.virtualizationClusterGroupsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationClusterTypesBulkDelete', function() {
      it('should call virtualizationClusterTypesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test virtualizationClusterTypesBulkDelete
        //instance.virtualizationClusterTypesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationClusterTypesBulkPartialUpdate', function() {
      it('should call virtualizationClusterTypesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test virtualizationClusterTypesBulkPartialUpdate
        //instance.virtualizationClusterTypesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationClusterTypesBulkUpdate', function() {
      it('should call virtualizationClusterTypesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test virtualizationClusterTypesBulkUpdate
        //instance.virtualizationClusterTypesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationClusterTypesCreate', function() {
      it('should call virtualizationClusterTypesCreate successfully', function(done) {
        //uncomment below and update the code to test virtualizationClusterTypesCreate
        //instance.virtualizationClusterTypesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationClusterTypesDelete', function() {
      it('should call virtualizationClusterTypesDelete successfully', function(done) {
        //uncomment below and update the code to test virtualizationClusterTypesDelete
        //instance.virtualizationClusterTypesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationClusterTypesList', function() {
      it('should call virtualizationClusterTypesList successfully', function(done) {
        //uncomment below and update the code to test virtualizationClusterTypesList
        //instance.virtualizationClusterTypesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationClusterTypesPartialUpdate', function() {
      it('should call virtualizationClusterTypesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test virtualizationClusterTypesPartialUpdate
        //instance.virtualizationClusterTypesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationClusterTypesRead', function() {
      it('should call virtualizationClusterTypesRead successfully', function(done) {
        //uncomment below and update the code to test virtualizationClusterTypesRead
        //instance.virtualizationClusterTypesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationClusterTypesUpdate', function() {
      it('should call virtualizationClusterTypesUpdate successfully', function(done) {
        //uncomment below and update the code to test virtualizationClusterTypesUpdate
        //instance.virtualizationClusterTypesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationClustersBulkDelete', function() {
      it('should call virtualizationClustersBulkDelete successfully', function(done) {
        //uncomment below and update the code to test virtualizationClustersBulkDelete
        //instance.virtualizationClustersBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationClustersBulkPartialUpdate', function() {
      it('should call virtualizationClustersBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test virtualizationClustersBulkPartialUpdate
        //instance.virtualizationClustersBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationClustersBulkUpdate', function() {
      it('should call virtualizationClustersBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test virtualizationClustersBulkUpdate
        //instance.virtualizationClustersBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationClustersCreate', function() {
      it('should call virtualizationClustersCreate successfully', function(done) {
        //uncomment below and update the code to test virtualizationClustersCreate
        //instance.virtualizationClustersCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationClustersDelete', function() {
      it('should call virtualizationClustersDelete successfully', function(done) {
        //uncomment below and update the code to test virtualizationClustersDelete
        //instance.virtualizationClustersDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationClustersList', function() {
      it('should call virtualizationClustersList successfully', function(done) {
        //uncomment below and update the code to test virtualizationClustersList
        //instance.virtualizationClustersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationClustersPartialUpdate', function() {
      it('should call virtualizationClustersPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test virtualizationClustersPartialUpdate
        //instance.virtualizationClustersPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationClustersRead', function() {
      it('should call virtualizationClustersRead successfully', function(done) {
        //uncomment below and update the code to test virtualizationClustersRead
        //instance.virtualizationClustersRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationClustersUpdate', function() {
      it('should call virtualizationClustersUpdate successfully', function(done) {
        //uncomment below and update the code to test virtualizationClustersUpdate
        //instance.virtualizationClustersUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationInterfacesBulkDelete', function() {
      it('should call virtualizationInterfacesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test virtualizationInterfacesBulkDelete
        //instance.virtualizationInterfacesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationInterfacesBulkPartialUpdate', function() {
      it('should call virtualizationInterfacesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test virtualizationInterfacesBulkPartialUpdate
        //instance.virtualizationInterfacesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationInterfacesBulkUpdate', function() {
      it('should call virtualizationInterfacesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test virtualizationInterfacesBulkUpdate
        //instance.virtualizationInterfacesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationInterfacesCreate', function() {
      it('should call virtualizationInterfacesCreate successfully', function(done) {
        //uncomment below and update the code to test virtualizationInterfacesCreate
        //instance.virtualizationInterfacesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationInterfacesDelete', function() {
      it('should call virtualizationInterfacesDelete successfully', function(done) {
        //uncomment below and update the code to test virtualizationInterfacesDelete
        //instance.virtualizationInterfacesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationInterfacesList', function() {
      it('should call virtualizationInterfacesList successfully', function(done) {
        //uncomment below and update the code to test virtualizationInterfacesList
        //instance.virtualizationInterfacesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationInterfacesPartialUpdate', function() {
      it('should call virtualizationInterfacesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test virtualizationInterfacesPartialUpdate
        //instance.virtualizationInterfacesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationInterfacesRead', function() {
      it('should call virtualizationInterfacesRead successfully', function(done) {
        //uncomment below and update the code to test virtualizationInterfacesRead
        //instance.virtualizationInterfacesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationInterfacesUpdate', function() {
      it('should call virtualizationInterfacesUpdate successfully', function(done) {
        //uncomment below and update the code to test virtualizationInterfacesUpdate
        //instance.virtualizationInterfacesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationVirtualMachinesBulkDelete', function() {
      it('should call virtualizationVirtualMachinesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test virtualizationVirtualMachinesBulkDelete
        //instance.virtualizationVirtualMachinesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationVirtualMachinesBulkPartialUpdate', function() {
      it('should call virtualizationVirtualMachinesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test virtualizationVirtualMachinesBulkPartialUpdate
        //instance.virtualizationVirtualMachinesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationVirtualMachinesBulkUpdate', function() {
      it('should call virtualizationVirtualMachinesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test virtualizationVirtualMachinesBulkUpdate
        //instance.virtualizationVirtualMachinesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationVirtualMachinesCreate', function() {
      it('should call virtualizationVirtualMachinesCreate successfully', function(done) {
        //uncomment below and update the code to test virtualizationVirtualMachinesCreate
        //instance.virtualizationVirtualMachinesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationVirtualMachinesDelete', function() {
      it('should call virtualizationVirtualMachinesDelete successfully', function(done) {
        //uncomment below and update the code to test virtualizationVirtualMachinesDelete
        //instance.virtualizationVirtualMachinesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationVirtualMachinesList', function() {
      it('should call virtualizationVirtualMachinesList successfully', function(done) {
        //uncomment below and update the code to test virtualizationVirtualMachinesList
        //instance.virtualizationVirtualMachinesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationVirtualMachinesPartialUpdate', function() {
      it('should call virtualizationVirtualMachinesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test virtualizationVirtualMachinesPartialUpdate
        //instance.virtualizationVirtualMachinesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationVirtualMachinesRead', function() {
      it('should call virtualizationVirtualMachinesRead successfully', function(done) {
        //uncomment below and update the code to test virtualizationVirtualMachinesRead
        //instance.virtualizationVirtualMachinesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtualizationVirtualMachinesUpdate', function() {
      it('should call virtualizationVirtualMachinesUpdate successfully', function(done) {
        //uncomment below and update the code to test virtualizationVirtualMachinesUpdate
        //instance.virtualizationVirtualMachinesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
