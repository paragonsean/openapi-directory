/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetBoxApi);
  }
}(this, function(expect, NetBoxApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetBoxApi.IpamApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('IpamApi', function() {
    describe('ipamAggregatesBulkDelete', function() {
      it('should call ipamAggregatesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test ipamAggregatesBulkDelete
        //instance.ipamAggregatesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamAggregatesBulkPartialUpdate', function() {
      it('should call ipamAggregatesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamAggregatesBulkPartialUpdate
        //instance.ipamAggregatesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamAggregatesBulkUpdate', function() {
      it('should call ipamAggregatesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamAggregatesBulkUpdate
        //instance.ipamAggregatesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamAggregatesCreate', function() {
      it('should call ipamAggregatesCreate successfully', function(done) {
        //uncomment below and update the code to test ipamAggregatesCreate
        //instance.ipamAggregatesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamAggregatesDelete', function() {
      it('should call ipamAggregatesDelete successfully', function(done) {
        //uncomment below and update the code to test ipamAggregatesDelete
        //instance.ipamAggregatesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamAggregatesList', function() {
      it('should call ipamAggregatesList successfully', function(done) {
        //uncomment below and update the code to test ipamAggregatesList
        //instance.ipamAggregatesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamAggregatesPartialUpdate', function() {
      it('should call ipamAggregatesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamAggregatesPartialUpdate
        //instance.ipamAggregatesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamAggregatesRead', function() {
      it('should call ipamAggregatesRead successfully', function(done) {
        //uncomment below and update the code to test ipamAggregatesRead
        //instance.ipamAggregatesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamAggregatesUpdate', function() {
      it('should call ipamAggregatesUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamAggregatesUpdate
        //instance.ipamAggregatesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamAsnsBulkDelete', function() {
      it('should call ipamAsnsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test ipamAsnsBulkDelete
        //instance.ipamAsnsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamAsnsBulkPartialUpdate', function() {
      it('should call ipamAsnsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamAsnsBulkPartialUpdate
        //instance.ipamAsnsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamAsnsBulkUpdate', function() {
      it('should call ipamAsnsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamAsnsBulkUpdate
        //instance.ipamAsnsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamAsnsCreate', function() {
      it('should call ipamAsnsCreate successfully', function(done) {
        //uncomment below and update the code to test ipamAsnsCreate
        //instance.ipamAsnsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamAsnsDelete', function() {
      it('should call ipamAsnsDelete successfully', function(done) {
        //uncomment below and update the code to test ipamAsnsDelete
        //instance.ipamAsnsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamAsnsList', function() {
      it('should call ipamAsnsList successfully', function(done) {
        //uncomment below and update the code to test ipamAsnsList
        //instance.ipamAsnsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamAsnsPartialUpdate', function() {
      it('should call ipamAsnsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamAsnsPartialUpdate
        //instance.ipamAsnsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamAsnsRead', function() {
      it('should call ipamAsnsRead successfully', function(done) {
        //uncomment below and update the code to test ipamAsnsRead
        //instance.ipamAsnsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamAsnsUpdate', function() {
      it('should call ipamAsnsUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamAsnsUpdate
        //instance.ipamAsnsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamFhrpGroupAssignmentsBulkDelete', function() {
      it('should call ipamFhrpGroupAssignmentsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test ipamFhrpGroupAssignmentsBulkDelete
        //instance.ipamFhrpGroupAssignmentsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamFhrpGroupAssignmentsBulkPartialUpdate', function() {
      it('should call ipamFhrpGroupAssignmentsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamFhrpGroupAssignmentsBulkPartialUpdate
        //instance.ipamFhrpGroupAssignmentsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamFhrpGroupAssignmentsBulkUpdate', function() {
      it('should call ipamFhrpGroupAssignmentsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamFhrpGroupAssignmentsBulkUpdate
        //instance.ipamFhrpGroupAssignmentsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamFhrpGroupAssignmentsCreate', function() {
      it('should call ipamFhrpGroupAssignmentsCreate successfully', function(done) {
        //uncomment below and update the code to test ipamFhrpGroupAssignmentsCreate
        //instance.ipamFhrpGroupAssignmentsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamFhrpGroupAssignmentsDelete', function() {
      it('should call ipamFhrpGroupAssignmentsDelete successfully', function(done) {
        //uncomment below and update the code to test ipamFhrpGroupAssignmentsDelete
        //instance.ipamFhrpGroupAssignmentsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamFhrpGroupAssignmentsList', function() {
      it('should call ipamFhrpGroupAssignmentsList successfully', function(done) {
        //uncomment below and update the code to test ipamFhrpGroupAssignmentsList
        //instance.ipamFhrpGroupAssignmentsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamFhrpGroupAssignmentsPartialUpdate', function() {
      it('should call ipamFhrpGroupAssignmentsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamFhrpGroupAssignmentsPartialUpdate
        //instance.ipamFhrpGroupAssignmentsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamFhrpGroupAssignmentsRead', function() {
      it('should call ipamFhrpGroupAssignmentsRead successfully', function(done) {
        //uncomment below and update the code to test ipamFhrpGroupAssignmentsRead
        //instance.ipamFhrpGroupAssignmentsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamFhrpGroupAssignmentsUpdate', function() {
      it('should call ipamFhrpGroupAssignmentsUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamFhrpGroupAssignmentsUpdate
        //instance.ipamFhrpGroupAssignmentsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamFhrpGroupsBulkDelete', function() {
      it('should call ipamFhrpGroupsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test ipamFhrpGroupsBulkDelete
        //instance.ipamFhrpGroupsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamFhrpGroupsBulkPartialUpdate', function() {
      it('should call ipamFhrpGroupsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamFhrpGroupsBulkPartialUpdate
        //instance.ipamFhrpGroupsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamFhrpGroupsBulkUpdate', function() {
      it('should call ipamFhrpGroupsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamFhrpGroupsBulkUpdate
        //instance.ipamFhrpGroupsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamFhrpGroupsCreate', function() {
      it('should call ipamFhrpGroupsCreate successfully', function(done) {
        //uncomment below and update the code to test ipamFhrpGroupsCreate
        //instance.ipamFhrpGroupsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamFhrpGroupsDelete', function() {
      it('should call ipamFhrpGroupsDelete successfully', function(done) {
        //uncomment below and update the code to test ipamFhrpGroupsDelete
        //instance.ipamFhrpGroupsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamFhrpGroupsList', function() {
      it('should call ipamFhrpGroupsList successfully', function(done) {
        //uncomment below and update the code to test ipamFhrpGroupsList
        //instance.ipamFhrpGroupsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamFhrpGroupsPartialUpdate', function() {
      it('should call ipamFhrpGroupsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamFhrpGroupsPartialUpdate
        //instance.ipamFhrpGroupsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamFhrpGroupsRead', function() {
      it('should call ipamFhrpGroupsRead successfully', function(done) {
        //uncomment below and update the code to test ipamFhrpGroupsRead
        //instance.ipamFhrpGroupsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamFhrpGroupsUpdate', function() {
      it('should call ipamFhrpGroupsUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamFhrpGroupsUpdate
        //instance.ipamFhrpGroupsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamIpAddressesBulkDelete', function() {
      it('should call ipamIpAddressesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test ipamIpAddressesBulkDelete
        //instance.ipamIpAddressesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamIpAddressesBulkPartialUpdate', function() {
      it('should call ipamIpAddressesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamIpAddressesBulkPartialUpdate
        //instance.ipamIpAddressesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamIpAddressesBulkUpdate', function() {
      it('should call ipamIpAddressesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamIpAddressesBulkUpdate
        //instance.ipamIpAddressesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamIpAddressesCreate', function() {
      it('should call ipamIpAddressesCreate successfully', function(done) {
        //uncomment below and update the code to test ipamIpAddressesCreate
        //instance.ipamIpAddressesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamIpAddressesDelete', function() {
      it('should call ipamIpAddressesDelete successfully', function(done) {
        //uncomment below and update the code to test ipamIpAddressesDelete
        //instance.ipamIpAddressesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamIpAddressesList', function() {
      it('should call ipamIpAddressesList successfully', function(done) {
        //uncomment below and update the code to test ipamIpAddressesList
        //instance.ipamIpAddressesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamIpAddressesPartialUpdate', function() {
      it('should call ipamIpAddressesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamIpAddressesPartialUpdate
        //instance.ipamIpAddressesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamIpAddressesRead', function() {
      it('should call ipamIpAddressesRead successfully', function(done) {
        //uncomment below and update the code to test ipamIpAddressesRead
        //instance.ipamIpAddressesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamIpAddressesUpdate', function() {
      it('should call ipamIpAddressesUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamIpAddressesUpdate
        //instance.ipamIpAddressesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamIpRangesAvailableIpsCreate', function() {
      it('should call ipamIpRangesAvailableIpsCreate successfully', function(done) {
        //uncomment below and update the code to test ipamIpRangesAvailableIpsCreate
        //instance.ipamIpRangesAvailableIpsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamIpRangesAvailableIpsList', function() {
      it('should call ipamIpRangesAvailableIpsList successfully', function(done) {
        //uncomment below and update the code to test ipamIpRangesAvailableIpsList
        //instance.ipamIpRangesAvailableIpsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamIpRangesBulkDelete', function() {
      it('should call ipamIpRangesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test ipamIpRangesBulkDelete
        //instance.ipamIpRangesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamIpRangesBulkPartialUpdate', function() {
      it('should call ipamIpRangesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamIpRangesBulkPartialUpdate
        //instance.ipamIpRangesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamIpRangesBulkUpdate', function() {
      it('should call ipamIpRangesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamIpRangesBulkUpdate
        //instance.ipamIpRangesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamIpRangesCreate', function() {
      it('should call ipamIpRangesCreate successfully', function(done) {
        //uncomment below and update the code to test ipamIpRangesCreate
        //instance.ipamIpRangesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamIpRangesDelete', function() {
      it('should call ipamIpRangesDelete successfully', function(done) {
        //uncomment below and update the code to test ipamIpRangesDelete
        //instance.ipamIpRangesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamIpRangesList', function() {
      it('should call ipamIpRangesList successfully', function(done) {
        //uncomment below and update the code to test ipamIpRangesList
        //instance.ipamIpRangesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamIpRangesPartialUpdate', function() {
      it('should call ipamIpRangesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamIpRangesPartialUpdate
        //instance.ipamIpRangesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamIpRangesRead', function() {
      it('should call ipamIpRangesRead successfully', function(done) {
        //uncomment below and update the code to test ipamIpRangesRead
        //instance.ipamIpRangesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamIpRangesUpdate', function() {
      it('should call ipamIpRangesUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamIpRangesUpdate
        //instance.ipamIpRangesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamL2vpnTerminationsBulkDelete', function() {
      it('should call ipamL2vpnTerminationsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test ipamL2vpnTerminationsBulkDelete
        //instance.ipamL2vpnTerminationsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamL2vpnTerminationsBulkPartialUpdate', function() {
      it('should call ipamL2vpnTerminationsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamL2vpnTerminationsBulkPartialUpdate
        //instance.ipamL2vpnTerminationsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamL2vpnTerminationsBulkUpdate', function() {
      it('should call ipamL2vpnTerminationsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamL2vpnTerminationsBulkUpdate
        //instance.ipamL2vpnTerminationsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamL2vpnTerminationsCreate', function() {
      it('should call ipamL2vpnTerminationsCreate successfully', function(done) {
        //uncomment below and update the code to test ipamL2vpnTerminationsCreate
        //instance.ipamL2vpnTerminationsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamL2vpnTerminationsDelete', function() {
      it('should call ipamL2vpnTerminationsDelete successfully', function(done) {
        //uncomment below and update the code to test ipamL2vpnTerminationsDelete
        //instance.ipamL2vpnTerminationsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamL2vpnTerminationsList', function() {
      it('should call ipamL2vpnTerminationsList successfully', function(done) {
        //uncomment below and update the code to test ipamL2vpnTerminationsList
        //instance.ipamL2vpnTerminationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamL2vpnTerminationsPartialUpdate', function() {
      it('should call ipamL2vpnTerminationsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamL2vpnTerminationsPartialUpdate
        //instance.ipamL2vpnTerminationsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamL2vpnTerminationsRead', function() {
      it('should call ipamL2vpnTerminationsRead successfully', function(done) {
        //uncomment below and update the code to test ipamL2vpnTerminationsRead
        //instance.ipamL2vpnTerminationsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamL2vpnTerminationsUpdate', function() {
      it('should call ipamL2vpnTerminationsUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamL2vpnTerminationsUpdate
        //instance.ipamL2vpnTerminationsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamL2vpnsBulkDelete', function() {
      it('should call ipamL2vpnsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test ipamL2vpnsBulkDelete
        //instance.ipamL2vpnsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamL2vpnsBulkPartialUpdate', function() {
      it('should call ipamL2vpnsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamL2vpnsBulkPartialUpdate
        //instance.ipamL2vpnsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamL2vpnsBulkUpdate', function() {
      it('should call ipamL2vpnsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamL2vpnsBulkUpdate
        //instance.ipamL2vpnsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamL2vpnsCreate', function() {
      it('should call ipamL2vpnsCreate successfully', function(done) {
        //uncomment below and update the code to test ipamL2vpnsCreate
        //instance.ipamL2vpnsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamL2vpnsDelete', function() {
      it('should call ipamL2vpnsDelete successfully', function(done) {
        //uncomment below and update the code to test ipamL2vpnsDelete
        //instance.ipamL2vpnsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamL2vpnsList', function() {
      it('should call ipamL2vpnsList successfully', function(done) {
        //uncomment below and update the code to test ipamL2vpnsList
        //instance.ipamL2vpnsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamL2vpnsPartialUpdate', function() {
      it('should call ipamL2vpnsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamL2vpnsPartialUpdate
        //instance.ipamL2vpnsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamL2vpnsRead', function() {
      it('should call ipamL2vpnsRead successfully', function(done) {
        //uncomment below and update the code to test ipamL2vpnsRead
        //instance.ipamL2vpnsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamL2vpnsUpdate', function() {
      it('should call ipamL2vpnsUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamL2vpnsUpdate
        //instance.ipamL2vpnsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamPrefixesAvailableIpsCreate', function() {
      it('should call ipamPrefixesAvailableIpsCreate successfully', function(done) {
        //uncomment below and update the code to test ipamPrefixesAvailableIpsCreate
        //instance.ipamPrefixesAvailableIpsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamPrefixesAvailableIpsList', function() {
      it('should call ipamPrefixesAvailableIpsList successfully', function(done) {
        //uncomment below and update the code to test ipamPrefixesAvailableIpsList
        //instance.ipamPrefixesAvailableIpsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamPrefixesAvailablePrefixesCreate', function() {
      it('should call ipamPrefixesAvailablePrefixesCreate successfully', function(done) {
        //uncomment below and update the code to test ipamPrefixesAvailablePrefixesCreate
        //instance.ipamPrefixesAvailablePrefixesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamPrefixesAvailablePrefixesList', function() {
      it('should call ipamPrefixesAvailablePrefixesList successfully', function(done) {
        //uncomment below and update the code to test ipamPrefixesAvailablePrefixesList
        //instance.ipamPrefixesAvailablePrefixesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamPrefixesBulkDelete', function() {
      it('should call ipamPrefixesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test ipamPrefixesBulkDelete
        //instance.ipamPrefixesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamPrefixesBulkPartialUpdate', function() {
      it('should call ipamPrefixesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamPrefixesBulkPartialUpdate
        //instance.ipamPrefixesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamPrefixesBulkUpdate', function() {
      it('should call ipamPrefixesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamPrefixesBulkUpdate
        //instance.ipamPrefixesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamPrefixesCreate', function() {
      it('should call ipamPrefixesCreate successfully', function(done) {
        //uncomment below and update the code to test ipamPrefixesCreate
        //instance.ipamPrefixesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamPrefixesDelete', function() {
      it('should call ipamPrefixesDelete successfully', function(done) {
        //uncomment below and update the code to test ipamPrefixesDelete
        //instance.ipamPrefixesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamPrefixesList', function() {
      it('should call ipamPrefixesList successfully', function(done) {
        //uncomment below and update the code to test ipamPrefixesList
        //instance.ipamPrefixesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamPrefixesPartialUpdate', function() {
      it('should call ipamPrefixesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamPrefixesPartialUpdate
        //instance.ipamPrefixesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamPrefixesRead', function() {
      it('should call ipamPrefixesRead successfully', function(done) {
        //uncomment below and update the code to test ipamPrefixesRead
        //instance.ipamPrefixesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamPrefixesUpdate', function() {
      it('should call ipamPrefixesUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamPrefixesUpdate
        //instance.ipamPrefixesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRirsBulkDelete', function() {
      it('should call ipamRirsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test ipamRirsBulkDelete
        //instance.ipamRirsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRirsBulkPartialUpdate', function() {
      it('should call ipamRirsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamRirsBulkPartialUpdate
        //instance.ipamRirsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRirsBulkUpdate', function() {
      it('should call ipamRirsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamRirsBulkUpdate
        //instance.ipamRirsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRirsCreate', function() {
      it('should call ipamRirsCreate successfully', function(done) {
        //uncomment below and update the code to test ipamRirsCreate
        //instance.ipamRirsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRirsDelete', function() {
      it('should call ipamRirsDelete successfully', function(done) {
        //uncomment below and update the code to test ipamRirsDelete
        //instance.ipamRirsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRirsList', function() {
      it('should call ipamRirsList successfully', function(done) {
        //uncomment below and update the code to test ipamRirsList
        //instance.ipamRirsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRirsPartialUpdate', function() {
      it('should call ipamRirsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamRirsPartialUpdate
        //instance.ipamRirsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRirsRead', function() {
      it('should call ipamRirsRead successfully', function(done) {
        //uncomment below and update the code to test ipamRirsRead
        //instance.ipamRirsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRirsUpdate', function() {
      it('should call ipamRirsUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamRirsUpdate
        //instance.ipamRirsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRolesBulkDelete', function() {
      it('should call ipamRolesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test ipamRolesBulkDelete
        //instance.ipamRolesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRolesBulkPartialUpdate', function() {
      it('should call ipamRolesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamRolesBulkPartialUpdate
        //instance.ipamRolesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRolesBulkUpdate', function() {
      it('should call ipamRolesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamRolesBulkUpdate
        //instance.ipamRolesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRolesCreate', function() {
      it('should call ipamRolesCreate successfully', function(done) {
        //uncomment below and update the code to test ipamRolesCreate
        //instance.ipamRolesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRolesDelete', function() {
      it('should call ipamRolesDelete successfully', function(done) {
        //uncomment below and update the code to test ipamRolesDelete
        //instance.ipamRolesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRolesList', function() {
      it('should call ipamRolesList successfully', function(done) {
        //uncomment below and update the code to test ipamRolesList
        //instance.ipamRolesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRolesPartialUpdate', function() {
      it('should call ipamRolesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamRolesPartialUpdate
        //instance.ipamRolesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRolesRead', function() {
      it('should call ipamRolesRead successfully', function(done) {
        //uncomment below and update the code to test ipamRolesRead
        //instance.ipamRolesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRolesUpdate', function() {
      it('should call ipamRolesUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamRolesUpdate
        //instance.ipamRolesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRouteTargetsBulkDelete', function() {
      it('should call ipamRouteTargetsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test ipamRouteTargetsBulkDelete
        //instance.ipamRouteTargetsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRouteTargetsBulkPartialUpdate', function() {
      it('should call ipamRouteTargetsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamRouteTargetsBulkPartialUpdate
        //instance.ipamRouteTargetsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRouteTargetsBulkUpdate', function() {
      it('should call ipamRouteTargetsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamRouteTargetsBulkUpdate
        //instance.ipamRouteTargetsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRouteTargetsCreate', function() {
      it('should call ipamRouteTargetsCreate successfully', function(done) {
        //uncomment below and update the code to test ipamRouteTargetsCreate
        //instance.ipamRouteTargetsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRouteTargetsDelete', function() {
      it('should call ipamRouteTargetsDelete successfully', function(done) {
        //uncomment below and update the code to test ipamRouteTargetsDelete
        //instance.ipamRouteTargetsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRouteTargetsList', function() {
      it('should call ipamRouteTargetsList successfully', function(done) {
        //uncomment below and update the code to test ipamRouteTargetsList
        //instance.ipamRouteTargetsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRouteTargetsPartialUpdate', function() {
      it('should call ipamRouteTargetsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamRouteTargetsPartialUpdate
        //instance.ipamRouteTargetsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRouteTargetsRead', function() {
      it('should call ipamRouteTargetsRead successfully', function(done) {
        //uncomment below and update the code to test ipamRouteTargetsRead
        //instance.ipamRouteTargetsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamRouteTargetsUpdate', function() {
      it('should call ipamRouteTargetsUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamRouteTargetsUpdate
        //instance.ipamRouteTargetsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamServiceTemplatesBulkDelete', function() {
      it('should call ipamServiceTemplatesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test ipamServiceTemplatesBulkDelete
        //instance.ipamServiceTemplatesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamServiceTemplatesBulkPartialUpdate', function() {
      it('should call ipamServiceTemplatesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamServiceTemplatesBulkPartialUpdate
        //instance.ipamServiceTemplatesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamServiceTemplatesBulkUpdate', function() {
      it('should call ipamServiceTemplatesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamServiceTemplatesBulkUpdate
        //instance.ipamServiceTemplatesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamServiceTemplatesCreate', function() {
      it('should call ipamServiceTemplatesCreate successfully', function(done) {
        //uncomment below and update the code to test ipamServiceTemplatesCreate
        //instance.ipamServiceTemplatesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamServiceTemplatesDelete', function() {
      it('should call ipamServiceTemplatesDelete successfully', function(done) {
        //uncomment below and update the code to test ipamServiceTemplatesDelete
        //instance.ipamServiceTemplatesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamServiceTemplatesList', function() {
      it('should call ipamServiceTemplatesList successfully', function(done) {
        //uncomment below and update the code to test ipamServiceTemplatesList
        //instance.ipamServiceTemplatesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamServiceTemplatesPartialUpdate', function() {
      it('should call ipamServiceTemplatesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamServiceTemplatesPartialUpdate
        //instance.ipamServiceTemplatesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamServiceTemplatesRead', function() {
      it('should call ipamServiceTemplatesRead successfully', function(done) {
        //uncomment below and update the code to test ipamServiceTemplatesRead
        //instance.ipamServiceTemplatesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamServiceTemplatesUpdate', function() {
      it('should call ipamServiceTemplatesUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamServiceTemplatesUpdate
        //instance.ipamServiceTemplatesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamServicesBulkDelete', function() {
      it('should call ipamServicesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test ipamServicesBulkDelete
        //instance.ipamServicesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamServicesBulkPartialUpdate', function() {
      it('should call ipamServicesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamServicesBulkPartialUpdate
        //instance.ipamServicesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamServicesBulkUpdate', function() {
      it('should call ipamServicesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamServicesBulkUpdate
        //instance.ipamServicesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamServicesCreate', function() {
      it('should call ipamServicesCreate successfully', function(done) {
        //uncomment below and update the code to test ipamServicesCreate
        //instance.ipamServicesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamServicesDelete', function() {
      it('should call ipamServicesDelete successfully', function(done) {
        //uncomment below and update the code to test ipamServicesDelete
        //instance.ipamServicesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamServicesList', function() {
      it('should call ipamServicesList successfully', function(done) {
        //uncomment below and update the code to test ipamServicesList
        //instance.ipamServicesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamServicesPartialUpdate', function() {
      it('should call ipamServicesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamServicesPartialUpdate
        //instance.ipamServicesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamServicesRead', function() {
      it('should call ipamServicesRead successfully', function(done) {
        //uncomment below and update the code to test ipamServicesRead
        //instance.ipamServicesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamServicesUpdate', function() {
      it('should call ipamServicesUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamServicesUpdate
        //instance.ipamServicesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVlanGroupsAvailableVlansCreate', function() {
      it('should call ipamVlanGroupsAvailableVlansCreate successfully', function(done) {
        //uncomment below and update the code to test ipamVlanGroupsAvailableVlansCreate
        //instance.ipamVlanGroupsAvailableVlansCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVlanGroupsAvailableVlansList', function() {
      it('should call ipamVlanGroupsAvailableVlansList successfully', function(done) {
        //uncomment below and update the code to test ipamVlanGroupsAvailableVlansList
        //instance.ipamVlanGroupsAvailableVlansList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVlanGroupsBulkDelete', function() {
      it('should call ipamVlanGroupsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test ipamVlanGroupsBulkDelete
        //instance.ipamVlanGroupsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVlanGroupsBulkPartialUpdate', function() {
      it('should call ipamVlanGroupsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamVlanGroupsBulkPartialUpdate
        //instance.ipamVlanGroupsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVlanGroupsBulkUpdate', function() {
      it('should call ipamVlanGroupsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamVlanGroupsBulkUpdate
        //instance.ipamVlanGroupsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVlanGroupsCreate', function() {
      it('should call ipamVlanGroupsCreate successfully', function(done) {
        //uncomment below and update the code to test ipamVlanGroupsCreate
        //instance.ipamVlanGroupsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVlanGroupsDelete', function() {
      it('should call ipamVlanGroupsDelete successfully', function(done) {
        //uncomment below and update the code to test ipamVlanGroupsDelete
        //instance.ipamVlanGroupsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVlanGroupsList', function() {
      it('should call ipamVlanGroupsList successfully', function(done) {
        //uncomment below and update the code to test ipamVlanGroupsList
        //instance.ipamVlanGroupsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVlanGroupsPartialUpdate', function() {
      it('should call ipamVlanGroupsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamVlanGroupsPartialUpdate
        //instance.ipamVlanGroupsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVlanGroupsRead', function() {
      it('should call ipamVlanGroupsRead successfully', function(done) {
        //uncomment below and update the code to test ipamVlanGroupsRead
        //instance.ipamVlanGroupsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVlanGroupsUpdate', function() {
      it('should call ipamVlanGroupsUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamVlanGroupsUpdate
        //instance.ipamVlanGroupsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVlansBulkDelete', function() {
      it('should call ipamVlansBulkDelete successfully', function(done) {
        //uncomment below and update the code to test ipamVlansBulkDelete
        //instance.ipamVlansBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVlansBulkPartialUpdate', function() {
      it('should call ipamVlansBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamVlansBulkPartialUpdate
        //instance.ipamVlansBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVlansBulkUpdate', function() {
      it('should call ipamVlansBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamVlansBulkUpdate
        //instance.ipamVlansBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVlansCreate', function() {
      it('should call ipamVlansCreate successfully', function(done) {
        //uncomment below and update the code to test ipamVlansCreate
        //instance.ipamVlansCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVlansDelete', function() {
      it('should call ipamVlansDelete successfully', function(done) {
        //uncomment below and update the code to test ipamVlansDelete
        //instance.ipamVlansDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVlansList', function() {
      it('should call ipamVlansList successfully', function(done) {
        //uncomment below and update the code to test ipamVlansList
        //instance.ipamVlansList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVlansPartialUpdate', function() {
      it('should call ipamVlansPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamVlansPartialUpdate
        //instance.ipamVlansPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVlansRead', function() {
      it('should call ipamVlansRead successfully', function(done) {
        //uncomment below and update the code to test ipamVlansRead
        //instance.ipamVlansRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVlansUpdate', function() {
      it('should call ipamVlansUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamVlansUpdate
        //instance.ipamVlansUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVrfsBulkDelete', function() {
      it('should call ipamVrfsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test ipamVrfsBulkDelete
        //instance.ipamVrfsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVrfsBulkPartialUpdate', function() {
      it('should call ipamVrfsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamVrfsBulkPartialUpdate
        //instance.ipamVrfsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVrfsBulkUpdate', function() {
      it('should call ipamVrfsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamVrfsBulkUpdate
        //instance.ipamVrfsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVrfsCreate', function() {
      it('should call ipamVrfsCreate successfully', function(done) {
        //uncomment below and update the code to test ipamVrfsCreate
        //instance.ipamVrfsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVrfsDelete', function() {
      it('should call ipamVrfsDelete successfully', function(done) {
        //uncomment below and update the code to test ipamVrfsDelete
        //instance.ipamVrfsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVrfsList', function() {
      it('should call ipamVrfsList successfully', function(done) {
        //uncomment below and update the code to test ipamVrfsList
        //instance.ipamVrfsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVrfsPartialUpdate', function() {
      it('should call ipamVrfsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamVrfsPartialUpdate
        //instance.ipamVrfsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVrfsRead', function() {
      it('should call ipamVrfsRead successfully', function(done) {
        //uncomment below and update the code to test ipamVrfsRead
        //instance.ipamVrfsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipamVrfsUpdate', function() {
      it('should call ipamVrfsUpdate successfully', function(done) {
        //uncomment below and update the code to test ipamVrfsUpdate
        //instance.ipamVrfsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
