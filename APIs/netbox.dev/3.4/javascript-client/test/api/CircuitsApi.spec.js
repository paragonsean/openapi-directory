/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetBoxApi);
  }
}(this, function(expect, NetBoxApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetBoxApi.CircuitsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CircuitsApi', function() {
    describe('circuitsCircuitTerminationsBulkDelete', function() {
      it('should call circuitsCircuitTerminationsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitTerminationsBulkDelete
        //instance.circuitsCircuitTerminationsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitTerminationsBulkPartialUpdate', function() {
      it('should call circuitsCircuitTerminationsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitTerminationsBulkPartialUpdate
        //instance.circuitsCircuitTerminationsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitTerminationsBulkUpdate', function() {
      it('should call circuitsCircuitTerminationsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitTerminationsBulkUpdate
        //instance.circuitsCircuitTerminationsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitTerminationsCreate', function() {
      it('should call circuitsCircuitTerminationsCreate successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitTerminationsCreate
        //instance.circuitsCircuitTerminationsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitTerminationsDelete', function() {
      it('should call circuitsCircuitTerminationsDelete successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitTerminationsDelete
        //instance.circuitsCircuitTerminationsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitTerminationsList', function() {
      it('should call circuitsCircuitTerminationsList successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitTerminationsList
        //instance.circuitsCircuitTerminationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitTerminationsPartialUpdate', function() {
      it('should call circuitsCircuitTerminationsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitTerminationsPartialUpdate
        //instance.circuitsCircuitTerminationsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitTerminationsPaths', function() {
      it('should call circuitsCircuitTerminationsPaths successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitTerminationsPaths
        //instance.circuitsCircuitTerminationsPaths(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitTerminationsRead', function() {
      it('should call circuitsCircuitTerminationsRead successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitTerminationsRead
        //instance.circuitsCircuitTerminationsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitTerminationsUpdate', function() {
      it('should call circuitsCircuitTerminationsUpdate successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitTerminationsUpdate
        //instance.circuitsCircuitTerminationsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitTypesBulkDelete', function() {
      it('should call circuitsCircuitTypesBulkDelete successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitTypesBulkDelete
        //instance.circuitsCircuitTypesBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitTypesBulkPartialUpdate', function() {
      it('should call circuitsCircuitTypesBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitTypesBulkPartialUpdate
        //instance.circuitsCircuitTypesBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitTypesBulkUpdate', function() {
      it('should call circuitsCircuitTypesBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitTypesBulkUpdate
        //instance.circuitsCircuitTypesBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitTypesCreate', function() {
      it('should call circuitsCircuitTypesCreate successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitTypesCreate
        //instance.circuitsCircuitTypesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitTypesDelete', function() {
      it('should call circuitsCircuitTypesDelete successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitTypesDelete
        //instance.circuitsCircuitTypesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitTypesList', function() {
      it('should call circuitsCircuitTypesList successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitTypesList
        //instance.circuitsCircuitTypesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitTypesPartialUpdate', function() {
      it('should call circuitsCircuitTypesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitTypesPartialUpdate
        //instance.circuitsCircuitTypesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitTypesRead', function() {
      it('should call circuitsCircuitTypesRead successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitTypesRead
        //instance.circuitsCircuitTypesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitTypesUpdate', function() {
      it('should call circuitsCircuitTypesUpdate successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitTypesUpdate
        //instance.circuitsCircuitTypesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitsBulkDelete', function() {
      it('should call circuitsCircuitsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitsBulkDelete
        //instance.circuitsCircuitsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitsBulkPartialUpdate', function() {
      it('should call circuitsCircuitsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitsBulkPartialUpdate
        //instance.circuitsCircuitsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitsBulkUpdate', function() {
      it('should call circuitsCircuitsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitsBulkUpdate
        //instance.circuitsCircuitsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitsCreate', function() {
      it('should call circuitsCircuitsCreate successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitsCreate
        //instance.circuitsCircuitsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitsDelete', function() {
      it('should call circuitsCircuitsDelete successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitsDelete
        //instance.circuitsCircuitsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitsList', function() {
      it('should call circuitsCircuitsList successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitsList
        //instance.circuitsCircuitsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitsPartialUpdate', function() {
      it('should call circuitsCircuitsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitsPartialUpdate
        //instance.circuitsCircuitsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitsRead', function() {
      it('should call circuitsCircuitsRead successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitsRead
        //instance.circuitsCircuitsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsCircuitsUpdate', function() {
      it('should call circuitsCircuitsUpdate successfully', function(done) {
        //uncomment below and update the code to test circuitsCircuitsUpdate
        //instance.circuitsCircuitsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsProviderNetworksBulkDelete', function() {
      it('should call circuitsProviderNetworksBulkDelete successfully', function(done) {
        //uncomment below and update the code to test circuitsProviderNetworksBulkDelete
        //instance.circuitsProviderNetworksBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsProviderNetworksBulkPartialUpdate', function() {
      it('should call circuitsProviderNetworksBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test circuitsProviderNetworksBulkPartialUpdate
        //instance.circuitsProviderNetworksBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsProviderNetworksBulkUpdate', function() {
      it('should call circuitsProviderNetworksBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test circuitsProviderNetworksBulkUpdate
        //instance.circuitsProviderNetworksBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsProviderNetworksCreate', function() {
      it('should call circuitsProviderNetworksCreate successfully', function(done) {
        //uncomment below and update the code to test circuitsProviderNetworksCreate
        //instance.circuitsProviderNetworksCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsProviderNetworksDelete', function() {
      it('should call circuitsProviderNetworksDelete successfully', function(done) {
        //uncomment below and update the code to test circuitsProviderNetworksDelete
        //instance.circuitsProviderNetworksDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsProviderNetworksList', function() {
      it('should call circuitsProviderNetworksList successfully', function(done) {
        //uncomment below and update the code to test circuitsProviderNetworksList
        //instance.circuitsProviderNetworksList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsProviderNetworksPartialUpdate', function() {
      it('should call circuitsProviderNetworksPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test circuitsProviderNetworksPartialUpdate
        //instance.circuitsProviderNetworksPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsProviderNetworksRead', function() {
      it('should call circuitsProviderNetworksRead successfully', function(done) {
        //uncomment below and update the code to test circuitsProviderNetworksRead
        //instance.circuitsProviderNetworksRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsProviderNetworksUpdate', function() {
      it('should call circuitsProviderNetworksUpdate successfully', function(done) {
        //uncomment below and update the code to test circuitsProviderNetworksUpdate
        //instance.circuitsProviderNetworksUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsProvidersBulkDelete', function() {
      it('should call circuitsProvidersBulkDelete successfully', function(done) {
        //uncomment below and update the code to test circuitsProvidersBulkDelete
        //instance.circuitsProvidersBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsProvidersBulkPartialUpdate', function() {
      it('should call circuitsProvidersBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test circuitsProvidersBulkPartialUpdate
        //instance.circuitsProvidersBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsProvidersBulkUpdate', function() {
      it('should call circuitsProvidersBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test circuitsProvidersBulkUpdate
        //instance.circuitsProvidersBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsProvidersCreate', function() {
      it('should call circuitsProvidersCreate successfully', function(done) {
        //uncomment below and update the code to test circuitsProvidersCreate
        //instance.circuitsProvidersCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsProvidersDelete', function() {
      it('should call circuitsProvidersDelete successfully', function(done) {
        //uncomment below and update the code to test circuitsProvidersDelete
        //instance.circuitsProvidersDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsProvidersList', function() {
      it('should call circuitsProvidersList successfully', function(done) {
        //uncomment below and update the code to test circuitsProvidersList
        //instance.circuitsProvidersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsProvidersPartialUpdate', function() {
      it('should call circuitsProvidersPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test circuitsProvidersPartialUpdate
        //instance.circuitsProvidersPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsProvidersRead', function() {
      it('should call circuitsProvidersRead successfully', function(done) {
        //uncomment below and update the code to test circuitsProvidersRead
        //instance.circuitsProvidersRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('circuitsProvidersUpdate', function() {
      it('should call circuitsProvidersUpdate successfully', function(done) {
        //uncomment below and update the code to test circuitsProvidersUpdate
        //instance.circuitsProvidersUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
