/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetBoxApi);
  }
}(this, function(expect, NetBoxApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetBoxApi.WirelessApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('WirelessApi', function() {
    describe('wirelessWirelessLanGroupsBulkDelete', function() {
      it('should call wirelessWirelessLanGroupsBulkDelete successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLanGroupsBulkDelete
        //instance.wirelessWirelessLanGroupsBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wirelessWirelessLanGroupsBulkPartialUpdate', function() {
      it('should call wirelessWirelessLanGroupsBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLanGroupsBulkPartialUpdate
        //instance.wirelessWirelessLanGroupsBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wirelessWirelessLanGroupsBulkUpdate', function() {
      it('should call wirelessWirelessLanGroupsBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLanGroupsBulkUpdate
        //instance.wirelessWirelessLanGroupsBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wirelessWirelessLanGroupsCreate', function() {
      it('should call wirelessWirelessLanGroupsCreate successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLanGroupsCreate
        //instance.wirelessWirelessLanGroupsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wirelessWirelessLanGroupsDelete', function() {
      it('should call wirelessWirelessLanGroupsDelete successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLanGroupsDelete
        //instance.wirelessWirelessLanGroupsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wirelessWirelessLanGroupsList', function() {
      it('should call wirelessWirelessLanGroupsList successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLanGroupsList
        //instance.wirelessWirelessLanGroupsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wirelessWirelessLanGroupsPartialUpdate', function() {
      it('should call wirelessWirelessLanGroupsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLanGroupsPartialUpdate
        //instance.wirelessWirelessLanGroupsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wirelessWirelessLanGroupsRead', function() {
      it('should call wirelessWirelessLanGroupsRead successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLanGroupsRead
        //instance.wirelessWirelessLanGroupsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wirelessWirelessLanGroupsUpdate', function() {
      it('should call wirelessWirelessLanGroupsUpdate successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLanGroupsUpdate
        //instance.wirelessWirelessLanGroupsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wirelessWirelessLansBulkDelete', function() {
      it('should call wirelessWirelessLansBulkDelete successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLansBulkDelete
        //instance.wirelessWirelessLansBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wirelessWirelessLansBulkPartialUpdate', function() {
      it('should call wirelessWirelessLansBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLansBulkPartialUpdate
        //instance.wirelessWirelessLansBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wirelessWirelessLansBulkUpdate', function() {
      it('should call wirelessWirelessLansBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLansBulkUpdate
        //instance.wirelessWirelessLansBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wirelessWirelessLansCreate', function() {
      it('should call wirelessWirelessLansCreate successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLansCreate
        //instance.wirelessWirelessLansCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wirelessWirelessLansDelete', function() {
      it('should call wirelessWirelessLansDelete successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLansDelete
        //instance.wirelessWirelessLansDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wirelessWirelessLansList', function() {
      it('should call wirelessWirelessLansList successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLansList
        //instance.wirelessWirelessLansList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wirelessWirelessLansPartialUpdate', function() {
      it('should call wirelessWirelessLansPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLansPartialUpdate
        //instance.wirelessWirelessLansPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wirelessWirelessLansRead', function() {
      it('should call wirelessWirelessLansRead successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLansRead
        //instance.wirelessWirelessLansRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wirelessWirelessLansUpdate', function() {
      it('should call wirelessWirelessLansUpdate successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLansUpdate
        //instance.wirelessWirelessLansUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wirelessWirelessLinksBulkDelete', function() {
      it('should call wirelessWirelessLinksBulkDelete successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLinksBulkDelete
        //instance.wirelessWirelessLinksBulkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wirelessWirelessLinksBulkPartialUpdate', function() {
      it('should call wirelessWirelessLinksBulkPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLinksBulkPartialUpdate
        //instance.wirelessWirelessLinksBulkPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wirelessWirelessLinksBulkUpdate', function() {
      it('should call wirelessWirelessLinksBulkUpdate successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLinksBulkUpdate
        //instance.wirelessWirelessLinksBulkUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wirelessWirelessLinksCreate', function() {
      it('should call wirelessWirelessLinksCreate successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLinksCreate
        //instance.wirelessWirelessLinksCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wirelessWirelessLinksDelete', function() {
      it('should call wirelessWirelessLinksDelete successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLinksDelete
        //instance.wirelessWirelessLinksDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wirelessWirelessLinksList', function() {
      it('should call wirelessWirelessLinksList successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLinksList
        //instance.wirelessWirelessLinksList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wirelessWirelessLinksPartialUpdate', function() {
      it('should call wirelessWirelessLinksPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLinksPartialUpdate
        //instance.wirelessWirelessLinksPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wirelessWirelessLinksRead', function() {
      it('should call wirelessWirelessLinksRead successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLinksRead
        //instance.wirelessWirelessLinksRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wirelessWirelessLinksUpdate', function() {
      it('should call wirelessWirelessLinksUpdate successfully', function(done) {
        //uncomment below and update the code to test wirelessWirelessLinksUpdate
        //instance.wirelessWirelessLinksUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
