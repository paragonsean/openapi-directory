/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import WirelessLAN from '../model/WirelessLAN';
import WirelessLANGroup from '../model/WirelessLANGroup';
import WirelessLink from '../model/WirelessLink';
import WirelessWirelessLanGroupsList200Response from '../model/WirelessWirelessLanGroupsList200Response';
import WirelessWirelessLansList200Response from '../model/WirelessWirelessLansList200Response';
import WirelessWirelessLinksList200Response from '../model/WirelessWirelessLinksList200Response';
import WritableWirelessLAN from '../model/WritableWirelessLAN';
import WritableWirelessLANGroup from '../model/WritableWirelessLANGroup';
import WritableWirelessLink from '../model/WritableWirelessLink';

/**
* Wireless service.
* @module api/WirelessApi
* @version 3.4
*/
export default class WirelessApi {

    /**
    * Constructs a new WirelessApi. 
    * @alias module:api/WirelessApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the wirelessWirelessLanGroupsBulkDelete operation.
     * @callback module:api/WirelessApi~wirelessWirelessLanGroupsBulkDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:api/WirelessApi~wirelessWirelessLanGroupsBulkDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    wirelessWirelessLanGroupsBulkDelete(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/wireless/wireless-lan-groups/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wirelessWirelessLanGroupsBulkPartialUpdate operation.
     * @callback module:api/WirelessApi~wirelessWirelessLanGroupsBulkPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WirelessLANGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/WritableWirelessLANGroup} writableWirelessLANGroup 
     * @param {module:api/WirelessApi~wirelessWirelessLanGroupsBulkPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WirelessLANGroup}
     */
    wirelessWirelessLanGroupsBulkPartialUpdate(writableWirelessLANGroup, callback) {
      let postBody = writableWirelessLANGroup;
      // verify the required parameter 'writableWirelessLANGroup' is set
      if (writableWirelessLANGroup === undefined || writableWirelessLANGroup === null) {
        throw new Error("Missing the required parameter 'writableWirelessLANGroup' when calling wirelessWirelessLanGroupsBulkPartialUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WirelessLANGroup;
      return this.apiClient.callApi(
        '/wireless/wireless-lan-groups/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wirelessWirelessLanGroupsBulkUpdate operation.
     * @callback module:api/WirelessApi~wirelessWirelessLanGroupsBulkUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WirelessLANGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/WritableWirelessLANGroup} writableWirelessLANGroup 
     * @param {module:api/WirelessApi~wirelessWirelessLanGroupsBulkUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WirelessLANGroup}
     */
    wirelessWirelessLanGroupsBulkUpdate(writableWirelessLANGroup, callback) {
      let postBody = writableWirelessLANGroup;
      // verify the required parameter 'writableWirelessLANGroup' is set
      if (writableWirelessLANGroup === undefined || writableWirelessLANGroup === null) {
        throw new Error("Missing the required parameter 'writableWirelessLANGroup' when calling wirelessWirelessLanGroupsBulkUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WirelessLANGroup;
      return this.apiClient.callApi(
        '/wireless/wireless-lan-groups/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wirelessWirelessLanGroupsCreate operation.
     * @callback module:api/WirelessApi~wirelessWirelessLanGroupsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WirelessLANGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/WritableWirelessLANGroup} writableWirelessLANGroup 
     * @param {module:api/WirelessApi~wirelessWirelessLanGroupsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WirelessLANGroup}
     */
    wirelessWirelessLanGroupsCreate(writableWirelessLANGroup, callback) {
      let postBody = writableWirelessLANGroup;
      // verify the required parameter 'writableWirelessLANGroup' is set
      if (writableWirelessLANGroup === undefined || writableWirelessLANGroup === null) {
        throw new Error("Missing the required parameter 'writableWirelessLANGroup' when calling wirelessWirelessLanGroupsCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WirelessLANGroup;
      return this.apiClient.callApi(
        '/wireless/wireless-lan-groups/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wirelessWirelessLanGroupsDelete operation.
     * @callback module:api/WirelessApi~wirelessWirelessLanGroupsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this Wireless LAN Group.
     * @param {module:api/WirelessApi~wirelessWirelessLanGroupsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    wirelessWirelessLanGroupsDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling wirelessWirelessLanGroupsDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/wireless/wireless-lan-groups/{id}/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wirelessWirelessLanGroupsList operation.
     * @callback module:api/WirelessApi~wirelessWirelessLanGroupsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WirelessWirelessLanGroupsList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Object} opts Optional parameters
     * @param {String} [id] 
     * @param {String} [name] 
     * @param {String} [slug] 
     * @param {String} [description] 
     * @param {String} [created] 
     * @param {String} [lastUpdated] 
     * @param {String} [q] 
     * @param {String} [tag] 
     * @param {String} [parentId] 
     * @param {String} [parent] 
     * @param {String} [idN] 
     * @param {String} [idLte] 
     * @param {String} [idLt] 
     * @param {String} [idGte] 
     * @param {String} [idGt] 
     * @param {String} [nameN] 
     * @param {String} [nameIc] 
     * @param {String} [nameNic] 
     * @param {String} [nameIew] 
     * @param {String} [nameNiew] 
     * @param {String} [nameIsw] 
     * @param {String} [nameNisw] 
     * @param {String} [nameIe] 
     * @param {String} [nameNie] 
     * @param {String} [nameEmpty] 
     * @param {String} [slugN] 
     * @param {String} [slugIc] 
     * @param {String} [slugNic] 
     * @param {String} [slugIew] 
     * @param {String} [slugNiew] 
     * @param {String} [slugIsw] 
     * @param {String} [slugNisw] 
     * @param {String} [slugIe] 
     * @param {String} [slugNie] 
     * @param {String} [slugEmpty] 
     * @param {String} [descriptionN] 
     * @param {String} [descriptionIc] 
     * @param {String} [descriptionNic] 
     * @param {String} [descriptionIew] 
     * @param {String} [descriptionNiew] 
     * @param {String} [descriptionIsw] 
     * @param {String} [descriptionNisw] 
     * @param {String} [descriptionIe] 
     * @param {String} [descriptionNie] 
     * @param {String} [descriptionEmpty] 
     * @param {String} [createdN] 
     * @param {String} [createdLte] 
     * @param {String} [createdLt] 
     * @param {String} [createdGte] 
     * @param {String} [createdGt] 
     * @param {String} [lastUpdatedN] 
     * @param {String} [lastUpdatedLte] 
     * @param {String} [lastUpdatedLt] 
     * @param {String} [lastUpdatedGte] 
     * @param {String} [lastUpdatedGt] 
     * @param {String} [tagN] 
     * @param {String} [parentIdN] 
     * @param {String} [parentN] 
     * @param {String} [ordering] Which field to use when ordering the results.
     * @param {Number} [limit] Number of results to return per page.
     * @param {Number} [offset] The initial index from which to return the results.
     * @param {module:api/WirelessApi~wirelessWirelessLanGroupsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WirelessWirelessLanGroupsList200Response}
     */
    wirelessWirelessLanGroupsList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'id': opts['id'],
        'name': opts['name'],
        'slug': opts['slug'],
        'description': opts['description'],
        'created': opts['created'],
        'last_updated': opts['lastUpdated'],
        'q': opts['q'],
        'tag': opts['tag'],
        'parent_id': opts['parentId'],
        'parent': opts['parent'],
        'id__n': opts['idN'],
        'id__lte': opts['idLte'],
        'id__lt': opts['idLt'],
        'id__gte': opts['idGte'],
        'id__gt': opts['idGt'],
        'name__n': opts['nameN'],
        'name__ic': opts['nameIc'],
        'name__nic': opts['nameNic'],
        'name__iew': opts['nameIew'],
        'name__niew': opts['nameNiew'],
        'name__isw': opts['nameIsw'],
        'name__nisw': opts['nameNisw'],
        'name__ie': opts['nameIe'],
        'name__nie': opts['nameNie'],
        'name__empty': opts['nameEmpty'],
        'slug__n': opts['slugN'],
        'slug__ic': opts['slugIc'],
        'slug__nic': opts['slugNic'],
        'slug__iew': opts['slugIew'],
        'slug__niew': opts['slugNiew'],
        'slug__isw': opts['slugIsw'],
        'slug__nisw': opts['slugNisw'],
        'slug__ie': opts['slugIe'],
        'slug__nie': opts['slugNie'],
        'slug__empty': opts['slugEmpty'],
        'description__n': opts['descriptionN'],
        'description__ic': opts['descriptionIc'],
        'description__nic': opts['descriptionNic'],
        'description__iew': opts['descriptionIew'],
        'description__niew': opts['descriptionNiew'],
        'description__isw': opts['descriptionIsw'],
        'description__nisw': opts['descriptionNisw'],
        'description__ie': opts['descriptionIe'],
        'description__nie': opts['descriptionNie'],
        'description__empty': opts['descriptionEmpty'],
        'created__n': opts['createdN'],
        'created__lte': opts['createdLte'],
        'created__lt': opts['createdLt'],
        'created__gte': opts['createdGte'],
        'created__gt': opts['createdGt'],
        'last_updated__n': opts['lastUpdatedN'],
        'last_updated__lte': opts['lastUpdatedLte'],
        'last_updated__lt': opts['lastUpdatedLt'],
        'last_updated__gte': opts['lastUpdatedGte'],
        'last_updated__gt': opts['lastUpdatedGt'],
        'tag__n': opts['tagN'],
        'parent_id__n': opts['parentIdN'],
        'parent__n': opts['parentN'],
        'ordering': opts['ordering'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WirelessWirelessLanGroupsList200Response;
      return this.apiClient.callApi(
        '/wireless/wireless-lan-groups/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wirelessWirelessLanGroupsPartialUpdate operation.
     * @callback module:api/WirelessApi~wirelessWirelessLanGroupsPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WirelessLANGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this Wireless LAN Group.
     * @param {module:model/WritableWirelessLANGroup} writableWirelessLANGroup 
     * @param {module:api/WirelessApi~wirelessWirelessLanGroupsPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WirelessLANGroup}
     */
    wirelessWirelessLanGroupsPartialUpdate(id, writableWirelessLANGroup, callback) {
      let postBody = writableWirelessLANGroup;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling wirelessWirelessLanGroupsPartialUpdate");
      }
      // verify the required parameter 'writableWirelessLANGroup' is set
      if (writableWirelessLANGroup === undefined || writableWirelessLANGroup === null) {
        throw new Error("Missing the required parameter 'writableWirelessLANGroup' when calling wirelessWirelessLanGroupsPartialUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WirelessLANGroup;
      return this.apiClient.callApi(
        '/wireless/wireless-lan-groups/{id}/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wirelessWirelessLanGroupsRead operation.
     * @callback module:api/WirelessApi~wirelessWirelessLanGroupsReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WirelessLANGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this Wireless LAN Group.
     * @param {module:api/WirelessApi~wirelessWirelessLanGroupsReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WirelessLANGroup}
     */
    wirelessWirelessLanGroupsRead(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling wirelessWirelessLanGroupsRead");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WirelessLANGroup;
      return this.apiClient.callApi(
        '/wireless/wireless-lan-groups/{id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wirelessWirelessLanGroupsUpdate operation.
     * @callback module:api/WirelessApi~wirelessWirelessLanGroupsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WirelessLANGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this Wireless LAN Group.
     * @param {module:model/WritableWirelessLANGroup} writableWirelessLANGroup 
     * @param {module:api/WirelessApi~wirelessWirelessLanGroupsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WirelessLANGroup}
     */
    wirelessWirelessLanGroupsUpdate(id, writableWirelessLANGroup, callback) {
      let postBody = writableWirelessLANGroup;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling wirelessWirelessLanGroupsUpdate");
      }
      // verify the required parameter 'writableWirelessLANGroup' is set
      if (writableWirelessLANGroup === undefined || writableWirelessLANGroup === null) {
        throw new Error("Missing the required parameter 'writableWirelessLANGroup' when calling wirelessWirelessLanGroupsUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WirelessLANGroup;
      return this.apiClient.callApi(
        '/wireless/wireless-lan-groups/{id}/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wirelessWirelessLansBulkDelete operation.
     * @callback module:api/WirelessApi~wirelessWirelessLansBulkDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:api/WirelessApi~wirelessWirelessLansBulkDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    wirelessWirelessLansBulkDelete(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/wireless/wireless-lans/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wirelessWirelessLansBulkPartialUpdate operation.
     * @callback module:api/WirelessApi~wirelessWirelessLansBulkPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WirelessLAN} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/WritableWirelessLAN} writableWirelessLAN 
     * @param {module:api/WirelessApi~wirelessWirelessLansBulkPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WirelessLAN}
     */
    wirelessWirelessLansBulkPartialUpdate(writableWirelessLAN, callback) {
      let postBody = writableWirelessLAN;
      // verify the required parameter 'writableWirelessLAN' is set
      if (writableWirelessLAN === undefined || writableWirelessLAN === null) {
        throw new Error("Missing the required parameter 'writableWirelessLAN' when calling wirelessWirelessLansBulkPartialUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WirelessLAN;
      return this.apiClient.callApi(
        '/wireless/wireless-lans/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wirelessWirelessLansBulkUpdate operation.
     * @callback module:api/WirelessApi~wirelessWirelessLansBulkUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WirelessLAN} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/WritableWirelessLAN} writableWirelessLAN 
     * @param {module:api/WirelessApi~wirelessWirelessLansBulkUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WirelessLAN}
     */
    wirelessWirelessLansBulkUpdate(writableWirelessLAN, callback) {
      let postBody = writableWirelessLAN;
      // verify the required parameter 'writableWirelessLAN' is set
      if (writableWirelessLAN === undefined || writableWirelessLAN === null) {
        throw new Error("Missing the required parameter 'writableWirelessLAN' when calling wirelessWirelessLansBulkUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WirelessLAN;
      return this.apiClient.callApi(
        '/wireless/wireless-lans/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wirelessWirelessLansCreate operation.
     * @callback module:api/WirelessApi~wirelessWirelessLansCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WirelessLAN} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/WritableWirelessLAN} writableWirelessLAN 
     * @param {module:api/WirelessApi~wirelessWirelessLansCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WirelessLAN}
     */
    wirelessWirelessLansCreate(writableWirelessLAN, callback) {
      let postBody = writableWirelessLAN;
      // verify the required parameter 'writableWirelessLAN' is set
      if (writableWirelessLAN === undefined || writableWirelessLAN === null) {
        throw new Error("Missing the required parameter 'writableWirelessLAN' when calling wirelessWirelessLansCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WirelessLAN;
      return this.apiClient.callApi(
        '/wireless/wireless-lans/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wirelessWirelessLansDelete operation.
     * @callback module:api/WirelessApi~wirelessWirelessLansDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this Wireless LAN.
     * @param {module:api/WirelessApi~wirelessWirelessLansDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    wirelessWirelessLansDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling wirelessWirelessLansDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/wireless/wireless-lans/{id}/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wirelessWirelessLansList operation.
     * @callback module:api/WirelessApi~wirelessWirelessLansListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WirelessWirelessLansList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Object} opts Optional parameters
     * @param {String} [id] 
     * @param {String} [ssid] 
     * @param {String} [authPsk] 
     * @param {String} [description] 
     * @param {String} [created] 
     * @param {String} [lastUpdated] 
     * @param {String} [q] 
     * @param {String} [tag] 
     * @param {String} [tenantGroupId] 
     * @param {String} [tenantGroup] 
     * @param {String} [tenantId] 
     * @param {String} [tenant] 
     * @param {String} [groupId] 
     * @param {String} [group] 
     * @param {String} [status] 
     * @param {String} [vlanId] 
     * @param {String} [authType] 
     * @param {String} [authCipher] 
     * @param {String} [idN] 
     * @param {String} [idLte] 
     * @param {String} [idLt] 
     * @param {String} [idGte] 
     * @param {String} [idGt] 
     * @param {String} [ssidN] 
     * @param {String} [ssidIc] 
     * @param {String} [ssidNic] 
     * @param {String} [ssidIew] 
     * @param {String} [ssidNiew] 
     * @param {String} [ssidIsw] 
     * @param {String} [ssidNisw] 
     * @param {String} [ssidIe] 
     * @param {String} [ssidNie] 
     * @param {String} [ssidEmpty] 
     * @param {String} [authPskN] 
     * @param {String} [authPskIc] 
     * @param {String} [authPskNic] 
     * @param {String} [authPskIew] 
     * @param {String} [authPskNiew] 
     * @param {String} [authPskIsw] 
     * @param {String} [authPskNisw] 
     * @param {String} [authPskIe] 
     * @param {String} [authPskNie] 
     * @param {String} [authPskEmpty] 
     * @param {String} [descriptionN] 
     * @param {String} [descriptionIc] 
     * @param {String} [descriptionNic] 
     * @param {String} [descriptionIew] 
     * @param {String} [descriptionNiew] 
     * @param {String} [descriptionIsw] 
     * @param {String} [descriptionNisw] 
     * @param {String} [descriptionIe] 
     * @param {String} [descriptionNie] 
     * @param {String} [descriptionEmpty] 
     * @param {String} [createdN] 
     * @param {String} [createdLte] 
     * @param {String} [createdLt] 
     * @param {String} [createdGte] 
     * @param {String} [createdGt] 
     * @param {String} [lastUpdatedN] 
     * @param {String} [lastUpdatedLte] 
     * @param {String} [lastUpdatedLt] 
     * @param {String} [lastUpdatedGte] 
     * @param {String} [lastUpdatedGt] 
     * @param {String} [tagN] 
     * @param {String} [tenantGroupIdN] 
     * @param {String} [tenantGroupN] 
     * @param {String} [tenantIdN] 
     * @param {String} [tenantN] 
     * @param {String} [groupIdN] 
     * @param {String} [groupN] 
     * @param {String} [statusN] 
     * @param {String} [vlanIdN] 
     * @param {String} [authTypeN] 
     * @param {String} [authCipherN] 
     * @param {String} [ordering] Which field to use when ordering the results.
     * @param {Number} [limit] Number of results to return per page.
     * @param {Number} [offset] The initial index from which to return the results.
     * @param {module:api/WirelessApi~wirelessWirelessLansListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WirelessWirelessLansList200Response}
     */
    wirelessWirelessLansList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'id': opts['id'],
        'ssid': opts['ssid'],
        'auth_psk': opts['authPsk'],
        'description': opts['description'],
        'created': opts['created'],
        'last_updated': opts['lastUpdated'],
        'q': opts['q'],
        'tag': opts['tag'],
        'tenant_group_id': opts['tenantGroupId'],
        'tenant_group': opts['tenantGroup'],
        'tenant_id': opts['tenantId'],
        'tenant': opts['tenant'],
        'group_id': opts['groupId'],
        'group': opts['group'],
        'status': opts['status'],
        'vlan_id': opts['vlanId'],
        'auth_type': opts['authType'],
        'auth_cipher': opts['authCipher'],
        'id__n': opts['idN'],
        'id__lte': opts['idLte'],
        'id__lt': opts['idLt'],
        'id__gte': opts['idGte'],
        'id__gt': opts['idGt'],
        'ssid__n': opts['ssidN'],
        'ssid__ic': opts['ssidIc'],
        'ssid__nic': opts['ssidNic'],
        'ssid__iew': opts['ssidIew'],
        'ssid__niew': opts['ssidNiew'],
        'ssid__isw': opts['ssidIsw'],
        'ssid__nisw': opts['ssidNisw'],
        'ssid__ie': opts['ssidIe'],
        'ssid__nie': opts['ssidNie'],
        'ssid__empty': opts['ssidEmpty'],
        'auth_psk__n': opts['authPskN'],
        'auth_psk__ic': opts['authPskIc'],
        'auth_psk__nic': opts['authPskNic'],
        'auth_psk__iew': opts['authPskIew'],
        'auth_psk__niew': opts['authPskNiew'],
        'auth_psk__isw': opts['authPskIsw'],
        'auth_psk__nisw': opts['authPskNisw'],
        'auth_psk__ie': opts['authPskIe'],
        'auth_psk__nie': opts['authPskNie'],
        'auth_psk__empty': opts['authPskEmpty'],
        'description__n': opts['descriptionN'],
        'description__ic': opts['descriptionIc'],
        'description__nic': opts['descriptionNic'],
        'description__iew': opts['descriptionIew'],
        'description__niew': opts['descriptionNiew'],
        'description__isw': opts['descriptionIsw'],
        'description__nisw': opts['descriptionNisw'],
        'description__ie': opts['descriptionIe'],
        'description__nie': opts['descriptionNie'],
        'description__empty': opts['descriptionEmpty'],
        'created__n': opts['createdN'],
        'created__lte': opts['createdLte'],
        'created__lt': opts['createdLt'],
        'created__gte': opts['createdGte'],
        'created__gt': opts['createdGt'],
        'last_updated__n': opts['lastUpdatedN'],
        'last_updated__lte': opts['lastUpdatedLte'],
        'last_updated__lt': opts['lastUpdatedLt'],
        'last_updated__gte': opts['lastUpdatedGte'],
        'last_updated__gt': opts['lastUpdatedGt'],
        'tag__n': opts['tagN'],
        'tenant_group_id__n': opts['tenantGroupIdN'],
        'tenant_group__n': opts['tenantGroupN'],
        'tenant_id__n': opts['tenantIdN'],
        'tenant__n': opts['tenantN'],
        'group_id__n': opts['groupIdN'],
        'group__n': opts['groupN'],
        'status__n': opts['statusN'],
        'vlan_id__n': opts['vlanIdN'],
        'auth_type__n': opts['authTypeN'],
        'auth_cipher__n': opts['authCipherN'],
        'ordering': opts['ordering'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WirelessWirelessLansList200Response;
      return this.apiClient.callApi(
        '/wireless/wireless-lans/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wirelessWirelessLansPartialUpdate operation.
     * @callback module:api/WirelessApi~wirelessWirelessLansPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WirelessLAN} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this Wireless LAN.
     * @param {module:model/WritableWirelessLAN} writableWirelessLAN 
     * @param {module:api/WirelessApi~wirelessWirelessLansPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WirelessLAN}
     */
    wirelessWirelessLansPartialUpdate(id, writableWirelessLAN, callback) {
      let postBody = writableWirelessLAN;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling wirelessWirelessLansPartialUpdate");
      }
      // verify the required parameter 'writableWirelessLAN' is set
      if (writableWirelessLAN === undefined || writableWirelessLAN === null) {
        throw new Error("Missing the required parameter 'writableWirelessLAN' when calling wirelessWirelessLansPartialUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WirelessLAN;
      return this.apiClient.callApi(
        '/wireless/wireless-lans/{id}/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wirelessWirelessLansRead operation.
     * @callback module:api/WirelessApi~wirelessWirelessLansReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WirelessLAN} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this Wireless LAN.
     * @param {module:api/WirelessApi~wirelessWirelessLansReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WirelessLAN}
     */
    wirelessWirelessLansRead(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling wirelessWirelessLansRead");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WirelessLAN;
      return this.apiClient.callApi(
        '/wireless/wireless-lans/{id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wirelessWirelessLansUpdate operation.
     * @callback module:api/WirelessApi~wirelessWirelessLansUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WirelessLAN} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this Wireless LAN.
     * @param {module:model/WritableWirelessLAN} writableWirelessLAN 
     * @param {module:api/WirelessApi~wirelessWirelessLansUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WirelessLAN}
     */
    wirelessWirelessLansUpdate(id, writableWirelessLAN, callback) {
      let postBody = writableWirelessLAN;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling wirelessWirelessLansUpdate");
      }
      // verify the required parameter 'writableWirelessLAN' is set
      if (writableWirelessLAN === undefined || writableWirelessLAN === null) {
        throw new Error("Missing the required parameter 'writableWirelessLAN' when calling wirelessWirelessLansUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WirelessLAN;
      return this.apiClient.callApi(
        '/wireless/wireless-lans/{id}/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wirelessWirelessLinksBulkDelete operation.
     * @callback module:api/WirelessApi~wirelessWirelessLinksBulkDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:api/WirelessApi~wirelessWirelessLinksBulkDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    wirelessWirelessLinksBulkDelete(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/wireless/wireless-links/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wirelessWirelessLinksBulkPartialUpdate operation.
     * @callback module:api/WirelessApi~wirelessWirelessLinksBulkPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WirelessLink} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/WritableWirelessLink} writableWirelessLink 
     * @param {module:api/WirelessApi~wirelessWirelessLinksBulkPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WirelessLink}
     */
    wirelessWirelessLinksBulkPartialUpdate(writableWirelessLink, callback) {
      let postBody = writableWirelessLink;
      // verify the required parameter 'writableWirelessLink' is set
      if (writableWirelessLink === undefined || writableWirelessLink === null) {
        throw new Error("Missing the required parameter 'writableWirelessLink' when calling wirelessWirelessLinksBulkPartialUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WirelessLink;
      return this.apiClient.callApi(
        '/wireless/wireless-links/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wirelessWirelessLinksBulkUpdate operation.
     * @callback module:api/WirelessApi~wirelessWirelessLinksBulkUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WirelessLink} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/WritableWirelessLink} writableWirelessLink 
     * @param {module:api/WirelessApi~wirelessWirelessLinksBulkUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WirelessLink}
     */
    wirelessWirelessLinksBulkUpdate(writableWirelessLink, callback) {
      let postBody = writableWirelessLink;
      // verify the required parameter 'writableWirelessLink' is set
      if (writableWirelessLink === undefined || writableWirelessLink === null) {
        throw new Error("Missing the required parameter 'writableWirelessLink' when calling wirelessWirelessLinksBulkUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WirelessLink;
      return this.apiClient.callApi(
        '/wireless/wireless-links/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wirelessWirelessLinksCreate operation.
     * @callback module:api/WirelessApi~wirelessWirelessLinksCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WirelessLink} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/WritableWirelessLink} writableWirelessLink 
     * @param {module:api/WirelessApi~wirelessWirelessLinksCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WirelessLink}
     */
    wirelessWirelessLinksCreate(writableWirelessLink, callback) {
      let postBody = writableWirelessLink;
      // verify the required parameter 'writableWirelessLink' is set
      if (writableWirelessLink === undefined || writableWirelessLink === null) {
        throw new Error("Missing the required parameter 'writableWirelessLink' when calling wirelessWirelessLinksCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WirelessLink;
      return this.apiClient.callApi(
        '/wireless/wireless-links/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wirelessWirelessLinksDelete operation.
     * @callback module:api/WirelessApi~wirelessWirelessLinksDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this wireless link.
     * @param {module:api/WirelessApi~wirelessWirelessLinksDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    wirelessWirelessLinksDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling wirelessWirelessLinksDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/wireless/wireless-links/{id}/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wirelessWirelessLinksList operation.
     * @callback module:api/WirelessApi~wirelessWirelessLinksListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WirelessWirelessLinksList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Object} opts Optional parameters
     * @param {String} [id] 
     * @param {String} [ssid] 
     * @param {String} [authPsk] 
     * @param {String} [description] 
     * @param {String} [created] 
     * @param {String} [lastUpdated] 
     * @param {String} [q] 
     * @param {String} [tag] 
     * @param {String} [tenantGroupId] 
     * @param {String} [tenantGroup] 
     * @param {String} [tenantId] 
     * @param {String} [tenant] 
     * @param {String} [interfaceAId] 
     * @param {String} [interfaceBId] 
     * @param {String} [status] 
     * @param {String} [authType] 
     * @param {String} [authCipher] 
     * @param {String} [idN] 
     * @param {String} [idLte] 
     * @param {String} [idLt] 
     * @param {String} [idGte] 
     * @param {String} [idGt] 
     * @param {String} [ssidN] 
     * @param {String} [ssidIc] 
     * @param {String} [ssidNic] 
     * @param {String} [ssidIew] 
     * @param {String} [ssidNiew] 
     * @param {String} [ssidIsw] 
     * @param {String} [ssidNisw] 
     * @param {String} [ssidIe] 
     * @param {String} [ssidNie] 
     * @param {String} [ssidEmpty] 
     * @param {String} [authPskN] 
     * @param {String} [authPskIc] 
     * @param {String} [authPskNic] 
     * @param {String} [authPskIew] 
     * @param {String} [authPskNiew] 
     * @param {String} [authPskIsw] 
     * @param {String} [authPskNisw] 
     * @param {String} [authPskIe] 
     * @param {String} [authPskNie] 
     * @param {String} [authPskEmpty] 
     * @param {String} [descriptionN] 
     * @param {String} [descriptionIc] 
     * @param {String} [descriptionNic] 
     * @param {String} [descriptionIew] 
     * @param {String} [descriptionNiew] 
     * @param {String} [descriptionIsw] 
     * @param {String} [descriptionNisw] 
     * @param {String} [descriptionIe] 
     * @param {String} [descriptionNie] 
     * @param {String} [descriptionEmpty] 
     * @param {String} [createdN] 
     * @param {String} [createdLte] 
     * @param {String} [createdLt] 
     * @param {String} [createdGte] 
     * @param {String} [createdGt] 
     * @param {String} [lastUpdatedN] 
     * @param {String} [lastUpdatedLte] 
     * @param {String} [lastUpdatedLt] 
     * @param {String} [lastUpdatedGte] 
     * @param {String} [lastUpdatedGt] 
     * @param {String} [tagN] 
     * @param {String} [tenantGroupIdN] 
     * @param {String} [tenantGroupN] 
     * @param {String} [tenantIdN] 
     * @param {String} [tenantN] 
     * @param {String} [interfaceAIdN] 
     * @param {String} [interfaceAIdLte] 
     * @param {String} [interfaceAIdLt] 
     * @param {String} [interfaceAIdGte] 
     * @param {String} [interfaceAIdGt] 
     * @param {String} [interfaceBIdN] 
     * @param {String} [interfaceBIdLte] 
     * @param {String} [interfaceBIdLt] 
     * @param {String} [interfaceBIdGte] 
     * @param {String} [interfaceBIdGt] 
     * @param {String} [statusN] 
     * @param {String} [authTypeN] 
     * @param {String} [authCipherN] 
     * @param {String} [ordering] Which field to use when ordering the results.
     * @param {Number} [limit] Number of results to return per page.
     * @param {Number} [offset] The initial index from which to return the results.
     * @param {module:api/WirelessApi~wirelessWirelessLinksListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WirelessWirelessLinksList200Response}
     */
    wirelessWirelessLinksList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'id': opts['id'],
        'ssid': opts['ssid'],
        'auth_psk': opts['authPsk'],
        'description': opts['description'],
        'created': opts['created'],
        'last_updated': opts['lastUpdated'],
        'q': opts['q'],
        'tag': opts['tag'],
        'tenant_group_id': opts['tenantGroupId'],
        'tenant_group': opts['tenantGroup'],
        'tenant_id': opts['tenantId'],
        'tenant': opts['tenant'],
        'interface_a_id': opts['interfaceAId'],
        'interface_b_id': opts['interfaceBId'],
        'status': opts['status'],
        'auth_type': opts['authType'],
        'auth_cipher': opts['authCipher'],
        'id__n': opts['idN'],
        'id__lte': opts['idLte'],
        'id__lt': opts['idLt'],
        'id__gte': opts['idGte'],
        'id__gt': opts['idGt'],
        'ssid__n': opts['ssidN'],
        'ssid__ic': opts['ssidIc'],
        'ssid__nic': opts['ssidNic'],
        'ssid__iew': opts['ssidIew'],
        'ssid__niew': opts['ssidNiew'],
        'ssid__isw': opts['ssidIsw'],
        'ssid__nisw': opts['ssidNisw'],
        'ssid__ie': opts['ssidIe'],
        'ssid__nie': opts['ssidNie'],
        'ssid__empty': opts['ssidEmpty'],
        'auth_psk__n': opts['authPskN'],
        'auth_psk__ic': opts['authPskIc'],
        'auth_psk__nic': opts['authPskNic'],
        'auth_psk__iew': opts['authPskIew'],
        'auth_psk__niew': opts['authPskNiew'],
        'auth_psk__isw': opts['authPskIsw'],
        'auth_psk__nisw': opts['authPskNisw'],
        'auth_psk__ie': opts['authPskIe'],
        'auth_psk__nie': opts['authPskNie'],
        'auth_psk__empty': opts['authPskEmpty'],
        'description__n': opts['descriptionN'],
        'description__ic': opts['descriptionIc'],
        'description__nic': opts['descriptionNic'],
        'description__iew': opts['descriptionIew'],
        'description__niew': opts['descriptionNiew'],
        'description__isw': opts['descriptionIsw'],
        'description__nisw': opts['descriptionNisw'],
        'description__ie': opts['descriptionIe'],
        'description__nie': opts['descriptionNie'],
        'description__empty': opts['descriptionEmpty'],
        'created__n': opts['createdN'],
        'created__lte': opts['createdLte'],
        'created__lt': opts['createdLt'],
        'created__gte': opts['createdGte'],
        'created__gt': opts['createdGt'],
        'last_updated__n': opts['lastUpdatedN'],
        'last_updated__lte': opts['lastUpdatedLte'],
        'last_updated__lt': opts['lastUpdatedLt'],
        'last_updated__gte': opts['lastUpdatedGte'],
        'last_updated__gt': opts['lastUpdatedGt'],
        'tag__n': opts['tagN'],
        'tenant_group_id__n': opts['tenantGroupIdN'],
        'tenant_group__n': opts['tenantGroupN'],
        'tenant_id__n': opts['tenantIdN'],
        'tenant__n': opts['tenantN'],
        'interface_a_id__n': opts['interfaceAIdN'],
        'interface_a_id__lte': opts['interfaceAIdLte'],
        'interface_a_id__lt': opts['interfaceAIdLt'],
        'interface_a_id__gte': opts['interfaceAIdGte'],
        'interface_a_id__gt': opts['interfaceAIdGt'],
        'interface_b_id__n': opts['interfaceBIdN'],
        'interface_b_id__lte': opts['interfaceBIdLte'],
        'interface_b_id__lt': opts['interfaceBIdLt'],
        'interface_b_id__gte': opts['interfaceBIdGte'],
        'interface_b_id__gt': opts['interfaceBIdGt'],
        'status__n': opts['statusN'],
        'auth_type__n': opts['authTypeN'],
        'auth_cipher__n': opts['authCipherN'],
        'ordering': opts['ordering'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WirelessWirelessLinksList200Response;
      return this.apiClient.callApi(
        '/wireless/wireless-links/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wirelessWirelessLinksPartialUpdate operation.
     * @callback module:api/WirelessApi~wirelessWirelessLinksPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WirelessLink} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this wireless link.
     * @param {module:model/WritableWirelessLink} writableWirelessLink 
     * @param {module:api/WirelessApi~wirelessWirelessLinksPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WirelessLink}
     */
    wirelessWirelessLinksPartialUpdate(id, writableWirelessLink, callback) {
      let postBody = writableWirelessLink;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling wirelessWirelessLinksPartialUpdate");
      }
      // verify the required parameter 'writableWirelessLink' is set
      if (writableWirelessLink === undefined || writableWirelessLink === null) {
        throw new Error("Missing the required parameter 'writableWirelessLink' when calling wirelessWirelessLinksPartialUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WirelessLink;
      return this.apiClient.callApi(
        '/wireless/wireless-links/{id}/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wirelessWirelessLinksRead operation.
     * @callback module:api/WirelessApi~wirelessWirelessLinksReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WirelessLink} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this wireless link.
     * @param {module:api/WirelessApi~wirelessWirelessLinksReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WirelessLink}
     */
    wirelessWirelessLinksRead(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling wirelessWirelessLinksRead");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WirelessLink;
      return this.apiClient.callApi(
        '/wireless/wireless-links/{id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wirelessWirelessLinksUpdate operation.
     * @callback module:api/WirelessApi~wirelessWirelessLinksUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WirelessLink} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this wireless link.
     * @param {module:model/WritableWirelessLink} writableWirelessLink 
     * @param {module:api/WirelessApi~wirelessWirelessLinksUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WirelessLink}
     */
    wirelessWirelessLinksUpdate(id, writableWirelessLink, callback) {
      let postBody = writableWirelessLink;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling wirelessWirelessLinksUpdate");
      }
      // verify the required parameter 'writableWirelessLink' is set
      if (writableWirelessLink === undefined || writableWirelessLink === null) {
        throw new Error("Missing the required parameter 'writableWirelessLink' when calling wirelessWirelessLinksUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WirelessLink;
      return this.apiClient.callApi(
        '/wireless/wireless-links/{id}/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
