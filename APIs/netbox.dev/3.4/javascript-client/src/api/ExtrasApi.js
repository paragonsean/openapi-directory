/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ConfigContext from '../model/ConfigContext';
import ContentType from '../model/ContentType';
import CustomField from '../model/CustomField';
import CustomLink from '../model/CustomLink';
import ExportTemplate from '../model/ExportTemplate';
import ExtrasConfigContextsList200Response from '../model/ExtrasConfigContextsList200Response';
import ExtrasContentTypesList200Response from '../model/ExtrasContentTypesList200Response';
import ExtrasCustomFieldsList200Response from '../model/ExtrasCustomFieldsList200Response';
import ExtrasCustomLinksList200Response from '../model/ExtrasCustomLinksList200Response';
import ExtrasExportTemplatesList200Response from '../model/ExtrasExportTemplatesList200Response';
import ExtrasImageAttachmentsList200Response from '../model/ExtrasImageAttachmentsList200Response';
import ExtrasJobResultsList200Response from '../model/ExtrasJobResultsList200Response';
import ExtrasJournalEntriesList200Response from '../model/ExtrasJournalEntriesList200Response';
import ExtrasObjectChangesList200Response from '../model/ExtrasObjectChangesList200Response';
import ExtrasSavedFiltersList200Response from '../model/ExtrasSavedFiltersList200Response';
import ExtrasTagsList200Response from '../model/ExtrasTagsList200Response';
import ExtrasWebhooksList200Response from '../model/ExtrasWebhooksList200Response';
import ImageAttachment from '../model/ImageAttachment';
import JobResult from '../model/JobResult';
import JournalEntry from '../model/JournalEntry';
import ObjectChange from '../model/ObjectChange';
import SavedFilter from '../model/SavedFilter';
import Tag from '../model/Tag';
import Webhook from '../model/Webhook';
import WritableConfigContext from '../model/WritableConfigContext';
import WritableCustomField from '../model/WritableCustomField';
import WritableJournalEntry from '../model/WritableJournalEntry';

/**
* Extras service.
* @module api/ExtrasApi
* @version 3.4
*/
export default class ExtrasApi {

    /**
    * Constructs a new ExtrasApi. 
    * @alias module:api/ExtrasApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the extrasConfigContextsBulkDelete operation.
     * @callback module:api/ExtrasApi~extrasConfigContextsBulkDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:api/ExtrasApi~extrasConfigContextsBulkDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    extrasConfigContextsBulkDelete(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/extras/config-contexts/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasConfigContextsBulkPartialUpdate operation.
     * @callback module:api/ExtrasApi~extrasConfigContextsBulkPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConfigContext} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/WritableConfigContext} writableConfigContext 
     * @param {module:api/ExtrasApi~extrasConfigContextsBulkPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConfigContext}
     */
    extrasConfigContextsBulkPartialUpdate(writableConfigContext, callback) {
      let postBody = writableConfigContext;
      // verify the required parameter 'writableConfigContext' is set
      if (writableConfigContext === undefined || writableConfigContext === null) {
        throw new Error("Missing the required parameter 'writableConfigContext' when calling extrasConfigContextsBulkPartialUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ConfigContext;
      return this.apiClient.callApi(
        '/extras/config-contexts/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasConfigContextsBulkUpdate operation.
     * @callback module:api/ExtrasApi~extrasConfigContextsBulkUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConfigContext} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/WritableConfigContext} writableConfigContext 
     * @param {module:api/ExtrasApi~extrasConfigContextsBulkUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConfigContext}
     */
    extrasConfigContextsBulkUpdate(writableConfigContext, callback) {
      let postBody = writableConfigContext;
      // verify the required parameter 'writableConfigContext' is set
      if (writableConfigContext === undefined || writableConfigContext === null) {
        throw new Error("Missing the required parameter 'writableConfigContext' when calling extrasConfigContextsBulkUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ConfigContext;
      return this.apiClient.callApi(
        '/extras/config-contexts/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasConfigContextsCreate operation.
     * @callback module:api/ExtrasApi~extrasConfigContextsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConfigContext} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/WritableConfigContext} writableConfigContext 
     * @param {module:api/ExtrasApi~extrasConfigContextsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConfigContext}
     */
    extrasConfigContextsCreate(writableConfigContext, callback) {
      let postBody = writableConfigContext;
      // verify the required parameter 'writableConfigContext' is set
      if (writableConfigContext === undefined || writableConfigContext === null) {
        throw new Error("Missing the required parameter 'writableConfigContext' when calling extrasConfigContextsCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ConfigContext;
      return this.apiClient.callApi(
        '/extras/config-contexts/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasConfigContextsDelete operation.
     * @callback module:api/ExtrasApi~extrasConfigContextsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this config context.
     * @param {module:api/ExtrasApi~extrasConfigContextsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    extrasConfigContextsDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasConfigContextsDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/extras/config-contexts/{id}/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasConfigContextsList operation.
     * @callback module:api/ExtrasApi~extrasConfigContextsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExtrasConfigContextsList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Object} opts Optional parameters
     * @param {String} [id] 
     * @param {String} [name] 
     * @param {String} [isActive] 
     * @param {String} [created] 
     * @param {String} [lastUpdated] 
     * @param {String} [q] 
     * @param {String} [regionId] 
     * @param {String} [region] 
     * @param {String} [siteGroup] 
     * @param {String} [siteGroupId] 
     * @param {String} [siteId] 
     * @param {String} [site] 
     * @param {String} [locationId] 
     * @param {String} [location] 
     * @param {String} [deviceTypeId] 
     * @param {String} [roleId] 
     * @param {String} [role] 
     * @param {String} [platformId] 
     * @param {String} [platform] 
     * @param {String} [clusterTypeId] 
     * @param {String} [clusterType] 
     * @param {String} [clusterGroupId] 
     * @param {String} [clusterGroup] 
     * @param {String} [clusterId] 
     * @param {String} [tenantGroupId] 
     * @param {String} [tenantGroup] 
     * @param {String} [tenantId] 
     * @param {String} [tenant] 
     * @param {String} [tagId] 
     * @param {String} [tag] 
     * @param {String} [idN] 
     * @param {String} [idLte] 
     * @param {String} [idLt] 
     * @param {String} [idGte] 
     * @param {String} [idGt] 
     * @param {String} [nameN] 
     * @param {String} [nameIc] 
     * @param {String} [nameNic] 
     * @param {String} [nameIew] 
     * @param {String} [nameNiew] 
     * @param {String} [nameIsw] 
     * @param {String} [nameNisw] 
     * @param {String} [nameIe] 
     * @param {String} [nameNie] 
     * @param {String} [nameEmpty] 
     * @param {String} [createdN] 
     * @param {String} [createdLte] 
     * @param {String} [createdLt] 
     * @param {String} [createdGte] 
     * @param {String} [createdGt] 
     * @param {String} [lastUpdatedN] 
     * @param {String} [lastUpdatedLte] 
     * @param {String} [lastUpdatedLt] 
     * @param {String} [lastUpdatedGte] 
     * @param {String} [lastUpdatedGt] 
     * @param {String} [regionIdN] 
     * @param {String} [regionN] 
     * @param {String} [siteGroupN] 
     * @param {String} [siteGroupIdN] 
     * @param {String} [siteIdN] 
     * @param {String} [siteN] 
     * @param {String} [locationIdN] 
     * @param {String} [locationN] 
     * @param {String} [deviceTypeIdN] 
     * @param {String} [roleIdN] 
     * @param {String} [roleN] 
     * @param {String} [platformIdN] 
     * @param {String} [platformN] 
     * @param {String} [clusterTypeIdN] 
     * @param {String} [clusterTypeN] 
     * @param {String} [clusterGroupIdN] 
     * @param {String} [clusterGroupN] 
     * @param {String} [clusterIdN] 
     * @param {String} [tenantGroupIdN] 
     * @param {String} [tenantGroupN] 
     * @param {String} [tenantIdN] 
     * @param {String} [tenantN] 
     * @param {String} [tagIdN] 
     * @param {String} [tagN] 
     * @param {String} [ordering] Which field to use when ordering the results.
     * @param {Number} [limit] Number of results to return per page.
     * @param {Number} [offset] The initial index from which to return the results.
     * @param {module:api/ExtrasApi~extrasConfigContextsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExtrasConfigContextsList200Response}
     */
    extrasConfigContextsList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'id': opts['id'],
        'name': opts['name'],
        'is_active': opts['isActive'],
        'created': opts['created'],
        'last_updated': opts['lastUpdated'],
        'q': opts['q'],
        'region_id': opts['regionId'],
        'region': opts['region'],
        'site_group': opts['siteGroup'],
        'site_group_id': opts['siteGroupId'],
        'site_id': opts['siteId'],
        'site': opts['site'],
        'location_id': opts['locationId'],
        'location': opts['location'],
        'device_type_id': opts['deviceTypeId'],
        'role_id': opts['roleId'],
        'role': opts['role'],
        'platform_id': opts['platformId'],
        'platform': opts['platform'],
        'cluster_type_id': opts['clusterTypeId'],
        'cluster_type': opts['clusterType'],
        'cluster_group_id': opts['clusterGroupId'],
        'cluster_group': opts['clusterGroup'],
        'cluster_id': opts['clusterId'],
        'tenant_group_id': opts['tenantGroupId'],
        'tenant_group': opts['tenantGroup'],
        'tenant_id': opts['tenantId'],
        'tenant': opts['tenant'],
        'tag_id': opts['tagId'],
        'tag': opts['tag'],
        'id__n': opts['idN'],
        'id__lte': opts['idLte'],
        'id__lt': opts['idLt'],
        'id__gte': opts['idGte'],
        'id__gt': opts['idGt'],
        'name__n': opts['nameN'],
        'name__ic': opts['nameIc'],
        'name__nic': opts['nameNic'],
        'name__iew': opts['nameIew'],
        'name__niew': opts['nameNiew'],
        'name__isw': opts['nameIsw'],
        'name__nisw': opts['nameNisw'],
        'name__ie': opts['nameIe'],
        'name__nie': opts['nameNie'],
        'name__empty': opts['nameEmpty'],
        'created__n': opts['createdN'],
        'created__lte': opts['createdLte'],
        'created__lt': opts['createdLt'],
        'created__gte': opts['createdGte'],
        'created__gt': opts['createdGt'],
        'last_updated__n': opts['lastUpdatedN'],
        'last_updated__lte': opts['lastUpdatedLte'],
        'last_updated__lt': opts['lastUpdatedLt'],
        'last_updated__gte': opts['lastUpdatedGte'],
        'last_updated__gt': opts['lastUpdatedGt'],
        'region_id__n': opts['regionIdN'],
        'region__n': opts['regionN'],
        'site_group__n': opts['siteGroupN'],
        'site_group_id__n': opts['siteGroupIdN'],
        'site_id__n': opts['siteIdN'],
        'site__n': opts['siteN'],
        'location_id__n': opts['locationIdN'],
        'location__n': opts['locationN'],
        'device_type_id__n': opts['deviceTypeIdN'],
        'role_id__n': opts['roleIdN'],
        'role__n': opts['roleN'],
        'platform_id__n': opts['platformIdN'],
        'platform__n': opts['platformN'],
        'cluster_type_id__n': opts['clusterTypeIdN'],
        'cluster_type__n': opts['clusterTypeN'],
        'cluster_group_id__n': opts['clusterGroupIdN'],
        'cluster_group__n': opts['clusterGroupN'],
        'cluster_id__n': opts['clusterIdN'],
        'tenant_group_id__n': opts['tenantGroupIdN'],
        'tenant_group__n': opts['tenantGroupN'],
        'tenant_id__n': opts['tenantIdN'],
        'tenant__n': opts['tenantN'],
        'tag_id__n': opts['tagIdN'],
        'tag__n': opts['tagN'],
        'ordering': opts['ordering'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExtrasConfigContextsList200Response;
      return this.apiClient.callApi(
        '/extras/config-contexts/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasConfigContextsPartialUpdate operation.
     * @callback module:api/ExtrasApi~extrasConfigContextsPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConfigContext} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this config context.
     * @param {module:model/WritableConfigContext} writableConfigContext 
     * @param {module:api/ExtrasApi~extrasConfigContextsPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConfigContext}
     */
    extrasConfigContextsPartialUpdate(id, writableConfigContext, callback) {
      let postBody = writableConfigContext;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasConfigContextsPartialUpdate");
      }
      // verify the required parameter 'writableConfigContext' is set
      if (writableConfigContext === undefined || writableConfigContext === null) {
        throw new Error("Missing the required parameter 'writableConfigContext' when calling extrasConfigContextsPartialUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ConfigContext;
      return this.apiClient.callApi(
        '/extras/config-contexts/{id}/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasConfigContextsRead operation.
     * @callback module:api/ExtrasApi~extrasConfigContextsReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConfigContext} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this config context.
     * @param {module:api/ExtrasApi~extrasConfigContextsReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConfigContext}
     */
    extrasConfigContextsRead(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasConfigContextsRead");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ConfigContext;
      return this.apiClient.callApi(
        '/extras/config-contexts/{id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasConfigContextsUpdate operation.
     * @callback module:api/ExtrasApi~extrasConfigContextsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConfigContext} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this config context.
     * @param {module:model/WritableConfigContext} writableConfigContext 
     * @param {module:api/ExtrasApi~extrasConfigContextsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConfigContext}
     */
    extrasConfigContextsUpdate(id, writableConfigContext, callback) {
      let postBody = writableConfigContext;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasConfigContextsUpdate");
      }
      // verify the required parameter 'writableConfigContext' is set
      if (writableConfigContext === undefined || writableConfigContext === null) {
        throw new Error("Missing the required parameter 'writableConfigContext' when calling extrasConfigContextsUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ConfigContext;
      return this.apiClient.callApi(
        '/extras/config-contexts/{id}/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasContentTypesList operation.
     * @callback module:api/ExtrasApi~extrasContentTypesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExtrasContentTypesList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Read-only list of ContentTypes. Limit results to ContentTypes pertinent to NetBox objects.
     * @param {Object} opts Optional parameters
     * @param {Number} [id] 
     * @param {String} [appLabel] 
     * @param {String} [model] 
     * @param {String} [q] 
     * @param {String} [ordering] Which field to use when ordering the results.
     * @param {Number} [limit] Number of results to return per page.
     * @param {Number} [offset] The initial index from which to return the results.
     * @param {module:api/ExtrasApi~extrasContentTypesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExtrasContentTypesList200Response}
     */
    extrasContentTypesList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'id': opts['id'],
        'app_label': opts['appLabel'],
        'model': opts['model'],
        'q': opts['q'],
        'ordering': opts['ordering'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExtrasContentTypesList200Response;
      return this.apiClient.callApi(
        '/extras/content-types/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasContentTypesRead operation.
     * @callback module:api/ExtrasApi~extrasContentTypesReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentType} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Read-only list of ContentTypes. Limit results to ContentTypes pertinent to NetBox objects.
     * @param {Number} id A unique integer value identifying this content type.
     * @param {module:api/ExtrasApi~extrasContentTypesReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentType}
     */
    extrasContentTypesRead(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasContentTypesRead");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ContentType;
      return this.apiClient.callApi(
        '/extras/content-types/{id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasCustomFieldsBulkDelete operation.
     * @callback module:api/ExtrasApi~extrasCustomFieldsBulkDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:api/ExtrasApi~extrasCustomFieldsBulkDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    extrasCustomFieldsBulkDelete(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/extras/custom-fields/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasCustomFieldsBulkPartialUpdate operation.
     * @callback module:api/ExtrasApi~extrasCustomFieldsBulkPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomField} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/WritableCustomField} writableCustomField 
     * @param {module:api/ExtrasApi~extrasCustomFieldsBulkPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomField}
     */
    extrasCustomFieldsBulkPartialUpdate(writableCustomField, callback) {
      let postBody = writableCustomField;
      // verify the required parameter 'writableCustomField' is set
      if (writableCustomField === undefined || writableCustomField === null) {
        throw new Error("Missing the required parameter 'writableCustomField' when calling extrasCustomFieldsBulkPartialUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CustomField;
      return this.apiClient.callApi(
        '/extras/custom-fields/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasCustomFieldsBulkUpdate operation.
     * @callback module:api/ExtrasApi~extrasCustomFieldsBulkUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomField} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/WritableCustomField} writableCustomField 
     * @param {module:api/ExtrasApi~extrasCustomFieldsBulkUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomField}
     */
    extrasCustomFieldsBulkUpdate(writableCustomField, callback) {
      let postBody = writableCustomField;
      // verify the required parameter 'writableCustomField' is set
      if (writableCustomField === undefined || writableCustomField === null) {
        throw new Error("Missing the required parameter 'writableCustomField' when calling extrasCustomFieldsBulkUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CustomField;
      return this.apiClient.callApi(
        '/extras/custom-fields/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasCustomFieldsCreate operation.
     * @callback module:api/ExtrasApi~extrasCustomFieldsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomField} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/WritableCustomField} writableCustomField 
     * @param {module:api/ExtrasApi~extrasCustomFieldsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomField}
     */
    extrasCustomFieldsCreate(writableCustomField, callback) {
      let postBody = writableCustomField;
      // verify the required parameter 'writableCustomField' is set
      if (writableCustomField === undefined || writableCustomField === null) {
        throw new Error("Missing the required parameter 'writableCustomField' when calling extrasCustomFieldsCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CustomField;
      return this.apiClient.callApi(
        '/extras/custom-fields/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasCustomFieldsDelete operation.
     * @callback module:api/ExtrasApi~extrasCustomFieldsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this custom field.
     * @param {module:api/ExtrasApi~extrasCustomFieldsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    extrasCustomFieldsDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasCustomFieldsDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/extras/custom-fields/{id}/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasCustomFieldsList operation.
     * @callback module:api/ExtrasApi~extrasCustomFieldsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExtrasCustomFieldsList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Object} opts Optional parameters
     * @param {String} [id] 
     * @param {String} [contentTypes] 
     * @param {String} [name] 
     * @param {String} [groupName] 
     * @param {String} [required] 
     * @param {String} [searchWeight] 
     * @param {String} [filterLogic] 
     * @param {String} [uiVisibility] 
     * @param {String} [weight] 
     * @param {String} [description] 
     * @param {String} [q] 
     * @param {String} [type] 
     * @param {String} [contentTypeId] 
     * @param {String} [idN] 
     * @param {String} [idLte] 
     * @param {String} [idLt] 
     * @param {String} [idGte] 
     * @param {String} [idGt] 
     * @param {String} [contentTypesN] 
     * @param {String} [contentTypesIc] 
     * @param {String} [contentTypesNic] 
     * @param {String} [contentTypesIew] 
     * @param {String} [contentTypesNiew] 
     * @param {String} [contentTypesIsw] 
     * @param {String} [contentTypesNisw] 
     * @param {String} [contentTypesIe] 
     * @param {String} [contentTypesNie] 
     * @param {String} [nameN] 
     * @param {String} [nameIc] 
     * @param {String} [nameNic] 
     * @param {String} [nameIew] 
     * @param {String} [nameNiew] 
     * @param {String} [nameIsw] 
     * @param {String} [nameNisw] 
     * @param {String} [nameIe] 
     * @param {String} [nameNie] 
     * @param {String} [nameEmpty] 
     * @param {String} [groupNameN] 
     * @param {String} [groupNameIc] 
     * @param {String} [groupNameNic] 
     * @param {String} [groupNameIew] 
     * @param {String} [groupNameNiew] 
     * @param {String} [groupNameIsw] 
     * @param {String} [groupNameNisw] 
     * @param {String} [groupNameIe] 
     * @param {String} [groupNameNie] 
     * @param {String} [groupNameEmpty] 
     * @param {String} [searchWeightN] 
     * @param {String} [searchWeightLte] 
     * @param {String} [searchWeightLt] 
     * @param {String} [searchWeightGte] 
     * @param {String} [searchWeightGt] 
     * @param {String} [filterLogicN] 
     * @param {String} [uiVisibilityN] 
     * @param {String} [weightN] 
     * @param {String} [weightLte] 
     * @param {String} [weightLt] 
     * @param {String} [weightGte] 
     * @param {String} [weightGt] 
     * @param {String} [descriptionN] 
     * @param {String} [descriptionIc] 
     * @param {String} [descriptionNic] 
     * @param {String} [descriptionIew] 
     * @param {String} [descriptionNiew] 
     * @param {String} [descriptionIsw] 
     * @param {String} [descriptionNisw] 
     * @param {String} [descriptionIe] 
     * @param {String} [descriptionNie] 
     * @param {String} [descriptionEmpty] 
     * @param {String} [typeN] 
     * @param {String} [contentTypeIdN] 
     * @param {String} [contentTypeIdLte] 
     * @param {String} [contentTypeIdLt] 
     * @param {String} [contentTypeIdGte] 
     * @param {String} [contentTypeIdGt] 
     * @param {String} [ordering] Which field to use when ordering the results.
     * @param {Number} [limit] Number of results to return per page.
     * @param {Number} [offset] The initial index from which to return the results.
     * @param {module:api/ExtrasApi~extrasCustomFieldsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExtrasCustomFieldsList200Response}
     */
    extrasCustomFieldsList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'id': opts['id'],
        'content_types': opts['contentTypes'],
        'name': opts['name'],
        'group_name': opts['groupName'],
        'required': opts['required'],
        'search_weight': opts['searchWeight'],
        'filter_logic': opts['filterLogic'],
        'ui_visibility': opts['uiVisibility'],
        'weight': opts['weight'],
        'description': opts['description'],
        'q': opts['q'],
        'type': opts['type'],
        'content_type_id': opts['contentTypeId'],
        'id__n': opts['idN'],
        'id__lte': opts['idLte'],
        'id__lt': opts['idLt'],
        'id__gte': opts['idGte'],
        'id__gt': opts['idGt'],
        'content_types__n': opts['contentTypesN'],
        'content_types__ic': opts['contentTypesIc'],
        'content_types__nic': opts['contentTypesNic'],
        'content_types__iew': opts['contentTypesIew'],
        'content_types__niew': opts['contentTypesNiew'],
        'content_types__isw': opts['contentTypesIsw'],
        'content_types__nisw': opts['contentTypesNisw'],
        'content_types__ie': opts['contentTypesIe'],
        'content_types__nie': opts['contentTypesNie'],
        'name__n': opts['nameN'],
        'name__ic': opts['nameIc'],
        'name__nic': opts['nameNic'],
        'name__iew': opts['nameIew'],
        'name__niew': opts['nameNiew'],
        'name__isw': opts['nameIsw'],
        'name__nisw': opts['nameNisw'],
        'name__ie': opts['nameIe'],
        'name__nie': opts['nameNie'],
        'name__empty': opts['nameEmpty'],
        'group_name__n': opts['groupNameN'],
        'group_name__ic': opts['groupNameIc'],
        'group_name__nic': opts['groupNameNic'],
        'group_name__iew': opts['groupNameIew'],
        'group_name__niew': opts['groupNameNiew'],
        'group_name__isw': opts['groupNameIsw'],
        'group_name__nisw': opts['groupNameNisw'],
        'group_name__ie': opts['groupNameIe'],
        'group_name__nie': opts['groupNameNie'],
        'group_name__empty': opts['groupNameEmpty'],
        'search_weight__n': opts['searchWeightN'],
        'search_weight__lte': opts['searchWeightLte'],
        'search_weight__lt': opts['searchWeightLt'],
        'search_weight__gte': opts['searchWeightGte'],
        'search_weight__gt': opts['searchWeightGt'],
        'filter_logic__n': opts['filterLogicN'],
        'ui_visibility__n': opts['uiVisibilityN'],
        'weight__n': opts['weightN'],
        'weight__lte': opts['weightLte'],
        'weight__lt': opts['weightLt'],
        'weight__gte': opts['weightGte'],
        'weight__gt': opts['weightGt'],
        'description__n': opts['descriptionN'],
        'description__ic': opts['descriptionIc'],
        'description__nic': opts['descriptionNic'],
        'description__iew': opts['descriptionIew'],
        'description__niew': opts['descriptionNiew'],
        'description__isw': opts['descriptionIsw'],
        'description__nisw': opts['descriptionNisw'],
        'description__ie': opts['descriptionIe'],
        'description__nie': opts['descriptionNie'],
        'description__empty': opts['descriptionEmpty'],
        'type__n': opts['typeN'],
        'content_type_id__n': opts['contentTypeIdN'],
        'content_type_id__lte': opts['contentTypeIdLte'],
        'content_type_id__lt': opts['contentTypeIdLt'],
        'content_type_id__gte': opts['contentTypeIdGte'],
        'content_type_id__gt': opts['contentTypeIdGt'],
        'ordering': opts['ordering'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExtrasCustomFieldsList200Response;
      return this.apiClient.callApi(
        '/extras/custom-fields/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasCustomFieldsPartialUpdate operation.
     * @callback module:api/ExtrasApi~extrasCustomFieldsPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomField} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this custom field.
     * @param {module:model/WritableCustomField} writableCustomField 
     * @param {module:api/ExtrasApi~extrasCustomFieldsPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomField}
     */
    extrasCustomFieldsPartialUpdate(id, writableCustomField, callback) {
      let postBody = writableCustomField;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasCustomFieldsPartialUpdate");
      }
      // verify the required parameter 'writableCustomField' is set
      if (writableCustomField === undefined || writableCustomField === null) {
        throw new Error("Missing the required parameter 'writableCustomField' when calling extrasCustomFieldsPartialUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CustomField;
      return this.apiClient.callApi(
        '/extras/custom-fields/{id}/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasCustomFieldsRead operation.
     * @callback module:api/ExtrasApi~extrasCustomFieldsReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomField} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this custom field.
     * @param {module:api/ExtrasApi~extrasCustomFieldsReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomField}
     */
    extrasCustomFieldsRead(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasCustomFieldsRead");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CustomField;
      return this.apiClient.callApi(
        '/extras/custom-fields/{id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasCustomFieldsUpdate operation.
     * @callback module:api/ExtrasApi~extrasCustomFieldsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomField} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this custom field.
     * @param {module:model/WritableCustomField} writableCustomField 
     * @param {module:api/ExtrasApi~extrasCustomFieldsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomField}
     */
    extrasCustomFieldsUpdate(id, writableCustomField, callback) {
      let postBody = writableCustomField;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasCustomFieldsUpdate");
      }
      // verify the required parameter 'writableCustomField' is set
      if (writableCustomField === undefined || writableCustomField === null) {
        throw new Error("Missing the required parameter 'writableCustomField' when calling extrasCustomFieldsUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CustomField;
      return this.apiClient.callApi(
        '/extras/custom-fields/{id}/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasCustomLinksBulkDelete operation.
     * @callback module:api/ExtrasApi~extrasCustomLinksBulkDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:api/ExtrasApi~extrasCustomLinksBulkDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    extrasCustomLinksBulkDelete(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/extras/custom-links/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasCustomLinksBulkPartialUpdate operation.
     * @callback module:api/ExtrasApi~extrasCustomLinksBulkPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomLink} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/CustomLink} customLink 
     * @param {module:api/ExtrasApi~extrasCustomLinksBulkPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomLink}
     */
    extrasCustomLinksBulkPartialUpdate(customLink, callback) {
      let postBody = customLink;
      // verify the required parameter 'customLink' is set
      if (customLink === undefined || customLink === null) {
        throw new Error("Missing the required parameter 'customLink' when calling extrasCustomLinksBulkPartialUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CustomLink;
      return this.apiClient.callApi(
        '/extras/custom-links/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasCustomLinksBulkUpdate operation.
     * @callback module:api/ExtrasApi~extrasCustomLinksBulkUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomLink} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/CustomLink} customLink 
     * @param {module:api/ExtrasApi~extrasCustomLinksBulkUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomLink}
     */
    extrasCustomLinksBulkUpdate(customLink, callback) {
      let postBody = customLink;
      // verify the required parameter 'customLink' is set
      if (customLink === undefined || customLink === null) {
        throw new Error("Missing the required parameter 'customLink' when calling extrasCustomLinksBulkUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CustomLink;
      return this.apiClient.callApi(
        '/extras/custom-links/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasCustomLinksCreate operation.
     * @callback module:api/ExtrasApi~extrasCustomLinksCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomLink} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/CustomLink} customLink 
     * @param {module:api/ExtrasApi~extrasCustomLinksCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomLink}
     */
    extrasCustomLinksCreate(customLink, callback) {
      let postBody = customLink;
      // verify the required parameter 'customLink' is set
      if (customLink === undefined || customLink === null) {
        throw new Error("Missing the required parameter 'customLink' when calling extrasCustomLinksCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CustomLink;
      return this.apiClient.callApi(
        '/extras/custom-links/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasCustomLinksDelete operation.
     * @callback module:api/ExtrasApi~extrasCustomLinksDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this custom link.
     * @param {module:api/ExtrasApi~extrasCustomLinksDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    extrasCustomLinksDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasCustomLinksDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/extras/custom-links/{id}/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasCustomLinksList operation.
     * @callback module:api/ExtrasApi~extrasCustomLinksListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExtrasCustomLinksList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Object} opts Optional parameters
     * @param {String} [id] 
     * @param {String} [contentTypes] 
     * @param {String} [name] 
     * @param {String} [enabled] 
     * @param {String} [linkText] 
     * @param {String} [linkUrl] 
     * @param {String} [weight] 
     * @param {String} [groupName] 
     * @param {String} [newWindow] 
     * @param {String} [q] 
     * @param {String} [contentTypeId] 
     * @param {String} [idN] 
     * @param {String} [idLte] 
     * @param {String} [idLt] 
     * @param {String} [idGte] 
     * @param {String} [idGt] 
     * @param {String} [contentTypesN] 
     * @param {String} [contentTypesIc] 
     * @param {String} [contentTypesNic] 
     * @param {String} [contentTypesIew] 
     * @param {String} [contentTypesNiew] 
     * @param {String} [contentTypesIsw] 
     * @param {String} [contentTypesNisw] 
     * @param {String} [contentTypesIe] 
     * @param {String} [contentTypesNie] 
     * @param {String} [nameN] 
     * @param {String} [nameIc] 
     * @param {String} [nameNic] 
     * @param {String} [nameIew] 
     * @param {String} [nameNiew] 
     * @param {String} [nameIsw] 
     * @param {String} [nameNisw] 
     * @param {String} [nameIe] 
     * @param {String} [nameNie] 
     * @param {String} [nameEmpty] 
     * @param {String} [linkTextN] 
     * @param {String} [linkTextIc] 
     * @param {String} [linkTextNic] 
     * @param {String} [linkTextIew] 
     * @param {String} [linkTextNiew] 
     * @param {String} [linkTextIsw] 
     * @param {String} [linkTextNisw] 
     * @param {String} [linkTextIe] 
     * @param {String} [linkTextNie] 
     * @param {String} [linkUrlN] 
     * @param {String} [linkUrlIc] 
     * @param {String} [linkUrlNic] 
     * @param {String} [linkUrlIew] 
     * @param {String} [linkUrlNiew] 
     * @param {String} [linkUrlIsw] 
     * @param {String} [linkUrlNisw] 
     * @param {String} [linkUrlIe] 
     * @param {String} [linkUrlNie] 
     * @param {String} [weightN] 
     * @param {String} [weightLte] 
     * @param {String} [weightLt] 
     * @param {String} [weightGte] 
     * @param {String} [weightGt] 
     * @param {String} [groupNameN] 
     * @param {String} [groupNameIc] 
     * @param {String} [groupNameNic] 
     * @param {String} [groupNameIew] 
     * @param {String} [groupNameNiew] 
     * @param {String} [groupNameIsw] 
     * @param {String} [groupNameNisw] 
     * @param {String} [groupNameIe] 
     * @param {String} [groupNameNie] 
     * @param {String} [groupNameEmpty] 
     * @param {String} [contentTypeIdN] 
     * @param {String} [contentTypeIdLte] 
     * @param {String} [contentTypeIdLt] 
     * @param {String} [contentTypeIdGte] 
     * @param {String} [contentTypeIdGt] 
     * @param {String} [ordering] Which field to use when ordering the results.
     * @param {Number} [limit] Number of results to return per page.
     * @param {Number} [offset] The initial index from which to return the results.
     * @param {module:api/ExtrasApi~extrasCustomLinksListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExtrasCustomLinksList200Response}
     */
    extrasCustomLinksList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'id': opts['id'],
        'content_types': opts['contentTypes'],
        'name': opts['name'],
        'enabled': opts['enabled'],
        'link_text': opts['linkText'],
        'link_url': opts['linkUrl'],
        'weight': opts['weight'],
        'group_name': opts['groupName'],
        'new_window': opts['newWindow'],
        'q': opts['q'],
        'content_type_id': opts['contentTypeId'],
        'id__n': opts['idN'],
        'id__lte': opts['idLte'],
        'id__lt': opts['idLt'],
        'id__gte': opts['idGte'],
        'id__gt': opts['idGt'],
        'content_types__n': opts['contentTypesN'],
        'content_types__ic': opts['contentTypesIc'],
        'content_types__nic': opts['contentTypesNic'],
        'content_types__iew': opts['contentTypesIew'],
        'content_types__niew': opts['contentTypesNiew'],
        'content_types__isw': opts['contentTypesIsw'],
        'content_types__nisw': opts['contentTypesNisw'],
        'content_types__ie': opts['contentTypesIe'],
        'content_types__nie': opts['contentTypesNie'],
        'name__n': opts['nameN'],
        'name__ic': opts['nameIc'],
        'name__nic': opts['nameNic'],
        'name__iew': opts['nameIew'],
        'name__niew': opts['nameNiew'],
        'name__isw': opts['nameIsw'],
        'name__nisw': opts['nameNisw'],
        'name__ie': opts['nameIe'],
        'name__nie': opts['nameNie'],
        'name__empty': opts['nameEmpty'],
        'link_text__n': opts['linkTextN'],
        'link_text__ic': opts['linkTextIc'],
        'link_text__nic': opts['linkTextNic'],
        'link_text__iew': opts['linkTextIew'],
        'link_text__niew': opts['linkTextNiew'],
        'link_text__isw': opts['linkTextIsw'],
        'link_text__nisw': opts['linkTextNisw'],
        'link_text__ie': opts['linkTextIe'],
        'link_text__nie': opts['linkTextNie'],
        'link_url__n': opts['linkUrlN'],
        'link_url__ic': opts['linkUrlIc'],
        'link_url__nic': opts['linkUrlNic'],
        'link_url__iew': opts['linkUrlIew'],
        'link_url__niew': opts['linkUrlNiew'],
        'link_url__isw': opts['linkUrlIsw'],
        'link_url__nisw': opts['linkUrlNisw'],
        'link_url__ie': opts['linkUrlIe'],
        'link_url__nie': opts['linkUrlNie'],
        'weight__n': opts['weightN'],
        'weight__lte': opts['weightLte'],
        'weight__lt': opts['weightLt'],
        'weight__gte': opts['weightGte'],
        'weight__gt': opts['weightGt'],
        'group_name__n': opts['groupNameN'],
        'group_name__ic': opts['groupNameIc'],
        'group_name__nic': opts['groupNameNic'],
        'group_name__iew': opts['groupNameIew'],
        'group_name__niew': opts['groupNameNiew'],
        'group_name__isw': opts['groupNameIsw'],
        'group_name__nisw': opts['groupNameNisw'],
        'group_name__ie': opts['groupNameIe'],
        'group_name__nie': opts['groupNameNie'],
        'group_name__empty': opts['groupNameEmpty'],
        'content_type_id__n': opts['contentTypeIdN'],
        'content_type_id__lte': opts['contentTypeIdLte'],
        'content_type_id__lt': opts['contentTypeIdLt'],
        'content_type_id__gte': opts['contentTypeIdGte'],
        'content_type_id__gt': opts['contentTypeIdGt'],
        'ordering': opts['ordering'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExtrasCustomLinksList200Response;
      return this.apiClient.callApi(
        '/extras/custom-links/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasCustomLinksPartialUpdate operation.
     * @callback module:api/ExtrasApi~extrasCustomLinksPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomLink} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this custom link.
     * @param {module:model/CustomLink} customLink 
     * @param {module:api/ExtrasApi~extrasCustomLinksPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomLink}
     */
    extrasCustomLinksPartialUpdate(id, customLink, callback) {
      let postBody = customLink;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasCustomLinksPartialUpdate");
      }
      // verify the required parameter 'customLink' is set
      if (customLink === undefined || customLink === null) {
        throw new Error("Missing the required parameter 'customLink' when calling extrasCustomLinksPartialUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CustomLink;
      return this.apiClient.callApi(
        '/extras/custom-links/{id}/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasCustomLinksRead operation.
     * @callback module:api/ExtrasApi~extrasCustomLinksReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomLink} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this custom link.
     * @param {module:api/ExtrasApi~extrasCustomLinksReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomLink}
     */
    extrasCustomLinksRead(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasCustomLinksRead");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CustomLink;
      return this.apiClient.callApi(
        '/extras/custom-links/{id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasCustomLinksUpdate operation.
     * @callback module:api/ExtrasApi~extrasCustomLinksUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomLink} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this custom link.
     * @param {module:model/CustomLink} customLink 
     * @param {module:api/ExtrasApi~extrasCustomLinksUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomLink}
     */
    extrasCustomLinksUpdate(id, customLink, callback) {
      let postBody = customLink;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasCustomLinksUpdate");
      }
      // verify the required parameter 'customLink' is set
      if (customLink === undefined || customLink === null) {
        throw new Error("Missing the required parameter 'customLink' when calling extrasCustomLinksUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CustomLink;
      return this.apiClient.callApi(
        '/extras/custom-links/{id}/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasExportTemplatesBulkDelete operation.
     * @callback module:api/ExtrasApi~extrasExportTemplatesBulkDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:api/ExtrasApi~extrasExportTemplatesBulkDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    extrasExportTemplatesBulkDelete(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/extras/export-templates/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasExportTemplatesBulkPartialUpdate operation.
     * @callback module:api/ExtrasApi~extrasExportTemplatesBulkPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExportTemplate} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/ExportTemplate} exportTemplate 
     * @param {module:api/ExtrasApi~extrasExportTemplatesBulkPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExportTemplate}
     */
    extrasExportTemplatesBulkPartialUpdate(exportTemplate, callback) {
      let postBody = exportTemplate;
      // verify the required parameter 'exportTemplate' is set
      if (exportTemplate === undefined || exportTemplate === null) {
        throw new Error("Missing the required parameter 'exportTemplate' when calling extrasExportTemplatesBulkPartialUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ExportTemplate;
      return this.apiClient.callApi(
        '/extras/export-templates/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasExportTemplatesBulkUpdate operation.
     * @callback module:api/ExtrasApi~extrasExportTemplatesBulkUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExportTemplate} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/ExportTemplate} exportTemplate 
     * @param {module:api/ExtrasApi~extrasExportTemplatesBulkUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExportTemplate}
     */
    extrasExportTemplatesBulkUpdate(exportTemplate, callback) {
      let postBody = exportTemplate;
      // verify the required parameter 'exportTemplate' is set
      if (exportTemplate === undefined || exportTemplate === null) {
        throw new Error("Missing the required parameter 'exportTemplate' when calling extrasExportTemplatesBulkUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ExportTemplate;
      return this.apiClient.callApi(
        '/extras/export-templates/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasExportTemplatesCreate operation.
     * @callback module:api/ExtrasApi~extrasExportTemplatesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExportTemplate} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/ExportTemplate} exportTemplate 
     * @param {module:api/ExtrasApi~extrasExportTemplatesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExportTemplate}
     */
    extrasExportTemplatesCreate(exportTemplate, callback) {
      let postBody = exportTemplate;
      // verify the required parameter 'exportTemplate' is set
      if (exportTemplate === undefined || exportTemplate === null) {
        throw new Error("Missing the required parameter 'exportTemplate' when calling extrasExportTemplatesCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ExportTemplate;
      return this.apiClient.callApi(
        '/extras/export-templates/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasExportTemplatesDelete operation.
     * @callback module:api/ExtrasApi~extrasExportTemplatesDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this export template.
     * @param {module:api/ExtrasApi~extrasExportTemplatesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    extrasExportTemplatesDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasExportTemplatesDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/extras/export-templates/{id}/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasExportTemplatesList operation.
     * @callback module:api/ExtrasApi~extrasExportTemplatesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExtrasExportTemplatesList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Object} opts Optional parameters
     * @param {String} [id] 
     * @param {String} [contentTypes] 
     * @param {String} [name] 
     * @param {String} [description] 
     * @param {String} [q] 
     * @param {String} [contentTypeId] 
     * @param {String} [idN] 
     * @param {String} [idLte] 
     * @param {String} [idLt] 
     * @param {String} [idGte] 
     * @param {String} [idGt] 
     * @param {String} [contentTypesN] 
     * @param {String} [contentTypesIc] 
     * @param {String} [contentTypesNic] 
     * @param {String} [contentTypesIew] 
     * @param {String} [contentTypesNiew] 
     * @param {String} [contentTypesIsw] 
     * @param {String} [contentTypesNisw] 
     * @param {String} [contentTypesIe] 
     * @param {String} [contentTypesNie] 
     * @param {String} [nameN] 
     * @param {String} [nameIc] 
     * @param {String} [nameNic] 
     * @param {String} [nameIew] 
     * @param {String} [nameNiew] 
     * @param {String} [nameIsw] 
     * @param {String} [nameNisw] 
     * @param {String} [nameIe] 
     * @param {String} [nameNie] 
     * @param {String} [nameEmpty] 
     * @param {String} [descriptionN] 
     * @param {String} [descriptionIc] 
     * @param {String} [descriptionNic] 
     * @param {String} [descriptionIew] 
     * @param {String} [descriptionNiew] 
     * @param {String} [descriptionIsw] 
     * @param {String} [descriptionNisw] 
     * @param {String} [descriptionIe] 
     * @param {String} [descriptionNie] 
     * @param {String} [descriptionEmpty] 
     * @param {String} [contentTypeIdN] 
     * @param {String} [contentTypeIdLte] 
     * @param {String} [contentTypeIdLt] 
     * @param {String} [contentTypeIdGte] 
     * @param {String} [contentTypeIdGt] 
     * @param {String} [ordering] Which field to use when ordering the results.
     * @param {Number} [limit] Number of results to return per page.
     * @param {Number} [offset] The initial index from which to return the results.
     * @param {module:api/ExtrasApi~extrasExportTemplatesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExtrasExportTemplatesList200Response}
     */
    extrasExportTemplatesList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'id': opts['id'],
        'content_types': opts['contentTypes'],
        'name': opts['name'],
        'description': opts['description'],
        'q': opts['q'],
        'content_type_id': opts['contentTypeId'],
        'id__n': opts['idN'],
        'id__lte': opts['idLte'],
        'id__lt': opts['idLt'],
        'id__gte': opts['idGte'],
        'id__gt': opts['idGt'],
        'content_types__n': opts['contentTypesN'],
        'content_types__ic': opts['contentTypesIc'],
        'content_types__nic': opts['contentTypesNic'],
        'content_types__iew': opts['contentTypesIew'],
        'content_types__niew': opts['contentTypesNiew'],
        'content_types__isw': opts['contentTypesIsw'],
        'content_types__nisw': opts['contentTypesNisw'],
        'content_types__ie': opts['contentTypesIe'],
        'content_types__nie': opts['contentTypesNie'],
        'name__n': opts['nameN'],
        'name__ic': opts['nameIc'],
        'name__nic': opts['nameNic'],
        'name__iew': opts['nameIew'],
        'name__niew': opts['nameNiew'],
        'name__isw': opts['nameIsw'],
        'name__nisw': opts['nameNisw'],
        'name__ie': opts['nameIe'],
        'name__nie': opts['nameNie'],
        'name__empty': opts['nameEmpty'],
        'description__n': opts['descriptionN'],
        'description__ic': opts['descriptionIc'],
        'description__nic': opts['descriptionNic'],
        'description__iew': opts['descriptionIew'],
        'description__niew': opts['descriptionNiew'],
        'description__isw': opts['descriptionIsw'],
        'description__nisw': opts['descriptionNisw'],
        'description__ie': opts['descriptionIe'],
        'description__nie': opts['descriptionNie'],
        'description__empty': opts['descriptionEmpty'],
        'content_type_id__n': opts['contentTypeIdN'],
        'content_type_id__lte': opts['contentTypeIdLte'],
        'content_type_id__lt': opts['contentTypeIdLt'],
        'content_type_id__gte': opts['contentTypeIdGte'],
        'content_type_id__gt': opts['contentTypeIdGt'],
        'ordering': opts['ordering'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExtrasExportTemplatesList200Response;
      return this.apiClient.callApi(
        '/extras/export-templates/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasExportTemplatesPartialUpdate operation.
     * @callback module:api/ExtrasApi~extrasExportTemplatesPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExportTemplate} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this export template.
     * @param {module:model/ExportTemplate} exportTemplate 
     * @param {module:api/ExtrasApi~extrasExportTemplatesPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExportTemplate}
     */
    extrasExportTemplatesPartialUpdate(id, exportTemplate, callback) {
      let postBody = exportTemplate;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasExportTemplatesPartialUpdate");
      }
      // verify the required parameter 'exportTemplate' is set
      if (exportTemplate === undefined || exportTemplate === null) {
        throw new Error("Missing the required parameter 'exportTemplate' when calling extrasExportTemplatesPartialUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ExportTemplate;
      return this.apiClient.callApi(
        '/extras/export-templates/{id}/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasExportTemplatesRead operation.
     * @callback module:api/ExtrasApi~extrasExportTemplatesReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExportTemplate} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this export template.
     * @param {module:api/ExtrasApi~extrasExportTemplatesReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExportTemplate}
     */
    extrasExportTemplatesRead(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasExportTemplatesRead");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExportTemplate;
      return this.apiClient.callApi(
        '/extras/export-templates/{id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasExportTemplatesUpdate operation.
     * @callback module:api/ExtrasApi~extrasExportTemplatesUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExportTemplate} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this export template.
     * @param {module:model/ExportTemplate} exportTemplate 
     * @param {module:api/ExtrasApi~extrasExportTemplatesUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExportTemplate}
     */
    extrasExportTemplatesUpdate(id, exportTemplate, callback) {
      let postBody = exportTemplate;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasExportTemplatesUpdate");
      }
      // verify the required parameter 'exportTemplate' is set
      if (exportTemplate === undefined || exportTemplate === null) {
        throw new Error("Missing the required parameter 'exportTemplate' when calling extrasExportTemplatesUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ExportTemplate;
      return this.apiClient.callApi(
        '/extras/export-templates/{id}/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasImageAttachmentsBulkDelete operation.
     * @callback module:api/ExtrasApi~extrasImageAttachmentsBulkDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:api/ExtrasApi~extrasImageAttachmentsBulkDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    extrasImageAttachmentsBulkDelete(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/extras/image-attachments/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasImageAttachmentsBulkPartialUpdate operation.
     * @callback module:api/ExtrasApi~extrasImageAttachmentsBulkPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ImageAttachment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/ImageAttachment} imageAttachment 
     * @param {module:api/ExtrasApi~extrasImageAttachmentsBulkPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ImageAttachment}
     */
    extrasImageAttachmentsBulkPartialUpdate(imageAttachment, callback) {
      let postBody = imageAttachment;
      // verify the required parameter 'imageAttachment' is set
      if (imageAttachment === undefined || imageAttachment === null) {
        throw new Error("Missing the required parameter 'imageAttachment' when calling extrasImageAttachmentsBulkPartialUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ImageAttachment;
      return this.apiClient.callApi(
        '/extras/image-attachments/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasImageAttachmentsBulkUpdate operation.
     * @callback module:api/ExtrasApi~extrasImageAttachmentsBulkUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ImageAttachment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/ImageAttachment} imageAttachment 
     * @param {module:api/ExtrasApi~extrasImageAttachmentsBulkUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ImageAttachment}
     */
    extrasImageAttachmentsBulkUpdate(imageAttachment, callback) {
      let postBody = imageAttachment;
      // verify the required parameter 'imageAttachment' is set
      if (imageAttachment === undefined || imageAttachment === null) {
        throw new Error("Missing the required parameter 'imageAttachment' when calling extrasImageAttachmentsBulkUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ImageAttachment;
      return this.apiClient.callApi(
        '/extras/image-attachments/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasImageAttachmentsCreate operation.
     * @callback module:api/ExtrasApi~extrasImageAttachmentsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ImageAttachment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/ImageAttachment} imageAttachment 
     * @param {module:api/ExtrasApi~extrasImageAttachmentsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ImageAttachment}
     */
    extrasImageAttachmentsCreate(imageAttachment, callback) {
      let postBody = imageAttachment;
      // verify the required parameter 'imageAttachment' is set
      if (imageAttachment === undefined || imageAttachment === null) {
        throw new Error("Missing the required parameter 'imageAttachment' when calling extrasImageAttachmentsCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ImageAttachment;
      return this.apiClient.callApi(
        '/extras/image-attachments/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasImageAttachmentsDelete operation.
     * @callback module:api/ExtrasApi~extrasImageAttachmentsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this image attachment.
     * @param {module:api/ExtrasApi~extrasImageAttachmentsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    extrasImageAttachmentsDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasImageAttachmentsDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/extras/image-attachments/{id}/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasImageAttachmentsList operation.
     * @callback module:api/ExtrasApi~extrasImageAttachmentsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExtrasImageAttachmentsList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Object} opts Optional parameters
     * @param {String} [id] 
     * @param {String} [contentTypeId] 
     * @param {String} [objectId] 
     * @param {String} [name] 
     * @param {String} [q] 
     * @param {String} [created] 
     * @param {String} [contentType] 
     * @param {String} [idN] 
     * @param {String} [idLte] 
     * @param {String} [idLt] 
     * @param {String} [idGte] 
     * @param {String} [idGt] 
     * @param {String} [contentTypeIdN] 
     * @param {String} [objectIdN] 
     * @param {String} [objectIdLte] 
     * @param {String} [objectIdLt] 
     * @param {String} [objectIdGte] 
     * @param {String} [objectIdGt] 
     * @param {String} [nameN] 
     * @param {String} [nameIc] 
     * @param {String} [nameNic] 
     * @param {String} [nameIew] 
     * @param {String} [nameNiew] 
     * @param {String} [nameIsw] 
     * @param {String} [nameNisw] 
     * @param {String} [nameIe] 
     * @param {String} [nameNie] 
     * @param {String} [nameEmpty] 
     * @param {String} [contentTypeN] 
     * @param {String} [ordering] Which field to use when ordering the results.
     * @param {Number} [limit] Number of results to return per page.
     * @param {Number} [offset] The initial index from which to return the results.
     * @param {module:api/ExtrasApi~extrasImageAttachmentsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExtrasImageAttachmentsList200Response}
     */
    extrasImageAttachmentsList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'id': opts['id'],
        'content_type_id': opts['contentTypeId'],
        'object_id': opts['objectId'],
        'name': opts['name'],
        'q': opts['q'],
        'created': opts['created'],
        'content_type': opts['contentType'],
        'id__n': opts['idN'],
        'id__lte': opts['idLte'],
        'id__lt': opts['idLt'],
        'id__gte': opts['idGte'],
        'id__gt': opts['idGt'],
        'content_type_id__n': opts['contentTypeIdN'],
        'object_id__n': opts['objectIdN'],
        'object_id__lte': opts['objectIdLte'],
        'object_id__lt': opts['objectIdLt'],
        'object_id__gte': opts['objectIdGte'],
        'object_id__gt': opts['objectIdGt'],
        'name__n': opts['nameN'],
        'name__ic': opts['nameIc'],
        'name__nic': opts['nameNic'],
        'name__iew': opts['nameIew'],
        'name__niew': opts['nameNiew'],
        'name__isw': opts['nameIsw'],
        'name__nisw': opts['nameNisw'],
        'name__ie': opts['nameIe'],
        'name__nie': opts['nameNie'],
        'name__empty': opts['nameEmpty'],
        'content_type__n': opts['contentTypeN'],
        'ordering': opts['ordering'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExtrasImageAttachmentsList200Response;
      return this.apiClient.callApi(
        '/extras/image-attachments/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasImageAttachmentsPartialUpdate operation.
     * @callback module:api/ExtrasApi~extrasImageAttachmentsPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ImageAttachment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this image attachment.
     * @param {module:model/ImageAttachment} imageAttachment 
     * @param {module:api/ExtrasApi~extrasImageAttachmentsPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ImageAttachment}
     */
    extrasImageAttachmentsPartialUpdate(id, imageAttachment, callback) {
      let postBody = imageAttachment;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasImageAttachmentsPartialUpdate");
      }
      // verify the required parameter 'imageAttachment' is set
      if (imageAttachment === undefined || imageAttachment === null) {
        throw new Error("Missing the required parameter 'imageAttachment' when calling extrasImageAttachmentsPartialUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ImageAttachment;
      return this.apiClient.callApi(
        '/extras/image-attachments/{id}/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasImageAttachmentsRead operation.
     * @callback module:api/ExtrasApi~extrasImageAttachmentsReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ImageAttachment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this image attachment.
     * @param {module:api/ExtrasApi~extrasImageAttachmentsReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ImageAttachment}
     */
    extrasImageAttachmentsRead(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasImageAttachmentsRead");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ImageAttachment;
      return this.apiClient.callApi(
        '/extras/image-attachments/{id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasImageAttachmentsUpdate operation.
     * @callback module:api/ExtrasApi~extrasImageAttachmentsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ImageAttachment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this image attachment.
     * @param {module:model/ImageAttachment} imageAttachment 
     * @param {module:api/ExtrasApi~extrasImageAttachmentsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ImageAttachment}
     */
    extrasImageAttachmentsUpdate(id, imageAttachment, callback) {
      let postBody = imageAttachment;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasImageAttachmentsUpdate");
      }
      // verify the required parameter 'imageAttachment' is set
      if (imageAttachment === undefined || imageAttachment === null) {
        throw new Error("Missing the required parameter 'imageAttachment' when calling extrasImageAttachmentsUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ImageAttachment;
      return this.apiClient.callApi(
        '/extras/image-attachments/{id}/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasJobResultsList operation.
     * @callback module:api/ExtrasApi~extrasJobResultsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExtrasJobResultsList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of job results
     * @param {Object} opts Optional parameters
     * @param {String} [id] 
     * @param {String} [interval] 
     * @param {String} [status] 
     * @param {String} [user] 
     * @param {String} [objType] 
     * @param {String} [name] 
     * @param {String} [q] 
     * @param {String} [created] 
     * @param {String} [createdBefore] 
     * @param {String} [createdAfter] 
     * @param {String} [scheduled] 
     * @param {String} [scheduledBefore] 
     * @param {String} [scheduledAfter] 
     * @param {String} [started] 
     * @param {String} [startedBefore] 
     * @param {String} [startedAfter] 
     * @param {String} [completed] 
     * @param {String} [completedBefore] 
     * @param {String} [completedAfter] 
     * @param {String} [idN] 
     * @param {String} [idLte] 
     * @param {String} [idLt] 
     * @param {String} [idGte] 
     * @param {String} [idGt] 
     * @param {String} [intervalN] 
     * @param {String} [intervalLte] 
     * @param {String} [intervalLt] 
     * @param {String} [intervalGte] 
     * @param {String} [intervalGt] 
     * @param {String} [statusN] 
     * @param {String} [userN] 
     * @param {String} [objTypeN] 
     * @param {String} [nameN] 
     * @param {String} [nameIc] 
     * @param {String} [nameNic] 
     * @param {String} [nameIew] 
     * @param {String} [nameNiew] 
     * @param {String} [nameIsw] 
     * @param {String} [nameNisw] 
     * @param {String} [nameIe] 
     * @param {String} [nameNie] 
     * @param {String} [nameEmpty] 
     * @param {String} [ordering] Which field to use when ordering the results.
     * @param {Number} [limit] Number of results to return per page.
     * @param {Number} [offset] The initial index from which to return the results.
     * @param {module:api/ExtrasApi~extrasJobResultsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExtrasJobResultsList200Response}
     */
    extrasJobResultsList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'id': opts['id'],
        'interval': opts['interval'],
        'status': opts['status'],
        'user': opts['user'],
        'obj_type': opts['objType'],
        'name': opts['name'],
        'q': opts['q'],
        'created': opts['created'],
        'created__before': opts['createdBefore'],
        'created__after': opts['createdAfter'],
        'scheduled': opts['scheduled'],
        'scheduled__before': opts['scheduledBefore'],
        'scheduled__after': opts['scheduledAfter'],
        'started': opts['started'],
        'started__before': opts['startedBefore'],
        'started__after': opts['startedAfter'],
        'completed': opts['completed'],
        'completed__before': opts['completedBefore'],
        'completed__after': opts['completedAfter'],
        'id__n': opts['idN'],
        'id__lte': opts['idLte'],
        'id__lt': opts['idLt'],
        'id__gte': opts['idGte'],
        'id__gt': opts['idGt'],
        'interval__n': opts['intervalN'],
        'interval__lte': opts['intervalLte'],
        'interval__lt': opts['intervalLt'],
        'interval__gte': opts['intervalGte'],
        'interval__gt': opts['intervalGt'],
        'status__n': opts['statusN'],
        'user__n': opts['userN'],
        'obj_type__n': opts['objTypeN'],
        'name__n': opts['nameN'],
        'name__ic': opts['nameIc'],
        'name__nic': opts['nameNic'],
        'name__iew': opts['nameIew'],
        'name__niew': opts['nameNiew'],
        'name__isw': opts['nameIsw'],
        'name__nisw': opts['nameNisw'],
        'name__ie': opts['nameIe'],
        'name__nie': opts['nameNie'],
        'name__empty': opts['nameEmpty'],
        'ordering': opts['ordering'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExtrasJobResultsList200Response;
      return this.apiClient.callApi(
        '/extras/job-results/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasJobResultsRead operation.
     * @callback module:api/ExtrasApi~extrasJobResultsReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/JobResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of job results
     * @param {Number} id A unique integer value identifying this job result.
     * @param {module:api/ExtrasApi~extrasJobResultsReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/JobResult}
     */
    extrasJobResultsRead(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasJobResultsRead");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = JobResult;
      return this.apiClient.callApi(
        '/extras/job-results/{id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasJournalEntriesBulkDelete operation.
     * @callback module:api/ExtrasApi~extrasJournalEntriesBulkDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:api/ExtrasApi~extrasJournalEntriesBulkDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    extrasJournalEntriesBulkDelete(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/extras/journal-entries/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasJournalEntriesBulkPartialUpdate operation.
     * @callback module:api/ExtrasApi~extrasJournalEntriesBulkPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/JournalEntry} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/WritableJournalEntry} writableJournalEntry 
     * @param {module:api/ExtrasApi~extrasJournalEntriesBulkPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/JournalEntry}
     */
    extrasJournalEntriesBulkPartialUpdate(writableJournalEntry, callback) {
      let postBody = writableJournalEntry;
      // verify the required parameter 'writableJournalEntry' is set
      if (writableJournalEntry === undefined || writableJournalEntry === null) {
        throw new Error("Missing the required parameter 'writableJournalEntry' when calling extrasJournalEntriesBulkPartialUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = JournalEntry;
      return this.apiClient.callApi(
        '/extras/journal-entries/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasJournalEntriesBulkUpdate operation.
     * @callback module:api/ExtrasApi~extrasJournalEntriesBulkUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/JournalEntry} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/WritableJournalEntry} writableJournalEntry 
     * @param {module:api/ExtrasApi~extrasJournalEntriesBulkUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/JournalEntry}
     */
    extrasJournalEntriesBulkUpdate(writableJournalEntry, callback) {
      let postBody = writableJournalEntry;
      // verify the required parameter 'writableJournalEntry' is set
      if (writableJournalEntry === undefined || writableJournalEntry === null) {
        throw new Error("Missing the required parameter 'writableJournalEntry' when calling extrasJournalEntriesBulkUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = JournalEntry;
      return this.apiClient.callApi(
        '/extras/journal-entries/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasJournalEntriesCreate operation.
     * @callback module:api/ExtrasApi~extrasJournalEntriesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/JournalEntry} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/WritableJournalEntry} writableJournalEntry 
     * @param {module:api/ExtrasApi~extrasJournalEntriesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/JournalEntry}
     */
    extrasJournalEntriesCreate(writableJournalEntry, callback) {
      let postBody = writableJournalEntry;
      // verify the required parameter 'writableJournalEntry' is set
      if (writableJournalEntry === undefined || writableJournalEntry === null) {
        throw new Error("Missing the required parameter 'writableJournalEntry' when calling extrasJournalEntriesCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = JournalEntry;
      return this.apiClient.callApi(
        '/extras/journal-entries/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasJournalEntriesDelete operation.
     * @callback module:api/ExtrasApi~extrasJournalEntriesDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this journal entry.
     * @param {module:api/ExtrasApi~extrasJournalEntriesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    extrasJournalEntriesDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasJournalEntriesDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/extras/journal-entries/{id}/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasJournalEntriesList operation.
     * @callback module:api/ExtrasApi~extrasJournalEntriesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExtrasJournalEntriesList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Object} opts Optional parameters
     * @param {String} [id] 
     * @param {String} [assignedObjectTypeId] 
     * @param {String} [assignedObjectId] 
     * @param {String} [created] 
     * @param {String} [kind] 
     * @param {String} [lastUpdated] 
     * @param {String} [q] 
     * @param {String} [tag] 
     * @param {String} [assignedObjectType] 
     * @param {String} [createdById] 
     * @param {String} [createdBy] 
     * @param {String} [idN] 
     * @param {String} [idLte] 
     * @param {String} [idLt] 
     * @param {String} [idGte] 
     * @param {String} [idGt] 
     * @param {String} [assignedObjectTypeIdN] 
     * @param {String} [assignedObjectIdN] 
     * @param {String} [assignedObjectIdLte] 
     * @param {String} [assignedObjectIdLt] 
     * @param {String} [assignedObjectIdGte] 
     * @param {String} [assignedObjectIdGt] 
     * @param {String} [kindN] 
     * @param {String} [lastUpdatedN] 
     * @param {String} [lastUpdatedLte] 
     * @param {String} [lastUpdatedLt] 
     * @param {String} [lastUpdatedGte] 
     * @param {String} [lastUpdatedGt] 
     * @param {String} [tagN] 
     * @param {String} [assignedObjectTypeN] 
     * @param {String} [createdByIdN] 
     * @param {String} [createdByN] 
     * @param {String} [ordering] Which field to use when ordering the results.
     * @param {Number} [limit] Number of results to return per page.
     * @param {Number} [offset] The initial index from which to return the results.
     * @param {module:api/ExtrasApi~extrasJournalEntriesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExtrasJournalEntriesList200Response}
     */
    extrasJournalEntriesList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'id': opts['id'],
        'assigned_object_type_id': opts['assignedObjectTypeId'],
        'assigned_object_id': opts['assignedObjectId'],
        'created': opts['created'],
        'kind': opts['kind'],
        'last_updated': opts['lastUpdated'],
        'q': opts['q'],
        'tag': opts['tag'],
        'assigned_object_type': opts['assignedObjectType'],
        'created_by_id': opts['createdById'],
        'created_by': opts['createdBy'],
        'id__n': opts['idN'],
        'id__lte': opts['idLte'],
        'id__lt': opts['idLt'],
        'id__gte': opts['idGte'],
        'id__gt': opts['idGt'],
        'assigned_object_type_id__n': opts['assignedObjectTypeIdN'],
        'assigned_object_id__n': opts['assignedObjectIdN'],
        'assigned_object_id__lte': opts['assignedObjectIdLte'],
        'assigned_object_id__lt': opts['assignedObjectIdLt'],
        'assigned_object_id__gte': opts['assignedObjectIdGte'],
        'assigned_object_id__gt': opts['assignedObjectIdGt'],
        'kind__n': opts['kindN'],
        'last_updated__n': opts['lastUpdatedN'],
        'last_updated__lte': opts['lastUpdatedLte'],
        'last_updated__lt': opts['lastUpdatedLt'],
        'last_updated__gte': opts['lastUpdatedGte'],
        'last_updated__gt': opts['lastUpdatedGt'],
        'tag__n': opts['tagN'],
        'assigned_object_type__n': opts['assignedObjectTypeN'],
        'created_by_id__n': opts['createdByIdN'],
        'created_by__n': opts['createdByN'],
        'ordering': opts['ordering'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExtrasJournalEntriesList200Response;
      return this.apiClient.callApi(
        '/extras/journal-entries/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasJournalEntriesPartialUpdate operation.
     * @callback module:api/ExtrasApi~extrasJournalEntriesPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/JournalEntry} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this journal entry.
     * @param {module:model/WritableJournalEntry} writableJournalEntry 
     * @param {module:api/ExtrasApi~extrasJournalEntriesPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/JournalEntry}
     */
    extrasJournalEntriesPartialUpdate(id, writableJournalEntry, callback) {
      let postBody = writableJournalEntry;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasJournalEntriesPartialUpdate");
      }
      // verify the required parameter 'writableJournalEntry' is set
      if (writableJournalEntry === undefined || writableJournalEntry === null) {
        throw new Error("Missing the required parameter 'writableJournalEntry' when calling extrasJournalEntriesPartialUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = JournalEntry;
      return this.apiClient.callApi(
        '/extras/journal-entries/{id}/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasJournalEntriesRead operation.
     * @callback module:api/ExtrasApi~extrasJournalEntriesReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/JournalEntry} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this journal entry.
     * @param {module:api/ExtrasApi~extrasJournalEntriesReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/JournalEntry}
     */
    extrasJournalEntriesRead(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasJournalEntriesRead");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = JournalEntry;
      return this.apiClient.callApi(
        '/extras/journal-entries/{id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasJournalEntriesUpdate operation.
     * @callback module:api/ExtrasApi~extrasJournalEntriesUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/JournalEntry} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this journal entry.
     * @param {module:model/WritableJournalEntry} writableJournalEntry 
     * @param {module:api/ExtrasApi~extrasJournalEntriesUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/JournalEntry}
     */
    extrasJournalEntriesUpdate(id, writableJournalEntry, callback) {
      let postBody = writableJournalEntry;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasJournalEntriesUpdate");
      }
      // verify the required parameter 'writableJournalEntry' is set
      if (writableJournalEntry === undefined || writableJournalEntry === null) {
        throw new Error("Missing the required parameter 'writableJournalEntry' when calling extrasJournalEntriesUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = JournalEntry;
      return this.apiClient.callApi(
        '/extras/journal-entries/{id}/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasObjectChangesList operation.
     * @callback module:api/ExtrasApi~extrasObjectChangesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExtrasObjectChangesList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of recent changes.
     * @param {Object} opts Optional parameters
     * @param {String} [id] 
     * @param {String} [user] 
     * @param {String} [userName] 
     * @param {String} [requestId] 
     * @param {String} [action] 
     * @param {String} [changedObjectTypeId] 
     * @param {String} [changedObjectId] 
     * @param {String} [objectRepr] 
     * @param {String} [q] 
     * @param {String} [time] 
     * @param {String} [changedObjectType] 
     * @param {String} [userId] 
     * @param {String} [idN] 
     * @param {String} [idLte] 
     * @param {String} [idLt] 
     * @param {String} [idGte] 
     * @param {String} [idGt] 
     * @param {String} [userN] 
     * @param {String} [userNameN] 
     * @param {String} [userNameIc] 
     * @param {String} [userNameNic] 
     * @param {String} [userNameIew] 
     * @param {String} [userNameNiew] 
     * @param {String} [userNameIsw] 
     * @param {String} [userNameNisw] 
     * @param {String} [userNameIe] 
     * @param {String} [userNameNie] 
     * @param {String} [userNameEmpty] 
     * @param {String} [actionN] 
     * @param {String} [changedObjectTypeIdN] 
     * @param {String} [changedObjectIdN] 
     * @param {String} [changedObjectIdLte] 
     * @param {String} [changedObjectIdLt] 
     * @param {String} [changedObjectIdGte] 
     * @param {String} [changedObjectIdGt] 
     * @param {String} [objectReprN] 
     * @param {String} [objectReprIc] 
     * @param {String} [objectReprNic] 
     * @param {String} [objectReprIew] 
     * @param {String} [objectReprNiew] 
     * @param {String} [objectReprIsw] 
     * @param {String} [objectReprNisw] 
     * @param {String} [objectReprIe] 
     * @param {String} [objectReprNie] 
     * @param {String} [objectReprEmpty] 
     * @param {String} [changedObjectTypeN] 
     * @param {String} [userIdN] 
     * @param {String} [ordering] Which field to use when ordering the results.
     * @param {Number} [limit] Number of results to return per page.
     * @param {Number} [offset] The initial index from which to return the results.
     * @param {module:api/ExtrasApi~extrasObjectChangesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExtrasObjectChangesList200Response}
     */
    extrasObjectChangesList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'id': opts['id'],
        'user': opts['user'],
        'user_name': opts['userName'],
        'request_id': opts['requestId'],
        'action': opts['action'],
        'changed_object_type_id': opts['changedObjectTypeId'],
        'changed_object_id': opts['changedObjectId'],
        'object_repr': opts['objectRepr'],
        'q': opts['q'],
        'time': opts['time'],
        'changed_object_type': opts['changedObjectType'],
        'user_id': opts['userId'],
        'id__n': opts['idN'],
        'id__lte': opts['idLte'],
        'id__lt': opts['idLt'],
        'id__gte': opts['idGte'],
        'id__gt': opts['idGt'],
        'user__n': opts['userN'],
        'user_name__n': opts['userNameN'],
        'user_name__ic': opts['userNameIc'],
        'user_name__nic': opts['userNameNic'],
        'user_name__iew': opts['userNameIew'],
        'user_name__niew': opts['userNameNiew'],
        'user_name__isw': opts['userNameIsw'],
        'user_name__nisw': opts['userNameNisw'],
        'user_name__ie': opts['userNameIe'],
        'user_name__nie': opts['userNameNie'],
        'user_name__empty': opts['userNameEmpty'],
        'action__n': opts['actionN'],
        'changed_object_type_id__n': opts['changedObjectTypeIdN'],
        'changed_object_id__n': opts['changedObjectIdN'],
        'changed_object_id__lte': opts['changedObjectIdLte'],
        'changed_object_id__lt': opts['changedObjectIdLt'],
        'changed_object_id__gte': opts['changedObjectIdGte'],
        'changed_object_id__gt': opts['changedObjectIdGt'],
        'object_repr__n': opts['objectReprN'],
        'object_repr__ic': opts['objectReprIc'],
        'object_repr__nic': opts['objectReprNic'],
        'object_repr__iew': opts['objectReprIew'],
        'object_repr__niew': opts['objectReprNiew'],
        'object_repr__isw': opts['objectReprIsw'],
        'object_repr__nisw': opts['objectReprNisw'],
        'object_repr__ie': opts['objectReprIe'],
        'object_repr__nie': opts['objectReprNie'],
        'object_repr__empty': opts['objectReprEmpty'],
        'changed_object_type__n': opts['changedObjectTypeN'],
        'user_id__n': opts['userIdN'],
        'ordering': opts['ordering'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExtrasObjectChangesList200Response;
      return this.apiClient.callApi(
        '/extras/object-changes/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasObjectChangesRead operation.
     * @callback module:api/ExtrasApi~extrasObjectChangesReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ObjectChange} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of recent changes.
     * @param {Number} id A unique integer value identifying this object change.
     * @param {module:api/ExtrasApi~extrasObjectChangesReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ObjectChange}
     */
    extrasObjectChangesRead(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasObjectChangesRead");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ObjectChange;
      return this.apiClient.callApi(
        '/extras/object-changes/{id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasReportsList operation.
     * @callback module:api/ExtrasApi~extrasReportsListCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Compile all reports and their related results (if any). Result data is deferred in the list view.
     * @param {module:api/ExtrasApi~extrasReportsListCallback} callback The callback function, accepting three arguments: error, data, response
     */
    extrasReportsList(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/extras/reports/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasReportsRead operation.
     * @callback module:api/ExtrasApi~extrasReportsReadCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a single Report identified as \"<module>.<report>\".
     * @param {String} id 
     * @param {module:api/ExtrasApi~extrasReportsReadCallback} callback The callback function, accepting three arguments: error, data, response
     */
    extrasReportsRead(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasReportsRead");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/extras/reports/{id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasReportsRun operation.
     * @callback module:api/ExtrasApi~extrasReportsRunCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Run a Report identified as \"<module>.<script>\" and return the pending JobResult as the result
     * @param {String} id 
     * @param {module:api/ExtrasApi~extrasReportsRunCallback} callback The callback function, accepting three arguments: error, data, response
     */
    extrasReportsRun(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasReportsRun");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/extras/reports/{id}/run/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasSavedFiltersBulkDelete operation.
     * @callback module:api/ExtrasApi~extrasSavedFiltersBulkDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:api/ExtrasApi~extrasSavedFiltersBulkDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    extrasSavedFiltersBulkDelete(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/extras/saved-filters/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasSavedFiltersBulkPartialUpdate operation.
     * @callback module:api/ExtrasApi~extrasSavedFiltersBulkPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SavedFilter} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/SavedFilter} savedFilter 
     * @param {module:api/ExtrasApi~extrasSavedFiltersBulkPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SavedFilter}
     */
    extrasSavedFiltersBulkPartialUpdate(savedFilter, callback) {
      let postBody = savedFilter;
      // verify the required parameter 'savedFilter' is set
      if (savedFilter === undefined || savedFilter === null) {
        throw new Error("Missing the required parameter 'savedFilter' when calling extrasSavedFiltersBulkPartialUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SavedFilter;
      return this.apiClient.callApi(
        '/extras/saved-filters/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasSavedFiltersBulkUpdate operation.
     * @callback module:api/ExtrasApi~extrasSavedFiltersBulkUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SavedFilter} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/SavedFilter} savedFilter 
     * @param {module:api/ExtrasApi~extrasSavedFiltersBulkUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SavedFilter}
     */
    extrasSavedFiltersBulkUpdate(savedFilter, callback) {
      let postBody = savedFilter;
      // verify the required parameter 'savedFilter' is set
      if (savedFilter === undefined || savedFilter === null) {
        throw new Error("Missing the required parameter 'savedFilter' when calling extrasSavedFiltersBulkUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SavedFilter;
      return this.apiClient.callApi(
        '/extras/saved-filters/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasSavedFiltersCreate operation.
     * @callback module:api/ExtrasApi~extrasSavedFiltersCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SavedFilter} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/SavedFilter} savedFilter 
     * @param {module:api/ExtrasApi~extrasSavedFiltersCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SavedFilter}
     */
    extrasSavedFiltersCreate(savedFilter, callback) {
      let postBody = savedFilter;
      // verify the required parameter 'savedFilter' is set
      if (savedFilter === undefined || savedFilter === null) {
        throw new Error("Missing the required parameter 'savedFilter' when calling extrasSavedFiltersCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SavedFilter;
      return this.apiClient.callApi(
        '/extras/saved-filters/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasSavedFiltersDelete operation.
     * @callback module:api/ExtrasApi~extrasSavedFiltersDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this saved filter.
     * @param {module:api/ExtrasApi~extrasSavedFiltersDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    extrasSavedFiltersDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasSavedFiltersDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/extras/saved-filters/{id}/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasSavedFiltersList operation.
     * @callback module:api/ExtrasApi~extrasSavedFiltersListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExtrasSavedFiltersList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Object} opts Optional parameters
     * @param {String} [id] 
     * @param {String} [contentTypes] 
     * @param {String} [name] 
     * @param {String} [slug] 
     * @param {String} [description] 
     * @param {String} [enabled] 
     * @param {String} [shared] 
     * @param {String} [weight] 
     * @param {String} [q] 
     * @param {String} [contentTypeId] 
     * @param {String} [userId] 
     * @param {String} [user] 
     * @param {String} [usable] 
     * @param {String} [idN] 
     * @param {String} [idLte] 
     * @param {String} [idLt] 
     * @param {String} [idGte] 
     * @param {String} [idGt] 
     * @param {String} [contentTypesN] 
     * @param {String} [contentTypesIc] 
     * @param {String} [contentTypesNic] 
     * @param {String} [contentTypesIew] 
     * @param {String} [contentTypesNiew] 
     * @param {String} [contentTypesIsw] 
     * @param {String} [contentTypesNisw] 
     * @param {String} [contentTypesIe] 
     * @param {String} [contentTypesNie] 
     * @param {String} [nameN] 
     * @param {String} [nameIc] 
     * @param {String} [nameNic] 
     * @param {String} [nameIew] 
     * @param {String} [nameNiew] 
     * @param {String} [nameIsw] 
     * @param {String} [nameNisw] 
     * @param {String} [nameIe] 
     * @param {String} [nameNie] 
     * @param {String} [nameEmpty] 
     * @param {String} [slugN] 
     * @param {String} [slugIc] 
     * @param {String} [slugNic] 
     * @param {String} [slugIew] 
     * @param {String} [slugNiew] 
     * @param {String} [slugIsw] 
     * @param {String} [slugNisw] 
     * @param {String} [slugIe] 
     * @param {String} [slugNie] 
     * @param {String} [slugEmpty] 
     * @param {String} [descriptionN] 
     * @param {String} [descriptionIc] 
     * @param {String} [descriptionNic] 
     * @param {String} [descriptionIew] 
     * @param {String} [descriptionNiew] 
     * @param {String} [descriptionIsw] 
     * @param {String} [descriptionNisw] 
     * @param {String} [descriptionIe] 
     * @param {String} [descriptionNie] 
     * @param {String} [descriptionEmpty] 
     * @param {String} [weightN] 
     * @param {String} [weightLte] 
     * @param {String} [weightLt] 
     * @param {String} [weightGte] 
     * @param {String} [weightGt] 
     * @param {String} [contentTypeIdN] 
     * @param {String} [contentTypeIdLte] 
     * @param {String} [contentTypeIdLt] 
     * @param {String} [contentTypeIdGte] 
     * @param {String} [contentTypeIdGt] 
     * @param {String} [userIdN] 
     * @param {String} [userN] 
     * @param {String} [ordering] Which field to use when ordering the results.
     * @param {Number} [limit] Number of results to return per page.
     * @param {Number} [offset] The initial index from which to return the results.
     * @param {module:api/ExtrasApi~extrasSavedFiltersListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExtrasSavedFiltersList200Response}
     */
    extrasSavedFiltersList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'id': opts['id'],
        'content_types': opts['contentTypes'],
        'name': opts['name'],
        'slug': opts['slug'],
        'description': opts['description'],
        'enabled': opts['enabled'],
        'shared': opts['shared'],
        'weight': opts['weight'],
        'q': opts['q'],
        'content_type_id': opts['contentTypeId'],
        'user_id': opts['userId'],
        'user': opts['user'],
        'usable': opts['usable'],
        'id__n': opts['idN'],
        'id__lte': opts['idLte'],
        'id__lt': opts['idLt'],
        'id__gte': opts['idGte'],
        'id__gt': opts['idGt'],
        'content_types__n': opts['contentTypesN'],
        'content_types__ic': opts['contentTypesIc'],
        'content_types__nic': opts['contentTypesNic'],
        'content_types__iew': opts['contentTypesIew'],
        'content_types__niew': opts['contentTypesNiew'],
        'content_types__isw': opts['contentTypesIsw'],
        'content_types__nisw': opts['contentTypesNisw'],
        'content_types__ie': opts['contentTypesIe'],
        'content_types__nie': opts['contentTypesNie'],
        'name__n': opts['nameN'],
        'name__ic': opts['nameIc'],
        'name__nic': opts['nameNic'],
        'name__iew': opts['nameIew'],
        'name__niew': opts['nameNiew'],
        'name__isw': opts['nameIsw'],
        'name__nisw': opts['nameNisw'],
        'name__ie': opts['nameIe'],
        'name__nie': opts['nameNie'],
        'name__empty': opts['nameEmpty'],
        'slug__n': opts['slugN'],
        'slug__ic': opts['slugIc'],
        'slug__nic': opts['slugNic'],
        'slug__iew': opts['slugIew'],
        'slug__niew': opts['slugNiew'],
        'slug__isw': opts['slugIsw'],
        'slug__nisw': opts['slugNisw'],
        'slug__ie': opts['slugIe'],
        'slug__nie': opts['slugNie'],
        'slug__empty': opts['slugEmpty'],
        'description__n': opts['descriptionN'],
        'description__ic': opts['descriptionIc'],
        'description__nic': opts['descriptionNic'],
        'description__iew': opts['descriptionIew'],
        'description__niew': opts['descriptionNiew'],
        'description__isw': opts['descriptionIsw'],
        'description__nisw': opts['descriptionNisw'],
        'description__ie': opts['descriptionIe'],
        'description__nie': opts['descriptionNie'],
        'description__empty': opts['descriptionEmpty'],
        'weight__n': opts['weightN'],
        'weight__lte': opts['weightLte'],
        'weight__lt': opts['weightLt'],
        'weight__gte': opts['weightGte'],
        'weight__gt': opts['weightGt'],
        'content_type_id__n': opts['contentTypeIdN'],
        'content_type_id__lte': opts['contentTypeIdLte'],
        'content_type_id__lt': opts['contentTypeIdLt'],
        'content_type_id__gte': opts['contentTypeIdGte'],
        'content_type_id__gt': opts['contentTypeIdGt'],
        'user_id__n': opts['userIdN'],
        'user__n': opts['userN'],
        'ordering': opts['ordering'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExtrasSavedFiltersList200Response;
      return this.apiClient.callApi(
        '/extras/saved-filters/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasSavedFiltersPartialUpdate operation.
     * @callback module:api/ExtrasApi~extrasSavedFiltersPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SavedFilter} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this saved filter.
     * @param {module:model/SavedFilter} savedFilter 
     * @param {module:api/ExtrasApi~extrasSavedFiltersPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SavedFilter}
     */
    extrasSavedFiltersPartialUpdate(id, savedFilter, callback) {
      let postBody = savedFilter;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasSavedFiltersPartialUpdate");
      }
      // verify the required parameter 'savedFilter' is set
      if (savedFilter === undefined || savedFilter === null) {
        throw new Error("Missing the required parameter 'savedFilter' when calling extrasSavedFiltersPartialUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SavedFilter;
      return this.apiClient.callApi(
        '/extras/saved-filters/{id}/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasSavedFiltersRead operation.
     * @callback module:api/ExtrasApi~extrasSavedFiltersReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SavedFilter} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this saved filter.
     * @param {module:api/ExtrasApi~extrasSavedFiltersReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SavedFilter}
     */
    extrasSavedFiltersRead(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasSavedFiltersRead");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SavedFilter;
      return this.apiClient.callApi(
        '/extras/saved-filters/{id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasSavedFiltersUpdate operation.
     * @callback module:api/ExtrasApi~extrasSavedFiltersUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SavedFilter} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this saved filter.
     * @param {module:model/SavedFilter} savedFilter 
     * @param {module:api/ExtrasApi~extrasSavedFiltersUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SavedFilter}
     */
    extrasSavedFiltersUpdate(id, savedFilter, callback) {
      let postBody = savedFilter;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasSavedFiltersUpdate");
      }
      // verify the required parameter 'savedFilter' is set
      if (savedFilter === undefined || savedFilter === null) {
        throw new Error("Missing the required parameter 'savedFilter' when calling extrasSavedFiltersUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SavedFilter;
      return this.apiClient.callApi(
        '/extras/saved-filters/{id}/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasScriptsList operation.
     * @callback module:api/ExtrasApi~extrasScriptsListCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:api/ExtrasApi~extrasScriptsListCallback} callback The callback function, accepting three arguments: error, data, response
     */
    extrasScriptsList(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/extras/scripts/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasScriptsRead operation.
     * @callback module:api/ExtrasApi~extrasScriptsReadCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} id 
     * @param {module:api/ExtrasApi~extrasScriptsReadCallback} callback The callback function, accepting three arguments: error, data, response
     */
    extrasScriptsRead(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasScriptsRead");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/extras/scripts/{id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasTagsBulkDelete operation.
     * @callback module:api/ExtrasApi~extrasTagsBulkDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:api/ExtrasApi~extrasTagsBulkDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    extrasTagsBulkDelete(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/extras/tags/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasTagsBulkPartialUpdate operation.
     * @callback module:api/ExtrasApi~extrasTagsBulkPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Tag} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/Tag} tag 
     * @param {module:api/ExtrasApi~extrasTagsBulkPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Tag}
     */
    extrasTagsBulkPartialUpdate(tag, callback) {
      let postBody = tag;
      // verify the required parameter 'tag' is set
      if (tag === undefined || tag === null) {
        throw new Error("Missing the required parameter 'tag' when calling extrasTagsBulkPartialUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Tag;
      return this.apiClient.callApi(
        '/extras/tags/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasTagsBulkUpdate operation.
     * @callback module:api/ExtrasApi~extrasTagsBulkUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Tag} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/Tag} tag 
     * @param {module:api/ExtrasApi~extrasTagsBulkUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Tag}
     */
    extrasTagsBulkUpdate(tag, callback) {
      let postBody = tag;
      // verify the required parameter 'tag' is set
      if (tag === undefined || tag === null) {
        throw new Error("Missing the required parameter 'tag' when calling extrasTagsBulkUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Tag;
      return this.apiClient.callApi(
        '/extras/tags/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasTagsCreate operation.
     * @callback module:api/ExtrasApi~extrasTagsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Tag} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/Tag} tag 
     * @param {module:api/ExtrasApi~extrasTagsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Tag}
     */
    extrasTagsCreate(tag, callback) {
      let postBody = tag;
      // verify the required parameter 'tag' is set
      if (tag === undefined || tag === null) {
        throw new Error("Missing the required parameter 'tag' when calling extrasTagsCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Tag;
      return this.apiClient.callApi(
        '/extras/tags/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasTagsDelete operation.
     * @callback module:api/ExtrasApi~extrasTagsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this tag.
     * @param {module:api/ExtrasApi~extrasTagsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    extrasTagsDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasTagsDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/extras/tags/{id}/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasTagsList operation.
     * @callback module:api/ExtrasApi~extrasTagsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExtrasTagsList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Object} opts Optional parameters
     * @param {String} [id] 
     * @param {String} [name] 
     * @param {String} [slug] 
     * @param {String} [color] 
     * @param {String} [description] 
     * @param {String} [created] 
     * @param {String} [lastUpdated] 
     * @param {String} [q] 
     * @param {String} [contentType] 
     * @param {String} [contentTypeId] 
     * @param {String} [idN] 
     * @param {String} [idLte] 
     * @param {String} [idLt] 
     * @param {String} [idGte] 
     * @param {String} [idGt] 
     * @param {String} [nameN] 
     * @param {String} [nameIc] 
     * @param {String} [nameNic] 
     * @param {String} [nameIew] 
     * @param {String} [nameNiew] 
     * @param {String} [nameIsw] 
     * @param {String} [nameNisw] 
     * @param {String} [nameIe] 
     * @param {String} [nameNie] 
     * @param {String} [nameEmpty] 
     * @param {String} [slugN] 
     * @param {String} [slugIc] 
     * @param {String} [slugNic] 
     * @param {String} [slugIew] 
     * @param {String} [slugNiew] 
     * @param {String} [slugIsw] 
     * @param {String} [slugNisw] 
     * @param {String} [slugIe] 
     * @param {String} [slugNie] 
     * @param {String} [slugEmpty] 
     * @param {String} [colorN] 
     * @param {String} [colorIc] 
     * @param {String} [colorNic] 
     * @param {String} [colorIew] 
     * @param {String} [colorNiew] 
     * @param {String} [colorIsw] 
     * @param {String} [colorNisw] 
     * @param {String} [colorIe] 
     * @param {String} [colorNie] 
     * @param {String} [colorEmpty] 
     * @param {String} [descriptionN] 
     * @param {String} [descriptionIc] 
     * @param {String} [descriptionNic] 
     * @param {String} [descriptionIew] 
     * @param {String} [descriptionNiew] 
     * @param {String} [descriptionIsw] 
     * @param {String} [descriptionNisw] 
     * @param {String} [descriptionIe] 
     * @param {String} [descriptionNie] 
     * @param {String} [descriptionEmpty] 
     * @param {String} [createdN] 
     * @param {String} [createdLte] 
     * @param {String} [createdLt] 
     * @param {String} [createdGte] 
     * @param {String} [createdGt] 
     * @param {String} [lastUpdatedN] 
     * @param {String} [lastUpdatedLte] 
     * @param {String} [lastUpdatedLt] 
     * @param {String} [lastUpdatedGte] 
     * @param {String} [lastUpdatedGt] 
     * @param {String} [ordering] Which field to use when ordering the results.
     * @param {Number} [limit] Number of results to return per page.
     * @param {Number} [offset] The initial index from which to return the results.
     * @param {module:api/ExtrasApi~extrasTagsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExtrasTagsList200Response}
     */
    extrasTagsList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'id': opts['id'],
        'name': opts['name'],
        'slug': opts['slug'],
        'color': opts['color'],
        'description': opts['description'],
        'created': opts['created'],
        'last_updated': opts['lastUpdated'],
        'q': opts['q'],
        'content_type': opts['contentType'],
        'content_type_id': opts['contentTypeId'],
        'id__n': opts['idN'],
        'id__lte': opts['idLte'],
        'id__lt': opts['idLt'],
        'id__gte': opts['idGte'],
        'id__gt': opts['idGt'],
        'name__n': opts['nameN'],
        'name__ic': opts['nameIc'],
        'name__nic': opts['nameNic'],
        'name__iew': opts['nameIew'],
        'name__niew': opts['nameNiew'],
        'name__isw': opts['nameIsw'],
        'name__nisw': opts['nameNisw'],
        'name__ie': opts['nameIe'],
        'name__nie': opts['nameNie'],
        'name__empty': opts['nameEmpty'],
        'slug__n': opts['slugN'],
        'slug__ic': opts['slugIc'],
        'slug__nic': opts['slugNic'],
        'slug__iew': opts['slugIew'],
        'slug__niew': opts['slugNiew'],
        'slug__isw': opts['slugIsw'],
        'slug__nisw': opts['slugNisw'],
        'slug__ie': opts['slugIe'],
        'slug__nie': opts['slugNie'],
        'slug__empty': opts['slugEmpty'],
        'color__n': opts['colorN'],
        'color__ic': opts['colorIc'],
        'color__nic': opts['colorNic'],
        'color__iew': opts['colorIew'],
        'color__niew': opts['colorNiew'],
        'color__isw': opts['colorIsw'],
        'color__nisw': opts['colorNisw'],
        'color__ie': opts['colorIe'],
        'color__nie': opts['colorNie'],
        'color__empty': opts['colorEmpty'],
        'description__n': opts['descriptionN'],
        'description__ic': opts['descriptionIc'],
        'description__nic': opts['descriptionNic'],
        'description__iew': opts['descriptionIew'],
        'description__niew': opts['descriptionNiew'],
        'description__isw': opts['descriptionIsw'],
        'description__nisw': opts['descriptionNisw'],
        'description__ie': opts['descriptionIe'],
        'description__nie': opts['descriptionNie'],
        'description__empty': opts['descriptionEmpty'],
        'created__n': opts['createdN'],
        'created__lte': opts['createdLte'],
        'created__lt': opts['createdLt'],
        'created__gte': opts['createdGte'],
        'created__gt': opts['createdGt'],
        'last_updated__n': opts['lastUpdatedN'],
        'last_updated__lte': opts['lastUpdatedLte'],
        'last_updated__lt': opts['lastUpdatedLt'],
        'last_updated__gte': opts['lastUpdatedGte'],
        'last_updated__gt': opts['lastUpdatedGt'],
        'ordering': opts['ordering'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExtrasTagsList200Response;
      return this.apiClient.callApi(
        '/extras/tags/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasTagsPartialUpdate operation.
     * @callback module:api/ExtrasApi~extrasTagsPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Tag} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this tag.
     * @param {module:model/Tag} tag 
     * @param {module:api/ExtrasApi~extrasTagsPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Tag}
     */
    extrasTagsPartialUpdate(id, tag, callback) {
      let postBody = tag;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasTagsPartialUpdate");
      }
      // verify the required parameter 'tag' is set
      if (tag === undefined || tag === null) {
        throw new Error("Missing the required parameter 'tag' when calling extrasTagsPartialUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Tag;
      return this.apiClient.callApi(
        '/extras/tags/{id}/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasTagsRead operation.
     * @callback module:api/ExtrasApi~extrasTagsReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Tag} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this tag.
     * @param {module:api/ExtrasApi~extrasTagsReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Tag}
     */
    extrasTagsRead(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasTagsRead");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Tag;
      return this.apiClient.callApi(
        '/extras/tags/{id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasTagsUpdate operation.
     * @callback module:api/ExtrasApi~extrasTagsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Tag} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this tag.
     * @param {module:model/Tag} tag 
     * @param {module:api/ExtrasApi~extrasTagsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Tag}
     */
    extrasTagsUpdate(id, tag, callback) {
      let postBody = tag;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasTagsUpdate");
      }
      // verify the required parameter 'tag' is set
      if (tag === undefined || tag === null) {
        throw new Error("Missing the required parameter 'tag' when calling extrasTagsUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Tag;
      return this.apiClient.callApi(
        '/extras/tags/{id}/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasWebhooksBulkDelete operation.
     * @callback module:api/ExtrasApi~extrasWebhooksBulkDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:api/ExtrasApi~extrasWebhooksBulkDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    extrasWebhooksBulkDelete(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/extras/webhooks/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasWebhooksBulkPartialUpdate operation.
     * @callback module:api/ExtrasApi~extrasWebhooksBulkPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Webhook} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/Webhook} webhook 
     * @param {module:api/ExtrasApi~extrasWebhooksBulkPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Webhook}
     */
    extrasWebhooksBulkPartialUpdate(webhook, callback) {
      let postBody = webhook;
      // verify the required parameter 'webhook' is set
      if (webhook === undefined || webhook === null) {
        throw new Error("Missing the required parameter 'webhook' when calling extrasWebhooksBulkPartialUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Webhook;
      return this.apiClient.callApi(
        '/extras/webhooks/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasWebhooksBulkUpdate operation.
     * @callback module:api/ExtrasApi~extrasWebhooksBulkUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Webhook} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/Webhook} webhook 
     * @param {module:api/ExtrasApi~extrasWebhooksBulkUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Webhook}
     */
    extrasWebhooksBulkUpdate(webhook, callback) {
      let postBody = webhook;
      // verify the required parameter 'webhook' is set
      if (webhook === undefined || webhook === null) {
        throw new Error("Missing the required parameter 'webhook' when calling extrasWebhooksBulkUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Webhook;
      return this.apiClient.callApi(
        '/extras/webhooks/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasWebhooksCreate operation.
     * @callback module:api/ExtrasApi~extrasWebhooksCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Webhook} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:model/Webhook} webhook 
     * @param {module:api/ExtrasApi~extrasWebhooksCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Webhook}
     */
    extrasWebhooksCreate(webhook, callback) {
      let postBody = webhook;
      // verify the required parameter 'webhook' is set
      if (webhook === undefined || webhook === null) {
        throw new Error("Missing the required parameter 'webhook' when calling extrasWebhooksCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Webhook;
      return this.apiClient.callApi(
        '/extras/webhooks/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasWebhooksDelete operation.
     * @callback module:api/ExtrasApi~extrasWebhooksDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this webhook.
     * @param {module:api/ExtrasApi~extrasWebhooksDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    extrasWebhooksDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasWebhooksDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/extras/webhooks/{id}/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasWebhooksList operation.
     * @callback module:api/ExtrasApi~extrasWebhooksListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExtrasWebhooksList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Object} opts Optional parameters
     * @param {String} [id] 
     * @param {String} [name] 
     * @param {String} [typeCreate] 
     * @param {String} [typeUpdate] 
     * @param {String} [typeDelete] 
     * @param {String} [payloadUrl] 
     * @param {String} [enabled] 
     * @param {String} [httpMethod] 
     * @param {String} [httpContentType] 
     * @param {String} [secret] 
     * @param {String} [sslVerification] 
     * @param {String} [caFilePath] 
     * @param {String} [q] 
     * @param {String} [contentTypeId] 
     * @param {String} [contentTypes] 
     * @param {String} [idN] 
     * @param {String} [idLte] 
     * @param {String} [idLt] 
     * @param {String} [idGte] 
     * @param {String} [idGt] 
     * @param {String} [nameN] 
     * @param {String} [nameIc] 
     * @param {String} [nameNic] 
     * @param {String} [nameIew] 
     * @param {String} [nameNiew] 
     * @param {String} [nameIsw] 
     * @param {String} [nameNisw] 
     * @param {String} [nameIe] 
     * @param {String} [nameNie] 
     * @param {String} [nameEmpty] 
     * @param {String} [payloadUrlN] 
     * @param {String} [payloadUrlIc] 
     * @param {String} [payloadUrlNic] 
     * @param {String} [payloadUrlIew] 
     * @param {String} [payloadUrlNiew] 
     * @param {String} [payloadUrlIsw] 
     * @param {String} [payloadUrlNisw] 
     * @param {String} [payloadUrlIe] 
     * @param {String} [payloadUrlNie] 
     * @param {String} [payloadUrlEmpty] 
     * @param {String} [httpMethodN] 
     * @param {String} [httpContentTypeN] 
     * @param {String} [httpContentTypeIc] 
     * @param {String} [httpContentTypeNic] 
     * @param {String} [httpContentTypeIew] 
     * @param {String} [httpContentTypeNiew] 
     * @param {String} [httpContentTypeIsw] 
     * @param {String} [httpContentTypeNisw] 
     * @param {String} [httpContentTypeIe] 
     * @param {String} [httpContentTypeNie] 
     * @param {String} [httpContentTypeEmpty] 
     * @param {String} [secretN] 
     * @param {String} [secretIc] 
     * @param {String} [secretNic] 
     * @param {String} [secretIew] 
     * @param {String} [secretNiew] 
     * @param {String} [secretIsw] 
     * @param {String} [secretNisw] 
     * @param {String} [secretIe] 
     * @param {String} [secretNie] 
     * @param {String} [secretEmpty] 
     * @param {String} [caFilePathN] 
     * @param {String} [caFilePathIc] 
     * @param {String} [caFilePathNic] 
     * @param {String} [caFilePathIew] 
     * @param {String} [caFilePathNiew] 
     * @param {String} [caFilePathIsw] 
     * @param {String} [caFilePathNisw] 
     * @param {String} [caFilePathIe] 
     * @param {String} [caFilePathNie] 
     * @param {String} [caFilePathEmpty] 
     * @param {String} [contentTypeIdN] 
     * @param {String} [contentTypeIdLte] 
     * @param {String} [contentTypeIdLt] 
     * @param {String} [contentTypeIdGte] 
     * @param {String} [contentTypeIdGt] 
     * @param {String} [contentTypesN] 
     * @param {String} [contentTypesIc] 
     * @param {String} [contentTypesNic] 
     * @param {String} [contentTypesIew] 
     * @param {String} [contentTypesNiew] 
     * @param {String} [contentTypesIsw] 
     * @param {String} [contentTypesNisw] 
     * @param {String} [contentTypesIe] 
     * @param {String} [contentTypesNie] 
     * @param {String} [ordering] Which field to use when ordering the results.
     * @param {Number} [limit] Number of results to return per page.
     * @param {Number} [offset] The initial index from which to return the results.
     * @param {module:api/ExtrasApi~extrasWebhooksListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExtrasWebhooksList200Response}
     */
    extrasWebhooksList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'id': opts['id'],
        'name': opts['name'],
        'type_create': opts['typeCreate'],
        'type_update': opts['typeUpdate'],
        'type_delete': opts['typeDelete'],
        'payload_url': opts['payloadUrl'],
        'enabled': opts['enabled'],
        'http_method': opts['httpMethod'],
        'http_content_type': opts['httpContentType'],
        'secret': opts['secret'],
        'ssl_verification': opts['sslVerification'],
        'ca_file_path': opts['caFilePath'],
        'q': opts['q'],
        'content_type_id': opts['contentTypeId'],
        'content_types': opts['contentTypes'],
        'id__n': opts['idN'],
        'id__lte': opts['idLte'],
        'id__lt': opts['idLt'],
        'id__gte': opts['idGte'],
        'id__gt': opts['idGt'],
        'name__n': opts['nameN'],
        'name__ic': opts['nameIc'],
        'name__nic': opts['nameNic'],
        'name__iew': opts['nameIew'],
        'name__niew': opts['nameNiew'],
        'name__isw': opts['nameIsw'],
        'name__nisw': opts['nameNisw'],
        'name__ie': opts['nameIe'],
        'name__nie': opts['nameNie'],
        'name__empty': opts['nameEmpty'],
        'payload_url__n': opts['payloadUrlN'],
        'payload_url__ic': opts['payloadUrlIc'],
        'payload_url__nic': opts['payloadUrlNic'],
        'payload_url__iew': opts['payloadUrlIew'],
        'payload_url__niew': opts['payloadUrlNiew'],
        'payload_url__isw': opts['payloadUrlIsw'],
        'payload_url__nisw': opts['payloadUrlNisw'],
        'payload_url__ie': opts['payloadUrlIe'],
        'payload_url__nie': opts['payloadUrlNie'],
        'payload_url__empty': opts['payloadUrlEmpty'],
        'http_method__n': opts['httpMethodN'],
        'http_content_type__n': opts['httpContentTypeN'],
        'http_content_type__ic': opts['httpContentTypeIc'],
        'http_content_type__nic': opts['httpContentTypeNic'],
        'http_content_type__iew': opts['httpContentTypeIew'],
        'http_content_type__niew': opts['httpContentTypeNiew'],
        'http_content_type__isw': opts['httpContentTypeIsw'],
        'http_content_type__nisw': opts['httpContentTypeNisw'],
        'http_content_type__ie': opts['httpContentTypeIe'],
        'http_content_type__nie': opts['httpContentTypeNie'],
        'http_content_type__empty': opts['httpContentTypeEmpty'],
        'secret__n': opts['secretN'],
        'secret__ic': opts['secretIc'],
        'secret__nic': opts['secretNic'],
        'secret__iew': opts['secretIew'],
        'secret__niew': opts['secretNiew'],
        'secret__isw': opts['secretIsw'],
        'secret__nisw': opts['secretNisw'],
        'secret__ie': opts['secretIe'],
        'secret__nie': opts['secretNie'],
        'secret__empty': opts['secretEmpty'],
        'ca_file_path__n': opts['caFilePathN'],
        'ca_file_path__ic': opts['caFilePathIc'],
        'ca_file_path__nic': opts['caFilePathNic'],
        'ca_file_path__iew': opts['caFilePathIew'],
        'ca_file_path__niew': opts['caFilePathNiew'],
        'ca_file_path__isw': opts['caFilePathIsw'],
        'ca_file_path__nisw': opts['caFilePathNisw'],
        'ca_file_path__ie': opts['caFilePathIe'],
        'ca_file_path__nie': opts['caFilePathNie'],
        'ca_file_path__empty': opts['caFilePathEmpty'],
        'content_type_id__n': opts['contentTypeIdN'],
        'content_type_id__lte': opts['contentTypeIdLte'],
        'content_type_id__lt': opts['contentTypeIdLt'],
        'content_type_id__gte': opts['contentTypeIdGte'],
        'content_type_id__gt': opts['contentTypeIdGt'],
        'content_types__n': opts['contentTypesN'],
        'content_types__ic': opts['contentTypesIc'],
        'content_types__nic': opts['contentTypesNic'],
        'content_types__iew': opts['contentTypesIew'],
        'content_types__niew': opts['contentTypesNiew'],
        'content_types__isw': opts['contentTypesIsw'],
        'content_types__nisw': opts['contentTypesNisw'],
        'content_types__ie': opts['contentTypesIe'],
        'content_types__nie': opts['contentTypesNie'],
        'ordering': opts['ordering'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExtrasWebhooksList200Response;
      return this.apiClient.callApi(
        '/extras/webhooks/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasWebhooksPartialUpdate operation.
     * @callback module:api/ExtrasApi~extrasWebhooksPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Webhook} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this webhook.
     * @param {module:model/Webhook} webhook 
     * @param {module:api/ExtrasApi~extrasWebhooksPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Webhook}
     */
    extrasWebhooksPartialUpdate(id, webhook, callback) {
      let postBody = webhook;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasWebhooksPartialUpdate");
      }
      // verify the required parameter 'webhook' is set
      if (webhook === undefined || webhook === null) {
        throw new Error("Missing the required parameter 'webhook' when calling extrasWebhooksPartialUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Webhook;
      return this.apiClient.callApi(
        '/extras/webhooks/{id}/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasWebhooksRead operation.
     * @callback module:api/ExtrasApi~extrasWebhooksReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Webhook} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this webhook.
     * @param {module:api/ExtrasApi~extrasWebhooksReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Webhook}
     */
    extrasWebhooksRead(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasWebhooksRead");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Webhook;
      return this.apiClient.callApi(
        '/extras/webhooks/{id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the extrasWebhooksUpdate operation.
     * @callback module:api/ExtrasApi~extrasWebhooksUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Webhook} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Number} id A unique integer value identifying this webhook.
     * @param {module:model/Webhook} webhook 
     * @param {module:api/ExtrasApi~extrasWebhooksUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Webhook}
     */
    extrasWebhooksUpdate(id, webhook, callback) {
      let postBody = webhook;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling extrasWebhooksUpdate");
      }
      // verify the required parameter 'webhook' is set
      if (webhook === undefined || webhook === null) {
        throw new Error("Missing the required parameter 'webhook' when calling extrasWebhooksUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Webhook;
      return this.apiClient.callApi(
        '/extras/webhooks/{id}/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
