/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NestedTag from './NestedTag';

/**
 * The WritableVMInterface model module.
 * @module model/WritableVMInterface
 * @version 3.4
 */
class WritableVMInterface {
    /**
     * Constructs a new <code>WritableVMInterface</code>.
     * @alias module:model/WritableVMInterface
     * @param name {String} 
     * @param virtualMachine {Number} 
     */
    constructor(name, virtualMachine) { 
        
        WritableVMInterface.initialize(this, name, virtualMachine);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, virtualMachine) { 
        obj['name'] = name;
        obj['virtual_machine'] = virtualMachine;
    }

    /**
     * Constructs a <code>WritableVMInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WritableVMInterface} obj Optional instance to populate.
     * @return {module:model/WritableVMInterface} The populated <code>WritableVMInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WritableVMInterface();

            if (data.hasOwnProperty('bridge')) {
                obj['bridge'] = ApiClient.convertToType(data['bridge'], 'Number');
            }
            if (data.hasOwnProperty('count_fhrp_groups')) {
                obj['count_fhrp_groups'] = ApiClient.convertToType(data['count_fhrp_groups'], 'Number');
            }
            if (data.hasOwnProperty('count_ipaddresses')) {
                obj['count_ipaddresses'] = ApiClient.convertToType(data['count_ipaddresses'], 'Number');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('custom_fields')) {
                obj['custom_fields'] = ApiClient.convertToType(data['custom_fields'], Object);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('display')) {
                obj['display'] = ApiClient.convertToType(data['display'], 'String');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('l2vpn_termination')) {
                obj['l2vpn_termination'] = ApiClient.convertToType(data['l2vpn_termination'], 'String');
            }
            if (data.hasOwnProperty('last_updated')) {
                obj['last_updated'] = ApiClient.convertToType(data['last_updated'], 'Date');
            }
            if (data.hasOwnProperty('mac_address')) {
                obj['mac_address'] = ApiClient.convertToType(data['mac_address'], 'String');
            }
            if (data.hasOwnProperty('mode')) {
                obj['mode'] = ApiClient.convertToType(data['mode'], 'String');
            }
            if (data.hasOwnProperty('mtu')) {
                obj['mtu'] = ApiClient.convertToType(data['mtu'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('parent')) {
                obj['parent'] = ApiClient.convertToType(data['parent'], 'Number');
            }
            if (data.hasOwnProperty('tagged_vlans')) {
                obj['tagged_vlans'] = ApiClient.convertToType(data['tagged_vlans'], ['Number']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], [NestedTag]);
            }
            if (data.hasOwnProperty('untagged_vlan')) {
                obj['untagged_vlan'] = ApiClient.convertToType(data['untagged_vlan'], 'Number');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('virtual_machine')) {
                obj['virtual_machine'] = ApiClient.convertToType(data['virtual_machine'], 'Number');
            }
            if (data.hasOwnProperty('vrf')) {
                obj['vrf'] = ApiClient.convertToType(data['vrf'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WritableVMInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WritableVMInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WritableVMInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['display'] && !(typeof data['display'] === 'string' || data['display'] instanceof String)) {
            throw new Error("Expected the field `display` to be a primitive type in the JSON string but got " + data['display']);
        }
        // ensure the json data is a string
        if (data['l2vpn_termination'] && !(typeof data['l2vpn_termination'] === 'string' || data['l2vpn_termination'] instanceof String)) {
            throw new Error("Expected the field `l2vpn_termination` to be a primitive type in the JSON string but got " + data['l2vpn_termination']);
        }
        // ensure the json data is a string
        if (data['mac_address'] && !(typeof data['mac_address'] === 'string' || data['mac_address'] instanceof String)) {
            throw new Error("Expected the field `mac_address` to be a primitive type in the JSON string but got " + data['mac_address']);
        }
        // ensure the json data is a string
        if (data['mode'] && !(typeof data['mode'] === 'string' || data['mode'] instanceof String)) {
            throw new Error("Expected the field `mode` to be a primitive type in the JSON string but got " + data['mode']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tagged_vlans'])) {
            throw new Error("Expected the field `tagged_vlans` to be an array in the JSON data but got " + data['tagged_vlans']);
        }
        if (data['tags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['tags'])) {
                throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
            }
            // validate the optional field `tags` (array)
            for (const item of data['tags']) {
                NestedTag.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}

WritableVMInterface.RequiredProperties = ["name", "virtual_machine"];

/**
 * @member {Number} bridge
 */
WritableVMInterface.prototype['bridge'] = undefined;

/**
 * @member {Number} count_fhrp_groups
 */
WritableVMInterface.prototype['count_fhrp_groups'] = undefined;

/**
 * @member {Number} count_ipaddresses
 */
WritableVMInterface.prototype['count_ipaddresses'] = undefined;

/**
 * @member {Date} created
 */
WritableVMInterface.prototype['created'] = undefined;

/**
 * @member {Object} custom_fields
 */
WritableVMInterface.prototype['custom_fields'] = undefined;

/**
 * @member {String} description
 */
WritableVMInterface.prototype['description'] = undefined;

/**
 * @member {String} display
 */
WritableVMInterface.prototype['display'] = undefined;

/**
 * @member {Boolean} enabled
 */
WritableVMInterface.prototype['enabled'] = undefined;

/**
 * @member {Number} id
 */
WritableVMInterface.prototype['id'] = undefined;

/**
 * @member {String} l2vpn_termination
 */
WritableVMInterface.prototype['l2vpn_termination'] = undefined;

/**
 * @member {Date} last_updated
 */
WritableVMInterface.prototype['last_updated'] = undefined;

/**
 * @member {String} mac_address
 */
WritableVMInterface.prototype['mac_address'] = undefined;

/**
 * @member {module:model/WritableVMInterface.ModeEnum} mode
 */
WritableVMInterface.prototype['mode'] = undefined;

/**
 * @member {Number} mtu
 */
WritableVMInterface.prototype['mtu'] = undefined;

/**
 * @member {String} name
 */
WritableVMInterface.prototype['name'] = undefined;

/**
 * @member {Number} parent
 */
WritableVMInterface.prototype['parent'] = undefined;

/**
 * @member {Array.<Number>} tagged_vlans
 */
WritableVMInterface.prototype['tagged_vlans'] = undefined;

/**
 * @member {Array.<module:model/NestedTag>} tags
 */
WritableVMInterface.prototype['tags'] = undefined;

/**
 * @member {Number} untagged_vlan
 */
WritableVMInterface.prototype['untagged_vlan'] = undefined;

/**
 * @member {String} url
 */
WritableVMInterface.prototype['url'] = undefined;

/**
 * @member {Number} virtual_machine
 */
WritableVMInterface.prototype['virtual_machine'] = undefined;

/**
 * @member {Number} vrf
 */
WritableVMInterface.prototype['vrf'] = undefined;





/**
 * Allowed values for the <code>mode</code> property.
 * @enum {String}
 * @readonly
 */
WritableVMInterface['ModeEnum'] = {

    /**
     * value: "access"
     * @const
     */
    "access": "access",

    /**
     * value: "tagged"
     * @const
     */
    "tagged": "tagged",

    /**
     * value: "tagged-all"
     * @const
     */
    "tagged-all": "tagged-all"
};



export default WritableVMInterface;

