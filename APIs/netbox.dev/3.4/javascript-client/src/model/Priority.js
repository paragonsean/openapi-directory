/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Priority model module.
 * @module model/Priority
 * @version 3.4
 */
class Priority {
    /**
     * Constructs a new <code>Priority</code>.
     * @alias module:model/Priority
     * @param label {module:model/Priority.LabelEnum} 
     * @param value {module:model/Priority.ValueEnum} 
     */
    constructor(label, value) { 
        
        Priority.initialize(this, label, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, label, value) { 
        obj['label'] = label;
        obj['value'] = value;
    }

    /**
     * Constructs a <code>Priority</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Priority} obj Optional instance to populate.
     * @return {module:model/Priority} The populated <code>Priority</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Priority();

            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Priority</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Priority</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Priority.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}

Priority.RequiredProperties = ["label", "value"];

/**
 * @member {module:model/Priority.LabelEnum} label
 */
Priority.prototype['label'] = undefined;

/**
 * @member {module:model/Priority.ValueEnum} value
 */
Priority.prototype['value'] = undefined;





/**
 * Allowed values for the <code>label</code> property.
 * @enum {String}
 * @readonly
 */
Priority['LabelEnum'] = {

    /**
     * value: "Primary"
     * @const
     */
    "Primary": "Primary",

    /**
     * value: "Secondary"
     * @const
     */
    "Secondary": "Secondary",

    /**
     * value: "Tertiary"
     * @const
     */
    "Tertiary": "Tertiary",

    /**
     * value: "Inactive"
     * @const
     */
    "Inactive": "Inactive"
};


/**
 * Allowed values for the <code>value</code> property.
 * @enum {String}
 * @readonly
 */
Priority['ValueEnum'] = {

    /**
     * value: "primary"
     * @const
     */
    "primary": "primary",

    /**
     * value: "secondary"
     * @const
     */
    "secondary": "secondary",

    /**
     * value: "tertiary"
     * @const
     */
    "tertiary": "tertiary",

    /**
     * value: "inactive"
     * @const
     */
    "inactive": "inactive"
};



export default Priority;

