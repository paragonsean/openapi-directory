/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NestedCluster from './NestedCluster';
import NestedDevice from './NestedDevice';
import NestedDeviceRole from './NestedDeviceRole';
import NestedIPAddress from './NestedIPAddress';
import NestedPlatform from './NestedPlatform';
import NestedSite from './NestedSite';
import NestedTag from './NestedTag';
import NestedTenant from './NestedTenant';
import Status8 from './Status8';

/**
 * The VirtualMachineWithConfigContext model module.
 * @module model/VirtualMachineWithConfigContext
 * @version 3.4
 */
class VirtualMachineWithConfigContext {
    /**
     * Constructs a new <code>VirtualMachineWithConfigContext</code>.
     * @alias module:model/VirtualMachineWithConfigContext
     * @param name {String} 
     */
    constructor(name) { 
        
        VirtualMachineWithConfigContext.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>VirtualMachineWithConfigContext</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VirtualMachineWithConfigContext} obj Optional instance to populate.
     * @return {module:model/VirtualMachineWithConfigContext} The populated <code>VirtualMachineWithConfigContext</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VirtualMachineWithConfigContext();

            if (data.hasOwnProperty('cluster')) {
                obj['cluster'] = NestedCluster.constructFromObject(data['cluster']);
            }
            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], 'String');
            }
            if (data.hasOwnProperty('config_context')) {
                obj['config_context'] = ApiClient.convertToType(data['config_context'], Object);
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('custom_fields')) {
                obj['custom_fields'] = ApiClient.convertToType(data['custom_fields'], Object);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('device')) {
                obj['device'] = NestedDevice.constructFromObject(data['device']);
            }
            if (data.hasOwnProperty('disk')) {
                obj['disk'] = ApiClient.convertToType(data['disk'], 'Number');
            }
            if (data.hasOwnProperty('display')) {
                obj['display'] = ApiClient.convertToType(data['display'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('last_updated')) {
                obj['last_updated'] = ApiClient.convertToType(data['last_updated'], 'Date');
            }
            if (data.hasOwnProperty('local_context_data')) {
                obj['local_context_data'] = ApiClient.convertToType(data['local_context_data'], Object);
            }
            if (data.hasOwnProperty('memory')) {
                obj['memory'] = ApiClient.convertToType(data['memory'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('platform')) {
                obj['platform'] = NestedPlatform.constructFromObject(data['platform']);
            }
            if (data.hasOwnProperty('primary_ip')) {
                obj['primary_ip'] = NestedIPAddress.constructFromObject(data['primary_ip']);
            }
            if (data.hasOwnProperty('primary_ip4')) {
                obj['primary_ip4'] = NestedIPAddress.constructFromObject(data['primary_ip4']);
            }
            if (data.hasOwnProperty('primary_ip6')) {
                obj['primary_ip6'] = NestedIPAddress.constructFromObject(data['primary_ip6']);
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = NestedDeviceRole.constructFromObject(data['role']);
            }
            if (data.hasOwnProperty('site')) {
                obj['site'] = NestedSite.constructFromObject(data['site']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = Status8.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], [NestedTag]);
            }
            if (data.hasOwnProperty('tenant')) {
                obj['tenant'] = NestedTenant.constructFromObject(data['tenant']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('vcpus')) {
                obj['vcpus'] = ApiClient.convertToType(data['vcpus'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VirtualMachineWithConfigContext</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VirtualMachineWithConfigContext</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VirtualMachineWithConfigContext.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `cluster`
        if (data['cluster']) { // data not null
          NestedCluster.validateJSON(data['cluster']);
        }
        // ensure the json data is a string
        if (data['comments'] && !(typeof data['comments'] === 'string' || data['comments'] instanceof String)) {
            throw new Error("Expected the field `comments` to be a primitive type in the JSON string but got " + data['comments']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `device`
        if (data['device']) { // data not null
          NestedDevice.validateJSON(data['device']);
        }
        // ensure the json data is a string
        if (data['display'] && !(typeof data['display'] === 'string' || data['display'] instanceof String)) {
            throw new Error("Expected the field `display` to be a primitive type in the JSON string but got " + data['display']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `platform`
        if (data['platform']) { // data not null
          NestedPlatform.validateJSON(data['platform']);
        }
        // validate the optional field `primary_ip`
        if (data['primary_ip']) { // data not null
          NestedIPAddress.validateJSON(data['primary_ip']);
        }
        // validate the optional field `primary_ip4`
        if (data['primary_ip4']) { // data not null
          NestedIPAddress.validateJSON(data['primary_ip4']);
        }
        // validate the optional field `primary_ip6`
        if (data['primary_ip6']) { // data not null
          NestedIPAddress.validateJSON(data['primary_ip6']);
        }
        // validate the optional field `role`
        if (data['role']) { // data not null
          NestedDeviceRole.validateJSON(data['role']);
        }
        // validate the optional field `site`
        if (data['site']) { // data not null
          NestedSite.validateJSON(data['site']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          Status8.validateJSON(data['status']);
        }
        if (data['tags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['tags'])) {
                throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
            }
            // validate the optional field `tags` (array)
            for (const item of data['tags']) {
                NestedTag.validateJSON(item);
            };
        }
        // validate the optional field `tenant`
        if (data['tenant']) { // data not null
          NestedTenant.validateJSON(data['tenant']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}

VirtualMachineWithConfigContext.RequiredProperties = ["name"];

/**
 * @member {module:model/NestedCluster} cluster
 */
VirtualMachineWithConfigContext.prototype['cluster'] = undefined;

/**
 * @member {String} comments
 */
VirtualMachineWithConfigContext.prototype['comments'] = undefined;

/**
 * @member {Object} config_context
 */
VirtualMachineWithConfigContext.prototype['config_context'] = undefined;

/**
 * @member {Date} created
 */
VirtualMachineWithConfigContext.prototype['created'] = undefined;

/**
 * @member {Object} custom_fields
 */
VirtualMachineWithConfigContext.prototype['custom_fields'] = undefined;

/**
 * @member {String} description
 */
VirtualMachineWithConfigContext.prototype['description'] = undefined;

/**
 * @member {module:model/NestedDevice} device
 */
VirtualMachineWithConfigContext.prototype['device'] = undefined;

/**
 * @member {Number} disk
 */
VirtualMachineWithConfigContext.prototype['disk'] = undefined;

/**
 * @member {String} display
 */
VirtualMachineWithConfigContext.prototype['display'] = undefined;

/**
 * @member {Number} id
 */
VirtualMachineWithConfigContext.prototype['id'] = undefined;

/**
 * @member {Date} last_updated
 */
VirtualMachineWithConfigContext.prototype['last_updated'] = undefined;

/**
 * @member {Object} local_context_data
 */
VirtualMachineWithConfigContext.prototype['local_context_data'] = undefined;

/**
 * @member {Number} memory
 */
VirtualMachineWithConfigContext.prototype['memory'] = undefined;

/**
 * @member {String} name
 */
VirtualMachineWithConfigContext.prototype['name'] = undefined;

/**
 * @member {module:model/NestedPlatform} platform
 */
VirtualMachineWithConfigContext.prototype['platform'] = undefined;

/**
 * @member {module:model/NestedIPAddress} primary_ip
 */
VirtualMachineWithConfigContext.prototype['primary_ip'] = undefined;

/**
 * @member {module:model/NestedIPAddress} primary_ip4
 */
VirtualMachineWithConfigContext.prototype['primary_ip4'] = undefined;

/**
 * @member {module:model/NestedIPAddress} primary_ip6
 */
VirtualMachineWithConfigContext.prototype['primary_ip6'] = undefined;

/**
 * @member {module:model/NestedDeviceRole} role
 */
VirtualMachineWithConfigContext.prototype['role'] = undefined;

/**
 * @member {module:model/NestedSite} site
 */
VirtualMachineWithConfigContext.prototype['site'] = undefined;

/**
 * @member {module:model/Status8} status
 */
VirtualMachineWithConfigContext.prototype['status'] = undefined;

/**
 * @member {Array.<module:model/NestedTag>} tags
 */
VirtualMachineWithConfigContext.prototype['tags'] = undefined;

/**
 * @member {module:model/NestedTenant} tenant
 */
VirtualMachineWithConfigContext.prototype['tenant'] = undefined;

/**
 * @member {String} url
 */
VirtualMachineWithConfigContext.prototype['url'] = undefined;

/**
 * @member {Number} vcpus
 */
VirtualMachineWithConfigContext.prototype['vcpus'] = undefined;






export default VirtualMachineWithConfigContext;

