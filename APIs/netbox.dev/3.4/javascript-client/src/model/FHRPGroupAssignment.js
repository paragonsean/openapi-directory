/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NestedFHRPGroup from './NestedFHRPGroup';

/**
 * The FHRPGroupAssignment model module.
 * @module model/FHRPGroupAssignment
 * @version 3.4
 */
class FHRPGroupAssignment {
    /**
     * Constructs a new <code>FHRPGroupAssignment</code>.
     * @alias module:model/FHRPGroupAssignment
     * @param group {module:model/NestedFHRPGroup} 
     * @param interfaceId {Number} 
     * @param interfaceType {String} 
     * @param priority {Number} 
     */
    constructor(group, interfaceId, interfaceType, priority) { 
        
        FHRPGroupAssignment.initialize(this, group, interfaceId, interfaceType, priority);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, group, interfaceId, interfaceType, priority) { 
        obj['group'] = group;
        obj['interface_id'] = interfaceId;
        obj['interface_type'] = interfaceType;
        obj['priority'] = priority;
    }

    /**
     * Constructs a <code>FHRPGroupAssignment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FHRPGroupAssignment} obj Optional instance to populate.
     * @return {module:model/FHRPGroupAssignment} The populated <code>FHRPGroupAssignment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FHRPGroupAssignment();

            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('display')) {
                obj['display'] = ApiClient.convertToType(data['display'], 'String');
            }
            if (data.hasOwnProperty('group')) {
                obj['group'] = NestedFHRPGroup.constructFromObject(data['group']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('interface')) {
                obj['interface'] = ApiClient.convertToType(data['interface'], Object);
            }
            if (data.hasOwnProperty('interface_id')) {
                obj['interface_id'] = ApiClient.convertToType(data['interface_id'], 'Number');
            }
            if (data.hasOwnProperty('interface_type')) {
                obj['interface_type'] = ApiClient.convertToType(data['interface_type'], 'String');
            }
            if (data.hasOwnProperty('last_updated')) {
                obj['last_updated'] = ApiClient.convertToType(data['last_updated'], 'Date');
            }
            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], 'Number');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FHRPGroupAssignment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FHRPGroupAssignment</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FHRPGroupAssignment.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['display'] && !(typeof data['display'] === 'string' || data['display'] instanceof String)) {
            throw new Error("Expected the field `display` to be a primitive type in the JSON string but got " + data['display']);
        }
        // validate the optional field `group`
        if (data['group']) { // data not null
          NestedFHRPGroup.validateJSON(data['group']);
        }
        // ensure the json data is a string
        if (data['interface_type'] && !(typeof data['interface_type'] === 'string' || data['interface_type'] instanceof String)) {
            throw new Error("Expected the field `interface_type` to be a primitive type in the JSON string but got " + data['interface_type']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}

FHRPGroupAssignment.RequiredProperties = ["group", "interface_id", "interface_type", "priority"];

/**
 * @member {Date} created
 */
FHRPGroupAssignment.prototype['created'] = undefined;

/**
 * @member {String} display
 */
FHRPGroupAssignment.prototype['display'] = undefined;

/**
 * @member {module:model/NestedFHRPGroup} group
 */
FHRPGroupAssignment.prototype['group'] = undefined;

/**
 * @member {Number} id
 */
FHRPGroupAssignment.prototype['id'] = undefined;

/**
 * @member {Object} interface
 */
FHRPGroupAssignment.prototype['interface'] = undefined;

/**
 * @member {Number} interface_id
 */
FHRPGroupAssignment.prototype['interface_id'] = undefined;

/**
 * @member {String} interface_type
 */
FHRPGroupAssignment.prototype['interface_type'] = undefined;

/**
 * @member {Date} last_updated
 */
FHRPGroupAssignment.prototype['last_updated'] = undefined;

/**
 * @member {Number} priority
 */
FHRPGroupAssignment.prototype['priority'] = undefined;

/**
 * @member {String} url
 */
FHRPGroupAssignment.prototype['url'] = undefined;






export default FHRPGroupAssignment;

