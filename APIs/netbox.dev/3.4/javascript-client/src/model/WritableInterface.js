/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NestedCable from './NestedCable';
import NestedTag from './NestedTag';

/**
 * The WritableInterface model module.
 * @module model/WritableInterface
 * @version 3.4
 */
class WritableInterface {
    /**
     * Constructs a new <code>WritableInterface</code>.
     * @alias module:model/WritableInterface
     * @param device {Number} 
     * @param name {String} 
     * @param type {module:model/WritableInterface.TypeEnum} 
     * @param vdcs {Array.<Number>} 
     */
    constructor(device, name, type, vdcs) { 
        
        WritableInterface.initialize(this, device, name, type, vdcs);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, device, name, type, vdcs) { 
        obj['device'] = device;
        obj['name'] = name;
        obj['type'] = type;
        obj['vdcs'] = vdcs;
    }

    /**
     * Constructs a <code>WritableInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WritableInterface} obj Optional instance to populate.
     * @return {module:model/WritableInterface} The populated <code>WritableInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WritableInterface();

            if (data.hasOwnProperty('_occupied')) {
                obj['_occupied'] = ApiClient.convertToType(data['_occupied'], 'Boolean');
            }
            if (data.hasOwnProperty('bridge')) {
                obj['bridge'] = ApiClient.convertToType(data['bridge'], 'Number');
            }
            if (data.hasOwnProperty('cable')) {
                obj['cable'] = NestedCable.constructFromObject(data['cable']);
            }
            if (data.hasOwnProperty('cable_end')) {
                obj['cable_end'] = ApiClient.convertToType(data['cable_end'], 'String');
            }
            if (data.hasOwnProperty('connected_endpoints')) {
                obj['connected_endpoints'] = ApiClient.convertToType(data['connected_endpoints'], ['String']);
            }
            if (data.hasOwnProperty('connected_endpoints_reachable')) {
                obj['connected_endpoints_reachable'] = ApiClient.convertToType(data['connected_endpoints_reachable'], 'Boolean');
            }
            if (data.hasOwnProperty('connected_endpoints_type')) {
                obj['connected_endpoints_type'] = ApiClient.convertToType(data['connected_endpoints_type'], 'String');
            }
            if (data.hasOwnProperty('count_fhrp_groups')) {
                obj['count_fhrp_groups'] = ApiClient.convertToType(data['count_fhrp_groups'], 'Number');
            }
            if (data.hasOwnProperty('count_ipaddresses')) {
                obj['count_ipaddresses'] = ApiClient.convertToType(data['count_ipaddresses'], 'Number');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('custom_fields')) {
                obj['custom_fields'] = ApiClient.convertToType(data['custom_fields'], Object);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('device')) {
                obj['device'] = ApiClient.convertToType(data['device'], 'Number');
            }
            if (data.hasOwnProperty('display')) {
                obj['display'] = ApiClient.convertToType(data['display'], 'String');
            }
            if (data.hasOwnProperty('duplex')) {
                obj['duplex'] = ApiClient.convertToType(data['duplex'], 'String');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('l2vpn_termination')) {
                obj['l2vpn_termination'] = ApiClient.convertToType(data['l2vpn_termination'], 'String');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('lag')) {
                obj['lag'] = ApiClient.convertToType(data['lag'], 'Number');
            }
            if (data.hasOwnProperty('last_updated')) {
                obj['last_updated'] = ApiClient.convertToType(data['last_updated'], 'Date');
            }
            if (data.hasOwnProperty('link_peers')) {
                obj['link_peers'] = ApiClient.convertToType(data['link_peers'], ['String']);
            }
            if (data.hasOwnProperty('link_peers_type')) {
                obj['link_peers_type'] = ApiClient.convertToType(data['link_peers_type'], 'String');
            }
            if (data.hasOwnProperty('mac_address')) {
                obj['mac_address'] = ApiClient.convertToType(data['mac_address'], 'String');
            }
            if (data.hasOwnProperty('mark_connected')) {
                obj['mark_connected'] = ApiClient.convertToType(data['mark_connected'], 'Boolean');
            }
            if (data.hasOwnProperty('mgmt_only')) {
                obj['mgmt_only'] = ApiClient.convertToType(data['mgmt_only'], 'Boolean');
            }
            if (data.hasOwnProperty('mode')) {
                obj['mode'] = ApiClient.convertToType(data['mode'], 'String');
            }
            if (data.hasOwnProperty('module')) {
                obj['module'] = ApiClient.convertToType(data['module'], 'Number');
            }
            if (data.hasOwnProperty('mtu')) {
                obj['mtu'] = ApiClient.convertToType(data['mtu'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('parent')) {
                obj['parent'] = ApiClient.convertToType(data['parent'], 'Number');
            }
            if (data.hasOwnProperty('poe_mode')) {
                obj['poe_mode'] = ApiClient.convertToType(data['poe_mode'], 'String');
            }
            if (data.hasOwnProperty('poe_type')) {
                obj['poe_type'] = ApiClient.convertToType(data['poe_type'], 'String');
            }
            if (data.hasOwnProperty('rf_channel')) {
                obj['rf_channel'] = ApiClient.convertToType(data['rf_channel'], 'String');
            }
            if (data.hasOwnProperty('rf_channel_frequency')) {
                obj['rf_channel_frequency'] = ApiClient.convertToType(data['rf_channel_frequency'], 'Number');
            }
            if (data.hasOwnProperty('rf_channel_width')) {
                obj['rf_channel_width'] = ApiClient.convertToType(data['rf_channel_width'], 'Number');
            }
            if (data.hasOwnProperty('rf_role')) {
                obj['rf_role'] = ApiClient.convertToType(data['rf_role'], 'String');
            }
            if (data.hasOwnProperty('speed')) {
                obj['speed'] = ApiClient.convertToType(data['speed'], 'Number');
            }
            if (data.hasOwnProperty('tagged_vlans')) {
                obj['tagged_vlans'] = ApiClient.convertToType(data['tagged_vlans'], ['Number']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], [NestedTag]);
            }
            if (data.hasOwnProperty('tx_power')) {
                obj['tx_power'] = ApiClient.convertToType(data['tx_power'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('untagged_vlan')) {
                obj['untagged_vlan'] = ApiClient.convertToType(data['untagged_vlan'], 'Number');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('vdcs')) {
                obj['vdcs'] = ApiClient.convertToType(data['vdcs'], ['Number']);
            }
            if (data.hasOwnProperty('vrf')) {
                obj['vrf'] = ApiClient.convertToType(data['vrf'], 'Number');
            }
            if (data.hasOwnProperty('wireless_lans')) {
                obj['wireless_lans'] = ApiClient.convertToType(data['wireless_lans'], ['Number']);
            }
            if (data.hasOwnProperty('wireless_link')) {
                obj['wireless_link'] = ApiClient.convertToType(data['wireless_link'], 'Number');
            }
            if (data.hasOwnProperty('wwn')) {
                obj['wwn'] = ApiClient.convertToType(data['wwn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WritableInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WritableInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WritableInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `cable`
        if (data['cable']) { // data not null
          NestedCable.validateJSON(data['cable']);
        }
        // ensure the json data is a string
        if (data['cable_end'] && !(typeof data['cable_end'] === 'string' || data['cable_end'] instanceof String)) {
            throw new Error("Expected the field `cable_end` to be a primitive type in the JSON string but got " + data['cable_end']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['connected_endpoints'])) {
            throw new Error("Expected the field `connected_endpoints` to be an array in the JSON data but got " + data['connected_endpoints']);
        }
        // ensure the json data is a string
        if (data['connected_endpoints_type'] && !(typeof data['connected_endpoints_type'] === 'string' || data['connected_endpoints_type'] instanceof String)) {
            throw new Error("Expected the field `connected_endpoints_type` to be a primitive type in the JSON string but got " + data['connected_endpoints_type']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['display'] && !(typeof data['display'] === 'string' || data['display'] instanceof String)) {
            throw new Error("Expected the field `display` to be a primitive type in the JSON string but got " + data['display']);
        }
        // ensure the json data is a string
        if (data['duplex'] && !(typeof data['duplex'] === 'string' || data['duplex'] instanceof String)) {
            throw new Error("Expected the field `duplex` to be a primitive type in the JSON string but got " + data['duplex']);
        }
        // ensure the json data is a string
        if (data['l2vpn_termination'] && !(typeof data['l2vpn_termination'] === 'string' || data['l2vpn_termination'] instanceof String)) {
            throw new Error("Expected the field `l2vpn_termination` to be a primitive type in the JSON string but got " + data['l2vpn_termination']);
        }
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['link_peers'])) {
            throw new Error("Expected the field `link_peers` to be an array in the JSON data but got " + data['link_peers']);
        }
        // ensure the json data is a string
        if (data['link_peers_type'] && !(typeof data['link_peers_type'] === 'string' || data['link_peers_type'] instanceof String)) {
            throw new Error("Expected the field `link_peers_type` to be a primitive type in the JSON string but got " + data['link_peers_type']);
        }
        // ensure the json data is a string
        if (data['mac_address'] && !(typeof data['mac_address'] === 'string' || data['mac_address'] instanceof String)) {
            throw new Error("Expected the field `mac_address` to be a primitive type in the JSON string but got " + data['mac_address']);
        }
        // ensure the json data is a string
        if (data['mode'] && !(typeof data['mode'] === 'string' || data['mode'] instanceof String)) {
            throw new Error("Expected the field `mode` to be a primitive type in the JSON string but got " + data['mode']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['poe_mode'] && !(typeof data['poe_mode'] === 'string' || data['poe_mode'] instanceof String)) {
            throw new Error("Expected the field `poe_mode` to be a primitive type in the JSON string but got " + data['poe_mode']);
        }
        // ensure the json data is a string
        if (data['poe_type'] && !(typeof data['poe_type'] === 'string' || data['poe_type'] instanceof String)) {
            throw new Error("Expected the field `poe_type` to be a primitive type in the JSON string but got " + data['poe_type']);
        }
        // ensure the json data is a string
        if (data['rf_channel'] && !(typeof data['rf_channel'] === 'string' || data['rf_channel'] instanceof String)) {
            throw new Error("Expected the field `rf_channel` to be a primitive type in the JSON string but got " + data['rf_channel']);
        }
        // ensure the json data is a string
        if (data['rf_role'] && !(typeof data['rf_role'] === 'string' || data['rf_role'] instanceof String)) {
            throw new Error("Expected the field `rf_role` to be a primitive type in the JSON string but got " + data['rf_role']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tagged_vlans'])) {
            throw new Error("Expected the field `tagged_vlans` to be an array in the JSON data but got " + data['tagged_vlans']);
        }
        if (data['tags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['tags'])) {
                throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
            }
            // validate the optional field `tags` (array)
            for (const item of data['tags']) {
                NestedTag.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['vdcs'])) {
            throw new Error("Expected the field `vdcs` to be an array in the JSON data but got " + data['vdcs']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['wireless_lans'])) {
            throw new Error("Expected the field `wireless_lans` to be an array in the JSON data but got " + data['wireless_lans']);
        }
        // ensure the json data is a string
        if (data['wwn'] && !(typeof data['wwn'] === 'string' || data['wwn'] instanceof String)) {
            throw new Error("Expected the field `wwn` to be a primitive type in the JSON string but got " + data['wwn']);
        }

        return true;
    }


}

WritableInterface.RequiredProperties = ["device", "name", "type", "vdcs"];

/**
 * @member {Boolean} _occupied
 */
WritableInterface.prototype['_occupied'] = undefined;

/**
 * @member {Number} bridge
 */
WritableInterface.prototype['bridge'] = undefined;

/**
 * @member {module:model/NestedCable} cable
 */
WritableInterface.prototype['cable'] = undefined;

/**
 * @member {String} cable_end
 */
WritableInterface.prototype['cable_end'] = undefined;

/**
 *  Return the appropriate serializer for the type of connected object. 
 * @member {Array.<String>} connected_endpoints
 */
WritableInterface.prototype['connected_endpoints'] = undefined;

/**
 * @member {Boolean} connected_endpoints_reachable
 */
WritableInterface.prototype['connected_endpoints_reachable'] = undefined;

/**
 * @member {String} connected_endpoints_type
 */
WritableInterface.prototype['connected_endpoints_type'] = undefined;

/**
 * @member {Number} count_fhrp_groups
 */
WritableInterface.prototype['count_fhrp_groups'] = undefined;

/**
 * @member {Number} count_ipaddresses
 */
WritableInterface.prototype['count_ipaddresses'] = undefined;

/**
 * @member {Date} created
 */
WritableInterface.prototype['created'] = undefined;

/**
 * @member {Object} custom_fields
 */
WritableInterface.prototype['custom_fields'] = undefined;

/**
 * @member {String} description
 */
WritableInterface.prototype['description'] = undefined;

/**
 * @member {Number} device
 */
WritableInterface.prototype['device'] = undefined;

/**
 * @member {String} display
 */
WritableInterface.prototype['display'] = undefined;

/**
 * @member {module:model/WritableInterface.DuplexEnum} duplex
 */
WritableInterface.prototype['duplex'] = undefined;

/**
 * @member {Boolean} enabled
 */
WritableInterface.prototype['enabled'] = undefined;

/**
 * @member {Number} id
 */
WritableInterface.prototype['id'] = undefined;

/**
 * @member {String} l2vpn_termination
 */
WritableInterface.prototype['l2vpn_termination'] = undefined;

/**
 * Physical label
 * @member {String} label
 */
WritableInterface.prototype['label'] = undefined;

/**
 * @member {Number} lag
 */
WritableInterface.prototype['lag'] = undefined;

/**
 * @member {Date} last_updated
 */
WritableInterface.prototype['last_updated'] = undefined;

/**
 *  Return the appropriate serializer for the link termination model. 
 * @member {Array.<String>} link_peers
 */
WritableInterface.prototype['link_peers'] = undefined;

/**
 * @member {String} link_peers_type
 */
WritableInterface.prototype['link_peers_type'] = undefined;

/**
 * @member {String} mac_address
 */
WritableInterface.prototype['mac_address'] = undefined;

/**
 * Treat as if a cable is connected
 * @member {Boolean} mark_connected
 */
WritableInterface.prototype['mark_connected'] = undefined;

/**
 * This interface is used only for out-of-band management
 * @member {Boolean} mgmt_only
 */
WritableInterface.prototype['mgmt_only'] = undefined;

/**
 * @member {module:model/WritableInterface.ModeEnum} mode
 */
WritableInterface.prototype['mode'] = undefined;

/**
 * @member {Number} module
 */
WritableInterface.prototype['module'] = undefined;

/**
 * @member {Number} mtu
 */
WritableInterface.prototype['mtu'] = undefined;

/**
 * @member {String} name
 */
WritableInterface.prototype['name'] = undefined;

/**
 * @member {Number} parent
 */
WritableInterface.prototype['parent'] = undefined;

/**
 * @member {module:model/WritableInterface.PoeModeEnum} poe_mode
 */
WritableInterface.prototype['poe_mode'] = undefined;

/**
 * @member {module:model/WritableInterface.PoeTypeEnum} poe_type
 */
WritableInterface.prototype['poe_type'] = undefined;

/**
 * @member {module:model/WritableInterface.RfChannelEnum} rf_channel
 */
WritableInterface.prototype['rf_channel'] = undefined;

/**
 * @member {Number} rf_channel_frequency
 */
WritableInterface.prototype['rf_channel_frequency'] = undefined;

/**
 * @member {Number} rf_channel_width
 */
WritableInterface.prototype['rf_channel_width'] = undefined;

/**
 * @member {module:model/WritableInterface.RfRoleEnum} rf_role
 */
WritableInterface.prototype['rf_role'] = undefined;

/**
 * @member {Number} speed
 */
WritableInterface.prototype['speed'] = undefined;

/**
 * @member {Array.<Number>} tagged_vlans
 */
WritableInterface.prototype['tagged_vlans'] = undefined;

/**
 * @member {Array.<module:model/NestedTag>} tags
 */
WritableInterface.prototype['tags'] = undefined;

/**
 * @member {Number} tx_power
 */
WritableInterface.prototype['tx_power'] = undefined;

/**
 * @member {module:model/WritableInterface.TypeEnum} type
 */
WritableInterface.prototype['type'] = undefined;

/**
 * @member {Number} untagged_vlan
 */
WritableInterface.prototype['untagged_vlan'] = undefined;

/**
 * @member {String} url
 */
WritableInterface.prototype['url'] = undefined;

/**
 * @member {Array.<Number>} vdcs
 */
WritableInterface.prototype['vdcs'] = undefined;

/**
 * @member {Number} vrf
 */
WritableInterface.prototype['vrf'] = undefined;

/**
 * @member {Array.<Number>} wireless_lans
 */
WritableInterface.prototype['wireless_lans'] = undefined;

/**
 * @member {Number} wireless_link
 */
WritableInterface.prototype['wireless_link'] = undefined;

/**
 * 64-bit World Wide Name
 * @member {String} wwn
 */
WritableInterface.prototype['wwn'] = undefined;





/**
 * Allowed values for the <code>duplex</code> property.
 * @enum {String}
 * @readonly
 */
WritableInterface['DuplexEnum'] = {

    /**
     * value: "half"
     * @const
     */
    "half": "half",

    /**
     * value: "full"
     * @const
     */
    "full": "full",

    /**
     * value: "auto"
     * @const
     */
    "auto": "auto"
};


/**
 * Allowed values for the <code>mode</code> property.
 * @enum {String}
 * @readonly
 */
WritableInterface['ModeEnum'] = {

    /**
     * value: "access"
     * @const
     */
    "access": "access",

    /**
     * value: "tagged"
     * @const
     */
    "tagged": "tagged",

    /**
     * value: "tagged-all"
     * @const
     */
    "tagged-all": "tagged-all"
};


/**
 * Allowed values for the <code>poe_mode</code> property.
 * @enum {String}
 * @readonly
 */
WritableInterface['PoeModeEnum'] = {

    /**
     * value: "pd"
     * @const
     */
    "pd": "pd",

    /**
     * value: "pse"
     * @const
     */
    "pse": "pse"
};


/**
 * Allowed values for the <code>poe_type</code> property.
 * @enum {String}
 * @readonly
 */
WritableInterface['PoeTypeEnum'] = {

    /**
     * value: "type1-ieee802.3af"
     * @const
     */
    "type1-ieee802.3af": "type1-ieee802.3af",

    /**
     * value: "type2-ieee802.3at"
     * @const
     */
    "type2-ieee802.3at": "type2-ieee802.3at",

    /**
     * value: "type2-ieee802.3az"
     * @const
     */
    "type2-ieee802.3az": "type2-ieee802.3az",

    /**
     * value: "type3-ieee802.3bt"
     * @const
     */
    "type3-ieee802.3bt": "type3-ieee802.3bt",

    /**
     * value: "type4-ieee802.3bt"
     * @const
     */
    "type4-ieee802.3bt": "type4-ieee802.3bt",

    /**
     * value: "passive-24v-2pair"
     * @const
     */
    "passive-24v-2pair": "passive-24v-2pair",

    /**
     * value: "passive-24v-4pair"
     * @const
     */
    "passive-24v-4pair": "passive-24v-4pair",

    /**
     * value: "passive-48v-2pair"
     * @const
     */
    "passive-48v-2pair": "passive-48v-2pair",

    /**
     * value: "passive-48v-4pair"
     * @const
     */
    "passive-48v-4pair": "passive-48v-4pair"
};


/**
 * Allowed values for the <code>rf_channel</code> property.
 * @enum {String}
 * @readonly
 */
WritableInterface['RfChannelEnum'] = {

    /**
     * value: "2.4g-1-2412-22"
     * @const
     */
    "2.4g-1-2412-22": "2.4g-1-2412-22",

    /**
     * value: "2.4g-2-2417-22"
     * @const
     */
    "2.4g-2-2417-22": "2.4g-2-2417-22",

    /**
     * value: "2.4g-3-2422-22"
     * @const
     */
    "2.4g-3-2422-22": "2.4g-3-2422-22",

    /**
     * value: "2.4g-4-2427-22"
     * @const
     */
    "2.4g-4-2427-22": "2.4g-4-2427-22",

    /**
     * value: "2.4g-5-2432-22"
     * @const
     */
    "2.4g-5-2432-22": "2.4g-5-2432-22",

    /**
     * value: "2.4g-6-2437-22"
     * @const
     */
    "2.4g-6-2437-22": "2.4g-6-2437-22",

    /**
     * value: "2.4g-7-2442-22"
     * @const
     */
    "2.4g-7-2442-22": "2.4g-7-2442-22",

    /**
     * value: "2.4g-8-2447-22"
     * @const
     */
    "2.4g-8-2447-22": "2.4g-8-2447-22",

    /**
     * value: "2.4g-9-2452-22"
     * @const
     */
    "2.4g-9-2452-22": "2.4g-9-2452-22",

    /**
     * value: "2.4g-10-2457-22"
     * @const
     */
    "2.4g-10-2457-22": "2.4g-10-2457-22",

    /**
     * value: "2.4g-11-2462-22"
     * @const
     */
    "2.4g-11-2462-22": "2.4g-11-2462-22",

    /**
     * value: "2.4g-12-2467-22"
     * @const
     */
    "2.4g-12-2467-22": "2.4g-12-2467-22",

    /**
     * value: "2.4g-13-2472-22"
     * @const
     */
    "2.4g-13-2472-22": "2.4g-13-2472-22",

    /**
     * value: "5g-32-5160-20"
     * @const
     */
    "5g-32-5160-20": "5g-32-5160-20",

    /**
     * value: "5g-34-5170-40"
     * @const
     */
    "5g-34-5170-40": "5g-34-5170-40",

    /**
     * value: "5g-36-5180-20"
     * @const
     */
    "5g-36-5180-20": "5g-36-5180-20",

    /**
     * value: "5g-38-5190-40"
     * @const
     */
    "5g-38-5190-40": "5g-38-5190-40",

    /**
     * value: "5g-40-5200-20"
     * @const
     */
    "5g-40-5200-20": "5g-40-5200-20",

    /**
     * value: "5g-42-5210-80"
     * @const
     */
    "5g-42-5210-80": "5g-42-5210-80",

    /**
     * value: "5g-44-5220-20"
     * @const
     */
    "5g-44-5220-20": "5g-44-5220-20",

    /**
     * value: "5g-46-5230-40"
     * @const
     */
    "5g-46-5230-40": "5g-46-5230-40",

    /**
     * value: "5g-48-5240-20"
     * @const
     */
    "5g-48-5240-20": "5g-48-5240-20",

    /**
     * value: "5g-50-5250-160"
     * @const
     */
    "5g-50-5250-160": "5g-50-5250-160",

    /**
     * value: "5g-52-5260-20"
     * @const
     */
    "5g-52-5260-20": "5g-52-5260-20",

    /**
     * value: "5g-54-5270-40"
     * @const
     */
    "5g-54-5270-40": "5g-54-5270-40",

    /**
     * value: "5g-56-5280-20"
     * @const
     */
    "5g-56-5280-20": "5g-56-5280-20",

    /**
     * value: "5g-58-5290-80"
     * @const
     */
    "5g-58-5290-80": "5g-58-5290-80",

    /**
     * value: "5g-60-5300-20"
     * @const
     */
    "5g-60-5300-20": "5g-60-5300-20",

    /**
     * value: "5g-62-5310-40"
     * @const
     */
    "5g-62-5310-40": "5g-62-5310-40",

    /**
     * value: "5g-64-5320-20"
     * @const
     */
    "5g-64-5320-20": "5g-64-5320-20",

    /**
     * value: "5g-100-5500-20"
     * @const
     */
    "5g-100-5500-20": "5g-100-5500-20",

    /**
     * value: "5g-102-5510-40"
     * @const
     */
    "5g-102-5510-40": "5g-102-5510-40",

    /**
     * value: "5g-104-5520-20"
     * @const
     */
    "5g-104-5520-20": "5g-104-5520-20",

    /**
     * value: "5g-106-5530-80"
     * @const
     */
    "5g-106-5530-80": "5g-106-5530-80",

    /**
     * value: "5g-108-5540-20"
     * @const
     */
    "5g-108-5540-20": "5g-108-5540-20",

    /**
     * value: "5g-110-5550-40"
     * @const
     */
    "5g-110-5550-40": "5g-110-5550-40",

    /**
     * value: "5g-112-5560-20"
     * @const
     */
    "5g-112-5560-20": "5g-112-5560-20",

    /**
     * value: "5g-114-5570-160"
     * @const
     */
    "5g-114-5570-160": "5g-114-5570-160",

    /**
     * value: "5g-116-5580-20"
     * @const
     */
    "5g-116-5580-20": "5g-116-5580-20",

    /**
     * value: "5g-118-5590-40"
     * @const
     */
    "5g-118-5590-40": "5g-118-5590-40",

    /**
     * value: "5g-120-5600-20"
     * @const
     */
    "5g-120-5600-20": "5g-120-5600-20",

    /**
     * value: "5g-122-5610-80"
     * @const
     */
    "5g-122-5610-80": "5g-122-5610-80",

    /**
     * value: "5g-124-5620-20"
     * @const
     */
    "5g-124-5620-20": "5g-124-5620-20",

    /**
     * value: "5g-126-5630-40"
     * @const
     */
    "5g-126-5630-40": "5g-126-5630-40",

    /**
     * value: "5g-128-5640-20"
     * @const
     */
    "5g-128-5640-20": "5g-128-5640-20",

    /**
     * value: "5g-132-5660-20"
     * @const
     */
    "5g-132-5660-20": "5g-132-5660-20",

    /**
     * value: "5g-134-5670-40"
     * @const
     */
    "5g-134-5670-40": "5g-134-5670-40",

    /**
     * value: "5g-136-5680-20"
     * @const
     */
    "5g-136-5680-20": "5g-136-5680-20",

    /**
     * value: "5g-138-5690-80"
     * @const
     */
    "5g-138-5690-80": "5g-138-5690-80",

    /**
     * value: "5g-140-5700-20"
     * @const
     */
    "5g-140-5700-20": "5g-140-5700-20",

    /**
     * value: "5g-142-5710-40"
     * @const
     */
    "5g-142-5710-40": "5g-142-5710-40",

    /**
     * value: "5g-144-5720-20"
     * @const
     */
    "5g-144-5720-20": "5g-144-5720-20",

    /**
     * value: "5g-149-5745-20"
     * @const
     */
    "5g-149-5745-20": "5g-149-5745-20",

    /**
     * value: "5g-151-5755-40"
     * @const
     */
    "5g-151-5755-40": "5g-151-5755-40",

    /**
     * value: "5g-153-5765-20"
     * @const
     */
    "5g-153-5765-20": "5g-153-5765-20",

    /**
     * value: "5g-155-5775-80"
     * @const
     */
    "5g-155-5775-80": "5g-155-5775-80",

    /**
     * value: "5g-157-5785-20"
     * @const
     */
    "5g-157-5785-20": "5g-157-5785-20",

    /**
     * value: "5g-159-5795-40"
     * @const
     */
    "5g-159-5795-40": "5g-159-5795-40",

    /**
     * value: "5g-161-5805-20"
     * @const
     */
    "5g-161-5805-20": "5g-161-5805-20",

    /**
     * value: "5g-163-5815-160"
     * @const
     */
    "5g-163-5815-160": "5g-163-5815-160",

    /**
     * value: "5g-165-5825-20"
     * @const
     */
    "5g-165-5825-20": "5g-165-5825-20",

    /**
     * value: "5g-167-5835-40"
     * @const
     */
    "5g-167-5835-40": "5g-167-5835-40",

    /**
     * value: "5g-169-5845-20"
     * @const
     */
    "5g-169-5845-20": "5g-169-5845-20",

    /**
     * value: "5g-171-5855-80"
     * @const
     */
    "5g-171-5855-80": "5g-171-5855-80",

    /**
     * value: "5g-173-5865-20"
     * @const
     */
    "5g-173-5865-20": "5g-173-5865-20",

    /**
     * value: "5g-175-5875-40"
     * @const
     */
    "5g-175-5875-40": "5g-175-5875-40",

    /**
     * value: "5g-177-5885-20"
     * @const
     */
    "5g-177-5885-20": "5g-177-5885-20",

    /**
     * value: "6g-1-5955-20"
     * @const
     */
    "6g-1-5955-20": "6g-1-5955-20",

    /**
     * value: "6g-3-5965-40"
     * @const
     */
    "6g-3-5965-40": "6g-3-5965-40",

    /**
     * value: "6g-5-5975-20"
     * @const
     */
    "6g-5-5975-20": "6g-5-5975-20",

    /**
     * value: "6g-7-5985-80"
     * @const
     */
    "6g-7-5985-80": "6g-7-5985-80",

    /**
     * value: "6g-9-5995-20"
     * @const
     */
    "6g-9-5995-20": "6g-9-5995-20",

    /**
     * value: "6g-11-6005-40"
     * @const
     */
    "6g-11-6005-40": "6g-11-6005-40",

    /**
     * value: "6g-13-6015-20"
     * @const
     */
    "6g-13-6015-20": "6g-13-6015-20",

    /**
     * value: "6g-15-6025-160"
     * @const
     */
    "6g-15-6025-160": "6g-15-6025-160",

    /**
     * value: "6g-17-6035-20"
     * @const
     */
    "6g-17-6035-20": "6g-17-6035-20",

    /**
     * value: "6g-19-6045-40"
     * @const
     */
    "6g-19-6045-40": "6g-19-6045-40",

    /**
     * value: "6g-21-6055-20"
     * @const
     */
    "6g-21-6055-20": "6g-21-6055-20",

    /**
     * value: "6g-23-6065-80"
     * @const
     */
    "6g-23-6065-80": "6g-23-6065-80",

    /**
     * value: "6g-25-6075-20"
     * @const
     */
    "6g-25-6075-20": "6g-25-6075-20",

    /**
     * value: "6g-27-6085-40"
     * @const
     */
    "6g-27-6085-40": "6g-27-6085-40",

    /**
     * value: "6g-29-6095-20"
     * @const
     */
    "6g-29-6095-20": "6g-29-6095-20",

    /**
     * value: "6g-31-6105-320"
     * @const
     */
    "6g-31-6105-320": "6g-31-6105-320",

    /**
     * value: "6g-33-6115-20"
     * @const
     */
    "6g-33-6115-20": "6g-33-6115-20",

    /**
     * value: "6g-35-6125-40"
     * @const
     */
    "6g-35-6125-40": "6g-35-6125-40",

    /**
     * value: "6g-37-6135-20"
     * @const
     */
    "6g-37-6135-20": "6g-37-6135-20",

    /**
     * value: "6g-39-6145-80"
     * @const
     */
    "6g-39-6145-80": "6g-39-6145-80",

    /**
     * value: "6g-41-6155-20"
     * @const
     */
    "6g-41-6155-20": "6g-41-6155-20",

    /**
     * value: "6g-43-6165-40"
     * @const
     */
    "6g-43-6165-40": "6g-43-6165-40",

    /**
     * value: "6g-45-6175-20"
     * @const
     */
    "6g-45-6175-20": "6g-45-6175-20",

    /**
     * value: "6g-47-6185-160"
     * @const
     */
    "6g-47-6185-160": "6g-47-6185-160",

    /**
     * value: "6g-49-6195-20"
     * @const
     */
    "6g-49-6195-20": "6g-49-6195-20",

    /**
     * value: "6g-51-6205-40"
     * @const
     */
    "6g-51-6205-40": "6g-51-6205-40",

    /**
     * value: "6g-53-6215-20"
     * @const
     */
    "6g-53-6215-20": "6g-53-6215-20",

    /**
     * value: "6g-55-6225-80"
     * @const
     */
    "6g-55-6225-80": "6g-55-6225-80",

    /**
     * value: "6g-57-6235-20"
     * @const
     */
    "6g-57-6235-20": "6g-57-6235-20",

    /**
     * value: "6g-59-6245-40"
     * @const
     */
    "6g-59-6245-40": "6g-59-6245-40",

    /**
     * value: "6g-61-6255-20"
     * @const
     */
    "6g-61-6255-20": "6g-61-6255-20",

    /**
     * value: "6g-65-6275-20"
     * @const
     */
    "6g-65-6275-20": "6g-65-6275-20",

    /**
     * value: "6g-67-6285-40"
     * @const
     */
    "6g-67-6285-40": "6g-67-6285-40",

    /**
     * value: "6g-69-6295-20"
     * @const
     */
    "6g-69-6295-20": "6g-69-6295-20",

    /**
     * value: "6g-71-6305-80"
     * @const
     */
    "6g-71-6305-80": "6g-71-6305-80",

    /**
     * value: "6g-73-6315-20"
     * @const
     */
    "6g-73-6315-20": "6g-73-6315-20",

    /**
     * value: "6g-75-6325-40"
     * @const
     */
    "6g-75-6325-40": "6g-75-6325-40",

    /**
     * value: "6g-77-6335-20"
     * @const
     */
    "6g-77-6335-20": "6g-77-6335-20",

    /**
     * value: "6g-79-6345-160"
     * @const
     */
    "6g-79-6345-160": "6g-79-6345-160",

    /**
     * value: "6g-81-6355-20"
     * @const
     */
    "6g-81-6355-20": "6g-81-6355-20",

    /**
     * value: "6g-83-6365-40"
     * @const
     */
    "6g-83-6365-40": "6g-83-6365-40",

    /**
     * value: "6g-85-6375-20"
     * @const
     */
    "6g-85-6375-20": "6g-85-6375-20",

    /**
     * value: "6g-87-6385-80"
     * @const
     */
    "6g-87-6385-80": "6g-87-6385-80",

    /**
     * value: "6g-89-6395-20"
     * @const
     */
    "6g-89-6395-20": "6g-89-6395-20",

    /**
     * value: "6g-91-6405-40"
     * @const
     */
    "6g-91-6405-40": "6g-91-6405-40",

    /**
     * value: "6g-93-6415-20"
     * @const
     */
    "6g-93-6415-20": "6g-93-6415-20",

    /**
     * value: "6g-95-6425-320"
     * @const
     */
    "6g-95-6425-320": "6g-95-6425-320",

    /**
     * value: "6g-97-6435-20"
     * @const
     */
    "6g-97-6435-20": "6g-97-6435-20",

    /**
     * value: "6g-99-6445-40"
     * @const
     */
    "6g-99-6445-40": "6g-99-6445-40",

    /**
     * value: "6g-101-6455-20"
     * @const
     */
    "6g-101-6455-20": "6g-101-6455-20",

    /**
     * value: "6g-103-6465-80"
     * @const
     */
    "6g-103-6465-80": "6g-103-6465-80",

    /**
     * value: "6g-105-6475-20"
     * @const
     */
    "6g-105-6475-20": "6g-105-6475-20",

    /**
     * value: "6g-107-6485-40"
     * @const
     */
    "6g-107-6485-40": "6g-107-6485-40",

    /**
     * value: "6g-109-6495-20"
     * @const
     */
    "6g-109-6495-20": "6g-109-6495-20",

    /**
     * value: "6g-111-6505-160"
     * @const
     */
    "6g-111-6505-160": "6g-111-6505-160",

    /**
     * value: "6g-113-6515-20"
     * @const
     */
    "6g-113-6515-20": "6g-113-6515-20",

    /**
     * value: "6g-115-6525-40"
     * @const
     */
    "6g-115-6525-40": "6g-115-6525-40",

    /**
     * value: "6g-117-6535-20"
     * @const
     */
    "6g-117-6535-20": "6g-117-6535-20",

    /**
     * value: "6g-119-6545-80"
     * @const
     */
    "6g-119-6545-80": "6g-119-6545-80",

    /**
     * value: "6g-121-6555-20"
     * @const
     */
    "6g-121-6555-20": "6g-121-6555-20",

    /**
     * value: "6g-123-6565-40"
     * @const
     */
    "6g-123-6565-40": "6g-123-6565-40",

    /**
     * value: "6g-125-6575-20"
     * @const
     */
    "6g-125-6575-20": "6g-125-6575-20",

    /**
     * value: "6g-129-6595-20"
     * @const
     */
    "6g-129-6595-20": "6g-129-6595-20",

    /**
     * value: "6g-131-6605-40"
     * @const
     */
    "6g-131-6605-40": "6g-131-6605-40",

    /**
     * value: "6g-133-6615-20"
     * @const
     */
    "6g-133-6615-20": "6g-133-6615-20",

    /**
     * value: "6g-135-6625-80"
     * @const
     */
    "6g-135-6625-80": "6g-135-6625-80",

    /**
     * value: "6g-137-6635-20"
     * @const
     */
    "6g-137-6635-20": "6g-137-6635-20",

    /**
     * value: "6g-139-6645-40"
     * @const
     */
    "6g-139-6645-40": "6g-139-6645-40",

    /**
     * value: "6g-141-6655-20"
     * @const
     */
    "6g-141-6655-20": "6g-141-6655-20",

    /**
     * value: "6g-143-6665-160"
     * @const
     */
    "6g-143-6665-160": "6g-143-6665-160",

    /**
     * value: "6g-145-6675-20"
     * @const
     */
    "6g-145-6675-20": "6g-145-6675-20",

    /**
     * value: "6g-147-6685-40"
     * @const
     */
    "6g-147-6685-40": "6g-147-6685-40",

    /**
     * value: "6g-149-6695-20"
     * @const
     */
    "6g-149-6695-20": "6g-149-6695-20",

    /**
     * value: "6g-151-6705-80"
     * @const
     */
    "6g-151-6705-80": "6g-151-6705-80",

    /**
     * value: "6g-153-6715-20"
     * @const
     */
    "6g-153-6715-20": "6g-153-6715-20",

    /**
     * value: "6g-155-6725-40"
     * @const
     */
    "6g-155-6725-40": "6g-155-6725-40",

    /**
     * value: "6g-157-6735-20"
     * @const
     */
    "6g-157-6735-20": "6g-157-6735-20",

    /**
     * value: "6g-159-6745-320"
     * @const
     */
    "6g-159-6745-320": "6g-159-6745-320",

    /**
     * value: "6g-161-6755-20"
     * @const
     */
    "6g-161-6755-20": "6g-161-6755-20",

    /**
     * value: "6g-163-6765-40"
     * @const
     */
    "6g-163-6765-40": "6g-163-6765-40",

    /**
     * value: "6g-165-6775-20"
     * @const
     */
    "6g-165-6775-20": "6g-165-6775-20",

    /**
     * value: "6g-167-6785-80"
     * @const
     */
    "6g-167-6785-80": "6g-167-6785-80",

    /**
     * value: "6g-169-6795-20"
     * @const
     */
    "6g-169-6795-20": "6g-169-6795-20",

    /**
     * value: "6g-171-6805-40"
     * @const
     */
    "6g-171-6805-40": "6g-171-6805-40",

    /**
     * value: "6g-173-6815-20"
     * @const
     */
    "6g-173-6815-20": "6g-173-6815-20",

    /**
     * value: "6g-175-6825-160"
     * @const
     */
    "6g-175-6825-160": "6g-175-6825-160",

    /**
     * value: "6g-177-6835-20"
     * @const
     */
    "6g-177-6835-20": "6g-177-6835-20",

    /**
     * value: "6g-179-6845-40"
     * @const
     */
    "6g-179-6845-40": "6g-179-6845-40",

    /**
     * value: "6g-181-6855-20"
     * @const
     */
    "6g-181-6855-20": "6g-181-6855-20",

    /**
     * value: "6g-183-6865-80"
     * @const
     */
    "6g-183-6865-80": "6g-183-6865-80",

    /**
     * value: "6g-185-6875-20"
     * @const
     */
    "6g-185-6875-20": "6g-185-6875-20",

    /**
     * value: "6g-187-6885-40"
     * @const
     */
    "6g-187-6885-40": "6g-187-6885-40",

    /**
     * value: "6g-189-6895-20"
     * @const
     */
    "6g-189-6895-20": "6g-189-6895-20",

    /**
     * value: "6g-193-6915-20"
     * @const
     */
    "6g-193-6915-20": "6g-193-6915-20",

    /**
     * value: "6g-195-6925-40"
     * @const
     */
    "6g-195-6925-40": "6g-195-6925-40",

    /**
     * value: "6g-197-6935-20"
     * @const
     */
    "6g-197-6935-20": "6g-197-6935-20",

    /**
     * value: "6g-199-6945-80"
     * @const
     */
    "6g-199-6945-80": "6g-199-6945-80",

    /**
     * value: "6g-201-6955-20"
     * @const
     */
    "6g-201-6955-20": "6g-201-6955-20",

    /**
     * value: "6g-203-6965-40"
     * @const
     */
    "6g-203-6965-40": "6g-203-6965-40",

    /**
     * value: "6g-205-6975-20"
     * @const
     */
    "6g-205-6975-20": "6g-205-6975-20",

    /**
     * value: "6g-207-6985-160"
     * @const
     */
    "6g-207-6985-160": "6g-207-6985-160",

    /**
     * value: "6g-209-6995-20"
     * @const
     */
    "6g-209-6995-20": "6g-209-6995-20",

    /**
     * value: "6g-211-7005-40"
     * @const
     */
    "6g-211-7005-40": "6g-211-7005-40",

    /**
     * value: "6g-213-7015-20"
     * @const
     */
    "6g-213-7015-20": "6g-213-7015-20",

    /**
     * value: "6g-215-7025-80"
     * @const
     */
    "6g-215-7025-80": "6g-215-7025-80",

    /**
     * value: "6g-217-7035-20"
     * @const
     */
    "6g-217-7035-20": "6g-217-7035-20",

    /**
     * value: "6g-219-7045-40"
     * @const
     */
    "6g-219-7045-40": "6g-219-7045-40",

    /**
     * value: "6g-221-7055-20"
     * @const
     */
    "6g-221-7055-20": "6g-221-7055-20",

    /**
     * value: "6g-225-7075-20"
     * @const
     */
    "6g-225-7075-20": "6g-225-7075-20",

    /**
     * value: "6g-227-7085-40"
     * @const
     */
    "6g-227-7085-40": "6g-227-7085-40",

    /**
     * value: "6g-229-7095-20"
     * @const
     */
    "6g-229-7095-20": "6g-229-7095-20",

    /**
     * value: "6g-233-7115-20"
     * @const
     */
    "6g-233-7115-20": "6g-233-7115-20",

    /**
     * value: "60g-1-58320-2160"
     * @const
     */
    "60g-1-58320-2160": "60g-1-58320-2160",

    /**
     * value: "60g-2-60480-2160"
     * @const
     */
    "60g-2-60480-2160": "60g-2-60480-2160",

    /**
     * value: "60g-3-62640-2160"
     * @const
     */
    "60g-3-62640-2160": "60g-3-62640-2160",

    /**
     * value: "60g-4-64800-2160"
     * @const
     */
    "60g-4-64800-2160": "60g-4-64800-2160",

    /**
     * value: "60g-5-66960-2160"
     * @const
     */
    "60g-5-66960-2160": "60g-5-66960-2160",

    /**
     * value: "60g-6-69120-2160"
     * @const
     */
    "60g-6-69120-2160": "60g-6-69120-2160",

    /**
     * value: "60g-9-59400-4320"
     * @const
     */
    "60g-9-59400-4320": "60g-9-59400-4320",

    /**
     * value: "60g-10-61560-4320"
     * @const
     */
    "60g-10-61560-4320": "60g-10-61560-4320",

    /**
     * value: "60g-11-63720-4320"
     * @const
     */
    "60g-11-63720-4320": "60g-11-63720-4320",

    /**
     * value: "60g-12-65880-4320"
     * @const
     */
    "60g-12-65880-4320": "60g-12-65880-4320",

    /**
     * value: "60g-13-68040-4320"
     * @const
     */
    "60g-13-68040-4320": "60g-13-68040-4320",

    /**
     * value: "60g-17-60480-6480"
     * @const
     */
    "60g-17-60480-6480": "60g-17-60480-6480",

    /**
     * value: "60g-18-62640-6480"
     * @const
     */
    "60g-18-62640-6480": "60g-18-62640-6480",

    /**
     * value: "60g-19-64800-6480"
     * @const
     */
    "60g-19-64800-6480": "60g-19-64800-6480",

    /**
     * value: "60g-20-66960-6480"
     * @const
     */
    "60g-20-66960-6480": "60g-20-66960-6480",

    /**
     * value: "60g-25-61560-6480"
     * @const
     */
    "60g-25-61560-6480": "60g-25-61560-6480",

    /**
     * value: "60g-26-63720-6480"
     * @const
     */
    "60g-26-63720-6480": "60g-26-63720-6480",

    /**
     * value: "60g-27-65880-6480"
     * @const
     */
    "60g-27-65880-6480": "60g-27-65880-6480"
};


/**
 * Allowed values for the <code>rf_role</code> property.
 * @enum {String}
 * @readonly
 */
WritableInterface['RfRoleEnum'] = {

    /**
     * value: "ap"
     * @const
     */
    "ap": "ap",

    /**
     * value: "station"
     * @const
     */
    "station": "station"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
WritableInterface['TypeEnum'] = {

    /**
     * value: "virtual"
     * @const
     */
    "virtual": "virtual",

    /**
     * value: "bridge"
     * @const
     */
    "bridge": "bridge",

    /**
     * value: "lag"
     * @const
     */
    "lag": "lag",

    /**
     * value: "100base-fx"
     * @const
     */
    "100base-fx": "100base-fx",

    /**
     * value: "100base-lfx"
     * @const
     */
    "100base-lfx": "100base-lfx",

    /**
     * value: "100base-tx"
     * @const
     */
    "100base-tx": "100base-tx",

    /**
     * value: "100base-t1"
     * @const
     */
    "100base-t1": "100base-t1",

    /**
     * value: "1000base-t"
     * @const
     */
    "1000base-t": "1000base-t",

    /**
     * value: "2.5gbase-t"
     * @const
     */
    "2.5gbase-t": "2.5gbase-t",

    /**
     * value: "5gbase-t"
     * @const
     */
    "5gbase-t": "5gbase-t",

    /**
     * value: "10gbase-t"
     * @const
     */
    "10gbase-t": "10gbase-t",

    /**
     * value: "10gbase-cx4"
     * @const
     */
    "10gbase-cx4": "10gbase-cx4",

    /**
     * value: "1000base-x-gbic"
     * @const
     */
    "1000base-x-gbic": "1000base-x-gbic",

    /**
     * value: "1000base-x-sfp"
     * @const
     */
    "1000base-x-sfp": "1000base-x-sfp",

    /**
     * value: "10gbase-x-sfpp"
     * @const
     */
    "10gbase-x-sfpp": "10gbase-x-sfpp",

    /**
     * value: "10gbase-x-xfp"
     * @const
     */
    "10gbase-x-xfp": "10gbase-x-xfp",

    /**
     * value: "10gbase-x-xenpak"
     * @const
     */
    "10gbase-x-xenpak": "10gbase-x-xenpak",

    /**
     * value: "10gbase-x-x2"
     * @const
     */
    "10gbase-x-x2": "10gbase-x-x2",

    /**
     * value: "25gbase-x-sfp28"
     * @const
     */
    "25gbase-x-sfp28": "25gbase-x-sfp28",

    /**
     * value: "50gbase-x-sfp56"
     * @const
     */
    "50gbase-x-sfp56": "50gbase-x-sfp56",

    /**
     * value: "40gbase-x-qsfpp"
     * @const
     */
    "40gbase-x-qsfpp": "40gbase-x-qsfpp",

    /**
     * value: "50gbase-x-sfp28"
     * @const
     */
    "50gbase-x-sfp28": "50gbase-x-sfp28",

    /**
     * value: "100gbase-x-cfp"
     * @const
     */
    "100gbase-x-cfp": "100gbase-x-cfp",

    /**
     * value: "100gbase-x-cfp2"
     * @const
     */
    "100gbase-x-cfp2": "100gbase-x-cfp2",

    /**
     * value: "200gbase-x-cfp2"
     * @const
     */
    "200gbase-x-cfp2": "200gbase-x-cfp2",

    /**
     * value: "100gbase-x-cfp4"
     * @const
     */
    "100gbase-x-cfp4": "100gbase-x-cfp4",

    /**
     * value: "100gbase-x-cpak"
     * @const
     */
    "100gbase-x-cpak": "100gbase-x-cpak",

    /**
     * value: "100gbase-x-qsfp28"
     * @const
     */
    "100gbase-x-qsfp28": "100gbase-x-qsfp28",

    /**
     * value: "200gbase-x-qsfp56"
     * @const
     */
    "200gbase-x-qsfp56": "200gbase-x-qsfp56",

    /**
     * value: "400gbase-x-qsfpdd"
     * @const
     */
    "400gbase-x-qsfpdd": "400gbase-x-qsfpdd",

    /**
     * value: "400gbase-x-osfp"
     * @const
     */
    "400gbase-x-osfp": "400gbase-x-osfp",

    /**
     * value: "800gbase-x-qsfpdd"
     * @const
     */
    "800gbase-x-qsfpdd": "800gbase-x-qsfpdd",

    /**
     * value: "800gbase-x-osfp"
     * @const
     */
    "800gbase-x-osfp": "800gbase-x-osfp",

    /**
     * value: "1000base-kx"
     * @const
     */
    "1000base-kx": "1000base-kx",

    /**
     * value: "10gbase-kr"
     * @const
     */
    "10gbase-kr": "10gbase-kr",

    /**
     * value: "10gbase-kx4"
     * @const
     */
    "10gbase-kx4": "10gbase-kx4",

    /**
     * value: "25gbase-kr"
     * @const
     */
    "25gbase-kr": "25gbase-kr",

    /**
     * value: "40gbase-kr4"
     * @const
     */
    "40gbase-kr4": "40gbase-kr4",

    /**
     * value: "50gbase-kr"
     * @const
     */
    "50gbase-kr": "50gbase-kr",

    /**
     * value: "100gbase-kp4"
     * @const
     */
    "100gbase-kp4": "100gbase-kp4",

    /**
     * value: "100gbase-kr2"
     * @const
     */
    "100gbase-kr2": "100gbase-kr2",

    /**
     * value: "100gbase-kr4"
     * @const
     */
    "100gbase-kr4": "100gbase-kr4",

    /**
     * value: "ieee802.11a"
     * @const
     */
    "ieee802.11a": "ieee802.11a",

    /**
     * value: "ieee802.11g"
     * @const
     */
    "ieee802.11g": "ieee802.11g",

    /**
     * value: "ieee802.11n"
     * @const
     */
    "ieee802.11n": "ieee802.11n",

    /**
     * value: "ieee802.11ac"
     * @const
     */
    "ieee802.11ac": "ieee802.11ac",

    /**
     * value: "ieee802.11ad"
     * @const
     */
    "ieee802.11ad": "ieee802.11ad",

    /**
     * value: "ieee802.11ax"
     * @const
     */
    "ieee802.11ax": "ieee802.11ax",

    /**
     * value: "ieee802.11ay"
     * @const
     */
    "ieee802.11ay": "ieee802.11ay",

    /**
     * value: "ieee802.15.1"
     * @const
     */
    "ieee802.15.1": "ieee802.15.1",

    /**
     * value: "other-wireless"
     * @const
     */
    "other-wireless": "other-wireless",

    /**
     * value: "gsm"
     * @const
     */
    "gsm": "gsm",

    /**
     * value: "cdma"
     * @const
     */
    "cdma": "cdma",

    /**
     * value: "lte"
     * @const
     */
    "lte": "lte",

    /**
     * value: "sonet-oc3"
     * @const
     */
    "sonet-oc3": "sonet-oc3",

    /**
     * value: "sonet-oc12"
     * @const
     */
    "sonet-oc12": "sonet-oc12",

    /**
     * value: "sonet-oc48"
     * @const
     */
    "sonet-oc48": "sonet-oc48",

    /**
     * value: "sonet-oc192"
     * @const
     */
    "sonet-oc192": "sonet-oc192",

    /**
     * value: "sonet-oc768"
     * @const
     */
    "sonet-oc768": "sonet-oc768",

    /**
     * value: "sonet-oc1920"
     * @const
     */
    "sonet-oc1920": "sonet-oc1920",

    /**
     * value: "sonet-oc3840"
     * @const
     */
    "sonet-oc3840": "sonet-oc3840",

    /**
     * value: "1gfc-sfp"
     * @const
     */
    "1gfc-sfp": "1gfc-sfp",

    /**
     * value: "2gfc-sfp"
     * @const
     */
    "2gfc-sfp": "2gfc-sfp",

    /**
     * value: "4gfc-sfp"
     * @const
     */
    "4gfc-sfp": "4gfc-sfp",

    /**
     * value: "8gfc-sfpp"
     * @const
     */
    "8gfc-sfpp": "8gfc-sfpp",

    /**
     * value: "16gfc-sfpp"
     * @const
     */
    "16gfc-sfpp": "16gfc-sfpp",

    /**
     * value: "32gfc-sfp28"
     * @const
     */
    "32gfc-sfp28": "32gfc-sfp28",

    /**
     * value: "64gfc-qsfpp"
     * @const
     */
    "64gfc-qsfpp": "64gfc-qsfpp",

    /**
     * value: "128gfc-qsfp28"
     * @const
     */
    "128gfc-qsfp28": "128gfc-qsfp28",

    /**
     * value: "infiniband-sdr"
     * @const
     */
    "infiniband-sdr": "infiniband-sdr",

    /**
     * value: "infiniband-ddr"
     * @const
     */
    "infiniband-ddr": "infiniband-ddr",

    /**
     * value: "infiniband-qdr"
     * @const
     */
    "infiniband-qdr": "infiniband-qdr",

    /**
     * value: "infiniband-fdr10"
     * @const
     */
    "infiniband-fdr10": "infiniband-fdr10",

    /**
     * value: "infiniband-fdr"
     * @const
     */
    "infiniband-fdr": "infiniband-fdr",

    /**
     * value: "infiniband-edr"
     * @const
     */
    "infiniband-edr": "infiniband-edr",

    /**
     * value: "infiniband-hdr"
     * @const
     */
    "infiniband-hdr": "infiniband-hdr",

    /**
     * value: "infiniband-ndr"
     * @const
     */
    "infiniband-ndr": "infiniband-ndr",

    /**
     * value: "infiniband-xdr"
     * @const
     */
    "infiniband-xdr": "infiniband-xdr",

    /**
     * value: "t1"
     * @const
     */
    "t1": "t1",

    /**
     * value: "e1"
     * @const
     */
    "e1": "e1",

    /**
     * value: "t3"
     * @const
     */
    "t3": "t3",

    /**
     * value: "e3"
     * @const
     */
    "e3": "e3",

    /**
     * value: "xdsl"
     * @const
     */
    "xdsl": "xdsl",

    /**
     * value: "docsis"
     * @const
     */
    "docsis": "docsis",

    /**
     * value: "gpon"
     * @const
     */
    "gpon": "gpon",

    /**
     * value: "xg-pon"
     * @const
     */
    "xg-pon": "xg-pon",

    /**
     * value: "xgs-pon"
     * @const
     */
    "xgs-pon": "xgs-pon",

    /**
     * value: "ng-pon2"
     * @const
     */
    "ng-pon2": "ng-pon2",

    /**
     * value: "epon"
     * @const
     */
    "epon": "epon",

    /**
     * value: "10g-epon"
     * @const
     */
    "10g-epon": "10g-epon",

    /**
     * value: "cisco-stackwise"
     * @const
     */
    "cisco-stackwise": "cisco-stackwise",

    /**
     * value: "cisco-stackwise-plus"
     * @const
     */
    "cisco-stackwise-plus": "cisco-stackwise-plus",

    /**
     * value: "cisco-flexstack"
     * @const
     */
    "cisco-flexstack": "cisco-flexstack",

    /**
     * value: "cisco-flexstack-plus"
     * @const
     */
    "cisco-flexstack-plus": "cisco-flexstack-plus",

    /**
     * value: "cisco-stackwise-80"
     * @const
     */
    "cisco-stackwise-80": "cisco-stackwise-80",

    /**
     * value: "cisco-stackwise-160"
     * @const
     */
    "cisco-stackwise-160": "cisco-stackwise-160",

    /**
     * value: "cisco-stackwise-320"
     * @const
     */
    "cisco-stackwise-320": "cisco-stackwise-320",

    /**
     * value: "cisco-stackwise-480"
     * @const
     */
    "cisco-stackwise-480": "cisco-stackwise-480",

    /**
     * value: "cisco-stackwise-1t"
     * @const
     */
    "cisco-stackwise-1t": "cisco-stackwise-1t",

    /**
     * value: "juniper-vcp"
     * @const
     */
    "juniper-vcp": "juniper-vcp",

    /**
     * value: "extreme-summitstack"
     * @const
     */
    "extreme-summitstack": "extreme-summitstack",

    /**
     * value: "extreme-summitstack-128"
     * @const
     */
    "extreme-summitstack-128": "extreme-summitstack-128",

    /**
     * value: "extreme-summitstack-256"
     * @const
     */
    "extreme-summitstack-256": "extreme-summitstack-256",

    /**
     * value: "extreme-summitstack-512"
     * @const
     */
    "extreme-summitstack-512": "extreme-summitstack-512",

    /**
     * value: "other"
     * @const
     */
    "other": "other"
};



export default WritableInterface;

