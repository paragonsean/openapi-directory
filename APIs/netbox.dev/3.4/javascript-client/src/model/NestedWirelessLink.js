/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NestedWirelessLink model module.
 * @module model/NestedWirelessLink
 * @version 3.4
 */
class NestedWirelessLink {
    /**
     * Constructs a new <code>NestedWirelessLink</code>.
     * @alias module:model/NestedWirelessLink
     */
    constructor() { 
        
        NestedWirelessLink.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NestedWirelessLink</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NestedWirelessLink} obj Optional instance to populate.
     * @return {module:model/NestedWirelessLink} The populated <code>NestedWirelessLink</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NestedWirelessLink();

            if (data.hasOwnProperty('display')) {
                obj['display'] = ApiClient.convertToType(data['display'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('ssid')) {
                obj['ssid'] = ApiClient.convertToType(data['ssid'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NestedWirelessLink</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NestedWirelessLink</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['display'] && !(typeof data['display'] === 'string' || data['display'] instanceof String)) {
            throw new Error("Expected the field `display` to be a primitive type in the JSON string but got " + data['display']);
        }
        // ensure the json data is a string
        if (data['ssid'] && !(typeof data['ssid'] === 'string' || data['ssid'] instanceof String)) {
            throw new Error("Expected the field `ssid` to be a primitive type in the JSON string but got " + data['ssid']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * @member {String} display
 */
NestedWirelessLink.prototype['display'] = undefined;

/**
 * @member {Number} id
 */
NestedWirelessLink.prototype['id'] = undefined;

/**
 * @member {String} ssid
 */
NestedWirelessLink.prototype['ssid'] = undefined;

/**
 * @member {String} url
 */
NestedWirelessLink.prototype['url'] = undefined;






export default NestedWirelessLink;

