/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NestedTag from './NestedTag';

/**
 * The WritableWirelessLink model module.
 * @module model/WritableWirelessLink
 * @version 3.4
 */
class WritableWirelessLink {
    /**
     * Constructs a new <code>WritableWirelessLink</code>.
     * @alias module:model/WritableWirelessLink
     * @param interfaceA {Number} 
     * @param interfaceB {Number} 
     */
    constructor(interfaceA, interfaceB) { 
        
        WritableWirelessLink.initialize(this, interfaceA, interfaceB);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, interfaceA, interfaceB) { 
        obj['interface_a'] = interfaceA;
        obj['interface_b'] = interfaceB;
    }

    /**
     * Constructs a <code>WritableWirelessLink</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WritableWirelessLink} obj Optional instance to populate.
     * @return {module:model/WritableWirelessLink} The populated <code>WritableWirelessLink</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WritableWirelessLink();

            if (data.hasOwnProperty('auth_cipher')) {
                obj['auth_cipher'] = ApiClient.convertToType(data['auth_cipher'], 'String');
            }
            if (data.hasOwnProperty('auth_psk')) {
                obj['auth_psk'] = ApiClient.convertToType(data['auth_psk'], 'String');
            }
            if (data.hasOwnProperty('auth_type')) {
                obj['auth_type'] = ApiClient.convertToType(data['auth_type'], 'String');
            }
            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], 'String');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('custom_fields')) {
                obj['custom_fields'] = ApiClient.convertToType(data['custom_fields'], Object);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('display')) {
                obj['display'] = ApiClient.convertToType(data['display'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('interface_a')) {
                obj['interface_a'] = ApiClient.convertToType(data['interface_a'], 'Number');
            }
            if (data.hasOwnProperty('interface_b')) {
                obj['interface_b'] = ApiClient.convertToType(data['interface_b'], 'Number');
            }
            if (data.hasOwnProperty('last_updated')) {
                obj['last_updated'] = ApiClient.convertToType(data['last_updated'], 'Date');
            }
            if (data.hasOwnProperty('ssid')) {
                obj['ssid'] = ApiClient.convertToType(data['ssid'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], [NestedTag]);
            }
            if (data.hasOwnProperty('tenant')) {
                obj['tenant'] = ApiClient.convertToType(data['tenant'], 'Number');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WritableWirelessLink</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WritableWirelessLink</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WritableWirelessLink.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['auth_cipher'] && !(typeof data['auth_cipher'] === 'string' || data['auth_cipher'] instanceof String)) {
            throw new Error("Expected the field `auth_cipher` to be a primitive type in the JSON string but got " + data['auth_cipher']);
        }
        // ensure the json data is a string
        if (data['auth_psk'] && !(typeof data['auth_psk'] === 'string' || data['auth_psk'] instanceof String)) {
            throw new Error("Expected the field `auth_psk` to be a primitive type in the JSON string but got " + data['auth_psk']);
        }
        // ensure the json data is a string
        if (data['auth_type'] && !(typeof data['auth_type'] === 'string' || data['auth_type'] instanceof String)) {
            throw new Error("Expected the field `auth_type` to be a primitive type in the JSON string but got " + data['auth_type']);
        }
        // ensure the json data is a string
        if (data['comments'] && !(typeof data['comments'] === 'string' || data['comments'] instanceof String)) {
            throw new Error("Expected the field `comments` to be a primitive type in the JSON string but got " + data['comments']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['display'] && !(typeof data['display'] === 'string' || data['display'] instanceof String)) {
            throw new Error("Expected the field `display` to be a primitive type in the JSON string but got " + data['display']);
        }
        // ensure the json data is a string
        if (data['ssid'] && !(typeof data['ssid'] === 'string' || data['ssid'] instanceof String)) {
            throw new Error("Expected the field `ssid` to be a primitive type in the JSON string but got " + data['ssid']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        if (data['tags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['tags'])) {
                throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
            }
            // validate the optional field `tags` (array)
            for (const item of data['tags']) {
                NestedTag.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}

WritableWirelessLink.RequiredProperties = ["interface_a", "interface_b"];

/**
 * @member {module:model/WritableWirelessLink.AuthCipherEnum} auth_cipher
 */
WritableWirelessLink.prototype['auth_cipher'] = undefined;

/**
 * @member {String} auth_psk
 */
WritableWirelessLink.prototype['auth_psk'] = undefined;

/**
 * @member {module:model/WritableWirelessLink.AuthTypeEnum} auth_type
 */
WritableWirelessLink.prototype['auth_type'] = undefined;

/**
 * @member {String} comments
 */
WritableWirelessLink.prototype['comments'] = undefined;

/**
 * @member {Date} created
 */
WritableWirelessLink.prototype['created'] = undefined;

/**
 * @member {Object} custom_fields
 */
WritableWirelessLink.prototype['custom_fields'] = undefined;

/**
 * @member {String} description
 */
WritableWirelessLink.prototype['description'] = undefined;

/**
 * @member {String} display
 */
WritableWirelessLink.prototype['display'] = undefined;

/**
 * @member {Number} id
 */
WritableWirelessLink.prototype['id'] = undefined;

/**
 * @member {Number} interface_a
 */
WritableWirelessLink.prototype['interface_a'] = undefined;

/**
 * @member {Number} interface_b
 */
WritableWirelessLink.prototype['interface_b'] = undefined;

/**
 * @member {Date} last_updated
 */
WritableWirelessLink.prototype['last_updated'] = undefined;

/**
 * @member {String} ssid
 */
WritableWirelessLink.prototype['ssid'] = undefined;

/**
 * @member {module:model/WritableWirelessLink.StatusEnum} status
 */
WritableWirelessLink.prototype['status'] = undefined;

/**
 * @member {Array.<module:model/NestedTag>} tags
 */
WritableWirelessLink.prototype['tags'] = undefined;

/**
 * @member {Number} tenant
 */
WritableWirelessLink.prototype['tenant'] = undefined;

/**
 * @member {String} url
 */
WritableWirelessLink.prototype['url'] = undefined;





/**
 * Allowed values for the <code>auth_cipher</code> property.
 * @enum {String}
 * @readonly
 */
WritableWirelessLink['AuthCipherEnum'] = {

    /**
     * value: "auto"
     * @const
     */
    "auto": "auto",

    /**
     * value: "tkip"
     * @const
     */
    "tkip": "tkip",

    /**
     * value: "aes"
     * @const
     */
    "aes": "aes"
};


/**
 * Allowed values for the <code>auth_type</code> property.
 * @enum {String}
 * @readonly
 */
WritableWirelessLink['AuthTypeEnum'] = {

    /**
     * value: "open"
     * @const
     */
    "open": "open",

    /**
     * value: "wep"
     * @const
     */
    "wep": "wep",

    /**
     * value: "wpa-personal"
     * @const
     */
    "wpa-personal": "wpa-personal",

    /**
     * value: "wpa-enterprise"
     * @const
     */
    "wpa-enterprise": "wpa-enterprise"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
WritableWirelessLink['StatusEnum'] = {

    /**
     * value: "connected"
     * @const
     */
    "connected": "connected",

    /**
     * value: "planned"
     * @const
     */
    "planned": "planned",

    /**
     * value: "decommissioning"
     * @const
     */
    "decommissioning": "decommissioning"
};



export default WritableWirelessLink;

