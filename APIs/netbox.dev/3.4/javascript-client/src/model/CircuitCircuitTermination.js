/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NestedProviderNetwork from './NestedProviderNetwork';
import NestedSite from './NestedSite';

/**
 * The CircuitCircuitTermination model module.
 * @module model/CircuitCircuitTermination
 * @version 3.4
 */
class CircuitCircuitTermination {
    /**
     * Constructs a new <code>CircuitCircuitTermination</code>.
     * @alias module:model/CircuitCircuitTermination
     * @param providerNetwork {module:model/NestedProviderNetwork} 
     * @param site {module:model/NestedSite} 
     */
    constructor(providerNetwork, site) { 
        
        CircuitCircuitTermination.initialize(this, providerNetwork, site);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, providerNetwork, site) { 
        obj['provider_network'] = providerNetwork;
        obj['site'] = site;
    }

    /**
     * Constructs a <code>CircuitCircuitTermination</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CircuitCircuitTermination} obj Optional instance to populate.
     * @return {module:model/CircuitCircuitTermination} The populated <code>CircuitCircuitTermination</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CircuitCircuitTermination();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('display')) {
                obj['display'] = ApiClient.convertToType(data['display'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('port_speed')) {
                obj['port_speed'] = ApiClient.convertToType(data['port_speed'], 'Number');
            }
            if (data.hasOwnProperty('provider_network')) {
                obj['provider_network'] = NestedProviderNetwork.constructFromObject(data['provider_network']);
            }
            if (data.hasOwnProperty('site')) {
                obj['site'] = NestedSite.constructFromObject(data['site']);
            }
            if (data.hasOwnProperty('upstream_speed')) {
                obj['upstream_speed'] = ApiClient.convertToType(data['upstream_speed'], 'Number');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('xconnect_id')) {
                obj['xconnect_id'] = ApiClient.convertToType(data['xconnect_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CircuitCircuitTermination</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CircuitCircuitTermination</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CircuitCircuitTermination.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['display'] && !(typeof data['display'] === 'string' || data['display'] instanceof String)) {
            throw new Error("Expected the field `display` to be a primitive type in the JSON string but got " + data['display']);
        }
        // validate the optional field `provider_network`
        if (data['provider_network']) { // data not null
          NestedProviderNetwork.validateJSON(data['provider_network']);
        }
        // validate the optional field `site`
        if (data['site']) { // data not null
          NestedSite.validateJSON(data['site']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['xconnect_id'] && !(typeof data['xconnect_id'] === 'string' || data['xconnect_id'] instanceof String)) {
            throw new Error("Expected the field `xconnect_id` to be a primitive type in the JSON string but got " + data['xconnect_id']);
        }

        return true;
    }


}

CircuitCircuitTermination.RequiredProperties = ["provider_network", "site"];

/**
 * @member {String} description
 */
CircuitCircuitTermination.prototype['description'] = undefined;

/**
 * @member {String} display
 */
CircuitCircuitTermination.prototype['display'] = undefined;

/**
 * @member {Number} id
 */
CircuitCircuitTermination.prototype['id'] = undefined;

/**
 * @member {Number} port_speed
 */
CircuitCircuitTermination.prototype['port_speed'] = undefined;

/**
 * @member {module:model/NestedProviderNetwork} provider_network
 */
CircuitCircuitTermination.prototype['provider_network'] = undefined;

/**
 * @member {module:model/NestedSite} site
 */
CircuitCircuitTermination.prototype['site'] = undefined;

/**
 * Upstream speed, if different from port speed
 * @member {Number} upstream_speed
 */
CircuitCircuitTermination.prototype['upstream_speed'] = undefined;

/**
 * @member {String} url
 */
CircuitCircuitTermination.prototype['url'] = undefined;

/**
 * @member {String} xconnect_id
 */
CircuitCircuitTermination.prototype['xconnect_id'] = undefined;






export default CircuitCircuitTermination;

