# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.doc_byline import DocByline
from openapi_server.models.doc_headline import DocHeadline
from openapi_server.models.doc_keywords import DocKeywords
from openapi_server.models.doc_multimedia_inner import DocMultimediaInner
from openapi_server import util


class Doc(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, abstract: str=None, blog: List[object]=None, byline: DocByline=None, document_type: str=None, headline: DocHeadline=None, keywords: DocKeywords=None, lead_paragraph: str=None, multimedia: List[DocMultimediaInner]=None, news_desk: str=None, print_page: str=None, pub_date: str=None, section_name: str=None, slideshow_credits: str=None, snippet: str=None, source: str=None, subsection_name: str=None, type_of_material: str=None, web_url: str=None, word_count: str=None):
        """Doc - a model defined in OpenAPI

        :param id: The id of this Doc.
        :param abstract: The abstract of this Doc.
        :param blog: The blog of this Doc.
        :param byline: The byline of this Doc.
        :param document_type: The document_type of this Doc.
        :param headline: The headline of this Doc.
        :param keywords: The keywords of this Doc.
        :param lead_paragraph: The lead_paragraph of this Doc.
        :param multimedia: The multimedia of this Doc.
        :param news_desk: The news_desk of this Doc.
        :param print_page: The print_page of this Doc.
        :param pub_date: The pub_date of this Doc.
        :param section_name: The section_name of this Doc.
        :param slideshow_credits: The slideshow_credits of this Doc.
        :param snippet: The snippet of this Doc.
        :param source: The source of this Doc.
        :param subsection_name: The subsection_name of this Doc.
        :param type_of_material: The type_of_material of this Doc.
        :param web_url: The web_url of this Doc.
        :param word_count: The word_count of this Doc.
        """
        self.openapi_types = {
            'id': str,
            'abstract': str,
            'blog': List[object],
            'byline': DocByline,
            'document_type': str,
            'headline': DocHeadline,
            'keywords': DocKeywords,
            'lead_paragraph': str,
            'multimedia': List[DocMultimediaInner],
            'news_desk': str,
            'print_page': str,
            'pub_date': str,
            'section_name': str,
            'slideshow_credits': str,
            'snippet': str,
            'source': str,
            'subsection_name': str,
            'type_of_material': str,
            'web_url': str,
            'word_count': str
        }

        self.attribute_map = {
            'id': '_id',
            'abstract': 'abstract',
            'blog': 'blog',
            'byline': 'byline',
            'document_type': 'document_type',
            'headline': 'headline',
            'keywords': 'keywords',
            'lead_paragraph': 'lead_paragraph',
            'multimedia': 'multimedia',
            'news_desk': 'news_desk',
            'print_page': 'print_page',
            'pub_date': 'pub_date',
            'section_name': 'section_name',
            'slideshow_credits': 'slideshow_credits',
            'snippet': 'snippet',
            'source': 'source',
            'subsection_name': 'subsection_name',
            'type_of_material': 'type_of_material',
            'web_url': 'web_url',
            'word_count': 'word_count'
        }

        self._id = id
        self._abstract = abstract
        self._blog = blog
        self._byline = byline
        self._document_type = document_type
        self._headline = headline
        self._keywords = keywords
        self._lead_paragraph = lead_paragraph
        self._multimedia = multimedia
        self._news_desk = news_desk
        self._print_page = print_page
        self._pub_date = pub_date
        self._section_name = section_name
        self._slideshow_credits = slideshow_credits
        self._snippet = snippet
        self._source = source
        self._subsection_name = subsection_name
        self._type_of_material = type_of_material
        self._web_url = web_url
        self._word_count = word_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Doc':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Doc of this Doc.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Doc.


        :return: The id of this Doc.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Doc.


        :param id: The id of this Doc.
        :type id: str
        """

        self._id = id

    @property
    def abstract(self):
        """Gets the abstract of this Doc.


        :return: The abstract of this Doc.
        :rtype: str
        """
        return self._abstract

    @abstract.setter
    def abstract(self, abstract):
        """Sets the abstract of this Doc.


        :param abstract: The abstract of this Doc.
        :type abstract: str
        """

        self._abstract = abstract

    @property
    def blog(self):
        """Gets the blog of this Doc.


        :return: The blog of this Doc.
        :rtype: List[object]
        """
        return self._blog

    @blog.setter
    def blog(self, blog):
        """Sets the blog of this Doc.


        :param blog: The blog of this Doc.
        :type blog: List[object]
        """

        self._blog = blog

    @property
    def byline(self):
        """Gets the byline of this Doc.


        :return: The byline of this Doc.
        :rtype: DocByline
        """
        return self._byline

    @byline.setter
    def byline(self, byline):
        """Sets the byline of this Doc.


        :param byline: The byline of this Doc.
        :type byline: DocByline
        """

        self._byline = byline

    @property
    def document_type(self):
        """Gets the document_type of this Doc.


        :return: The document_type of this Doc.
        :rtype: str
        """
        return self._document_type

    @document_type.setter
    def document_type(self, document_type):
        """Sets the document_type of this Doc.


        :param document_type: The document_type of this Doc.
        :type document_type: str
        """

        self._document_type = document_type

    @property
    def headline(self):
        """Gets the headline of this Doc.


        :return: The headline of this Doc.
        :rtype: DocHeadline
        """
        return self._headline

    @headline.setter
    def headline(self, headline):
        """Sets the headline of this Doc.


        :param headline: The headline of this Doc.
        :type headline: DocHeadline
        """

        self._headline = headline

    @property
    def keywords(self):
        """Gets the keywords of this Doc.


        :return: The keywords of this Doc.
        :rtype: DocKeywords
        """
        return self._keywords

    @keywords.setter
    def keywords(self, keywords):
        """Sets the keywords of this Doc.


        :param keywords: The keywords of this Doc.
        :type keywords: DocKeywords
        """

        self._keywords = keywords

    @property
    def lead_paragraph(self):
        """Gets the lead_paragraph of this Doc.


        :return: The lead_paragraph of this Doc.
        :rtype: str
        """
        return self._lead_paragraph

    @lead_paragraph.setter
    def lead_paragraph(self, lead_paragraph):
        """Sets the lead_paragraph of this Doc.


        :param lead_paragraph: The lead_paragraph of this Doc.
        :type lead_paragraph: str
        """

        self._lead_paragraph = lead_paragraph

    @property
    def multimedia(self):
        """Gets the multimedia of this Doc.


        :return: The multimedia of this Doc.
        :rtype: List[DocMultimediaInner]
        """
        return self._multimedia

    @multimedia.setter
    def multimedia(self, multimedia):
        """Sets the multimedia of this Doc.


        :param multimedia: The multimedia of this Doc.
        :type multimedia: List[DocMultimediaInner]
        """

        self._multimedia = multimedia

    @property
    def news_desk(self):
        """Gets the news_desk of this Doc.


        :return: The news_desk of this Doc.
        :rtype: str
        """
        return self._news_desk

    @news_desk.setter
    def news_desk(self, news_desk):
        """Sets the news_desk of this Doc.


        :param news_desk: The news_desk of this Doc.
        :type news_desk: str
        """

        self._news_desk = news_desk

    @property
    def print_page(self):
        """Gets the print_page of this Doc.


        :return: The print_page of this Doc.
        :rtype: str
        """
        return self._print_page

    @print_page.setter
    def print_page(self, print_page):
        """Sets the print_page of this Doc.


        :param print_page: The print_page of this Doc.
        :type print_page: str
        """

        self._print_page = print_page

    @property
    def pub_date(self):
        """Gets the pub_date of this Doc.


        :return: The pub_date of this Doc.
        :rtype: str
        """
        return self._pub_date

    @pub_date.setter
    def pub_date(self, pub_date):
        """Sets the pub_date of this Doc.


        :param pub_date: The pub_date of this Doc.
        :type pub_date: str
        """

        self._pub_date = pub_date

    @property
    def section_name(self):
        """Gets the section_name of this Doc.


        :return: The section_name of this Doc.
        :rtype: str
        """
        return self._section_name

    @section_name.setter
    def section_name(self, section_name):
        """Sets the section_name of this Doc.


        :param section_name: The section_name of this Doc.
        :type section_name: str
        """

        self._section_name = section_name

    @property
    def slideshow_credits(self):
        """Gets the slideshow_credits of this Doc.


        :return: The slideshow_credits of this Doc.
        :rtype: str
        """
        return self._slideshow_credits

    @slideshow_credits.setter
    def slideshow_credits(self, slideshow_credits):
        """Sets the slideshow_credits of this Doc.


        :param slideshow_credits: The slideshow_credits of this Doc.
        :type slideshow_credits: str
        """

        self._slideshow_credits = slideshow_credits

    @property
    def snippet(self):
        """Gets the snippet of this Doc.


        :return: The snippet of this Doc.
        :rtype: str
        """
        return self._snippet

    @snippet.setter
    def snippet(self, snippet):
        """Sets the snippet of this Doc.


        :param snippet: The snippet of this Doc.
        :type snippet: str
        """

        self._snippet = snippet

    @property
    def source(self):
        """Gets the source of this Doc.


        :return: The source of this Doc.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this Doc.


        :param source: The source of this Doc.
        :type source: str
        """

        self._source = source

    @property
    def subsection_name(self):
        """Gets the subsection_name of this Doc.


        :return: The subsection_name of this Doc.
        :rtype: str
        """
        return self._subsection_name

    @subsection_name.setter
    def subsection_name(self, subsection_name):
        """Sets the subsection_name of this Doc.


        :param subsection_name: The subsection_name of this Doc.
        :type subsection_name: str
        """

        self._subsection_name = subsection_name

    @property
    def type_of_material(self):
        """Gets the type_of_material of this Doc.


        :return: The type_of_material of this Doc.
        :rtype: str
        """
        return self._type_of_material

    @type_of_material.setter
    def type_of_material(self, type_of_material):
        """Sets the type_of_material of this Doc.


        :param type_of_material: The type_of_material of this Doc.
        :type type_of_material: str
        """

        self._type_of_material = type_of_material

    @property
    def web_url(self):
        """Gets the web_url of this Doc.


        :return: The web_url of this Doc.
        :rtype: str
        """
        return self._web_url

    @web_url.setter
    def web_url(self, web_url):
        """Sets the web_url of this Doc.


        :param web_url: The web_url of this Doc.
        :type web_url: str
        """

        self._web_url = web_url

    @property
    def word_count(self):
        """Gets the word_count of this Doc.


        :return: The word_count of this Doc.
        :rtype: str
        """
        return self._word_count

    @word_count.setter
    def word_count(self, word_count):
        """Sets the word_count of this Doc.


        :param word_count: The word_count of this Doc.
        :type word_count: str
        """

        self._word_count = word_count
