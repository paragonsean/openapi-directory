/**
 * Archive API
 * The Archive API provides lists of NYT articles by month going back to 1851.  You can use it to build your own local database of NYT article metadata.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDoc_headline.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDoc_headline::OAIDoc_headline(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDoc_headline::OAIDoc_headline() {
    this->initializeModel();
}

OAIDoc_headline::~OAIDoc_headline() {}

void OAIDoc_headline::initializeModel() {

    m_kicker_isSet = false;
    m_kicker_isValid = false;

    m_main_isSet = false;
    m_main_isValid = false;
}

void OAIDoc_headline::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDoc_headline::fromJsonObject(QJsonObject json) {

    m_kicker_isValid = ::OpenAPI::fromJsonValue(m_kicker, json[QString("kicker")]);
    m_kicker_isSet = !json[QString("kicker")].isNull() && m_kicker_isValid;

    m_main_isValid = ::OpenAPI::fromJsonValue(m_main, json[QString("main")]);
    m_main_isSet = !json[QString("main")].isNull() && m_main_isValid;
}

QString OAIDoc_headline::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDoc_headline::asJsonObject() const {
    QJsonObject obj;
    if (m_kicker_isSet) {
        obj.insert(QString("kicker"), ::OpenAPI::toJsonValue(m_kicker));
    }
    if (m_main_isSet) {
        obj.insert(QString("main"), ::OpenAPI::toJsonValue(m_main));
    }
    return obj;
}

QString OAIDoc_headline::getKicker() const {
    return m_kicker;
}
void OAIDoc_headline::setKicker(const QString &kicker) {
    m_kicker = kicker;
    m_kicker_isSet = true;
}

bool OAIDoc_headline::is_kicker_Set() const{
    return m_kicker_isSet;
}

bool OAIDoc_headline::is_kicker_Valid() const{
    return m_kicker_isValid;
}

QString OAIDoc_headline::getMain() const {
    return m_main;
}
void OAIDoc_headline::setMain(const QString &main) {
    m_main = main;
    m_main_isSet = true;
}

bool OAIDoc_headline::is_main_Set() const{
    return m_main_isSet;
}

bool OAIDoc_headline::is_main_Valid() const{
    return m_main_isValid;
}

bool OAIDoc_headline::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_kicker_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_main_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDoc_headline::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
