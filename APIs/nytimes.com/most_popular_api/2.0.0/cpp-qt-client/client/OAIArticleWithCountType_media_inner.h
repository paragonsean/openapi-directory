/**
 * Most Popular API
 * Get lists of NYT Articles based on shares, emails, and views.
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIArticleWithCountType_media_inner.h
 *
 * 
 */

#ifndef OAIArticleWithCountType_media_inner_H
#define OAIArticleWithCountType_media_inner_H

#include <QJsonObject>

#include "OAIArticleWithCountType_media_inner_media_metadata.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIArticleWithCountType_media_inner_media_metadata;

class OAIArticleWithCountType_media_inner : public OAIObject {
public:
    OAIArticleWithCountType_media_inner();
    OAIArticleWithCountType_media_inner(QString json);
    ~OAIArticleWithCountType_media_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCaption() const;
    void setCaption(const QString &caption);
    bool is_caption_Set() const;
    bool is_caption_Valid() const;

    QString getCopyright() const;
    void setCopyright(const QString &copyright);
    bool is_copyright_Set() const;
    bool is_copyright_Valid() const;

    OAIArticleWithCountType_media_inner_media_metadata getMediaMetadata() const;
    void setMediaMetadata(const OAIArticleWithCountType_media_inner_media_metadata &media_metadata);
    bool is_media_metadata_Set() const;
    bool is_media_metadata_Valid() const;

    QString getSubtype() const;
    void setSubtype(const QString &subtype);
    bool is_subtype_Set() const;
    bool is_subtype_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_caption;
    bool m_caption_isSet;
    bool m_caption_isValid;

    QString m_copyright;
    bool m_copyright_isSet;
    bool m_copyright_isValid;

    OAIArticleWithCountType_media_inner_media_metadata m_media_metadata;
    bool m_media_metadata_isSet;
    bool m_media_metadata_isValid;

    QString m_subtype;
    bool m_subtype_isSet;
    bool m_subtype_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIArticleWithCountType_media_inner)

#endif // OAIArticleWithCountType_media_inner_H
