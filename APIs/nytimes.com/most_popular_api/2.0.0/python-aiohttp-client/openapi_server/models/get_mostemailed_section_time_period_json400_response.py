# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GETMostemailedSectionTimePeriodJson400Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, copyright: str=None, errors: List[str]=None, results: List[object]=None, status: str=None):
        """GETMostemailedSectionTimePeriodJson400Response - a model defined in OpenAPI

        :param copyright: The copyright of this GETMostemailedSectionTimePeriodJson400Response.
        :param errors: The errors of this GETMostemailedSectionTimePeriodJson400Response.
        :param results: The results of this GETMostemailedSectionTimePeriodJson400Response.
        :param status: The status of this GETMostemailedSectionTimePeriodJson400Response.
        """
        self.openapi_types = {
            'copyright': str,
            'errors': List[str],
            'results': List[object],
            'status': str
        }

        self.attribute_map = {
            'copyright': 'copyright',
            'errors': 'errors',
            'results': 'results',
            'status': 'status'
        }

        self._copyright = copyright
        self._errors = errors
        self._results = results
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GETMostemailedSectionTimePeriodJson400Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GET_mostemailed_section_time_period_json_400_response of this GETMostemailedSectionTimePeriodJson400Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def copyright(self):
        """Gets the copyright of this GETMostemailedSectionTimePeriodJson400Response.


        :return: The copyright of this GETMostemailedSectionTimePeriodJson400Response.
        :rtype: str
        """
        return self._copyright

    @copyright.setter
    def copyright(self, copyright):
        """Sets the copyright of this GETMostemailedSectionTimePeriodJson400Response.


        :param copyright: The copyright of this GETMostemailedSectionTimePeriodJson400Response.
        :type copyright: str
        """

        self._copyright = copyright

    @property
    def errors(self):
        """Gets the errors of this GETMostemailedSectionTimePeriodJson400Response.


        :return: The errors of this GETMostemailedSectionTimePeriodJson400Response.
        :rtype: List[str]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this GETMostemailedSectionTimePeriodJson400Response.


        :param errors: The errors of this GETMostemailedSectionTimePeriodJson400Response.
        :type errors: List[str]
        """

        self._errors = errors

    @property
    def results(self):
        """Gets the results of this GETMostemailedSectionTimePeriodJson400Response.


        :return: The results of this GETMostemailedSectionTimePeriodJson400Response.
        :rtype: List[object]
        """
        return self._results

    @results.setter
    def results(self, results):
        """Sets the results of this GETMostemailedSectionTimePeriodJson400Response.


        :param results: The results of this GETMostemailedSectionTimePeriodJson400Response.
        :type results: List[object]
        """

        self._results = results

    @property
    def status(self):
        """Gets the status of this GETMostemailedSectionTimePeriodJson400Response.


        :return: The status of this GETMostemailedSectionTimePeriodJson400Response.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GETMostemailedSectionTimePeriodJson400Response.


        :param status: The status of this GETMostemailedSectionTimePeriodJson400Response.
        :type status: str
        """

        self._status = status
