# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.article_with_count_type_media_inner_media_metadata import ArticleWithCountTypeMediaInnerMediaMetadata
from openapi_server import util


class ArticleWithCountTypeMediaInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, caption: str=None, copyright: str=None, media_metadata: ArticleWithCountTypeMediaInnerMediaMetadata=None, subtype: str=None, type: str=None):
        """ArticleWithCountTypeMediaInner - a model defined in OpenAPI

        :param caption: The caption of this ArticleWithCountTypeMediaInner.
        :param copyright: The copyright of this ArticleWithCountTypeMediaInner.
        :param media_metadata: The media_metadata of this ArticleWithCountTypeMediaInner.
        :param subtype: The subtype of this ArticleWithCountTypeMediaInner.
        :param type: The type of this ArticleWithCountTypeMediaInner.
        """
        self.openapi_types = {
            'caption': str,
            'copyright': str,
            'media_metadata': ArticleWithCountTypeMediaInnerMediaMetadata,
            'subtype': str,
            'type': str
        }

        self.attribute_map = {
            'caption': 'caption',
            'copyright': 'copyright',
            'media_metadata': 'media-metadata',
            'subtype': 'subtype',
            'type': 'type'
        }

        self._caption = caption
        self._copyright = copyright
        self._media_metadata = media_metadata
        self._subtype = subtype
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ArticleWithCountTypeMediaInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ArticleWithCountType_media_inner of this ArticleWithCountTypeMediaInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def caption(self):
        """Gets the caption of this ArticleWithCountTypeMediaInner.


        :return: The caption of this ArticleWithCountTypeMediaInner.
        :rtype: str
        """
        return self._caption

    @caption.setter
    def caption(self, caption):
        """Sets the caption of this ArticleWithCountTypeMediaInner.


        :param caption: The caption of this ArticleWithCountTypeMediaInner.
        :type caption: str
        """

        self._caption = caption

    @property
    def copyright(self):
        """Gets the copyright of this ArticleWithCountTypeMediaInner.


        :return: The copyright of this ArticleWithCountTypeMediaInner.
        :rtype: str
        """
        return self._copyright

    @copyright.setter
    def copyright(self, copyright):
        """Sets the copyright of this ArticleWithCountTypeMediaInner.


        :param copyright: The copyright of this ArticleWithCountTypeMediaInner.
        :type copyright: str
        """

        self._copyright = copyright

    @property
    def media_metadata(self):
        """Gets the media_metadata of this ArticleWithCountTypeMediaInner.


        :return: The media_metadata of this ArticleWithCountTypeMediaInner.
        :rtype: ArticleWithCountTypeMediaInnerMediaMetadata
        """
        return self._media_metadata

    @media_metadata.setter
    def media_metadata(self, media_metadata):
        """Sets the media_metadata of this ArticleWithCountTypeMediaInner.


        :param media_metadata: The media_metadata of this ArticleWithCountTypeMediaInner.
        :type media_metadata: ArticleWithCountTypeMediaInnerMediaMetadata
        """

        self._media_metadata = media_metadata

    @property
    def subtype(self):
        """Gets the subtype of this ArticleWithCountTypeMediaInner.


        :return: The subtype of this ArticleWithCountTypeMediaInner.
        :rtype: str
        """
        return self._subtype

    @subtype.setter
    def subtype(self, subtype):
        """Sets the subtype of this ArticleWithCountTypeMediaInner.


        :param subtype: The subtype of this ArticleWithCountTypeMediaInner.
        :type subtype: str
        """

        self._subtype = subtype

    @property
    def type(self):
        """Gets the type of this ArticleWithCountTypeMediaInner.


        :return: The type of this ArticleWithCountTypeMediaInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ArticleWithCountTypeMediaInner.


        :param type: The type of this ArticleWithCountTypeMediaInner.
        :type type: str
        """

        self._type = type
