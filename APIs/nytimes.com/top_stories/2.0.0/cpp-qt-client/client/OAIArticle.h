/**
 * Top Stories
 * The Top Stories API provides lists of articles and associated images by section.
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIArticle.h
 *
 * 
 */

#ifndef OAIArticle_H
#define OAIArticle_H

#include <QJsonObject>

#include "OAIArticle_multimedia_inner.h"
#include "OAIArticle_related_urls_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIArticle_multimedia_inner;
class OAIArticle_related_urls_inner;

class OAIArticle : public OAIObject {
public:
    OAIArticle();
    OAIArticle(QString json);
    ~OAIArticle() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAbstract() const;
    void setAbstract(const QString &abstract);
    bool is_abstract_Set() const;
    bool is_abstract_Valid() const;

    QString getByline() const;
    void setByline(const QString &byline);
    bool is_byline_Set() const;
    bool is_byline_Valid() const;

    QString getCreatedDate() const;
    void setCreatedDate(const QString &created_date);
    bool is_created_date_Set() const;
    bool is_created_date_Valid() const;

    QList<QString> getDesFacet() const;
    void setDesFacet(const QList<QString> &des_facet);
    bool is_des_facet_Set() const;
    bool is_des_facet_Valid() const;

    QList<QString> getGeoFacet() const;
    void setGeoFacet(const QList<QString> &geo_facet);
    bool is_geo_facet_Set() const;
    bool is_geo_facet_Valid() const;

    QString getItemType() const;
    void setItemType(const QString &item_type);
    bool is_item_type_Set() const;
    bool is_item_type_Valid() const;

    QString getKicker() const;
    void setKicker(const QString &kicker);
    bool is_kicker_Set() const;
    bool is_kicker_Valid() const;

    QString getMaterialTypeFacet() const;
    void setMaterialTypeFacet(const QString &material_type_facet);
    bool is_material_type_facet_Set() const;
    bool is_material_type_facet_Valid() const;

    QList<OAIArticle_multimedia_inner> getMultimedia() const;
    void setMultimedia(const QList<OAIArticle_multimedia_inner> &multimedia);
    bool is_multimedia_Set() const;
    bool is_multimedia_Valid() const;

    QList<QString> getOrgFacet() const;
    void setOrgFacet(const QList<QString> &org_facet);
    bool is_org_facet_Set() const;
    bool is_org_facet_Valid() const;

    QList<QString> getPerFacet() const;
    void setPerFacet(const QList<QString> &per_facet);
    bool is_per_facet_Set() const;
    bool is_per_facet_Valid() const;

    QString getPublishedDate() const;
    void setPublishedDate(const QString &published_date);
    bool is_published_date_Set() const;
    bool is_published_date_Valid() const;

    QList<OAIArticle_related_urls_inner> getRelatedUrls() const;
    void setRelatedUrls(const QList<OAIArticle_related_urls_inner> &related_urls);
    bool is_related_urls_Set() const;
    bool is_related_urls_Valid() const;

    QString getSection() const;
    void setSection(const QString &section);
    bool is_section_Set() const;
    bool is_section_Valid() const;

    QString getShortUrl() const;
    void setShortUrl(const QString &short_url);
    bool is_short_url_Set() const;
    bool is_short_url_Valid() const;

    QString getSubsection() const;
    void setSubsection(const QString &subsection);
    bool is_subsection_Set() const;
    bool is_subsection_Valid() const;

    QString getThumbnailStandard() const;
    void setThumbnailStandard(const QString &thumbnail_standard);
    bool is_thumbnail_standard_Set() const;
    bool is_thumbnail_standard_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getUpdatedDate() const;
    void setUpdatedDate(const QString &updated_date);
    bool is_updated_date_Set() const;
    bool is_updated_date_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_abstract;
    bool m_abstract_isSet;
    bool m_abstract_isValid;

    QString m_byline;
    bool m_byline_isSet;
    bool m_byline_isValid;

    QString m_created_date;
    bool m_created_date_isSet;
    bool m_created_date_isValid;

    QList<QString> m_des_facet;
    bool m_des_facet_isSet;
    bool m_des_facet_isValid;

    QList<QString> m_geo_facet;
    bool m_geo_facet_isSet;
    bool m_geo_facet_isValid;

    QString m_item_type;
    bool m_item_type_isSet;
    bool m_item_type_isValid;

    QString m_kicker;
    bool m_kicker_isSet;
    bool m_kicker_isValid;

    QString m_material_type_facet;
    bool m_material_type_facet_isSet;
    bool m_material_type_facet_isValid;

    QList<OAIArticle_multimedia_inner> m_multimedia;
    bool m_multimedia_isSet;
    bool m_multimedia_isValid;

    QList<QString> m_org_facet;
    bool m_org_facet_isSet;
    bool m_org_facet_isValid;

    QList<QString> m_per_facet;
    bool m_per_facet_isSet;
    bool m_per_facet_isValid;

    QString m_published_date;
    bool m_published_date_isSet;
    bool m_published_date_isValid;

    QList<OAIArticle_related_urls_inner> m_related_urls;
    bool m_related_urls_isSet;
    bool m_related_urls_isValid;

    QString m_section;
    bool m_section_isSet;
    bool m_section_isValid;

    QString m_short_url;
    bool m_short_url_isSet;
    bool m_short_url_isValid;

    QString m_subsection;
    bool m_subsection_isSet;
    bool m_subsection_isValid;

    QString m_thumbnail_standard;
    bool m_thumbnail_standard_isSet;
    bool m_thumbnail_standard_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_updated_date;
    bool m_updated_date_isSet;
    bool m_updated_date_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIArticle)

#endif // OAIArticle_H
