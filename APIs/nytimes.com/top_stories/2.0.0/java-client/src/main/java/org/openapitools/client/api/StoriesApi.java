/*
 * Top Stories
 * The Top Stories API provides lists of articles and associated images by section.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.SectionFormatGet200Response;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class StoriesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public StoriesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public StoriesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for sectionFormatGet
     * @param section The section the story appears in. (required)
     * @param format if this is JSONP or JSON (required)
     * @param paramCallback The name of the function the API call results will be passed to. Required when using JSONP. This parameter has only one valid value per section. The format is {section_name}TopStoriesCallback.  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An array of articles </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sectionFormatGetCall(String section, String format, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/{section}.{format}"
            .replace("{" + "section" + "}", localVarApiClient.escapeString(section.toString()))
            .replace("{" + "format" + "}", localVarApiClient.escapeString(format.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apikey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call sectionFormatGetValidateBeforeCall(String section, String format, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'section' is set
        if (section == null) {
            throw new ApiException("Missing the required parameter 'section' when calling sectionFormatGet(Async)");
        }

        // verify the required parameter 'format' is set
        if (format == null) {
            throw new ApiException("Missing the required parameter 'format' when calling sectionFormatGet(Async)");
        }

        return sectionFormatGetCall(section, format, paramCallback, _callback);

    }

    /**
     * Top Stories
     * The Top Stories API returns a list of articles and associated images currently on the specified section.  Support JSON and JSONP. 
     * @param section The section the story appears in. (required)
     * @param format if this is JSONP or JSON (required)
     * @param paramCallback The name of the function the API call results will be passed to. Required when using JSONP. This parameter has only one valid value per section. The format is {section_name}TopStoriesCallback.  (optional)
     * @return SectionFormatGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An array of articles </td><td>  -  </td></tr>
     </table>
     */
    public SectionFormatGet200Response sectionFormatGet(String section, String format, String paramCallback) throws ApiException {
        ApiResponse<SectionFormatGet200Response> localVarResp = sectionFormatGetWithHttpInfo(section, format, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Top Stories
     * The Top Stories API returns a list of articles and associated images currently on the specified section.  Support JSON and JSONP. 
     * @param section The section the story appears in. (required)
     * @param format if this is JSONP or JSON (required)
     * @param paramCallback The name of the function the API call results will be passed to. Required when using JSONP. This parameter has only one valid value per section. The format is {section_name}TopStoriesCallback.  (optional)
     * @return ApiResponse&lt;SectionFormatGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An array of articles </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<SectionFormatGet200Response> sectionFormatGetWithHttpInfo(String section, String format, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = sectionFormatGetValidateBeforeCall(section, format, paramCallback, null);
        Type localVarReturnType = new TypeToken<SectionFormatGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Top Stories (asynchronously)
     * The Top Stories API returns a list of articles and associated images currently on the specified section.  Support JSON and JSONP. 
     * @param section The section the story appears in. (required)
     * @param format if this is JSONP or JSON (required)
     * @param paramCallback The name of the function the API call results will be passed to. Required when using JSONP. This parameter has only one valid value per section. The format is {section_name}TopStoriesCallback.  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An array of articles </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sectionFormatGetAsync(String section, String format, String paramCallback, final ApiCallback<SectionFormatGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = sectionFormatGetValidateBeforeCall(section, format, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<SectionFormatGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
