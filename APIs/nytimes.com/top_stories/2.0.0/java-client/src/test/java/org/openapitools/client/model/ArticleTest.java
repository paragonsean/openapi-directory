/*
 * Top Stories
 * The Top Stories API provides lists of articles and associated images by section.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ArticleMultimediaInner;
import org.openapitools.client.model.ArticleRelatedUrlsInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Article
 */
public class ArticleTest {
    private final Article model = new Article();

    /**
     * Model tests for Article
     */
    @Test
    public void testArticle() {
        // TODO: test Article
    }

    /**
     * Test the property '_abstract'
     */
    @Test
    public void _abstractTest() {
        // TODO: test _abstract
    }

    /**
     * Test the property 'byline'
     */
    @Test
    public void bylineTest() {
        // TODO: test byline
    }

    /**
     * Test the property 'createdDate'
     */
    @Test
    public void createdDateTest() {
        // TODO: test createdDate
    }

    /**
     * Test the property 'desFacet'
     */
    @Test
    public void desFacetTest() {
        // TODO: test desFacet
    }

    /**
     * Test the property 'geoFacet'
     */
    @Test
    public void geoFacetTest() {
        // TODO: test geoFacet
    }

    /**
     * Test the property 'itemType'
     */
    @Test
    public void itemTypeTest() {
        // TODO: test itemType
    }

    /**
     * Test the property 'kicker'
     */
    @Test
    public void kickerTest() {
        // TODO: test kicker
    }

    /**
     * Test the property 'materialTypeFacet'
     */
    @Test
    public void materialTypeFacetTest() {
        // TODO: test materialTypeFacet
    }

    /**
     * Test the property 'multimedia'
     */
    @Test
    public void multimediaTest() {
        // TODO: test multimedia
    }

    /**
     * Test the property 'orgFacet'
     */
    @Test
    public void orgFacetTest() {
        // TODO: test orgFacet
    }

    /**
     * Test the property 'perFacet'
     */
    @Test
    public void perFacetTest() {
        // TODO: test perFacet
    }

    /**
     * Test the property 'publishedDate'
     */
    @Test
    public void publishedDateTest() {
        // TODO: test publishedDate
    }

    /**
     * Test the property 'relatedUrls'
     */
    @Test
    public void relatedUrlsTest() {
        // TODO: test relatedUrls
    }

    /**
     * Test the property 'section'
     */
    @Test
    public void sectionTest() {
        // TODO: test section
    }

    /**
     * Test the property 'shortUrl'
     */
    @Test
    public void shortUrlTest() {
        // TODO: test shortUrl
    }

    /**
     * Test the property 'subsection'
     */
    @Test
    public void subsectionTest() {
        // TODO: test subsection
    }

    /**
     * Test the property 'thumbnailStandard'
     */
    @Test
    public void thumbnailStandardTest() {
        // TODO: test thumbnailStandard
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'updatedDate'
     */
    @Test
    public void updatedDateTest() {
        // TODO: test updatedDate
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

}
