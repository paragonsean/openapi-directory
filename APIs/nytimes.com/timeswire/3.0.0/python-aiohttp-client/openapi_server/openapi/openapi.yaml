openapi: 3.0.0
info:
  description: "With the Times Newswire API, you can get links and metadata for Times\
    \ articles and blog posts as soon as they are published on NYTimes.com. The Times\
    \ Newswire API provides an up-to-the-minute stream of published items."
  termsOfService: http://developer.nytimes.com/tou
  title: Times Newswire API
  version: 3.0.0
  x-apiClientRegistration:
    url: http://developer.nytimes.com/signup
  x-apisguru-categories:
  - media
  - open_data
  x-logo:
    url: https://static01.nyt.com/images/icons/t_logo_291_black.png
  x-origin:
  - format: openapi
    url: https://raw.githubusercontent.com/nytimes/public_api_specs/master/timeswire/timeswire_v3.json
    version: "3.0"
  x-providerName: nytimes.com
  x-serviceName: timeswire
externalDocs:
  url: http://developer.nytimes.com/
servers:
- url: http://api.nytimes.com/svc/news/v3
- url: https://api.nytimes.com/svc/news/v3
security:
- apikey: []
paths:
  /content.json:
    get:
      operationId: content_json_get
      parameters:
      - description: "The complete URL of a specific news item, URL-encoded or backslash-escaped"
        explode: true
        in: query
        name: url
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_content_json_get_200_response'
          description: An array of Articles
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /content/{source}/{section}.json:
    get:
      operationId: content_source_section_json_get
      parameters:
      - description: |
          Limits the set of items by originating source

          all = items from both The New York Times and The International New York Times
          nyt = New York Times items only
          iht = International New York Times items only
        explode: false
        in: path
        name: source
        required: true
        schema:
          enum:
          - all
          - nyt
          - iht
          type: string
        style: simple
        x-consoleDefault: all
      - description: |
          Limits the set of items by one or more sections
          all | One or more section names, separated by semicolons

           To get all sections, specify all. To get a particular section or sections, use the section names returned by this request:
           http://api.nytimes.com/svc/news/v3/content/section-list.json
        explode: false
        in: path
        name: section
        required: true
        schema:
          type: string
        style: simple
        x-consoleDefault: all
      - description: "Limits the number of results, between 1 and 20"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: Sets the starting point of the result set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_content_json_get_200_response'
          description: An array of Articles
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /content/{source}/{section}/{time-period}.json:
    get:
      operationId: content_source_section_time_period_json_get
      parameters:
      - description: |
          Limits the set of items by originating source

          all = items from both The New York Times and The International New York Times
          nyt = New York Times items only
          iht = International New York Times items only
        explode: false
        in: path
        name: source
        required: true
        schema:
          enum:
          - all
          - nyt
          - iht
          type: string
        style: simple
      - description: |
          Limits the set of items by one or more sections
          all | One or more section names, separated by semicolons

           To get all sections, specify all. To get a particular section or sections, use the section names returned by this request:
           http://api.nytimes.com/svc/news/v3/content/section-list.json
        explode: false
        in: path
        name: section
        required: true
        schema:
          type: string
        style: simple
      - description: "Limits the set of items by time published, integer in number\
          \ of hours"
        explode: false
        in: path
        name: time-period
        required: true
        schema:
          type: integer
        style: simple
      - description: "Limits the number of results, between 1 and 20"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: Sets the starting point of the result set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_content_json_get_200_response'
          description: An array of Articles
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  schemas:
    Article:
      example:
        per_facet:
        - per_facet
        - per_facet
        subsection: subsection
        item_type: item_type
        org_facet: org_facet
        section: section
        abstract: abstract
        related_urls:
        - suggested_link_text: suggested_link_text
          url: url
        - suggested_link_text: suggested_link_text
          url: url
        source: source
        des_facet:
        - des_facet
        - des_facet
        title: title
        url: url
        short_url: short_url
        material_type_facet: material_type_facet
        multimedia:
        - copyright: copyright
          subtype: subtype
          format: format
          width: 1
          caption: caption
          type: type
          url: url
          height: 6
        - copyright: copyright
          subtype: subtype
          format: format
          width: 1
          caption: caption
          type: type
          url: url
          height: 6
        thumbnail_standard: thumbnail_standard
        geo_facet:
        - geo_facet
        - geo_facet
        created_date: created_date
        updated_date: updated_date
        byline: byline
        headline: headline
        published_date: published_date
        blog_name: blog_name
        kicker: kicker
      properties:
        abstract:
          title: abstract
          type: string
        blog_name:
          title: blog_name
          type: string
        byline:
          title: byline
          type: string
        created_date:
          title: created_date
          type: string
        des_facet:
          items:
            type: string
          title: des_facet
          type: array
        geo_facet:
          items:
            type: string
          title: geo_facet
          type: array
        headline:
          title: headline
          type: string
        item_type:
          title: item_type
          type: string
        kicker:
          title: kicker
          type: string
        material_type_facet:
          title: material_type_facet
          type: string
        multimedia:
          items:
            $ref: '#/components/schemas/Article_multimedia_inner'
          title: multimedia
          type: array
        org_facet:
          title: org_facet
          type: string
        per_facet:
          items:
            type: string
          title: per_facet
          type: array
        published_date:
          title: published_date
          type: string
        related_urls:
          items:
            $ref: '#/components/schemas/Article_related_urls_inner'
          title: related_urls
          type: array
        section:
          title: section
          type: string
        short_url:
          title: short_url
          type: string
        source:
          title: source
          type: string
        subsection:
          title: subsection
          type: string
        thumbnail_standard:
          title: thumbnail_standard
          type: string
        title:
          title: title
          type: string
        updated_date:
          title: updated_date
          type: string
        url:
          title: url
          type: string
      title: Article
      type: object
    _content_json_get_200_response:
      example:
        copyright: copyright
        results:
        - per_facet:
          - per_facet
          - per_facet
          subsection: subsection
          item_type: item_type
          org_facet: org_facet
          section: section
          abstract: abstract
          related_urls:
          - suggested_link_text: suggested_link_text
            url: url
          - suggested_link_text: suggested_link_text
            url: url
          source: source
          des_facet:
          - des_facet
          - des_facet
          title: title
          url: url
          short_url: short_url
          material_type_facet: material_type_facet
          multimedia:
          - copyright: copyright
            subtype: subtype
            format: format
            width: 1
            caption: caption
            type: type
            url: url
            height: 6
          - copyright: copyright
            subtype: subtype
            format: format
            width: 1
            caption: caption
            type: type
            url: url
            height: 6
          thumbnail_standard: thumbnail_standard
          geo_facet:
          - geo_facet
          - geo_facet
          created_date: created_date
          updated_date: updated_date
          byline: byline
          headline: headline
          published_date: published_date
          blog_name: blog_name
          kicker: kicker
        - per_facet:
          - per_facet
          - per_facet
          subsection: subsection
          item_type: item_type
          org_facet: org_facet
          section: section
          abstract: abstract
          related_urls:
          - suggested_link_text: suggested_link_text
            url: url
          - suggested_link_text: suggested_link_text
            url: url
          source: source
          des_facet:
          - des_facet
          - des_facet
          title: title
          url: url
          short_url: short_url
          material_type_facet: material_type_facet
          multimedia:
          - copyright: copyright
            subtype: subtype
            format: format
            width: 1
            caption: caption
            type: type
            url: url
            height: 6
          - copyright: copyright
            subtype: subtype
            format: format
            width: 1
            caption: caption
            type: type
            url: url
            height: 6
          thumbnail_standard: thumbnail_standard
          geo_facet:
          - geo_facet
          - geo_facet
          created_date: created_date
          updated_date: updated_date
          byline: byline
          headline: headline
          published_date: published_date
          blog_name: blog_name
          kicker: kicker
        num_results: 0
        status: status
      properties:
        copyright:
          title: copyright
          type: string
        num_results:
          title: num_results
          type: integer
        results:
          items:
            $ref: '#/components/schemas/Article'
          title: results
          type: array
        status:
          title: status
          type: string
      title: _content_json_get_200_response
      type: object
    Article_multimedia_inner:
      example:
        copyright: copyright
        subtype: subtype
        format: format
        width: 1
        caption: caption
        type: type
        url: url
        height: 6
      properties:
        caption:
          title: caption
          type: string
        copyright:
          title: copyright
          type: string
        format:
          title: format
          type: string
        height:
          title: height
          type: integer
        subtype:
          title: subtype
          type: string
        type:
          title: type
          type: string
        url:
          title: url
          type: string
        width:
          title: width
          type: integer
      title: Article_multimedia_inner
      type: object
    Article_related_urls_inner:
      example:
        suggested_link_text: suggested_link_text
        url: url
      properties:
        suggested_link_text:
          title: suggested_link_text
          type: string
        url:
          title: url
          type: string
      title: Article_related_urls_inner
      type: object
  securitySchemes:
    apikey:
      in: query
      name: api-key
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_apikey
