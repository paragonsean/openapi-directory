/*
 * Movie Reviews API
 * With the Movie Reviews API, you can search New York Times movie reviews by keyword and get lists of NYT Critics' Picks.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.MovieLink;
import org.openapitools.client.model.MovieMultimedia;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Movie
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:23:28.954816-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Movie {
  public static final String SERIALIZED_NAME_BYLINE = "byline";
  @SerializedName(SERIALIZED_NAME_BYLINE)
  private String byline;

  public static final String SERIALIZED_NAME_CRITICS_PICK = "critics_pick";
  @SerializedName(SERIALIZED_NAME_CRITICS_PICK)
  private Integer criticsPick;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private String dateUpdated;

  public static final String SERIALIZED_NAME_DISPLAY_TITLE = "display_title";
  @SerializedName(SERIALIZED_NAME_DISPLAY_TITLE)
  private String displayTitle;

  public static final String SERIALIZED_NAME_HEADLINE = "headline";
  @SerializedName(SERIALIZED_NAME_HEADLINE)
  private String headline;

  public static final String SERIALIZED_NAME_LINK = "link";
  @SerializedName(SERIALIZED_NAME_LINK)
  private MovieLink link;

  public static final String SERIALIZED_NAME_MPAA_RATING = "mpaa_rating";
  @SerializedName(SERIALIZED_NAME_MPAA_RATING)
  private String mpaaRating;

  public static final String SERIALIZED_NAME_MULTIMEDIA = "multimedia";
  @SerializedName(SERIALIZED_NAME_MULTIMEDIA)
  private MovieMultimedia multimedia;

  public static final String SERIALIZED_NAME_OPENING_DATE = "opening_date";
  @SerializedName(SERIALIZED_NAME_OPENING_DATE)
  private String openingDate;

  public static final String SERIALIZED_NAME_PUBLICATION_DATE = "publication_date";
  @SerializedName(SERIALIZED_NAME_PUBLICATION_DATE)
  private String publicationDate;

  public static final String SERIALIZED_NAME_SUMMARY_SHORT = "summary_short";
  @SerializedName(SERIALIZED_NAME_SUMMARY_SHORT)
  private String summaryShort;

  public Movie() {
  }

  public Movie byline(String byline) {
    this.byline = byline;
    return this;
  }

  /**
   * Get byline
   * @return byline
   */
  @javax.annotation.Nullable
  public String getByline() {
    return byline;
  }

  public void setByline(String byline) {
    this.byline = byline;
  }


  public Movie criticsPick(Integer criticsPick) {
    this.criticsPick = criticsPick;
    return this;
  }

  /**
   * Get criticsPick
   * @return criticsPick
   */
  @javax.annotation.Nullable
  public Integer getCriticsPick() {
    return criticsPick;
  }

  public void setCriticsPick(Integer criticsPick) {
    this.criticsPick = criticsPick;
  }


  public Movie dateUpdated(String dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * Get dateUpdated
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public String getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(String dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public Movie displayTitle(String displayTitle) {
    this.displayTitle = displayTitle;
    return this;
  }

  /**
   * Get displayTitle
   * @return displayTitle
   */
  @javax.annotation.Nullable
  public String getDisplayTitle() {
    return displayTitle;
  }

  public void setDisplayTitle(String displayTitle) {
    this.displayTitle = displayTitle;
  }


  public Movie headline(String headline) {
    this.headline = headline;
    return this;
  }

  /**
   * Get headline
   * @return headline
   */
  @javax.annotation.Nullable
  public String getHeadline() {
    return headline;
  }

  public void setHeadline(String headline) {
    this.headline = headline;
  }


  public Movie link(MovieLink link) {
    this.link = link;
    return this;
  }

  /**
   * Get link
   * @return link
   */
  @javax.annotation.Nullable
  public MovieLink getLink() {
    return link;
  }

  public void setLink(MovieLink link) {
    this.link = link;
  }


  public Movie mpaaRating(String mpaaRating) {
    this.mpaaRating = mpaaRating;
    return this;
  }

  /**
   * Get mpaaRating
   * @return mpaaRating
   */
  @javax.annotation.Nullable
  public String getMpaaRating() {
    return mpaaRating;
  }

  public void setMpaaRating(String mpaaRating) {
    this.mpaaRating = mpaaRating;
  }


  public Movie multimedia(MovieMultimedia multimedia) {
    this.multimedia = multimedia;
    return this;
  }

  /**
   * Get multimedia
   * @return multimedia
   */
  @javax.annotation.Nullable
  public MovieMultimedia getMultimedia() {
    return multimedia;
  }

  public void setMultimedia(MovieMultimedia multimedia) {
    this.multimedia = multimedia;
  }


  public Movie openingDate(String openingDate) {
    this.openingDate = openingDate;
    return this;
  }

  /**
   * Get openingDate
   * @return openingDate
   */
  @javax.annotation.Nullable
  public String getOpeningDate() {
    return openingDate;
  }

  public void setOpeningDate(String openingDate) {
    this.openingDate = openingDate;
  }


  public Movie publicationDate(String publicationDate) {
    this.publicationDate = publicationDate;
    return this;
  }

  /**
   * Get publicationDate
   * @return publicationDate
   */
  @javax.annotation.Nullable
  public String getPublicationDate() {
    return publicationDate;
  }

  public void setPublicationDate(String publicationDate) {
    this.publicationDate = publicationDate;
  }


  public Movie summaryShort(String summaryShort) {
    this.summaryShort = summaryShort;
    return this;
  }

  /**
   * Get summaryShort
   * @return summaryShort
   */
  @javax.annotation.Nullable
  public String getSummaryShort() {
    return summaryShort;
  }

  public void setSummaryShort(String summaryShort) {
    this.summaryShort = summaryShort;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Movie movie = (Movie) o;
    return Objects.equals(this.byline, movie.byline) &&
        Objects.equals(this.criticsPick, movie.criticsPick) &&
        Objects.equals(this.dateUpdated, movie.dateUpdated) &&
        Objects.equals(this.displayTitle, movie.displayTitle) &&
        Objects.equals(this.headline, movie.headline) &&
        Objects.equals(this.link, movie.link) &&
        Objects.equals(this.mpaaRating, movie.mpaaRating) &&
        Objects.equals(this.multimedia, movie.multimedia) &&
        Objects.equals(this.openingDate, movie.openingDate) &&
        Objects.equals(this.publicationDate, movie.publicationDate) &&
        Objects.equals(this.summaryShort, movie.summaryShort);
  }

  @Override
  public int hashCode() {
    return Objects.hash(byline, criticsPick, dateUpdated, displayTitle, headline, link, mpaaRating, multimedia, openingDate, publicationDate, summaryShort);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Movie {\n");
    sb.append("    byline: ").append(toIndentedString(byline)).append("\n");
    sb.append("    criticsPick: ").append(toIndentedString(criticsPick)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    displayTitle: ").append(toIndentedString(displayTitle)).append("\n");
    sb.append("    headline: ").append(toIndentedString(headline)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    mpaaRating: ").append(toIndentedString(mpaaRating)).append("\n");
    sb.append("    multimedia: ").append(toIndentedString(multimedia)).append("\n");
    sb.append("    openingDate: ").append(toIndentedString(openingDate)).append("\n");
    sb.append("    publicationDate: ").append(toIndentedString(publicationDate)).append("\n");
    sb.append("    summaryShort: ").append(toIndentedString(summaryShort)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("byline");
    openapiFields.add("critics_pick");
    openapiFields.add("date_updated");
    openapiFields.add("display_title");
    openapiFields.add("headline");
    openapiFields.add("link");
    openapiFields.add("mpaa_rating");
    openapiFields.add("multimedia");
    openapiFields.add("opening_date");
    openapiFields.add("publication_date");
    openapiFields.add("summary_short");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Movie
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Movie.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Movie is not found in the empty JSON string", Movie.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Movie.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Movie` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("byline") != null && !jsonObj.get("byline").isJsonNull()) && !jsonObj.get("byline").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `byline` to be a primitive type in the JSON string but got `%s`", jsonObj.get("byline").toString()));
      }
      if ((jsonObj.get("date_updated") != null && !jsonObj.get("date_updated").isJsonNull()) && !jsonObj.get("date_updated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date_updated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date_updated").toString()));
      }
      if ((jsonObj.get("display_title") != null && !jsonObj.get("display_title").isJsonNull()) && !jsonObj.get("display_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `display_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("display_title").toString()));
      }
      if ((jsonObj.get("headline") != null && !jsonObj.get("headline").isJsonNull()) && !jsonObj.get("headline").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `headline` to be a primitive type in the JSON string but got `%s`", jsonObj.get("headline").toString()));
      }
      // validate the optional field `link`
      if (jsonObj.get("link") != null && !jsonObj.get("link").isJsonNull()) {
        MovieLink.validateJsonElement(jsonObj.get("link"));
      }
      if ((jsonObj.get("mpaa_rating") != null && !jsonObj.get("mpaa_rating").isJsonNull()) && !jsonObj.get("mpaa_rating").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mpaa_rating` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mpaa_rating").toString()));
      }
      // validate the optional field `multimedia`
      if (jsonObj.get("multimedia") != null && !jsonObj.get("multimedia").isJsonNull()) {
        MovieMultimedia.validateJsonElement(jsonObj.get("multimedia"));
      }
      if ((jsonObj.get("opening_date") != null && !jsonObj.get("opening_date").isJsonNull()) && !jsonObj.get("opening_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `opening_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("opening_date").toString()));
      }
      if ((jsonObj.get("publication_date") != null && !jsonObj.get("publication_date").isJsonNull()) && !jsonObj.get("publication_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publication_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publication_date").toString()));
      }
      if ((jsonObj.get("summary_short") != null && !jsonObj.get("summary_short").isJsonNull()) && !jsonObj.get("summary_short").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `summary_short` to be a primitive type in the JSON string but got `%s`", jsonObj.get("summary_short").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Movie.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Movie' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Movie> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Movie.class));

       return (TypeAdapter<T>) new TypeAdapter<Movie>() {
           @Override
           public void write(JsonWriter out, Movie value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Movie read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Movie given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Movie
   * @throws IOException if the JSON string is invalid with respect to Movie
   */
  public static Movie fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Movie.class);
  }

  /**
   * Convert an instance of Movie to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

