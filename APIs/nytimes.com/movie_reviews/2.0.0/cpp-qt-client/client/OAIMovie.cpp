/**
 * Movie Reviews API
 * With the Movie Reviews API, you can search New York Times movie reviews by keyword and get lists of NYT Critics' Picks.
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMovie.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMovie::OAIMovie(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMovie::OAIMovie() {
    this->initializeModel();
}

OAIMovie::~OAIMovie() {}

void OAIMovie::initializeModel() {

    m_byline_isSet = false;
    m_byline_isValid = false;

    m_critics_pick_isSet = false;
    m_critics_pick_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_display_title_isSet = false;
    m_display_title_isValid = false;

    m_headline_isSet = false;
    m_headline_isValid = false;

    m_link_isSet = false;
    m_link_isValid = false;

    m_mpaa_rating_isSet = false;
    m_mpaa_rating_isValid = false;

    m_multimedia_isSet = false;
    m_multimedia_isValid = false;

    m_opening_date_isSet = false;
    m_opening_date_isValid = false;

    m_publication_date_isSet = false;
    m_publication_date_isValid = false;

    m_summary_short_isSet = false;
    m_summary_short_isValid = false;
}

void OAIMovie::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMovie::fromJsonObject(QJsonObject json) {

    m_byline_isValid = ::OpenAPI::fromJsonValue(m_byline, json[QString("byline")]);
    m_byline_isSet = !json[QString("byline")].isNull() && m_byline_isValid;

    m_critics_pick_isValid = ::OpenAPI::fromJsonValue(m_critics_pick, json[QString("critics_pick")]);
    m_critics_pick_isSet = !json[QString("critics_pick")].isNull() && m_critics_pick_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_display_title_isValid = ::OpenAPI::fromJsonValue(m_display_title, json[QString("display_title")]);
    m_display_title_isSet = !json[QString("display_title")].isNull() && m_display_title_isValid;

    m_headline_isValid = ::OpenAPI::fromJsonValue(m_headline, json[QString("headline")]);
    m_headline_isSet = !json[QString("headline")].isNull() && m_headline_isValid;

    m_link_isValid = ::OpenAPI::fromJsonValue(m_link, json[QString("link")]);
    m_link_isSet = !json[QString("link")].isNull() && m_link_isValid;

    m_mpaa_rating_isValid = ::OpenAPI::fromJsonValue(m_mpaa_rating, json[QString("mpaa_rating")]);
    m_mpaa_rating_isSet = !json[QString("mpaa_rating")].isNull() && m_mpaa_rating_isValid;

    m_multimedia_isValid = ::OpenAPI::fromJsonValue(m_multimedia, json[QString("multimedia")]);
    m_multimedia_isSet = !json[QString("multimedia")].isNull() && m_multimedia_isValid;

    m_opening_date_isValid = ::OpenAPI::fromJsonValue(m_opening_date, json[QString("opening_date")]);
    m_opening_date_isSet = !json[QString("opening_date")].isNull() && m_opening_date_isValid;

    m_publication_date_isValid = ::OpenAPI::fromJsonValue(m_publication_date, json[QString("publication_date")]);
    m_publication_date_isSet = !json[QString("publication_date")].isNull() && m_publication_date_isValid;

    m_summary_short_isValid = ::OpenAPI::fromJsonValue(m_summary_short, json[QString("summary_short")]);
    m_summary_short_isSet = !json[QString("summary_short")].isNull() && m_summary_short_isValid;
}

QString OAIMovie::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMovie::asJsonObject() const {
    QJsonObject obj;
    if (m_byline_isSet) {
        obj.insert(QString("byline"), ::OpenAPI::toJsonValue(m_byline));
    }
    if (m_critics_pick_isSet) {
        obj.insert(QString("critics_pick"), ::OpenAPI::toJsonValue(m_critics_pick));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_display_title_isSet) {
        obj.insert(QString("display_title"), ::OpenAPI::toJsonValue(m_display_title));
    }
    if (m_headline_isSet) {
        obj.insert(QString("headline"), ::OpenAPI::toJsonValue(m_headline));
    }
    if (m_link.isSet()) {
        obj.insert(QString("link"), ::OpenAPI::toJsonValue(m_link));
    }
    if (m_mpaa_rating_isSet) {
        obj.insert(QString("mpaa_rating"), ::OpenAPI::toJsonValue(m_mpaa_rating));
    }
    if (m_multimedia.isSet()) {
        obj.insert(QString("multimedia"), ::OpenAPI::toJsonValue(m_multimedia));
    }
    if (m_opening_date_isSet) {
        obj.insert(QString("opening_date"), ::OpenAPI::toJsonValue(m_opening_date));
    }
    if (m_publication_date_isSet) {
        obj.insert(QString("publication_date"), ::OpenAPI::toJsonValue(m_publication_date));
    }
    if (m_summary_short_isSet) {
        obj.insert(QString("summary_short"), ::OpenAPI::toJsonValue(m_summary_short));
    }
    return obj;
}

QString OAIMovie::getByline() const {
    return m_byline;
}
void OAIMovie::setByline(const QString &byline) {
    m_byline = byline;
    m_byline_isSet = true;
}

bool OAIMovie::is_byline_Set() const{
    return m_byline_isSet;
}

bool OAIMovie::is_byline_Valid() const{
    return m_byline_isValid;
}

qint32 OAIMovie::getCriticsPick() const {
    return m_critics_pick;
}
void OAIMovie::setCriticsPick(const qint32 &critics_pick) {
    m_critics_pick = critics_pick;
    m_critics_pick_isSet = true;
}

bool OAIMovie::is_critics_pick_Set() const{
    return m_critics_pick_isSet;
}

bool OAIMovie::is_critics_pick_Valid() const{
    return m_critics_pick_isValid;
}

QString OAIMovie::getDateUpdated() const {
    return m_date_updated;
}
void OAIMovie::setDateUpdated(const QString &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAIMovie::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAIMovie::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

QString OAIMovie::getDisplayTitle() const {
    return m_display_title;
}
void OAIMovie::setDisplayTitle(const QString &display_title) {
    m_display_title = display_title;
    m_display_title_isSet = true;
}

bool OAIMovie::is_display_title_Set() const{
    return m_display_title_isSet;
}

bool OAIMovie::is_display_title_Valid() const{
    return m_display_title_isValid;
}

QString OAIMovie::getHeadline() const {
    return m_headline;
}
void OAIMovie::setHeadline(const QString &headline) {
    m_headline = headline;
    m_headline_isSet = true;
}

bool OAIMovie::is_headline_Set() const{
    return m_headline_isSet;
}

bool OAIMovie::is_headline_Valid() const{
    return m_headline_isValid;
}

OAIMovie_link OAIMovie::getLink() const {
    return m_link;
}
void OAIMovie::setLink(const OAIMovie_link &link) {
    m_link = link;
    m_link_isSet = true;
}

bool OAIMovie::is_link_Set() const{
    return m_link_isSet;
}

bool OAIMovie::is_link_Valid() const{
    return m_link_isValid;
}

QString OAIMovie::getMpaaRating() const {
    return m_mpaa_rating;
}
void OAIMovie::setMpaaRating(const QString &mpaa_rating) {
    m_mpaa_rating = mpaa_rating;
    m_mpaa_rating_isSet = true;
}

bool OAIMovie::is_mpaa_rating_Set() const{
    return m_mpaa_rating_isSet;
}

bool OAIMovie::is_mpaa_rating_Valid() const{
    return m_mpaa_rating_isValid;
}

OAIMovie_multimedia OAIMovie::getMultimedia() const {
    return m_multimedia;
}
void OAIMovie::setMultimedia(const OAIMovie_multimedia &multimedia) {
    m_multimedia = multimedia;
    m_multimedia_isSet = true;
}

bool OAIMovie::is_multimedia_Set() const{
    return m_multimedia_isSet;
}

bool OAIMovie::is_multimedia_Valid() const{
    return m_multimedia_isValid;
}

QString OAIMovie::getOpeningDate() const {
    return m_opening_date;
}
void OAIMovie::setOpeningDate(const QString &opening_date) {
    m_opening_date = opening_date;
    m_opening_date_isSet = true;
}

bool OAIMovie::is_opening_date_Set() const{
    return m_opening_date_isSet;
}

bool OAIMovie::is_opening_date_Valid() const{
    return m_opening_date_isValid;
}

QString OAIMovie::getPublicationDate() const {
    return m_publication_date;
}
void OAIMovie::setPublicationDate(const QString &publication_date) {
    m_publication_date = publication_date;
    m_publication_date_isSet = true;
}

bool OAIMovie::is_publication_date_Set() const{
    return m_publication_date_isSet;
}

bool OAIMovie::is_publication_date_Valid() const{
    return m_publication_date_isValid;
}

QString OAIMovie::getSummaryShort() const {
    return m_summary_short;
}
void OAIMovie::setSummaryShort(const QString &summary_short) {
    m_summary_short = summary_short;
    m_summary_short_isSet = true;
}

bool OAIMovie::is_summary_short_Set() const{
    return m_summary_short_isSet;
}

bool OAIMovie::is_summary_short_Valid() const{
    return m_summary_short_isValid;
}

bool OAIMovie::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_byline_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_critics_pick_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_headline_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_link.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_mpaa_rating_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_multimedia.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_opening_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publication_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_summary_short_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMovie::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
