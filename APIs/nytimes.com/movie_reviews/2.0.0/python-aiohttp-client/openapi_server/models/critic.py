# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.critic_multimedia import CriticMultimedia
from openapi_server import util


class Critic(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bio: str=None, display_name: str=None, multimedia: CriticMultimedia=None, seo_name: str=None, sort_name: str=None, status: str=None):
        """Critic - a model defined in OpenAPI

        :param bio: The bio of this Critic.
        :param display_name: The display_name of this Critic.
        :param multimedia: The multimedia of this Critic.
        :param seo_name: The seo_name of this Critic.
        :param sort_name: The sort_name of this Critic.
        :param status: The status of this Critic.
        """
        self.openapi_types = {
            'bio': str,
            'display_name': str,
            'multimedia': CriticMultimedia,
            'seo_name': str,
            'sort_name': str,
            'status': str
        }

        self.attribute_map = {
            'bio': 'bio',
            'display_name': 'display_name',
            'multimedia': 'multimedia',
            'seo_name': 'seo_name',
            'sort_name': 'sort_name',
            'status': 'status'
        }

        self._bio = bio
        self._display_name = display_name
        self._multimedia = multimedia
        self._seo_name = seo_name
        self._sort_name = sort_name
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Critic':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Critic of this Critic.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bio(self):
        """Gets the bio of this Critic.


        :return: The bio of this Critic.
        :rtype: str
        """
        return self._bio

    @bio.setter
    def bio(self, bio):
        """Sets the bio of this Critic.


        :param bio: The bio of this Critic.
        :type bio: str
        """

        self._bio = bio

    @property
    def display_name(self):
        """Gets the display_name of this Critic.


        :return: The display_name of this Critic.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this Critic.


        :param display_name: The display_name of this Critic.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def multimedia(self):
        """Gets the multimedia of this Critic.


        :return: The multimedia of this Critic.
        :rtype: CriticMultimedia
        """
        return self._multimedia

    @multimedia.setter
    def multimedia(self, multimedia):
        """Sets the multimedia of this Critic.


        :param multimedia: The multimedia of this Critic.
        :type multimedia: CriticMultimedia
        """

        self._multimedia = multimedia

    @property
    def seo_name(self):
        """Gets the seo_name of this Critic.


        :return: The seo_name of this Critic.
        :rtype: str
        """
        return self._seo_name

    @seo_name.setter
    def seo_name(self, seo_name):
        """Sets the seo_name of this Critic.


        :param seo_name: The seo_name of this Critic.
        :type seo_name: str
        """

        self._seo_name = seo_name

    @property
    def sort_name(self):
        """Gets the sort_name of this Critic.


        :return: The sort_name of this Critic.
        :rtype: str
        """
        return self._sort_name

    @sort_name.setter
    def sort_name(self, sort_name):
        """Sets the sort_name of this Critic.


        :param sort_name: The sort_name of this Critic.
        :type sort_name: str
        """

        self._sort_name = sort_name

    @property
    def status(self):
        """Gets the status of this Critic.


        :return: The status of this Critic.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Critic.


        :param status: The status of this Critic.
        :type status: str
        """

        self._status = status
