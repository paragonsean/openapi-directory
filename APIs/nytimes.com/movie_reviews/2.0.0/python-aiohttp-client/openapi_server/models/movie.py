# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.movie_link import MovieLink
from openapi_server.models.movie_multimedia import MovieMultimedia
from openapi_server import util


class Movie(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, byline: str=None, critics_pick: int=None, date_updated: str=None, display_title: str=None, headline: str=None, link: MovieLink=None, mpaa_rating: str=None, multimedia: MovieMultimedia=None, opening_date: str=None, publication_date: str=None, summary_short: str=None):
        """Movie - a model defined in OpenAPI

        :param byline: The byline of this Movie.
        :param critics_pick: The critics_pick of this Movie.
        :param date_updated: The date_updated of this Movie.
        :param display_title: The display_title of this Movie.
        :param headline: The headline of this Movie.
        :param link: The link of this Movie.
        :param mpaa_rating: The mpaa_rating of this Movie.
        :param multimedia: The multimedia of this Movie.
        :param opening_date: The opening_date of this Movie.
        :param publication_date: The publication_date of this Movie.
        :param summary_short: The summary_short of this Movie.
        """
        self.openapi_types = {
            'byline': str,
            'critics_pick': int,
            'date_updated': str,
            'display_title': str,
            'headline': str,
            'link': MovieLink,
            'mpaa_rating': str,
            'multimedia': MovieMultimedia,
            'opening_date': str,
            'publication_date': str,
            'summary_short': str
        }

        self.attribute_map = {
            'byline': 'byline',
            'critics_pick': 'critics_pick',
            'date_updated': 'date_updated',
            'display_title': 'display_title',
            'headline': 'headline',
            'link': 'link',
            'mpaa_rating': 'mpaa_rating',
            'multimedia': 'multimedia',
            'opening_date': 'opening_date',
            'publication_date': 'publication_date',
            'summary_short': 'summary_short'
        }

        self._byline = byline
        self._critics_pick = critics_pick
        self._date_updated = date_updated
        self._display_title = display_title
        self._headline = headline
        self._link = link
        self._mpaa_rating = mpaa_rating
        self._multimedia = multimedia
        self._opening_date = opening_date
        self._publication_date = publication_date
        self._summary_short = summary_short

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Movie':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Movie of this Movie.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def byline(self):
        """Gets the byline of this Movie.


        :return: The byline of this Movie.
        :rtype: str
        """
        return self._byline

    @byline.setter
    def byline(self, byline):
        """Sets the byline of this Movie.


        :param byline: The byline of this Movie.
        :type byline: str
        """

        self._byline = byline

    @property
    def critics_pick(self):
        """Gets the critics_pick of this Movie.


        :return: The critics_pick of this Movie.
        :rtype: int
        """
        return self._critics_pick

    @critics_pick.setter
    def critics_pick(self, critics_pick):
        """Sets the critics_pick of this Movie.


        :param critics_pick: The critics_pick of this Movie.
        :type critics_pick: int
        """

        self._critics_pick = critics_pick

    @property
    def date_updated(self):
        """Gets the date_updated of this Movie.


        :return: The date_updated of this Movie.
        :rtype: str
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this Movie.


        :param date_updated: The date_updated of this Movie.
        :type date_updated: str
        """

        self._date_updated = date_updated

    @property
    def display_title(self):
        """Gets the display_title of this Movie.


        :return: The display_title of this Movie.
        :rtype: str
        """
        return self._display_title

    @display_title.setter
    def display_title(self, display_title):
        """Sets the display_title of this Movie.


        :param display_title: The display_title of this Movie.
        :type display_title: str
        """

        self._display_title = display_title

    @property
    def headline(self):
        """Gets the headline of this Movie.


        :return: The headline of this Movie.
        :rtype: str
        """
        return self._headline

    @headline.setter
    def headline(self, headline):
        """Sets the headline of this Movie.


        :param headline: The headline of this Movie.
        :type headline: str
        """

        self._headline = headline

    @property
    def link(self):
        """Gets the link of this Movie.


        :return: The link of this Movie.
        :rtype: MovieLink
        """
        return self._link

    @link.setter
    def link(self, link):
        """Sets the link of this Movie.


        :param link: The link of this Movie.
        :type link: MovieLink
        """

        self._link = link

    @property
    def mpaa_rating(self):
        """Gets the mpaa_rating of this Movie.


        :return: The mpaa_rating of this Movie.
        :rtype: str
        """
        return self._mpaa_rating

    @mpaa_rating.setter
    def mpaa_rating(self, mpaa_rating):
        """Sets the mpaa_rating of this Movie.


        :param mpaa_rating: The mpaa_rating of this Movie.
        :type mpaa_rating: str
        """

        self._mpaa_rating = mpaa_rating

    @property
    def multimedia(self):
        """Gets the multimedia of this Movie.


        :return: The multimedia of this Movie.
        :rtype: MovieMultimedia
        """
        return self._multimedia

    @multimedia.setter
    def multimedia(self, multimedia):
        """Sets the multimedia of this Movie.


        :param multimedia: The multimedia of this Movie.
        :type multimedia: MovieMultimedia
        """

        self._multimedia = multimedia

    @property
    def opening_date(self):
        """Gets the opening_date of this Movie.


        :return: The opening_date of this Movie.
        :rtype: str
        """
        return self._opening_date

    @opening_date.setter
    def opening_date(self, opening_date):
        """Sets the opening_date of this Movie.


        :param opening_date: The opening_date of this Movie.
        :type opening_date: str
        """

        self._opening_date = opening_date

    @property
    def publication_date(self):
        """Gets the publication_date of this Movie.


        :return: The publication_date of this Movie.
        :rtype: str
        """
        return self._publication_date

    @publication_date.setter
    def publication_date(self, publication_date):
        """Sets the publication_date of this Movie.


        :param publication_date: The publication_date of this Movie.
        :type publication_date: str
        """

        self._publication_date = publication_date

    @property
    def summary_short(self):
        """Gets the summary_short of this Movie.


        :return: The summary_short of this Movie.
        :rtype: str
        """
        return self._summary_short

    @summary_short.setter
    def summary_short(self, summary_short):
        """Sets the summary_short of this Movie.


        :param summary_short: The summary_short of this Movie.
        :type summary_short: str
        """

        self._summary_short = summary_short
