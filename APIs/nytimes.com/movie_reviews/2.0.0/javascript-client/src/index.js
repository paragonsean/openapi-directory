/**
 * Movie Reviews API
 * With the Movie Reviews API, you can search New York Times movie reviews by keyword and get lists of NYT Critics' Picks.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Critic from './model/Critic';
import CriticMultimedia from './model/CriticMultimedia';
import CriticMultimediaResource from './model/CriticMultimediaResource';
import CriticsResourceTypeJsonGet200Response from './model/CriticsResourceTypeJsonGet200Response';
import Movie from './model/Movie';
import MovieLink from './model/MovieLink';
import MovieMultimedia from './model/MovieMultimedia';
import MovieMultimediaResource from './model/MovieMultimediaResource';
import ReviewsSearchJsonGet200Response from './model/ReviewsSearchJsonGet200Response';
import DefaultApi from './api/DefaultApi';


/**
* With the Movie Reviews API, you can search New York Times movie reviews by keyword and get lists of NYT Critics&#39; Picks..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var MovieReviewsApi = require('index'); // See note below*.
* var xxxSvc = new MovieReviewsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new MovieReviewsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new MovieReviewsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new MovieReviewsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Critic model constructor.
     * @property {module:model/Critic}
     */
    Critic,

    /**
     * The CriticMultimedia model constructor.
     * @property {module:model/CriticMultimedia}
     */
    CriticMultimedia,

    /**
     * The CriticMultimediaResource model constructor.
     * @property {module:model/CriticMultimediaResource}
     */
    CriticMultimediaResource,

    /**
     * The CriticsResourceTypeJsonGet200Response model constructor.
     * @property {module:model/CriticsResourceTypeJsonGet200Response}
     */
    CriticsResourceTypeJsonGet200Response,

    /**
     * The Movie model constructor.
     * @property {module:model/Movie}
     */
    Movie,

    /**
     * The MovieLink model constructor.
     * @property {module:model/MovieLink}
     */
    MovieLink,

    /**
     * The MovieMultimedia model constructor.
     * @property {module:model/MovieMultimedia}
     */
    MovieMultimedia,

    /**
     * The MovieMultimediaResource model constructor.
     * @property {module:model/MovieMultimediaResource}
     */
    MovieMultimediaResource,

    /**
     * The ReviewsSearchJsonGet200Response model constructor.
     * @property {module:model/ReviewsSearchJsonGet200Response}
     */
    ReviewsSearchJsonGet200Response,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
