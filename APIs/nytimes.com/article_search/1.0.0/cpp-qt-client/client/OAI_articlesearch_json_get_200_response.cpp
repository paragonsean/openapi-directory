/**
 * Article Search API
 * With the Article Search API, you can search New York Times articles from Sept. 18, 1851 to today, retrieving headlines, abstracts, lead paragraphs, links to associated multimedia and other article metadata.     Note: In URI examples and field names, italics indicate placeholders for variables or values. Brackets [ ] indicate optional items. Parentheses ( ) are not a convention â€” when URIs include parentheses, interpret them literally.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_articlesearch_json_get_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_articlesearch_json_get_200_response::OAI_articlesearch_json_get_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_articlesearch_json_get_200_response::OAI_articlesearch_json_get_200_response() {
    this->initializeModel();
}

OAI_articlesearch_json_get_200_response::~OAI_articlesearch_json_get_200_response() {}

void OAI_articlesearch_json_get_200_response::initializeModel() {

    m_response_isSet = false;
    m_response_isValid = false;
}

void OAI_articlesearch_json_get_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_articlesearch_json_get_200_response::fromJsonObject(QJsonObject json) {

    m_response_isValid = ::OpenAPI::fromJsonValue(m_response, json[QString("response")]);
    m_response_isSet = !json[QString("response")].isNull() && m_response_isValid;
}

QString OAI_articlesearch_json_get_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_articlesearch_json_get_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_response.isSet()) {
        obj.insert(QString("response"), ::OpenAPI::toJsonValue(m_response));
    }
    return obj;
}

OAI_articlesearch_json_get_200_response_response OAI_articlesearch_json_get_200_response::getResponse() const {
    return m_response;
}
void OAI_articlesearch_json_get_200_response::setResponse(const OAI_articlesearch_json_get_200_response_response &response) {
    m_response = response;
    m_response_isSet = true;
}

bool OAI_articlesearch_json_get_200_response::is_response_Set() const{
    return m_response_isSet;
}

bool OAI_articlesearch_json_get_200_response::is_response_Valid() const{
    return m_response_isValid;
}

bool OAI_articlesearch_json_get_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_response.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_articlesearch_json_get_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
