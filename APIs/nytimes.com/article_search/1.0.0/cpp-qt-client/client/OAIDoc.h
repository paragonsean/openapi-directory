/**
 * Article Search API
 * With the Article Search API, you can search New York Times articles from Sept. 18, 1851 to today, retrieving headlines, abstracts, lead paragraphs, links to associated multimedia and other article metadata.     Note: In URI examples and field names, italics indicate placeholders for variables or values. Brackets [ ] indicate optional items. Parentheses ( ) are not a convention â€” when URIs include parentheses, interpret them literally.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDoc.h
 *
 * 
 */

#ifndef OAIDoc_H
#define OAIDoc_H

#include <QJsonObject>

#include "OAIDoc_byline.h"
#include "OAIDoc_headline.h"
#include "OAIDoc_keywords.h"
#include "OAIDoc_multimedia_inner.h"
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDoc_byline;
class OAIDoc_headline;
class OAIDoc_keywords;
class OAIDoc_multimedia_inner;

class OAIDoc : public OAIObject {
public:
    OAIDoc();
    OAIDoc(QString json);
    ~OAIDoc() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &_id);
    bool is__id_Set() const;
    bool is__id_Valid() const;

    QString getAbstract() const;
    void setAbstract(const QString &abstract);
    bool is_abstract_Set() const;
    bool is_abstract_Valid() const;

    QList<QJsonValue> getBlog() const;
    void setBlog(const QList<QJsonValue> &blog);
    bool is_blog_Set() const;
    bool is_blog_Valid() const;

    OAIDoc_byline getByline() const;
    void setByline(const OAIDoc_byline &byline);
    bool is_byline_Set() const;
    bool is_byline_Valid() const;

    QString getDocumentType() const;
    void setDocumentType(const QString &document_type);
    bool is_document_type_Set() const;
    bool is_document_type_Valid() const;

    OAIDoc_headline getHeadline() const;
    void setHeadline(const OAIDoc_headline &headline);
    bool is_headline_Set() const;
    bool is_headline_Valid() const;

    OAIDoc_keywords getKeywords() const;
    void setKeywords(const OAIDoc_keywords &keywords);
    bool is_keywords_Set() const;
    bool is_keywords_Valid() const;

    QString getLeadParagraph() const;
    void setLeadParagraph(const QString &lead_paragraph);
    bool is_lead_paragraph_Set() const;
    bool is_lead_paragraph_Valid() const;

    QList<OAIDoc_multimedia_inner> getMultimedia() const;
    void setMultimedia(const QList<OAIDoc_multimedia_inner> &multimedia);
    bool is_multimedia_Set() const;
    bool is_multimedia_Valid() const;

    QString getNewsDesk() const;
    void setNewsDesk(const QString &news_desk);
    bool is_news_desk_Set() const;
    bool is_news_desk_Valid() const;

    QString getPrintPage() const;
    void setPrintPage(const QString &print_page);
    bool is_print_page_Set() const;
    bool is_print_page_Valid() const;

    QString getPubDate() const;
    void setPubDate(const QString &pub_date);
    bool is_pub_date_Set() const;
    bool is_pub_date_Valid() const;

    QString getSectionName() const;
    void setSectionName(const QString &section_name);
    bool is_section_name_Set() const;
    bool is_section_name_Valid() const;

    QString getSlideshowCredits() const;
    void setSlideshowCredits(const QString &slideshow_credits);
    bool is_slideshow_credits_Set() const;
    bool is_slideshow_credits_Valid() const;

    QString getSnippet() const;
    void setSnippet(const QString &snippet);
    bool is_snippet_Set() const;
    bool is_snippet_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getSubsectionName() const;
    void setSubsectionName(const QString &subsection_name);
    bool is_subsection_name_Set() const;
    bool is_subsection_name_Valid() const;

    QString getTypeOfMaterial() const;
    void setTypeOfMaterial(const QString &type_of_material);
    bool is_type_of_material_Set() const;
    bool is_type_of_material_Valid() const;

    QString getWebUrl() const;
    void setWebUrl(const QString &web_url);
    bool is_web_url_Set() const;
    bool is_web_url_Valid() const;

    QString getWordCount() const;
    void setWordCount(const QString &word_count);
    bool is_word_count_Set() const;
    bool is_word_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m__id;
    bool m__id_isSet;
    bool m__id_isValid;

    QString m_abstract;
    bool m_abstract_isSet;
    bool m_abstract_isValid;

    QList<QJsonValue> m_blog;
    bool m_blog_isSet;
    bool m_blog_isValid;

    OAIDoc_byline m_byline;
    bool m_byline_isSet;
    bool m_byline_isValid;

    QString m_document_type;
    bool m_document_type_isSet;
    bool m_document_type_isValid;

    OAIDoc_headline m_headline;
    bool m_headline_isSet;
    bool m_headline_isValid;

    OAIDoc_keywords m_keywords;
    bool m_keywords_isSet;
    bool m_keywords_isValid;

    QString m_lead_paragraph;
    bool m_lead_paragraph_isSet;
    bool m_lead_paragraph_isValid;

    QList<OAIDoc_multimedia_inner> m_multimedia;
    bool m_multimedia_isSet;
    bool m_multimedia_isValid;

    QString m_news_desk;
    bool m_news_desk_isSet;
    bool m_news_desk_isValid;

    QString m_print_page;
    bool m_print_page_isSet;
    bool m_print_page_isValid;

    QString m_pub_date;
    bool m_pub_date_isSet;
    bool m_pub_date_isValid;

    QString m_section_name;
    bool m_section_name_isSet;
    bool m_section_name_isValid;

    QString m_slideshow_credits;
    bool m_slideshow_credits_isSet;
    bool m_slideshow_credits_isValid;

    QString m_snippet;
    bool m_snippet_isSet;
    bool m_snippet_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_subsection_name;
    bool m_subsection_name_isSet;
    bool m_subsection_name_isValid;

    QString m_type_of_material;
    bool m_type_of_material_isSet;
    bool m_type_of_material_isValid;

    QString m_web_url;
    bool m_web_url_isSet;
    bool m_web_url_isValid;

    QString m_word_count;
    bool m_word_count_isSet;
    bool m_word_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDoc)

#endif // OAIDoc_H
