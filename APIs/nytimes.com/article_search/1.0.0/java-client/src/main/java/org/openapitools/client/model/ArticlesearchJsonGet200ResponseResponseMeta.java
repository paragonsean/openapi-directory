/*
 * Article Search API
 * With the Article Search API, you can search New York Times articles from Sept. 18, 1851 to today, retrieving headlines, abstracts, lead paragraphs, links to associated multimedia and other article metadata.     Note: In URI examples and field names, italics indicate placeholders for variables or values. Brackets [ ] indicate optional items. Parentheses ( ) are not a convention â€” when URIs include parentheses, interpret them literally.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ArticlesearchJsonGet200ResponseResponseMeta
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:23:39.499896-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ArticlesearchJsonGet200ResponseResponseMeta {
  public static final String SERIALIZED_NAME_HITS = "hits";
  @SerializedName(SERIALIZED_NAME_HITS)
  private Integer hits;

  public static final String SERIALIZED_NAME_OFFSET = "offset";
  @SerializedName(SERIALIZED_NAME_OFFSET)
  private Integer offset;

  public static final String SERIALIZED_NAME_TIME = "time";
  @SerializedName(SERIALIZED_NAME_TIME)
  private Integer time;

  public ArticlesearchJsonGet200ResponseResponseMeta() {
  }

  public ArticlesearchJsonGet200ResponseResponseMeta hits(Integer hits) {
    this.hits = hits;
    return this;
  }

  /**
   * Get hits
   * @return hits
   */
  @javax.annotation.Nullable
  public Integer getHits() {
    return hits;
  }

  public void setHits(Integer hits) {
    this.hits = hits;
  }


  public ArticlesearchJsonGet200ResponseResponseMeta offset(Integer offset) {
    this.offset = offset;
    return this;
  }

  /**
   * Get offset
   * @return offset
   */
  @javax.annotation.Nullable
  public Integer getOffset() {
    return offset;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }


  public ArticlesearchJsonGet200ResponseResponseMeta time(Integer time) {
    this.time = time;
    return this;
  }

  /**
   * Get time
   * @return time
   */
  @javax.annotation.Nullable
  public Integer getTime() {
    return time;
  }

  public void setTime(Integer time) {
    this.time = time;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ArticlesearchJsonGet200ResponseResponseMeta articlesearchJsonGet200ResponseResponseMeta = (ArticlesearchJsonGet200ResponseResponseMeta) o;
    return Objects.equals(this.hits, articlesearchJsonGet200ResponseResponseMeta.hits) &&
        Objects.equals(this.offset, articlesearchJsonGet200ResponseResponseMeta.offset) &&
        Objects.equals(this.time, articlesearchJsonGet200ResponseResponseMeta.time);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hits, offset, time);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ArticlesearchJsonGet200ResponseResponseMeta {\n");
    sb.append("    hits: ").append(toIndentedString(hits)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("hits");
    openapiFields.add("offset");
    openapiFields.add("time");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ArticlesearchJsonGet200ResponseResponseMeta
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ArticlesearchJsonGet200ResponseResponseMeta.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ArticlesearchJsonGet200ResponseResponseMeta is not found in the empty JSON string", ArticlesearchJsonGet200ResponseResponseMeta.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ArticlesearchJsonGet200ResponseResponseMeta.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ArticlesearchJsonGet200ResponseResponseMeta` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ArticlesearchJsonGet200ResponseResponseMeta.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ArticlesearchJsonGet200ResponseResponseMeta' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ArticlesearchJsonGet200ResponseResponseMeta> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ArticlesearchJsonGet200ResponseResponseMeta.class));

       return (TypeAdapter<T>) new TypeAdapter<ArticlesearchJsonGet200ResponseResponseMeta>() {
           @Override
           public void write(JsonWriter out, ArticlesearchJsonGet200ResponseResponseMeta value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ArticlesearchJsonGet200ResponseResponseMeta read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ArticlesearchJsonGet200ResponseResponseMeta given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ArticlesearchJsonGet200ResponseResponseMeta
   * @throws IOException if the JSON string is invalid with respect to ArticlesearchJsonGet200ResponseResponseMeta
   */
  public static ArticlesearchJsonGet200ResponseResponseMeta fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ArticlesearchJsonGet200ResponseResponseMeta.class);
  }

  /**
   * Convert an instance of ArticlesearchJsonGet200ResponseResponseMeta to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

