/**
 * Article Search API
 * With the Article Search API, you can search New York Times articles from Sept. 18, 1851 to today, retrieving headlines, abstracts, lead paragraphs, links to associated multimedia and other article metadata.     Note: In URI examples and field names, italics indicate placeholders for variables or values. Brackets [ ] indicate optional items. Parentheses ( ) are not a convention — when URIs include parentheses, interpret them literally.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ArticlesearchJsonGet200Response from './model/ArticlesearchJsonGet200Response';
import ArticlesearchJsonGet200ResponseResponse from './model/ArticlesearchJsonGet200ResponseResponse';
import ArticlesearchJsonGet200ResponseResponseMeta from './model/ArticlesearchJsonGet200ResponseResponseMeta';
import Doc from './model/Doc';
import DocByline from './model/DocByline';
import DocHeadline from './model/DocHeadline';
import DocKeywords from './model/DocKeywords';
import DocMultimediaInner from './model/DocMultimediaInner';
import StoriesApi from './api/StoriesApi';


/**
* With the Article Search API, you can search New York Times articles from Sept. 18, 1851 to today, retrieving headlines, abstracts, lead paragraphs, links to associated multimedia and other article metadata.     Note: In URI examples and field names, italics indicate placeholders for variables or values. Brackets [ ] indicate optional items. Parentheses ( ) are not a convention — when URIs include parentheses, interpret them literally..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ArticleSearchApi = require('index'); // See note below*.
* var xxxSvc = new ArticleSearchApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ArticleSearchApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ArticleSearchApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ArticleSearchApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ArticlesearchJsonGet200Response model constructor.
     * @property {module:model/ArticlesearchJsonGet200Response}
     */
    ArticlesearchJsonGet200Response,

    /**
     * The ArticlesearchJsonGet200ResponseResponse model constructor.
     * @property {module:model/ArticlesearchJsonGet200ResponseResponse}
     */
    ArticlesearchJsonGet200ResponseResponse,

    /**
     * The ArticlesearchJsonGet200ResponseResponseMeta model constructor.
     * @property {module:model/ArticlesearchJsonGet200ResponseResponseMeta}
     */
    ArticlesearchJsonGet200ResponseResponseMeta,

    /**
     * The Doc model constructor.
     * @property {module:model/Doc}
     */
    Doc,

    /**
     * The DocByline model constructor.
     * @property {module:model/DocByline}
     */
    DocByline,

    /**
     * The DocHeadline model constructor.
     * @property {module:model/DocHeadline}
     */
    DocHeadline,

    /**
     * The DocKeywords model constructor.
     * @property {module:model/DocKeywords}
     */
    DocKeywords,

    /**
     * The DocMultimediaInner model constructor.
     * @property {module:model/DocMultimediaInner}
     */
    DocMultimediaInner,

    /**
    * The StoriesApi service constructor.
    * @property {module:api/StoriesApi}
    */
    StoriesApi
};
