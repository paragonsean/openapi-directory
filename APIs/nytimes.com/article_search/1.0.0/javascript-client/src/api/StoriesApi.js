/**
 * Article Search API
 * With the Article Search API, you can search New York Times articles from Sept. 18, 1851 to today, retrieving headlines, abstracts, lead paragraphs, links to associated multimedia and other article metadata.     Note: In URI examples and field names, italics indicate placeholders for variables or values. Brackets [ ] indicate optional items. Parentheses ( ) are not a convention â€” when URIs include parentheses, interpret them literally.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ArticlesearchJsonGet200Response from '../model/ArticlesearchJsonGet200Response';

/**
* Stories service.
* @module api/StoriesApi
* @version 1.0.0
*/
export default class StoriesApi {

    /**
    * Constructs a new StoriesApi. 
    * @alias module:api/StoriesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the articlesearchJsonGet operation.
     * @callback module:api/StoriesApi~articlesearchJsonGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ArticlesearchJsonGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Article Search
     * Article Search requests use the following URI structure: 
     * @param {Object} opts Optional parameters
     * @param {String} [q] Search query term. Search is performed on the article body, headline and byline. 
     * @param {String} [fq] \"Filtered search query using standard Lucene syntax.   The filter query can be specified with or without a limiting field: label.   See Filtering Your Search for more information about filtering.\" 
     * @param {String} [beginDate] \"Format: YYYYMMDD   Restricts responses to results with publication dates of the date specified or later.\" 
     * @param {String} [endDate] \"Format: YYYYMMDD   Restricts responses to results with publication dates of the date specified or earlier.\" 
     * @param {module:model/String} [sort] \"By default, search results are sorted by their relevance to the query term (q). Use the sort parameter to sort by pub_date.\" 
     * @param {String} [fl] \"Comma-delimited list of fields (no limit)    Limits the fields returned in your search results. By default (unless you include an fl list in your request), the following fields are returned:       web_url      snippet      lead_paragraph      abstract      print_page      blog      source      multimedia      headline      keywords      pub_date      document_type      news_desk      byline      type_of_material      _id      word_count\" 
     * @param {Boolean} [hl = false)] Enables highlighting in search results. When set to true, the query term (q) is highlighted in the headline and lead_paragraph fields.  Note: If highlighting is enabled, snippet will be returned even if it is not specified in your fl list.\" 
     * @param {Number} [page = 0)] \"The value of page corresponds to a set of 10 results (it does not indicate the starting number of the result set). For example, page=0 corresponds to records 0-9. To return records 10-19, set page to 1, not 10.\" 
     * @param {String} [facetField] Comma-delimited list of facets  Specifies the sets of facet values to include in the facets array at the end of response, which collects the facet values from all the search results. By default no facet fields will be returned. Below is the list of valid facets:  section_name  document_type  type_of_material  source  day_of_week  To learn more about using facets, see Using Facets. 
     * @param {Boolean} [facetFilter = false)] When set to true, facet counts will respect any applied filters (fq, date range, etc.) in addition to the main query term. To filter facet counts, specifying at least one facet_field is required. To learn more about using facets, see Using Facets. 
     * @param {module:api/StoriesApi~articlesearchJsonGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ArticlesearchJsonGet200Response}
     */
    articlesearchJsonGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'q': opts['q'],
        'fq': opts['fq'],
        'begin_date': opts['beginDate'],
        'end_date': opts['endDate'],
        'sort': opts['sort'],
        'fl': opts['fl'],
        'hl': opts['hl'],
        'page': opts['page'],
        'facet_field': opts['facetField'],
        'facet_filter': opts['facetFilter']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apikey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ArticlesearchJsonGet200Response;
      return this.apiClient.callApi(
        '/articlesearch.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
