/**
 * Article Search API
 * With the Article Search API, you can search New York Times articles from Sept. 18, 1851 to today, retrieving headlines, abstracts, lead paragraphs, links to associated multimedia and other article metadata.     Note: In URI examples and field names, italics indicate placeholders for variables or values. Brackets [ ] indicate optional items. Parentheses ( ) are not a convention â€” when URIs include parentheses, interpret them literally.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ArticleSearchApi);
  }
}(this, function(expect, ArticleSearchApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ArticleSearchApi.Doc();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Doc', function() {
    it('should create an instance of Doc', function() {
      // uncomment below and update the code to test Doc
      //var instance = new ArticleSearchApi.Doc();
      //expect(instance).to.be.a(ArticleSearchApi.Doc);
    });

    it('should have the property id (base name: "_id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new ArticleSearchApi.Doc();
      //expect(instance).to.be();
    });

    it('should have the property _abstract (base name: "abstract")', function() {
      // uncomment below and update the code to test the property _abstract
      //var instance = new ArticleSearchApi.Doc();
      //expect(instance).to.be();
    });

    it('should have the property blog (base name: "blog")', function() {
      // uncomment below and update the code to test the property blog
      //var instance = new ArticleSearchApi.Doc();
      //expect(instance).to.be();
    });

    it('should have the property byline (base name: "byline")', function() {
      // uncomment below and update the code to test the property byline
      //var instance = new ArticleSearchApi.Doc();
      //expect(instance).to.be();
    });

    it('should have the property documentType (base name: "document_type")', function() {
      // uncomment below and update the code to test the property documentType
      //var instance = new ArticleSearchApi.Doc();
      //expect(instance).to.be();
    });

    it('should have the property headline (base name: "headline")', function() {
      // uncomment below and update the code to test the property headline
      //var instance = new ArticleSearchApi.Doc();
      //expect(instance).to.be();
    });

    it('should have the property keywords (base name: "keywords")', function() {
      // uncomment below and update the code to test the property keywords
      //var instance = new ArticleSearchApi.Doc();
      //expect(instance).to.be();
    });

    it('should have the property leadParagraph (base name: "lead_paragraph")', function() {
      // uncomment below and update the code to test the property leadParagraph
      //var instance = new ArticleSearchApi.Doc();
      //expect(instance).to.be();
    });

    it('should have the property multimedia (base name: "multimedia")', function() {
      // uncomment below and update the code to test the property multimedia
      //var instance = new ArticleSearchApi.Doc();
      //expect(instance).to.be();
    });

    it('should have the property newsDesk (base name: "news_desk")', function() {
      // uncomment below and update the code to test the property newsDesk
      //var instance = new ArticleSearchApi.Doc();
      //expect(instance).to.be();
    });

    it('should have the property printPage (base name: "print_page")', function() {
      // uncomment below and update the code to test the property printPage
      //var instance = new ArticleSearchApi.Doc();
      //expect(instance).to.be();
    });

    it('should have the property pubDate (base name: "pub_date")', function() {
      // uncomment below and update the code to test the property pubDate
      //var instance = new ArticleSearchApi.Doc();
      //expect(instance).to.be();
    });

    it('should have the property sectionName (base name: "section_name")', function() {
      // uncomment below and update the code to test the property sectionName
      //var instance = new ArticleSearchApi.Doc();
      //expect(instance).to.be();
    });

    it('should have the property slideshowCredits (base name: "slideshow_credits")', function() {
      // uncomment below and update the code to test the property slideshowCredits
      //var instance = new ArticleSearchApi.Doc();
      //expect(instance).to.be();
    });

    it('should have the property snippet (base name: "snippet")', function() {
      // uncomment below and update the code to test the property snippet
      //var instance = new ArticleSearchApi.Doc();
      //expect(instance).to.be();
    });

    it('should have the property source (base name: "source")', function() {
      // uncomment below and update the code to test the property source
      //var instance = new ArticleSearchApi.Doc();
      //expect(instance).to.be();
    });

    it('should have the property subsectionName (base name: "subsection_name")', function() {
      // uncomment below and update the code to test the property subsectionName
      //var instance = new ArticleSearchApi.Doc();
      //expect(instance).to.be();
    });

    it('should have the property typeOfMaterial (base name: "type_of_material")', function() {
      // uncomment below and update the code to test the property typeOfMaterial
      //var instance = new ArticleSearchApi.Doc();
      //expect(instance).to.be();
    });

    it('should have the property webUrl (base name: "web_url")', function() {
      // uncomment below and update the code to test the property webUrl
      //var instance = new ArticleSearchApi.Doc();
      //expect(instance).to.be();
    });

    it('should have the property wordCount (base name: "word_count")', function() {
      // uncomment below and update the code to test the property wordCount
      //var instance = new ArticleSearchApi.Doc();
      //expect(instance).to.be();
    });

  });

}));
