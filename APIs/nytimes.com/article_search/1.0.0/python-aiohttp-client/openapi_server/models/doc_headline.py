# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DocHeadline(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kicker: str=None, main: str=None):
        """DocHeadline - a model defined in OpenAPI

        :param kicker: The kicker of this DocHeadline.
        :param main: The main of this DocHeadline.
        """
        self.openapi_types = {
            'kicker': str,
            'main': str
        }

        self.attribute_map = {
            'kicker': 'kicker',
            'main': 'main'
        }

        self._kicker = kicker
        self._main = main

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DocHeadline':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Doc_headline of this DocHeadline.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kicker(self):
        """Gets the kicker of this DocHeadline.


        :return: The kicker of this DocHeadline.
        :rtype: str
        """
        return self._kicker

    @kicker.setter
    def kicker(self, kicker):
        """Sets the kicker of this DocHeadline.


        :param kicker: The kicker of this DocHeadline.
        :type kicker: str
        """

        self._kicker = kicker

    @property
    def main(self):
        """Gets the main of this DocHeadline.


        :return: The main of this DocHeadline.
        :rtype: str
        """
        return self._main

    @main.setter
    def main(self, main):
        """Sets the main of this DocHeadline.


        :param main: The main of this DocHeadline.
        :type main: str
        """

        self._main = main
