/**
 * Community API
 * Get access to comments from registered users on New York Times articles.  NOTE: This API is deprecated.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GETUserContentUserJson200ResponseResultsCommentsInnerAsset from './GETUserContentUserJson200ResponseResultsCommentsInnerAsset';

/**
 * The GETUserContentUserJson200ResponseResultsCommentsInner model module.
 * @module model/GETUserContentUserJson200ResponseResultsCommentsInner
 * @version 3.0.0
 */
class GETUserContentUserJson200ResponseResultsCommentsInner {
    /**
     * Constructs a new <code>GETUserContentUserJson200ResponseResultsCommentsInner</code>.
     * @alias module:model/GETUserContentUserJson200ResponseResultsCommentsInner
     */
    constructor() { 
        
        GETUserContentUserJson200ResponseResultsCommentsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GETUserContentUserJson200ResponseResultsCommentsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GETUserContentUserJson200ResponseResultsCommentsInner} obj Optional instance to populate.
     * @return {module:model/GETUserContentUserJson200ResponseResultsCommentsInner} The populated <code>GETUserContentUserJson200ResponseResultsCommentsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GETUserContentUserJson200ResponseResultsCommentsInner();

            if (data.hasOwnProperty('approveDate')) {
                obj['approveDate'] = ApiClient.convertToType(data['approveDate'], 'String');
            }
            if (data.hasOwnProperty('asset')) {
                obj['asset'] = GETUserContentUserJson200ResponseResultsCommentsInnerAsset.constructFromObject(data['asset']);
            }
            if (data.hasOwnProperty('commentBody')) {
                obj['commentBody'] = ApiClient.convertToType(data['commentBody'], 'String');
            }
            if (data.hasOwnProperty('commentID')) {
                obj['commentID'] = ApiClient.convertToType(data['commentID'], 'Number');
            }
            if (data.hasOwnProperty('commentSequence')) {
                obj['commentSequence'] = ApiClient.convertToType(data['commentSequence'], 'Number');
            }
            if (data.hasOwnProperty('commentTitle')) {
                obj['commentTitle'] = ApiClient.convertToType(data['commentTitle'], 'String');
            }
            if (data.hasOwnProperty('commentType')) {
                obj['commentType'] = ApiClient.convertToType(data['commentType'], 'String');
            }
            if (data.hasOwnProperty('createDate')) {
                obj['createDate'] = ApiClient.convertToType(data['createDate'], 'String');
            }
            if (data.hasOwnProperty('editorsSelection')) {
                obj['editorsSelection'] = ApiClient.convertToType(data['editorsSelection'], 'Boolean');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], [Object]);
            }
            if (data.hasOwnProperty('parentID')) {
                obj['parentID'] = ApiClient.convertToType(data['parentID'], Object);
            }
            if (data.hasOwnProperty('permid')) {
                obj['permid'] = ApiClient.convertToType(data['permid'], 'Number');
            }
            if (data.hasOwnProperty('picURL')) {
                obj['picURL'] = ApiClient.convertToType(data['picURL'], 'String');
            }
            if (data.hasOwnProperty('recommendations')) {
                obj['recommendations'] = ApiClient.convertToType(data['recommendations'], 'Number');
            }
            if (data.hasOwnProperty('replies')) {
                obj['replies'] = ApiClient.convertToType(data['replies'], [Object]);
            }
            if (data.hasOwnProperty('replyCount')) {
                obj['replyCount'] = ApiClient.convertToType(data['replyCount'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('updateDate')) {
                obj['updateDate'] = ApiClient.convertToType(data['updateDate'], 'String');
            }
            if (data.hasOwnProperty('userDisplayName')) {
                obj['userDisplayName'] = ApiClient.convertToType(data['userDisplayName'], Object);
            }
            if (data.hasOwnProperty('userID')) {
                obj['userID'] = ApiClient.convertToType(data['userID'], 'Number');
            }
            if (data.hasOwnProperty('userLocation')) {
                obj['userLocation'] = ApiClient.convertToType(data['userLocation'], Object);
            }
            if (data.hasOwnProperty('userSubmittedDisplayName')) {
                obj['userSubmittedDisplayName'] = ApiClient.convertToType(data['userSubmittedDisplayName'], 'String');
            }
            if (data.hasOwnProperty('userSubmittedLocation')) {
                obj['userSubmittedLocation'] = ApiClient.convertToType(data['userSubmittedLocation'], 'String');
            }
            if (data.hasOwnProperty('userSubmittedTitle')) {
                obj['userSubmittedTitle'] = ApiClient.convertToType(data['userSubmittedTitle'], Object);
            }
            if (data.hasOwnProperty('userSubmittedURL')) {
                obj['userSubmittedURL'] = ApiClient.convertToType(data['userSubmittedURL'], Object);
            }
            if (data.hasOwnProperty('userTitle')) {
                obj['userTitle'] = ApiClient.convertToType(data['userTitle'], Object);
            }
            if (data.hasOwnProperty('userURL')) {
                obj['userURL'] = ApiClient.convertToType(data['userURL'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GETUserContentUserJson200ResponseResultsCommentsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GETUserContentUserJson200ResponseResultsCommentsInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['approveDate'] && !(typeof data['approveDate'] === 'string' || data['approveDate'] instanceof String)) {
            throw new Error("Expected the field `approveDate` to be a primitive type in the JSON string but got " + data['approveDate']);
        }
        // validate the optional field `asset`
        if (data['asset']) { // data not null
          GETUserContentUserJson200ResponseResultsCommentsInnerAsset.validateJSON(data['asset']);
        }
        // ensure the json data is a string
        if (data['commentBody'] && !(typeof data['commentBody'] === 'string' || data['commentBody'] instanceof String)) {
            throw new Error("Expected the field `commentBody` to be a primitive type in the JSON string but got " + data['commentBody']);
        }
        // ensure the json data is a string
        if (data['commentTitle'] && !(typeof data['commentTitle'] === 'string' || data['commentTitle'] instanceof String)) {
            throw new Error("Expected the field `commentTitle` to be a primitive type in the JSON string but got " + data['commentTitle']);
        }
        // ensure the json data is a string
        if (data['commentType'] && !(typeof data['commentType'] === 'string' || data['commentType'] instanceof String)) {
            throw new Error("Expected the field `commentType` to be a primitive type in the JSON string but got " + data['commentType']);
        }
        // ensure the json data is a string
        if (data['createDate'] && !(typeof data['createDate'] === 'string' || data['createDate'] instanceof String)) {
            throw new Error("Expected the field `createDate` to be a primitive type in the JSON string but got " + data['createDate']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['labels'])) {
            throw new Error("Expected the field `labels` to be an array in the JSON data but got " + data['labels']);
        }
        // ensure the json data is a string
        if (data['picURL'] && !(typeof data['picURL'] === 'string' || data['picURL'] instanceof String)) {
            throw new Error("Expected the field `picURL` to be a primitive type in the JSON string but got " + data['picURL']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['replies'])) {
            throw new Error("Expected the field `replies` to be an array in the JSON data but got " + data['replies']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['updateDate'] && !(typeof data['updateDate'] === 'string' || data['updateDate'] instanceof String)) {
            throw new Error("Expected the field `updateDate` to be a primitive type in the JSON string but got " + data['updateDate']);
        }
        // ensure the json data is a string
        if (data['userSubmittedDisplayName'] && !(typeof data['userSubmittedDisplayName'] === 'string' || data['userSubmittedDisplayName'] instanceof String)) {
            throw new Error("Expected the field `userSubmittedDisplayName` to be a primitive type in the JSON string but got " + data['userSubmittedDisplayName']);
        }
        // ensure the json data is a string
        if (data['userSubmittedLocation'] && !(typeof data['userSubmittedLocation'] === 'string' || data['userSubmittedLocation'] instanceof String)) {
            throw new Error("Expected the field `userSubmittedLocation` to be a primitive type in the JSON string but got " + data['userSubmittedLocation']);
        }

        return true;
    }


}



/**
 * @member {String} approveDate
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['approveDate'] = undefined;

/**
 * @member {module:model/GETUserContentUserJson200ResponseResultsCommentsInnerAsset} asset
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['asset'] = undefined;

/**
 * @member {String} commentBody
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['commentBody'] = undefined;

/**
 * @member {Number} commentID
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['commentID'] = undefined;

/**
 * @member {Number} commentSequence
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['commentSequence'] = undefined;

/**
 * @member {String} commentTitle
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['commentTitle'] = undefined;

/**
 * @member {String} commentType
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['commentType'] = undefined;

/**
 * @member {String} createDate
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['createDate'] = undefined;

/**
 * @member {Boolean} editorsSelection
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['editorsSelection'] = undefined;

/**
 * @member {Array.<Object>} labels
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['labels'] = undefined;

/**
 * @member {Object} parentID
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['parentID'] = undefined;

/**
 * @member {Number} permid
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['permid'] = undefined;

/**
 * @member {String} picURL
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['picURL'] = undefined;

/**
 * @member {Number} recommendations
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['recommendations'] = undefined;

/**
 * @member {Array.<Object>} replies
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['replies'] = undefined;

/**
 * @member {Number} replyCount
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['replyCount'] = undefined;

/**
 * @member {String} status
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['status'] = undefined;

/**
 * @member {String} updateDate
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['updateDate'] = undefined;

/**
 * @member {Object} userDisplayName
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['userDisplayName'] = undefined;

/**
 * @member {Number} userID
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['userID'] = undefined;

/**
 * @member {Object} userLocation
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['userLocation'] = undefined;

/**
 * @member {String} userSubmittedDisplayName
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['userSubmittedDisplayName'] = undefined;

/**
 * @member {String} userSubmittedLocation
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['userSubmittedLocation'] = undefined;

/**
 * @member {Object} userSubmittedTitle
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['userSubmittedTitle'] = undefined;

/**
 * @member {Object} userSubmittedURL
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['userSubmittedURL'] = undefined;

/**
 * @member {Object} userTitle
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['userTitle'] = undefined;

/**
 * @member {Object} userURL
 */
GETUserContentUserJson200ResponseResultsCommentsInner.prototype['userURL'] = undefined;






export default GETUserContentUserJson200ResponseResultsCommentsInner;

