/**
 * Community API
 * Get access to comments from registered users on New York Times articles.  NOTE: This API is deprecated.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GETUserContentByDateJson200Response from '../model/GETUserContentByDateJson200Response';
import GETUserContentRecentJson200Response from '../model/GETUserContentRecentJson200Response';
import GETUserContentUrlJson200Response from '../model/GETUserContentUrlJson200Response';
import GETUserContentUserJson200Response from '../model/GETUserContentUserJson200Response';

/**
* Default service.
* @module api/DefaultApi
* @version 3.0.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the gETUserContentByDateJson operation.
     * @callback module:api/DefaultApi~gETUserContentByDateJsonCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GETUserContentByDateJson200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Comments by Date
     * 
     * @param {Object} opts Optional parameters
     * @param {String} [date] 
     * @param {module:api/DefaultApi~gETUserContentByDateJsonCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GETUserContentByDateJson200Response}
     */
    gETUserContentByDateJson(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'date': opts['date']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api-key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GETUserContentByDateJson200Response;
      return this.apiClient.callApi(
        '/user-content/by-date.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETUserContentRecentJson operation.
     * @callback module:api/DefaultApi~gETUserContentRecentJsonCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GETUserContentRecentJson200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Recent User Comments
     * 
     * @param {module:api/DefaultApi~gETUserContentRecentJsonCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GETUserContentRecentJson200Response}
     */
    gETUserContentRecentJson(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api-key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GETUserContentRecentJson200Response;
      return this.apiClient.callApi(
        '/user-content/recent.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETUserContentUrlJson operation.
     * @callback module:api/DefaultApi~gETUserContentUrlJsonCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GETUserContentUrlJson200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Comments by URL
     * 
     * @param {Object} opts Optional parameters
     * @param {String} [url] 
     * @param {module:api/DefaultApi~gETUserContentUrlJsonCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GETUserContentUrlJson200Response}
     */
    gETUserContentUrlJson(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'url': opts['url']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api-key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GETUserContentUrlJson200Response;
      return this.apiClient.callApi(
        '/user-content/url.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gETUserContentUserJson operation.
     * @callback module:api/DefaultApi~gETUserContentUserJsonCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GETUserContentUserJson200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Comments by User
     * 
     * @param {Object} opts Optional parameters
     * @param {Number} [userID] 
     * @param {module:api/DefaultApi~gETUserContentUserJsonCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GETUserContentUserJson200Response}
     */
    gETUserContentUserJson(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'userID': opts['userID']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api-key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GETUserContentUserJson200Response;
      return this.apiClient.callApi(
        '/user-content/user.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
