/**
 * Community API
 * Get access to comments from registered users on New York Times articles.  NOTE: This API is deprecated.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CommunityApi);
  }
}(this, function(expect, CommunityApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GETUserContentUrlJson200ResponseResultsCommentsInner', function() {
    it('should create an instance of GETUserContentUrlJson200ResponseResultsCommentsInner', function() {
      // uncomment below and update the code to test GETUserContentUrlJson200ResponseResultsCommentsInner
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be.a(CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner);
    });

    it('should have the property approveDate (base name: "approveDate")', function() {
      // uncomment below and update the code to test the property approveDate
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property commentBody (base name: "commentBody")', function() {
      // uncomment below and update the code to test the property commentBody
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property commentID (base name: "commentID")', function() {
      // uncomment below and update the code to test the property commentID
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property commentSequence (base name: "commentSequence")', function() {
      // uncomment below and update the code to test the property commentSequence
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property commentTitle (base name: "commentTitle")', function() {
      // uncomment below and update the code to test the property commentTitle
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property commentType (base name: "commentType")', function() {
      // uncomment below and update the code to test the property commentType
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property createDate (base name: "createDate")', function() {
      // uncomment below and update the code to test the property createDate
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property depth (base name: "depth")', function() {
      // uncomment below and update the code to test the property depth
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property editorsSelection (base name: "editorsSelection")', function() {
      // uncomment below and update the code to test the property editorsSelection
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property parentID (base name: "parentID")', function() {
      // uncomment below and update the code to test the property parentID
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property parentUserDisplayName (base name: "parentUserDisplayName")', function() {
      // uncomment below and update the code to test the property parentUserDisplayName
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property permID (base name: "permID")', function() {
      // uncomment below and update the code to test the property permID
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property picURL (base name: "picURL")', function() {
      // uncomment below and update the code to test the property picURL
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property recommendations (base name: "recommendations")', function() {
      // uncomment below and update the code to test the property recommendations
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property recommendedFlag (base name: "recommendedFlag")', function() {
      // uncomment below and update the code to test the property recommendedFlag
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property replies (base name: "replies")', function() {
      // uncomment below and update the code to test the property replies
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property replyCount (base name: "replyCount")', function() {
      // uncomment below and update the code to test the property replyCount
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property reportAbuseFlag (base name: "reportAbuseFlag")', function() {
      // uncomment below and update the code to test the property reportAbuseFlag
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property sharing (base name: "sharing")', function() {
      // uncomment below and update the code to test the property sharing
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property timespeople (base name: "timespeople")', function() {
      // uncomment below and update the code to test the property timespeople
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property trusted (base name: "trusted")', function() {
      // uncomment below and update the code to test the property trusted
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property updateDate (base name: "updateDate")', function() {
      // uncomment below and update the code to test the property updateDate
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property userDisplayName (base name: "userDisplayName")', function() {
      // uncomment below and update the code to test the property userDisplayName
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property userID (base name: "userID")', function() {
      // uncomment below and update the code to test the property userID
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property userLocation (base name: "userLocation")', function() {
      // uncomment below and update the code to test the property userLocation
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property userTitle (base name: "userTitle")', function() {
      // uncomment below and update the code to test the property userTitle
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

    it('should have the property userURL (base name: "userURL")', function() {
      // uncomment below and update the code to test the property userURL
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResultsCommentsInner();
      //expect(instance).to.be();
    });

  });

}));
