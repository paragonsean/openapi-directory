/**
 * Community API
 * Get access to comments from registered users on New York Times articles.  NOTE: This API is deprecated.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CommunityApi);
  }
}(this, function(expect, CommunityApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CommunityApi.GETUserContentUrlJson200ResponseResults();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GETUserContentUrlJson200ResponseResults', function() {
    it('should create an instance of GETUserContentUrlJson200ResponseResults', function() {
      // uncomment below and update the code to test GETUserContentUrlJson200ResponseResults
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResults();
      //expect(instance).to.be.a(CommunityApi.GETUserContentUrlJson200ResponseResults);
    });

    it('should have the property apiTimestamp (base name: "api_timestamp")', function() {
      // uncomment below and update the code to test the property apiTimestamp
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResults();
      //expect(instance).to.be();
    });

    it('should have the property callerID (base name: "callerID")', function() {
      // uncomment below and update the code to test the property callerID
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResults();
      //expect(instance).to.be();
    });

    it('should have the property comments (base name: "comments")', function() {
      // uncomment below and update the code to test the property comments
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResults();
      //expect(instance).to.be();
    });

    it('should have the property depthLimit (base name: "depthLimit")', function() {
      // uncomment below and update the code to test the property depthLimit
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResults();
      //expect(instance).to.be();
    });

    it('should have the property filter (base name: "filter")', function() {
      // uncomment below and update the code to test the property filter
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResults();
      //expect(instance).to.be();
    });

    it('should have the property page (base name: "page")', function() {
      // uncomment below and update the code to test the property page
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResults();
      //expect(instance).to.be();
    });

    it('should have the property replyLimit (base name: "replyLimit")', function() {
      // uncomment below and update the code to test the property replyLimit
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResults();
      //expect(instance).to.be();
    });

    it('should have the property sort (base name: "sort")', function() {
      // uncomment below and update the code to test the property sort
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResults();
      //expect(instance).to.be();
    });

    it('should have the property totalCommentsFound (base name: "totalCommentsFound")', function() {
      // uncomment below and update the code to test the property totalCommentsFound
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResults();
      //expect(instance).to.be();
    });

    it('should have the property totalCommentsReturned (base name: "totalCommentsReturned")', function() {
      // uncomment below and update the code to test the property totalCommentsReturned
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResults();
      //expect(instance).to.be();
    });

    it('should have the property totalEditorsSelectionFound (base name: "totalEditorsSelectionFound")', function() {
      // uncomment below and update the code to test the property totalEditorsSelectionFound
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResults();
      //expect(instance).to.be();
    });

    it('should have the property totalEditorsSelectionReturned (base name: "totalEditorsSelectionReturned")', function() {
      // uncomment below and update the code to test the property totalEditorsSelectionReturned
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResults();
      //expect(instance).to.be();
    });

    it('should have the property totalParentCommentsFound (base name: "totalParentCommentsFound")', function() {
      // uncomment below and update the code to test the property totalParentCommentsFound
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResults();
      //expect(instance).to.be();
    });

    it('should have the property totalParentCommentsReturned (base name: "totalParentCommentsReturned")', function() {
      // uncomment below and update the code to test the property totalParentCommentsReturned
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResults();
      //expect(instance).to.be();
    });

    it('should have the property totalRecommendationsFound (base name: "totalRecommendationsFound")', function() {
      // uncomment below and update the code to test the property totalRecommendationsFound
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResults();
      //expect(instance).to.be();
    });

    it('should have the property totalRecommendationsReturned (base name: "totalRecommendationsReturned")', function() {
      // uncomment below and update the code to test the property totalRecommendationsReturned
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResults();
      //expect(instance).to.be();
    });

    it('should have the property totalReplyCommentsFound (base name: "totalReplyCommentsFound")', function() {
      // uncomment below and update the code to test the property totalReplyCommentsFound
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResults();
      //expect(instance).to.be();
    });

    it('should have the property totalReplyCommentsReturned (base name: "totalReplyCommentsReturned")', function() {
      // uncomment below and update the code to test the property totalReplyCommentsReturned
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResults();
      //expect(instance).to.be();
    });

    it('should have the property totalReporterReplyCommentsFound (base name: "totalReporterReplyCommentsFound")', function() {
      // uncomment below and update the code to test the property totalReporterReplyCommentsFound
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResults();
      //expect(instance).to.be();
    });

    it('should have the property totalReporterReplyCommentsReturned (base name: "totalReporterReplyCommentsReturned")', function() {
      // uncomment below and update the code to test the property totalReporterReplyCommentsReturned
      //var instance = new CommunityApi.GETUserContentUrlJson200ResponseResults();
      //expect(instance).to.be();
    });

  });

}));
