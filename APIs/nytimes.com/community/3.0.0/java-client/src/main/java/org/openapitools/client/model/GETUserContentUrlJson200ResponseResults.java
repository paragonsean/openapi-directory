/*
 * Community API
 * Get access to comments from registered users on New York Times articles.  NOTE: This API is deprecated.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GETUserContentUrlJson200ResponseResultsCommentsInner;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GETUserContentUrlJson200ResponseResults
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:23:30.780759-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GETUserContentUrlJson200ResponseResults {
  public static final String SERIALIZED_NAME_API_TIMESTAMP = "api_timestamp";
  @SerializedName(SERIALIZED_NAME_API_TIMESTAMP)
  private String apiTimestamp;

  public static final String SERIALIZED_NAME_CALLER_I_D = "callerID";
  @SerializedName(SERIALIZED_NAME_CALLER_I_D)
  private Object callerID = null;

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private List<GETUserContentUrlJson200ResponseResultsCommentsInner> comments = new ArrayList<>();

  public static final String SERIALIZED_NAME_DEPTH_LIMIT = "depthLimit";
  @SerializedName(SERIALIZED_NAME_DEPTH_LIMIT)
  private Integer depthLimit;

  public static final String SERIALIZED_NAME_FILTER = "filter";
  @SerializedName(SERIALIZED_NAME_FILTER)
  private String filter;

  public static final String SERIALIZED_NAME_PAGE = "page";
  @SerializedName(SERIALIZED_NAME_PAGE)
  private Integer page;

  public static final String SERIALIZED_NAME_REPLY_LIMIT = "replyLimit";
  @SerializedName(SERIALIZED_NAME_REPLY_LIMIT)
  private Integer replyLimit;

  public static final String SERIALIZED_NAME_SORT = "sort";
  @SerializedName(SERIALIZED_NAME_SORT)
  private String sort;

  public static final String SERIALIZED_NAME_TOTAL_COMMENTS_FOUND = "totalCommentsFound";
  @SerializedName(SERIALIZED_NAME_TOTAL_COMMENTS_FOUND)
  private Integer totalCommentsFound;

  public static final String SERIALIZED_NAME_TOTAL_COMMENTS_RETURNED = "totalCommentsReturned";
  @SerializedName(SERIALIZED_NAME_TOTAL_COMMENTS_RETURNED)
  private Integer totalCommentsReturned;

  public static final String SERIALIZED_NAME_TOTAL_EDITORS_SELECTION_FOUND = "totalEditorsSelectionFound";
  @SerializedName(SERIALIZED_NAME_TOTAL_EDITORS_SELECTION_FOUND)
  private Integer totalEditorsSelectionFound;

  public static final String SERIALIZED_NAME_TOTAL_EDITORS_SELECTION_RETURNED = "totalEditorsSelectionReturned";
  @SerializedName(SERIALIZED_NAME_TOTAL_EDITORS_SELECTION_RETURNED)
  private Integer totalEditorsSelectionReturned;

  public static final String SERIALIZED_NAME_TOTAL_PARENT_COMMENTS_FOUND = "totalParentCommentsFound";
  @SerializedName(SERIALIZED_NAME_TOTAL_PARENT_COMMENTS_FOUND)
  private Integer totalParentCommentsFound;

  public static final String SERIALIZED_NAME_TOTAL_PARENT_COMMENTS_RETURNED = "totalParentCommentsReturned";
  @SerializedName(SERIALIZED_NAME_TOTAL_PARENT_COMMENTS_RETURNED)
  private Integer totalParentCommentsReturned;

  public static final String SERIALIZED_NAME_TOTAL_RECOMMENDATIONS_FOUND = "totalRecommendationsFound";
  @SerializedName(SERIALIZED_NAME_TOTAL_RECOMMENDATIONS_FOUND)
  private Integer totalRecommendationsFound;

  public static final String SERIALIZED_NAME_TOTAL_RECOMMENDATIONS_RETURNED = "totalRecommendationsReturned";
  @SerializedName(SERIALIZED_NAME_TOTAL_RECOMMENDATIONS_RETURNED)
  private Integer totalRecommendationsReturned;

  public static final String SERIALIZED_NAME_TOTAL_REPLY_COMMENTS_FOUND = "totalReplyCommentsFound";
  @SerializedName(SERIALIZED_NAME_TOTAL_REPLY_COMMENTS_FOUND)
  private Integer totalReplyCommentsFound;

  public static final String SERIALIZED_NAME_TOTAL_REPLY_COMMENTS_RETURNED = "totalReplyCommentsReturned";
  @SerializedName(SERIALIZED_NAME_TOTAL_REPLY_COMMENTS_RETURNED)
  private Integer totalReplyCommentsReturned;

  public static final String SERIALIZED_NAME_TOTAL_REPORTER_REPLY_COMMENTS_FOUND = "totalReporterReplyCommentsFound";
  @SerializedName(SERIALIZED_NAME_TOTAL_REPORTER_REPLY_COMMENTS_FOUND)
  private Integer totalReporterReplyCommentsFound;

  public static final String SERIALIZED_NAME_TOTAL_REPORTER_REPLY_COMMENTS_RETURNED = "totalReporterReplyCommentsReturned";
  @SerializedName(SERIALIZED_NAME_TOTAL_REPORTER_REPLY_COMMENTS_RETURNED)
  private Integer totalReporterReplyCommentsReturned;

  public GETUserContentUrlJson200ResponseResults() {
  }

  public GETUserContentUrlJson200ResponseResults apiTimestamp(String apiTimestamp) {
    this.apiTimestamp = apiTimestamp;
    return this;
  }

  /**
   * Get apiTimestamp
   * @return apiTimestamp
   */
  @javax.annotation.Nullable
  public String getApiTimestamp() {
    return apiTimestamp;
  }

  public void setApiTimestamp(String apiTimestamp) {
    this.apiTimestamp = apiTimestamp;
  }


  public GETUserContentUrlJson200ResponseResults callerID(Object callerID) {
    this.callerID = callerID;
    return this;
  }

  /**
   * Get callerID
   * @return callerID
   */
  @javax.annotation.Nullable
  public Object getCallerID() {
    return callerID;
  }

  public void setCallerID(Object callerID) {
    this.callerID = callerID;
  }


  public GETUserContentUrlJson200ResponseResults comments(List<GETUserContentUrlJson200ResponseResultsCommentsInner> comments) {
    this.comments = comments;
    return this;
  }

  public GETUserContentUrlJson200ResponseResults addCommentsItem(GETUserContentUrlJson200ResponseResultsCommentsInner commentsItem) {
    if (this.comments == null) {
      this.comments = new ArrayList<>();
    }
    this.comments.add(commentsItem);
    return this;
  }

  /**
   * Get comments
   * @return comments
   */
  @javax.annotation.Nullable
  public List<GETUserContentUrlJson200ResponseResultsCommentsInner> getComments() {
    return comments;
  }

  public void setComments(List<GETUserContentUrlJson200ResponseResultsCommentsInner> comments) {
    this.comments = comments;
  }


  public GETUserContentUrlJson200ResponseResults depthLimit(Integer depthLimit) {
    this.depthLimit = depthLimit;
    return this;
  }

  /**
   * Get depthLimit
   * @return depthLimit
   */
  @javax.annotation.Nullable
  public Integer getDepthLimit() {
    return depthLimit;
  }

  public void setDepthLimit(Integer depthLimit) {
    this.depthLimit = depthLimit;
  }


  public GETUserContentUrlJson200ResponseResults filter(String filter) {
    this.filter = filter;
    return this;
  }

  /**
   * Get filter
   * @return filter
   */
  @javax.annotation.Nullable
  public String getFilter() {
    return filter;
  }

  public void setFilter(String filter) {
    this.filter = filter;
  }


  public GETUserContentUrlJson200ResponseResults page(Integer page) {
    this.page = page;
    return this;
  }

  /**
   * Get page
   * @return page
   */
  @javax.annotation.Nullable
  public Integer getPage() {
    return page;
  }

  public void setPage(Integer page) {
    this.page = page;
  }


  public GETUserContentUrlJson200ResponseResults replyLimit(Integer replyLimit) {
    this.replyLimit = replyLimit;
    return this;
  }

  /**
   * Get replyLimit
   * @return replyLimit
   */
  @javax.annotation.Nullable
  public Integer getReplyLimit() {
    return replyLimit;
  }

  public void setReplyLimit(Integer replyLimit) {
    this.replyLimit = replyLimit;
  }


  public GETUserContentUrlJson200ResponseResults sort(String sort) {
    this.sort = sort;
    return this;
  }

  /**
   * Get sort
   * @return sort
   */
  @javax.annotation.Nullable
  public String getSort() {
    return sort;
  }

  public void setSort(String sort) {
    this.sort = sort;
  }


  public GETUserContentUrlJson200ResponseResults totalCommentsFound(Integer totalCommentsFound) {
    this.totalCommentsFound = totalCommentsFound;
    return this;
  }

  /**
   * Get totalCommentsFound
   * @return totalCommentsFound
   */
  @javax.annotation.Nullable
  public Integer getTotalCommentsFound() {
    return totalCommentsFound;
  }

  public void setTotalCommentsFound(Integer totalCommentsFound) {
    this.totalCommentsFound = totalCommentsFound;
  }


  public GETUserContentUrlJson200ResponseResults totalCommentsReturned(Integer totalCommentsReturned) {
    this.totalCommentsReturned = totalCommentsReturned;
    return this;
  }

  /**
   * Get totalCommentsReturned
   * @return totalCommentsReturned
   */
  @javax.annotation.Nullable
  public Integer getTotalCommentsReturned() {
    return totalCommentsReturned;
  }

  public void setTotalCommentsReturned(Integer totalCommentsReturned) {
    this.totalCommentsReturned = totalCommentsReturned;
  }


  public GETUserContentUrlJson200ResponseResults totalEditorsSelectionFound(Integer totalEditorsSelectionFound) {
    this.totalEditorsSelectionFound = totalEditorsSelectionFound;
    return this;
  }

  /**
   * Get totalEditorsSelectionFound
   * @return totalEditorsSelectionFound
   */
  @javax.annotation.Nullable
  public Integer getTotalEditorsSelectionFound() {
    return totalEditorsSelectionFound;
  }

  public void setTotalEditorsSelectionFound(Integer totalEditorsSelectionFound) {
    this.totalEditorsSelectionFound = totalEditorsSelectionFound;
  }


  public GETUserContentUrlJson200ResponseResults totalEditorsSelectionReturned(Integer totalEditorsSelectionReturned) {
    this.totalEditorsSelectionReturned = totalEditorsSelectionReturned;
    return this;
  }

  /**
   * Get totalEditorsSelectionReturned
   * @return totalEditorsSelectionReturned
   */
  @javax.annotation.Nullable
  public Integer getTotalEditorsSelectionReturned() {
    return totalEditorsSelectionReturned;
  }

  public void setTotalEditorsSelectionReturned(Integer totalEditorsSelectionReturned) {
    this.totalEditorsSelectionReturned = totalEditorsSelectionReturned;
  }


  public GETUserContentUrlJson200ResponseResults totalParentCommentsFound(Integer totalParentCommentsFound) {
    this.totalParentCommentsFound = totalParentCommentsFound;
    return this;
  }

  /**
   * Get totalParentCommentsFound
   * @return totalParentCommentsFound
   */
  @javax.annotation.Nullable
  public Integer getTotalParentCommentsFound() {
    return totalParentCommentsFound;
  }

  public void setTotalParentCommentsFound(Integer totalParentCommentsFound) {
    this.totalParentCommentsFound = totalParentCommentsFound;
  }


  public GETUserContentUrlJson200ResponseResults totalParentCommentsReturned(Integer totalParentCommentsReturned) {
    this.totalParentCommentsReturned = totalParentCommentsReturned;
    return this;
  }

  /**
   * Get totalParentCommentsReturned
   * @return totalParentCommentsReturned
   */
  @javax.annotation.Nullable
  public Integer getTotalParentCommentsReturned() {
    return totalParentCommentsReturned;
  }

  public void setTotalParentCommentsReturned(Integer totalParentCommentsReturned) {
    this.totalParentCommentsReturned = totalParentCommentsReturned;
  }


  public GETUserContentUrlJson200ResponseResults totalRecommendationsFound(Integer totalRecommendationsFound) {
    this.totalRecommendationsFound = totalRecommendationsFound;
    return this;
  }

  /**
   * Get totalRecommendationsFound
   * @return totalRecommendationsFound
   */
  @javax.annotation.Nullable
  public Integer getTotalRecommendationsFound() {
    return totalRecommendationsFound;
  }

  public void setTotalRecommendationsFound(Integer totalRecommendationsFound) {
    this.totalRecommendationsFound = totalRecommendationsFound;
  }


  public GETUserContentUrlJson200ResponseResults totalRecommendationsReturned(Integer totalRecommendationsReturned) {
    this.totalRecommendationsReturned = totalRecommendationsReturned;
    return this;
  }

  /**
   * Get totalRecommendationsReturned
   * @return totalRecommendationsReturned
   */
  @javax.annotation.Nullable
  public Integer getTotalRecommendationsReturned() {
    return totalRecommendationsReturned;
  }

  public void setTotalRecommendationsReturned(Integer totalRecommendationsReturned) {
    this.totalRecommendationsReturned = totalRecommendationsReturned;
  }


  public GETUserContentUrlJson200ResponseResults totalReplyCommentsFound(Integer totalReplyCommentsFound) {
    this.totalReplyCommentsFound = totalReplyCommentsFound;
    return this;
  }

  /**
   * Get totalReplyCommentsFound
   * @return totalReplyCommentsFound
   */
  @javax.annotation.Nullable
  public Integer getTotalReplyCommentsFound() {
    return totalReplyCommentsFound;
  }

  public void setTotalReplyCommentsFound(Integer totalReplyCommentsFound) {
    this.totalReplyCommentsFound = totalReplyCommentsFound;
  }


  public GETUserContentUrlJson200ResponseResults totalReplyCommentsReturned(Integer totalReplyCommentsReturned) {
    this.totalReplyCommentsReturned = totalReplyCommentsReturned;
    return this;
  }

  /**
   * Get totalReplyCommentsReturned
   * @return totalReplyCommentsReturned
   */
  @javax.annotation.Nullable
  public Integer getTotalReplyCommentsReturned() {
    return totalReplyCommentsReturned;
  }

  public void setTotalReplyCommentsReturned(Integer totalReplyCommentsReturned) {
    this.totalReplyCommentsReturned = totalReplyCommentsReturned;
  }


  public GETUserContentUrlJson200ResponseResults totalReporterReplyCommentsFound(Integer totalReporterReplyCommentsFound) {
    this.totalReporterReplyCommentsFound = totalReporterReplyCommentsFound;
    return this;
  }

  /**
   * Get totalReporterReplyCommentsFound
   * @return totalReporterReplyCommentsFound
   */
  @javax.annotation.Nullable
  public Integer getTotalReporterReplyCommentsFound() {
    return totalReporterReplyCommentsFound;
  }

  public void setTotalReporterReplyCommentsFound(Integer totalReporterReplyCommentsFound) {
    this.totalReporterReplyCommentsFound = totalReporterReplyCommentsFound;
  }


  public GETUserContentUrlJson200ResponseResults totalReporterReplyCommentsReturned(Integer totalReporterReplyCommentsReturned) {
    this.totalReporterReplyCommentsReturned = totalReporterReplyCommentsReturned;
    return this;
  }

  /**
   * Get totalReporterReplyCommentsReturned
   * @return totalReporterReplyCommentsReturned
   */
  @javax.annotation.Nullable
  public Integer getTotalReporterReplyCommentsReturned() {
    return totalReporterReplyCommentsReturned;
  }

  public void setTotalReporterReplyCommentsReturned(Integer totalReporterReplyCommentsReturned) {
    this.totalReporterReplyCommentsReturned = totalReporterReplyCommentsReturned;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GETUserContentUrlJson200ResponseResults geTUserContentUrlJson200ResponseResults = (GETUserContentUrlJson200ResponseResults) o;
    return Objects.equals(this.apiTimestamp, geTUserContentUrlJson200ResponseResults.apiTimestamp) &&
        Objects.equals(this.callerID, geTUserContentUrlJson200ResponseResults.callerID) &&
        Objects.equals(this.comments, geTUserContentUrlJson200ResponseResults.comments) &&
        Objects.equals(this.depthLimit, geTUserContentUrlJson200ResponseResults.depthLimit) &&
        Objects.equals(this.filter, geTUserContentUrlJson200ResponseResults.filter) &&
        Objects.equals(this.page, geTUserContentUrlJson200ResponseResults.page) &&
        Objects.equals(this.replyLimit, geTUserContentUrlJson200ResponseResults.replyLimit) &&
        Objects.equals(this.sort, geTUserContentUrlJson200ResponseResults.sort) &&
        Objects.equals(this.totalCommentsFound, geTUserContentUrlJson200ResponseResults.totalCommentsFound) &&
        Objects.equals(this.totalCommentsReturned, geTUserContentUrlJson200ResponseResults.totalCommentsReturned) &&
        Objects.equals(this.totalEditorsSelectionFound, geTUserContentUrlJson200ResponseResults.totalEditorsSelectionFound) &&
        Objects.equals(this.totalEditorsSelectionReturned, geTUserContentUrlJson200ResponseResults.totalEditorsSelectionReturned) &&
        Objects.equals(this.totalParentCommentsFound, geTUserContentUrlJson200ResponseResults.totalParentCommentsFound) &&
        Objects.equals(this.totalParentCommentsReturned, geTUserContentUrlJson200ResponseResults.totalParentCommentsReturned) &&
        Objects.equals(this.totalRecommendationsFound, geTUserContentUrlJson200ResponseResults.totalRecommendationsFound) &&
        Objects.equals(this.totalRecommendationsReturned, geTUserContentUrlJson200ResponseResults.totalRecommendationsReturned) &&
        Objects.equals(this.totalReplyCommentsFound, geTUserContentUrlJson200ResponseResults.totalReplyCommentsFound) &&
        Objects.equals(this.totalReplyCommentsReturned, geTUserContentUrlJson200ResponseResults.totalReplyCommentsReturned) &&
        Objects.equals(this.totalReporterReplyCommentsFound, geTUserContentUrlJson200ResponseResults.totalReporterReplyCommentsFound) &&
        Objects.equals(this.totalReporterReplyCommentsReturned, geTUserContentUrlJson200ResponseResults.totalReporterReplyCommentsReturned);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiTimestamp, callerID, comments, depthLimit, filter, page, replyLimit, sort, totalCommentsFound, totalCommentsReturned, totalEditorsSelectionFound, totalEditorsSelectionReturned, totalParentCommentsFound, totalParentCommentsReturned, totalRecommendationsFound, totalRecommendationsReturned, totalReplyCommentsFound, totalReplyCommentsReturned, totalReporterReplyCommentsFound, totalReporterReplyCommentsReturned);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GETUserContentUrlJson200ResponseResults {\n");
    sb.append("    apiTimestamp: ").append(toIndentedString(apiTimestamp)).append("\n");
    sb.append("    callerID: ").append(toIndentedString(callerID)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    depthLimit: ").append(toIndentedString(depthLimit)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    replyLimit: ").append(toIndentedString(replyLimit)).append("\n");
    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
    sb.append("    totalCommentsFound: ").append(toIndentedString(totalCommentsFound)).append("\n");
    sb.append("    totalCommentsReturned: ").append(toIndentedString(totalCommentsReturned)).append("\n");
    sb.append("    totalEditorsSelectionFound: ").append(toIndentedString(totalEditorsSelectionFound)).append("\n");
    sb.append("    totalEditorsSelectionReturned: ").append(toIndentedString(totalEditorsSelectionReturned)).append("\n");
    sb.append("    totalParentCommentsFound: ").append(toIndentedString(totalParentCommentsFound)).append("\n");
    sb.append("    totalParentCommentsReturned: ").append(toIndentedString(totalParentCommentsReturned)).append("\n");
    sb.append("    totalRecommendationsFound: ").append(toIndentedString(totalRecommendationsFound)).append("\n");
    sb.append("    totalRecommendationsReturned: ").append(toIndentedString(totalRecommendationsReturned)).append("\n");
    sb.append("    totalReplyCommentsFound: ").append(toIndentedString(totalReplyCommentsFound)).append("\n");
    sb.append("    totalReplyCommentsReturned: ").append(toIndentedString(totalReplyCommentsReturned)).append("\n");
    sb.append("    totalReporterReplyCommentsFound: ").append(toIndentedString(totalReporterReplyCommentsFound)).append("\n");
    sb.append("    totalReporterReplyCommentsReturned: ").append(toIndentedString(totalReporterReplyCommentsReturned)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("api_timestamp");
    openapiFields.add("callerID");
    openapiFields.add("comments");
    openapiFields.add("depthLimit");
    openapiFields.add("filter");
    openapiFields.add("page");
    openapiFields.add("replyLimit");
    openapiFields.add("sort");
    openapiFields.add("totalCommentsFound");
    openapiFields.add("totalCommentsReturned");
    openapiFields.add("totalEditorsSelectionFound");
    openapiFields.add("totalEditorsSelectionReturned");
    openapiFields.add("totalParentCommentsFound");
    openapiFields.add("totalParentCommentsReturned");
    openapiFields.add("totalRecommendationsFound");
    openapiFields.add("totalRecommendationsReturned");
    openapiFields.add("totalReplyCommentsFound");
    openapiFields.add("totalReplyCommentsReturned");
    openapiFields.add("totalReporterReplyCommentsFound");
    openapiFields.add("totalReporterReplyCommentsReturned");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GETUserContentUrlJson200ResponseResults
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GETUserContentUrlJson200ResponseResults.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GETUserContentUrlJson200ResponseResults is not found in the empty JSON string", GETUserContentUrlJson200ResponseResults.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GETUserContentUrlJson200ResponseResults.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GETUserContentUrlJson200ResponseResults` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("api_timestamp") != null && !jsonObj.get("api_timestamp").isJsonNull()) && !jsonObj.get("api_timestamp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `api_timestamp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("api_timestamp").toString()));
      }
      if (jsonObj.get("comments") != null && !jsonObj.get("comments").isJsonNull()) {
        JsonArray jsonArraycomments = jsonObj.getAsJsonArray("comments");
        if (jsonArraycomments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("comments").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `comments` to be an array in the JSON string but got `%s`", jsonObj.get("comments").toString()));
          }

          // validate the optional field `comments` (array)
          for (int i = 0; i < jsonArraycomments.size(); i++) {
            GETUserContentUrlJson200ResponseResultsCommentsInner.validateJsonElement(jsonArraycomments.get(i));
          };
        }
      }
      if ((jsonObj.get("filter") != null && !jsonObj.get("filter").isJsonNull()) && !jsonObj.get("filter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filter").toString()));
      }
      if ((jsonObj.get("sort") != null && !jsonObj.get("sort").isJsonNull()) && !jsonObj.get("sort").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sort` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sort").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GETUserContentUrlJson200ResponseResults.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GETUserContentUrlJson200ResponseResults' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GETUserContentUrlJson200ResponseResults> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GETUserContentUrlJson200ResponseResults.class));

       return (TypeAdapter<T>) new TypeAdapter<GETUserContentUrlJson200ResponseResults>() {
           @Override
           public void write(JsonWriter out, GETUserContentUrlJson200ResponseResults value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GETUserContentUrlJson200ResponseResults read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GETUserContentUrlJson200ResponseResults given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GETUserContentUrlJson200ResponseResults
   * @throws IOException if the JSON string is invalid with respect to GETUserContentUrlJson200ResponseResults
   */
  public static GETUserContentUrlJson200ResponseResults fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GETUserContentUrlJson200ResponseResults.class);
  }

  /**
   * Convert an instance of GETUserContentUrlJson200ResponseResults to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

