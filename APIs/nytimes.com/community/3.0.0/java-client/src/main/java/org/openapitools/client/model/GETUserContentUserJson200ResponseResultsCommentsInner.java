/*
 * Community API
 * Get access to comments from registered users on New York Times articles.  NOTE: This API is deprecated.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GETUserContentUserJson200ResponseResultsCommentsInnerAsset;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GETUserContentUserJson200ResponseResultsCommentsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:23:30.780759-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GETUserContentUserJson200ResponseResultsCommentsInner {
  public static final String SERIALIZED_NAME_APPROVE_DATE = "approveDate";
  @SerializedName(SERIALIZED_NAME_APPROVE_DATE)
  private String approveDate;

  public static final String SERIALIZED_NAME_ASSET = "asset";
  @SerializedName(SERIALIZED_NAME_ASSET)
  private GETUserContentUserJson200ResponseResultsCommentsInnerAsset asset;

  public static final String SERIALIZED_NAME_COMMENT_BODY = "commentBody";
  @SerializedName(SERIALIZED_NAME_COMMENT_BODY)
  private String commentBody;

  public static final String SERIALIZED_NAME_COMMENT_I_D = "commentID";
  @SerializedName(SERIALIZED_NAME_COMMENT_I_D)
  private Integer commentID;

  public static final String SERIALIZED_NAME_COMMENT_SEQUENCE = "commentSequence";
  @SerializedName(SERIALIZED_NAME_COMMENT_SEQUENCE)
  private Integer commentSequence;

  public static final String SERIALIZED_NAME_COMMENT_TITLE = "commentTitle";
  @SerializedName(SERIALIZED_NAME_COMMENT_TITLE)
  private String commentTitle;

  public static final String SERIALIZED_NAME_COMMENT_TYPE = "commentType";
  @SerializedName(SERIALIZED_NAME_COMMENT_TYPE)
  private String commentType;

  public static final String SERIALIZED_NAME_CREATE_DATE = "createDate";
  @SerializedName(SERIALIZED_NAME_CREATE_DATE)
  private String createDate;

  public static final String SERIALIZED_NAME_EDITORS_SELECTION = "editorsSelection";
  @SerializedName(SERIALIZED_NAME_EDITORS_SELECTION)
  private Boolean editorsSelection;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private List<Object> labels = new ArrayList<>();

  public static final String SERIALIZED_NAME_PARENT_I_D = "parentID";
  @SerializedName(SERIALIZED_NAME_PARENT_I_D)
  private Object parentID = null;

  public static final String SERIALIZED_NAME_PERMID = "permid";
  @SerializedName(SERIALIZED_NAME_PERMID)
  private Integer permid;

  public static final String SERIALIZED_NAME_PIC_U_R_L = "picURL";
  @SerializedName(SERIALIZED_NAME_PIC_U_R_L)
  private String picURL;

  public static final String SERIALIZED_NAME_RECOMMENDATIONS = "recommendations";
  @SerializedName(SERIALIZED_NAME_RECOMMENDATIONS)
  private Integer recommendations;

  public static final String SERIALIZED_NAME_REPLIES = "replies";
  @SerializedName(SERIALIZED_NAME_REPLIES)
  private List<Object> replies = new ArrayList<>();

  public static final String SERIALIZED_NAME_REPLY_COUNT = "replyCount";
  @SerializedName(SERIALIZED_NAME_REPLY_COUNT)
  private Integer replyCount;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_UPDATE_DATE = "updateDate";
  @SerializedName(SERIALIZED_NAME_UPDATE_DATE)
  private String updateDate;

  public static final String SERIALIZED_NAME_USER_DISPLAY_NAME = "userDisplayName";
  @SerializedName(SERIALIZED_NAME_USER_DISPLAY_NAME)
  private Object userDisplayName = null;

  public static final String SERIALIZED_NAME_USER_I_D = "userID";
  @SerializedName(SERIALIZED_NAME_USER_I_D)
  private Integer userID;

  public static final String SERIALIZED_NAME_USER_LOCATION = "userLocation";
  @SerializedName(SERIALIZED_NAME_USER_LOCATION)
  private Object userLocation = null;

  public static final String SERIALIZED_NAME_USER_SUBMITTED_DISPLAY_NAME = "userSubmittedDisplayName";
  @SerializedName(SERIALIZED_NAME_USER_SUBMITTED_DISPLAY_NAME)
  private String userSubmittedDisplayName;

  public static final String SERIALIZED_NAME_USER_SUBMITTED_LOCATION = "userSubmittedLocation";
  @SerializedName(SERIALIZED_NAME_USER_SUBMITTED_LOCATION)
  private String userSubmittedLocation;

  public static final String SERIALIZED_NAME_USER_SUBMITTED_TITLE = "userSubmittedTitle";
  @SerializedName(SERIALIZED_NAME_USER_SUBMITTED_TITLE)
  private Object userSubmittedTitle = null;

  public static final String SERIALIZED_NAME_USER_SUBMITTED_U_R_L = "userSubmittedURL";
  @SerializedName(SERIALIZED_NAME_USER_SUBMITTED_U_R_L)
  private Object userSubmittedURL = null;

  public static final String SERIALIZED_NAME_USER_TITLE = "userTitle";
  @SerializedName(SERIALIZED_NAME_USER_TITLE)
  private Object userTitle = null;

  public static final String SERIALIZED_NAME_USER_U_R_L = "userURL";
  @SerializedName(SERIALIZED_NAME_USER_U_R_L)
  private Object userURL = null;

  public GETUserContentUserJson200ResponseResultsCommentsInner() {
  }

  public GETUserContentUserJson200ResponseResultsCommentsInner approveDate(String approveDate) {
    this.approveDate = approveDate;
    return this;
  }

  /**
   * Get approveDate
   * @return approveDate
   */
  @javax.annotation.Nullable
  public String getApproveDate() {
    return approveDate;
  }

  public void setApproveDate(String approveDate) {
    this.approveDate = approveDate;
  }


  public GETUserContentUserJson200ResponseResultsCommentsInner asset(GETUserContentUserJson200ResponseResultsCommentsInnerAsset asset) {
    this.asset = asset;
    return this;
  }

  /**
   * Get asset
   * @return asset
   */
  @javax.annotation.Nullable
  public GETUserContentUserJson200ResponseResultsCommentsInnerAsset getAsset() {
    return asset;
  }

  public void setAsset(GETUserContentUserJson200ResponseResultsCommentsInnerAsset asset) {
    this.asset = asset;
  }


  public GETUserContentUserJson200ResponseResultsCommentsInner commentBody(String commentBody) {
    this.commentBody = commentBody;
    return this;
  }

  /**
   * Get commentBody
   * @return commentBody
   */
  @javax.annotation.Nullable
  public String getCommentBody() {
    return commentBody;
  }

  public void setCommentBody(String commentBody) {
    this.commentBody = commentBody;
  }


  public GETUserContentUserJson200ResponseResultsCommentsInner commentID(Integer commentID) {
    this.commentID = commentID;
    return this;
  }

  /**
   * Get commentID
   * @return commentID
   */
  @javax.annotation.Nullable
  public Integer getCommentID() {
    return commentID;
  }

  public void setCommentID(Integer commentID) {
    this.commentID = commentID;
  }


  public GETUserContentUserJson200ResponseResultsCommentsInner commentSequence(Integer commentSequence) {
    this.commentSequence = commentSequence;
    return this;
  }

  /**
   * Get commentSequence
   * @return commentSequence
   */
  @javax.annotation.Nullable
  public Integer getCommentSequence() {
    return commentSequence;
  }

  public void setCommentSequence(Integer commentSequence) {
    this.commentSequence = commentSequence;
  }


  public GETUserContentUserJson200ResponseResultsCommentsInner commentTitle(String commentTitle) {
    this.commentTitle = commentTitle;
    return this;
  }

  /**
   * Get commentTitle
   * @return commentTitle
   */
  @javax.annotation.Nullable
  public String getCommentTitle() {
    return commentTitle;
  }

  public void setCommentTitle(String commentTitle) {
    this.commentTitle = commentTitle;
  }


  public GETUserContentUserJson200ResponseResultsCommentsInner commentType(String commentType) {
    this.commentType = commentType;
    return this;
  }

  /**
   * Get commentType
   * @return commentType
   */
  @javax.annotation.Nullable
  public String getCommentType() {
    return commentType;
  }

  public void setCommentType(String commentType) {
    this.commentType = commentType;
  }


  public GETUserContentUserJson200ResponseResultsCommentsInner createDate(String createDate) {
    this.createDate = createDate;
    return this;
  }

  /**
   * Get createDate
   * @return createDate
   */
  @javax.annotation.Nullable
  public String getCreateDate() {
    return createDate;
  }

  public void setCreateDate(String createDate) {
    this.createDate = createDate;
  }


  public GETUserContentUserJson200ResponseResultsCommentsInner editorsSelection(Boolean editorsSelection) {
    this.editorsSelection = editorsSelection;
    return this;
  }

  /**
   * Get editorsSelection
   * @return editorsSelection
   */
  @javax.annotation.Nullable
  public Boolean getEditorsSelection() {
    return editorsSelection;
  }

  public void setEditorsSelection(Boolean editorsSelection) {
    this.editorsSelection = editorsSelection;
  }


  public GETUserContentUserJson200ResponseResultsCommentsInner labels(List<Object> labels) {
    this.labels = labels;
    return this;
  }

  public GETUserContentUserJson200ResponseResultsCommentsInner addLabelsItem(Object labelsItem) {
    if (this.labels == null) {
      this.labels = new ArrayList<>();
    }
    this.labels.add(labelsItem);
    return this;
  }

  /**
   * Get labels
   * @return labels
   */
  @javax.annotation.Nullable
  public List<Object> getLabels() {
    return labels;
  }

  public void setLabels(List<Object> labels) {
    this.labels = labels;
  }


  public GETUserContentUserJson200ResponseResultsCommentsInner parentID(Object parentID) {
    this.parentID = parentID;
    return this;
  }

  /**
   * Get parentID
   * @return parentID
   */
  @javax.annotation.Nullable
  public Object getParentID() {
    return parentID;
  }

  public void setParentID(Object parentID) {
    this.parentID = parentID;
  }


  public GETUserContentUserJson200ResponseResultsCommentsInner permid(Integer permid) {
    this.permid = permid;
    return this;
  }

  /**
   * Get permid
   * @return permid
   */
  @javax.annotation.Nullable
  public Integer getPermid() {
    return permid;
  }

  public void setPermid(Integer permid) {
    this.permid = permid;
  }


  public GETUserContentUserJson200ResponseResultsCommentsInner picURL(String picURL) {
    this.picURL = picURL;
    return this;
  }

  /**
   * Get picURL
   * @return picURL
   */
  @javax.annotation.Nullable
  public String getPicURL() {
    return picURL;
  }

  public void setPicURL(String picURL) {
    this.picURL = picURL;
  }


  public GETUserContentUserJson200ResponseResultsCommentsInner recommendations(Integer recommendations) {
    this.recommendations = recommendations;
    return this;
  }

  /**
   * Get recommendations
   * @return recommendations
   */
  @javax.annotation.Nullable
  public Integer getRecommendations() {
    return recommendations;
  }

  public void setRecommendations(Integer recommendations) {
    this.recommendations = recommendations;
  }


  public GETUserContentUserJson200ResponseResultsCommentsInner replies(List<Object> replies) {
    this.replies = replies;
    return this;
  }

  public GETUserContentUserJson200ResponseResultsCommentsInner addRepliesItem(Object repliesItem) {
    if (this.replies == null) {
      this.replies = new ArrayList<>();
    }
    this.replies.add(repliesItem);
    return this;
  }

  /**
   * Get replies
   * @return replies
   */
  @javax.annotation.Nullable
  public List<Object> getReplies() {
    return replies;
  }

  public void setReplies(List<Object> replies) {
    this.replies = replies;
  }


  public GETUserContentUserJson200ResponseResultsCommentsInner replyCount(Integer replyCount) {
    this.replyCount = replyCount;
    return this;
  }

  /**
   * Get replyCount
   * @return replyCount
   */
  @javax.annotation.Nullable
  public Integer getReplyCount() {
    return replyCount;
  }

  public void setReplyCount(Integer replyCount) {
    this.replyCount = replyCount;
  }


  public GETUserContentUserJson200ResponseResultsCommentsInner status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public GETUserContentUserJson200ResponseResultsCommentsInner updateDate(String updateDate) {
    this.updateDate = updateDate;
    return this;
  }

  /**
   * Get updateDate
   * @return updateDate
   */
  @javax.annotation.Nullable
  public String getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(String updateDate) {
    this.updateDate = updateDate;
  }


  public GETUserContentUserJson200ResponseResultsCommentsInner userDisplayName(Object userDisplayName) {
    this.userDisplayName = userDisplayName;
    return this;
  }

  /**
   * Get userDisplayName
   * @return userDisplayName
   */
  @javax.annotation.Nullable
  public Object getUserDisplayName() {
    return userDisplayName;
  }

  public void setUserDisplayName(Object userDisplayName) {
    this.userDisplayName = userDisplayName;
  }


  public GETUserContentUserJson200ResponseResultsCommentsInner userID(Integer userID) {
    this.userID = userID;
    return this;
  }

  /**
   * Get userID
   * @return userID
   */
  @javax.annotation.Nullable
  public Integer getUserID() {
    return userID;
  }

  public void setUserID(Integer userID) {
    this.userID = userID;
  }


  public GETUserContentUserJson200ResponseResultsCommentsInner userLocation(Object userLocation) {
    this.userLocation = userLocation;
    return this;
  }

  /**
   * Get userLocation
   * @return userLocation
   */
  @javax.annotation.Nullable
  public Object getUserLocation() {
    return userLocation;
  }

  public void setUserLocation(Object userLocation) {
    this.userLocation = userLocation;
  }


  public GETUserContentUserJson200ResponseResultsCommentsInner userSubmittedDisplayName(String userSubmittedDisplayName) {
    this.userSubmittedDisplayName = userSubmittedDisplayName;
    return this;
  }

  /**
   * Get userSubmittedDisplayName
   * @return userSubmittedDisplayName
   */
  @javax.annotation.Nullable
  public String getUserSubmittedDisplayName() {
    return userSubmittedDisplayName;
  }

  public void setUserSubmittedDisplayName(String userSubmittedDisplayName) {
    this.userSubmittedDisplayName = userSubmittedDisplayName;
  }


  public GETUserContentUserJson200ResponseResultsCommentsInner userSubmittedLocation(String userSubmittedLocation) {
    this.userSubmittedLocation = userSubmittedLocation;
    return this;
  }

  /**
   * Get userSubmittedLocation
   * @return userSubmittedLocation
   */
  @javax.annotation.Nullable
  public String getUserSubmittedLocation() {
    return userSubmittedLocation;
  }

  public void setUserSubmittedLocation(String userSubmittedLocation) {
    this.userSubmittedLocation = userSubmittedLocation;
  }


  public GETUserContentUserJson200ResponseResultsCommentsInner userSubmittedTitle(Object userSubmittedTitle) {
    this.userSubmittedTitle = userSubmittedTitle;
    return this;
  }

  /**
   * Get userSubmittedTitle
   * @return userSubmittedTitle
   */
  @javax.annotation.Nullable
  public Object getUserSubmittedTitle() {
    return userSubmittedTitle;
  }

  public void setUserSubmittedTitle(Object userSubmittedTitle) {
    this.userSubmittedTitle = userSubmittedTitle;
  }


  public GETUserContentUserJson200ResponseResultsCommentsInner userSubmittedURL(Object userSubmittedURL) {
    this.userSubmittedURL = userSubmittedURL;
    return this;
  }

  /**
   * Get userSubmittedURL
   * @return userSubmittedURL
   */
  @javax.annotation.Nullable
  public Object getUserSubmittedURL() {
    return userSubmittedURL;
  }

  public void setUserSubmittedURL(Object userSubmittedURL) {
    this.userSubmittedURL = userSubmittedURL;
  }


  public GETUserContentUserJson200ResponseResultsCommentsInner userTitle(Object userTitle) {
    this.userTitle = userTitle;
    return this;
  }

  /**
   * Get userTitle
   * @return userTitle
   */
  @javax.annotation.Nullable
  public Object getUserTitle() {
    return userTitle;
  }

  public void setUserTitle(Object userTitle) {
    this.userTitle = userTitle;
  }


  public GETUserContentUserJson200ResponseResultsCommentsInner userURL(Object userURL) {
    this.userURL = userURL;
    return this;
  }

  /**
   * Get userURL
   * @return userURL
   */
  @javax.annotation.Nullable
  public Object getUserURL() {
    return userURL;
  }

  public void setUserURL(Object userURL) {
    this.userURL = userURL;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GETUserContentUserJson200ResponseResultsCommentsInner geTUserContentUserJson200ResponseResultsCommentsInner = (GETUserContentUserJson200ResponseResultsCommentsInner) o;
    return Objects.equals(this.approveDate, geTUserContentUserJson200ResponseResultsCommentsInner.approveDate) &&
        Objects.equals(this.asset, geTUserContentUserJson200ResponseResultsCommentsInner.asset) &&
        Objects.equals(this.commentBody, geTUserContentUserJson200ResponseResultsCommentsInner.commentBody) &&
        Objects.equals(this.commentID, geTUserContentUserJson200ResponseResultsCommentsInner.commentID) &&
        Objects.equals(this.commentSequence, geTUserContentUserJson200ResponseResultsCommentsInner.commentSequence) &&
        Objects.equals(this.commentTitle, geTUserContentUserJson200ResponseResultsCommentsInner.commentTitle) &&
        Objects.equals(this.commentType, geTUserContentUserJson200ResponseResultsCommentsInner.commentType) &&
        Objects.equals(this.createDate, geTUserContentUserJson200ResponseResultsCommentsInner.createDate) &&
        Objects.equals(this.editorsSelection, geTUserContentUserJson200ResponseResultsCommentsInner.editorsSelection) &&
        Objects.equals(this.labels, geTUserContentUserJson200ResponseResultsCommentsInner.labels) &&
        Objects.equals(this.parentID, geTUserContentUserJson200ResponseResultsCommentsInner.parentID) &&
        Objects.equals(this.permid, geTUserContentUserJson200ResponseResultsCommentsInner.permid) &&
        Objects.equals(this.picURL, geTUserContentUserJson200ResponseResultsCommentsInner.picURL) &&
        Objects.equals(this.recommendations, geTUserContentUserJson200ResponseResultsCommentsInner.recommendations) &&
        Objects.equals(this.replies, geTUserContentUserJson200ResponseResultsCommentsInner.replies) &&
        Objects.equals(this.replyCount, geTUserContentUserJson200ResponseResultsCommentsInner.replyCount) &&
        Objects.equals(this.status, geTUserContentUserJson200ResponseResultsCommentsInner.status) &&
        Objects.equals(this.updateDate, geTUserContentUserJson200ResponseResultsCommentsInner.updateDate) &&
        Objects.equals(this.userDisplayName, geTUserContentUserJson200ResponseResultsCommentsInner.userDisplayName) &&
        Objects.equals(this.userID, geTUserContentUserJson200ResponseResultsCommentsInner.userID) &&
        Objects.equals(this.userLocation, geTUserContentUserJson200ResponseResultsCommentsInner.userLocation) &&
        Objects.equals(this.userSubmittedDisplayName, geTUserContentUserJson200ResponseResultsCommentsInner.userSubmittedDisplayName) &&
        Objects.equals(this.userSubmittedLocation, geTUserContentUserJson200ResponseResultsCommentsInner.userSubmittedLocation) &&
        Objects.equals(this.userSubmittedTitle, geTUserContentUserJson200ResponseResultsCommentsInner.userSubmittedTitle) &&
        Objects.equals(this.userSubmittedURL, geTUserContentUserJson200ResponseResultsCommentsInner.userSubmittedURL) &&
        Objects.equals(this.userTitle, geTUserContentUserJson200ResponseResultsCommentsInner.userTitle) &&
        Objects.equals(this.userURL, geTUserContentUserJson200ResponseResultsCommentsInner.userURL);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(approveDate, asset, commentBody, commentID, commentSequence, commentTitle, commentType, createDate, editorsSelection, labels, parentID, permid, picURL, recommendations, replies, replyCount, status, updateDate, userDisplayName, userID, userLocation, userSubmittedDisplayName, userSubmittedLocation, userSubmittedTitle, userSubmittedURL, userTitle, userURL);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GETUserContentUserJson200ResponseResultsCommentsInner {\n");
    sb.append("    approveDate: ").append(toIndentedString(approveDate)).append("\n");
    sb.append("    asset: ").append(toIndentedString(asset)).append("\n");
    sb.append("    commentBody: ").append(toIndentedString(commentBody)).append("\n");
    sb.append("    commentID: ").append(toIndentedString(commentID)).append("\n");
    sb.append("    commentSequence: ").append(toIndentedString(commentSequence)).append("\n");
    sb.append("    commentTitle: ").append(toIndentedString(commentTitle)).append("\n");
    sb.append("    commentType: ").append(toIndentedString(commentType)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    editorsSelection: ").append(toIndentedString(editorsSelection)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    permid: ").append(toIndentedString(permid)).append("\n");
    sb.append("    picURL: ").append(toIndentedString(picURL)).append("\n");
    sb.append("    recommendations: ").append(toIndentedString(recommendations)).append("\n");
    sb.append("    replies: ").append(toIndentedString(replies)).append("\n");
    sb.append("    replyCount: ").append(toIndentedString(replyCount)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("    userDisplayName: ").append(toIndentedString(userDisplayName)).append("\n");
    sb.append("    userID: ").append(toIndentedString(userID)).append("\n");
    sb.append("    userLocation: ").append(toIndentedString(userLocation)).append("\n");
    sb.append("    userSubmittedDisplayName: ").append(toIndentedString(userSubmittedDisplayName)).append("\n");
    sb.append("    userSubmittedLocation: ").append(toIndentedString(userSubmittedLocation)).append("\n");
    sb.append("    userSubmittedTitle: ").append(toIndentedString(userSubmittedTitle)).append("\n");
    sb.append("    userSubmittedURL: ").append(toIndentedString(userSubmittedURL)).append("\n");
    sb.append("    userTitle: ").append(toIndentedString(userTitle)).append("\n");
    sb.append("    userURL: ").append(toIndentedString(userURL)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("approveDate");
    openapiFields.add("asset");
    openapiFields.add("commentBody");
    openapiFields.add("commentID");
    openapiFields.add("commentSequence");
    openapiFields.add("commentTitle");
    openapiFields.add("commentType");
    openapiFields.add("createDate");
    openapiFields.add("editorsSelection");
    openapiFields.add("labels");
    openapiFields.add("parentID");
    openapiFields.add("permid");
    openapiFields.add("picURL");
    openapiFields.add("recommendations");
    openapiFields.add("replies");
    openapiFields.add("replyCount");
    openapiFields.add("status");
    openapiFields.add("updateDate");
    openapiFields.add("userDisplayName");
    openapiFields.add("userID");
    openapiFields.add("userLocation");
    openapiFields.add("userSubmittedDisplayName");
    openapiFields.add("userSubmittedLocation");
    openapiFields.add("userSubmittedTitle");
    openapiFields.add("userSubmittedURL");
    openapiFields.add("userTitle");
    openapiFields.add("userURL");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GETUserContentUserJson200ResponseResultsCommentsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GETUserContentUserJson200ResponseResultsCommentsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GETUserContentUserJson200ResponseResultsCommentsInner is not found in the empty JSON string", GETUserContentUserJson200ResponseResultsCommentsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GETUserContentUserJson200ResponseResultsCommentsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GETUserContentUserJson200ResponseResultsCommentsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("approveDate") != null && !jsonObj.get("approveDate").isJsonNull()) && !jsonObj.get("approveDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `approveDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("approveDate").toString()));
      }
      // validate the optional field `asset`
      if (jsonObj.get("asset") != null && !jsonObj.get("asset").isJsonNull()) {
        GETUserContentUserJson200ResponseResultsCommentsInnerAsset.validateJsonElement(jsonObj.get("asset"));
      }
      if ((jsonObj.get("commentBody") != null && !jsonObj.get("commentBody").isJsonNull()) && !jsonObj.get("commentBody").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commentBody` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commentBody").toString()));
      }
      if ((jsonObj.get("commentTitle") != null && !jsonObj.get("commentTitle").isJsonNull()) && !jsonObj.get("commentTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commentTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commentTitle").toString()));
      }
      if ((jsonObj.get("commentType") != null && !jsonObj.get("commentType").isJsonNull()) && !jsonObj.get("commentType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commentType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commentType").toString()));
      }
      if ((jsonObj.get("createDate") != null && !jsonObj.get("createDate").isJsonNull()) && !jsonObj.get("createDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createDate").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("labels") != null && !jsonObj.get("labels").isJsonNull() && !jsonObj.get("labels").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `labels` to be an array in the JSON string but got `%s`", jsonObj.get("labels").toString()));
      }
      if ((jsonObj.get("picURL") != null && !jsonObj.get("picURL").isJsonNull()) && !jsonObj.get("picURL").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `picURL` to be a primitive type in the JSON string but got `%s`", jsonObj.get("picURL").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("replies") != null && !jsonObj.get("replies").isJsonNull() && !jsonObj.get("replies").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `replies` to be an array in the JSON string but got `%s`", jsonObj.get("replies").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("updateDate") != null && !jsonObj.get("updateDate").isJsonNull()) && !jsonObj.get("updateDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateDate").toString()));
      }
      if ((jsonObj.get("userSubmittedDisplayName") != null && !jsonObj.get("userSubmittedDisplayName").isJsonNull()) && !jsonObj.get("userSubmittedDisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userSubmittedDisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userSubmittedDisplayName").toString()));
      }
      if ((jsonObj.get("userSubmittedLocation") != null && !jsonObj.get("userSubmittedLocation").isJsonNull()) && !jsonObj.get("userSubmittedLocation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userSubmittedLocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userSubmittedLocation").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GETUserContentUserJson200ResponseResultsCommentsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GETUserContentUserJson200ResponseResultsCommentsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GETUserContentUserJson200ResponseResultsCommentsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GETUserContentUserJson200ResponseResultsCommentsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GETUserContentUserJson200ResponseResultsCommentsInner>() {
           @Override
           public void write(JsonWriter out, GETUserContentUserJson200ResponseResultsCommentsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GETUserContentUserJson200ResponseResultsCommentsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GETUserContentUserJson200ResponseResultsCommentsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GETUserContentUserJson200ResponseResultsCommentsInner
   * @throws IOException if the JSON string is invalid with respect to GETUserContentUserJson200ResponseResultsCommentsInner
   */
  public static GETUserContentUserJson200ResponseResultsCommentsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GETUserContentUserJson200ResponseResultsCommentsInner.class);
  }

  /**
   * Convert an instance of GETUserContentUserJson200ResponseResultsCommentsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

