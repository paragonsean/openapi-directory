/*
 * Community API
 * Get access to comments from registered users on New York Times articles.  NOTE: This API is deprecated.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GETUserContentUrlJson200ResponseResultsCommentsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:23:30.780759-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GETUserContentUrlJson200ResponseResultsCommentsInner {
  public static final String SERIALIZED_NAME_APPROVE_DATE = "approveDate";
  @SerializedName(SERIALIZED_NAME_APPROVE_DATE)
  private String approveDate;

  public static final String SERIALIZED_NAME_COMMENT_BODY = "commentBody";
  @SerializedName(SERIALIZED_NAME_COMMENT_BODY)
  private String commentBody;

  public static final String SERIALIZED_NAME_COMMENT_I_D = "commentID";
  @SerializedName(SERIALIZED_NAME_COMMENT_I_D)
  private Integer commentID;

  public static final String SERIALIZED_NAME_COMMENT_SEQUENCE = "commentSequence";
  @SerializedName(SERIALIZED_NAME_COMMENT_SEQUENCE)
  private Integer commentSequence;

  public static final String SERIALIZED_NAME_COMMENT_TITLE = "commentTitle";
  @SerializedName(SERIALIZED_NAME_COMMENT_TITLE)
  private String commentTitle;

  public static final String SERIALIZED_NAME_COMMENT_TYPE = "commentType";
  @SerializedName(SERIALIZED_NAME_COMMENT_TYPE)
  private String commentType;

  public static final String SERIALIZED_NAME_CREATE_DATE = "createDate";
  @SerializedName(SERIALIZED_NAME_CREATE_DATE)
  private String createDate;

  public static final String SERIALIZED_NAME_DEPTH = "depth";
  @SerializedName(SERIALIZED_NAME_DEPTH)
  private Integer depth;

  public static final String SERIALIZED_NAME_EDITORS_SELECTION = "editorsSelection";
  @SerializedName(SERIALIZED_NAME_EDITORS_SELECTION)
  private Boolean editorsSelection;

  public static final String SERIALIZED_NAME_PARENT_I_D = "parentID";
  @SerializedName(SERIALIZED_NAME_PARENT_I_D)
  private Object parentID = null;

  public static final String SERIALIZED_NAME_PARENT_USER_DISPLAY_NAME = "parentUserDisplayName";
  @SerializedName(SERIALIZED_NAME_PARENT_USER_DISPLAY_NAME)
  private Object parentUserDisplayName = null;

  public static final String SERIALIZED_NAME_PERM_I_D = "permID";
  @SerializedName(SERIALIZED_NAME_PERM_I_D)
  private String permID;

  public static final String SERIALIZED_NAME_PIC_U_R_L = "picURL";
  @SerializedName(SERIALIZED_NAME_PIC_U_R_L)
  private String picURL;

  public static final String SERIALIZED_NAME_RECOMMENDATIONS = "recommendations";
  @SerializedName(SERIALIZED_NAME_RECOMMENDATIONS)
  private Integer recommendations;

  public static final String SERIALIZED_NAME_RECOMMENDED_FLAG = "recommendedFlag";
  @SerializedName(SERIALIZED_NAME_RECOMMENDED_FLAG)
  private Object recommendedFlag = null;

  public static final String SERIALIZED_NAME_REPLIES = "replies";
  @SerializedName(SERIALIZED_NAME_REPLIES)
  private List<Object> replies = new ArrayList<>();

  public static final String SERIALIZED_NAME_REPLY_COUNT = "replyCount";
  @SerializedName(SERIALIZED_NAME_REPLY_COUNT)
  private Integer replyCount;

  public static final String SERIALIZED_NAME_REPORT_ABUSE_FLAG = "reportAbuseFlag";
  @SerializedName(SERIALIZED_NAME_REPORT_ABUSE_FLAG)
  private Object reportAbuseFlag = null;

  public static final String SERIALIZED_NAME_SHARING = "sharing";
  @SerializedName(SERIALIZED_NAME_SHARING)
  private Integer sharing;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TIMESPEOPLE = "timespeople";
  @SerializedName(SERIALIZED_NAME_TIMESPEOPLE)
  private Integer timespeople;

  public static final String SERIALIZED_NAME_TRUSTED = "trusted";
  @SerializedName(SERIALIZED_NAME_TRUSTED)
  private Integer trusted;

  public static final String SERIALIZED_NAME_UPDATE_DATE = "updateDate";
  @SerializedName(SERIALIZED_NAME_UPDATE_DATE)
  private String updateDate;

  public static final String SERIALIZED_NAME_USER_DISPLAY_NAME = "userDisplayName";
  @SerializedName(SERIALIZED_NAME_USER_DISPLAY_NAME)
  private String userDisplayName;

  public static final String SERIALIZED_NAME_USER_I_D = "userID";
  @SerializedName(SERIALIZED_NAME_USER_I_D)
  private Integer userID;

  public static final String SERIALIZED_NAME_USER_LOCATION = "userLocation";
  @SerializedName(SERIALIZED_NAME_USER_LOCATION)
  private String userLocation;

  public static final String SERIALIZED_NAME_USER_TITLE = "userTitle";
  @SerializedName(SERIALIZED_NAME_USER_TITLE)
  private Object userTitle = null;

  public static final String SERIALIZED_NAME_USER_U_R_L = "userURL";
  @SerializedName(SERIALIZED_NAME_USER_U_R_L)
  private Object userURL = null;

  public GETUserContentUrlJson200ResponseResultsCommentsInner() {
  }

  public GETUserContentUrlJson200ResponseResultsCommentsInner approveDate(String approveDate) {
    this.approveDate = approveDate;
    return this;
  }

  /**
   * Get approveDate
   * @return approveDate
   */
  @javax.annotation.Nullable
  public String getApproveDate() {
    return approveDate;
  }

  public void setApproveDate(String approveDate) {
    this.approveDate = approveDate;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner commentBody(String commentBody) {
    this.commentBody = commentBody;
    return this;
  }

  /**
   * Get commentBody
   * @return commentBody
   */
  @javax.annotation.Nullable
  public String getCommentBody() {
    return commentBody;
  }

  public void setCommentBody(String commentBody) {
    this.commentBody = commentBody;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner commentID(Integer commentID) {
    this.commentID = commentID;
    return this;
  }

  /**
   * Get commentID
   * @return commentID
   */
  @javax.annotation.Nullable
  public Integer getCommentID() {
    return commentID;
  }

  public void setCommentID(Integer commentID) {
    this.commentID = commentID;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner commentSequence(Integer commentSequence) {
    this.commentSequence = commentSequence;
    return this;
  }

  /**
   * Get commentSequence
   * @return commentSequence
   */
  @javax.annotation.Nullable
  public Integer getCommentSequence() {
    return commentSequence;
  }

  public void setCommentSequence(Integer commentSequence) {
    this.commentSequence = commentSequence;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner commentTitle(String commentTitle) {
    this.commentTitle = commentTitle;
    return this;
  }

  /**
   * Get commentTitle
   * @return commentTitle
   */
  @javax.annotation.Nullable
  public String getCommentTitle() {
    return commentTitle;
  }

  public void setCommentTitle(String commentTitle) {
    this.commentTitle = commentTitle;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner commentType(String commentType) {
    this.commentType = commentType;
    return this;
  }

  /**
   * Get commentType
   * @return commentType
   */
  @javax.annotation.Nullable
  public String getCommentType() {
    return commentType;
  }

  public void setCommentType(String commentType) {
    this.commentType = commentType;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner createDate(String createDate) {
    this.createDate = createDate;
    return this;
  }

  /**
   * Get createDate
   * @return createDate
   */
  @javax.annotation.Nullable
  public String getCreateDate() {
    return createDate;
  }

  public void setCreateDate(String createDate) {
    this.createDate = createDate;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner depth(Integer depth) {
    this.depth = depth;
    return this;
  }

  /**
   * Get depth
   * @return depth
   */
  @javax.annotation.Nullable
  public Integer getDepth() {
    return depth;
  }

  public void setDepth(Integer depth) {
    this.depth = depth;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner editorsSelection(Boolean editorsSelection) {
    this.editorsSelection = editorsSelection;
    return this;
  }

  /**
   * Get editorsSelection
   * @return editorsSelection
   */
  @javax.annotation.Nullable
  public Boolean getEditorsSelection() {
    return editorsSelection;
  }

  public void setEditorsSelection(Boolean editorsSelection) {
    this.editorsSelection = editorsSelection;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner parentID(Object parentID) {
    this.parentID = parentID;
    return this;
  }

  /**
   * Get parentID
   * @return parentID
   */
  @javax.annotation.Nullable
  public Object getParentID() {
    return parentID;
  }

  public void setParentID(Object parentID) {
    this.parentID = parentID;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner parentUserDisplayName(Object parentUserDisplayName) {
    this.parentUserDisplayName = parentUserDisplayName;
    return this;
  }

  /**
   * Get parentUserDisplayName
   * @return parentUserDisplayName
   */
  @javax.annotation.Nullable
  public Object getParentUserDisplayName() {
    return parentUserDisplayName;
  }

  public void setParentUserDisplayName(Object parentUserDisplayName) {
    this.parentUserDisplayName = parentUserDisplayName;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner permID(String permID) {
    this.permID = permID;
    return this;
  }

  /**
   * Get permID
   * @return permID
   */
  @javax.annotation.Nullable
  public String getPermID() {
    return permID;
  }

  public void setPermID(String permID) {
    this.permID = permID;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner picURL(String picURL) {
    this.picURL = picURL;
    return this;
  }

  /**
   * Get picURL
   * @return picURL
   */
  @javax.annotation.Nullable
  public String getPicURL() {
    return picURL;
  }

  public void setPicURL(String picURL) {
    this.picURL = picURL;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner recommendations(Integer recommendations) {
    this.recommendations = recommendations;
    return this;
  }

  /**
   * Get recommendations
   * @return recommendations
   */
  @javax.annotation.Nullable
  public Integer getRecommendations() {
    return recommendations;
  }

  public void setRecommendations(Integer recommendations) {
    this.recommendations = recommendations;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner recommendedFlag(Object recommendedFlag) {
    this.recommendedFlag = recommendedFlag;
    return this;
  }

  /**
   * Get recommendedFlag
   * @return recommendedFlag
   */
  @javax.annotation.Nullable
  public Object getRecommendedFlag() {
    return recommendedFlag;
  }

  public void setRecommendedFlag(Object recommendedFlag) {
    this.recommendedFlag = recommendedFlag;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner replies(List<Object> replies) {
    this.replies = replies;
    return this;
  }

  public GETUserContentUrlJson200ResponseResultsCommentsInner addRepliesItem(Object repliesItem) {
    if (this.replies == null) {
      this.replies = new ArrayList<>();
    }
    this.replies.add(repliesItem);
    return this;
  }

  /**
   * Get replies
   * @return replies
   */
  @javax.annotation.Nullable
  public List<Object> getReplies() {
    return replies;
  }

  public void setReplies(List<Object> replies) {
    this.replies = replies;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner replyCount(Integer replyCount) {
    this.replyCount = replyCount;
    return this;
  }

  /**
   * Get replyCount
   * @return replyCount
   */
  @javax.annotation.Nullable
  public Integer getReplyCount() {
    return replyCount;
  }

  public void setReplyCount(Integer replyCount) {
    this.replyCount = replyCount;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner reportAbuseFlag(Object reportAbuseFlag) {
    this.reportAbuseFlag = reportAbuseFlag;
    return this;
  }

  /**
   * Get reportAbuseFlag
   * @return reportAbuseFlag
   */
  @javax.annotation.Nullable
  public Object getReportAbuseFlag() {
    return reportAbuseFlag;
  }

  public void setReportAbuseFlag(Object reportAbuseFlag) {
    this.reportAbuseFlag = reportAbuseFlag;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner sharing(Integer sharing) {
    this.sharing = sharing;
    return this;
  }

  /**
   * Get sharing
   * @return sharing
   */
  @javax.annotation.Nullable
  public Integer getSharing() {
    return sharing;
  }

  public void setSharing(Integer sharing) {
    this.sharing = sharing;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner timespeople(Integer timespeople) {
    this.timespeople = timespeople;
    return this;
  }

  /**
   * Get timespeople
   * @return timespeople
   */
  @javax.annotation.Nullable
  public Integer getTimespeople() {
    return timespeople;
  }

  public void setTimespeople(Integer timespeople) {
    this.timespeople = timespeople;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner trusted(Integer trusted) {
    this.trusted = trusted;
    return this;
  }

  /**
   * Get trusted
   * @return trusted
   */
  @javax.annotation.Nullable
  public Integer getTrusted() {
    return trusted;
  }

  public void setTrusted(Integer trusted) {
    this.trusted = trusted;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner updateDate(String updateDate) {
    this.updateDate = updateDate;
    return this;
  }

  /**
   * Get updateDate
   * @return updateDate
   */
  @javax.annotation.Nullable
  public String getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(String updateDate) {
    this.updateDate = updateDate;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner userDisplayName(String userDisplayName) {
    this.userDisplayName = userDisplayName;
    return this;
  }

  /**
   * Get userDisplayName
   * @return userDisplayName
   */
  @javax.annotation.Nullable
  public String getUserDisplayName() {
    return userDisplayName;
  }

  public void setUserDisplayName(String userDisplayName) {
    this.userDisplayName = userDisplayName;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner userID(Integer userID) {
    this.userID = userID;
    return this;
  }

  /**
   * Get userID
   * @return userID
   */
  @javax.annotation.Nullable
  public Integer getUserID() {
    return userID;
  }

  public void setUserID(Integer userID) {
    this.userID = userID;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner userLocation(String userLocation) {
    this.userLocation = userLocation;
    return this;
  }

  /**
   * Get userLocation
   * @return userLocation
   */
  @javax.annotation.Nullable
  public String getUserLocation() {
    return userLocation;
  }

  public void setUserLocation(String userLocation) {
    this.userLocation = userLocation;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner userTitle(Object userTitle) {
    this.userTitle = userTitle;
    return this;
  }

  /**
   * Get userTitle
   * @return userTitle
   */
  @javax.annotation.Nullable
  public Object getUserTitle() {
    return userTitle;
  }

  public void setUserTitle(Object userTitle) {
    this.userTitle = userTitle;
  }


  public GETUserContentUrlJson200ResponseResultsCommentsInner userURL(Object userURL) {
    this.userURL = userURL;
    return this;
  }

  /**
   * Get userURL
   * @return userURL
   */
  @javax.annotation.Nullable
  public Object getUserURL() {
    return userURL;
  }

  public void setUserURL(Object userURL) {
    this.userURL = userURL;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GETUserContentUrlJson200ResponseResultsCommentsInner geTUserContentUrlJson200ResponseResultsCommentsInner = (GETUserContentUrlJson200ResponseResultsCommentsInner) o;
    return Objects.equals(this.approveDate, geTUserContentUrlJson200ResponseResultsCommentsInner.approveDate) &&
        Objects.equals(this.commentBody, geTUserContentUrlJson200ResponseResultsCommentsInner.commentBody) &&
        Objects.equals(this.commentID, geTUserContentUrlJson200ResponseResultsCommentsInner.commentID) &&
        Objects.equals(this.commentSequence, geTUserContentUrlJson200ResponseResultsCommentsInner.commentSequence) &&
        Objects.equals(this.commentTitle, geTUserContentUrlJson200ResponseResultsCommentsInner.commentTitle) &&
        Objects.equals(this.commentType, geTUserContentUrlJson200ResponseResultsCommentsInner.commentType) &&
        Objects.equals(this.createDate, geTUserContentUrlJson200ResponseResultsCommentsInner.createDate) &&
        Objects.equals(this.depth, geTUserContentUrlJson200ResponseResultsCommentsInner.depth) &&
        Objects.equals(this.editorsSelection, geTUserContentUrlJson200ResponseResultsCommentsInner.editorsSelection) &&
        Objects.equals(this.parentID, geTUserContentUrlJson200ResponseResultsCommentsInner.parentID) &&
        Objects.equals(this.parentUserDisplayName, geTUserContentUrlJson200ResponseResultsCommentsInner.parentUserDisplayName) &&
        Objects.equals(this.permID, geTUserContentUrlJson200ResponseResultsCommentsInner.permID) &&
        Objects.equals(this.picURL, geTUserContentUrlJson200ResponseResultsCommentsInner.picURL) &&
        Objects.equals(this.recommendations, geTUserContentUrlJson200ResponseResultsCommentsInner.recommendations) &&
        Objects.equals(this.recommendedFlag, geTUserContentUrlJson200ResponseResultsCommentsInner.recommendedFlag) &&
        Objects.equals(this.replies, geTUserContentUrlJson200ResponseResultsCommentsInner.replies) &&
        Objects.equals(this.replyCount, geTUserContentUrlJson200ResponseResultsCommentsInner.replyCount) &&
        Objects.equals(this.reportAbuseFlag, geTUserContentUrlJson200ResponseResultsCommentsInner.reportAbuseFlag) &&
        Objects.equals(this.sharing, geTUserContentUrlJson200ResponseResultsCommentsInner.sharing) &&
        Objects.equals(this.status, geTUserContentUrlJson200ResponseResultsCommentsInner.status) &&
        Objects.equals(this.timespeople, geTUserContentUrlJson200ResponseResultsCommentsInner.timespeople) &&
        Objects.equals(this.trusted, geTUserContentUrlJson200ResponseResultsCommentsInner.trusted) &&
        Objects.equals(this.updateDate, geTUserContentUrlJson200ResponseResultsCommentsInner.updateDate) &&
        Objects.equals(this.userDisplayName, geTUserContentUrlJson200ResponseResultsCommentsInner.userDisplayName) &&
        Objects.equals(this.userID, geTUserContentUrlJson200ResponseResultsCommentsInner.userID) &&
        Objects.equals(this.userLocation, geTUserContentUrlJson200ResponseResultsCommentsInner.userLocation) &&
        Objects.equals(this.userTitle, geTUserContentUrlJson200ResponseResultsCommentsInner.userTitle) &&
        Objects.equals(this.userURL, geTUserContentUrlJson200ResponseResultsCommentsInner.userURL);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(approveDate, commentBody, commentID, commentSequence, commentTitle, commentType, createDate, depth, editorsSelection, parentID, parentUserDisplayName, permID, picURL, recommendations, recommendedFlag, replies, replyCount, reportAbuseFlag, sharing, status, timespeople, trusted, updateDate, userDisplayName, userID, userLocation, userTitle, userURL);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GETUserContentUrlJson200ResponseResultsCommentsInner {\n");
    sb.append("    approveDate: ").append(toIndentedString(approveDate)).append("\n");
    sb.append("    commentBody: ").append(toIndentedString(commentBody)).append("\n");
    sb.append("    commentID: ").append(toIndentedString(commentID)).append("\n");
    sb.append("    commentSequence: ").append(toIndentedString(commentSequence)).append("\n");
    sb.append("    commentTitle: ").append(toIndentedString(commentTitle)).append("\n");
    sb.append("    commentType: ").append(toIndentedString(commentType)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    depth: ").append(toIndentedString(depth)).append("\n");
    sb.append("    editorsSelection: ").append(toIndentedString(editorsSelection)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    parentUserDisplayName: ").append(toIndentedString(parentUserDisplayName)).append("\n");
    sb.append("    permID: ").append(toIndentedString(permID)).append("\n");
    sb.append("    picURL: ").append(toIndentedString(picURL)).append("\n");
    sb.append("    recommendations: ").append(toIndentedString(recommendations)).append("\n");
    sb.append("    recommendedFlag: ").append(toIndentedString(recommendedFlag)).append("\n");
    sb.append("    replies: ").append(toIndentedString(replies)).append("\n");
    sb.append("    replyCount: ").append(toIndentedString(replyCount)).append("\n");
    sb.append("    reportAbuseFlag: ").append(toIndentedString(reportAbuseFlag)).append("\n");
    sb.append("    sharing: ").append(toIndentedString(sharing)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    timespeople: ").append(toIndentedString(timespeople)).append("\n");
    sb.append("    trusted: ").append(toIndentedString(trusted)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("    userDisplayName: ").append(toIndentedString(userDisplayName)).append("\n");
    sb.append("    userID: ").append(toIndentedString(userID)).append("\n");
    sb.append("    userLocation: ").append(toIndentedString(userLocation)).append("\n");
    sb.append("    userTitle: ").append(toIndentedString(userTitle)).append("\n");
    sb.append("    userURL: ").append(toIndentedString(userURL)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("approveDate");
    openapiFields.add("commentBody");
    openapiFields.add("commentID");
    openapiFields.add("commentSequence");
    openapiFields.add("commentTitle");
    openapiFields.add("commentType");
    openapiFields.add("createDate");
    openapiFields.add("depth");
    openapiFields.add("editorsSelection");
    openapiFields.add("parentID");
    openapiFields.add("parentUserDisplayName");
    openapiFields.add("permID");
    openapiFields.add("picURL");
    openapiFields.add("recommendations");
    openapiFields.add("recommendedFlag");
    openapiFields.add("replies");
    openapiFields.add("replyCount");
    openapiFields.add("reportAbuseFlag");
    openapiFields.add("sharing");
    openapiFields.add("status");
    openapiFields.add("timespeople");
    openapiFields.add("trusted");
    openapiFields.add("updateDate");
    openapiFields.add("userDisplayName");
    openapiFields.add("userID");
    openapiFields.add("userLocation");
    openapiFields.add("userTitle");
    openapiFields.add("userURL");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GETUserContentUrlJson200ResponseResultsCommentsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GETUserContentUrlJson200ResponseResultsCommentsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GETUserContentUrlJson200ResponseResultsCommentsInner is not found in the empty JSON string", GETUserContentUrlJson200ResponseResultsCommentsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GETUserContentUrlJson200ResponseResultsCommentsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GETUserContentUrlJson200ResponseResultsCommentsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("approveDate") != null && !jsonObj.get("approveDate").isJsonNull()) && !jsonObj.get("approveDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `approveDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("approveDate").toString()));
      }
      if ((jsonObj.get("commentBody") != null && !jsonObj.get("commentBody").isJsonNull()) && !jsonObj.get("commentBody").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commentBody` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commentBody").toString()));
      }
      if ((jsonObj.get("commentTitle") != null && !jsonObj.get("commentTitle").isJsonNull()) && !jsonObj.get("commentTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commentTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commentTitle").toString()));
      }
      if ((jsonObj.get("commentType") != null && !jsonObj.get("commentType").isJsonNull()) && !jsonObj.get("commentType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commentType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commentType").toString()));
      }
      if ((jsonObj.get("createDate") != null && !jsonObj.get("createDate").isJsonNull()) && !jsonObj.get("createDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createDate").toString()));
      }
      if ((jsonObj.get("permID") != null && !jsonObj.get("permID").isJsonNull()) && !jsonObj.get("permID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `permID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("permID").toString()));
      }
      if ((jsonObj.get("picURL") != null && !jsonObj.get("picURL").isJsonNull()) && !jsonObj.get("picURL").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `picURL` to be a primitive type in the JSON string but got `%s`", jsonObj.get("picURL").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("replies") != null && !jsonObj.get("replies").isJsonNull() && !jsonObj.get("replies").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `replies` to be an array in the JSON string but got `%s`", jsonObj.get("replies").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("updateDate") != null && !jsonObj.get("updateDate").isJsonNull()) && !jsonObj.get("updateDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateDate").toString()));
      }
      if ((jsonObj.get("userDisplayName") != null && !jsonObj.get("userDisplayName").isJsonNull()) && !jsonObj.get("userDisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userDisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userDisplayName").toString()));
      }
      if ((jsonObj.get("userLocation") != null && !jsonObj.get("userLocation").isJsonNull()) && !jsonObj.get("userLocation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userLocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userLocation").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GETUserContentUrlJson200ResponseResultsCommentsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GETUserContentUrlJson200ResponseResultsCommentsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GETUserContentUrlJson200ResponseResultsCommentsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GETUserContentUrlJson200ResponseResultsCommentsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GETUserContentUrlJson200ResponseResultsCommentsInner>() {
           @Override
           public void write(JsonWriter out, GETUserContentUrlJson200ResponseResultsCommentsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GETUserContentUrlJson200ResponseResultsCommentsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GETUserContentUrlJson200ResponseResultsCommentsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GETUserContentUrlJson200ResponseResultsCommentsInner
   * @throws IOException if the JSON string is invalid with respect to GETUserContentUrlJson200ResponseResultsCommentsInner
   */
  public static GETUserContentUrlJson200ResponseResultsCommentsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GETUserContentUrlJson200ResponseResultsCommentsInner.class);
  }

  /**
   * Convert an instance of GETUserContentUrlJson200ResponseResultsCommentsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

