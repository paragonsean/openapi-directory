/*
 * Community API
 * Get access to comments from registered users on New York Times articles.  NOTE: This API is deprecated.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GETUserContentRecentJson200ResponseResultsCommentsInnerAsset;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GETUserContentRecentJson200ResponseResultsCommentsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:23:30.780759-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GETUserContentRecentJson200ResponseResultsCommentsInner {
  public static final String SERIALIZED_NAME_APPROVE_DATE = "approveDate";
  @SerializedName(SERIALIZED_NAME_APPROVE_DATE)
  private String approveDate;

  public static final String SERIALIZED_NAME_ASSET = "asset";
  @SerializedName(SERIALIZED_NAME_ASSET)
  private GETUserContentRecentJson200ResponseResultsCommentsInnerAsset asset;

  public static final String SERIALIZED_NAME_ASSET_I_D = "assetID";
  @SerializedName(SERIALIZED_NAME_ASSET_I_D)
  private Integer assetID;

  public static final String SERIALIZED_NAME_COMMENT_BODY = "commentBody";
  @SerializedName(SERIALIZED_NAME_COMMENT_BODY)
  private String commentBody;

  public static final String SERIALIZED_NAME_COMMENT_I_D = "commentID";
  @SerializedName(SERIALIZED_NAME_COMMENT_I_D)
  private Integer commentID;

  public static final String SERIALIZED_NAME_COMMENT_SEQUENCE = "commentSequence";
  @SerializedName(SERIALIZED_NAME_COMMENT_SEQUENCE)
  private Integer commentSequence;

  public static final String SERIALIZED_NAME_COMMENT_TITLE = "commentTitle";
  @SerializedName(SERIALIZED_NAME_COMMENT_TITLE)
  private String commentTitle;

  public static final String SERIALIZED_NAME_COMMENT_TYPE = "commentType";
  @SerializedName(SERIALIZED_NAME_COMMENT_TYPE)
  private String commentType;

  public static final String SERIALIZED_NAME_CREATE_DATE = "createDate";
  @SerializedName(SERIALIZED_NAME_CREATE_DATE)
  private String createDate;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "display_name";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_EDITORS_SELECTION = "editorsSelection";
  @SerializedName(SERIALIZED_NAME_EDITORS_SELECTION)
  private Integer editorsSelection;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_PARENT_I_D = "parentID";
  @SerializedName(SERIALIZED_NAME_PARENT_I_D)
  private Object parentID = null;

  public static final String SERIALIZED_NAME_RECOMMENDATION_COUNT = "recommendationCount";
  @SerializedName(SERIALIZED_NAME_RECOMMENDATION_COUNT)
  private Integer recommendationCount;

  public static final String SERIALIZED_NAME_REPLIES = "replies";
  @SerializedName(SERIALIZED_NAME_REPLIES)
  private List<Object> replies = new ArrayList<>();

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STATUS_I_D = "statusID";
  @SerializedName(SERIALIZED_NAME_STATUS_I_D)
  private Integer statusID;

  public static final String SERIALIZED_NAME_UPDATE_DATE = "updateDate";
  @SerializedName(SERIALIZED_NAME_UPDATE_DATE)
  private String updateDate;

  public static final String SERIALIZED_NAME_USER_DISPLAY_NAME = "userDisplayName";
  @SerializedName(SERIALIZED_NAME_USER_DISPLAY_NAME)
  private String userDisplayName;

  public static final String SERIALIZED_NAME_USER_I_D = "userID";
  @SerializedName(SERIALIZED_NAME_USER_I_D)
  private Integer userID;

  public static final String SERIALIZED_NAME_USER_LOCATION = "userLocation";
  @SerializedName(SERIALIZED_NAME_USER_LOCATION)
  private String userLocation;

  public static final String SERIALIZED_NAME_USER_TITLE = "userTitle";
  @SerializedName(SERIALIZED_NAME_USER_TITLE)
  private String userTitle;

  public static final String SERIALIZED_NAME_USER_U_R_L = "userURL";
  @SerializedName(SERIALIZED_NAME_USER_U_R_L)
  private String userURL;

  public GETUserContentRecentJson200ResponseResultsCommentsInner() {
  }

  public GETUserContentRecentJson200ResponseResultsCommentsInner approveDate(String approveDate) {
    this.approveDate = approveDate;
    return this;
  }

  /**
   * Get approveDate
   * @return approveDate
   */
  @javax.annotation.Nullable
  public String getApproveDate() {
    return approveDate;
  }

  public void setApproveDate(String approveDate) {
    this.approveDate = approveDate;
  }


  public GETUserContentRecentJson200ResponseResultsCommentsInner asset(GETUserContentRecentJson200ResponseResultsCommentsInnerAsset asset) {
    this.asset = asset;
    return this;
  }

  /**
   * Get asset
   * @return asset
   */
  @javax.annotation.Nullable
  public GETUserContentRecentJson200ResponseResultsCommentsInnerAsset getAsset() {
    return asset;
  }

  public void setAsset(GETUserContentRecentJson200ResponseResultsCommentsInnerAsset asset) {
    this.asset = asset;
  }


  public GETUserContentRecentJson200ResponseResultsCommentsInner assetID(Integer assetID) {
    this.assetID = assetID;
    return this;
  }

  /**
   * Get assetID
   * @return assetID
   */
  @javax.annotation.Nullable
  public Integer getAssetID() {
    return assetID;
  }

  public void setAssetID(Integer assetID) {
    this.assetID = assetID;
  }


  public GETUserContentRecentJson200ResponseResultsCommentsInner commentBody(String commentBody) {
    this.commentBody = commentBody;
    return this;
  }

  /**
   * Get commentBody
   * @return commentBody
   */
  @javax.annotation.Nullable
  public String getCommentBody() {
    return commentBody;
  }

  public void setCommentBody(String commentBody) {
    this.commentBody = commentBody;
  }


  public GETUserContentRecentJson200ResponseResultsCommentsInner commentID(Integer commentID) {
    this.commentID = commentID;
    return this;
  }

  /**
   * Get commentID
   * @return commentID
   */
  @javax.annotation.Nullable
  public Integer getCommentID() {
    return commentID;
  }

  public void setCommentID(Integer commentID) {
    this.commentID = commentID;
  }


  public GETUserContentRecentJson200ResponseResultsCommentsInner commentSequence(Integer commentSequence) {
    this.commentSequence = commentSequence;
    return this;
  }

  /**
   * Get commentSequence
   * @return commentSequence
   */
  @javax.annotation.Nullable
  public Integer getCommentSequence() {
    return commentSequence;
  }

  public void setCommentSequence(Integer commentSequence) {
    this.commentSequence = commentSequence;
  }


  public GETUserContentRecentJson200ResponseResultsCommentsInner commentTitle(String commentTitle) {
    this.commentTitle = commentTitle;
    return this;
  }

  /**
   * Get commentTitle
   * @return commentTitle
   */
  @javax.annotation.Nullable
  public String getCommentTitle() {
    return commentTitle;
  }

  public void setCommentTitle(String commentTitle) {
    this.commentTitle = commentTitle;
  }


  public GETUserContentRecentJson200ResponseResultsCommentsInner commentType(String commentType) {
    this.commentType = commentType;
    return this;
  }

  /**
   * Get commentType
   * @return commentType
   */
  @javax.annotation.Nullable
  public String getCommentType() {
    return commentType;
  }

  public void setCommentType(String commentType) {
    this.commentType = commentType;
  }


  public GETUserContentRecentJson200ResponseResultsCommentsInner createDate(String createDate) {
    this.createDate = createDate;
    return this;
  }

  /**
   * Get createDate
   * @return createDate
   */
  @javax.annotation.Nullable
  public String getCreateDate() {
    return createDate;
  }

  public void setCreateDate(String createDate) {
    this.createDate = createDate;
  }


  public GETUserContentRecentJson200ResponseResultsCommentsInner displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GETUserContentRecentJson200ResponseResultsCommentsInner editorsSelection(Integer editorsSelection) {
    this.editorsSelection = editorsSelection;
    return this;
  }

  /**
   * Get editorsSelection
   * @return editorsSelection
   */
  @javax.annotation.Nullable
  public Integer getEditorsSelection() {
    return editorsSelection;
  }

  public void setEditorsSelection(Integer editorsSelection) {
    this.editorsSelection = editorsSelection;
  }


  public GETUserContentRecentJson200ResponseResultsCommentsInner location(String location) {
    this.location = location;
    return this;
  }

  /**
   * Get location
   * @return location
   */
  @javax.annotation.Nullable
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }


  public GETUserContentRecentJson200ResponseResultsCommentsInner parentID(Object parentID) {
    this.parentID = parentID;
    return this;
  }

  /**
   * Get parentID
   * @return parentID
   */
  @javax.annotation.Nullable
  public Object getParentID() {
    return parentID;
  }

  public void setParentID(Object parentID) {
    this.parentID = parentID;
  }


  public GETUserContentRecentJson200ResponseResultsCommentsInner recommendationCount(Integer recommendationCount) {
    this.recommendationCount = recommendationCount;
    return this;
  }

  /**
   * Get recommendationCount
   * @return recommendationCount
   */
  @javax.annotation.Nullable
  public Integer getRecommendationCount() {
    return recommendationCount;
  }

  public void setRecommendationCount(Integer recommendationCount) {
    this.recommendationCount = recommendationCount;
  }


  public GETUserContentRecentJson200ResponseResultsCommentsInner replies(List<Object> replies) {
    this.replies = replies;
    return this;
  }

  public GETUserContentRecentJson200ResponseResultsCommentsInner addRepliesItem(Object repliesItem) {
    if (this.replies == null) {
      this.replies = new ArrayList<>();
    }
    this.replies.add(repliesItem);
    return this;
  }

  /**
   * Get replies
   * @return replies
   */
  @javax.annotation.Nullable
  public List<Object> getReplies() {
    return replies;
  }

  public void setReplies(List<Object> replies) {
    this.replies = replies;
  }


  public GETUserContentRecentJson200ResponseResultsCommentsInner status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public GETUserContentRecentJson200ResponseResultsCommentsInner statusID(Integer statusID) {
    this.statusID = statusID;
    return this;
  }

  /**
   * Get statusID
   * @return statusID
   */
  @javax.annotation.Nullable
  public Integer getStatusID() {
    return statusID;
  }

  public void setStatusID(Integer statusID) {
    this.statusID = statusID;
  }


  public GETUserContentRecentJson200ResponseResultsCommentsInner updateDate(String updateDate) {
    this.updateDate = updateDate;
    return this;
  }

  /**
   * Get updateDate
   * @return updateDate
   */
  @javax.annotation.Nullable
  public String getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(String updateDate) {
    this.updateDate = updateDate;
  }


  public GETUserContentRecentJson200ResponseResultsCommentsInner userDisplayName(String userDisplayName) {
    this.userDisplayName = userDisplayName;
    return this;
  }

  /**
   * Get userDisplayName
   * @return userDisplayName
   */
  @javax.annotation.Nullable
  public String getUserDisplayName() {
    return userDisplayName;
  }

  public void setUserDisplayName(String userDisplayName) {
    this.userDisplayName = userDisplayName;
  }


  public GETUserContentRecentJson200ResponseResultsCommentsInner userID(Integer userID) {
    this.userID = userID;
    return this;
  }

  /**
   * Get userID
   * @return userID
   */
  @javax.annotation.Nullable
  public Integer getUserID() {
    return userID;
  }

  public void setUserID(Integer userID) {
    this.userID = userID;
  }


  public GETUserContentRecentJson200ResponseResultsCommentsInner userLocation(String userLocation) {
    this.userLocation = userLocation;
    return this;
  }

  /**
   * Get userLocation
   * @return userLocation
   */
  @javax.annotation.Nullable
  public String getUserLocation() {
    return userLocation;
  }

  public void setUserLocation(String userLocation) {
    this.userLocation = userLocation;
  }


  public GETUserContentRecentJson200ResponseResultsCommentsInner userTitle(String userTitle) {
    this.userTitle = userTitle;
    return this;
  }

  /**
   * Get userTitle
   * @return userTitle
   */
  @javax.annotation.Nullable
  public String getUserTitle() {
    return userTitle;
  }

  public void setUserTitle(String userTitle) {
    this.userTitle = userTitle;
  }


  public GETUserContentRecentJson200ResponseResultsCommentsInner userURL(String userURL) {
    this.userURL = userURL;
    return this;
  }

  /**
   * Get userURL
   * @return userURL
   */
  @javax.annotation.Nullable
  public String getUserURL() {
    return userURL;
  }

  public void setUserURL(String userURL) {
    this.userURL = userURL;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GETUserContentRecentJson200ResponseResultsCommentsInner geTUserContentRecentJson200ResponseResultsCommentsInner = (GETUserContentRecentJson200ResponseResultsCommentsInner) o;
    return Objects.equals(this.approveDate, geTUserContentRecentJson200ResponseResultsCommentsInner.approveDate) &&
        Objects.equals(this.asset, geTUserContentRecentJson200ResponseResultsCommentsInner.asset) &&
        Objects.equals(this.assetID, geTUserContentRecentJson200ResponseResultsCommentsInner.assetID) &&
        Objects.equals(this.commentBody, geTUserContentRecentJson200ResponseResultsCommentsInner.commentBody) &&
        Objects.equals(this.commentID, geTUserContentRecentJson200ResponseResultsCommentsInner.commentID) &&
        Objects.equals(this.commentSequence, geTUserContentRecentJson200ResponseResultsCommentsInner.commentSequence) &&
        Objects.equals(this.commentTitle, geTUserContentRecentJson200ResponseResultsCommentsInner.commentTitle) &&
        Objects.equals(this.commentType, geTUserContentRecentJson200ResponseResultsCommentsInner.commentType) &&
        Objects.equals(this.createDate, geTUserContentRecentJson200ResponseResultsCommentsInner.createDate) &&
        Objects.equals(this.displayName, geTUserContentRecentJson200ResponseResultsCommentsInner.displayName) &&
        Objects.equals(this.editorsSelection, geTUserContentRecentJson200ResponseResultsCommentsInner.editorsSelection) &&
        Objects.equals(this.location, geTUserContentRecentJson200ResponseResultsCommentsInner.location) &&
        Objects.equals(this.parentID, geTUserContentRecentJson200ResponseResultsCommentsInner.parentID) &&
        Objects.equals(this.recommendationCount, geTUserContentRecentJson200ResponseResultsCommentsInner.recommendationCount) &&
        Objects.equals(this.replies, geTUserContentRecentJson200ResponseResultsCommentsInner.replies) &&
        Objects.equals(this.status, geTUserContentRecentJson200ResponseResultsCommentsInner.status) &&
        Objects.equals(this.statusID, geTUserContentRecentJson200ResponseResultsCommentsInner.statusID) &&
        Objects.equals(this.updateDate, geTUserContentRecentJson200ResponseResultsCommentsInner.updateDate) &&
        Objects.equals(this.userDisplayName, geTUserContentRecentJson200ResponseResultsCommentsInner.userDisplayName) &&
        Objects.equals(this.userID, geTUserContentRecentJson200ResponseResultsCommentsInner.userID) &&
        Objects.equals(this.userLocation, geTUserContentRecentJson200ResponseResultsCommentsInner.userLocation) &&
        Objects.equals(this.userTitle, geTUserContentRecentJson200ResponseResultsCommentsInner.userTitle) &&
        Objects.equals(this.userURL, geTUserContentRecentJson200ResponseResultsCommentsInner.userURL);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(approveDate, asset, assetID, commentBody, commentID, commentSequence, commentTitle, commentType, createDate, displayName, editorsSelection, location, parentID, recommendationCount, replies, status, statusID, updateDate, userDisplayName, userID, userLocation, userTitle, userURL);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GETUserContentRecentJson200ResponseResultsCommentsInner {\n");
    sb.append("    approveDate: ").append(toIndentedString(approveDate)).append("\n");
    sb.append("    asset: ").append(toIndentedString(asset)).append("\n");
    sb.append("    assetID: ").append(toIndentedString(assetID)).append("\n");
    sb.append("    commentBody: ").append(toIndentedString(commentBody)).append("\n");
    sb.append("    commentID: ").append(toIndentedString(commentID)).append("\n");
    sb.append("    commentSequence: ").append(toIndentedString(commentSequence)).append("\n");
    sb.append("    commentTitle: ").append(toIndentedString(commentTitle)).append("\n");
    sb.append("    commentType: ").append(toIndentedString(commentType)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    editorsSelection: ").append(toIndentedString(editorsSelection)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    recommendationCount: ").append(toIndentedString(recommendationCount)).append("\n");
    sb.append("    replies: ").append(toIndentedString(replies)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusID: ").append(toIndentedString(statusID)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("    userDisplayName: ").append(toIndentedString(userDisplayName)).append("\n");
    sb.append("    userID: ").append(toIndentedString(userID)).append("\n");
    sb.append("    userLocation: ").append(toIndentedString(userLocation)).append("\n");
    sb.append("    userTitle: ").append(toIndentedString(userTitle)).append("\n");
    sb.append("    userURL: ").append(toIndentedString(userURL)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("approveDate");
    openapiFields.add("asset");
    openapiFields.add("assetID");
    openapiFields.add("commentBody");
    openapiFields.add("commentID");
    openapiFields.add("commentSequence");
    openapiFields.add("commentTitle");
    openapiFields.add("commentType");
    openapiFields.add("createDate");
    openapiFields.add("display_name");
    openapiFields.add("editorsSelection");
    openapiFields.add("location");
    openapiFields.add("parentID");
    openapiFields.add("recommendationCount");
    openapiFields.add("replies");
    openapiFields.add("status");
    openapiFields.add("statusID");
    openapiFields.add("updateDate");
    openapiFields.add("userDisplayName");
    openapiFields.add("userID");
    openapiFields.add("userLocation");
    openapiFields.add("userTitle");
    openapiFields.add("userURL");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GETUserContentRecentJson200ResponseResultsCommentsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GETUserContentRecentJson200ResponseResultsCommentsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GETUserContentRecentJson200ResponseResultsCommentsInner is not found in the empty JSON string", GETUserContentRecentJson200ResponseResultsCommentsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GETUserContentRecentJson200ResponseResultsCommentsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GETUserContentRecentJson200ResponseResultsCommentsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("approveDate") != null && !jsonObj.get("approveDate").isJsonNull()) && !jsonObj.get("approveDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `approveDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("approveDate").toString()));
      }
      // validate the optional field `asset`
      if (jsonObj.get("asset") != null && !jsonObj.get("asset").isJsonNull()) {
        GETUserContentRecentJson200ResponseResultsCommentsInnerAsset.validateJsonElement(jsonObj.get("asset"));
      }
      if ((jsonObj.get("commentBody") != null && !jsonObj.get("commentBody").isJsonNull()) && !jsonObj.get("commentBody").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commentBody` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commentBody").toString()));
      }
      if ((jsonObj.get("commentTitle") != null && !jsonObj.get("commentTitle").isJsonNull()) && !jsonObj.get("commentTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commentTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commentTitle").toString()));
      }
      if ((jsonObj.get("commentType") != null && !jsonObj.get("commentType").isJsonNull()) && !jsonObj.get("commentType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commentType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commentType").toString()));
      }
      if ((jsonObj.get("createDate") != null && !jsonObj.get("createDate").isJsonNull()) && !jsonObj.get("createDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createDate").toString()));
      }
      if ((jsonObj.get("display_name") != null && !jsonObj.get("display_name").isJsonNull()) && !jsonObj.get("display_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `display_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("display_name").toString()));
      }
      if ((jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) && !jsonObj.get("location").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `location` to be a primitive type in the JSON string but got `%s`", jsonObj.get("location").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("replies") != null && !jsonObj.get("replies").isJsonNull() && !jsonObj.get("replies").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `replies` to be an array in the JSON string but got `%s`", jsonObj.get("replies").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("updateDate") != null && !jsonObj.get("updateDate").isJsonNull()) && !jsonObj.get("updateDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateDate").toString()));
      }
      if ((jsonObj.get("userDisplayName") != null && !jsonObj.get("userDisplayName").isJsonNull()) && !jsonObj.get("userDisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userDisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userDisplayName").toString()));
      }
      if ((jsonObj.get("userLocation") != null && !jsonObj.get("userLocation").isJsonNull()) && !jsonObj.get("userLocation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userLocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userLocation").toString()));
      }
      if ((jsonObj.get("userTitle") != null && !jsonObj.get("userTitle").isJsonNull()) && !jsonObj.get("userTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userTitle").toString()));
      }
      if ((jsonObj.get("userURL") != null && !jsonObj.get("userURL").isJsonNull()) && !jsonObj.get("userURL").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userURL` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userURL").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GETUserContentRecentJson200ResponseResultsCommentsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GETUserContentRecentJson200ResponseResultsCommentsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GETUserContentRecentJson200ResponseResultsCommentsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GETUserContentRecentJson200ResponseResultsCommentsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GETUserContentRecentJson200ResponseResultsCommentsInner>() {
           @Override
           public void write(JsonWriter out, GETUserContentRecentJson200ResponseResultsCommentsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GETUserContentRecentJson200ResponseResultsCommentsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GETUserContentRecentJson200ResponseResultsCommentsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GETUserContentRecentJson200ResponseResultsCommentsInner
   * @throws IOException if the JSON string is invalid with respect to GETUserContentRecentJson200ResponseResultsCommentsInner
   */
  public static GETUserContentRecentJson200ResponseResultsCommentsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GETUserContentRecentJson200ResponseResultsCommentsInner.class);
  }

  /**
   * Convert an instance of GETUserContentRecentJson200ResponseResultsCommentsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

