/*
 * Community API
 * Get access to comments from registered users on New York Times articles.  NOTE: This API is deprecated.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GETUserContentRecentJson200ResponseResultsCommentsInnerAssetPropertiesAutomoderationOn;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:23:30.780759-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties {
  public static final String SERIALIZED_NAME_AUTOMODERATION_ON = "automoderation-on";
  @SerializedName(SERIALIZED_NAME_AUTOMODERATION_ON)
  private GETUserContentRecentJson200ResponseResultsCommentsInnerAssetPropertiesAutomoderationOn automoderationOn;

  public static final String SERIALIZED_NAME_COMMENT_LIST_SORT_EDITORS = "comment-list-sort-editors";
  @SerializedName(SERIALIZED_NAME_COMMENT_LIST_SORT_EDITORS)
  private GETUserContentRecentJson200ResponseResultsCommentsInnerAssetPropertiesAutomoderationOn commentListSortEditors;

  public static final String SERIALIZED_NAME_REACHED_MAX_COM_OFF = "reached-max-com-off";
  @SerializedName(SERIALIZED_NAME_REACHED_MAX_COM_OFF)
  private GETUserContentRecentJson200ResponseResultsCommentsInnerAssetPropertiesAutomoderationOn reachedMaxComOff;

  public GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties() {
  }

  public GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties automoderationOn(GETUserContentRecentJson200ResponseResultsCommentsInnerAssetPropertiesAutomoderationOn automoderationOn) {
    this.automoderationOn = automoderationOn;
    return this;
  }

  /**
   * Get automoderationOn
   * @return automoderationOn
   */
  @javax.annotation.Nullable
  public GETUserContentRecentJson200ResponseResultsCommentsInnerAssetPropertiesAutomoderationOn getAutomoderationOn() {
    return automoderationOn;
  }

  public void setAutomoderationOn(GETUserContentRecentJson200ResponseResultsCommentsInnerAssetPropertiesAutomoderationOn automoderationOn) {
    this.automoderationOn = automoderationOn;
  }


  public GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties commentListSortEditors(GETUserContentRecentJson200ResponseResultsCommentsInnerAssetPropertiesAutomoderationOn commentListSortEditors) {
    this.commentListSortEditors = commentListSortEditors;
    return this;
  }

  /**
   * Get commentListSortEditors
   * @return commentListSortEditors
   */
  @javax.annotation.Nullable
  public GETUserContentRecentJson200ResponseResultsCommentsInnerAssetPropertiesAutomoderationOn getCommentListSortEditors() {
    return commentListSortEditors;
  }

  public void setCommentListSortEditors(GETUserContentRecentJson200ResponseResultsCommentsInnerAssetPropertiesAutomoderationOn commentListSortEditors) {
    this.commentListSortEditors = commentListSortEditors;
  }


  public GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties reachedMaxComOff(GETUserContentRecentJson200ResponseResultsCommentsInnerAssetPropertiesAutomoderationOn reachedMaxComOff) {
    this.reachedMaxComOff = reachedMaxComOff;
    return this;
  }

  /**
   * Get reachedMaxComOff
   * @return reachedMaxComOff
   */
  @javax.annotation.Nullable
  public GETUserContentRecentJson200ResponseResultsCommentsInnerAssetPropertiesAutomoderationOn getReachedMaxComOff() {
    return reachedMaxComOff;
  }

  public void setReachedMaxComOff(GETUserContentRecentJson200ResponseResultsCommentsInnerAssetPropertiesAutomoderationOn reachedMaxComOff) {
    this.reachedMaxComOff = reachedMaxComOff;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties geTUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties = (GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties) o;
    return Objects.equals(this.automoderationOn, geTUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties.automoderationOn) &&
        Objects.equals(this.commentListSortEditors, geTUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties.commentListSortEditors) &&
        Objects.equals(this.reachedMaxComOff, geTUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties.reachedMaxComOff);
  }

  @Override
  public int hashCode() {
    return Objects.hash(automoderationOn, commentListSortEditors, reachedMaxComOff);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties {\n");
    sb.append("    automoderationOn: ").append(toIndentedString(automoderationOn)).append("\n");
    sb.append("    commentListSortEditors: ").append(toIndentedString(commentListSortEditors)).append("\n");
    sb.append("    reachedMaxComOff: ").append(toIndentedString(reachedMaxComOff)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("automoderation-on");
    openapiFields.add("comment-list-sort-editors");
    openapiFields.add("reached-max-com-off");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties is not found in the empty JSON string", GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `automoderation-on`
      if (jsonObj.get("automoderation-on") != null && !jsonObj.get("automoderation-on").isJsonNull()) {
        GETUserContentRecentJson200ResponseResultsCommentsInnerAssetPropertiesAutomoderationOn.validateJsonElement(jsonObj.get("automoderation-on"));
      }
      // validate the optional field `comment-list-sort-editors`
      if (jsonObj.get("comment-list-sort-editors") != null && !jsonObj.get("comment-list-sort-editors").isJsonNull()) {
        GETUserContentRecentJson200ResponseResultsCommentsInnerAssetPropertiesAutomoderationOn.validateJsonElement(jsonObj.get("comment-list-sort-editors"));
      }
      // validate the optional field `reached-max-com-off`
      if (jsonObj.get("reached-max-com-off") != null && !jsonObj.get("reached-max-com-off").isJsonNull()) {
        GETUserContentRecentJson200ResponseResultsCommentsInnerAssetPropertiesAutomoderationOn.validateJsonElement(jsonObj.get("reached-max-com-off"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties>() {
           @Override
           public void write(JsonWriter out, GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties
   * @throws IOException if the JSON string is invalid with respect to GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties
   */
  public static GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties.class);
  }

  /**
   * Convert an instance of GETUserContentRecentJson200ResponseResultsCommentsInnerAssetProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

