/**
 * Community API
 * Get access to comments from registered users on New York Times articles.  NOTE: This API is deprecated.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGET_user_content_by_date_json_200_response_debug.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGET_user_content_by_date_json_200_response_debug::OAIGET_user_content_by_date_json_200_response_debug(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGET_user_content_by_date_json_200_response_debug::OAIGET_user_content_by_date_json_200_response_debug() {
    this->initializeModel();
}

OAIGET_user_content_by_date_json_200_response_debug::~OAIGET_user_content_by_date_json_200_response_debug() {}

void OAIGET_user_content_by_date_json_200_response_debug::initializeModel() {

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAIGET_user_content_by_date_json_200_response_debug::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGET_user_content_by_date_json_200_response_debug::fromJsonObject(QJsonObject json) {

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;
}

QString OAIGET_user_content_by_date_json_200_response_debug::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGET_user_content_by_date_json_200_response_debug::asJsonObject() const {
    QJsonObject obj;
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

double OAIGET_user_content_by_date_json_200_response_debug::getVersion() const {
    return m_version;
}
void OAIGET_user_content_by_date_json_200_response_debug::setVersion(const double &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIGET_user_content_by_date_json_200_response_debug::is_version_Set() const{
    return m_version_isSet;
}

bool OAIGET_user_content_by_date_json_200_response_debug::is_version_Valid() const{
    return m_version_isValid;
}

bool OAIGET_user_content_by_date_json_200_response_debug::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGET_user_content_by_date_json_200_response_debug::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
