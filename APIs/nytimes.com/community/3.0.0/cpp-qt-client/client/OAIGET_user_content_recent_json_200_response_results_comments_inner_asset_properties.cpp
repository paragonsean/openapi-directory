/**
 * Community API
 * Get access to comments from registered users on New York Times articles.  NOTE: This API is deprecated.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties::OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties::OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties() {
    this->initializeModel();
}

OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties::~OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties() {}

void OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties::initializeModel() {

    m_automoderation_on_isSet = false;
    m_automoderation_on_isValid = false;

    m_comment_list_sort_editors_isSet = false;
    m_comment_list_sort_editors_isValid = false;

    m_reached_max_com_off_isSet = false;
    m_reached_max_com_off_isValid = false;
}

void OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties::fromJsonObject(QJsonObject json) {

    m_automoderation_on_isValid = ::OpenAPI::fromJsonValue(m_automoderation_on, json[QString("automoderation-on")]);
    m_automoderation_on_isSet = !json[QString("automoderation-on")].isNull() && m_automoderation_on_isValid;

    m_comment_list_sort_editors_isValid = ::OpenAPI::fromJsonValue(m_comment_list_sort_editors, json[QString("comment-list-sort-editors")]);
    m_comment_list_sort_editors_isSet = !json[QString("comment-list-sort-editors")].isNull() && m_comment_list_sort_editors_isValid;

    m_reached_max_com_off_isValid = ::OpenAPI::fromJsonValue(m_reached_max_com_off, json[QString("reached-max-com-off")]);
    m_reached_max_com_off_isSet = !json[QString("reached-max-com-off")].isNull() && m_reached_max_com_off_isValid;
}

QString OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties::asJsonObject() const {
    QJsonObject obj;
    if (m_automoderation_on.isSet()) {
        obj.insert(QString("automoderation-on"), ::OpenAPI::toJsonValue(m_automoderation_on));
    }
    if (m_comment_list_sort_editors.isSet()) {
        obj.insert(QString("comment-list-sort-editors"), ::OpenAPI::toJsonValue(m_comment_list_sort_editors));
    }
    if (m_reached_max_com_off.isSet()) {
        obj.insert(QString("reached-max-com-off"), ::OpenAPI::toJsonValue(m_reached_max_com_off));
    }
    return obj;
}

OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties::getAutomoderationOn() const {
    return m_automoderation_on;
}
void OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties::setAutomoderationOn(const OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on &automoderation_on) {
    m_automoderation_on = automoderation_on;
    m_automoderation_on_isSet = true;
}

bool OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties::is_automoderation_on_Set() const{
    return m_automoderation_on_isSet;
}

bool OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties::is_automoderation_on_Valid() const{
    return m_automoderation_on_isValid;
}

OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties::getCommentListSortEditors() const {
    return m_comment_list_sort_editors;
}
void OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties::setCommentListSortEditors(const OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on &comment_list_sort_editors) {
    m_comment_list_sort_editors = comment_list_sort_editors;
    m_comment_list_sort_editors_isSet = true;
}

bool OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties::is_comment_list_sort_editors_Set() const{
    return m_comment_list_sort_editors_isSet;
}

bool OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties::is_comment_list_sort_editors_Valid() const{
    return m_comment_list_sort_editors_isValid;
}

OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties::getReachedMaxComOff() const {
    return m_reached_max_com_off;
}
void OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties::setReachedMaxComOff(const OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on &reached_max_com_off) {
    m_reached_max_com_off = reached_max_com_off;
    m_reached_max_com_off_isSet = true;
}

bool OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties::is_reached_max_com_off_Set() const{
    return m_reached_max_com_off_isSet;
}

bool OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties::is_reached_max_com_off_Valid() const{
    return m_reached_max_com_off_isValid;
}

bool OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_automoderation_on.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_comment_list_sort_editors.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reached_max_com_off.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
