/**
 * Community API
 * Get access to comments from registered users on New York Times articles.  NOTE: This API is deprecated.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGET_user_content_recent_json_200_response_results_comments_inner.h
 *
 * 
 */

#ifndef OAIGET_user_content_recent_json_200_response_results_comments_inner_H
#define OAIGET_user_content_recent_json_200_response_results_comments_inner_H

#include <QJsonObject>

#include "OAIGET_user_content_recent_json_200_response_results_comments_inner_asset.h"
#include "OAIObject.h"
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGET_user_content_recent_json_200_response_results_comments_inner_asset;

class OAIGET_user_content_recent_json_200_response_results_comments_inner : public OAIObject {
public:
    OAIGET_user_content_recent_json_200_response_results_comments_inner();
    OAIGET_user_content_recent_json_200_response_results_comments_inner(QString json);
    ~OAIGET_user_content_recent_json_200_response_results_comments_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApproveDate() const;
    void setApproveDate(const QString &approve_date);
    bool is_approve_date_Set() const;
    bool is_approve_date_Valid() const;

    OAIGET_user_content_recent_json_200_response_results_comments_inner_asset getAsset() const;
    void setAsset(const OAIGET_user_content_recent_json_200_response_results_comments_inner_asset &asset);
    bool is_asset_Set() const;
    bool is_asset_Valid() const;

    qint32 getAssetId() const;
    void setAssetId(const qint32 &asset_id);
    bool is_asset_id_Set() const;
    bool is_asset_id_Valid() const;

    QString getCommentBody() const;
    void setCommentBody(const QString &comment_body);
    bool is_comment_body_Set() const;
    bool is_comment_body_Valid() const;

    qint32 getCommentId() const;
    void setCommentId(const qint32 &comment_id);
    bool is_comment_id_Set() const;
    bool is_comment_id_Valid() const;

    qint32 getCommentSequence() const;
    void setCommentSequence(const qint32 &comment_sequence);
    bool is_comment_sequence_Set() const;
    bool is_comment_sequence_Valid() const;

    QString getCommentTitle() const;
    void setCommentTitle(const QString &comment_title);
    bool is_comment_title_Set() const;
    bool is_comment_title_Valid() const;

    QString getCommentType() const;
    void setCommentType(const QString &comment_type);
    bool is_comment_type_Set() const;
    bool is_comment_type_Valid() const;

    QString getCreateDate() const;
    void setCreateDate(const QString &create_date);
    bool is_create_date_Set() const;
    bool is_create_date_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    qint32 getEditorsSelection() const;
    void setEditorsSelection(const qint32 &editors_selection);
    bool is_editors_selection_Set() const;
    bool is_editors_selection_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QJsonValue getParentId() const;
    void setParentId(const QJsonValue &parent_id);
    bool is_parent_id_Set() const;
    bool is_parent_id_Valid() const;

    qint32 getRecommendationCount() const;
    void setRecommendationCount(const qint32 &recommendation_count);
    bool is_recommendation_count_Set() const;
    bool is_recommendation_count_Valid() const;

    QList<OAIObject> getReplies() const;
    void setReplies(const QList<OAIObject> &replies);
    bool is_replies_Set() const;
    bool is_replies_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint32 getStatusId() const;
    void setStatusId(const qint32 &status_id);
    bool is_status_id_Set() const;
    bool is_status_id_Valid() const;

    QString getUpdateDate() const;
    void setUpdateDate(const QString &update_date);
    bool is_update_date_Set() const;
    bool is_update_date_Valid() const;

    QString getUserDisplayName() const;
    void setUserDisplayName(const QString &user_display_name);
    bool is_user_display_name_Set() const;
    bool is_user_display_name_Valid() const;

    qint32 getUserId() const;
    void setUserId(const qint32 &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    QString getUserLocation() const;
    void setUserLocation(const QString &user_location);
    bool is_user_location_Set() const;
    bool is_user_location_Valid() const;

    QString getUserTitle() const;
    void setUserTitle(const QString &user_title);
    bool is_user_title_Set() const;
    bool is_user_title_Valid() const;

    QString getUserUrl() const;
    void setUserUrl(const QString &user_url);
    bool is_user_url_Set() const;
    bool is_user_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_approve_date;
    bool m_approve_date_isSet;
    bool m_approve_date_isValid;

    OAIGET_user_content_recent_json_200_response_results_comments_inner_asset m_asset;
    bool m_asset_isSet;
    bool m_asset_isValid;

    qint32 m_asset_id;
    bool m_asset_id_isSet;
    bool m_asset_id_isValid;

    QString m_comment_body;
    bool m_comment_body_isSet;
    bool m_comment_body_isValid;

    qint32 m_comment_id;
    bool m_comment_id_isSet;
    bool m_comment_id_isValid;

    qint32 m_comment_sequence;
    bool m_comment_sequence_isSet;
    bool m_comment_sequence_isValid;

    QString m_comment_title;
    bool m_comment_title_isSet;
    bool m_comment_title_isValid;

    QString m_comment_type;
    bool m_comment_type_isSet;
    bool m_comment_type_isValid;

    QString m_create_date;
    bool m_create_date_isSet;
    bool m_create_date_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    qint32 m_editors_selection;
    bool m_editors_selection_isSet;
    bool m_editors_selection_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QJsonValue m_parent_id;
    bool m_parent_id_isSet;
    bool m_parent_id_isValid;

    qint32 m_recommendation_count;
    bool m_recommendation_count_isSet;
    bool m_recommendation_count_isValid;

    QList<OAIObject> m_replies;
    bool m_replies_isSet;
    bool m_replies_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint32 m_status_id;
    bool m_status_id_isSet;
    bool m_status_id_isValid;

    QString m_update_date;
    bool m_update_date_isSet;
    bool m_update_date_isValid;

    QString m_user_display_name;
    bool m_user_display_name_isSet;
    bool m_user_display_name_isValid;

    qint32 m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;

    QString m_user_location;
    bool m_user_location_isSet;
    bool m_user_location_isValid;

    QString m_user_title;
    bool m_user_title_isSet;
    bool m_user_title_isValid;

    QString m_user_url;
    bool m_user_url_isSet;
    bool m_user_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGET_user_content_recent_json_200_response_results_comments_inner)

#endif // OAIGET_user_content_recent_json_200_response_results_comments_inner_H
