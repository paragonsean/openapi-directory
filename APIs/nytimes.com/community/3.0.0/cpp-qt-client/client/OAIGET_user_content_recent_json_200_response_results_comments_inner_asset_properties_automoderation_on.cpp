/**
 * Community API
 * Get access to comments from registered users on New York Times articles.  NOTE: This API is deprecated.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on::OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on::OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on() {
    this->initializeModel();
}

OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on::~OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on() {}

void OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on::initializeModel() {

    m_group_id_isSet = false;
    m_group_id_isValid = false;

    m_taxonomy_id_isSet = false;
    m_taxonomy_id_isValid = false;
}

void OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on::fromJsonObject(QJsonObject json) {

    m_group_id_isValid = ::OpenAPI::fromJsonValue(m_group_id, json[QString("groupID")]);
    m_group_id_isSet = !json[QString("groupID")].isNull() && m_group_id_isValid;

    m_taxonomy_id_isValid = ::OpenAPI::fromJsonValue(m_taxonomy_id, json[QString("taxonomyID")]);
    m_taxonomy_id_isSet = !json[QString("taxonomyID")].isNull() && m_taxonomy_id_isValid;
}

QString OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on::asJsonObject() const {
    QJsonObject obj;
    if (m_group_id_isSet) {
        obj.insert(QString("groupID"), ::OpenAPI::toJsonValue(m_group_id));
    }
    if (m_taxonomy_id_isSet) {
        obj.insert(QString("taxonomyID"), ::OpenAPI::toJsonValue(m_taxonomy_id));
    }
    return obj;
}

qint32 OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on::getGroupId() const {
    return m_group_id;
}
void OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on::setGroupId(const qint32 &group_id) {
    m_group_id = group_id;
    m_group_id_isSet = true;
}

bool OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on::is_group_id_Set() const{
    return m_group_id_isSet;
}

bool OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on::is_group_id_Valid() const{
    return m_group_id_isValid;
}

qint32 OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on::getTaxonomyId() const {
    return m_taxonomy_id;
}
void OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on::setTaxonomyId(const qint32 &taxonomy_id) {
    m_taxonomy_id = taxonomy_id;
    m_taxonomy_id_isSet = true;
}

bool OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on::is_taxonomy_id_Set() const{
    return m_taxonomy_id_isSet;
}

bool OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on::is_taxonomy_id_Valid() const{
    return m_taxonomy_id_isValid;
}

bool OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_taxonomy_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGET_user_content_recent_json_200_response_results_comments_inner_asset_properties_automoderation_on::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
