/**
 * Community API
 * Get access to comments from registered users on New York Times articles.  NOTE: This API is deprecated.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGET_user_content_user_json_200_response_results.h
 *
 * 
 */

#ifndef OAIGET_user_content_user_json_200_response_results_H
#define OAIGET_user_content_user_json_200_response_results_H

#include <QJsonObject>

#include "OAIGET_user_content_user_json_200_response_results_comments_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGET_user_content_user_json_200_response_results_comments_inner;

class OAIGET_user_content_user_json_200_response_results : public OAIObject {
public:
    OAIGET_user_content_user_json_200_response_results();
    OAIGET_user_content_user_json_200_response_results(QString json);
    ~OAIGET_user_content_user_json_200_response_results() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApiTimestamp() const;
    void setApiTimestamp(const QString &api_timestamp);
    bool is_api_timestamp_Set() const;
    bool is_api_timestamp_Valid() const;

    QList<OAIGET_user_content_user_json_200_response_results_comments_inner> getComments() const;
    void setComments(const QList<OAIGET_user_content_user_json_200_response_results_comments_inner> &comments);
    bool is_comments_Set() const;
    bool is_comments_Valid() const;

    qint32 getTotalCommentsFound() const;
    void setTotalCommentsFound(const qint32 &total_comments_found);
    bool is_total_comments_found_Set() const;
    bool is_total_comments_found_Valid() const;

    qint32 getTotalCommentsReturned() const;
    void setTotalCommentsReturned(const qint32 &total_comments_returned);
    bool is_total_comments_returned_Set() const;
    bool is_total_comments_returned_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_api_timestamp;
    bool m_api_timestamp_isSet;
    bool m_api_timestamp_isValid;

    QList<OAIGET_user_content_user_json_200_response_results_comments_inner> m_comments;
    bool m_comments_isSet;
    bool m_comments_isValid;

    qint32 m_total_comments_found;
    bool m_total_comments_found_isSet;
    bool m_total_comments_found_isValid;

    qint32 m_total_comments_returned;
    bool m_total_comments_returned_isSet;
    bool m_total_comments_returned_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGET_user_content_user_json_200_response_results)

#endif // OAIGET_user_content_user_json_200_response_results_H
