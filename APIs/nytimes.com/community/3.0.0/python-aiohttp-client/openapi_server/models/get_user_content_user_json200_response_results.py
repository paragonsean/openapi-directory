# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_user_content_user_json200_response_results_comments_inner import GETUserContentUserJson200ResponseResultsCommentsInner
from openapi_server import util


class GETUserContentUserJson200ResponseResults(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_timestamp: str=None, comments: List[GETUserContentUserJson200ResponseResultsCommentsInner]=None, total_comments_found: int=None, total_comments_returned: int=None):
        """GETUserContentUserJson200ResponseResults - a model defined in OpenAPI

        :param api_timestamp: The api_timestamp of this GETUserContentUserJson200ResponseResults.
        :param comments: The comments of this GETUserContentUserJson200ResponseResults.
        :param total_comments_found: The total_comments_found of this GETUserContentUserJson200ResponseResults.
        :param total_comments_returned: The total_comments_returned of this GETUserContentUserJson200ResponseResults.
        """
        self.openapi_types = {
            'api_timestamp': str,
            'comments': List[GETUserContentUserJson200ResponseResultsCommentsInner],
            'total_comments_found': int,
            'total_comments_returned': int
        }

        self.attribute_map = {
            'api_timestamp': 'api_timestamp',
            'comments': 'comments',
            'total_comments_found': 'totalCommentsFound',
            'total_comments_returned': 'totalCommentsReturned'
        }

        self._api_timestamp = api_timestamp
        self._comments = comments
        self._total_comments_found = total_comments_found
        self._total_comments_returned = total_comments_returned

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GETUserContentUserJson200ResponseResults':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GET_user_content_user_json_200_response_results of this GETUserContentUserJson200ResponseResults.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_timestamp(self):
        """Gets the api_timestamp of this GETUserContentUserJson200ResponseResults.


        :return: The api_timestamp of this GETUserContentUserJson200ResponseResults.
        :rtype: str
        """
        return self._api_timestamp

    @api_timestamp.setter
    def api_timestamp(self, api_timestamp):
        """Sets the api_timestamp of this GETUserContentUserJson200ResponseResults.


        :param api_timestamp: The api_timestamp of this GETUserContentUserJson200ResponseResults.
        :type api_timestamp: str
        """

        self._api_timestamp = api_timestamp

    @property
    def comments(self):
        """Gets the comments of this GETUserContentUserJson200ResponseResults.


        :return: The comments of this GETUserContentUserJson200ResponseResults.
        :rtype: List[GETUserContentUserJson200ResponseResultsCommentsInner]
        """
        return self._comments

    @comments.setter
    def comments(self, comments):
        """Sets the comments of this GETUserContentUserJson200ResponseResults.


        :param comments: The comments of this GETUserContentUserJson200ResponseResults.
        :type comments: List[GETUserContentUserJson200ResponseResultsCommentsInner]
        """

        self._comments = comments

    @property
    def total_comments_found(self):
        """Gets the total_comments_found of this GETUserContentUserJson200ResponseResults.


        :return: The total_comments_found of this GETUserContentUserJson200ResponseResults.
        :rtype: int
        """
        return self._total_comments_found

    @total_comments_found.setter
    def total_comments_found(self, total_comments_found):
        """Sets the total_comments_found of this GETUserContentUserJson200ResponseResults.


        :param total_comments_found: The total_comments_found of this GETUserContentUserJson200ResponseResults.
        :type total_comments_found: int
        """

        self._total_comments_found = total_comments_found

    @property
    def total_comments_returned(self):
        """Gets the total_comments_returned of this GETUserContentUserJson200ResponseResults.


        :return: The total_comments_returned of this GETUserContentUserJson200ResponseResults.
        :rtype: int
        """
        return self._total_comments_returned

    @total_comments_returned.setter
    def total_comments_returned(self, total_comments_returned):
        """Sets the total_comments_returned of this GETUserContentUserJson200ResponseResults.


        :param total_comments_returned: The total_comments_returned of this GETUserContentUserJson200ResponseResults.
        :type total_comments_returned: int
        """

        self._total_comments_returned = total_comments_returned
