/**
 * Books API
 * The Books API provides information about book reviews and The New York Times bestsellers lists.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGET_lists_date_list_json_200_response_results_books_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGET_lists_date_list_json_200_response_results_books_inner::OAIGET_lists_date_list_json_200_response_results_books_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGET_lists_date_list_json_200_response_results_books_inner::OAIGET_lists_date_list_json_200_response_results_books_inner() {
    this->initializeModel();
}

OAIGET_lists_date_list_json_200_response_results_books_inner::~OAIGET_lists_date_list_json_200_response_results_books_inner() {}

void OAIGET_lists_date_list_json_200_response_results_books_inner::initializeModel() {

    m_age_group_isSet = false;
    m_age_group_isValid = false;

    m_amazon_product_url_isSet = false;
    m_amazon_product_url_isValid = false;

    m_article_chapter_link_isSet = false;
    m_article_chapter_link_isValid = false;

    m_asterisk_isSet = false;
    m_asterisk_isValid = false;

    m_author_isSet = false;
    m_author_isValid = false;

    m_book_image_isSet = false;
    m_book_image_isValid = false;

    m_book_review_link_isSet = false;
    m_book_review_link_isValid = false;

    m_contributor_isSet = false;
    m_contributor_isValid = false;

    m_contributor_note_isSet = false;
    m_contributor_note_isValid = false;

    m_dagger_isSet = false;
    m_dagger_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_first_chapter_link_isSet = false;
    m_first_chapter_link_isValid = false;

    m_isbns_isSet = false;
    m_isbns_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_primary_isbn10_isSet = false;
    m_primary_isbn10_isValid = false;

    m_primary_isbn13_isSet = false;
    m_primary_isbn13_isValid = false;

    m_publisher_isSet = false;
    m_publisher_isValid = false;

    m_rank_isSet = false;
    m_rank_isValid = false;

    m_rank_last_week_isSet = false;
    m_rank_last_week_isValid = false;

    m_sunday_review_link_isSet = false;
    m_sunday_review_link_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_weeks_on_list_isSet = false;
    m_weeks_on_list_isValid = false;
}

void OAIGET_lists_date_list_json_200_response_results_books_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGET_lists_date_list_json_200_response_results_books_inner::fromJsonObject(QJsonObject json) {

    m_age_group_isValid = ::OpenAPI::fromJsonValue(m_age_group, json[QString("age_group")]);
    m_age_group_isSet = !json[QString("age_group")].isNull() && m_age_group_isValid;

    m_amazon_product_url_isValid = ::OpenAPI::fromJsonValue(m_amazon_product_url, json[QString("amazon_product_url")]);
    m_amazon_product_url_isSet = !json[QString("amazon_product_url")].isNull() && m_amazon_product_url_isValid;

    m_article_chapter_link_isValid = ::OpenAPI::fromJsonValue(m_article_chapter_link, json[QString("article_chapter_link")]);
    m_article_chapter_link_isSet = !json[QString("article_chapter_link")].isNull() && m_article_chapter_link_isValid;

    m_asterisk_isValid = ::OpenAPI::fromJsonValue(m_asterisk, json[QString("asterisk")]);
    m_asterisk_isSet = !json[QString("asterisk")].isNull() && m_asterisk_isValid;

    m_author_isValid = ::OpenAPI::fromJsonValue(m_author, json[QString("author")]);
    m_author_isSet = !json[QString("author")].isNull() && m_author_isValid;

    m_book_image_isValid = ::OpenAPI::fromJsonValue(m_book_image, json[QString("book_image")]);
    m_book_image_isSet = !json[QString("book_image")].isNull() && m_book_image_isValid;

    m_book_review_link_isValid = ::OpenAPI::fromJsonValue(m_book_review_link, json[QString("book_review_link")]);
    m_book_review_link_isSet = !json[QString("book_review_link")].isNull() && m_book_review_link_isValid;

    m_contributor_isValid = ::OpenAPI::fromJsonValue(m_contributor, json[QString("contributor")]);
    m_contributor_isSet = !json[QString("contributor")].isNull() && m_contributor_isValid;

    m_contributor_note_isValid = ::OpenAPI::fromJsonValue(m_contributor_note, json[QString("contributor_note")]);
    m_contributor_note_isSet = !json[QString("contributor_note")].isNull() && m_contributor_note_isValid;

    m_dagger_isValid = ::OpenAPI::fromJsonValue(m_dagger, json[QString("dagger")]);
    m_dagger_isSet = !json[QString("dagger")].isNull() && m_dagger_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_first_chapter_link_isValid = ::OpenAPI::fromJsonValue(m_first_chapter_link, json[QString("first_chapter_link")]);
    m_first_chapter_link_isSet = !json[QString("first_chapter_link")].isNull() && m_first_chapter_link_isValid;

    m_isbns_isValid = ::OpenAPI::fromJsonValue(m_isbns, json[QString("isbns")]);
    m_isbns_isSet = !json[QString("isbns")].isNull() && m_isbns_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_primary_isbn10_isValid = ::OpenAPI::fromJsonValue(m_primary_isbn10, json[QString("primary_isbn10")]);
    m_primary_isbn10_isSet = !json[QString("primary_isbn10")].isNull() && m_primary_isbn10_isValid;

    m_primary_isbn13_isValid = ::OpenAPI::fromJsonValue(m_primary_isbn13, json[QString("primary_isbn13")]);
    m_primary_isbn13_isSet = !json[QString("primary_isbn13")].isNull() && m_primary_isbn13_isValid;

    m_publisher_isValid = ::OpenAPI::fromJsonValue(m_publisher, json[QString("publisher")]);
    m_publisher_isSet = !json[QString("publisher")].isNull() && m_publisher_isValid;

    m_rank_isValid = ::OpenAPI::fromJsonValue(m_rank, json[QString("rank")]);
    m_rank_isSet = !json[QString("rank")].isNull() && m_rank_isValid;

    m_rank_last_week_isValid = ::OpenAPI::fromJsonValue(m_rank_last_week, json[QString("rank_last_week")]);
    m_rank_last_week_isSet = !json[QString("rank_last_week")].isNull() && m_rank_last_week_isValid;

    m_sunday_review_link_isValid = ::OpenAPI::fromJsonValue(m_sunday_review_link, json[QString("sunday_review_link")]);
    m_sunday_review_link_isSet = !json[QString("sunday_review_link")].isNull() && m_sunday_review_link_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_weeks_on_list_isValid = ::OpenAPI::fromJsonValue(m_weeks_on_list, json[QString("weeks_on_list")]);
    m_weeks_on_list_isSet = !json[QString("weeks_on_list")].isNull() && m_weeks_on_list_isValid;
}

QString OAIGET_lists_date_list_json_200_response_results_books_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGET_lists_date_list_json_200_response_results_books_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_age_group_isSet) {
        obj.insert(QString("age_group"), ::OpenAPI::toJsonValue(m_age_group));
    }
    if (m_amazon_product_url_isSet) {
        obj.insert(QString("amazon_product_url"), ::OpenAPI::toJsonValue(m_amazon_product_url));
    }
    if (m_article_chapter_link_isSet) {
        obj.insert(QString("article_chapter_link"), ::OpenAPI::toJsonValue(m_article_chapter_link));
    }
    if (m_asterisk_isSet) {
        obj.insert(QString("asterisk"), ::OpenAPI::toJsonValue(m_asterisk));
    }
    if (m_author_isSet) {
        obj.insert(QString("author"), ::OpenAPI::toJsonValue(m_author));
    }
    if (m_book_image_isSet) {
        obj.insert(QString("book_image"), ::OpenAPI::toJsonValue(m_book_image));
    }
    if (m_book_review_link_isSet) {
        obj.insert(QString("book_review_link"), ::OpenAPI::toJsonValue(m_book_review_link));
    }
    if (m_contributor_isSet) {
        obj.insert(QString("contributor"), ::OpenAPI::toJsonValue(m_contributor));
    }
    if (m_contributor_note_isSet) {
        obj.insert(QString("contributor_note"), ::OpenAPI::toJsonValue(m_contributor_note));
    }
    if (m_dagger_isSet) {
        obj.insert(QString("dagger"), ::OpenAPI::toJsonValue(m_dagger));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_first_chapter_link_isSet) {
        obj.insert(QString("first_chapter_link"), ::OpenAPI::toJsonValue(m_first_chapter_link));
    }
    if (m_isbns.size() > 0) {
        obj.insert(QString("isbns"), ::OpenAPI::toJsonValue(m_isbns));
    }
    if (m_price_isSet) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_primary_isbn10_isSet) {
        obj.insert(QString("primary_isbn10"), ::OpenAPI::toJsonValue(m_primary_isbn10));
    }
    if (m_primary_isbn13_isSet) {
        obj.insert(QString("primary_isbn13"), ::OpenAPI::toJsonValue(m_primary_isbn13));
    }
    if (m_publisher_isSet) {
        obj.insert(QString("publisher"), ::OpenAPI::toJsonValue(m_publisher));
    }
    if (m_rank_isSet) {
        obj.insert(QString("rank"), ::OpenAPI::toJsonValue(m_rank));
    }
    if (m_rank_last_week_isSet) {
        obj.insert(QString("rank_last_week"), ::OpenAPI::toJsonValue(m_rank_last_week));
    }
    if (m_sunday_review_link_isSet) {
        obj.insert(QString("sunday_review_link"), ::OpenAPI::toJsonValue(m_sunday_review_link));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_weeks_on_list_isSet) {
        obj.insert(QString("weeks_on_list"), ::OpenAPI::toJsonValue(m_weeks_on_list));
    }
    return obj;
}

QString OAIGET_lists_date_list_json_200_response_results_books_inner::getAgeGroup() const {
    return m_age_group;
}
void OAIGET_lists_date_list_json_200_response_results_books_inner::setAgeGroup(const QString &age_group) {
    m_age_group = age_group;
    m_age_group_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_age_group_Set() const{
    return m_age_group_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_age_group_Valid() const{
    return m_age_group_isValid;
}

QString OAIGET_lists_date_list_json_200_response_results_books_inner::getAmazonProductUrl() const {
    return m_amazon_product_url;
}
void OAIGET_lists_date_list_json_200_response_results_books_inner::setAmazonProductUrl(const QString &amazon_product_url) {
    m_amazon_product_url = amazon_product_url;
    m_amazon_product_url_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_amazon_product_url_Set() const{
    return m_amazon_product_url_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_amazon_product_url_Valid() const{
    return m_amazon_product_url_isValid;
}

QString OAIGET_lists_date_list_json_200_response_results_books_inner::getArticleChapterLink() const {
    return m_article_chapter_link;
}
void OAIGET_lists_date_list_json_200_response_results_books_inner::setArticleChapterLink(const QString &article_chapter_link) {
    m_article_chapter_link = article_chapter_link;
    m_article_chapter_link_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_article_chapter_link_Set() const{
    return m_article_chapter_link_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_article_chapter_link_Valid() const{
    return m_article_chapter_link_isValid;
}

qint32 OAIGET_lists_date_list_json_200_response_results_books_inner::getAsterisk() const {
    return m_asterisk;
}
void OAIGET_lists_date_list_json_200_response_results_books_inner::setAsterisk(const qint32 &asterisk) {
    m_asterisk = asterisk;
    m_asterisk_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_asterisk_Set() const{
    return m_asterisk_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_asterisk_Valid() const{
    return m_asterisk_isValid;
}

QString OAIGET_lists_date_list_json_200_response_results_books_inner::getAuthor() const {
    return m_author;
}
void OAIGET_lists_date_list_json_200_response_results_books_inner::setAuthor(const QString &author) {
    m_author = author;
    m_author_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_author_Set() const{
    return m_author_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_author_Valid() const{
    return m_author_isValid;
}

QString OAIGET_lists_date_list_json_200_response_results_books_inner::getBookImage() const {
    return m_book_image;
}
void OAIGET_lists_date_list_json_200_response_results_books_inner::setBookImage(const QString &book_image) {
    m_book_image = book_image;
    m_book_image_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_book_image_Set() const{
    return m_book_image_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_book_image_Valid() const{
    return m_book_image_isValid;
}

QString OAIGET_lists_date_list_json_200_response_results_books_inner::getBookReviewLink() const {
    return m_book_review_link;
}
void OAIGET_lists_date_list_json_200_response_results_books_inner::setBookReviewLink(const QString &book_review_link) {
    m_book_review_link = book_review_link;
    m_book_review_link_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_book_review_link_Set() const{
    return m_book_review_link_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_book_review_link_Valid() const{
    return m_book_review_link_isValid;
}

QString OAIGET_lists_date_list_json_200_response_results_books_inner::getContributor() const {
    return m_contributor;
}
void OAIGET_lists_date_list_json_200_response_results_books_inner::setContributor(const QString &contributor) {
    m_contributor = contributor;
    m_contributor_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_contributor_Set() const{
    return m_contributor_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_contributor_Valid() const{
    return m_contributor_isValid;
}

QString OAIGET_lists_date_list_json_200_response_results_books_inner::getContributorNote() const {
    return m_contributor_note;
}
void OAIGET_lists_date_list_json_200_response_results_books_inner::setContributorNote(const QString &contributor_note) {
    m_contributor_note = contributor_note;
    m_contributor_note_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_contributor_note_Set() const{
    return m_contributor_note_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_contributor_note_Valid() const{
    return m_contributor_note_isValid;
}

qint32 OAIGET_lists_date_list_json_200_response_results_books_inner::getDagger() const {
    return m_dagger;
}
void OAIGET_lists_date_list_json_200_response_results_books_inner::setDagger(const qint32 &dagger) {
    m_dagger = dagger;
    m_dagger_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_dagger_Set() const{
    return m_dagger_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_dagger_Valid() const{
    return m_dagger_isValid;
}

QString OAIGET_lists_date_list_json_200_response_results_books_inner::getDescription() const {
    return m_description;
}
void OAIGET_lists_date_list_json_200_response_results_books_inner::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGET_lists_date_list_json_200_response_results_books_inner::getFirstChapterLink() const {
    return m_first_chapter_link;
}
void OAIGET_lists_date_list_json_200_response_results_books_inner::setFirstChapterLink(const QString &first_chapter_link) {
    m_first_chapter_link = first_chapter_link;
    m_first_chapter_link_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_first_chapter_link_Set() const{
    return m_first_chapter_link_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_first_chapter_link_Valid() const{
    return m_first_chapter_link_isValid;
}

QList<OAIGET_lists_format_200_response_results_inner_isbns_inner> OAIGET_lists_date_list_json_200_response_results_books_inner::getIsbns() const {
    return m_isbns;
}
void OAIGET_lists_date_list_json_200_response_results_books_inner::setIsbns(const QList<OAIGET_lists_format_200_response_results_inner_isbns_inner> &isbns) {
    m_isbns = isbns;
    m_isbns_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_isbns_Set() const{
    return m_isbns_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_isbns_Valid() const{
    return m_isbns_isValid;
}

qint32 OAIGET_lists_date_list_json_200_response_results_books_inner::getPrice() const {
    return m_price;
}
void OAIGET_lists_date_list_json_200_response_results_books_inner::setPrice(const qint32 &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_price_Set() const{
    return m_price_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_price_Valid() const{
    return m_price_isValid;
}

QString OAIGET_lists_date_list_json_200_response_results_books_inner::getPrimaryIsbn10() const {
    return m_primary_isbn10;
}
void OAIGET_lists_date_list_json_200_response_results_books_inner::setPrimaryIsbn10(const QString &primary_isbn10) {
    m_primary_isbn10 = primary_isbn10;
    m_primary_isbn10_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_primary_isbn10_Set() const{
    return m_primary_isbn10_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_primary_isbn10_Valid() const{
    return m_primary_isbn10_isValid;
}

QString OAIGET_lists_date_list_json_200_response_results_books_inner::getPrimaryIsbn13() const {
    return m_primary_isbn13;
}
void OAIGET_lists_date_list_json_200_response_results_books_inner::setPrimaryIsbn13(const QString &primary_isbn13) {
    m_primary_isbn13 = primary_isbn13;
    m_primary_isbn13_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_primary_isbn13_Set() const{
    return m_primary_isbn13_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_primary_isbn13_Valid() const{
    return m_primary_isbn13_isValid;
}

QString OAIGET_lists_date_list_json_200_response_results_books_inner::getPublisher() const {
    return m_publisher;
}
void OAIGET_lists_date_list_json_200_response_results_books_inner::setPublisher(const QString &publisher) {
    m_publisher = publisher;
    m_publisher_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_publisher_Set() const{
    return m_publisher_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_publisher_Valid() const{
    return m_publisher_isValid;
}

qint32 OAIGET_lists_date_list_json_200_response_results_books_inner::getRank() const {
    return m_rank;
}
void OAIGET_lists_date_list_json_200_response_results_books_inner::setRank(const qint32 &rank) {
    m_rank = rank;
    m_rank_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_rank_Set() const{
    return m_rank_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_rank_Valid() const{
    return m_rank_isValid;
}

qint32 OAIGET_lists_date_list_json_200_response_results_books_inner::getRankLastWeek() const {
    return m_rank_last_week;
}
void OAIGET_lists_date_list_json_200_response_results_books_inner::setRankLastWeek(const qint32 &rank_last_week) {
    m_rank_last_week = rank_last_week;
    m_rank_last_week_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_rank_last_week_Set() const{
    return m_rank_last_week_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_rank_last_week_Valid() const{
    return m_rank_last_week_isValid;
}

QString OAIGET_lists_date_list_json_200_response_results_books_inner::getSundayReviewLink() const {
    return m_sunday_review_link;
}
void OAIGET_lists_date_list_json_200_response_results_books_inner::setSundayReviewLink(const QString &sunday_review_link) {
    m_sunday_review_link = sunday_review_link;
    m_sunday_review_link_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_sunday_review_link_Set() const{
    return m_sunday_review_link_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_sunday_review_link_Valid() const{
    return m_sunday_review_link_isValid;
}

QString OAIGET_lists_date_list_json_200_response_results_books_inner::getTitle() const {
    return m_title;
}
void OAIGET_lists_date_list_json_200_response_results_books_inner::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_title_Set() const{
    return m_title_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_title_Valid() const{
    return m_title_isValid;
}

qint32 OAIGET_lists_date_list_json_200_response_results_books_inner::getWeeksOnList() const {
    return m_weeks_on_list;
}
void OAIGET_lists_date_list_json_200_response_results_books_inner::setWeeksOnList(const qint32 &weeks_on_list) {
    m_weeks_on_list = weeks_on_list;
    m_weeks_on_list_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_weeks_on_list_Set() const{
    return m_weeks_on_list_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::is_weeks_on_list_Valid() const{
    return m_weeks_on_list_isValid;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_age_group_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amazon_product_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_article_chapter_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_asterisk_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_author_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_book_image_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_book_review_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contributor_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contributor_note_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dagger_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_chapter_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_isbns.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_isbn10_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_isbn13_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publisher_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rank_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rank_last_week_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sunday_review_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_weeks_on_list_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGET_lists_date_list_json_200_response_results_books_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
