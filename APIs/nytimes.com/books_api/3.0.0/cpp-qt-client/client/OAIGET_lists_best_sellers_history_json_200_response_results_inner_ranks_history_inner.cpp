/**
 * Books API
 * The Books API provides information about book reviews and The New York Times bestsellers lists.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner() {
    this->initializeModel();
}

OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::~OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner() {}

void OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::initializeModel() {

    m_asterisk_isSet = false;
    m_asterisk_isValid = false;

    m_bestsellers_date_isSet = false;
    m_bestsellers_date_isValid = false;

    m_dagger_isSet = false;
    m_dagger_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_list_name_isSet = false;
    m_list_name_isValid = false;

    m_primary_isbn10_isSet = false;
    m_primary_isbn10_isValid = false;

    m_primary_isbn13_isSet = false;
    m_primary_isbn13_isValid = false;

    m_published_date_isSet = false;
    m_published_date_isValid = false;

    m_rank_isSet = false;
    m_rank_isValid = false;

    m_ranks_last_week_isSet = false;
    m_ranks_last_week_isValid = false;

    m_weeks_on_list_isSet = false;
    m_weeks_on_list_isValid = false;
}

void OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::fromJsonObject(QJsonObject json) {

    m_asterisk_isValid = ::OpenAPI::fromJsonValue(m_asterisk, json[QString("asterisk")]);
    m_asterisk_isSet = !json[QString("asterisk")].isNull() && m_asterisk_isValid;

    m_bestsellers_date_isValid = ::OpenAPI::fromJsonValue(m_bestsellers_date, json[QString("bestsellers_date")]);
    m_bestsellers_date_isSet = !json[QString("bestsellers_date")].isNull() && m_bestsellers_date_isValid;

    m_dagger_isValid = ::OpenAPI::fromJsonValue(m_dagger, json[QString("dagger")]);
    m_dagger_isSet = !json[QString("dagger")].isNull() && m_dagger_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("display_name")]);
    m_display_name_isSet = !json[QString("display_name")].isNull() && m_display_name_isValid;

    m_list_name_isValid = ::OpenAPI::fromJsonValue(m_list_name, json[QString("list_name")]);
    m_list_name_isSet = !json[QString("list_name")].isNull() && m_list_name_isValid;

    m_primary_isbn10_isValid = ::OpenAPI::fromJsonValue(m_primary_isbn10, json[QString("primary_isbn10")]);
    m_primary_isbn10_isSet = !json[QString("primary_isbn10")].isNull() && m_primary_isbn10_isValid;

    m_primary_isbn13_isValid = ::OpenAPI::fromJsonValue(m_primary_isbn13, json[QString("primary_isbn13")]);
    m_primary_isbn13_isSet = !json[QString("primary_isbn13")].isNull() && m_primary_isbn13_isValid;

    m_published_date_isValid = ::OpenAPI::fromJsonValue(m_published_date, json[QString("published_date")]);
    m_published_date_isSet = !json[QString("published_date")].isNull() && m_published_date_isValid;

    m_rank_isValid = ::OpenAPI::fromJsonValue(m_rank, json[QString("rank")]);
    m_rank_isSet = !json[QString("rank")].isNull() && m_rank_isValid;

    m_ranks_last_week_isValid = ::OpenAPI::fromJsonValue(m_ranks_last_week, json[QString("ranks_last_week")]);
    m_ranks_last_week_isSet = !json[QString("ranks_last_week")].isNull() && m_ranks_last_week_isValid;

    m_weeks_on_list_isValid = ::OpenAPI::fromJsonValue(m_weeks_on_list, json[QString("weeks_on_list")]);
    m_weeks_on_list_isSet = !json[QString("weeks_on_list")].isNull() && m_weeks_on_list_isValid;
}

QString OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_asterisk_isSet) {
        obj.insert(QString("asterisk"), ::OpenAPI::toJsonValue(m_asterisk));
    }
    if (m_bestsellers_date_isSet) {
        obj.insert(QString("bestsellers_date"), ::OpenAPI::toJsonValue(m_bestsellers_date));
    }
    if (m_dagger_isSet) {
        obj.insert(QString("dagger"), ::OpenAPI::toJsonValue(m_dagger));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("display_name"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_list_name_isSet) {
        obj.insert(QString("list_name"), ::OpenAPI::toJsonValue(m_list_name));
    }
    if (m_primary_isbn10_isSet) {
        obj.insert(QString("primary_isbn10"), ::OpenAPI::toJsonValue(m_primary_isbn10));
    }
    if (m_primary_isbn13_isSet) {
        obj.insert(QString("primary_isbn13"), ::OpenAPI::toJsonValue(m_primary_isbn13));
    }
    if (m_published_date_isSet) {
        obj.insert(QString("published_date"), ::OpenAPI::toJsonValue(m_published_date));
    }
    if (m_rank_isSet) {
        obj.insert(QString("rank"), ::OpenAPI::toJsonValue(m_rank));
    }
    if (m_ranks_last_week_isSet) {
        obj.insert(QString("ranks_last_week"), ::OpenAPI::toJsonValue(m_ranks_last_week));
    }
    if (m_weeks_on_list_isSet) {
        obj.insert(QString("weeks_on_list"), ::OpenAPI::toJsonValue(m_weeks_on_list));
    }
    return obj;
}

qint32 OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::getAsterisk() const {
    return m_asterisk;
}
void OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::setAsterisk(const qint32 &asterisk) {
    m_asterisk = asterisk;
    m_asterisk_isSet = true;
}

bool OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::is_asterisk_Set() const{
    return m_asterisk_isSet;
}

bool OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::is_asterisk_Valid() const{
    return m_asterisk_isValid;
}

QString OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::getBestsellersDate() const {
    return m_bestsellers_date;
}
void OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::setBestsellersDate(const QString &bestsellers_date) {
    m_bestsellers_date = bestsellers_date;
    m_bestsellers_date_isSet = true;
}

bool OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::is_bestsellers_date_Set() const{
    return m_bestsellers_date_isSet;
}

bool OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::is_bestsellers_date_Valid() const{
    return m_bestsellers_date_isValid;
}

qint32 OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::getDagger() const {
    return m_dagger;
}
void OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::setDagger(const qint32 &dagger) {
    m_dagger = dagger;
    m_dagger_isSet = true;
}

bool OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::is_dagger_Set() const{
    return m_dagger_isSet;
}

bool OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::is_dagger_Valid() const{
    return m_dagger_isValid;
}

QString OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::getDisplayName() const {
    return m_display_name;
}
void OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::getListName() const {
    return m_list_name;
}
void OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::setListName(const QString &list_name) {
    m_list_name = list_name;
    m_list_name_isSet = true;
}

bool OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::is_list_name_Set() const{
    return m_list_name_isSet;
}

bool OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::is_list_name_Valid() const{
    return m_list_name_isValid;
}

QString OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::getPrimaryIsbn10() const {
    return m_primary_isbn10;
}
void OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::setPrimaryIsbn10(const QString &primary_isbn10) {
    m_primary_isbn10 = primary_isbn10;
    m_primary_isbn10_isSet = true;
}

bool OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::is_primary_isbn10_Set() const{
    return m_primary_isbn10_isSet;
}

bool OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::is_primary_isbn10_Valid() const{
    return m_primary_isbn10_isValid;
}

QString OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::getPrimaryIsbn13() const {
    return m_primary_isbn13;
}
void OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::setPrimaryIsbn13(const QString &primary_isbn13) {
    m_primary_isbn13 = primary_isbn13;
    m_primary_isbn13_isSet = true;
}

bool OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::is_primary_isbn13_Set() const{
    return m_primary_isbn13_isSet;
}

bool OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::is_primary_isbn13_Valid() const{
    return m_primary_isbn13_isValid;
}

QString OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::getPublishedDate() const {
    return m_published_date;
}
void OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::setPublishedDate(const QString &published_date) {
    m_published_date = published_date;
    m_published_date_isSet = true;
}

bool OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::is_published_date_Set() const{
    return m_published_date_isSet;
}

bool OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::is_published_date_Valid() const{
    return m_published_date_isValid;
}

qint32 OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::getRank() const {
    return m_rank;
}
void OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::setRank(const qint32 &rank) {
    m_rank = rank;
    m_rank_isSet = true;
}

bool OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::is_rank_Set() const{
    return m_rank_isSet;
}

bool OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::is_rank_Valid() const{
    return m_rank_isValid;
}

QJsonValue OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::getRanksLastWeek() const {
    return m_ranks_last_week;
}
void OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::setRanksLastWeek(const QJsonValue &ranks_last_week) {
    m_ranks_last_week = ranks_last_week;
    m_ranks_last_week_isSet = true;
}

bool OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::is_ranks_last_week_Set() const{
    return m_ranks_last_week_isSet;
}

bool OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::is_ranks_last_week_Valid() const{
    return m_ranks_last_week_isValid;
}

qint32 OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::getWeeksOnList() const {
    return m_weeks_on_list;
}
void OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::setWeeksOnList(const qint32 &weeks_on_list) {
    m_weeks_on_list = weeks_on_list;
    m_weeks_on_list_isSet = true;
}

bool OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::is_weeks_on_list_Set() const{
    return m_weeks_on_list_isSet;
}

bool OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::is_weeks_on_list_Valid() const{
    return m_weeks_on_list_isValid;
}

bool OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_asterisk_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bestsellers_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dagger_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_isbn10_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_isbn13_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_published_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rank_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ranks_last_week_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_weeks_on_list_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGET_lists_best_sellers_history_json_200_response_results_inner_ranks_history_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
