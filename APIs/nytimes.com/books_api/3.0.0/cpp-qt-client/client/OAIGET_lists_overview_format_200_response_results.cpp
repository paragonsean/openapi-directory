/**
 * Books API
 * The Books API provides information about book reviews and The New York Times bestsellers lists.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGET_lists_overview_format_200_response_results.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGET_lists_overview_format_200_response_results::OAIGET_lists_overview_format_200_response_results(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGET_lists_overview_format_200_response_results::OAIGET_lists_overview_format_200_response_results() {
    this->initializeModel();
}

OAIGET_lists_overview_format_200_response_results::~OAIGET_lists_overview_format_200_response_results() {}

void OAIGET_lists_overview_format_200_response_results::initializeModel() {

    m_bestsellers_date_isSet = false;
    m_bestsellers_date_isValid = false;

    m_lists_isSet = false;
    m_lists_isValid = false;

    m_published_date_isSet = false;
    m_published_date_isValid = false;
}

void OAIGET_lists_overview_format_200_response_results::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGET_lists_overview_format_200_response_results::fromJsonObject(QJsonObject json) {

    m_bestsellers_date_isValid = ::OpenAPI::fromJsonValue(m_bestsellers_date, json[QString("bestsellers_date")]);
    m_bestsellers_date_isSet = !json[QString("bestsellers_date")].isNull() && m_bestsellers_date_isValid;

    m_lists_isValid = ::OpenAPI::fromJsonValue(m_lists, json[QString("lists")]);
    m_lists_isSet = !json[QString("lists")].isNull() && m_lists_isValid;

    m_published_date_isValid = ::OpenAPI::fromJsonValue(m_published_date, json[QString("published_date")]);
    m_published_date_isSet = !json[QString("published_date")].isNull() && m_published_date_isValid;
}

QString OAIGET_lists_overview_format_200_response_results::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGET_lists_overview_format_200_response_results::asJsonObject() const {
    QJsonObject obj;
    if (m_bestsellers_date_isSet) {
        obj.insert(QString("bestsellers_date"), ::OpenAPI::toJsonValue(m_bestsellers_date));
    }
    if (m_lists.size() > 0) {
        obj.insert(QString("lists"), ::OpenAPI::toJsonValue(m_lists));
    }
    if (m_published_date_isSet) {
        obj.insert(QString("published_date"), ::OpenAPI::toJsonValue(m_published_date));
    }
    return obj;
}

QString OAIGET_lists_overview_format_200_response_results::getBestsellersDate() const {
    return m_bestsellers_date;
}
void OAIGET_lists_overview_format_200_response_results::setBestsellersDate(const QString &bestsellers_date) {
    m_bestsellers_date = bestsellers_date;
    m_bestsellers_date_isSet = true;
}

bool OAIGET_lists_overview_format_200_response_results::is_bestsellers_date_Set() const{
    return m_bestsellers_date_isSet;
}

bool OAIGET_lists_overview_format_200_response_results::is_bestsellers_date_Valid() const{
    return m_bestsellers_date_isValid;
}

QList<OAIGET_lists_overview_format_200_response_results_lists_inner> OAIGET_lists_overview_format_200_response_results::getLists() const {
    return m_lists;
}
void OAIGET_lists_overview_format_200_response_results::setLists(const QList<OAIGET_lists_overview_format_200_response_results_lists_inner> &lists) {
    m_lists = lists;
    m_lists_isSet = true;
}

bool OAIGET_lists_overview_format_200_response_results::is_lists_Set() const{
    return m_lists_isSet;
}

bool OAIGET_lists_overview_format_200_response_results::is_lists_Valid() const{
    return m_lists_isValid;
}

QString OAIGET_lists_overview_format_200_response_results::getPublishedDate() const {
    return m_published_date;
}
void OAIGET_lists_overview_format_200_response_results::setPublishedDate(const QString &published_date) {
    m_published_date = published_date;
    m_published_date_isSet = true;
}

bool OAIGET_lists_overview_format_200_response_results::is_published_date_Set() const{
    return m_published_date_isSet;
}

bool OAIGET_lists_overview_format_200_response_results::is_published_date_Valid() const{
    return m_published_date_isValid;
}

bool OAIGET_lists_overview_format_200_response_results::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bestsellers_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lists.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_published_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGET_lists_overview_format_200_response_results::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
