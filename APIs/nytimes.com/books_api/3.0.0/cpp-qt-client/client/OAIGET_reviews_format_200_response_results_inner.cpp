/**
 * Books API
 * The Books API provides information about book reviews and The New York Times bestsellers lists.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGET_reviews_format_200_response_results_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGET_reviews_format_200_response_results_inner::OAIGET_reviews_format_200_response_results_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGET_reviews_format_200_response_results_inner::OAIGET_reviews_format_200_response_results_inner() {
    this->initializeModel();
}

OAIGET_reviews_format_200_response_results_inner::~OAIGET_reviews_format_200_response_results_inner() {}

void OAIGET_reviews_format_200_response_results_inner::initializeModel() {

    m_book_author_isSet = false;
    m_book_author_isValid = false;

    m_book_title_isSet = false;
    m_book_title_isValid = false;

    m_byline_isSet = false;
    m_byline_isValid = false;

    m_isbn13_isSet = false;
    m_isbn13_isValid = false;

    m_publication_dt_isSet = false;
    m_publication_dt_isValid = false;

    m_summary_isSet = false;
    m_summary_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIGET_reviews_format_200_response_results_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGET_reviews_format_200_response_results_inner::fromJsonObject(QJsonObject json) {

    m_book_author_isValid = ::OpenAPI::fromJsonValue(m_book_author, json[QString("book_author")]);
    m_book_author_isSet = !json[QString("book_author")].isNull() && m_book_author_isValid;

    m_book_title_isValid = ::OpenAPI::fromJsonValue(m_book_title, json[QString("book_title")]);
    m_book_title_isSet = !json[QString("book_title")].isNull() && m_book_title_isValid;

    m_byline_isValid = ::OpenAPI::fromJsonValue(m_byline, json[QString("byline")]);
    m_byline_isSet = !json[QString("byline")].isNull() && m_byline_isValid;

    m_isbn13_isValid = ::OpenAPI::fromJsonValue(m_isbn13, json[QString("isbn13")]);
    m_isbn13_isSet = !json[QString("isbn13")].isNull() && m_isbn13_isValid;

    m_publication_dt_isValid = ::OpenAPI::fromJsonValue(m_publication_dt, json[QString("publication_dt")]);
    m_publication_dt_isSet = !json[QString("publication_dt")].isNull() && m_publication_dt_isValid;

    m_summary_isValid = ::OpenAPI::fromJsonValue(m_summary, json[QString("summary")]);
    m_summary_isSet = !json[QString("summary")].isNull() && m_summary_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIGET_reviews_format_200_response_results_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGET_reviews_format_200_response_results_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_book_author_isSet) {
        obj.insert(QString("book_author"), ::OpenAPI::toJsonValue(m_book_author));
    }
    if (m_book_title_isSet) {
        obj.insert(QString("book_title"), ::OpenAPI::toJsonValue(m_book_title));
    }
    if (m_byline_isSet) {
        obj.insert(QString("byline"), ::OpenAPI::toJsonValue(m_byline));
    }
    if (m_isbn13.size() > 0) {
        obj.insert(QString("isbn13"), ::OpenAPI::toJsonValue(m_isbn13));
    }
    if (m_publication_dt_isSet) {
        obj.insert(QString("publication_dt"), ::OpenAPI::toJsonValue(m_publication_dt));
    }
    if (m_summary_isSet) {
        obj.insert(QString("summary"), ::OpenAPI::toJsonValue(m_summary));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIGET_reviews_format_200_response_results_inner::getBookAuthor() const {
    return m_book_author;
}
void OAIGET_reviews_format_200_response_results_inner::setBookAuthor(const QString &book_author) {
    m_book_author = book_author;
    m_book_author_isSet = true;
}

bool OAIGET_reviews_format_200_response_results_inner::is_book_author_Set() const{
    return m_book_author_isSet;
}

bool OAIGET_reviews_format_200_response_results_inner::is_book_author_Valid() const{
    return m_book_author_isValid;
}

QString OAIGET_reviews_format_200_response_results_inner::getBookTitle() const {
    return m_book_title;
}
void OAIGET_reviews_format_200_response_results_inner::setBookTitle(const QString &book_title) {
    m_book_title = book_title;
    m_book_title_isSet = true;
}

bool OAIGET_reviews_format_200_response_results_inner::is_book_title_Set() const{
    return m_book_title_isSet;
}

bool OAIGET_reviews_format_200_response_results_inner::is_book_title_Valid() const{
    return m_book_title_isValid;
}

QString OAIGET_reviews_format_200_response_results_inner::getByline() const {
    return m_byline;
}
void OAIGET_reviews_format_200_response_results_inner::setByline(const QString &byline) {
    m_byline = byline;
    m_byline_isSet = true;
}

bool OAIGET_reviews_format_200_response_results_inner::is_byline_Set() const{
    return m_byline_isSet;
}

bool OAIGET_reviews_format_200_response_results_inner::is_byline_Valid() const{
    return m_byline_isValid;
}

QList<QString> OAIGET_reviews_format_200_response_results_inner::getIsbn13() const {
    return m_isbn13;
}
void OAIGET_reviews_format_200_response_results_inner::setIsbn13(const QList<QString> &isbn13) {
    m_isbn13 = isbn13;
    m_isbn13_isSet = true;
}

bool OAIGET_reviews_format_200_response_results_inner::is_isbn13_Set() const{
    return m_isbn13_isSet;
}

bool OAIGET_reviews_format_200_response_results_inner::is_isbn13_Valid() const{
    return m_isbn13_isValid;
}

QString OAIGET_reviews_format_200_response_results_inner::getPublicationDt() const {
    return m_publication_dt;
}
void OAIGET_reviews_format_200_response_results_inner::setPublicationDt(const QString &publication_dt) {
    m_publication_dt = publication_dt;
    m_publication_dt_isSet = true;
}

bool OAIGET_reviews_format_200_response_results_inner::is_publication_dt_Set() const{
    return m_publication_dt_isSet;
}

bool OAIGET_reviews_format_200_response_results_inner::is_publication_dt_Valid() const{
    return m_publication_dt_isValid;
}

QString OAIGET_reviews_format_200_response_results_inner::getSummary() const {
    return m_summary;
}
void OAIGET_reviews_format_200_response_results_inner::setSummary(const QString &summary) {
    m_summary = summary;
    m_summary_isSet = true;
}

bool OAIGET_reviews_format_200_response_results_inner::is_summary_Set() const{
    return m_summary_isSet;
}

bool OAIGET_reviews_format_200_response_results_inner::is_summary_Valid() const{
    return m_summary_isValid;
}

QString OAIGET_reviews_format_200_response_results_inner::getUrl() const {
    return m_url;
}
void OAIGET_reviews_format_200_response_results_inner::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIGET_reviews_format_200_response_results_inner::is_url_Set() const{
    return m_url_isSet;
}

bool OAIGET_reviews_format_200_response_results_inner::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIGET_reviews_format_200_response_results_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_book_author_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_book_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_byline_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_isbn13.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_publication_dt_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_summary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGET_reviews_format_200_response_results_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
