/**
 * Books API
 * The Books API provides information about book reviews and The New York Times bestsellers lists.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGET_lists_format_200_response_results_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGET_lists_format_200_response_results_inner::OAIGET_lists_format_200_response_results_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGET_lists_format_200_response_results_inner::OAIGET_lists_format_200_response_results_inner() {
    this->initializeModel();
}

OAIGET_lists_format_200_response_results_inner::~OAIGET_lists_format_200_response_results_inner() {}

void OAIGET_lists_format_200_response_results_inner::initializeModel() {

    m_amazon_product_url_isSet = false;
    m_amazon_product_url_isValid = false;

    m_asterisk_isSet = false;
    m_asterisk_isValid = false;

    m_bestsellers_date_isSet = false;
    m_bestsellers_date_isValid = false;

    m_book_details_isSet = false;
    m_book_details_isValid = false;

    m_dagger_isSet = false;
    m_dagger_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_isbns_isSet = false;
    m_isbns_isValid = false;

    m_list_name_isSet = false;
    m_list_name_isValid = false;

    m_published_date_isSet = false;
    m_published_date_isValid = false;

    m_rank_isSet = false;
    m_rank_isValid = false;

    m_rank_last_week_isSet = false;
    m_rank_last_week_isValid = false;

    m_reviews_isSet = false;
    m_reviews_isValid = false;

    m_weeks_on_list_isSet = false;
    m_weeks_on_list_isValid = false;
}

void OAIGET_lists_format_200_response_results_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGET_lists_format_200_response_results_inner::fromJsonObject(QJsonObject json) {

    m_amazon_product_url_isValid = ::OpenAPI::fromJsonValue(m_amazon_product_url, json[QString("amazon_product_url")]);
    m_amazon_product_url_isSet = !json[QString("amazon_product_url")].isNull() && m_amazon_product_url_isValid;

    m_asterisk_isValid = ::OpenAPI::fromJsonValue(m_asterisk, json[QString("asterisk")]);
    m_asterisk_isSet = !json[QString("asterisk")].isNull() && m_asterisk_isValid;

    m_bestsellers_date_isValid = ::OpenAPI::fromJsonValue(m_bestsellers_date, json[QString("bestsellers_date")]);
    m_bestsellers_date_isSet = !json[QString("bestsellers_date")].isNull() && m_bestsellers_date_isValid;

    m_book_details_isValid = ::OpenAPI::fromJsonValue(m_book_details, json[QString("book_details")]);
    m_book_details_isSet = !json[QString("book_details")].isNull() && m_book_details_isValid;

    m_dagger_isValid = ::OpenAPI::fromJsonValue(m_dagger, json[QString("dagger")]);
    m_dagger_isSet = !json[QString("dagger")].isNull() && m_dagger_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("display_name")]);
    m_display_name_isSet = !json[QString("display_name")].isNull() && m_display_name_isValid;

    m_isbns_isValid = ::OpenAPI::fromJsonValue(m_isbns, json[QString("isbns")]);
    m_isbns_isSet = !json[QString("isbns")].isNull() && m_isbns_isValid;

    m_list_name_isValid = ::OpenAPI::fromJsonValue(m_list_name, json[QString("list_name")]);
    m_list_name_isSet = !json[QString("list_name")].isNull() && m_list_name_isValid;

    m_published_date_isValid = ::OpenAPI::fromJsonValue(m_published_date, json[QString("published_date")]);
    m_published_date_isSet = !json[QString("published_date")].isNull() && m_published_date_isValid;

    m_rank_isValid = ::OpenAPI::fromJsonValue(m_rank, json[QString("rank")]);
    m_rank_isSet = !json[QString("rank")].isNull() && m_rank_isValid;

    m_rank_last_week_isValid = ::OpenAPI::fromJsonValue(m_rank_last_week, json[QString("rank_last_week")]);
    m_rank_last_week_isSet = !json[QString("rank_last_week")].isNull() && m_rank_last_week_isValid;

    m_reviews_isValid = ::OpenAPI::fromJsonValue(m_reviews, json[QString("reviews")]);
    m_reviews_isSet = !json[QString("reviews")].isNull() && m_reviews_isValid;

    m_weeks_on_list_isValid = ::OpenAPI::fromJsonValue(m_weeks_on_list, json[QString("weeks_on_list")]);
    m_weeks_on_list_isSet = !json[QString("weeks_on_list")].isNull() && m_weeks_on_list_isValid;
}

QString OAIGET_lists_format_200_response_results_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGET_lists_format_200_response_results_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_amazon_product_url_isSet) {
        obj.insert(QString("amazon_product_url"), ::OpenAPI::toJsonValue(m_amazon_product_url));
    }
    if (m_asterisk_isSet) {
        obj.insert(QString("asterisk"), ::OpenAPI::toJsonValue(m_asterisk));
    }
    if (m_bestsellers_date_isSet) {
        obj.insert(QString("bestsellers_date"), ::OpenAPI::toJsonValue(m_bestsellers_date));
    }
    if (m_book_details.size() > 0) {
        obj.insert(QString("book_details"), ::OpenAPI::toJsonValue(m_book_details));
    }
    if (m_dagger_isSet) {
        obj.insert(QString("dagger"), ::OpenAPI::toJsonValue(m_dagger));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("display_name"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_isbns.size() > 0) {
        obj.insert(QString("isbns"), ::OpenAPI::toJsonValue(m_isbns));
    }
    if (m_list_name_isSet) {
        obj.insert(QString("list_name"), ::OpenAPI::toJsonValue(m_list_name));
    }
    if (m_published_date_isSet) {
        obj.insert(QString("published_date"), ::OpenAPI::toJsonValue(m_published_date));
    }
    if (m_rank_isSet) {
        obj.insert(QString("rank"), ::OpenAPI::toJsonValue(m_rank));
    }
    if (m_rank_last_week_isSet) {
        obj.insert(QString("rank_last_week"), ::OpenAPI::toJsonValue(m_rank_last_week));
    }
    if (m_reviews.size() > 0) {
        obj.insert(QString("reviews"), ::OpenAPI::toJsonValue(m_reviews));
    }
    if (m_weeks_on_list_isSet) {
        obj.insert(QString("weeks_on_list"), ::OpenAPI::toJsonValue(m_weeks_on_list));
    }
    return obj;
}

QString OAIGET_lists_format_200_response_results_inner::getAmazonProductUrl() const {
    return m_amazon_product_url;
}
void OAIGET_lists_format_200_response_results_inner::setAmazonProductUrl(const QString &amazon_product_url) {
    m_amazon_product_url = amazon_product_url;
    m_amazon_product_url_isSet = true;
}

bool OAIGET_lists_format_200_response_results_inner::is_amazon_product_url_Set() const{
    return m_amazon_product_url_isSet;
}

bool OAIGET_lists_format_200_response_results_inner::is_amazon_product_url_Valid() const{
    return m_amazon_product_url_isValid;
}

qint32 OAIGET_lists_format_200_response_results_inner::getAsterisk() const {
    return m_asterisk;
}
void OAIGET_lists_format_200_response_results_inner::setAsterisk(const qint32 &asterisk) {
    m_asterisk = asterisk;
    m_asterisk_isSet = true;
}

bool OAIGET_lists_format_200_response_results_inner::is_asterisk_Set() const{
    return m_asterisk_isSet;
}

bool OAIGET_lists_format_200_response_results_inner::is_asterisk_Valid() const{
    return m_asterisk_isValid;
}

QString OAIGET_lists_format_200_response_results_inner::getBestsellersDate() const {
    return m_bestsellers_date;
}
void OAIGET_lists_format_200_response_results_inner::setBestsellersDate(const QString &bestsellers_date) {
    m_bestsellers_date = bestsellers_date;
    m_bestsellers_date_isSet = true;
}

bool OAIGET_lists_format_200_response_results_inner::is_bestsellers_date_Set() const{
    return m_bestsellers_date_isSet;
}

bool OAIGET_lists_format_200_response_results_inner::is_bestsellers_date_Valid() const{
    return m_bestsellers_date_isValid;
}

QList<OAIGET_lists_format_200_response_results_inner_book_details_inner> OAIGET_lists_format_200_response_results_inner::getBookDetails() const {
    return m_book_details;
}
void OAIGET_lists_format_200_response_results_inner::setBookDetails(const QList<OAIGET_lists_format_200_response_results_inner_book_details_inner> &book_details) {
    m_book_details = book_details;
    m_book_details_isSet = true;
}

bool OAIGET_lists_format_200_response_results_inner::is_book_details_Set() const{
    return m_book_details_isSet;
}

bool OAIGET_lists_format_200_response_results_inner::is_book_details_Valid() const{
    return m_book_details_isValid;
}

qint32 OAIGET_lists_format_200_response_results_inner::getDagger() const {
    return m_dagger;
}
void OAIGET_lists_format_200_response_results_inner::setDagger(const qint32 &dagger) {
    m_dagger = dagger;
    m_dagger_isSet = true;
}

bool OAIGET_lists_format_200_response_results_inner::is_dagger_Set() const{
    return m_dagger_isSet;
}

bool OAIGET_lists_format_200_response_results_inner::is_dagger_Valid() const{
    return m_dagger_isValid;
}

QString OAIGET_lists_format_200_response_results_inner::getDisplayName() const {
    return m_display_name;
}
void OAIGET_lists_format_200_response_results_inner::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGET_lists_format_200_response_results_inner::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGET_lists_format_200_response_results_inner::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QList<OAIGET_lists_format_200_response_results_inner_isbns_inner> OAIGET_lists_format_200_response_results_inner::getIsbns() const {
    return m_isbns;
}
void OAIGET_lists_format_200_response_results_inner::setIsbns(const QList<OAIGET_lists_format_200_response_results_inner_isbns_inner> &isbns) {
    m_isbns = isbns;
    m_isbns_isSet = true;
}

bool OAIGET_lists_format_200_response_results_inner::is_isbns_Set() const{
    return m_isbns_isSet;
}

bool OAIGET_lists_format_200_response_results_inner::is_isbns_Valid() const{
    return m_isbns_isValid;
}

QString OAIGET_lists_format_200_response_results_inner::getListName() const {
    return m_list_name;
}
void OAIGET_lists_format_200_response_results_inner::setListName(const QString &list_name) {
    m_list_name = list_name;
    m_list_name_isSet = true;
}

bool OAIGET_lists_format_200_response_results_inner::is_list_name_Set() const{
    return m_list_name_isSet;
}

bool OAIGET_lists_format_200_response_results_inner::is_list_name_Valid() const{
    return m_list_name_isValid;
}

QString OAIGET_lists_format_200_response_results_inner::getPublishedDate() const {
    return m_published_date;
}
void OAIGET_lists_format_200_response_results_inner::setPublishedDate(const QString &published_date) {
    m_published_date = published_date;
    m_published_date_isSet = true;
}

bool OAIGET_lists_format_200_response_results_inner::is_published_date_Set() const{
    return m_published_date_isSet;
}

bool OAIGET_lists_format_200_response_results_inner::is_published_date_Valid() const{
    return m_published_date_isValid;
}

qint32 OAIGET_lists_format_200_response_results_inner::getRank() const {
    return m_rank;
}
void OAIGET_lists_format_200_response_results_inner::setRank(const qint32 &rank) {
    m_rank = rank;
    m_rank_isSet = true;
}

bool OAIGET_lists_format_200_response_results_inner::is_rank_Set() const{
    return m_rank_isSet;
}

bool OAIGET_lists_format_200_response_results_inner::is_rank_Valid() const{
    return m_rank_isValid;
}

qint32 OAIGET_lists_format_200_response_results_inner::getRankLastWeek() const {
    return m_rank_last_week;
}
void OAIGET_lists_format_200_response_results_inner::setRankLastWeek(const qint32 &rank_last_week) {
    m_rank_last_week = rank_last_week;
    m_rank_last_week_isSet = true;
}

bool OAIGET_lists_format_200_response_results_inner::is_rank_last_week_Set() const{
    return m_rank_last_week_isSet;
}

bool OAIGET_lists_format_200_response_results_inner::is_rank_last_week_Valid() const{
    return m_rank_last_week_isValid;
}

QList<OAIGET_lists_format_200_response_results_inner_reviews_inner> OAIGET_lists_format_200_response_results_inner::getReviews() const {
    return m_reviews;
}
void OAIGET_lists_format_200_response_results_inner::setReviews(const QList<OAIGET_lists_format_200_response_results_inner_reviews_inner> &reviews) {
    m_reviews = reviews;
    m_reviews_isSet = true;
}

bool OAIGET_lists_format_200_response_results_inner::is_reviews_Set() const{
    return m_reviews_isSet;
}

bool OAIGET_lists_format_200_response_results_inner::is_reviews_Valid() const{
    return m_reviews_isValid;
}

qint32 OAIGET_lists_format_200_response_results_inner::getWeeksOnList() const {
    return m_weeks_on_list;
}
void OAIGET_lists_format_200_response_results_inner::setWeeksOnList(const qint32 &weeks_on_list) {
    m_weeks_on_list = weeks_on_list;
    m_weeks_on_list_isSet = true;
}

bool OAIGET_lists_format_200_response_results_inner::is_weeks_on_list_Set() const{
    return m_weeks_on_list_isSet;
}

bool OAIGET_lists_format_200_response_results_inner::is_weeks_on_list_Valid() const{
    return m_weeks_on_list_isValid;
}

bool OAIGET_lists_format_200_response_results_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amazon_product_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_asterisk_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bestsellers_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_book_details.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_dagger_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_isbns.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_published_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rank_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rank_last_week_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reviews.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_weeks_on_list_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGET_lists_format_200_response_results_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
