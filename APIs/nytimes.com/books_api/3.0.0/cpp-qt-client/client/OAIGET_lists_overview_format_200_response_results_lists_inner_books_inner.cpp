/**
 * Books API
 * The Books API provides information about book reviews and The New York Times bestsellers lists.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner() {
    this->initializeModel();
}

OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::~OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner() {}

void OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::initializeModel() {

    m_age_group_isSet = false;
    m_age_group_isValid = false;

    m_author_isSet = false;
    m_author_isValid = false;

    m_contributor_isSet = false;
    m_contributor_isValid = false;

    m_contributor_note_isSet = false;
    m_contributor_note_isValid = false;

    m_created_date_isSet = false;
    m_created_date_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_primary_isbn10_isSet = false;
    m_primary_isbn10_isValid = false;

    m_primary_isbn13_isSet = false;
    m_primary_isbn13_isValid = false;

    m_publisher_isSet = false;
    m_publisher_isValid = false;

    m_rank_isSet = false;
    m_rank_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_updated_date_isSet = false;
    m_updated_date_isValid = false;
}

void OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::fromJsonObject(QJsonObject json) {

    m_age_group_isValid = ::OpenAPI::fromJsonValue(m_age_group, json[QString("age_group")]);
    m_age_group_isSet = !json[QString("age_group")].isNull() && m_age_group_isValid;

    m_author_isValid = ::OpenAPI::fromJsonValue(m_author, json[QString("author")]);
    m_author_isSet = !json[QString("author")].isNull() && m_author_isValid;

    m_contributor_isValid = ::OpenAPI::fromJsonValue(m_contributor, json[QString("contributor")]);
    m_contributor_isSet = !json[QString("contributor")].isNull() && m_contributor_isValid;

    m_contributor_note_isValid = ::OpenAPI::fromJsonValue(m_contributor_note, json[QString("contributor_note")]);
    m_contributor_note_isSet = !json[QString("contributor_note")].isNull() && m_contributor_note_isValid;

    m_created_date_isValid = ::OpenAPI::fromJsonValue(m_created_date, json[QString("created_date")]);
    m_created_date_isSet = !json[QString("created_date")].isNull() && m_created_date_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_primary_isbn10_isValid = ::OpenAPI::fromJsonValue(m_primary_isbn10, json[QString("primary_isbn10")]);
    m_primary_isbn10_isSet = !json[QString("primary_isbn10")].isNull() && m_primary_isbn10_isValid;

    m_primary_isbn13_isValid = ::OpenAPI::fromJsonValue(m_primary_isbn13, json[QString("primary_isbn13")]);
    m_primary_isbn13_isSet = !json[QString("primary_isbn13")].isNull() && m_primary_isbn13_isValid;

    m_publisher_isValid = ::OpenAPI::fromJsonValue(m_publisher, json[QString("publisher")]);
    m_publisher_isSet = !json[QString("publisher")].isNull() && m_publisher_isValid;

    m_rank_isValid = ::OpenAPI::fromJsonValue(m_rank, json[QString("rank")]);
    m_rank_isSet = !json[QString("rank")].isNull() && m_rank_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_updated_date_isValid = ::OpenAPI::fromJsonValue(m_updated_date, json[QString("updated_date")]);
    m_updated_date_isSet = !json[QString("updated_date")].isNull() && m_updated_date_isValid;
}

QString OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_age_group_isSet) {
        obj.insert(QString("age_group"), ::OpenAPI::toJsonValue(m_age_group));
    }
    if (m_author_isSet) {
        obj.insert(QString("author"), ::OpenAPI::toJsonValue(m_author));
    }
    if (m_contributor_isSet) {
        obj.insert(QString("contributor"), ::OpenAPI::toJsonValue(m_contributor));
    }
    if (m_contributor_note_isSet) {
        obj.insert(QString("contributor_note"), ::OpenAPI::toJsonValue(m_contributor_note));
    }
    if (m_created_date_isSet) {
        obj.insert(QString("created_date"), ::OpenAPI::toJsonValue(m_created_date));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_price_isSet) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_primary_isbn10_isSet) {
        obj.insert(QString("primary_isbn10"), ::OpenAPI::toJsonValue(m_primary_isbn10));
    }
    if (m_primary_isbn13_isSet) {
        obj.insert(QString("primary_isbn13"), ::OpenAPI::toJsonValue(m_primary_isbn13));
    }
    if (m_publisher_isSet) {
        obj.insert(QString("publisher"), ::OpenAPI::toJsonValue(m_publisher));
    }
    if (m_rank_isSet) {
        obj.insert(QString("rank"), ::OpenAPI::toJsonValue(m_rank));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_updated_date_isSet) {
        obj.insert(QString("updated_date"), ::OpenAPI::toJsonValue(m_updated_date));
    }
    return obj;
}

QString OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::getAgeGroup() const {
    return m_age_group;
}
void OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::setAgeGroup(const QString &age_group) {
    m_age_group = age_group;
    m_age_group_isSet = true;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::is_age_group_Set() const{
    return m_age_group_isSet;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::is_age_group_Valid() const{
    return m_age_group_isValid;
}

QString OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::getAuthor() const {
    return m_author;
}
void OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::setAuthor(const QString &author) {
    m_author = author;
    m_author_isSet = true;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::is_author_Set() const{
    return m_author_isSet;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::is_author_Valid() const{
    return m_author_isValid;
}

QString OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::getContributor() const {
    return m_contributor;
}
void OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::setContributor(const QString &contributor) {
    m_contributor = contributor;
    m_contributor_isSet = true;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::is_contributor_Set() const{
    return m_contributor_isSet;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::is_contributor_Valid() const{
    return m_contributor_isValid;
}

QString OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::getContributorNote() const {
    return m_contributor_note;
}
void OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::setContributorNote(const QString &contributor_note) {
    m_contributor_note = contributor_note;
    m_contributor_note_isSet = true;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::is_contributor_note_Set() const{
    return m_contributor_note_isSet;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::is_contributor_note_Valid() const{
    return m_contributor_note_isValid;
}

QString OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::getCreatedDate() const {
    return m_created_date;
}
void OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::setCreatedDate(const QString &created_date) {
    m_created_date = created_date;
    m_created_date_isSet = true;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::is_created_date_Set() const{
    return m_created_date_isSet;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::is_created_date_Valid() const{
    return m_created_date_isValid;
}

QString OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::getDescription() const {
    return m_description;
}
void OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::is_description_Valid() const{
    return m_description_isValid;
}

qint32 OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::getPrice() const {
    return m_price;
}
void OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::setPrice(const qint32 &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::is_price_Set() const{
    return m_price_isSet;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::is_price_Valid() const{
    return m_price_isValid;
}

QString OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::getPrimaryIsbn10() const {
    return m_primary_isbn10;
}
void OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::setPrimaryIsbn10(const QString &primary_isbn10) {
    m_primary_isbn10 = primary_isbn10;
    m_primary_isbn10_isSet = true;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::is_primary_isbn10_Set() const{
    return m_primary_isbn10_isSet;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::is_primary_isbn10_Valid() const{
    return m_primary_isbn10_isValid;
}

QString OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::getPrimaryIsbn13() const {
    return m_primary_isbn13;
}
void OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::setPrimaryIsbn13(const QString &primary_isbn13) {
    m_primary_isbn13 = primary_isbn13;
    m_primary_isbn13_isSet = true;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::is_primary_isbn13_Set() const{
    return m_primary_isbn13_isSet;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::is_primary_isbn13_Valid() const{
    return m_primary_isbn13_isValid;
}

QString OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::getPublisher() const {
    return m_publisher;
}
void OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::setPublisher(const QString &publisher) {
    m_publisher = publisher;
    m_publisher_isSet = true;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::is_publisher_Set() const{
    return m_publisher_isSet;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::is_publisher_Valid() const{
    return m_publisher_isValid;
}

qint32 OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::getRank() const {
    return m_rank;
}
void OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::setRank(const qint32 &rank) {
    m_rank = rank;
    m_rank_isSet = true;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::is_rank_Set() const{
    return m_rank_isSet;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::is_rank_Valid() const{
    return m_rank_isValid;
}

QString OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::getTitle() const {
    return m_title;
}
void OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::is_title_Set() const{
    return m_title_isSet;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::getUpdatedDate() const {
    return m_updated_date;
}
void OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::setUpdatedDate(const QString &updated_date) {
    m_updated_date = updated_date;
    m_updated_date_isSet = true;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::is_updated_date_Set() const{
    return m_updated_date_isSet;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::is_updated_date_Valid() const{
    return m_updated_date_isValid;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_age_group_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_author_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contributor_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contributor_note_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_isbn10_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_isbn13_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publisher_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rank_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGET_lists_overview_format_200_response_results_lists_inner_books_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
