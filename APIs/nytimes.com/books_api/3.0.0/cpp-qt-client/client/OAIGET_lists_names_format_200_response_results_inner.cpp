/**
 * Books API
 * The Books API provides information about book reviews and The New York Times bestsellers lists.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGET_lists_names_format_200_response_results_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGET_lists_names_format_200_response_results_inner::OAIGET_lists_names_format_200_response_results_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGET_lists_names_format_200_response_results_inner::OAIGET_lists_names_format_200_response_results_inner() {
    this->initializeModel();
}

OAIGET_lists_names_format_200_response_results_inner::~OAIGET_lists_names_format_200_response_results_inner() {}

void OAIGET_lists_names_format_200_response_results_inner::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_list_name_isSet = false;
    m_list_name_isValid = false;

    m_list_name_encoded_isSet = false;
    m_list_name_encoded_isValid = false;

    m_newest_published_date_isSet = false;
    m_newest_published_date_isValid = false;

    m_oldest_published_date_isSet = false;
    m_oldest_published_date_isValid = false;

    m_updated_isSet = false;
    m_updated_isValid = false;
}

void OAIGET_lists_names_format_200_response_results_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGET_lists_names_format_200_response_results_inner::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("display_name")]);
    m_display_name_isSet = !json[QString("display_name")].isNull() && m_display_name_isValid;

    m_list_name_isValid = ::OpenAPI::fromJsonValue(m_list_name, json[QString("list_name")]);
    m_list_name_isSet = !json[QString("list_name")].isNull() && m_list_name_isValid;

    m_list_name_encoded_isValid = ::OpenAPI::fromJsonValue(m_list_name_encoded, json[QString("list_name_encoded")]);
    m_list_name_encoded_isSet = !json[QString("list_name_encoded")].isNull() && m_list_name_encoded_isValid;

    m_newest_published_date_isValid = ::OpenAPI::fromJsonValue(m_newest_published_date, json[QString("newest_published_date")]);
    m_newest_published_date_isSet = !json[QString("newest_published_date")].isNull() && m_newest_published_date_isValid;

    m_oldest_published_date_isValid = ::OpenAPI::fromJsonValue(m_oldest_published_date, json[QString("oldest_published_date")]);
    m_oldest_published_date_isSet = !json[QString("oldest_published_date")].isNull() && m_oldest_published_date_isValid;

    m_updated_isValid = ::OpenAPI::fromJsonValue(m_updated, json[QString("updated")]);
    m_updated_isSet = !json[QString("updated")].isNull() && m_updated_isValid;
}

QString OAIGET_lists_names_format_200_response_results_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGET_lists_names_format_200_response_results_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("display_name"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_list_name_isSet) {
        obj.insert(QString("list_name"), ::OpenAPI::toJsonValue(m_list_name));
    }
    if (m_list_name_encoded_isSet) {
        obj.insert(QString("list_name_encoded"), ::OpenAPI::toJsonValue(m_list_name_encoded));
    }
    if (m_newest_published_date_isSet) {
        obj.insert(QString("newest_published_date"), ::OpenAPI::toJsonValue(m_newest_published_date));
    }
    if (m_oldest_published_date_isSet) {
        obj.insert(QString("oldest_published_date"), ::OpenAPI::toJsonValue(m_oldest_published_date));
    }
    if (m_updated_isSet) {
        obj.insert(QString("updated"), ::OpenAPI::toJsonValue(m_updated));
    }
    return obj;
}

QString OAIGET_lists_names_format_200_response_results_inner::getDisplayName() const {
    return m_display_name;
}
void OAIGET_lists_names_format_200_response_results_inner::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGET_lists_names_format_200_response_results_inner::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGET_lists_names_format_200_response_results_inner::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGET_lists_names_format_200_response_results_inner::getListName() const {
    return m_list_name;
}
void OAIGET_lists_names_format_200_response_results_inner::setListName(const QString &list_name) {
    m_list_name = list_name;
    m_list_name_isSet = true;
}

bool OAIGET_lists_names_format_200_response_results_inner::is_list_name_Set() const{
    return m_list_name_isSet;
}

bool OAIGET_lists_names_format_200_response_results_inner::is_list_name_Valid() const{
    return m_list_name_isValid;
}

QString OAIGET_lists_names_format_200_response_results_inner::getListNameEncoded() const {
    return m_list_name_encoded;
}
void OAIGET_lists_names_format_200_response_results_inner::setListNameEncoded(const QString &list_name_encoded) {
    m_list_name_encoded = list_name_encoded;
    m_list_name_encoded_isSet = true;
}

bool OAIGET_lists_names_format_200_response_results_inner::is_list_name_encoded_Set() const{
    return m_list_name_encoded_isSet;
}

bool OAIGET_lists_names_format_200_response_results_inner::is_list_name_encoded_Valid() const{
    return m_list_name_encoded_isValid;
}

QString OAIGET_lists_names_format_200_response_results_inner::getNewestPublishedDate() const {
    return m_newest_published_date;
}
void OAIGET_lists_names_format_200_response_results_inner::setNewestPublishedDate(const QString &newest_published_date) {
    m_newest_published_date = newest_published_date;
    m_newest_published_date_isSet = true;
}

bool OAIGET_lists_names_format_200_response_results_inner::is_newest_published_date_Set() const{
    return m_newest_published_date_isSet;
}

bool OAIGET_lists_names_format_200_response_results_inner::is_newest_published_date_Valid() const{
    return m_newest_published_date_isValid;
}

QString OAIGET_lists_names_format_200_response_results_inner::getOldestPublishedDate() const {
    return m_oldest_published_date;
}
void OAIGET_lists_names_format_200_response_results_inner::setOldestPublishedDate(const QString &oldest_published_date) {
    m_oldest_published_date = oldest_published_date;
    m_oldest_published_date_isSet = true;
}

bool OAIGET_lists_names_format_200_response_results_inner::is_oldest_published_date_Set() const{
    return m_oldest_published_date_isSet;
}

bool OAIGET_lists_names_format_200_response_results_inner::is_oldest_published_date_Valid() const{
    return m_oldest_published_date_isValid;
}

QString OAIGET_lists_names_format_200_response_results_inner::getUpdated() const {
    return m_updated;
}
void OAIGET_lists_names_format_200_response_results_inner::setUpdated(const QString &updated) {
    m_updated = updated;
    m_updated_isSet = true;
}

bool OAIGET_lists_names_format_200_response_results_inner::is_updated_Set() const{
    return m_updated_isSet;
}

bool OAIGET_lists_names_format_200_response_results_inner::is_updated_Valid() const{
    return m_updated_isValid;
}

bool OAIGET_lists_names_format_200_response_results_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_name_encoded_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_newest_published_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_oldest_published_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGET_lists_names_format_200_response_results_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
