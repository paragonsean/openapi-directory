/**
 * Books API
 * The Books API provides information about book reviews and The New York Times bestsellers lists.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGET_lists_date_list_json_200_response_results.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGET_lists_date_list_json_200_response_results::OAIGET_lists_date_list_json_200_response_results(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGET_lists_date_list_json_200_response_results::OAIGET_lists_date_list_json_200_response_results() {
    this->initializeModel();
}

OAIGET_lists_date_list_json_200_response_results::~OAIGET_lists_date_list_json_200_response_results() {}

void OAIGET_lists_date_list_json_200_response_results::initializeModel() {

    m_bestsellers_date_isSet = false;
    m_bestsellers_date_isValid = false;

    m_books_isSet = false;
    m_books_isValid = false;

    m_corrections_isSet = false;
    m_corrections_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_list_name_isSet = false;
    m_list_name_isValid = false;

    m_normal_list_ends_at_isSet = false;
    m_normal_list_ends_at_isValid = false;

    m_published_date_isSet = false;
    m_published_date_isValid = false;

    m_updated_isSet = false;
    m_updated_isValid = false;
}

void OAIGET_lists_date_list_json_200_response_results::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGET_lists_date_list_json_200_response_results::fromJsonObject(QJsonObject json) {

    m_bestsellers_date_isValid = ::OpenAPI::fromJsonValue(m_bestsellers_date, json[QString("bestsellers_date")]);
    m_bestsellers_date_isSet = !json[QString("bestsellers_date")].isNull() && m_bestsellers_date_isValid;

    m_books_isValid = ::OpenAPI::fromJsonValue(m_books, json[QString("books")]);
    m_books_isSet = !json[QString("books")].isNull() && m_books_isValid;

    m_corrections_isValid = ::OpenAPI::fromJsonValue(m_corrections, json[QString("corrections")]);
    m_corrections_isSet = !json[QString("corrections")].isNull() && m_corrections_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("display_name")]);
    m_display_name_isSet = !json[QString("display_name")].isNull() && m_display_name_isValid;

    m_list_name_isValid = ::OpenAPI::fromJsonValue(m_list_name, json[QString("list_name")]);
    m_list_name_isSet = !json[QString("list_name")].isNull() && m_list_name_isValid;

    m_normal_list_ends_at_isValid = ::OpenAPI::fromJsonValue(m_normal_list_ends_at, json[QString("normal_list_ends_at")]);
    m_normal_list_ends_at_isSet = !json[QString("normal_list_ends_at")].isNull() && m_normal_list_ends_at_isValid;

    m_published_date_isValid = ::OpenAPI::fromJsonValue(m_published_date, json[QString("published_date")]);
    m_published_date_isSet = !json[QString("published_date")].isNull() && m_published_date_isValid;

    m_updated_isValid = ::OpenAPI::fromJsonValue(m_updated, json[QString("updated")]);
    m_updated_isSet = !json[QString("updated")].isNull() && m_updated_isValid;
}

QString OAIGET_lists_date_list_json_200_response_results::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGET_lists_date_list_json_200_response_results::asJsonObject() const {
    QJsonObject obj;
    if (m_bestsellers_date_isSet) {
        obj.insert(QString("bestsellers_date"), ::OpenAPI::toJsonValue(m_bestsellers_date));
    }
    if (m_books.size() > 0) {
        obj.insert(QString("books"), ::OpenAPI::toJsonValue(m_books));
    }
    if (m_corrections.size() > 0) {
        obj.insert(QString("corrections"), ::OpenAPI::toJsonValue(m_corrections));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("display_name"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_list_name_isSet) {
        obj.insert(QString("list_name"), ::OpenAPI::toJsonValue(m_list_name));
    }
    if (m_normal_list_ends_at_isSet) {
        obj.insert(QString("normal_list_ends_at"), ::OpenAPI::toJsonValue(m_normal_list_ends_at));
    }
    if (m_published_date_isSet) {
        obj.insert(QString("published_date"), ::OpenAPI::toJsonValue(m_published_date));
    }
    if (m_updated_isSet) {
        obj.insert(QString("updated"), ::OpenAPI::toJsonValue(m_updated));
    }
    return obj;
}

QString OAIGET_lists_date_list_json_200_response_results::getBestsellersDate() const {
    return m_bestsellers_date;
}
void OAIGET_lists_date_list_json_200_response_results::setBestsellersDate(const QString &bestsellers_date) {
    m_bestsellers_date = bestsellers_date;
    m_bestsellers_date_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results::is_bestsellers_date_Set() const{
    return m_bestsellers_date_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results::is_bestsellers_date_Valid() const{
    return m_bestsellers_date_isValid;
}

QList<OAIGET_lists_date_list_json_200_response_results_books_inner> OAIGET_lists_date_list_json_200_response_results::getBooks() const {
    return m_books;
}
void OAIGET_lists_date_list_json_200_response_results::setBooks(const QList<OAIGET_lists_date_list_json_200_response_results_books_inner> &books) {
    m_books = books;
    m_books_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results::is_books_Set() const{
    return m_books_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results::is_books_Valid() const{
    return m_books_isValid;
}

QList<OAIObject> OAIGET_lists_date_list_json_200_response_results::getCorrections() const {
    return m_corrections;
}
void OAIGET_lists_date_list_json_200_response_results::setCorrections(const QList<OAIObject> &corrections) {
    m_corrections = corrections;
    m_corrections_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results::is_corrections_Set() const{
    return m_corrections_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results::is_corrections_Valid() const{
    return m_corrections_isValid;
}

QString OAIGET_lists_date_list_json_200_response_results::getDisplayName() const {
    return m_display_name;
}
void OAIGET_lists_date_list_json_200_response_results::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGET_lists_date_list_json_200_response_results::getListName() const {
    return m_list_name;
}
void OAIGET_lists_date_list_json_200_response_results::setListName(const QString &list_name) {
    m_list_name = list_name;
    m_list_name_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results::is_list_name_Set() const{
    return m_list_name_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results::is_list_name_Valid() const{
    return m_list_name_isValid;
}

qint32 OAIGET_lists_date_list_json_200_response_results::getNormalListEndsAt() const {
    return m_normal_list_ends_at;
}
void OAIGET_lists_date_list_json_200_response_results::setNormalListEndsAt(const qint32 &normal_list_ends_at) {
    m_normal_list_ends_at = normal_list_ends_at;
    m_normal_list_ends_at_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results::is_normal_list_ends_at_Set() const{
    return m_normal_list_ends_at_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results::is_normal_list_ends_at_Valid() const{
    return m_normal_list_ends_at_isValid;
}

QString OAIGET_lists_date_list_json_200_response_results::getPublishedDate() const {
    return m_published_date;
}
void OAIGET_lists_date_list_json_200_response_results::setPublishedDate(const QString &published_date) {
    m_published_date = published_date;
    m_published_date_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results::is_published_date_Set() const{
    return m_published_date_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results::is_published_date_Valid() const{
    return m_published_date_isValid;
}

QString OAIGET_lists_date_list_json_200_response_results::getUpdated() const {
    return m_updated;
}
void OAIGET_lists_date_list_json_200_response_results::setUpdated(const QString &updated) {
    m_updated = updated;
    m_updated_isSet = true;
}

bool OAIGET_lists_date_list_json_200_response_results::is_updated_Set() const{
    return m_updated_isSet;
}

bool OAIGET_lists_date_list_json_200_response_results::is_updated_Valid() const{
    return m_updated_isValid;
}

bool OAIGET_lists_date_list_json_200_response_results::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bestsellers_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_books.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_corrections.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_normal_list_ends_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_published_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGET_lists_date_list_json_200_response_results::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
