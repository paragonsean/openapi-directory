/**
 * Books API
 * The Books API provides information about book reviews and The New York Times bestsellers lists.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGET_lists_format_200_response_results_inner_isbns_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGET_lists_format_200_response_results_inner_isbns_inner::OAIGET_lists_format_200_response_results_inner_isbns_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGET_lists_format_200_response_results_inner_isbns_inner::OAIGET_lists_format_200_response_results_inner_isbns_inner() {
    this->initializeModel();
}

OAIGET_lists_format_200_response_results_inner_isbns_inner::~OAIGET_lists_format_200_response_results_inner_isbns_inner() {}

void OAIGET_lists_format_200_response_results_inner_isbns_inner::initializeModel() {

    m_isbn10_isSet = false;
    m_isbn10_isValid = false;

    m_isbn13_isSet = false;
    m_isbn13_isValid = false;
}

void OAIGET_lists_format_200_response_results_inner_isbns_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGET_lists_format_200_response_results_inner_isbns_inner::fromJsonObject(QJsonObject json) {

    m_isbn10_isValid = ::OpenAPI::fromJsonValue(m_isbn10, json[QString("isbn10")]);
    m_isbn10_isSet = !json[QString("isbn10")].isNull() && m_isbn10_isValid;

    m_isbn13_isValid = ::OpenAPI::fromJsonValue(m_isbn13, json[QString("isbn13")]);
    m_isbn13_isSet = !json[QString("isbn13")].isNull() && m_isbn13_isValid;
}

QString OAIGET_lists_format_200_response_results_inner_isbns_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGET_lists_format_200_response_results_inner_isbns_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_isbn10_isSet) {
        obj.insert(QString("isbn10"), ::OpenAPI::toJsonValue(m_isbn10));
    }
    if (m_isbn13_isSet) {
        obj.insert(QString("isbn13"), ::OpenAPI::toJsonValue(m_isbn13));
    }
    return obj;
}

QString OAIGET_lists_format_200_response_results_inner_isbns_inner::getIsbn10() const {
    return m_isbn10;
}
void OAIGET_lists_format_200_response_results_inner_isbns_inner::setIsbn10(const QString &isbn10) {
    m_isbn10 = isbn10;
    m_isbn10_isSet = true;
}

bool OAIGET_lists_format_200_response_results_inner_isbns_inner::is_isbn10_Set() const{
    return m_isbn10_isSet;
}

bool OAIGET_lists_format_200_response_results_inner_isbns_inner::is_isbn10_Valid() const{
    return m_isbn10_isValid;
}

QString OAIGET_lists_format_200_response_results_inner_isbns_inner::getIsbn13() const {
    return m_isbn13;
}
void OAIGET_lists_format_200_response_results_inner_isbns_inner::setIsbn13(const QString &isbn13) {
    m_isbn13 = isbn13;
    m_isbn13_isSet = true;
}

bool OAIGET_lists_format_200_response_results_inner_isbns_inner::is_isbn13_Set() const{
    return m_isbn13_isSet;
}

bool OAIGET_lists_format_200_response_results_inner_isbns_inner::is_isbn13_Valid() const{
    return m_isbn13_isValid;
}

bool OAIGET_lists_format_200_response_results_inner_isbns_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_isbn10_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_isbn13_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGET_lists_format_200_response_results_inner_isbns_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
