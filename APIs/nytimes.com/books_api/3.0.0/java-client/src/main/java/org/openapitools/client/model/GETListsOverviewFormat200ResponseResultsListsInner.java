/*
 * Books API
 * The Books API provides information about book reviews and The New York Times bestsellers lists.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GETListsOverviewFormat200ResponseResultsListsInnerBooksInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GETListsOverviewFormat200ResponseResultsListsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:23:36.772134-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GETListsOverviewFormat200ResponseResultsListsInner {
  public static final String SERIALIZED_NAME_BOOKS = "books";
  @SerializedName(SERIALIZED_NAME_BOOKS)
  private List<GETListsOverviewFormat200ResponseResultsListsInnerBooksInner> books = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "display_name";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_LIST_ID = "list_id";
  @SerializedName(SERIALIZED_NAME_LIST_ID)
  private Integer listId;

  public static final String SERIALIZED_NAME_LIST_IMAGE = "list_image";
  @SerializedName(SERIALIZED_NAME_LIST_IMAGE)
  private String listImage;

  public static final String SERIALIZED_NAME_LIST_NAME = "list_name";
  @SerializedName(SERIALIZED_NAME_LIST_NAME)
  private String listName;

  public static final String SERIALIZED_NAME_UPDATED = "updated";
  @SerializedName(SERIALIZED_NAME_UPDATED)
  private String updated;

  public GETListsOverviewFormat200ResponseResultsListsInner() {
  }

  public GETListsOverviewFormat200ResponseResultsListsInner books(List<GETListsOverviewFormat200ResponseResultsListsInnerBooksInner> books) {
    this.books = books;
    return this;
  }

  public GETListsOverviewFormat200ResponseResultsListsInner addBooksItem(GETListsOverviewFormat200ResponseResultsListsInnerBooksInner booksItem) {
    if (this.books == null) {
      this.books = new ArrayList<>();
    }
    this.books.add(booksItem);
    return this;
  }

  /**
   * Get books
   * @return books
   */
  @javax.annotation.Nullable
  public List<GETListsOverviewFormat200ResponseResultsListsInnerBooksInner> getBooks() {
    return books;
  }

  public void setBooks(List<GETListsOverviewFormat200ResponseResultsListsInnerBooksInner> books) {
    this.books = books;
  }


  public GETListsOverviewFormat200ResponseResultsListsInner displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GETListsOverviewFormat200ResponseResultsListsInner listId(Integer listId) {
    this.listId = listId;
    return this;
  }

  /**
   * Get listId
   * @return listId
   */
  @javax.annotation.Nullable
  public Integer getListId() {
    return listId;
  }

  public void setListId(Integer listId) {
    this.listId = listId;
  }


  public GETListsOverviewFormat200ResponseResultsListsInner listImage(String listImage) {
    this.listImage = listImage;
    return this;
  }

  /**
   * Get listImage
   * @return listImage
   */
  @javax.annotation.Nullable
  public String getListImage() {
    return listImage;
  }

  public void setListImage(String listImage) {
    this.listImage = listImage;
  }


  public GETListsOverviewFormat200ResponseResultsListsInner listName(String listName) {
    this.listName = listName;
    return this;
  }

  /**
   * Get listName
   * @return listName
   */
  @javax.annotation.Nullable
  public String getListName() {
    return listName;
  }

  public void setListName(String listName) {
    this.listName = listName;
  }


  public GETListsOverviewFormat200ResponseResultsListsInner updated(String updated) {
    this.updated = updated;
    return this;
  }

  /**
   * Get updated
   * @return updated
   */
  @javax.annotation.Nullable
  public String getUpdated() {
    return updated;
  }

  public void setUpdated(String updated) {
    this.updated = updated;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GETListsOverviewFormat200ResponseResultsListsInner geTListsOverviewFormat200ResponseResultsListsInner = (GETListsOverviewFormat200ResponseResultsListsInner) o;
    return Objects.equals(this.books, geTListsOverviewFormat200ResponseResultsListsInner.books) &&
        Objects.equals(this.displayName, geTListsOverviewFormat200ResponseResultsListsInner.displayName) &&
        Objects.equals(this.listId, geTListsOverviewFormat200ResponseResultsListsInner.listId) &&
        Objects.equals(this.listImage, geTListsOverviewFormat200ResponseResultsListsInner.listImage) &&
        Objects.equals(this.listName, geTListsOverviewFormat200ResponseResultsListsInner.listName) &&
        Objects.equals(this.updated, geTListsOverviewFormat200ResponseResultsListsInner.updated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(books, displayName, listId, listImage, listName, updated);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GETListsOverviewFormat200ResponseResultsListsInner {\n");
    sb.append("    books: ").append(toIndentedString(books)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    listId: ").append(toIndentedString(listId)).append("\n");
    sb.append("    listImage: ").append(toIndentedString(listImage)).append("\n");
    sb.append("    listName: ").append(toIndentedString(listName)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("books");
    openapiFields.add("display_name");
    openapiFields.add("list_id");
    openapiFields.add("list_image");
    openapiFields.add("list_name");
    openapiFields.add("updated");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GETListsOverviewFormat200ResponseResultsListsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GETListsOverviewFormat200ResponseResultsListsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GETListsOverviewFormat200ResponseResultsListsInner is not found in the empty JSON string", GETListsOverviewFormat200ResponseResultsListsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GETListsOverviewFormat200ResponseResultsListsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GETListsOverviewFormat200ResponseResultsListsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("books") != null && !jsonObj.get("books").isJsonNull()) {
        JsonArray jsonArraybooks = jsonObj.getAsJsonArray("books");
        if (jsonArraybooks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("books").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `books` to be an array in the JSON string but got `%s`", jsonObj.get("books").toString()));
          }

          // validate the optional field `books` (array)
          for (int i = 0; i < jsonArraybooks.size(); i++) {
            GETListsOverviewFormat200ResponseResultsListsInnerBooksInner.validateJsonElement(jsonArraybooks.get(i));
          };
        }
      }
      if ((jsonObj.get("display_name") != null && !jsonObj.get("display_name").isJsonNull()) && !jsonObj.get("display_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `display_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("display_name").toString()));
      }
      if ((jsonObj.get("list_image") != null && !jsonObj.get("list_image").isJsonNull()) && !jsonObj.get("list_image").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `list_image` to be a primitive type in the JSON string but got `%s`", jsonObj.get("list_image").toString()));
      }
      if ((jsonObj.get("list_name") != null && !jsonObj.get("list_name").isJsonNull()) && !jsonObj.get("list_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `list_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("list_name").toString()));
      }
      if ((jsonObj.get("updated") != null && !jsonObj.get("updated").isJsonNull()) && !jsonObj.get("updated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updated").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GETListsOverviewFormat200ResponseResultsListsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GETListsOverviewFormat200ResponseResultsListsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GETListsOverviewFormat200ResponseResultsListsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GETListsOverviewFormat200ResponseResultsListsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GETListsOverviewFormat200ResponseResultsListsInner>() {
           @Override
           public void write(JsonWriter out, GETListsOverviewFormat200ResponseResultsListsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GETListsOverviewFormat200ResponseResultsListsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GETListsOverviewFormat200ResponseResultsListsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GETListsOverviewFormat200ResponseResultsListsInner
   * @throws IOException if the JSON string is invalid with respect to GETListsOverviewFormat200ResponseResultsListsInner
   */
  public static GETListsOverviewFormat200ResponseResultsListsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GETListsOverviewFormat200ResponseResultsListsInner.class);
  }

  /**
   * Convert an instance of GETListsOverviewFormat200ResponseResultsListsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

