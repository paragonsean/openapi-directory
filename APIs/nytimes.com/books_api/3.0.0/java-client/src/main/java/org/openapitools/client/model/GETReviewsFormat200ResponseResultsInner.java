/*
 * Books API
 * The Books API provides information about book reviews and The New York Times bestsellers lists.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GETReviewsFormat200ResponseResultsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:23:36.772134-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GETReviewsFormat200ResponseResultsInner {
  public static final String SERIALIZED_NAME_BOOK_AUTHOR = "book_author";
  @SerializedName(SERIALIZED_NAME_BOOK_AUTHOR)
  private String bookAuthor;

  public static final String SERIALIZED_NAME_BOOK_TITLE = "book_title";
  @SerializedName(SERIALIZED_NAME_BOOK_TITLE)
  private String bookTitle;

  public static final String SERIALIZED_NAME_BYLINE = "byline";
  @SerializedName(SERIALIZED_NAME_BYLINE)
  private String byline;

  public static final String SERIALIZED_NAME_ISBN13 = "isbn13";
  @SerializedName(SERIALIZED_NAME_ISBN13)
  private List<String> isbn13 = new ArrayList<>();

  public static final String SERIALIZED_NAME_PUBLICATION_DT = "publication_dt";
  @SerializedName(SERIALIZED_NAME_PUBLICATION_DT)
  private String publicationDt;

  public static final String SERIALIZED_NAME_SUMMARY = "summary";
  @SerializedName(SERIALIZED_NAME_SUMMARY)
  private String summary;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public GETReviewsFormat200ResponseResultsInner() {
  }

  public GETReviewsFormat200ResponseResultsInner bookAuthor(String bookAuthor) {
    this.bookAuthor = bookAuthor;
    return this;
  }

  /**
   * Get bookAuthor
   * @return bookAuthor
   */
  @javax.annotation.Nullable
  public String getBookAuthor() {
    return bookAuthor;
  }

  public void setBookAuthor(String bookAuthor) {
    this.bookAuthor = bookAuthor;
  }


  public GETReviewsFormat200ResponseResultsInner bookTitle(String bookTitle) {
    this.bookTitle = bookTitle;
    return this;
  }

  /**
   * Get bookTitle
   * @return bookTitle
   */
  @javax.annotation.Nullable
  public String getBookTitle() {
    return bookTitle;
  }

  public void setBookTitle(String bookTitle) {
    this.bookTitle = bookTitle;
  }


  public GETReviewsFormat200ResponseResultsInner byline(String byline) {
    this.byline = byline;
    return this;
  }

  /**
   * Get byline
   * @return byline
   */
  @javax.annotation.Nullable
  public String getByline() {
    return byline;
  }

  public void setByline(String byline) {
    this.byline = byline;
  }


  public GETReviewsFormat200ResponseResultsInner isbn13(List<String> isbn13) {
    this.isbn13 = isbn13;
    return this;
  }

  public GETReviewsFormat200ResponseResultsInner addIsbn13Item(String isbn13Item) {
    if (this.isbn13 == null) {
      this.isbn13 = new ArrayList<>();
    }
    this.isbn13.add(isbn13Item);
    return this;
  }

  /**
   * Get isbn13
   * @return isbn13
   */
  @javax.annotation.Nullable
  public List<String> getIsbn13() {
    return isbn13;
  }

  public void setIsbn13(List<String> isbn13) {
    this.isbn13 = isbn13;
  }


  public GETReviewsFormat200ResponseResultsInner publicationDt(String publicationDt) {
    this.publicationDt = publicationDt;
    return this;
  }

  /**
   * Get publicationDt
   * @return publicationDt
   */
  @javax.annotation.Nullable
  public String getPublicationDt() {
    return publicationDt;
  }

  public void setPublicationDt(String publicationDt) {
    this.publicationDt = publicationDt;
  }


  public GETReviewsFormat200ResponseResultsInner summary(String summary) {
    this.summary = summary;
    return this;
  }

  /**
   * Get summary
   * @return summary
   */
  @javax.annotation.Nullable
  public String getSummary() {
    return summary;
  }

  public void setSummary(String summary) {
    this.summary = summary;
  }


  public GETReviewsFormat200ResponseResultsInner url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GETReviewsFormat200ResponseResultsInner geTReviewsFormat200ResponseResultsInner = (GETReviewsFormat200ResponseResultsInner) o;
    return Objects.equals(this.bookAuthor, geTReviewsFormat200ResponseResultsInner.bookAuthor) &&
        Objects.equals(this.bookTitle, geTReviewsFormat200ResponseResultsInner.bookTitle) &&
        Objects.equals(this.byline, geTReviewsFormat200ResponseResultsInner.byline) &&
        Objects.equals(this.isbn13, geTReviewsFormat200ResponseResultsInner.isbn13) &&
        Objects.equals(this.publicationDt, geTReviewsFormat200ResponseResultsInner.publicationDt) &&
        Objects.equals(this.summary, geTReviewsFormat200ResponseResultsInner.summary) &&
        Objects.equals(this.url, geTReviewsFormat200ResponseResultsInner.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bookAuthor, bookTitle, byline, isbn13, publicationDt, summary, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GETReviewsFormat200ResponseResultsInner {\n");
    sb.append("    bookAuthor: ").append(toIndentedString(bookAuthor)).append("\n");
    sb.append("    bookTitle: ").append(toIndentedString(bookTitle)).append("\n");
    sb.append("    byline: ").append(toIndentedString(byline)).append("\n");
    sb.append("    isbn13: ").append(toIndentedString(isbn13)).append("\n");
    sb.append("    publicationDt: ").append(toIndentedString(publicationDt)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("book_author");
    openapiFields.add("book_title");
    openapiFields.add("byline");
    openapiFields.add("isbn13");
    openapiFields.add("publication_dt");
    openapiFields.add("summary");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GETReviewsFormat200ResponseResultsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GETReviewsFormat200ResponseResultsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GETReviewsFormat200ResponseResultsInner is not found in the empty JSON string", GETReviewsFormat200ResponseResultsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GETReviewsFormat200ResponseResultsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GETReviewsFormat200ResponseResultsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("book_author") != null && !jsonObj.get("book_author").isJsonNull()) && !jsonObj.get("book_author").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `book_author` to be a primitive type in the JSON string but got `%s`", jsonObj.get("book_author").toString()));
      }
      if ((jsonObj.get("book_title") != null && !jsonObj.get("book_title").isJsonNull()) && !jsonObj.get("book_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `book_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("book_title").toString()));
      }
      if ((jsonObj.get("byline") != null && !jsonObj.get("byline").isJsonNull()) && !jsonObj.get("byline").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `byline` to be a primitive type in the JSON string but got `%s`", jsonObj.get("byline").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("isbn13") != null && !jsonObj.get("isbn13").isJsonNull() && !jsonObj.get("isbn13").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `isbn13` to be an array in the JSON string but got `%s`", jsonObj.get("isbn13").toString()));
      }
      if ((jsonObj.get("publication_dt") != null && !jsonObj.get("publication_dt").isJsonNull()) && !jsonObj.get("publication_dt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publication_dt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publication_dt").toString()));
      }
      if ((jsonObj.get("summary") != null && !jsonObj.get("summary").isJsonNull()) && !jsonObj.get("summary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `summary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("summary").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GETReviewsFormat200ResponseResultsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GETReviewsFormat200ResponseResultsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GETReviewsFormat200ResponseResultsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GETReviewsFormat200ResponseResultsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GETReviewsFormat200ResponseResultsInner>() {
           @Override
           public void write(JsonWriter out, GETReviewsFormat200ResponseResultsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GETReviewsFormat200ResponseResultsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GETReviewsFormat200ResponseResultsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GETReviewsFormat200ResponseResultsInner
   * @throws IOException if the JSON string is invalid with respect to GETReviewsFormat200ResponseResultsInner
   */
  public static GETReviewsFormat200ResponseResultsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GETReviewsFormat200ResponseResultsInner.class);
  }

  /**
   * Convert an instance of GETReviewsFormat200ResponseResultsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

