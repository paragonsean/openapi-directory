/*
 * Books API
 * The Books API provides information about book reviews and The New York Times bestsellers lists.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner;
import org.openapitools.client.model.GETListsFormat200ResponseResultsInnerIsbnsInner;
import org.openapitools.client.model.GETListsFormat200ResponseResultsInnerReviewsInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GETListsBestSellersHistoryJson200ResponseResultsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:23:36.772134-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GETListsBestSellersHistoryJson200ResponseResultsInner {
  public static final String SERIALIZED_NAME_AGE_GROUP = "age_group";
  @SerializedName(SERIALIZED_NAME_AGE_GROUP)
  private String ageGroup;

  public static final String SERIALIZED_NAME_AUTHOR = "author";
  @SerializedName(SERIALIZED_NAME_AUTHOR)
  private String author;

  public static final String SERIALIZED_NAME_CONTRIBUTOR = "contributor";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR)
  private String contributor;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_NOTE = "contributor_note";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_NOTE)
  private String contributorNote;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ISBNS = "isbns";
  @SerializedName(SERIALIZED_NAME_ISBNS)
  private List<GETListsFormat200ResponseResultsInnerIsbnsInner> isbns = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private Integer price;

  public static final String SERIALIZED_NAME_PUBLISHER = "publisher";
  @SerializedName(SERIALIZED_NAME_PUBLISHER)
  private String publisher;

  public static final String SERIALIZED_NAME_RANKS_HISTORY = "ranks_history";
  @SerializedName(SERIALIZED_NAME_RANKS_HISTORY)
  private List<GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner> ranksHistory = new ArrayList<>();

  public static final String SERIALIZED_NAME_REVIEWS = "reviews";
  @SerializedName(SERIALIZED_NAME_REVIEWS)
  private List<GETListsFormat200ResponseResultsInnerReviewsInner> reviews = new ArrayList<>();

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public GETListsBestSellersHistoryJson200ResponseResultsInner() {
  }

  public GETListsBestSellersHistoryJson200ResponseResultsInner ageGroup(String ageGroup) {
    this.ageGroup = ageGroup;
    return this;
  }

  /**
   * Get ageGroup
   * @return ageGroup
   */
  @javax.annotation.Nullable
  public String getAgeGroup() {
    return ageGroup;
  }

  public void setAgeGroup(String ageGroup) {
    this.ageGroup = ageGroup;
  }


  public GETListsBestSellersHistoryJson200ResponseResultsInner author(String author) {
    this.author = author;
    return this;
  }

  /**
   * Get author
   * @return author
   */
  @javax.annotation.Nullable
  public String getAuthor() {
    return author;
  }

  public void setAuthor(String author) {
    this.author = author;
  }


  public GETListsBestSellersHistoryJson200ResponseResultsInner contributor(String contributor) {
    this.contributor = contributor;
    return this;
  }

  /**
   * Get contributor
   * @return contributor
   */
  @javax.annotation.Nullable
  public String getContributor() {
    return contributor;
  }

  public void setContributor(String contributor) {
    this.contributor = contributor;
  }


  public GETListsBestSellersHistoryJson200ResponseResultsInner contributorNote(String contributorNote) {
    this.contributorNote = contributorNote;
    return this;
  }

  /**
   * Get contributorNote
   * @return contributorNote
   */
  @javax.annotation.Nullable
  public String getContributorNote() {
    return contributorNote;
  }

  public void setContributorNote(String contributorNote) {
    this.contributorNote = contributorNote;
  }


  public GETListsBestSellersHistoryJson200ResponseResultsInner description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GETListsBestSellersHistoryJson200ResponseResultsInner isbns(List<GETListsFormat200ResponseResultsInnerIsbnsInner> isbns) {
    this.isbns = isbns;
    return this;
  }

  public GETListsBestSellersHistoryJson200ResponseResultsInner addIsbnsItem(GETListsFormat200ResponseResultsInnerIsbnsInner isbnsItem) {
    if (this.isbns == null) {
      this.isbns = new ArrayList<>();
    }
    this.isbns.add(isbnsItem);
    return this;
  }

  /**
   * Get isbns
   * @return isbns
   */
  @javax.annotation.Nullable
  public List<GETListsFormat200ResponseResultsInnerIsbnsInner> getIsbns() {
    return isbns;
  }

  public void setIsbns(List<GETListsFormat200ResponseResultsInnerIsbnsInner> isbns) {
    this.isbns = isbns;
  }


  public GETListsBestSellersHistoryJson200ResponseResultsInner price(Integer price) {
    this.price = price;
    return this;
  }

  /**
   * Get price
   * @return price
   */
  @javax.annotation.Nullable
  public Integer getPrice() {
    return price;
  }

  public void setPrice(Integer price) {
    this.price = price;
  }


  public GETListsBestSellersHistoryJson200ResponseResultsInner publisher(String publisher) {
    this.publisher = publisher;
    return this;
  }

  /**
   * Get publisher
   * @return publisher
   */
  @javax.annotation.Nullable
  public String getPublisher() {
    return publisher;
  }

  public void setPublisher(String publisher) {
    this.publisher = publisher;
  }


  public GETListsBestSellersHistoryJson200ResponseResultsInner ranksHistory(List<GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner> ranksHistory) {
    this.ranksHistory = ranksHistory;
    return this;
  }

  public GETListsBestSellersHistoryJson200ResponseResultsInner addRanksHistoryItem(GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner ranksHistoryItem) {
    if (this.ranksHistory == null) {
      this.ranksHistory = new ArrayList<>();
    }
    this.ranksHistory.add(ranksHistoryItem);
    return this;
  }

  /**
   * Get ranksHistory
   * @return ranksHistory
   */
  @javax.annotation.Nullable
  public List<GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner> getRanksHistory() {
    return ranksHistory;
  }

  public void setRanksHistory(List<GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner> ranksHistory) {
    this.ranksHistory = ranksHistory;
  }


  public GETListsBestSellersHistoryJson200ResponseResultsInner reviews(List<GETListsFormat200ResponseResultsInnerReviewsInner> reviews) {
    this.reviews = reviews;
    return this;
  }

  public GETListsBestSellersHistoryJson200ResponseResultsInner addReviewsItem(GETListsFormat200ResponseResultsInnerReviewsInner reviewsItem) {
    if (this.reviews == null) {
      this.reviews = new ArrayList<>();
    }
    this.reviews.add(reviewsItem);
    return this;
  }

  /**
   * Get reviews
   * @return reviews
   */
  @javax.annotation.Nullable
  public List<GETListsFormat200ResponseResultsInnerReviewsInner> getReviews() {
    return reviews;
  }

  public void setReviews(List<GETListsFormat200ResponseResultsInnerReviewsInner> reviews) {
    this.reviews = reviews;
  }


  public GETListsBestSellersHistoryJson200ResponseResultsInner title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GETListsBestSellersHistoryJson200ResponseResultsInner geTListsBestSellersHistoryJson200ResponseResultsInner = (GETListsBestSellersHistoryJson200ResponseResultsInner) o;
    return Objects.equals(this.ageGroup, geTListsBestSellersHistoryJson200ResponseResultsInner.ageGroup) &&
        Objects.equals(this.author, geTListsBestSellersHistoryJson200ResponseResultsInner.author) &&
        Objects.equals(this.contributor, geTListsBestSellersHistoryJson200ResponseResultsInner.contributor) &&
        Objects.equals(this.contributorNote, geTListsBestSellersHistoryJson200ResponseResultsInner.contributorNote) &&
        Objects.equals(this.description, geTListsBestSellersHistoryJson200ResponseResultsInner.description) &&
        Objects.equals(this.isbns, geTListsBestSellersHistoryJson200ResponseResultsInner.isbns) &&
        Objects.equals(this.price, geTListsBestSellersHistoryJson200ResponseResultsInner.price) &&
        Objects.equals(this.publisher, geTListsBestSellersHistoryJson200ResponseResultsInner.publisher) &&
        Objects.equals(this.ranksHistory, geTListsBestSellersHistoryJson200ResponseResultsInner.ranksHistory) &&
        Objects.equals(this.reviews, geTListsBestSellersHistoryJson200ResponseResultsInner.reviews) &&
        Objects.equals(this.title, geTListsBestSellersHistoryJson200ResponseResultsInner.title);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ageGroup, author, contributor, contributorNote, description, isbns, price, publisher, ranksHistory, reviews, title);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GETListsBestSellersHistoryJson200ResponseResultsInner {\n");
    sb.append("    ageGroup: ").append(toIndentedString(ageGroup)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    contributor: ").append(toIndentedString(contributor)).append("\n");
    sb.append("    contributorNote: ").append(toIndentedString(contributorNote)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    isbns: ").append(toIndentedString(isbns)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    publisher: ").append(toIndentedString(publisher)).append("\n");
    sb.append("    ranksHistory: ").append(toIndentedString(ranksHistory)).append("\n");
    sb.append("    reviews: ").append(toIndentedString(reviews)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("age_group");
    openapiFields.add("author");
    openapiFields.add("contributor");
    openapiFields.add("contributor_note");
    openapiFields.add("description");
    openapiFields.add("isbns");
    openapiFields.add("price");
    openapiFields.add("publisher");
    openapiFields.add("ranks_history");
    openapiFields.add("reviews");
    openapiFields.add("title");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GETListsBestSellersHistoryJson200ResponseResultsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GETListsBestSellersHistoryJson200ResponseResultsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GETListsBestSellersHistoryJson200ResponseResultsInner is not found in the empty JSON string", GETListsBestSellersHistoryJson200ResponseResultsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GETListsBestSellersHistoryJson200ResponseResultsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GETListsBestSellersHistoryJson200ResponseResultsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("age_group") != null && !jsonObj.get("age_group").isJsonNull()) && !jsonObj.get("age_group").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `age_group` to be a primitive type in the JSON string but got `%s`", jsonObj.get("age_group").toString()));
      }
      if ((jsonObj.get("author") != null && !jsonObj.get("author").isJsonNull()) && !jsonObj.get("author").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `author` to be a primitive type in the JSON string but got `%s`", jsonObj.get("author").toString()));
      }
      if ((jsonObj.get("contributor") != null && !jsonObj.get("contributor").isJsonNull()) && !jsonObj.get("contributor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor").toString()));
      }
      if ((jsonObj.get("contributor_note") != null && !jsonObj.get("contributor_note").isJsonNull()) && !jsonObj.get("contributor_note").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_note` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_note").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (jsonObj.get("isbns") != null && !jsonObj.get("isbns").isJsonNull()) {
        JsonArray jsonArrayisbns = jsonObj.getAsJsonArray("isbns");
        if (jsonArrayisbns != null) {
          // ensure the json data is an array
          if (!jsonObj.get("isbns").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `isbns` to be an array in the JSON string but got `%s`", jsonObj.get("isbns").toString()));
          }

          // validate the optional field `isbns` (array)
          for (int i = 0; i < jsonArrayisbns.size(); i++) {
            GETListsFormat200ResponseResultsInnerIsbnsInner.validateJsonElement(jsonArrayisbns.get(i));
          };
        }
      }
      if ((jsonObj.get("publisher") != null && !jsonObj.get("publisher").isJsonNull()) && !jsonObj.get("publisher").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publisher` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publisher").toString()));
      }
      if (jsonObj.get("ranks_history") != null && !jsonObj.get("ranks_history").isJsonNull()) {
        JsonArray jsonArrayranksHistory = jsonObj.getAsJsonArray("ranks_history");
        if (jsonArrayranksHistory != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ranks_history").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ranks_history` to be an array in the JSON string but got `%s`", jsonObj.get("ranks_history").toString()));
          }

          // validate the optional field `ranks_history` (array)
          for (int i = 0; i < jsonArrayranksHistory.size(); i++) {
            GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner.validateJsonElement(jsonArrayranksHistory.get(i));
          };
        }
      }
      if (jsonObj.get("reviews") != null && !jsonObj.get("reviews").isJsonNull()) {
        JsonArray jsonArrayreviews = jsonObj.getAsJsonArray("reviews");
        if (jsonArrayreviews != null) {
          // ensure the json data is an array
          if (!jsonObj.get("reviews").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `reviews` to be an array in the JSON string but got `%s`", jsonObj.get("reviews").toString()));
          }

          // validate the optional field `reviews` (array)
          for (int i = 0; i < jsonArrayreviews.size(); i++) {
            GETListsFormat200ResponseResultsInnerReviewsInner.validateJsonElement(jsonArrayreviews.get(i));
          };
        }
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GETListsBestSellersHistoryJson200ResponseResultsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GETListsBestSellersHistoryJson200ResponseResultsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GETListsBestSellersHistoryJson200ResponseResultsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GETListsBestSellersHistoryJson200ResponseResultsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GETListsBestSellersHistoryJson200ResponseResultsInner>() {
           @Override
           public void write(JsonWriter out, GETListsBestSellersHistoryJson200ResponseResultsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GETListsBestSellersHistoryJson200ResponseResultsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GETListsBestSellersHistoryJson200ResponseResultsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GETListsBestSellersHistoryJson200ResponseResultsInner
   * @throws IOException if the JSON string is invalid with respect to GETListsBestSellersHistoryJson200ResponseResultsInner
   */
  public static GETListsBestSellersHistoryJson200ResponseResultsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GETListsBestSellersHistoryJson200ResponseResultsInner.class);
  }

  /**
   * Convert an instance of GETListsBestSellersHistoryJson200ResponseResultsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

