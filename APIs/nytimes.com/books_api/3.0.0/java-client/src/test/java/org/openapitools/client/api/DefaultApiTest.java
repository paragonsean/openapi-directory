/*
 * Books API
 * The Books API provides information about book reviews and The New York Times bestsellers lists.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GETListsBestSellersHistoryJson200Response;
import org.openapitools.client.model.GETListsDateListJson200Response;
import org.openapitools.client.model.GETListsFormat200Response;
import org.openapitools.client.model.GETListsNamesFormat200Response;
import org.openapitools.client.model.GETListsOverviewFormat200Response;
import org.openapitools.client.model.GETReviewsFormat200Response;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Best Seller History List
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETListsBestSellersHistoryJsonTest() throws ApiException {
        String ageGroup = null;
        String author = null;
        String contributor = null;
        String isbn = null;
        String price = null;
        String publisher = null;
        String title = null;
        GETListsBestSellersHistoryJson200Response response = api.gETListsBestSellersHistoryJson(ageGroup, author, contributor, isbn, price, publisher, title);
        // TODO: test validations
    }

    /**
     * Best Seller List by Date
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETListsDateListJsonTest() throws ApiException {
        String date = null;
        String _list = null;
        Integer isbn = null;
        String listName = null;
        OffsetDateTime publishedDate = null;
        String bestsellersDate = null;
        Integer weeksOnList = null;
        String rank = null;
        Integer rankLastWeek = null;
        Integer offset = null;
        String sortOrder = null;
        GETListsDateListJson200Response response = api.gETListsDateListJson(date, _list, isbn, listName, publishedDate, bestsellersDate, weeksOnList, rank, rankLastWeek, offset, sortOrder);
        // TODO: test validations
    }

    /**
     * Best Seller List
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETListsFormatTest() throws ApiException {
        String format = null;
        String _list = null;
        Integer weeksOnList = null;
        OffsetDateTime bestsellersDate = null;
        String date = null;
        String isbn = null;
        String publishedDate = null;
        Integer rank = null;
        Integer rankLastWeek = null;
        Integer offset = null;
        String sortOrder = null;
        GETListsFormat200Response response = api.gETListsFormat(format, _list, weeksOnList, bestsellersDate, date, isbn, publishedDate, rank, rankLastWeek, offset, sortOrder);
        // TODO: test validations
    }

    /**
     * Best Seller List Names
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETListsNamesFormatTest() throws ApiException {
        String format = null;
        String apiKey = null;
        GETListsNamesFormat200Response response = api.gETListsNamesFormat(format, apiKey);
        // TODO: test validations
    }

    /**
     * Best Seller List Overview
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETListsOverviewFormatTest() throws ApiException {
        String format = null;
        String publishedDate = null;
        String apiKey = null;
        GETListsOverviewFormat200Response response = api.gETListsOverviewFormat(format, publishedDate, apiKey);
        // TODO: test validations
    }

    /**
     * Reviews
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETReviewsFormatTest() throws ApiException {
        String format = null;
        Integer isbn = null;
        String title = null;
        String author = null;
        String apiKey = null;
        GETReviewsFormat200Response response = api.gETReviewsFormat(format, isbn, title, author, apiKey);
        // TODO: test validations
    }

}
