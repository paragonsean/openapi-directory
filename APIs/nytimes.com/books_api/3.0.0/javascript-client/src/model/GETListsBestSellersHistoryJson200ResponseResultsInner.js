/**
 * Books API
 * The Books API provides information about book reviews and The New York Times bestsellers lists.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner from './GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner';
import GETListsFormat200ResponseResultsInnerIsbnsInner from './GETListsFormat200ResponseResultsInnerIsbnsInner';
import GETListsFormat200ResponseResultsInnerReviewsInner from './GETListsFormat200ResponseResultsInnerReviewsInner';

/**
 * The GETListsBestSellersHistoryJson200ResponseResultsInner model module.
 * @module model/GETListsBestSellersHistoryJson200ResponseResultsInner
 * @version 3.0.0
 */
class GETListsBestSellersHistoryJson200ResponseResultsInner {
    /**
     * Constructs a new <code>GETListsBestSellersHistoryJson200ResponseResultsInner</code>.
     * @alias module:model/GETListsBestSellersHistoryJson200ResponseResultsInner
     */
    constructor() { 
        
        GETListsBestSellersHistoryJson200ResponseResultsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GETListsBestSellersHistoryJson200ResponseResultsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GETListsBestSellersHistoryJson200ResponseResultsInner} obj Optional instance to populate.
     * @return {module:model/GETListsBestSellersHistoryJson200ResponseResultsInner} The populated <code>GETListsBestSellersHistoryJson200ResponseResultsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GETListsBestSellersHistoryJson200ResponseResultsInner();

            if (data.hasOwnProperty('age_group')) {
                obj['age_group'] = ApiClient.convertToType(data['age_group'], 'String');
            }
            if (data.hasOwnProperty('author')) {
                obj['author'] = ApiClient.convertToType(data['author'], 'String');
            }
            if (data.hasOwnProperty('contributor')) {
                obj['contributor'] = ApiClient.convertToType(data['contributor'], 'String');
            }
            if (data.hasOwnProperty('contributor_note')) {
                obj['contributor_note'] = ApiClient.convertToType(data['contributor_note'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('isbns')) {
                obj['isbns'] = ApiClient.convertToType(data['isbns'], [GETListsFormat200ResponseResultsInnerIsbnsInner]);
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('publisher')) {
                obj['publisher'] = ApiClient.convertToType(data['publisher'], 'String');
            }
            if (data.hasOwnProperty('ranks_history')) {
                obj['ranks_history'] = ApiClient.convertToType(data['ranks_history'], [GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner]);
            }
            if (data.hasOwnProperty('reviews')) {
                obj['reviews'] = ApiClient.convertToType(data['reviews'], [GETListsFormat200ResponseResultsInnerReviewsInner]);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GETListsBestSellersHistoryJson200ResponseResultsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GETListsBestSellersHistoryJson200ResponseResultsInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['age_group'] && !(typeof data['age_group'] === 'string' || data['age_group'] instanceof String)) {
            throw new Error("Expected the field `age_group` to be a primitive type in the JSON string but got " + data['age_group']);
        }
        // ensure the json data is a string
        if (data['author'] && !(typeof data['author'] === 'string' || data['author'] instanceof String)) {
            throw new Error("Expected the field `author` to be a primitive type in the JSON string but got " + data['author']);
        }
        // ensure the json data is a string
        if (data['contributor'] && !(typeof data['contributor'] === 'string' || data['contributor'] instanceof String)) {
            throw new Error("Expected the field `contributor` to be a primitive type in the JSON string but got " + data['contributor']);
        }
        // ensure the json data is a string
        if (data['contributor_note'] && !(typeof data['contributor_note'] === 'string' || data['contributor_note'] instanceof String)) {
            throw new Error("Expected the field `contributor_note` to be a primitive type in the JSON string but got " + data['contributor_note']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        if (data['isbns']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['isbns'])) {
                throw new Error("Expected the field `isbns` to be an array in the JSON data but got " + data['isbns']);
            }
            // validate the optional field `isbns` (array)
            for (const item of data['isbns']) {
                GETListsFormat200ResponseResultsInnerIsbnsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['publisher'] && !(typeof data['publisher'] === 'string' || data['publisher'] instanceof String)) {
            throw new Error("Expected the field `publisher` to be a primitive type in the JSON string but got " + data['publisher']);
        }
        if (data['ranks_history']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ranks_history'])) {
                throw new Error("Expected the field `ranks_history` to be an array in the JSON data but got " + data['ranks_history']);
            }
            // validate the optional field `ranks_history` (array)
            for (const item of data['ranks_history']) {
                GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner.validateJSON(item);
            };
        }
        if (data['reviews']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['reviews'])) {
                throw new Error("Expected the field `reviews` to be an array in the JSON data but got " + data['reviews']);
            }
            // validate the optional field `reviews` (array)
            for (const item of data['reviews']) {
                GETListsFormat200ResponseResultsInnerReviewsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * @member {String} age_group
 */
GETListsBestSellersHistoryJson200ResponseResultsInner.prototype['age_group'] = undefined;

/**
 * @member {String} author
 */
GETListsBestSellersHistoryJson200ResponseResultsInner.prototype['author'] = undefined;

/**
 * @member {String} contributor
 */
GETListsBestSellersHistoryJson200ResponseResultsInner.prototype['contributor'] = undefined;

/**
 * @member {String} contributor_note
 */
GETListsBestSellersHistoryJson200ResponseResultsInner.prototype['contributor_note'] = undefined;

/**
 * @member {String} description
 */
GETListsBestSellersHistoryJson200ResponseResultsInner.prototype['description'] = undefined;

/**
 * @member {Array.<module:model/GETListsFormat200ResponseResultsInnerIsbnsInner>} isbns
 */
GETListsBestSellersHistoryJson200ResponseResultsInner.prototype['isbns'] = undefined;

/**
 * @member {Number} price
 */
GETListsBestSellersHistoryJson200ResponseResultsInner.prototype['price'] = undefined;

/**
 * @member {String} publisher
 */
GETListsBestSellersHistoryJson200ResponseResultsInner.prototype['publisher'] = undefined;

/**
 * @member {Array.<module:model/GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner>} ranks_history
 */
GETListsBestSellersHistoryJson200ResponseResultsInner.prototype['ranks_history'] = undefined;

/**
 * @member {Array.<module:model/GETListsFormat200ResponseResultsInnerReviewsInner>} reviews
 */
GETListsBestSellersHistoryJson200ResponseResultsInner.prototype['reviews'] = undefined;

/**
 * @member {String} title
 */
GETListsBestSellersHistoryJson200ResponseResultsInner.prototype['title'] = undefined;






export default GETListsBestSellersHistoryJson200ResponseResultsInner;

