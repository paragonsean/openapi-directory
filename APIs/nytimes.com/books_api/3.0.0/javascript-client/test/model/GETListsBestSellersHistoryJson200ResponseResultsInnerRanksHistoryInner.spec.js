/**
 * Books API
 * The Books API provides information about book reviews and The New York Times bestsellers lists.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BooksApi);
  }
}(this, function(expect, BooksApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BooksApi.GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner', function() {
    it('should create an instance of GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner', function() {
      // uncomment below and update the code to test GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner
      //var instance = new BooksApi.GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner();
      //expect(instance).to.be.a(BooksApi.GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner);
    });

    it('should have the property asterisk (base name: "asterisk")', function() {
      // uncomment below and update the code to test the property asterisk
      //var instance = new BooksApi.GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner();
      //expect(instance).to.be();
    });

    it('should have the property bestsellersDate (base name: "bestsellers_date")', function() {
      // uncomment below and update the code to test the property bestsellersDate
      //var instance = new BooksApi.GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner();
      //expect(instance).to.be();
    });

    it('should have the property dagger (base name: "dagger")', function() {
      // uncomment below and update the code to test the property dagger
      //var instance = new BooksApi.GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "display_name")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new BooksApi.GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner();
      //expect(instance).to.be();
    });

    it('should have the property listName (base name: "list_name")', function() {
      // uncomment below and update the code to test the property listName
      //var instance = new BooksApi.GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner();
      //expect(instance).to.be();
    });

    it('should have the property primaryIsbn10 (base name: "primary_isbn10")', function() {
      // uncomment below and update the code to test the property primaryIsbn10
      //var instance = new BooksApi.GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner();
      //expect(instance).to.be();
    });

    it('should have the property primaryIsbn13 (base name: "primary_isbn13")', function() {
      // uncomment below and update the code to test the property primaryIsbn13
      //var instance = new BooksApi.GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner();
      //expect(instance).to.be();
    });

    it('should have the property publishedDate (base name: "published_date")', function() {
      // uncomment below and update the code to test the property publishedDate
      //var instance = new BooksApi.GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner();
      //expect(instance).to.be();
    });

    it('should have the property rank (base name: "rank")', function() {
      // uncomment below and update the code to test the property rank
      //var instance = new BooksApi.GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner();
      //expect(instance).to.be();
    });

    it('should have the property ranksLastWeek (base name: "ranks_last_week")', function() {
      // uncomment below and update the code to test the property ranksLastWeek
      //var instance = new BooksApi.GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner();
      //expect(instance).to.be();
    });

    it('should have the property weeksOnList (base name: "weeks_on_list")', function() {
      // uncomment below and update the code to test the property weeksOnList
      //var instance = new BooksApi.GETListsBestSellersHistoryJson200ResponseResultsInnerRanksHistoryInner();
      //expect(instance).to.be();
    });

  });

}));
