/**
 * Semantic API
 * The Semantic API complements the Articles API. With the Semantic API, you get access to the long list of people, places, organizations and other locations, entities and descriptors that make up the controlled vocabulary used as metadata by The New York Times (sometimes referred to as Times Tags and used for Times Topics pages).  The Semantic API uses concepts which are, by definition, terms in The New York Times controlled vocabulary. Like the way facets are used in the Articles API, concepts are a good way to uncover articles of interest in The New York Times archive, and at the same time, limit the scope and number of those articles. The Semantic API maps to external semantic data resources, in a fashion consistent with the idea of linked data. The Semantic API also provides combination and relationship information to other, similar concepts in The New York Times controlled vocabulary. 
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConcept_article_list_results_inner_concepts.h
 *
 * 
 */

#ifndef OAIConcept_article_list_results_inner_concepts_H
#define OAIConcept_article_list_results_inner_concepts_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConcept_article_list_results_inner_concepts : public OAIObject {
public:
    OAIConcept_article_list_results_inner_concepts();
    OAIConcept_article_list_results_inner_concepts(QString json);
    ~OAIConcept_article_list_results_inner_concepts() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getNytdDes() const;
    void setNytdDes(const QList<QString> &nytd_des);
    bool is_nytd_des_Set() const;
    bool is_nytd_des_Valid() const;

    QList<QString> getNytdOrg() const;
    void setNytdOrg(const QList<QString> &nytd_org);
    bool is_nytd_org_Set() const;
    bool is_nytd_org_Valid() const;

    QList<QString> getNytdPer() const;
    void setNytdPer(const QList<QString> &nytd_per);
    bool is_nytd_per_Set() const;
    bool is_nytd_per_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_nytd_des;
    bool m_nytd_des_isSet;
    bool m_nytd_des_isValid;

    QList<QString> m_nytd_org;
    bool m_nytd_org_isSet;
    bool m_nytd_org_isValid;

    QList<QString> m_nytd_per;
    bool m_nytd_per_isSet;
    bool m_nytd_per_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConcept_article_list_results_inner_concepts)

#endif // OAIConcept_article_list_results_inner_concepts_H
