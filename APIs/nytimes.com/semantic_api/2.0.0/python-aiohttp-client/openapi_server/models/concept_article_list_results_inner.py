# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.concept_article_list_results_inner_concepts import ConceptArticleListResultsInnerConcepts
from openapi_server import util


class ConceptArticleListResultsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body: str=None, byline: str=None, concepts: ConceptArticleListResultsInnerConcepts=None, _date: str=None, document_type: str=None, title: str=None, type_of_material: str=None, url: str=None):
        """ConceptArticleListResultsInner - a model defined in OpenAPI

        :param body: The body of this ConceptArticleListResultsInner.
        :param byline: The byline of this ConceptArticleListResultsInner.
        :param concepts: The concepts of this ConceptArticleListResultsInner.
        :param _date: The _date of this ConceptArticleListResultsInner.
        :param document_type: The document_type of this ConceptArticleListResultsInner.
        :param title: The title of this ConceptArticleListResultsInner.
        :param type_of_material: The type_of_material of this ConceptArticleListResultsInner.
        :param url: The url of this ConceptArticleListResultsInner.
        """
        self.openapi_types = {
            'body': str,
            'byline': str,
            'concepts': ConceptArticleListResultsInnerConcepts,
            '_date': str,
            'document_type': str,
            'title': str,
            'type_of_material': str,
            'url': str
        }

        self.attribute_map = {
            'body': 'body',
            'byline': 'byline',
            'concepts': 'concepts',
            '_date': 'date',
            'document_type': 'document_type',
            'title': 'title',
            'type_of_material': 'type_of_material',
            'url': 'url'
        }

        self._body = body
        self._byline = byline
        self._concepts = concepts
        self.__date = _date
        self._document_type = document_type
        self._title = title
        self._type_of_material = type_of_material
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConceptArticleListResultsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Concept_article_list_results_inner of this ConceptArticleListResultsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body(self):
        """Gets the body of this ConceptArticleListResultsInner.


        :return: The body of this ConceptArticleListResultsInner.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this ConceptArticleListResultsInner.


        :param body: The body of this ConceptArticleListResultsInner.
        :type body: str
        """

        self._body = body

    @property
    def byline(self):
        """Gets the byline of this ConceptArticleListResultsInner.


        :return: The byline of this ConceptArticleListResultsInner.
        :rtype: str
        """
        return self._byline

    @byline.setter
    def byline(self, byline):
        """Sets the byline of this ConceptArticleListResultsInner.


        :param byline: The byline of this ConceptArticleListResultsInner.
        :type byline: str
        """

        self._byline = byline

    @property
    def concepts(self):
        """Gets the concepts of this ConceptArticleListResultsInner.


        :return: The concepts of this ConceptArticleListResultsInner.
        :rtype: ConceptArticleListResultsInnerConcepts
        """
        return self._concepts

    @concepts.setter
    def concepts(self, concepts):
        """Sets the concepts of this ConceptArticleListResultsInner.


        :param concepts: The concepts of this ConceptArticleListResultsInner.
        :type concepts: ConceptArticleListResultsInnerConcepts
        """

        self._concepts = concepts

    @property
    def _date(self):
        """Gets the _date of this ConceptArticleListResultsInner.


        :return: The _date of this ConceptArticleListResultsInner.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this ConceptArticleListResultsInner.


        :param _date: The _date of this ConceptArticleListResultsInner.
        :type _date: str
        """

        self.__date = _date

    @property
    def document_type(self):
        """Gets the document_type of this ConceptArticleListResultsInner.


        :return: The document_type of this ConceptArticleListResultsInner.
        :rtype: str
        """
        return self._document_type

    @document_type.setter
    def document_type(self, document_type):
        """Sets the document_type of this ConceptArticleListResultsInner.


        :param document_type: The document_type of this ConceptArticleListResultsInner.
        :type document_type: str
        """

        self._document_type = document_type

    @property
    def title(self):
        """Gets the title of this ConceptArticleListResultsInner.


        :return: The title of this ConceptArticleListResultsInner.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ConceptArticleListResultsInner.


        :param title: The title of this ConceptArticleListResultsInner.
        :type title: str
        """

        self._title = title

    @property
    def type_of_material(self):
        """Gets the type_of_material of this ConceptArticleListResultsInner.


        :return: The type_of_material of this ConceptArticleListResultsInner.
        :rtype: str
        """
        return self._type_of_material

    @type_of_material.setter
    def type_of_material(self, type_of_material):
        """Sets the type_of_material of this ConceptArticleListResultsInner.


        :param type_of_material: The type_of_material of this ConceptArticleListResultsInner.
        :type type_of_material: str
        """

        self._type_of_material = type_of_material

    @property
    def url(self):
        """Gets the url of this ConceptArticleListResultsInner.


        :return: The url of this ConceptArticleListResultsInner.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ConceptArticleListResultsInner.


        :param url: The url of this ConceptArticleListResultsInner.
        :type url: str
        """

        self._url = url
