/*
 * Geographic API
 * The Geographic API extends the Semantic API, using a linked data approach to enhance location concepts used in The New York Times' controlled vocabulary and data resources which combine them with the GeoNames database, an authoritative and free to use database of global geographical places, names and features. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.QueryJsonGet200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EventsApi
 */
@Disabled
public class EventsApiTest {

    private final EventsApi api = new EventsApi();

    /**
     * Geographic API
     *
     * Geographic API
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryJsonGetTest() throws ApiException {
        String name = null;
        String latitude = null;
        String longitude = null;
        Integer elevation = null;
        String sw = null;
        String query = null;
        String filter = null;
        String dateRange = null;
        Integer facets = null;
        String sort = null;
        Integer limit = null;
        Integer offset = null;
        QueryJsonGet200Response response = api.queryJsonGet(name, latitude, longitude, elevation, sw, query, filter, dateRange, facets, sort, limit, offset);
        // TODO: test validations
    }

}
