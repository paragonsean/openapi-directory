# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BusinessName(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, from_date: datetime=None, id: str=None, lifecycle_state: str='Pending Approval', name: str=None, to_date: datetime=None):
        """BusinessName - a model defined in OpenAPI

        :param from_date: The from_date of this BusinessName.
        :param id: The id of this BusinessName.
        :param lifecycle_state: The lifecycle_state of this BusinessName.
        :param name: The name of this BusinessName.
        :param to_date: The to_date of this BusinessName.
        """
        self.openapi_types = {
            'from_date': datetime,
            'id': str,
            'lifecycle_state': str,
            'name': str,
            'to_date': datetime
        }

        self.attribute_map = {
            'from_date': 'fromDate',
            'id': 'id',
            'lifecycle_state': 'lifecycleState',
            'name': 'name',
            'to_date': 'toDate'
        }

        self._from_date = from_date
        self._id = id
        self._lifecycle_state = lifecycle_state
        self._name = name
        self._to_date = to_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BusinessName':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The business-name of this BusinessName.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def from_date(self):
        """Gets the from_date of this BusinessName.

        The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).

        :return: The from_date of this BusinessName.
        :rtype: datetime
        """
        return self._from_date

    @from_date.setter
    def from_date(self, from_date):
        """Sets the from_date of this BusinessName.

        The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).

        :param from_date: The from_date of this BusinessName.
        :type from_date: datetime
        """

        self._from_date = from_date

    @property
    def id(self):
        """Gets the id of this BusinessName.

        The resource's unique identifier.

        :return: The id of this BusinessName.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BusinessName.

        The resource's unique identifier.

        :param id: The id of this BusinessName.
        :type id: str
        """
        if id is not None and len(id) > 36:
            raise ValueError("Invalid value for `id`, length must be less than or equal to `36`")

        self._id = id

    @property
    def lifecycle_state(self):
        """Gets the lifecycle_state of this BusinessName.

        The business name's lifecycle state.

        :return: The lifecycle_state of this BusinessName.
        :rtype: str
        """
        return self._lifecycle_state

    @lifecycle_state.setter
    def lifecycle_state(self, lifecycle_state):
        """Sets the lifecycle_state of this BusinessName.

        The business name's lifecycle state.

        :param lifecycle_state: The lifecycle_state of this BusinessName.
        :type lifecycle_state: str
        """
        allowed_values = ["Approved", "Expired", "Issued", "Pending Approval", "Suspended"]  # noqa: E501
        if lifecycle_state not in allowed_values:
            raise ValueError(
                "Invalid value for `lifecycle_state` ({0}), must be one of {1}"
                .format(lifecycle_state, allowed_values)
            )

        self._lifecycle_state = lifecycle_state

    @property
    def name(self):
        """Gets the name of this BusinessName.

        The business name.

        :return: The name of this BusinessName.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BusinessName.

        The business name.

        :param name: The name of this BusinessName.
        :type name: str
        """

        self._name = name

    @property
    def to_date(self):
        """Gets the to_date of this BusinessName.

        The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).

        :return: The to_date of this BusinessName.
        :rtype: datetime
        """
        return self._to_date

    @to_date.setter
    def to_date(self, to_date):
        """Sets the to_date of this BusinessName.

        The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).

        :param to_date: The to_date of this BusinessName.
        :type to_date: datetime
        """

        self._to_date = to_date
