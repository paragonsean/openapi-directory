/**
 * API for the COVID-19 Tracking QR Code Signin Server.
 * This is the API for the COVID-19 Contact Tracing QRCode Signin Server
 *
 * The version of the OpenAPI document: 1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import InvalidToken from '../model/InvalidToken';
import KeyFailure from '../model/KeyFailure';
import Signin from '../model/Signin';
import SigninResponse from '../model/SigninResponse';
import UserRecord from '../model/UserRecord';

/**
* AttendeesSignins service.
* @module api/AttendeesSigninsApi
* @version 1.1
*/
export default class AttendeesSigninsApi {

    /**
    * Constructs a new AttendeesSigninsApi. 
    * @alias module:api/AttendeesSigninsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the signinPost operation.
     * @callback module:api/AttendeesSigninsApi~signinPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SigninResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new signin record
     * @param {Object} opts Optional parameters
     * @param {module:model/Signin} [signin] 
     * @param {module:api/AttendeesSigninsApi~signinPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SigninResponse}
     */
    signinPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['signin'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['TokenHeader'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SigninResponse;
      return this.apiClient.callApi(
        '/signin', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the signinSigninIdDelete operation.
     * @callback module:api/AttendeesSigninsApi~signinSigninIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a signin record
     * Delete a signin record       
     * @param {Number} signinId The ID of the signin record to be deleted.
     * @param {module:api/AttendeesSigninsApi~signinSigninIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    signinSigninIdDelete(signinId, callback) {
      let postBody = null;
      // verify the required parameter 'signinId' is set
      if (signinId === undefined || signinId === null) {
        throw new Error("Missing the required parameter 'signinId' when calling signinSigninIdDelete");
      }

      let pathParams = {
        'signinId': signinId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['TokenHeader'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/signin/{signinId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the signinSigninIdGet operation.
     * @callback module:api/AttendeesSigninsApi~signinSigninIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Signin} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve the information associated with a signin record
     * Retrieve the information associated with a signin record 
     * @param {Number} signinId The ID of the signin record to be retrieved.
     * @param {module:api/AttendeesSigninsApi~signinSigninIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Signin}
     */
    signinSigninIdGet(signinId, callback) {
      let postBody = null;
      // verify the required parameter 'signinId' is set
      if (signinId === undefined || signinId === null) {
        throw new Error("Missing the required parameter 'signinId' when calling signinSigninIdGet");
      }

      let pathParams = {
        'signinId': signinId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['TokenHeader'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Signin;
      return this.apiClient.callApi(
        '/signin/{signinId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the signinSigninIdPut operation.
     * @callback module:api/AttendeesSigninsApi~signinSigninIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserRecord} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a signin record
     * Update a signin record 
     * @param {Number} signinId The ID of the signin record to be retrieved.
     * @param {Object} opts Optional parameters
     * @param {module:model/Signin} [signin] 
     * @param {module:api/AttendeesSigninsApi~signinSigninIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UserRecord}
     */
    signinSigninIdPut(signinId, opts, callback) {
      opts = opts || {};
      let postBody = opts['signin'];
      // verify the required parameter 'signinId' is set
      if (signinId === undefined || signinId === null) {
        throw new Error("Missing the required parameter 'signinId' when calling signinSigninIdPut");
      }

      let pathParams = {
        'signinId': signinId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['TokenHeader'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UserRecord;
      return this.apiClient.callApi(
        '/signin/{signinId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the signinsGet operation.
     * @callback module:api/AttendeesSigninsApi~signinsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Signin>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get signin info
     * Returns a list of signin objects sorted by signin ID descending.
     * @param {Object} opts Optional parameters
     * @param {Number} [lessThan] Return signins with IDs less than this value.
     * @param {Number} [returnCount = 100)] Return this many objects
     * @param {module:api/AttendeesSigninsApi~signinsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Signin>}
     */
    signinsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'less_than': opts['lessThan'],
        'return_count': opts['returnCount']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['TokenHeader'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Signin];
      return this.apiClient.callApi(
        '/signins', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
