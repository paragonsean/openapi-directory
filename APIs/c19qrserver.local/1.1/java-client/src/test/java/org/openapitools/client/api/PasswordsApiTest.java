/*
 * API for the COVID-19 Tracking QR Code Signin Server.
 * This is the API for the COVID-19 Contact Tracing QRCode Signin Server
 *
 * The version of the OpenAPI document: 1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.InvalidToken;
import org.openapitools.client.model.RequestPasswordResetResponse;
import org.openapitools.client.model.Sample;
import org.openapitools.client.model.Sample2;
import org.openapitools.client.model.Sample4;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PasswordsApi
 */
@Disabled
public class PasswordsApiTest {

    private final PasswordsApi api = new PasswordsApi();

    /**
     * Used for changing your password
     *
     * Pass in your old password and your new password
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void changePasswordPostTest() throws ApiException {
        Sample sample = null;
        api.changePasswordPost(sample);
        // TODO: test validations
    }

    /**
     * Used for requesting a password reset code
     *
     * The admin should run this on behalf of a user who forgot their password.  The API will generate a password reset code which the admin should then provide to the user. The user can use their client to reset their password. Normally the password reset code is mailed to the user, but I didn&#39;t want to do this in this case because I didn&#39;t want to  introduce the complicated dependency of having an SMTP server just for this purpose. Doing it this way makes it easy for people to adopt this  API. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void requestPasswordResetPostTest() throws ApiException {
        Sample2 sample2 = null;
        RequestPasswordResetResponse response = api.requestPasswordResetPost(sample2);
        // TODO: test validations
    }

    /**
     * Used for resetting your password when you forgot it
     *
     * Another endpoint will generate a password reset code for you. You should  use the client app to submit the reset code along with the new password to change your password. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void verifyPasswordChangePostTest() throws ApiException {
        Sample4 sample4 = null;
        api.verifyPasswordChangePost(sample4);
        // TODO: test validations
    }

}
