/*
 * API for the COVID-19 Tracking QR Code Signin Server.
 * This is the API for the COVID-19 Contact Tracing QRCode Signin Server
 *
 * The version of the OpenAPI document: 1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateUserResponse;
import org.openapitools.client.model.InvalidToken;
import org.openapitools.client.model.Sample3;
import org.openapitools.client.model.UserRecord;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TeamMembersApi
 */
@Disabled
public class TeamMembersApiTest {

    private final TeamMembersApi api = new TeamMembersApi();

    /**
     * Create a user
     *
     * Use this endpoint to create a team member (user) record
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void userPostTest() throws ApiException {
        Sample3 sample3 = null;
        CreateUserResponse response = api.userPost(sample3);
        // TODO: test validations
    }

    /**
     * Delete a team member&#39;s user record
     *
     * To preserve referential integrity in the database, the user account  will not be deleted from the database. Rather, the password will be set to the empty string, effectively preventing that user from logging in. Furthermore, all active sessions for that user will be deleted, as will any password reset tokens.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void userUserIdDeleteTest() throws ApiException {
        Integer userId = null;
        api.userUserIdDelete(userId);
        // TODO: test validations
    }

    /**
     * Retrieve the information associated with a team member&#39;s user record
     *
     * Retrieve the information associated with a user&#39;s account 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void userUserIdGetTest() throws ApiException {
        Integer userId = null;
        UserRecord response = api.userUserIdGet(userId);
        // TODO: test validations
    }

    /**
     * Retrieve the information associated with all team members&#39; user records
     *
     * Retrieve the information associated with all team members&#39; user records 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersGetTest() throws ApiException {
        List<UserRecord> response = api.usersGet();
        // TODO: test validations
    }

}
