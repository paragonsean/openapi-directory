/*
 * Velo Payments APIs
 * ## Terms and Definitions  Throughout this document and the Velo platform the following terms are used:  * **Payor.** An entity (typically a corporation) which wishes to pay funds to one or more payees via a payout. * **Payee.** The recipient of funds paid out by a payor. * **Payment.** A single transfer of funds from a payor to a payee. * **Payout.** A batch of Payments, typically used by a payor to logically group payments (e.g. by business day). Technically there need be no relationship between the payments in a payout - a single payout can contain payments to multiple payees and/or multiple payments to a single payee. * **Sandbox.** An integration environment provided by Velo Payments which offers a similar API experience to the production environment, but all funding and payment events are simulated, along with many other services such as OFAC sanctions list checking.  ## Overview  The Velo Payments API allows a payor to perform a number of operations. The following is a list of the main capabilities in a natural order of execution:  * Authenticate with the Velo platform * Maintain a collection of payees * Query the payor’s current balance of funds within the platform and perform additional funding * Issue payments to payees * Query the platform for a history of those payments  This document describes the main concepts and APIs required to get up and running with the Velo Payments platform. It is not an exhaustive API reference. For that, please see the separate Velo Payments API Reference.  ## API Considerations  The Velo Payments API is REST based and uses the JSON format for requests and responses.  Most calls are secured using OAuth 2 security and require a valid authentication access token for successful operation. See the Authentication section for details.  Where a dynamic value is required in the examples below, the {token} format is used, suggesting that the caller needs to supply the appropriate value of the token in question (without including the { or } characters).  Where curl examples are given, the –d @filename.json approach is used, indicating that the request body should be placed into a file named filename.json in the current directory. Each of the curl examples in this document should be considered a single line on the command-line, regardless of how they appear in print.  ## Authenticating with the Velo Platform  Once Velo backoffice staff have added your organization as a payor within the Velo platform sandbox, they will create you a payor Id, an API key and an API secret and share these with you in a secure manner.  You will need to use these values to authenticate with the Velo platform in order to gain access to the APIs. The steps to take are explained in the following:  create a string comprising the API key (e.g. 44a9537d-d55d-4b47-8082-14061c2bcdd8) and API secret (e.g. c396b26b-137a-44fd-87f5-34631f8fd529) with a colon between them. E.g. 44a9537d-d55d-4b47-8082-14061c2bcdd8:c396b26b-137a-44fd-87f5-34631f8fd529  base64 encode this string. E.g.: NDRhOTUzN2QtZDU1ZC00YjQ3LTgwODItMTQwNjFjMmJjZGQ4OmMzOTZiMjZiLTEzN2EtNDRmZC04N2Y1LTM0NjMxZjhmZDUyOQ==  create an HTTP **Authorization** header with the value set to e.g. Basic NDRhOTUzN2QtZDU1ZC00YjQ3LTgwODItMTQwNjFjMmJjZGQ4OmMzOTZiMjZiLTEzN2EtNDRmZC04N2Y1LTM0NjMxZjhmZDUyOQ==  perform the Velo authentication REST call using the HTTP header created above e.g. via curl:  ```   curl -X POST \\   -H \"Content-Type: application/json\" \\   -H \"Authorization: Basic NDRhOTUzN2QtZDU1ZC00YjQ3LTgwODItMTQwNjFjMmJjZGQ4OmMzOTZiMjZiLTEzN2EtNDRmZC04N2Y1LTM0NjMxZjhmZDUyOQ==\" \\   'https://api.sandbox.velopayments.com/v1/authenticate?grant_type=client_credentials' ```  If successful, this call will result in a **200** HTTP status code and a response body such as:  ```   {     \"access_token\":\"19f6bafd-93fd-4747-b229-00507bbc991f\",     \"token_type\":\"bearer\",     \"expires_in\":1799,     \"scope\":\"...\"   } ``` ## API access following authentication Following successful authentication, the value of the access_token field in the response (indicated in green above) should then be presented with all subsequent API calls to allow the Velo platform to validate that the caller is authenticated.  This is achieved by setting the HTTP Authorization header with the value set to e.g. Bearer 19f6bafd-93fd-4747-b229-00507bbc991f such as the curl example below:  ```   -H \"Authorization: Bearer 19f6bafd-93fd-4747-b229-00507bbc991f \" ```  If you make other Velo API calls which require authorization but the Authorization header is missing or invalid then you will get a **401** HTTP status response. 
 *
 * The version of the OpenAPI document: 2.35.57
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;
import org.openapitools.client.model.PayeeTypeEnum;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreatePayeesCSVRequestV3
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:01:55.204956-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreatePayeesCSVRequestV3 {
  public static final String SERIALIZED_NAME_ADDRESS_CITY = "addressCity";
  @SerializedName(SERIALIZED_NAME_ADDRESS_CITY)
  private String addressCity;

  public static final String SERIALIZED_NAME_ADDRESS_COUNTRY = "addressCountry";
  @SerializedName(SERIALIZED_NAME_ADDRESS_COUNTRY)
  private String addressCountry;

  public static final String SERIALIZED_NAME_ADDRESS_COUNTY_OR_PROVINCE = "addressCountyOrProvince";
  @SerializedName(SERIALIZED_NAME_ADDRESS_COUNTY_OR_PROVINCE)
  private String addressCountyOrProvince;

  public static final String SERIALIZED_NAME_ADDRESS_LINE1 = "addressLine1";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE1)
  private String addressLine1;

  public static final String SERIALIZED_NAME_ADDRESS_LINE2 = "addressLine2";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE2)
  private String addressLine2;

  public static final String SERIALIZED_NAME_ADDRESS_LINE3 = "addressLine3";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE3)
  private String addressLine3;

  public static final String SERIALIZED_NAME_ADDRESS_LINE4 = "addressLine4";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE4)
  private String addressLine4;

  public static final String SERIALIZED_NAME_ADDRESS_ZIP_OR_POSTCODE = "addressZipOrPostcode";
  @SerializedName(SERIALIZED_NAME_ADDRESS_ZIP_OR_POSTCODE)
  private String addressZipOrPostcode;

  public static final String SERIALIZED_NAME_CHALLENGE_DESCRIPTION = "challengeDescription";
  @SerializedName(SERIALIZED_NAME_CHALLENGE_DESCRIPTION)
  private String challengeDescription;

  public static final String SERIALIZED_NAME_CHALLENGE_VALUE = "challengeValue";
  @SerializedName(SERIALIZED_NAME_CHALLENGE_VALUE)
  private String challengeValue;

  public static final String SERIALIZED_NAME_COMPANY_E_I_N = "companyEIN";
  @SerializedName(SERIALIZED_NAME_COMPANY_E_I_N)
  private String companyEIN;

  public static final String SERIALIZED_NAME_COMPANY_NAME = "companyName";
  @SerializedName(SERIALIZED_NAME_COMPANY_NAME)
  private String companyName;

  public static final String SERIALIZED_NAME_COMPANY_OPERATING_NAME = "companyOperatingName";
  @SerializedName(SERIALIZED_NAME_COMPANY_OPERATING_NAME)
  private String companyOperatingName;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_INDIVIDUAL_DATE_OF_BIRTH = "individualDateOfBirth";
  @SerializedName(SERIALIZED_NAME_INDIVIDUAL_DATE_OF_BIRTH)
  private LocalDate individualDateOfBirth;

  public static final String SERIALIZED_NAME_INDIVIDUAL_FIRST_NAME = "individualFirstName";
  @SerializedName(SERIALIZED_NAME_INDIVIDUAL_FIRST_NAME)
  private String individualFirstName;

  public static final String SERIALIZED_NAME_INDIVIDUAL_LAST_NAME = "individualLastName";
  @SerializedName(SERIALIZED_NAME_INDIVIDUAL_LAST_NAME)
  private String individualLastName;

  public static final String SERIALIZED_NAME_INDIVIDUAL_NATIONAL_IDENTIFICATION = "individualNationalIdentification";
  @SerializedName(SERIALIZED_NAME_INDIVIDUAL_NATIONAL_IDENTIFICATION)
  private String individualNationalIdentification;

  public static final String SERIALIZED_NAME_INDIVIDUAL_OTHER_NAMES = "individualOtherNames";
  @SerializedName(SERIALIZED_NAME_INDIVIDUAL_OTHER_NAMES)
  private String individualOtherNames;

  public static final String SERIALIZED_NAME_INDIVIDUAL_TITLE = "individualTitle";
  @SerializedName(SERIALIZED_NAME_INDIVIDUAL_TITLE)
  private String individualTitle;

  public static final String SERIALIZED_NAME_PAYEE_LANGUAGE = "payeeLanguage";
  @SerializedName(SERIALIZED_NAME_PAYEE_LANGUAGE)
  private String payeeLanguage;

  public static final String SERIALIZED_NAME_PAYMENT_CHANNEL_ACCOUNT_NAME = "paymentChannelAccountName";
  @SerializedName(SERIALIZED_NAME_PAYMENT_CHANNEL_ACCOUNT_NAME)
  private String paymentChannelAccountName;

  public static final String SERIALIZED_NAME_PAYMENT_CHANNEL_ACCOUNT_NUMBER = "paymentChannelAccountNumber";
  @SerializedName(SERIALIZED_NAME_PAYMENT_CHANNEL_ACCOUNT_NUMBER)
  private String paymentChannelAccountNumber;

  public static final String SERIALIZED_NAME_PAYMENT_CHANNEL_COUNTRY_CODE = "paymentChannelCountryCode";
  @SerializedName(SERIALIZED_NAME_PAYMENT_CHANNEL_COUNTRY_CODE)
  private String paymentChannelCountryCode;

  public static final String SERIALIZED_NAME_PAYMENT_CHANNEL_CURRENCY = "paymentChannelCurrency";
  @SerializedName(SERIALIZED_NAME_PAYMENT_CHANNEL_CURRENCY)
  private String paymentChannelCurrency;

  public static final String SERIALIZED_NAME_PAYMENT_CHANNEL_IBAN = "paymentChannelIban";
  @SerializedName(SERIALIZED_NAME_PAYMENT_CHANNEL_IBAN)
  private String paymentChannelIban;

  public static final String SERIALIZED_NAME_PAYMENT_CHANNEL_ROUTING_NUMBER = "paymentChannelRoutingNumber";
  @SerializedName(SERIALIZED_NAME_PAYMENT_CHANNEL_ROUTING_NUMBER)
  private String paymentChannelRoutingNumber;

  public static final String SERIALIZED_NAME_REMOTE_ID = "remoteId";
  @SerializedName(SERIALIZED_NAME_REMOTE_ID)
  private String remoteId;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private PayeeTypeEnum type;

  public CreatePayeesCSVRequestV3() {
  }

  public CreatePayeesCSVRequestV3 addressCity(String addressCity) {
    this.addressCity = addressCity;
    return this;
  }

  /**
   * Get addressCity
   * @return addressCity
   */
  @javax.annotation.Nonnull
  public String getAddressCity() {
    return addressCity;
  }

  public void setAddressCity(String addressCity) {
    this.addressCity = addressCity;
  }


  public CreatePayeesCSVRequestV3 addressCountry(String addressCountry) {
    this.addressCountry = addressCountry;
    return this;
  }

  /**
   * Valid ISO 3166 2 character country code. See the &lt;a href&#x3D;\&quot;https://www.iso.org/iso-3166-country-codes.html\&quot; target&#x3D;\&quot;_blank\&quot; a&gt;ISO specification&lt;/a&gt; for details.
   * @return addressCountry
   */
  @javax.annotation.Nonnull
  public String getAddressCountry() {
    return addressCountry;
  }

  public void setAddressCountry(String addressCountry) {
    this.addressCountry = addressCountry;
  }


  public CreatePayeesCSVRequestV3 addressCountyOrProvince(String addressCountyOrProvince) {
    this.addressCountyOrProvince = addressCountyOrProvince;
    return this;
  }

  /**
   * Get addressCountyOrProvince
   * @return addressCountyOrProvince
   */
  @javax.annotation.Nullable
  public String getAddressCountyOrProvince() {
    return addressCountyOrProvince;
  }

  public void setAddressCountyOrProvince(String addressCountyOrProvince) {
    this.addressCountyOrProvince = addressCountyOrProvince;
  }


  public CreatePayeesCSVRequestV3 addressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
    return this;
  }

  /**
   * Get addressLine1
   * @return addressLine1
   */
  @javax.annotation.Nonnull
  public String getAddressLine1() {
    return addressLine1;
  }

  public void setAddressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
  }


  public CreatePayeesCSVRequestV3 addressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
    return this;
  }

  /**
   * Get addressLine2
   * @return addressLine2
   */
  @javax.annotation.Nullable
  public String getAddressLine2() {
    return addressLine2;
  }

  public void setAddressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
  }


  public CreatePayeesCSVRequestV3 addressLine3(String addressLine3) {
    this.addressLine3 = addressLine3;
    return this;
  }

  /**
   * Get addressLine3
   * @return addressLine3
   */
  @javax.annotation.Nullable
  public String getAddressLine3() {
    return addressLine3;
  }

  public void setAddressLine3(String addressLine3) {
    this.addressLine3 = addressLine3;
  }


  public CreatePayeesCSVRequestV3 addressLine4(String addressLine4) {
    this.addressLine4 = addressLine4;
    return this;
  }

  /**
   * Get addressLine4
   * @return addressLine4
   */
  @javax.annotation.Nullable
  public String getAddressLine4() {
    return addressLine4;
  }

  public void setAddressLine4(String addressLine4) {
    this.addressLine4 = addressLine4;
  }


  public CreatePayeesCSVRequestV3 addressZipOrPostcode(String addressZipOrPostcode) {
    this.addressZipOrPostcode = addressZipOrPostcode;
    return this;
  }

  /**
   * Get addressZipOrPostcode
   * @return addressZipOrPostcode
   */
  @javax.annotation.Nonnull
  public String getAddressZipOrPostcode() {
    return addressZipOrPostcode;
  }

  public void setAddressZipOrPostcode(String addressZipOrPostcode) {
    this.addressZipOrPostcode = addressZipOrPostcode;
  }


  public CreatePayeesCSVRequestV3 challengeDescription(String challengeDescription) {
    this.challengeDescription = challengeDescription;
    return this;
  }

  /**
   * Get challengeDescription
   * @return challengeDescription
   */
  @javax.annotation.Nullable
  public String getChallengeDescription() {
    return challengeDescription;
  }

  public void setChallengeDescription(String challengeDescription) {
    this.challengeDescription = challengeDescription;
  }


  public CreatePayeesCSVRequestV3 challengeValue(String challengeValue) {
    this.challengeValue = challengeValue;
    return this;
  }

  /**
   * Get challengeValue
   * @return challengeValue
   */
  @javax.annotation.Nullable
  public String getChallengeValue() {
    return challengeValue;
  }

  public void setChallengeValue(String challengeValue) {
    this.challengeValue = challengeValue;
  }


  public CreatePayeesCSVRequestV3 companyEIN(String companyEIN) {
    this.companyEIN = companyEIN;
    return this;
  }

  /**
   * Get companyEIN
   * @return companyEIN
   */
  @javax.annotation.Nullable
  public String getCompanyEIN() {
    return companyEIN;
  }

  public void setCompanyEIN(String companyEIN) {
    this.companyEIN = companyEIN;
  }


  public CreatePayeesCSVRequestV3 companyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

  /**
   * Get companyName
   * @return companyName
   */
  @javax.annotation.Nullable
  public String getCompanyName() {
    return companyName;
  }

  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }


  public CreatePayeesCSVRequestV3 companyOperatingName(String companyOperatingName) {
    this.companyOperatingName = companyOperatingName;
    return this;
  }

  /**
   * Get companyOperatingName
   * @return companyOperatingName
   */
  @javax.annotation.Nullable
  public String getCompanyOperatingName() {
    return companyOperatingName;
  }

  public void setCompanyOperatingName(String companyOperatingName) {
    this.companyOperatingName = companyOperatingName;
  }


  public CreatePayeesCSVRequestV3 email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nonnull
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public CreatePayeesCSVRequestV3 individualDateOfBirth(LocalDate individualDateOfBirth) {
    this.individualDateOfBirth = individualDateOfBirth;
    return this;
  }

  /**
   * Must not be date in future. Example - 1970-05-20
   * @return individualDateOfBirth
   */
  @javax.annotation.Nullable
  public LocalDate getIndividualDateOfBirth() {
    return individualDateOfBirth;
  }

  public void setIndividualDateOfBirth(LocalDate individualDateOfBirth) {
    this.individualDateOfBirth = individualDateOfBirth;
  }


  public CreatePayeesCSVRequestV3 individualFirstName(String individualFirstName) {
    this.individualFirstName = individualFirstName;
    return this;
  }

  /**
   * Get individualFirstName
   * @return individualFirstName
   */
  @javax.annotation.Nullable
  public String getIndividualFirstName() {
    return individualFirstName;
  }

  public void setIndividualFirstName(String individualFirstName) {
    this.individualFirstName = individualFirstName;
  }


  public CreatePayeesCSVRequestV3 individualLastName(String individualLastName) {
    this.individualLastName = individualLastName;
    return this;
  }

  /**
   * Get individualLastName
   * @return individualLastName
   */
  @javax.annotation.Nullable
  public String getIndividualLastName() {
    return individualLastName;
  }

  public void setIndividualLastName(String individualLastName) {
    this.individualLastName = individualLastName;
  }


  public CreatePayeesCSVRequestV3 individualNationalIdentification(String individualNationalIdentification) {
    this.individualNationalIdentification = individualNationalIdentification;
    return this;
  }

  /**
   * Get individualNationalIdentification
   * @return individualNationalIdentification
   */
  @javax.annotation.Nullable
  public String getIndividualNationalIdentification() {
    return individualNationalIdentification;
  }

  public void setIndividualNationalIdentification(String individualNationalIdentification) {
    this.individualNationalIdentification = individualNationalIdentification;
  }


  public CreatePayeesCSVRequestV3 individualOtherNames(String individualOtherNames) {
    this.individualOtherNames = individualOtherNames;
    return this;
  }

  /**
   * Get individualOtherNames
   * @return individualOtherNames
   */
  @javax.annotation.Nullable
  public String getIndividualOtherNames() {
    return individualOtherNames;
  }

  public void setIndividualOtherNames(String individualOtherNames) {
    this.individualOtherNames = individualOtherNames;
  }


  public CreatePayeesCSVRequestV3 individualTitle(String individualTitle) {
    this.individualTitle = individualTitle;
    return this;
  }

  /**
   * Get individualTitle
   * @return individualTitle
   */
  @javax.annotation.Nullable
  public String getIndividualTitle() {
    return individualTitle;
  }

  public void setIndividualTitle(String individualTitle) {
    this.individualTitle = individualTitle;
  }


  public CreatePayeesCSVRequestV3 payeeLanguage(String payeeLanguage) {
    this.payeeLanguage = payeeLanguage;
    return this;
  }

  /**
   * An IETF BCP 47 language code which has been configured for use within this Velo environment.&lt;BR&gt; See the /v1/supportedLanguages endpoint to list the available codes for an environment. 
   * @return payeeLanguage
   */
  @javax.annotation.Nullable
  public String getPayeeLanguage() {
    return payeeLanguage;
  }

  public void setPayeeLanguage(String payeeLanguage) {
    this.payeeLanguage = payeeLanguage;
  }


  public CreatePayeesCSVRequestV3 paymentChannelAccountName(String paymentChannelAccountName) {
    this.paymentChannelAccountName = paymentChannelAccountName;
    return this;
  }

  /**
   * Get paymentChannelAccountName
   * @return paymentChannelAccountName
   */
  @javax.annotation.Nullable
  public String getPaymentChannelAccountName() {
    return paymentChannelAccountName;
  }

  public void setPaymentChannelAccountName(String paymentChannelAccountName) {
    this.paymentChannelAccountName = paymentChannelAccountName;
  }


  public CreatePayeesCSVRequestV3 paymentChannelAccountNumber(String paymentChannelAccountNumber) {
    this.paymentChannelAccountNumber = paymentChannelAccountNumber;
    return this;
  }

  /**
   * Either routing number and account number or only iban must be set
   * @return paymentChannelAccountNumber
   */
  @javax.annotation.Nullable
  public String getPaymentChannelAccountNumber() {
    return paymentChannelAccountNumber;
  }

  public void setPaymentChannelAccountNumber(String paymentChannelAccountNumber) {
    this.paymentChannelAccountNumber = paymentChannelAccountNumber;
  }


  public CreatePayeesCSVRequestV3 paymentChannelCountryCode(String paymentChannelCountryCode) {
    this.paymentChannelCountryCode = paymentChannelCountryCode;
    return this;
  }

  /**
   * Valid ISO 3166 2 character country code. See the &lt;a href&#x3D;\&quot;https://www.iso.org/iso-3166-country-codes.html\&quot; target&#x3D;\&quot;_blank\&quot; a&gt;ISO specification&lt;/a&gt; for details.
   * @return paymentChannelCountryCode
   */
  @javax.annotation.Nullable
  public String getPaymentChannelCountryCode() {
    return paymentChannelCountryCode;
  }

  public void setPaymentChannelCountryCode(String paymentChannelCountryCode) {
    this.paymentChannelCountryCode = paymentChannelCountryCode;
  }


  public CreatePayeesCSVRequestV3 paymentChannelCurrency(String paymentChannelCurrency) {
    this.paymentChannelCurrency = paymentChannelCurrency;
    return this;
  }

  /**
   * Get paymentChannelCurrency
   * @return paymentChannelCurrency
   */
  @javax.annotation.Nullable
  public String getPaymentChannelCurrency() {
    return paymentChannelCurrency;
  }

  public void setPaymentChannelCurrency(String paymentChannelCurrency) {
    this.paymentChannelCurrency = paymentChannelCurrency;
  }


  public CreatePayeesCSVRequestV3 paymentChannelIban(String paymentChannelIban) {
    this.paymentChannelIban = paymentChannelIban;
    return this;
  }

  /**
   * Must match the regular expression &#x60;&#x60;&#x60;^[A-Za-z0-9]+$&#x60;&#x60;&#x60;.
   * @return paymentChannelIban
   */
  @javax.annotation.Nullable
  public String getPaymentChannelIban() {
    return paymentChannelIban;
  }

  public void setPaymentChannelIban(String paymentChannelIban) {
    this.paymentChannelIban = paymentChannelIban;
  }


  public CreatePayeesCSVRequestV3 paymentChannelRoutingNumber(String paymentChannelRoutingNumber) {
    this.paymentChannelRoutingNumber = paymentChannelRoutingNumber;
    return this;
  }

  /**
   * Either routing number and account number or only iban must be set
   * @return paymentChannelRoutingNumber
   */
  @javax.annotation.Nullable
  public String getPaymentChannelRoutingNumber() {
    return paymentChannelRoutingNumber;
  }

  public void setPaymentChannelRoutingNumber(String paymentChannelRoutingNumber) {
    this.paymentChannelRoutingNumber = paymentChannelRoutingNumber;
  }


  public CreatePayeesCSVRequestV3 remoteId(String remoteId) {
    this.remoteId = remoteId;
    return this;
  }

  /**
   * Get remoteId
   * @return remoteId
   */
  @javax.annotation.Nonnull
  public String getRemoteId() {
    return remoteId;
  }

  public void setRemoteId(String remoteId) {
    this.remoteId = remoteId;
  }


  public CreatePayeesCSVRequestV3 type(PayeeTypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nonnull
  public PayeeTypeEnum getType() {
    return type;
  }

  public void setType(PayeeTypeEnum type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePayeesCSVRequestV3 createPayeesCSVRequestV3 = (CreatePayeesCSVRequestV3) o;
    return Objects.equals(this.addressCity, createPayeesCSVRequestV3.addressCity) &&
        Objects.equals(this.addressCountry, createPayeesCSVRequestV3.addressCountry) &&
        Objects.equals(this.addressCountyOrProvince, createPayeesCSVRequestV3.addressCountyOrProvince) &&
        Objects.equals(this.addressLine1, createPayeesCSVRequestV3.addressLine1) &&
        Objects.equals(this.addressLine2, createPayeesCSVRequestV3.addressLine2) &&
        Objects.equals(this.addressLine3, createPayeesCSVRequestV3.addressLine3) &&
        Objects.equals(this.addressLine4, createPayeesCSVRequestV3.addressLine4) &&
        Objects.equals(this.addressZipOrPostcode, createPayeesCSVRequestV3.addressZipOrPostcode) &&
        Objects.equals(this.challengeDescription, createPayeesCSVRequestV3.challengeDescription) &&
        Objects.equals(this.challengeValue, createPayeesCSVRequestV3.challengeValue) &&
        Objects.equals(this.companyEIN, createPayeesCSVRequestV3.companyEIN) &&
        Objects.equals(this.companyName, createPayeesCSVRequestV3.companyName) &&
        Objects.equals(this.companyOperatingName, createPayeesCSVRequestV3.companyOperatingName) &&
        Objects.equals(this.email, createPayeesCSVRequestV3.email) &&
        Objects.equals(this.individualDateOfBirth, createPayeesCSVRequestV3.individualDateOfBirth) &&
        Objects.equals(this.individualFirstName, createPayeesCSVRequestV3.individualFirstName) &&
        Objects.equals(this.individualLastName, createPayeesCSVRequestV3.individualLastName) &&
        Objects.equals(this.individualNationalIdentification, createPayeesCSVRequestV3.individualNationalIdentification) &&
        Objects.equals(this.individualOtherNames, createPayeesCSVRequestV3.individualOtherNames) &&
        Objects.equals(this.individualTitle, createPayeesCSVRequestV3.individualTitle) &&
        Objects.equals(this.payeeLanguage, createPayeesCSVRequestV3.payeeLanguage) &&
        Objects.equals(this.paymentChannelAccountName, createPayeesCSVRequestV3.paymentChannelAccountName) &&
        Objects.equals(this.paymentChannelAccountNumber, createPayeesCSVRequestV3.paymentChannelAccountNumber) &&
        Objects.equals(this.paymentChannelCountryCode, createPayeesCSVRequestV3.paymentChannelCountryCode) &&
        Objects.equals(this.paymentChannelCurrency, createPayeesCSVRequestV3.paymentChannelCurrency) &&
        Objects.equals(this.paymentChannelIban, createPayeesCSVRequestV3.paymentChannelIban) &&
        Objects.equals(this.paymentChannelRoutingNumber, createPayeesCSVRequestV3.paymentChannelRoutingNumber) &&
        Objects.equals(this.remoteId, createPayeesCSVRequestV3.remoteId) &&
        Objects.equals(this.type, createPayeesCSVRequestV3.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressCity, addressCountry, addressCountyOrProvince, addressLine1, addressLine2, addressLine3, addressLine4, addressZipOrPostcode, challengeDescription, challengeValue, companyEIN, companyName, companyOperatingName, email, individualDateOfBirth, individualFirstName, individualLastName, individualNationalIdentification, individualOtherNames, individualTitle, payeeLanguage, paymentChannelAccountName, paymentChannelAccountNumber, paymentChannelCountryCode, paymentChannelCurrency, paymentChannelIban, paymentChannelRoutingNumber, remoteId, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePayeesCSVRequestV3 {\n");
    sb.append("    addressCity: ").append(toIndentedString(addressCity)).append("\n");
    sb.append("    addressCountry: ").append(toIndentedString(addressCountry)).append("\n");
    sb.append("    addressCountyOrProvince: ").append(toIndentedString(addressCountyOrProvince)).append("\n");
    sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
    sb.append("    addressLine2: ").append(toIndentedString(addressLine2)).append("\n");
    sb.append("    addressLine3: ").append(toIndentedString(addressLine3)).append("\n");
    sb.append("    addressLine4: ").append(toIndentedString(addressLine4)).append("\n");
    sb.append("    addressZipOrPostcode: ").append(toIndentedString(addressZipOrPostcode)).append("\n");
    sb.append("    challengeDescription: ").append(toIndentedString(challengeDescription)).append("\n");
    sb.append("    challengeValue: ").append(toIndentedString(challengeValue)).append("\n");
    sb.append("    companyEIN: ").append(toIndentedString(companyEIN)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    companyOperatingName: ").append(toIndentedString(companyOperatingName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    individualDateOfBirth: ").append(toIndentedString(individualDateOfBirth)).append("\n");
    sb.append("    individualFirstName: ").append(toIndentedString(individualFirstName)).append("\n");
    sb.append("    individualLastName: ").append(toIndentedString(individualLastName)).append("\n");
    sb.append("    individualNationalIdentification: ").append(toIndentedString(individualNationalIdentification)).append("\n");
    sb.append("    individualOtherNames: ").append(toIndentedString(individualOtherNames)).append("\n");
    sb.append("    individualTitle: ").append(toIndentedString(individualTitle)).append("\n");
    sb.append("    payeeLanguage: ").append(toIndentedString(payeeLanguage)).append("\n");
    sb.append("    paymentChannelAccountName: ").append(toIndentedString(paymentChannelAccountName)).append("\n");
    sb.append("    paymentChannelAccountNumber: ").append(toIndentedString(paymentChannelAccountNumber)).append("\n");
    sb.append("    paymentChannelCountryCode: ").append(toIndentedString(paymentChannelCountryCode)).append("\n");
    sb.append("    paymentChannelCurrency: ").append(toIndentedString(paymentChannelCurrency)).append("\n");
    sb.append("    paymentChannelIban: ").append(toIndentedString(paymentChannelIban)).append("\n");
    sb.append("    paymentChannelRoutingNumber: ").append(toIndentedString(paymentChannelRoutingNumber)).append("\n");
    sb.append("    remoteId: ").append(toIndentedString(remoteId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("addressCity");
    openapiFields.add("addressCountry");
    openapiFields.add("addressCountyOrProvince");
    openapiFields.add("addressLine1");
    openapiFields.add("addressLine2");
    openapiFields.add("addressLine3");
    openapiFields.add("addressLine4");
    openapiFields.add("addressZipOrPostcode");
    openapiFields.add("challengeDescription");
    openapiFields.add("challengeValue");
    openapiFields.add("companyEIN");
    openapiFields.add("companyName");
    openapiFields.add("companyOperatingName");
    openapiFields.add("email");
    openapiFields.add("individualDateOfBirth");
    openapiFields.add("individualFirstName");
    openapiFields.add("individualLastName");
    openapiFields.add("individualNationalIdentification");
    openapiFields.add("individualOtherNames");
    openapiFields.add("individualTitle");
    openapiFields.add("payeeLanguage");
    openapiFields.add("paymentChannelAccountName");
    openapiFields.add("paymentChannelAccountNumber");
    openapiFields.add("paymentChannelCountryCode");
    openapiFields.add("paymentChannelCurrency");
    openapiFields.add("paymentChannelIban");
    openapiFields.add("paymentChannelRoutingNumber");
    openapiFields.add("remoteId");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("addressCity");
    openapiRequiredFields.add("addressCountry");
    openapiRequiredFields.add("addressLine1");
    openapiRequiredFields.add("addressZipOrPostcode");
    openapiRequiredFields.add("email");
    openapiRequiredFields.add("remoteId");
    openapiRequiredFields.add("type");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreatePayeesCSVRequestV3
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreatePayeesCSVRequestV3.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreatePayeesCSVRequestV3 is not found in the empty JSON string", CreatePayeesCSVRequestV3.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreatePayeesCSVRequestV3.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreatePayeesCSVRequestV3` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreatePayeesCSVRequestV3.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("addressCity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressCity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressCity").toString()));
      }
      if (!jsonObj.get("addressCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressCountry").toString()));
      }
      if ((jsonObj.get("addressCountyOrProvince") != null && !jsonObj.get("addressCountyOrProvince").isJsonNull()) && !jsonObj.get("addressCountyOrProvince").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressCountyOrProvince` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressCountyOrProvince").toString()));
      }
      if (!jsonObj.get("addressLine1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine1").toString()));
      }
      if ((jsonObj.get("addressLine2") != null && !jsonObj.get("addressLine2").isJsonNull()) && !jsonObj.get("addressLine2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine2").toString()));
      }
      if ((jsonObj.get("addressLine3") != null && !jsonObj.get("addressLine3").isJsonNull()) && !jsonObj.get("addressLine3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine3").toString()));
      }
      if ((jsonObj.get("addressLine4") != null && !jsonObj.get("addressLine4").isJsonNull()) && !jsonObj.get("addressLine4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine4").toString()));
      }
      if (!jsonObj.get("addressZipOrPostcode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressZipOrPostcode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressZipOrPostcode").toString()));
      }
      if ((jsonObj.get("challengeDescription") != null && !jsonObj.get("challengeDescription").isJsonNull()) && !jsonObj.get("challengeDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `challengeDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("challengeDescription").toString()));
      }
      if ((jsonObj.get("challengeValue") != null && !jsonObj.get("challengeValue").isJsonNull()) && !jsonObj.get("challengeValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `challengeValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("challengeValue").toString()));
      }
      if ((jsonObj.get("companyEIN") != null && !jsonObj.get("companyEIN").isJsonNull()) && !jsonObj.get("companyEIN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyEIN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyEIN").toString()));
      }
      if ((jsonObj.get("companyName") != null && !jsonObj.get("companyName").isJsonNull()) && !jsonObj.get("companyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyName").toString()));
      }
      if ((jsonObj.get("companyOperatingName") != null && !jsonObj.get("companyOperatingName").isJsonNull()) && !jsonObj.get("companyOperatingName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyOperatingName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyOperatingName").toString()));
      }
      if (!jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("individualFirstName") != null && !jsonObj.get("individualFirstName").isJsonNull()) && !jsonObj.get("individualFirstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `individualFirstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("individualFirstName").toString()));
      }
      if ((jsonObj.get("individualLastName") != null && !jsonObj.get("individualLastName").isJsonNull()) && !jsonObj.get("individualLastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `individualLastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("individualLastName").toString()));
      }
      if ((jsonObj.get("individualNationalIdentification") != null && !jsonObj.get("individualNationalIdentification").isJsonNull()) && !jsonObj.get("individualNationalIdentification").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `individualNationalIdentification` to be a primitive type in the JSON string but got `%s`", jsonObj.get("individualNationalIdentification").toString()));
      }
      if ((jsonObj.get("individualOtherNames") != null && !jsonObj.get("individualOtherNames").isJsonNull()) && !jsonObj.get("individualOtherNames").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `individualOtherNames` to be a primitive type in the JSON string but got `%s`", jsonObj.get("individualOtherNames").toString()));
      }
      if ((jsonObj.get("individualTitle") != null && !jsonObj.get("individualTitle").isJsonNull()) && !jsonObj.get("individualTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `individualTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("individualTitle").toString()));
      }
      if ((jsonObj.get("payeeLanguage") != null && !jsonObj.get("payeeLanguage").isJsonNull()) && !jsonObj.get("payeeLanguage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payeeLanguage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payeeLanguage").toString()));
      }
      if ((jsonObj.get("paymentChannelAccountName") != null && !jsonObj.get("paymentChannelAccountName").isJsonNull()) && !jsonObj.get("paymentChannelAccountName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentChannelAccountName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentChannelAccountName").toString()));
      }
      if ((jsonObj.get("paymentChannelAccountNumber") != null && !jsonObj.get("paymentChannelAccountNumber").isJsonNull()) && !jsonObj.get("paymentChannelAccountNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentChannelAccountNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentChannelAccountNumber").toString()));
      }
      if ((jsonObj.get("paymentChannelCountryCode") != null && !jsonObj.get("paymentChannelCountryCode").isJsonNull()) && !jsonObj.get("paymentChannelCountryCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentChannelCountryCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentChannelCountryCode").toString()));
      }
      if ((jsonObj.get("paymentChannelCurrency") != null && !jsonObj.get("paymentChannelCurrency").isJsonNull()) && !jsonObj.get("paymentChannelCurrency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentChannelCurrency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentChannelCurrency").toString()));
      }
      if ((jsonObj.get("paymentChannelIban") != null && !jsonObj.get("paymentChannelIban").isJsonNull()) && !jsonObj.get("paymentChannelIban").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentChannelIban` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentChannelIban").toString()));
      }
      if ((jsonObj.get("paymentChannelRoutingNumber") != null && !jsonObj.get("paymentChannelRoutingNumber").isJsonNull()) && !jsonObj.get("paymentChannelRoutingNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentChannelRoutingNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentChannelRoutingNumber").toString()));
      }
      if (!jsonObj.get("remoteId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `remoteId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("remoteId").toString()));
      }
      // validate the required field `type`
      PayeeTypeEnum.validateJsonElement(jsonObj.get("type"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreatePayeesCSVRequestV3.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreatePayeesCSVRequestV3' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreatePayeesCSVRequestV3> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreatePayeesCSVRequestV3.class));

       return (TypeAdapter<T>) new TypeAdapter<CreatePayeesCSVRequestV3>() {
           @Override
           public void write(JsonWriter out, CreatePayeesCSVRequestV3 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreatePayeesCSVRequestV3 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreatePayeesCSVRequestV3 given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreatePayeesCSVRequestV3
   * @throws IOException if the JSON string is invalid with respect to CreatePayeesCSVRequestV3
   */
  public static CreatePayeesCSVRequestV3 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreatePayeesCSVRequestV3.class);
  }

  /**
   * Convert an instance of CreatePayeesCSVRequestV3 to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

