# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PayoutPayorIds(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, payout_from_payor_id: str=None, payout_to_payor_id: str=None, submitting_payor_id: str=None):
        """PayoutPayorIds - a model defined in OpenAPI

        :param payout_from_payor_id: The payout_from_payor_id of this PayoutPayorIds.
        :param payout_to_payor_id: The payout_to_payor_id of this PayoutPayorIds.
        :param submitting_payor_id: The submitting_payor_id of this PayoutPayorIds.
        """
        self.openapi_types = {
            'payout_from_payor_id': str,
            'payout_to_payor_id': str,
            'submitting_payor_id': str
        }

        self.attribute_map = {
            'payout_from_payor_id': 'payoutFromPayorId',
            'payout_to_payor_id': 'payoutToPayorId',
            'submitting_payor_id': 'submittingPayorId'
        }

        self._payout_from_payor_id = payout_from_payor_id
        self._payout_to_payor_id = payout_to_payor_id
        self._submitting_payor_id = submitting_payor_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PayoutPayorIds':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PayoutPayorIds of this PayoutPayorIds.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def payout_from_payor_id(self):
        """Gets the payout_from_payor_id of this PayoutPayorIds.

        The ID of the Payor providing the source account for the payout

        :return: The payout_from_payor_id of this PayoutPayorIds.
        :rtype: str
        """
        return self._payout_from_payor_id

    @payout_from_payor_id.setter
    def payout_from_payor_id(self, payout_from_payor_id):
        """Sets the payout_from_payor_id of this PayoutPayorIds.

        The ID of the Payor providing the source account for the payout

        :param payout_from_payor_id: The payout_from_payor_id of this PayoutPayorIds.
        :type payout_from_payor_id: str
        """
        if payout_from_payor_id is None:
            raise ValueError("Invalid value for `payout_from_payor_id`, must not be `None`")

        self._payout_from_payor_id = payout_from_payor_id

    @property
    def payout_to_payor_id(self):
        """Gets the payout_to_payor_id of this PayoutPayorIds.

        The ID of the Payor that owns the Payee (on behalf of)

        :return: The payout_to_payor_id of this PayoutPayorIds.
        :rtype: str
        """
        return self._payout_to_payor_id

    @payout_to_payor_id.setter
    def payout_to_payor_id(self, payout_to_payor_id):
        """Sets the payout_to_payor_id of this PayoutPayorIds.

        The ID of the Payor that owns the Payee (on behalf of)

        :param payout_to_payor_id: The payout_to_payor_id of this PayoutPayorIds.
        :type payout_to_payor_id: str
        """
        if payout_to_payor_id is None:
            raise ValueError("Invalid value for `payout_to_payor_id`, must not be `None`")

        self._payout_to_payor_id = payout_to_payor_id

    @property
    def submitting_payor_id(self):
        """Gets the submitting_payor_id of this PayoutPayorIds.

        The ID of the Payor that is submitting the payout

        :return: The submitting_payor_id of this PayoutPayorIds.
        :rtype: str
        """
        return self._submitting_payor_id

    @submitting_payor_id.setter
    def submitting_payor_id(self, submitting_payor_id):
        """Sets the submitting_payor_id of this PayoutPayorIds.

        The ID of the Payor that is submitting the payout

        :param submitting_payor_id: The submitting_payor_id of this PayoutPayorIds.
        :type submitting_payor_id: str
        """
        if submitting_payor_id is None:
            raise ValueError("Invalid value for `submitting_payor_id`, must not be `None`")

        self._submitting_payor_id = submitting_payor_id
