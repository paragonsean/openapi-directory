# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NotificationsV3(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, minimum_balance: int=None):
        """NotificationsV3 - a model defined in OpenAPI

        :param minimum_balance: The minimum_balance of this NotificationsV3.
        """
        self.openapi_types = {
            'minimum_balance': int
        }

        self.attribute_map = {
            'minimum_balance': 'minimumBalance'
        }

        self._minimum_balance = minimum_balance

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NotificationsV3':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NotificationsV3 of this NotificationsV3.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def minimum_balance(self):
        """Gets the minimum_balance of this NotificationsV3.


        :return: The minimum_balance of this NotificationsV3.
        :rtype: int
        """
        return self._minimum_balance

    @minimum_balance.setter
    def minimum_balance(self, minimum_balance):
        """Sets the minimum_balance of this NotificationsV3.


        :param minimum_balance: The minimum_balance of this NotificationsV3.
        :type minimum_balance: int
        """

        self._minimum_balance = minimum_balance
