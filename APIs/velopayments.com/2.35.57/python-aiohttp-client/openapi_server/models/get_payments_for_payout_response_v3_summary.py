# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetPaymentsForPayoutResponseV3Summary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, confirmed_payments: int=None, failed_payments: int=None, incomplete_payments: int=None, instructed_date_time: datetime=None, payout_memo: str=None, payout_status: str=None, released_payments: int=None, submitted_date_time: datetime=None, total_payments: int=None, withdrawn_date_time: datetime=None):
        """GetPaymentsForPayoutResponseV3Summary - a model defined in OpenAPI

        :param confirmed_payments: The confirmed_payments of this GetPaymentsForPayoutResponseV3Summary.
        :param failed_payments: The failed_payments of this GetPaymentsForPayoutResponseV3Summary.
        :param incomplete_payments: The incomplete_payments of this GetPaymentsForPayoutResponseV3Summary.
        :param instructed_date_time: The instructed_date_time of this GetPaymentsForPayoutResponseV3Summary.
        :param payout_memo: The payout_memo of this GetPaymentsForPayoutResponseV3Summary.
        :param payout_status: The payout_status of this GetPaymentsForPayoutResponseV3Summary.
        :param released_payments: The released_payments of this GetPaymentsForPayoutResponseV3Summary.
        :param submitted_date_time: The submitted_date_time of this GetPaymentsForPayoutResponseV3Summary.
        :param total_payments: The total_payments of this GetPaymentsForPayoutResponseV3Summary.
        :param withdrawn_date_time: The withdrawn_date_time of this GetPaymentsForPayoutResponseV3Summary.
        """
        self.openapi_types = {
            'confirmed_payments': int,
            'failed_payments': int,
            'incomplete_payments': int,
            'instructed_date_time': datetime,
            'payout_memo': str,
            'payout_status': str,
            'released_payments': int,
            'submitted_date_time': datetime,
            'total_payments': int,
            'withdrawn_date_time': datetime
        }

        self.attribute_map = {
            'confirmed_payments': 'confirmedPayments',
            'failed_payments': 'failedPayments',
            'incomplete_payments': 'incompletePayments',
            'instructed_date_time': 'instructedDateTime',
            'payout_memo': 'payoutMemo',
            'payout_status': 'payoutStatus',
            'released_payments': 'releasedPayments',
            'submitted_date_time': 'submittedDateTime',
            'total_payments': 'totalPayments',
            'withdrawn_date_time': 'withdrawnDateTime'
        }

        self._confirmed_payments = confirmed_payments
        self._failed_payments = failed_payments
        self._incomplete_payments = incomplete_payments
        self._instructed_date_time = instructed_date_time
        self._payout_memo = payout_memo
        self._payout_status = payout_status
        self._released_payments = released_payments
        self._submitted_date_time = submitted_date_time
        self._total_payments = total_payments
        self._withdrawn_date_time = withdrawn_date_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetPaymentsForPayoutResponseV3Summary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetPaymentsForPayoutResponseV3_summary of this GetPaymentsForPayoutResponseV3Summary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def confirmed_payments(self):
        """Gets the confirmed_payments of this GetPaymentsForPayoutResponseV3Summary.

        The count of payments within the payout which have been confirmed.

        :return: The confirmed_payments of this GetPaymentsForPayoutResponseV3Summary.
        :rtype: int
        """
        return self._confirmed_payments

    @confirmed_payments.setter
    def confirmed_payments(self, confirmed_payments):
        """Sets the confirmed_payments of this GetPaymentsForPayoutResponseV3Summary.

        The count of payments within the payout which have been confirmed.

        :param confirmed_payments: The confirmed_payments of this GetPaymentsForPayoutResponseV3Summary.
        :type confirmed_payments: int
        """

        self._confirmed_payments = confirmed_payments

    @property
    def failed_payments(self):
        """Gets the failed_payments of this GetPaymentsForPayoutResponseV3Summary.

        The count of payments within the payout which have failed or been returned.

        :return: The failed_payments of this GetPaymentsForPayoutResponseV3Summary.
        :rtype: int
        """
        return self._failed_payments

    @failed_payments.setter
    def failed_payments(self, failed_payments):
        """Sets the failed_payments of this GetPaymentsForPayoutResponseV3Summary.

        The count of payments within the payout which have failed or been returned.

        :param failed_payments: The failed_payments of this GetPaymentsForPayoutResponseV3Summary.
        :type failed_payments: int
        """

        self._failed_payments = failed_payments

    @property
    def incomplete_payments(self):
        """Gets the incomplete_payments of this GetPaymentsForPayoutResponseV3Summary.

        The count of payments within the payout which are incomplete.

        :return: The incomplete_payments of this GetPaymentsForPayoutResponseV3Summary.
        :rtype: int
        """
        return self._incomplete_payments

    @incomplete_payments.setter
    def incomplete_payments(self, incomplete_payments):
        """Sets the incomplete_payments of this GetPaymentsForPayoutResponseV3Summary.

        The count of payments within the payout which are incomplete.

        :param incomplete_payments: The incomplete_payments of this GetPaymentsForPayoutResponseV3Summary.
        :type incomplete_payments: int
        """

        self._incomplete_payments = incomplete_payments

    @property
    def instructed_date_time(self):
        """Gets the instructed_date_time of this GetPaymentsForPayoutResponseV3Summary.

        The date/time at which the payout was instructed.

        :return: The instructed_date_time of this GetPaymentsForPayoutResponseV3Summary.
        :rtype: datetime
        """
        return self._instructed_date_time

    @instructed_date_time.setter
    def instructed_date_time(self, instructed_date_time):
        """Sets the instructed_date_time of this GetPaymentsForPayoutResponseV3Summary.

        The date/time at which the payout was instructed.

        :param instructed_date_time: The instructed_date_time of this GetPaymentsForPayoutResponseV3Summary.
        :type instructed_date_time: datetime
        """

        self._instructed_date_time = instructed_date_time

    @property
    def payout_memo(self):
        """Gets the payout_memo of this GetPaymentsForPayoutResponseV3Summary.

        The memo attached to the payout.

        :return: The payout_memo of this GetPaymentsForPayoutResponseV3Summary.
        :rtype: str
        """
        return self._payout_memo

    @payout_memo.setter
    def payout_memo(self, payout_memo):
        """Sets the payout_memo of this GetPaymentsForPayoutResponseV3Summary.

        The memo attached to the payout.

        :param payout_memo: The payout_memo of this GetPaymentsForPayoutResponseV3Summary.
        :type payout_memo: str
        """

        self._payout_memo = payout_memo

    @property
    def payout_status(self):
        """Gets the payout_status of this GetPaymentsForPayoutResponseV3Summary.

        The current status of the payout. One of the following values: ACCEPTED, REJECTED, SUBMITTED, QUOTED, INSTRUCTED, COMPLETED, INCOMPLETE, CONFIRMED, WITHDRAWN

        :return: The payout_status of this GetPaymentsForPayoutResponseV3Summary.
        :rtype: str
        """
        return self._payout_status

    @payout_status.setter
    def payout_status(self, payout_status):
        """Sets the payout_status of this GetPaymentsForPayoutResponseV3Summary.

        The current status of the payout. One of the following values: ACCEPTED, REJECTED, SUBMITTED, QUOTED, INSTRUCTED, COMPLETED, INCOMPLETE, CONFIRMED, WITHDRAWN

        :param payout_status: The payout_status of this GetPaymentsForPayoutResponseV3Summary.
        :type payout_status: str
        """

        self._payout_status = payout_status

    @property
    def released_payments(self):
        """Gets the released_payments of this GetPaymentsForPayoutResponseV3Summary.

        The count of payments within the payout which have been released.

        :return: The released_payments of this GetPaymentsForPayoutResponseV3Summary.
        :rtype: int
        """
        return self._released_payments

    @released_payments.setter
    def released_payments(self, released_payments):
        """Sets the released_payments of this GetPaymentsForPayoutResponseV3Summary.

        The count of payments within the payout which have been released.

        :param released_payments: The released_payments of this GetPaymentsForPayoutResponseV3Summary.
        :type released_payments: int
        """

        self._released_payments = released_payments

    @property
    def submitted_date_time(self):
        """Gets the submitted_date_time of this GetPaymentsForPayoutResponseV3Summary.

        The date/time at which the payout was submitted.

        :return: The submitted_date_time of this GetPaymentsForPayoutResponseV3Summary.
        :rtype: datetime
        """
        return self._submitted_date_time

    @submitted_date_time.setter
    def submitted_date_time(self, submitted_date_time):
        """Sets the submitted_date_time of this GetPaymentsForPayoutResponseV3Summary.

        The date/time at which the payout was submitted.

        :param submitted_date_time: The submitted_date_time of this GetPaymentsForPayoutResponseV3Summary.
        :type submitted_date_time: datetime
        """

        self._submitted_date_time = submitted_date_time

    @property
    def total_payments(self):
        """Gets the total_payments of this GetPaymentsForPayoutResponseV3Summary.

        The count of payments within the payout.

        :return: The total_payments of this GetPaymentsForPayoutResponseV3Summary.
        :rtype: int
        """
        return self._total_payments

    @total_payments.setter
    def total_payments(self, total_payments):
        """Sets the total_payments of this GetPaymentsForPayoutResponseV3Summary.

        The count of payments within the payout.

        :param total_payments: The total_payments of this GetPaymentsForPayoutResponseV3Summary.
        :type total_payments: int
        """

        self._total_payments = total_payments

    @property
    def withdrawn_date_time(self):
        """Gets the withdrawn_date_time of this GetPaymentsForPayoutResponseV3Summary.

        The date/time at which the payout was withdrawn.

        :return: The withdrawn_date_time of this GetPaymentsForPayoutResponseV3Summary.
        :rtype: datetime
        """
        return self._withdrawn_date_time

    @withdrawn_date_time.setter
    def withdrawn_date_time(self, withdrawn_date_time):
        """Sets the withdrawn_date_time of this GetPaymentsForPayoutResponseV3Summary.

        The date/time at which the payout was withdrawn.

        :param withdrawn_date_time: The withdrawn_date_time of this GetPaymentsForPayoutResponseV3Summary.
        :type withdrawn_date_time: datetime
        """

        self._withdrawn_date_time = withdrawn_date_time
