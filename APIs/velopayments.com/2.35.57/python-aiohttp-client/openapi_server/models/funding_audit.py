# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.funding_event import FundingEvent
from openapi_server import util


class FundingAudit(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: float=None, currency: str=None, date_time: datetime=None, events: List[FundingEvent]=None, funding_account_name: str=None, funding_type: str=None, source_account_name: str=None, status: str=None, topup_type: str=None):
        """FundingAudit - a model defined in OpenAPI

        :param amount: The amount of this FundingAudit.
        :param currency: The currency of this FundingAudit.
        :param date_time: The date_time of this FundingAudit.
        :param events: The events of this FundingAudit.
        :param funding_account_name: The funding_account_name of this FundingAudit.
        :param funding_type: The funding_type of this FundingAudit.
        :param source_account_name: The source_account_name of this FundingAudit.
        :param status: The status of this FundingAudit.
        :param topup_type: The topup_type of this FundingAudit.
        """
        self.openapi_types = {
            'amount': float,
            'currency': str,
            'date_time': datetime,
            'events': List[FundingEvent],
            'funding_account_name': str,
            'funding_type': str,
            'source_account_name': str,
            'status': str,
            'topup_type': str
        }

        self.attribute_map = {
            'amount': 'amount',
            'currency': 'currency',
            'date_time': 'dateTime',
            'events': 'events',
            'funding_account_name': 'fundingAccountName',
            'funding_type': 'fundingType',
            'source_account_name': 'sourceAccountName',
            'status': 'status',
            'topup_type': 'topupType'
        }

        self._amount = amount
        self._currency = currency
        self._date_time = date_time
        self._events = events
        self._funding_account_name = funding_account_name
        self._funding_type = funding_type
        self._source_account_name = source_account_name
        self._status = status
        self._topup_type = topup_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FundingAudit':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FundingAudit of this FundingAudit.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this FundingAudit.

        The amount funded

        :return: The amount of this FundingAudit.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this FundingAudit.

        The amount funded

        :param amount: The amount of this FundingAudit.
        :type amount: float
        """

        self._amount = amount

    @property
    def currency(self):
        """Gets the currency of this FundingAudit.

        The currency of the funding

        :return: The currency of this FundingAudit.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this FundingAudit.

        The currency of the funding

        :param currency: The currency of this FundingAudit.
        :type currency: str
        """

        self._currency = currency

    @property
    def date_time(self):
        """Gets the date_time of this FundingAudit.


        :return: The date_time of this FundingAudit.
        :rtype: datetime
        """
        return self._date_time

    @date_time.setter
    def date_time(self, date_time):
        """Sets the date_time of this FundingAudit.


        :param date_time: The date_time of this FundingAudit.
        :type date_time: datetime
        """

        self._date_time = date_time

    @property
    def events(self):
        """Gets the events of this FundingAudit.


        :return: The events of this FundingAudit.
        :rtype: List[FundingEvent]
        """
        return self._events

    @events.setter
    def events(self, events):
        """Sets the events of this FundingAudit.


        :param events: The events of this FundingAudit.
        :type events: List[FundingEvent]
        """

        self._events = events

    @property
    def funding_account_name(self):
        """Gets the funding_account_name of this FundingAudit.


        :return: The funding_account_name of this FundingAudit.
        :rtype: str
        """
        return self._funding_account_name

    @funding_account_name.setter
    def funding_account_name(self, funding_account_name):
        """Sets the funding_account_name of this FundingAudit.


        :param funding_account_name: The funding_account_name of this FundingAudit.
        :type funding_account_name: str
        """

        self._funding_account_name = funding_account_name

    @property
    def funding_type(self):
        """Gets the funding_type of this FundingAudit.

        Funding type. One of the following values: ACH, WIRE, EMBEDDED, BANK_TRANSFER

        :return: The funding_type of this FundingAudit.
        :rtype: str
        """
        return self._funding_type

    @funding_type.setter
    def funding_type(self, funding_type):
        """Sets the funding_type of this FundingAudit.

        Funding type. One of the following values: ACH, WIRE, EMBEDDED, BANK_TRANSFER

        :param funding_type: The funding_type of this FundingAudit.
        :type funding_type: str
        """

        self._funding_type = funding_type

    @property
    def source_account_name(self):
        """Gets the source_account_name of this FundingAudit.


        :return: The source_account_name of this FundingAudit.
        :rtype: str
        """
        return self._source_account_name

    @source_account_name.setter
    def source_account_name(self, source_account_name):
        """Sets the source_account_name of this FundingAudit.


        :param source_account_name: The source_account_name of this FundingAudit.
        :type source_account_name: str
        """

        self._source_account_name = source_account_name

    @property
    def status(self):
        """Gets the status of this FundingAudit.

        Status of the funding. One of the following values: PENDING, FAILED, CREDIT, DEBIT

        :return: The status of this FundingAudit.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this FundingAudit.

        Status of the funding. One of the following values: PENDING, FAILED, CREDIT, DEBIT

        :param status: The status of this FundingAudit.
        :type status: str
        """

        self._status = status

    @property
    def topup_type(self):
        """Gets the topup_type of this FundingAudit.

        Type of top up. One of the following values: AUTOMATIC, MANUAL

        :return: The topup_type of this FundingAudit.
        :rtype: str
        """
        return self._topup_type

    @topup_type.setter
    def topup_type(self, topup_type):
        """Sets the topup_type of this FundingAudit.

        Type of top up. One of the following values: AUTOMATIC, MANUAL

        :param topup_type: The topup_type of this FundingAudit.
        :type topup_type: str
        """

        self._topup_type = topup_type
