# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.mfa_details import MFADetails
from openapi_server.models.user_type2 import UserType2
from openapi_server import util


class UserInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mfa_details: MFADetails=None, user_type: UserType2=None, user_id: str=None):
        """UserInfo - a model defined in OpenAPI

        :param mfa_details: The mfa_details of this UserInfo.
        :param user_type: The user_type of this UserInfo.
        :param user_id: The user_id of this UserInfo.
        """
        self.openapi_types = {
            'mfa_details': MFADetails,
            'user_type': UserType2,
            'user_id': str
        }

        self.attribute_map = {
            'mfa_details': 'mfa_details',
            'user_type': 'userType',
            'user_id': 'user_id'
        }

        self._mfa_details = mfa_details
        self._user_type = user_type
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserInfo of this UserInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mfa_details(self):
        """Gets the mfa_details of this UserInfo.


        :return: The mfa_details of this UserInfo.
        :rtype: MFADetails
        """
        return self._mfa_details

    @mfa_details.setter
    def mfa_details(self, mfa_details):
        """Sets the mfa_details of this UserInfo.


        :param mfa_details: The mfa_details of this UserInfo.
        :type mfa_details: MFADetails
        """

        self._mfa_details = mfa_details

    @property
    def user_type(self):
        """Gets the user_type of this UserInfo.


        :return: The user_type of this UserInfo.
        :rtype: UserType2
        """
        return self._user_type

    @user_type.setter
    def user_type(self, user_type):
        """Sets the user_type of this UserInfo.


        :param user_type: The user_type of this UserInfo.
        :type user_type: UserType2
        """

        self._user_type = user_type

    @property
    def user_id(self):
        """Gets the user_id of this UserInfo.

        the id of the user

        :return: The user_id of this UserInfo.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this UserInfo.

        the id of the user

        :param user_id: The user_id of this UserInfo.
        :type user_id: str
        """

        self._user_id = user_id
