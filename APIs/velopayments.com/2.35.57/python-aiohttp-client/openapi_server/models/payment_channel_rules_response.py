# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.payment_channel_country import PaymentChannelCountry
from openapi_server import util


class PaymentChannelRulesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bank: List[PaymentChannelCountry]=None):
        """PaymentChannelRulesResponse - a model defined in OpenAPI

        :param bank: The bank of this PaymentChannelRulesResponse.
        """
        self.openapi_types = {
            'bank': List[PaymentChannelCountry]
        }

        self.attribute_map = {
            'bank': 'bank'
        }

        self._bank = bank

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PaymentChannelRulesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PaymentChannelRulesResponse of this PaymentChannelRulesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bank(self):
        """Gets the bank of this PaymentChannelRulesResponse.


        :return: The bank of this PaymentChannelRulesResponse.
        :rtype: List[PaymentChannelCountry]
        """
        return self._bank

    @bank.setter
    def bank(self, bank):
        """Sets the bank of this PaymentChannelRulesResponse.


        :param bank: The bank of this PaymentChannelRulesResponse.
        :type bank: List[PaymentChannelCountry]
        """

        self._bank = bank
