# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class FundingPayorStatusAuditResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: int=None, currency: str=None, funding_id: str=None, status: str=None):
        """FundingPayorStatusAuditResponse - a model defined in OpenAPI

        :param amount: The amount of this FundingPayorStatusAuditResponse.
        :param currency: The currency of this FundingPayorStatusAuditResponse.
        :param funding_id: The funding_id of this FundingPayorStatusAuditResponse.
        :param status: The status of this FundingPayorStatusAuditResponse.
        """
        self.openapi_types = {
            'amount': int,
            'currency': str,
            'funding_id': str,
            'status': str
        }

        self.attribute_map = {
            'amount': 'amount',
            'currency': 'currency',
            'funding_id': 'fundingId',
            'status': 'status'
        }

        self._amount = amount
        self._currency = currency
        self._funding_id = funding_id
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FundingPayorStatusAuditResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FundingPayorStatusAuditResponse of this FundingPayorStatusAuditResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this FundingPayorStatusAuditResponse.


        :return: The amount of this FundingPayorStatusAuditResponse.
        :rtype: int
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this FundingPayorStatusAuditResponse.


        :param amount: The amount of this FundingPayorStatusAuditResponse.
        :type amount: int
        """

        self._amount = amount

    @property
    def currency(self):
        """Gets the currency of this FundingPayorStatusAuditResponse.

        Valid ISO 4217 3 letter currency code. See the <a href=\"https://www.iso.org/iso-4217-currency-codes.html\" target=\"_blank\" a>ISO specification</a> for details.

        :return: The currency of this FundingPayorStatusAuditResponse.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this FundingPayorStatusAuditResponse.

        Valid ISO 4217 3 letter currency code. See the <a href=\"https://www.iso.org/iso-4217-currency-codes.html\" target=\"_blank\" a>ISO specification</a> for details.

        :param currency: The currency of this FundingPayorStatusAuditResponse.
        :type currency: str
        """
        if currency is not None and len(currency) > 3:
            raise ValueError("Invalid value for `currency`, length must be less than or equal to `3`")
        if currency is not None and len(currency) < 3:
            raise ValueError("Invalid value for `currency`, length must be greater than or equal to `3`")
        if currency is not None and not re.search(r'^[A-Z]{3}$', currency):
            raise ValueError("Invalid value for `currency`, must be a follow pattern or equal to `/^[A-Z]{3}$/`")

        self._currency = currency

    @property
    def funding_id(self):
        """Gets the funding_id of this FundingPayorStatusAuditResponse.


        :return: The funding_id of this FundingPayorStatusAuditResponse.
        :rtype: str
        """
        return self._funding_id

    @funding_id.setter
    def funding_id(self, funding_id):
        """Sets the funding_id of this FundingPayorStatusAuditResponse.


        :param funding_id: The funding_id of this FundingPayorStatusAuditResponse.
        :type funding_id: str
        """

        self._funding_id = funding_id

    @property
    def status(self):
        """Gets the status of this FundingPayorStatusAuditResponse.


        :return: The status of this FundingPayorStatusAuditResponse.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this FundingPayorStatusAuditResponse.


        :param status: The status of this FundingPayorStatusAuditResponse.
        :type status: str
        """

        self._status = status
