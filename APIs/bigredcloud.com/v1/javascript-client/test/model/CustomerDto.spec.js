/**
 * Big Red Cloud API
 *   <div style='line-height: 30px;'>      <strong>Welcome to the Big Red Cloud API</strong><br/>      This API enables programmatic access to Big Red Cloud data.<br/>      We have used Swagger to auto generate the API documentation on this page, and it also enables direct interaction with the API in this page. <br/>      To get started, you will require an API Key - check out our guide at <a target='_blank' href='https://www.bigredcloud.com/support/generating-api-key-guide/'>https://www.bigredcloud.com/support/generating-api-key-guide/</a> for information on how to get one. <br/>      Use the  'Enter API Key' button below to enter your API key and start interacting with your Big Red Cloud data right on this page. <br/>      The API key will be stored in your browsers local storage for convenience, but you will be able to delete it at any time if you wish. <br/>      For additional information on the API, check out our support article at <a target='_blank' href='https://www.bigredcloud.com/support/api/'>https://www.bigredcloud.com/support/api/</a><br/>  </div>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BigRedCloudApi);
  }
}(this, function(expect, BigRedCloudApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BigRedCloudApi.CustomerDto();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CustomerDto', function() {
    it('should create an instance of CustomerDto', function() {
      // uncomment below and update the code to test CustomerDto
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be.a(BigRedCloudApi.CustomerDto);
    });

    it('should have the property accountName (base name: "accountName")', function() {
      // uncomment below and update the code to test the property accountName
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

    it('should have the property accountNumber (base name: "accountNumber")', function() {
      // uncomment below and update the code to test the property accountNumber
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

    it('should have the property additionalEmails (base name: "additionalEmails")', function() {
      // uncomment below and update the code to test the property additionalEmails
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

    it('should have the property authCode (base name: "authCode")', function() {
      // uncomment below and update the code to test the property authCode
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

    it('should have the property bank (base name: "bank")', function() {
      // uncomment below and update the code to test the property bank
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

    it('should have the property businessIdentifierCode (base name: "businessIdentifierCode")', function() {
      // uncomment below and update the code to test the property businessIdentifierCode
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

    it('should have the property code (base name: "code")', function() {
      // uncomment below and update the code to test the property code
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

    it('should have the property contact (base name: "contact")', function() {
      // uncomment below and update the code to test the property contact
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

    it('should have the property delivery (base name: "delivery")', function() {
      // uncomment below and update the code to test the property delivery
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

    it('should have the property eFTReference (base name: "eFTReference")', function() {
      // uncomment below and update the code to test the property eFTReference
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

    it('should have the property fax (base name: "fax")', function() {
      // uncomment below and update the code to test the property fax
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

    it('should have the property internationalBankAccountNumber (base name: "internationalBankAccountNumber")', function() {
      // uncomment below and update the code to test the property internationalBankAccountNumber
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

    it('should have the property ledgerBalance (base name: "ledgerBalance")', function() {
      // uncomment below and update the code to test the property ledgerBalance
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

    it('should have the property mobile (base name: "mobile")', function() {
      // uncomment below and update the code to test the property mobile
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

    it('should have the property openingBalance (base name: "openingBalance")', function() {
      // uncomment below and update the code to test the property openingBalance
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

    it('should have the property openingBalances (base name: "openingBalances")', function() {
      // uncomment below and update the code to test the property openingBalances
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

    it('should have the property ourCode (base name: "ourCode")', function() {
      // uncomment below and update the code to test the property ourCode
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

    it('should have the property ownerTypeId (base name: "ownerTypeId")', function() {
      // uncomment below and update the code to test the property ownerTypeId
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

    it('should have the property timestamp (base name: "timestamp")', function() {
      // uncomment below and update the code to test the property timestamp
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

    it('should have the property vatAnalysisTypeId (base name: "vatAnalysisTypeId")', function() {
      // uncomment below and update the code to test the property vatAnalysisTypeId
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

    it('should have the property vatReg (base name: "vatReg")', function() {
      // uncomment below and update the code to test the property vatReg
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

    it('should have the property vatType (base name: "vatType")', function() {
      // uncomment below and update the code to test the property vatType
      //var instance = new BigRedCloudApi.CustomerDto();
      //expect(instance).to.be();
    });

  });

}));
