/**
 * Big Red Cloud API
 *   <div style='line-height: 30px;'>      <strong>Welcome to the Big Red Cloud API</strong><br/>      This API enables programmatic access to Big Red Cloud data.<br/>      We have used Swagger to auto generate the API documentation on this page, and it also enables direct interaction with the API in this page. <br/>      To get started, you will require an API Key - check out our guide at <a target='_blank' href='https://www.bigredcloud.com/support/generating-api-key-guide/'>https://www.bigredcloud.com/support/generating-api-key-guide/</a> for information on how to get one. <br/>      Use the  'Enter API Key' button below to enter your API key and start interacting with your Big Red Cloud data right on this page. <br/>      The API key will be stored in your browsers local storage for convenience, but you will be able to delete it at any time if you wish. <br/>      For additional information on the API, check out our support article at <a target='_blank' href='https://www.bigredcloud.com/support/api/'>https://www.bigredcloud.com/support/api/</a><br/>  </div>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PurchaseDto from './PurchaseDto';

/**
 * The BatchItemPurchaseDto model module.
 * @module model/BatchItemPurchaseDto
 * @version v1
 */
class BatchItemPurchaseDto {
    /**
     * Constructs a new <code>BatchItemPurchaseDto</code>.
     * @alias module:model/BatchItemPurchaseDto
     */
    constructor() { 
        
        BatchItemPurchaseDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BatchItemPurchaseDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchItemPurchaseDto} obj Optional instance to populate.
     * @return {module:model/BatchItemPurchaseDto} The populated <code>BatchItemPurchaseDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchItemPurchaseDto();

            if (data.hasOwnProperty('item')) {
                obj['item'] = PurchaseDto.constructFromObject(data['item']);
            }
            if (data.hasOwnProperty('opCode')) {
                obj['opCode'] = ApiClient.convertToType(data['opCode'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchItemPurchaseDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchItemPurchaseDto</code>.
     */
    static validateJSON(data) {
        // validate the optional field `item`
        if (data['item']) { // data not null
          PurchaseDto.validateJSON(data['item']);
        }

        return true;
    }


}



/**
 * @member {module:model/PurchaseDto} item
 */
BatchItemPurchaseDto.prototype['item'] = undefined;

/**
 * 1 - Create  2 - Update  3 - Delete
 * @member {module:model/BatchItemPurchaseDto.OpCodeEnum} opCode
 */
BatchItemPurchaseDto.prototype['opCode'] = undefined;





/**
 * Allowed values for the <code>opCode</code> property.
 * @enum {Number}
 * @readonly
 */
BatchItemPurchaseDto['OpCodeEnum'] = {

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2,

    /**
     * value: 3
     * @const
     */
    "3": 3
};



export default BatchItemPurchaseDto;

