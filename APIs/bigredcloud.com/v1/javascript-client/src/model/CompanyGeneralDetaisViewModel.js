/**
 * Big Red Cloud API
 *   <div style='line-height: 30px;'>      <strong>Welcome to the Big Red Cloud API</strong><br/>      This API enables programmatic access to Big Red Cloud data.<br/>      We have used Swagger to auto generate the API documentation on this page, and it also enables direct interaction with the API in this page. <br/>      To get started, you will require an API Key - check out our guide at <a target='_blank' href='https://www.bigredcloud.com/support/generating-api-key-guide/'>https://www.bigredcloud.com/support/generating-api-key-guide/</a> for information on how to get one. <br/>      Use the  'Enter API Key' button below to enter your API key and start interacting with your Big Red Cloud data right on this page. <br/>      The API key will be stored in your browsers local storage for convenience, but you will be able to delete it at any time if you wish. <br/>      For additional information on the API, check out our support article at <a target='_blank' href='https://www.bigredcloud.com/support/api/'>https://www.bigredcloud.com/support/api/</a><br/>  </div>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CompanyGeneralDetaisViewModel model module.
 * @module model/CompanyGeneralDetaisViewModel
 * @version v1
 */
class CompanyGeneralDetaisViewModel {
    /**
     * Constructs a new <code>CompanyGeneralDetaisViewModel</code>.
     * @alias module:model/CompanyGeneralDetaisViewModel
     */
    constructor() { 
        
        CompanyGeneralDetaisViewModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CompanyGeneralDetaisViewModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CompanyGeneralDetaisViewModel} obj Optional instance to populate.
     * @return {module:model/CompanyGeneralDetaisViewModel} The populated <code>CompanyGeneralDetaisViewModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CompanyGeneralDetaisViewModel();

            if (data.hasOwnProperty('companyAddresses')) {
                obj['companyAddresses'] = ApiClient.convertToType(data['companyAddresses'], ['String']);
            }
            if (data.hasOwnProperty('companyName')) {
                obj['companyName'] = ApiClient.convertToType(data['companyName'], 'String');
            }
            if (data.hasOwnProperty('currencyCode')) {
                obj['currencyCode'] = ApiClient.convertToType(data['currencyCode'], 'String');
            }
            if (data.hasOwnProperty('currencyDescription')) {
                obj['currencyDescription'] = ApiClient.convertToType(data['currencyDescription'], 'String');
            }
            if (data.hasOwnProperty('currencyId')) {
                obj['currencyId'] = ApiClient.convertToType(data['currencyId'], 'Number');
            }
            if (data.hasOwnProperty('currentcySymbol')) {
                obj['currentcySymbol'] = ApiClient.convertToType(data['currentcySymbol'], 'String');
            }
            if (data.hasOwnProperty('emails')) {
                obj['emails'] = ApiClient.convertToType(data['emails'], ['String']);
            }
            if (data.hasOwnProperty('faxes')) {
                obj['faxes'] = ApiClient.convertToType(data['faxes'], ['String']);
            }
            if (data.hasOwnProperty('phones')) {
                obj['phones'] = ApiClient.convertToType(data['phones'], ['String']);
            }
            if (data.hasOwnProperty('regionDescription')) {
                obj['regionDescription'] = ApiClient.convertToType(data['regionDescription'], 'String');
            }
            if (data.hasOwnProperty('regionId')) {
                obj['regionId'] = ApiClient.convertToType(data['regionId'], 'Number');
            }
            if (data.hasOwnProperty('vatReg')) {
                obj['vatReg'] = ApiClient.convertToType(data['vatReg'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CompanyGeneralDetaisViewModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CompanyGeneralDetaisViewModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['companyAddresses'])) {
            throw new Error("Expected the field `companyAddresses` to be an array in the JSON data but got " + data['companyAddresses']);
        }
        // ensure the json data is a string
        if (data['companyName'] && !(typeof data['companyName'] === 'string' || data['companyName'] instanceof String)) {
            throw new Error("Expected the field `companyName` to be a primitive type in the JSON string but got " + data['companyName']);
        }
        // ensure the json data is a string
        if (data['currencyCode'] && !(typeof data['currencyCode'] === 'string' || data['currencyCode'] instanceof String)) {
            throw new Error("Expected the field `currencyCode` to be a primitive type in the JSON string but got " + data['currencyCode']);
        }
        // ensure the json data is a string
        if (data['currencyDescription'] && !(typeof data['currencyDescription'] === 'string' || data['currencyDescription'] instanceof String)) {
            throw new Error("Expected the field `currencyDescription` to be a primitive type in the JSON string but got " + data['currencyDescription']);
        }
        // ensure the json data is a string
        if (data['currentcySymbol'] && !(typeof data['currentcySymbol'] === 'string' || data['currentcySymbol'] instanceof String)) {
            throw new Error("Expected the field `currentcySymbol` to be a primitive type in the JSON string but got " + data['currentcySymbol']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['emails'])) {
            throw new Error("Expected the field `emails` to be an array in the JSON data but got " + data['emails']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['faxes'])) {
            throw new Error("Expected the field `faxes` to be an array in the JSON data but got " + data['faxes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['phones'])) {
            throw new Error("Expected the field `phones` to be an array in the JSON data but got " + data['phones']);
        }
        // ensure the json data is a string
        if (data['regionDescription'] && !(typeof data['regionDescription'] === 'string' || data['regionDescription'] instanceof String)) {
            throw new Error("Expected the field `regionDescription` to be a primitive type in the JSON string but got " + data['regionDescription']);
        }
        // ensure the json data is a string
        if (data['vatReg'] && !(typeof data['vatReg'] === 'string' || data['vatReg'] instanceof String)) {
            throw new Error("Expected the field `vatReg` to be a primitive type in the JSON string but got " + data['vatReg']);
        }

        return true;
    }


}



/**
 * @member {Array.<String>} companyAddresses
 */
CompanyGeneralDetaisViewModel.prototype['companyAddresses'] = undefined;

/**
 * @member {String} companyName
 */
CompanyGeneralDetaisViewModel.prototype['companyName'] = undefined;

/**
 * @member {String} currencyCode
 */
CompanyGeneralDetaisViewModel.prototype['currencyCode'] = undefined;

/**
 * @member {String} currencyDescription
 */
CompanyGeneralDetaisViewModel.prototype['currencyDescription'] = undefined;

/**
 * @member {Number} currencyId
 */
CompanyGeneralDetaisViewModel.prototype['currencyId'] = undefined;

/**
 * @member {String} currentcySymbol
 */
CompanyGeneralDetaisViewModel.prototype['currentcySymbol'] = undefined;

/**
 * @member {Array.<String>} emails
 */
CompanyGeneralDetaisViewModel.prototype['emails'] = undefined;

/**
 * @member {Array.<String>} faxes
 */
CompanyGeneralDetaisViewModel.prototype['faxes'] = undefined;

/**
 * @member {Array.<String>} phones
 */
CompanyGeneralDetaisViewModel.prototype['phones'] = undefined;

/**
 * @member {String} regionDescription
 */
CompanyGeneralDetaisViewModel.prototype['regionDescription'] = undefined;

/**
 * @member {Number} regionId
 */
CompanyGeneralDetaisViewModel.prototype['regionId'] = undefined;

/**
 * @member {String} vatReg
 */
CompanyGeneralDetaisViewModel.prototype['vatReg'] = undefined;






export default CompanyGeneralDetaisViewModel;

