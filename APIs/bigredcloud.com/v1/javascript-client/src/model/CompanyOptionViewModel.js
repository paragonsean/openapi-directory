/**
 * Big Red Cloud API
 *   <div style='line-height: 30px;'>      <strong>Welcome to the Big Red Cloud API</strong><br/>      This API enables programmatic access to Big Red Cloud data.<br/>      We have used Swagger to auto generate the API documentation on this page, and it also enables direct interaction with the API in this page. <br/>      To get started, you will require an API Key - check out our guide at <a target='_blank' href='https://www.bigredcloud.com/support/generating-api-key-guide/'>https://www.bigredcloud.com/support/generating-api-key-guide/</a> for information on how to get one. <br/>      Use the  'Enter API Key' button below to enter your API key and start interacting with your Big Red Cloud data right on this page. <br/>      The API key will be stored in your browsers local storage for convenience, but you will be able to delete it at any time if you wish. <br/>      For additional information on the API, check out our support article at <a target='_blank' href='https://www.bigredcloud.com/support/api/'>https://www.bigredcloud.com/support/api/</a><br/>  </div>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CompanyOptionViewModel model module.
 * @module model/CompanyOptionViewModel
 * @version v1
 */
class CompanyOptionViewModel {
    /**
     * Constructs a new <code>CompanyOptionViewModel</code>.
     * @alias module:model/CompanyOptionViewModel
     */
    constructor() { 
        
        CompanyOptionViewModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CompanyOptionViewModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CompanyOptionViewModel} obj Optional instance to populate.
     * @return {module:model/CompanyOptionViewModel} The populated <code>CompanyOptionViewModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CompanyOptionViewModel();

            if (data.hasOwnProperty('allowEntryOfGrossPriceInInvoicing')) {
                obj['allowEntryOfGrossPriceInInvoicing'] = ApiClient.convertToType(data['allowEntryOfGrossPriceInInvoicing'], 'Boolean');
            }
            if (data.hasOwnProperty('creditInputForReverseChargeVAT')) {
                obj['creditInputForReverseChargeVAT'] = ApiClient.convertToType(data['creditInputForReverseChargeVAT'], 'Boolean');
            }
            if (data.hasOwnProperty('creditNoteJournalAgeingName')) {
                obj['creditNoteJournalAgeingName'] = ApiClient.convertToType(data['creditNoteJournalAgeingName'], 'String');
            }
            if (data.hasOwnProperty('creditNoteJournalAgeingValue')) {
                obj['creditNoteJournalAgeingValue'] = ApiClient.convertToType(data['creditNoteJournalAgeingValue'], 'Number');
            }
            if (data.hasOwnProperty('discrepancyAllowed')) {
                obj['discrepancyAllowed'] = ApiClient.convertToType(data['discrepancyAllowed'], 'Number');
            }
            if (data.hasOwnProperty('enableVOCRReporting')) {
                obj['enableVOCRReporting'] = ApiClient.convertToType(data['enableVOCRReporting'], 'Boolean');
            }
            if (data.hasOwnProperty('marginVatScheme')) {
                obj['marginVatScheme'] = ApiClient.convertToType(data['marginVatScheme'], 'Boolean');
            }
            if (data.hasOwnProperty('printOSItemsOnly')) {
                obj['printOSItemsOnly'] = ApiClient.convertToType(data['printOSItemsOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('purchasesVatAnalysisType')) {
                obj['purchasesVatAnalysisType'] = ApiClient.convertToType(data['purchasesVatAnalysisType'], 'Number');
            }
            if (data.hasOwnProperty('salesVatAnalysisType')) {
                obj['salesVatAnalysisType'] = ApiClient.convertToType(data['salesVatAnalysisType'], 'Number');
            }
            if (data.hasOwnProperty('useAllocations')) {
                obj['useAllocations'] = ApiClient.convertToType(data['useAllocations'], 'Boolean');
            }
            if (data.hasOwnProperty('useNominal')) {
                obj['useNominal'] = ApiClient.convertToType(data['useNominal'], 'Boolean');
            }
            if (data.hasOwnProperty('useNominalCode')) {
                obj['useNominalCode'] = ApiClient.convertToType(data['useNominalCode'], 'Boolean');
            }
            if (data.hasOwnProperty('vocrSettingValue')) {
                obj['vocrSettingValue'] = ApiClient.convertToType(data['vocrSettingValue'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CompanyOptionViewModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CompanyOptionViewModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['creditNoteJournalAgeingName'] && !(typeof data['creditNoteJournalAgeingName'] === 'string' || data['creditNoteJournalAgeingName'] instanceof String)) {
            throw new Error("Expected the field `creditNoteJournalAgeingName` to be a primitive type in the JSON string but got " + data['creditNoteJournalAgeingName']);
        }

        return true;
    }


}



/**
 * @member {Boolean} allowEntryOfGrossPriceInInvoicing
 */
CompanyOptionViewModel.prototype['allowEntryOfGrossPriceInInvoicing'] = undefined;

/**
 * @member {Boolean} creditInputForReverseChargeVAT
 */
CompanyOptionViewModel.prototype['creditInputForReverseChargeVAT'] = undefined;

/**
 * @member {String} creditNoteJournalAgeingName
 */
CompanyOptionViewModel.prototype['creditNoteJournalAgeingName'] = undefined;

/**
 * @member {Number} creditNoteJournalAgeingValue
 */
CompanyOptionViewModel.prototype['creditNoteJournalAgeingValue'] = undefined;

/**
 * @member {Number} discrepancyAllowed
 */
CompanyOptionViewModel.prototype['discrepancyAllowed'] = undefined;

/**
 * @member {Boolean} enableVOCRReporting
 */
CompanyOptionViewModel.prototype['enableVOCRReporting'] = undefined;

/**
 * @member {Boolean} marginVatScheme
 */
CompanyOptionViewModel.prototype['marginVatScheme'] = undefined;

/**
 * @member {Boolean} printOSItemsOnly
 */
CompanyOptionViewModel.prototype['printOSItemsOnly'] = undefined;

/**
 * @member {Number} purchasesVatAnalysisType
 */
CompanyOptionViewModel.prototype['purchasesVatAnalysisType'] = undefined;

/**
 * @member {Number} salesVatAnalysisType
 */
CompanyOptionViewModel.prototype['salesVatAnalysisType'] = undefined;

/**
 * @member {Boolean} useAllocations
 */
CompanyOptionViewModel.prototype['useAllocations'] = undefined;

/**
 * @member {Boolean} useNominal
 */
CompanyOptionViewModel.prototype['useNominal'] = undefined;

/**
 * @member {Boolean} useNominalCode
 */
CompanyOptionViewModel.prototype['useNominalCode'] = undefined;

/**
 * @member {Boolean} vocrSettingValue
 */
CompanyOptionViewModel.prototype['vocrSettingValue'] = undefined;






export default CompanyOptionViewModel;

