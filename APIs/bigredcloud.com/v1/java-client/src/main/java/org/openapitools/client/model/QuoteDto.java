/*
 * Big Red Cloud API
 *   <div style='line-height: 30px;'>      <strong>Welcome to the Big Red Cloud API</strong><br/>      This API enables programmatic access to Big Red Cloud data.<br/>      We have used Swagger to auto generate the API documentation on this page, and it also enables direct interaction with the API in this page. <br/>      To get started, you will require an API Key - check out our guide at <a target='_blank' href='https://www.bigredcloud.com/support/generating-api-key-guide/'>https://www.bigredcloud.com/support/generating-api-key-guide/</a> for information on how to get one. <br/>      Use the  'Enter API Key' button below to enter your API key and start interacting with your Big Red Cloud data right on this page. <br/>      The API key will be stored in your browsers local storage for convenience, but you will be able to delete it at any time if you wish. <br/>      For additional information on the API, check out our support article at <a target='_blank' href='https://www.bigredcloud.com/support/api/'>https://www.bigredcloud.com/support/api/</a><br/>  </div>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AcudfValueDto;
import org.openapitools.client.model.QuoteProductTransDto;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * QuoteDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:00:05.666566-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class QuoteDto {
  public static final String SERIALIZED_NAME_AC_CODE = "acCode";
  @SerializedName(SERIALIZED_NAME_AC_CODE)
  private String acCode;

  public static final String SERIALIZED_NAME_CLOSED_DATE = "closedDate";
  @SerializedName(SERIALIZED_NAME_CLOSED_DATE)
  private OffsetDateTime closedDate;

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private String comments;

  public static final String SERIALIZED_NAME_COMPANY_ID = "companyId";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private Long companyId;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "customFields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private List<AcudfValueDto> customFields = new ArrayList<>();

  public static final String SERIALIZED_NAME_CUSTOMER_OWNER_ID = "customerOwnerId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_OWNER_ID)
  private Long customerOwnerId;

  public static final String SERIALIZED_NAME_CUSTOMER_OWNER_NAME = "customerOwnerName";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_OWNER_NAME)
  private String customerOwnerName;

  public static final String SERIALIZED_NAME_DD_NUMBER = "ddNumber";
  @SerializedName(SERIALIZED_NAME_DD_NUMBER)
  private String ddNumber;

  public static final String SERIALIZED_NAME_DELIVERY_LIST = "deliveryList";
  @SerializedName(SERIALIZED_NAME_DELIVERY_LIST)
  private String deliveryList;

  public static final String SERIALIZED_NAME_DELIVERY_TO = "deliveryTo";
  @SerializedName(SERIALIZED_NAME_DELIVERY_TO)
  private List<String> deliveryTo = new ArrayList<>();

  public static final String SERIALIZED_NAME_ENTRY_DATE = "entryDate";
  @SerializedName(SERIALIZED_NAME_ENTRY_DATE)
  private OffsetDateTime entryDate;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_LAYOUT_TYPE = "layoutType";
  @SerializedName(SERIALIZED_NAME_LAYOUT_TYPE)
  private Integer layoutType;

  public static final String SERIALIZED_NAME_NOTE = "note";
  @SerializedName(SERIALIZED_NAME_NOTE)
  private String note;

  public static final String SERIALIZED_NAME_PO_NUMBER = "poNumber";
  @SerializedName(SERIALIZED_NAME_PO_NUMBER)
  private String poNumber;

  public static final String SERIALIZED_NAME_PROC_DATE = "procDate";
  @SerializedName(SERIALIZED_NAME_PROC_DATE)
  private OffsetDateTime procDate;

  public static final String SERIALIZED_NAME_PRODUCT_TRANS = "productTrans";
  @SerializedName(SERIALIZED_NAME_PRODUCT_TRANS)
  private List<QuoteProductTransDto> productTrans = new ArrayList<>();

  public static final String SERIALIZED_NAME_REFERENCE = "reference";
  @SerializedName(SERIALIZED_NAME_REFERENCE)
  private String reference;

  public static final String SERIALIZED_NAME_SALE_INVOICE_ID = "saleInvoiceId";
  @SerializedName(SERIALIZED_NAME_SALE_INVOICE_ID)
  private Long saleInvoiceId;

  public static final String SERIALIZED_NAME_SALE_REP_CODE = "saleRepCode";
  @SerializedName(SERIALIZED_NAME_SALE_REP_CODE)
  private String saleRepCode;

  public static final String SERIALIZED_NAME_SALE_REP_ID = "saleRepId";
  @SerializedName(SERIALIZED_NAME_SALE_REP_ID)
  private Long saleRepId;

  public static final String SERIALIZED_NAME_TIME_STAMP = "timeStamp";
  @SerializedName(SERIALIZED_NAME_TIME_STAMP)
  private byte[] timeStamp;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private Double total;

  public static final String SERIALIZED_NAME_TOTAL_NET = "totalNet";
  @SerializedName(SERIALIZED_NAME_TOTAL_NET)
  private Double totalNet;

  public static final String SERIALIZED_NAME_TOTAL_VAT = "totalVat";
  @SerializedName(SERIALIZED_NAME_TOTAL_VAT)
  private Double totalVat;

  public static final String SERIALIZED_NAME_VAT_TYPE_ID = "vatTypeId";
  @SerializedName(SERIALIZED_NAME_VAT_TYPE_ID)
  private Long vatTypeId;

  public QuoteDto() {
  }

  public QuoteDto acCode(String acCode) {
    this.acCode = acCode;
    return this;
  }

  /**
   * Get acCode
   * @return acCode
   */
  @javax.annotation.Nullable
  public String getAcCode() {
    return acCode;
  }

  public void setAcCode(String acCode) {
    this.acCode = acCode;
  }


  public QuoteDto closedDate(OffsetDateTime closedDate) {
    this.closedDate = closedDate;
    return this;
  }

  /**
   * Get closedDate
   * @return closedDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getClosedDate() {
    return closedDate;
  }

  public void setClosedDate(OffsetDateTime closedDate) {
    this.closedDate = closedDate;
  }


  public QuoteDto comments(String comments) {
    this.comments = comments;
    return this;
  }

  /**
   * Get comments
   * @return comments
   */
  @javax.annotation.Nullable
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }


  public QuoteDto companyId(Long companyId) {
    this.companyId = companyId;
    return this;
  }

  /**
   * Get companyId
   * @return companyId
   */
  @javax.annotation.Nullable
  public Long getCompanyId() {
    return companyId;
  }

  public void setCompanyId(Long companyId) {
    this.companyId = companyId;
  }


  public QuoteDto customFields(List<AcudfValueDto> customFields) {
    this.customFields = customFields;
    return this;
  }

  public QuoteDto addCustomFieldsItem(AcudfValueDto customFieldsItem) {
    if (this.customFields == null) {
      this.customFields = new ArrayList<>();
    }
    this.customFields.add(customFieldsItem);
    return this;
  }

  /**
   * Get customFields
   * @return customFields
   */
  @javax.annotation.Nullable
  public List<AcudfValueDto> getCustomFields() {
    return customFields;
  }

  public void setCustomFields(List<AcudfValueDto> customFields) {
    this.customFields = customFields;
  }


  public QuoteDto customerOwnerId(Long customerOwnerId) {
    this.customerOwnerId = customerOwnerId;
    return this;
  }

  /**
   * Get customerOwnerId
   * @return customerOwnerId
   */
  @javax.annotation.Nullable
  public Long getCustomerOwnerId() {
    return customerOwnerId;
  }

  public void setCustomerOwnerId(Long customerOwnerId) {
    this.customerOwnerId = customerOwnerId;
  }


  public QuoteDto customerOwnerName(String customerOwnerName) {
    this.customerOwnerName = customerOwnerName;
    return this;
  }

  /**
   * Get customerOwnerName
   * @return customerOwnerName
   */
  @javax.annotation.Nullable
  public String getCustomerOwnerName() {
    return customerOwnerName;
  }

  public void setCustomerOwnerName(String customerOwnerName) {
    this.customerOwnerName = customerOwnerName;
  }


  public QuoteDto ddNumber(String ddNumber) {
    this.ddNumber = ddNumber;
    return this;
  }

  /**
   * Get ddNumber
   * @return ddNumber
   */
  @javax.annotation.Nullable
  public String getDdNumber() {
    return ddNumber;
  }

  public void setDdNumber(String ddNumber) {
    this.ddNumber = ddNumber;
  }


  public QuoteDto deliveryList(String deliveryList) {
    this.deliveryList = deliveryList;
    return this;
  }

  /**
   * Get deliveryList
   * @return deliveryList
   */
  @javax.annotation.Nullable
  public String getDeliveryList() {
    return deliveryList;
  }

  public void setDeliveryList(String deliveryList) {
    this.deliveryList = deliveryList;
  }


  public QuoteDto deliveryTo(List<String> deliveryTo) {
    this.deliveryTo = deliveryTo;
    return this;
  }

  public QuoteDto addDeliveryToItem(String deliveryToItem) {
    if (this.deliveryTo == null) {
      this.deliveryTo = new ArrayList<>();
    }
    this.deliveryTo.add(deliveryToItem);
    return this;
  }

  /**
   * Get deliveryTo
   * @return deliveryTo
   */
  @javax.annotation.Nullable
  public List<String> getDeliveryTo() {
    return deliveryTo;
  }

  public void setDeliveryTo(List<String> deliveryTo) {
    this.deliveryTo = deliveryTo;
  }


  public QuoteDto entryDate(OffsetDateTime entryDate) {
    this.entryDate = entryDate;
    return this;
  }

  /**
   * Get entryDate
   * @return entryDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEntryDate() {
    return entryDate;
  }

  public void setEntryDate(OffsetDateTime entryDate) {
    this.entryDate = entryDate;
  }


  public QuoteDto id(Long id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }


  public QuoteDto layoutType(Integer layoutType) {
    this.layoutType = layoutType;
    return this;
  }

  /**
   * Get layoutType
   * @return layoutType
   */
  @javax.annotation.Nullable
  public Integer getLayoutType() {
    return layoutType;
  }

  public void setLayoutType(Integer layoutType) {
    this.layoutType = layoutType;
  }


  public QuoteDto note(String note) {
    this.note = note;
    return this;
  }

  /**
   * Get note
   * @return note
   */
  @javax.annotation.Nullable
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }


  public QuoteDto poNumber(String poNumber) {
    this.poNumber = poNumber;
    return this;
  }

  /**
   * Get poNumber
   * @return poNumber
   */
  @javax.annotation.Nullable
  public String getPoNumber() {
    return poNumber;
  }

  public void setPoNumber(String poNumber) {
    this.poNumber = poNumber;
  }


  public QuoteDto procDate(OffsetDateTime procDate) {
    this.procDate = procDate;
    return this;
  }

  /**
   * Get procDate
   * @return procDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getProcDate() {
    return procDate;
  }

  public void setProcDate(OffsetDateTime procDate) {
    this.procDate = procDate;
  }


  public QuoteDto productTrans(List<QuoteProductTransDto> productTrans) {
    this.productTrans = productTrans;
    return this;
  }

  public QuoteDto addProductTransItem(QuoteProductTransDto productTransItem) {
    if (this.productTrans == null) {
      this.productTrans = new ArrayList<>();
    }
    this.productTrans.add(productTransItem);
    return this;
  }

  /**
   * Get productTrans
   * @return productTrans
   */
  @javax.annotation.Nullable
  public List<QuoteProductTransDto> getProductTrans() {
    return productTrans;
  }

  public void setProductTrans(List<QuoteProductTransDto> productTrans) {
    this.productTrans = productTrans;
  }


  public QuoteDto reference(String reference) {
    this.reference = reference;
    return this;
  }

  /**
   * Get reference
   * @return reference
   */
  @javax.annotation.Nullable
  public String getReference() {
    return reference;
  }

  public void setReference(String reference) {
    this.reference = reference;
  }


  public QuoteDto saleInvoiceId(Long saleInvoiceId) {
    this.saleInvoiceId = saleInvoiceId;
    return this;
  }

  /**
   * Get saleInvoiceId
   * @return saleInvoiceId
   */
  @javax.annotation.Nullable
  public Long getSaleInvoiceId() {
    return saleInvoiceId;
  }

  public void setSaleInvoiceId(Long saleInvoiceId) {
    this.saleInvoiceId = saleInvoiceId;
  }


  public QuoteDto saleRepCode(String saleRepCode) {
    this.saleRepCode = saleRepCode;
    return this;
  }

  /**
   * Get saleRepCode
   * @return saleRepCode
   */
  @javax.annotation.Nullable
  public String getSaleRepCode() {
    return saleRepCode;
  }

  public void setSaleRepCode(String saleRepCode) {
    this.saleRepCode = saleRepCode;
  }


  public QuoteDto saleRepId(Long saleRepId) {
    this.saleRepId = saleRepId;
    return this;
  }

  /**
   * Get saleRepId
   * @return saleRepId
   */
  @javax.annotation.Nullable
  public Long getSaleRepId() {
    return saleRepId;
  }

  public void setSaleRepId(Long saleRepId) {
    this.saleRepId = saleRepId;
  }


  public QuoteDto timeStamp(byte[] timeStamp) {
    this.timeStamp = timeStamp;
    return this;
  }

  /**
   * Get timeStamp
   * @return timeStamp
   */
  @javax.annotation.Nullable
  public byte[] getTimeStamp() {
    return timeStamp;
  }

  public void setTimeStamp(byte[] timeStamp) {
    this.timeStamp = timeStamp;
  }


  public QuoteDto total(Double total) {
    this.total = total;
    return this;
  }

  /**
   * Get total
   * @return total
   */
  @javax.annotation.Nullable
  public Double getTotal() {
    return total;
  }

  public void setTotal(Double total) {
    this.total = total;
  }


  public QuoteDto totalNet(Double totalNet) {
    this.totalNet = totalNet;
    return this;
  }

  /**
   * Get totalNet
   * @return totalNet
   */
  @javax.annotation.Nullable
  public Double getTotalNet() {
    return totalNet;
  }

  public void setTotalNet(Double totalNet) {
    this.totalNet = totalNet;
  }


  public QuoteDto totalVat(Double totalVat) {
    this.totalVat = totalVat;
    return this;
  }

  /**
   * Get totalVat
   * @return totalVat
   */
  @javax.annotation.Nullable
  public Double getTotalVat() {
    return totalVat;
  }

  public void setTotalVat(Double totalVat) {
    this.totalVat = totalVat;
  }


  public QuoteDto vatTypeId(Long vatTypeId) {
    this.vatTypeId = vatTypeId;
    return this;
  }

  /**
   * Get vatTypeId
   * @return vatTypeId
   */
  @javax.annotation.Nullable
  public Long getVatTypeId() {
    return vatTypeId;
  }

  public void setVatTypeId(Long vatTypeId) {
    this.vatTypeId = vatTypeId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuoteDto quoteDto = (QuoteDto) o;
    return Objects.equals(this.acCode, quoteDto.acCode) &&
        Objects.equals(this.closedDate, quoteDto.closedDate) &&
        Objects.equals(this.comments, quoteDto.comments) &&
        Objects.equals(this.companyId, quoteDto.companyId) &&
        Objects.equals(this.customFields, quoteDto.customFields) &&
        Objects.equals(this.customerOwnerId, quoteDto.customerOwnerId) &&
        Objects.equals(this.customerOwnerName, quoteDto.customerOwnerName) &&
        Objects.equals(this.ddNumber, quoteDto.ddNumber) &&
        Objects.equals(this.deliveryList, quoteDto.deliveryList) &&
        Objects.equals(this.deliveryTo, quoteDto.deliveryTo) &&
        Objects.equals(this.entryDate, quoteDto.entryDate) &&
        Objects.equals(this.id, quoteDto.id) &&
        Objects.equals(this.layoutType, quoteDto.layoutType) &&
        Objects.equals(this.note, quoteDto.note) &&
        Objects.equals(this.poNumber, quoteDto.poNumber) &&
        Objects.equals(this.procDate, quoteDto.procDate) &&
        Objects.equals(this.productTrans, quoteDto.productTrans) &&
        Objects.equals(this.reference, quoteDto.reference) &&
        Objects.equals(this.saleInvoiceId, quoteDto.saleInvoiceId) &&
        Objects.equals(this.saleRepCode, quoteDto.saleRepCode) &&
        Objects.equals(this.saleRepId, quoteDto.saleRepId) &&
        Arrays.equals(this.timeStamp, quoteDto.timeStamp) &&
        Objects.equals(this.total, quoteDto.total) &&
        Objects.equals(this.totalNet, quoteDto.totalNet) &&
        Objects.equals(this.totalVat, quoteDto.totalVat) &&
        Objects.equals(this.vatTypeId, quoteDto.vatTypeId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acCode, closedDate, comments, companyId, customFields, customerOwnerId, customerOwnerName, ddNumber, deliveryList, deliveryTo, entryDate, id, layoutType, note, poNumber, procDate, productTrans, reference, saleInvoiceId, saleRepCode, saleRepId, Arrays.hashCode(timeStamp), total, totalNet, totalVat, vatTypeId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuoteDto {\n");
    sb.append("    acCode: ").append(toIndentedString(acCode)).append("\n");
    sb.append("    closedDate: ").append(toIndentedString(closedDate)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    customerOwnerId: ").append(toIndentedString(customerOwnerId)).append("\n");
    sb.append("    customerOwnerName: ").append(toIndentedString(customerOwnerName)).append("\n");
    sb.append("    ddNumber: ").append(toIndentedString(ddNumber)).append("\n");
    sb.append("    deliveryList: ").append(toIndentedString(deliveryList)).append("\n");
    sb.append("    deliveryTo: ").append(toIndentedString(deliveryTo)).append("\n");
    sb.append("    entryDate: ").append(toIndentedString(entryDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    layoutType: ").append(toIndentedString(layoutType)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    poNumber: ").append(toIndentedString(poNumber)).append("\n");
    sb.append("    procDate: ").append(toIndentedString(procDate)).append("\n");
    sb.append("    productTrans: ").append(toIndentedString(productTrans)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    saleInvoiceId: ").append(toIndentedString(saleInvoiceId)).append("\n");
    sb.append("    saleRepCode: ").append(toIndentedString(saleRepCode)).append("\n");
    sb.append("    saleRepId: ").append(toIndentedString(saleRepId)).append("\n");
    sb.append("    timeStamp: ").append(toIndentedString(timeStamp)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    totalNet: ").append(toIndentedString(totalNet)).append("\n");
    sb.append("    totalVat: ").append(toIndentedString(totalVat)).append("\n");
    sb.append("    vatTypeId: ").append(toIndentedString(vatTypeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("acCode");
    openapiFields.add("closedDate");
    openapiFields.add("comments");
    openapiFields.add("companyId");
    openapiFields.add("customFields");
    openapiFields.add("customerOwnerId");
    openapiFields.add("customerOwnerName");
    openapiFields.add("ddNumber");
    openapiFields.add("deliveryList");
    openapiFields.add("deliveryTo");
    openapiFields.add("entryDate");
    openapiFields.add("id");
    openapiFields.add("layoutType");
    openapiFields.add("note");
    openapiFields.add("poNumber");
    openapiFields.add("procDate");
    openapiFields.add("productTrans");
    openapiFields.add("reference");
    openapiFields.add("saleInvoiceId");
    openapiFields.add("saleRepCode");
    openapiFields.add("saleRepId");
    openapiFields.add("timeStamp");
    openapiFields.add("total");
    openapiFields.add("totalNet");
    openapiFields.add("totalVat");
    openapiFields.add("vatTypeId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to QuoteDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!QuoteDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in QuoteDto is not found in the empty JSON string", QuoteDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!QuoteDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `QuoteDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("acCode") != null && !jsonObj.get("acCode").isJsonNull()) && !jsonObj.get("acCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `acCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("acCode").toString()));
      }
      if ((jsonObj.get("comments") != null && !jsonObj.get("comments").isJsonNull()) && !jsonObj.get("comments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comments").toString()));
      }
      if (jsonObj.get("customFields") != null && !jsonObj.get("customFields").isJsonNull()) {
        JsonArray jsonArraycustomFields = jsonObj.getAsJsonArray("customFields");
        if (jsonArraycustomFields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customFields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customFields` to be an array in the JSON string but got `%s`", jsonObj.get("customFields").toString()));
          }

          // validate the optional field `customFields` (array)
          for (int i = 0; i < jsonArraycustomFields.size(); i++) {
            AcudfValueDto.validateJsonElement(jsonArraycustomFields.get(i));
          };
        }
      }
      if ((jsonObj.get("customerOwnerName") != null && !jsonObj.get("customerOwnerName").isJsonNull()) && !jsonObj.get("customerOwnerName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerOwnerName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerOwnerName").toString()));
      }
      if ((jsonObj.get("ddNumber") != null && !jsonObj.get("ddNumber").isJsonNull()) && !jsonObj.get("ddNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ddNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ddNumber").toString()));
      }
      if ((jsonObj.get("deliveryList") != null && !jsonObj.get("deliveryList").isJsonNull()) && !jsonObj.get("deliveryList").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deliveryList` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deliveryList").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("deliveryTo") != null && !jsonObj.get("deliveryTo").isJsonNull() && !jsonObj.get("deliveryTo").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `deliveryTo` to be an array in the JSON string but got `%s`", jsonObj.get("deliveryTo").toString()));
      }
      if ((jsonObj.get("note") != null && !jsonObj.get("note").isJsonNull()) && !jsonObj.get("note").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `note` to be a primitive type in the JSON string but got `%s`", jsonObj.get("note").toString()));
      }
      if ((jsonObj.get("poNumber") != null && !jsonObj.get("poNumber").isJsonNull()) && !jsonObj.get("poNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `poNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("poNumber").toString()));
      }
      if (jsonObj.get("productTrans") != null && !jsonObj.get("productTrans").isJsonNull()) {
        JsonArray jsonArrayproductTrans = jsonObj.getAsJsonArray("productTrans");
        if (jsonArrayproductTrans != null) {
          // ensure the json data is an array
          if (!jsonObj.get("productTrans").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `productTrans` to be an array in the JSON string but got `%s`", jsonObj.get("productTrans").toString()));
          }

          // validate the optional field `productTrans` (array)
          for (int i = 0; i < jsonArrayproductTrans.size(); i++) {
            QuoteProductTransDto.validateJsonElement(jsonArrayproductTrans.get(i));
          };
        }
      }
      if ((jsonObj.get("reference") != null && !jsonObj.get("reference").isJsonNull()) && !jsonObj.get("reference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reference").toString()));
      }
      if ((jsonObj.get("saleRepCode") != null && !jsonObj.get("saleRepCode").isJsonNull()) && !jsonObj.get("saleRepCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `saleRepCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("saleRepCode").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!QuoteDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'QuoteDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<QuoteDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(QuoteDto.class));

       return (TypeAdapter<T>) new TypeAdapter<QuoteDto>() {
           @Override
           public void write(JsonWriter out, QuoteDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public QuoteDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of QuoteDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of QuoteDto
   * @throws IOException if the JSON string is invalid with respect to QuoteDto
   */
  public static QuoteDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, QuoteDto.class);
  }

  /**
   * Convert an instance of QuoteDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

