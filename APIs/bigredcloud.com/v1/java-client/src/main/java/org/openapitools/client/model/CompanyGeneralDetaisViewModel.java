/*
 * Big Red Cloud API
 *   <div style='line-height: 30px;'>      <strong>Welcome to the Big Red Cloud API</strong><br/>      This API enables programmatic access to Big Red Cloud data.<br/>      We have used Swagger to auto generate the API documentation on this page, and it also enables direct interaction with the API in this page. <br/>      To get started, you will require an API Key - check out our guide at <a target='_blank' href='https://www.bigredcloud.com/support/generating-api-key-guide/'>https://www.bigredcloud.com/support/generating-api-key-guide/</a> for information on how to get one. <br/>      Use the  'Enter API Key' button below to enter your API key and start interacting with your Big Red Cloud data right on this page. <br/>      The API key will be stored in your browsers local storage for convenience, but you will be able to delete it at any time if you wish. <br/>      For additional information on the API, check out our support article at <a target='_blank' href='https://www.bigredcloud.com/support/api/'>https://www.bigredcloud.com/support/api/</a><br/>  </div>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CompanyGeneralDetaisViewModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:00:05.666566-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CompanyGeneralDetaisViewModel {
  public static final String SERIALIZED_NAME_COMPANY_ADDRESSES = "companyAddresses";
  @SerializedName(SERIALIZED_NAME_COMPANY_ADDRESSES)
  private List<String> companyAddresses = new ArrayList<>();

  public static final String SERIALIZED_NAME_COMPANY_NAME = "companyName";
  @SerializedName(SERIALIZED_NAME_COMPANY_NAME)
  private String companyName;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_CURRENCY_DESCRIPTION = "currencyDescription";
  @SerializedName(SERIALIZED_NAME_CURRENCY_DESCRIPTION)
  private String currencyDescription;

  public static final String SERIALIZED_NAME_CURRENCY_ID = "currencyId";
  @SerializedName(SERIALIZED_NAME_CURRENCY_ID)
  private Long currencyId;

  public static final String SERIALIZED_NAME_CURRENTCY_SYMBOL = "currentcySymbol";
  @SerializedName(SERIALIZED_NAME_CURRENTCY_SYMBOL)
  private String currentcySymbol;

  public static final String SERIALIZED_NAME_EMAILS = "emails";
  @SerializedName(SERIALIZED_NAME_EMAILS)
  private List<String> emails = new ArrayList<>();

  public static final String SERIALIZED_NAME_FAXES = "faxes";
  @SerializedName(SERIALIZED_NAME_FAXES)
  private List<String> faxes = new ArrayList<>();

  public static final String SERIALIZED_NAME_PHONES = "phones";
  @SerializedName(SERIALIZED_NAME_PHONES)
  private List<String> phones = new ArrayList<>();

  public static final String SERIALIZED_NAME_REGION_DESCRIPTION = "regionDescription";
  @SerializedName(SERIALIZED_NAME_REGION_DESCRIPTION)
  private String regionDescription;

  public static final String SERIALIZED_NAME_REGION_ID = "regionId";
  @SerializedName(SERIALIZED_NAME_REGION_ID)
  private Long regionId;

  public static final String SERIALIZED_NAME_VAT_REG = "vatReg";
  @SerializedName(SERIALIZED_NAME_VAT_REG)
  private String vatReg;

  public CompanyGeneralDetaisViewModel() {
  }

  public CompanyGeneralDetaisViewModel companyAddresses(List<String> companyAddresses) {
    this.companyAddresses = companyAddresses;
    return this;
  }

  public CompanyGeneralDetaisViewModel addCompanyAddressesItem(String companyAddressesItem) {
    if (this.companyAddresses == null) {
      this.companyAddresses = new ArrayList<>();
    }
    this.companyAddresses.add(companyAddressesItem);
    return this;
  }

  /**
   * Get companyAddresses
   * @return companyAddresses
   */
  @javax.annotation.Nullable
  public List<String> getCompanyAddresses() {
    return companyAddresses;
  }

  public void setCompanyAddresses(List<String> companyAddresses) {
    this.companyAddresses = companyAddresses;
  }


  public CompanyGeneralDetaisViewModel companyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

  /**
   * Get companyName
   * @return companyName
   */
  @javax.annotation.Nullable
  public String getCompanyName() {
    return companyName;
  }

  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }


  public CompanyGeneralDetaisViewModel currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

  /**
   * Get currencyCode
   * @return currencyCode
   */
  @javax.annotation.Nullable
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public CompanyGeneralDetaisViewModel currencyDescription(String currencyDescription) {
    this.currencyDescription = currencyDescription;
    return this;
  }

  /**
   * Get currencyDescription
   * @return currencyDescription
   */
  @javax.annotation.Nullable
  public String getCurrencyDescription() {
    return currencyDescription;
  }

  public void setCurrencyDescription(String currencyDescription) {
    this.currencyDescription = currencyDescription;
  }


  public CompanyGeneralDetaisViewModel currencyId(Long currencyId) {
    this.currencyId = currencyId;
    return this;
  }

  /**
   * Get currencyId
   * @return currencyId
   */
  @javax.annotation.Nullable
  public Long getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(Long currencyId) {
    this.currencyId = currencyId;
  }


  public CompanyGeneralDetaisViewModel currentcySymbol(String currentcySymbol) {
    this.currentcySymbol = currentcySymbol;
    return this;
  }

  /**
   * Get currentcySymbol
   * @return currentcySymbol
   */
  @javax.annotation.Nullable
  public String getCurrentcySymbol() {
    return currentcySymbol;
  }

  public void setCurrentcySymbol(String currentcySymbol) {
    this.currentcySymbol = currentcySymbol;
  }


  public CompanyGeneralDetaisViewModel emails(List<String> emails) {
    this.emails = emails;
    return this;
  }

  public CompanyGeneralDetaisViewModel addEmailsItem(String emailsItem) {
    if (this.emails == null) {
      this.emails = new ArrayList<>();
    }
    this.emails.add(emailsItem);
    return this;
  }

  /**
   * Get emails
   * @return emails
   */
  @javax.annotation.Nullable
  public List<String> getEmails() {
    return emails;
  }

  public void setEmails(List<String> emails) {
    this.emails = emails;
  }


  public CompanyGeneralDetaisViewModel faxes(List<String> faxes) {
    this.faxes = faxes;
    return this;
  }

  public CompanyGeneralDetaisViewModel addFaxesItem(String faxesItem) {
    if (this.faxes == null) {
      this.faxes = new ArrayList<>();
    }
    this.faxes.add(faxesItem);
    return this;
  }

  /**
   * Get faxes
   * @return faxes
   */
  @javax.annotation.Nullable
  public List<String> getFaxes() {
    return faxes;
  }

  public void setFaxes(List<String> faxes) {
    this.faxes = faxes;
  }


  public CompanyGeneralDetaisViewModel phones(List<String> phones) {
    this.phones = phones;
    return this;
  }

  public CompanyGeneralDetaisViewModel addPhonesItem(String phonesItem) {
    if (this.phones == null) {
      this.phones = new ArrayList<>();
    }
    this.phones.add(phonesItem);
    return this;
  }

  /**
   * Get phones
   * @return phones
   */
  @javax.annotation.Nullable
  public List<String> getPhones() {
    return phones;
  }

  public void setPhones(List<String> phones) {
    this.phones = phones;
  }


  public CompanyGeneralDetaisViewModel regionDescription(String regionDescription) {
    this.regionDescription = regionDescription;
    return this;
  }

  /**
   * Get regionDescription
   * @return regionDescription
   */
  @javax.annotation.Nullable
  public String getRegionDescription() {
    return regionDescription;
  }

  public void setRegionDescription(String regionDescription) {
    this.regionDescription = regionDescription;
  }


  public CompanyGeneralDetaisViewModel regionId(Long regionId) {
    this.regionId = regionId;
    return this;
  }

  /**
   * Get regionId
   * @return regionId
   */
  @javax.annotation.Nullable
  public Long getRegionId() {
    return regionId;
  }

  public void setRegionId(Long regionId) {
    this.regionId = regionId;
  }


  public CompanyGeneralDetaisViewModel vatReg(String vatReg) {
    this.vatReg = vatReg;
    return this;
  }

  /**
   * Get vatReg
   * @return vatReg
   */
  @javax.annotation.Nullable
  public String getVatReg() {
    return vatReg;
  }

  public void setVatReg(String vatReg) {
    this.vatReg = vatReg;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompanyGeneralDetaisViewModel companyGeneralDetaisViewModel = (CompanyGeneralDetaisViewModel) o;
    return Objects.equals(this.companyAddresses, companyGeneralDetaisViewModel.companyAddresses) &&
        Objects.equals(this.companyName, companyGeneralDetaisViewModel.companyName) &&
        Objects.equals(this.currencyCode, companyGeneralDetaisViewModel.currencyCode) &&
        Objects.equals(this.currencyDescription, companyGeneralDetaisViewModel.currencyDescription) &&
        Objects.equals(this.currencyId, companyGeneralDetaisViewModel.currencyId) &&
        Objects.equals(this.currentcySymbol, companyGeneralDetaisViewModel.currentcySymbol) &&
        Objects.equals(this.emails, companyGeneralDetaisViewModel.emails) &&
        Objects.equals(this.faxes, companyGeneralDetaisViewModel.faxes) &&
        Objects.equals(this.phones, companyGeneralDetaisViewModel.phones) &&
        Objects.equals(this.regionDescription, companyGeneralDetaisViewModel.regionDescription) &&
        Objects.equals(this.regionId, companyGeneralDetaisViewModel.regionId) &&
        Objects.equals(this.vatReg, companyGeneralDetaisViewModel.vatReg);
  }

  @Override
  public int hashCode() {
    return Objects.hash(companyAddresses, companyName, currencyCode, currencyDescription, currencyId, currentcySymbol, emails, faxes, phones, regionDescription, regionId, vatReg);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompanyGeneralDetaisViewModel {\n");
    sb.append("    companyAddresses: ").append(toIndentedString(companyAddresses)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    currencyDescription: ").append(toIndentedString(currencyDescription)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    currentcySymbol: ").append(toIndentedString(currentcySymbol)).append("\n");
    sb.append("    emails: ").append(toIndentedString(emails)).append("\n");
    sb.append("    faxes: ").append(toIndentedString(faxes)).append("\n");
    sb.append("    phones: ").append(toIndentedString(phones)).append("\n");
    sb.append("    regionDescription: ").append(toIndentedString(regionDescription)).append("\n");
    sb.append("    regionId: ").append(toIndentedString(regionId)).append("\n");
    sb.append("    vatReg: ").append(toIndentedString(vatReg)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("companyAddresses");
    openapiFields.add("companyName");
    openapiFields.add("currencyCode");
    openapiFields.add("currencyDescription");
    openapiFields.add("currencyId");
    openapiFields.add("currentcySymbol");
    openapiFields.add("emails");
    openapiFields.add("faxes");
    openapiFields.add("phones");
    openapiFields.add("regionDescription");
    openapiFields.add("regionId");
    openapiFields.add("vatReg");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CompanyGeneralDetaisViewModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CompanyGeneralDetaisViewModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CompanyGeneralDetaisViewModel is not found in the empty JSON string", CompanyGeneralDetaisViewModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CompanyGeneralDetaisViewModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CompanyGeneralDetaisViewModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("companyAddresses") != null && !jsonObj.get("companyAddresses").isJsonNull() && !jsonObj.get("companyAddresses").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyAddresses` to be an array in the JSON string but got `%s`", jsonObj.get("companyAddresses").toString()));
      }
      if ((jsonObj.get("companyName") != null && !jsonObj.get("companyName").isJsonNull()) && !jsonObj.get("companyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyName").toString()));
      }
      if ((jsonObj.get("currencyCode") != null && !jsonObj.get("currencyCode").isJsonNull()) && !jsonObj.get("currencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyCode").toString()));
      }
      if ((jsonObj.get("currencyDescription") != null && !jsonObj.get("currencyDescription").isJsonNull()) && !jsonObj.get("currencyDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyDescription").toString()));
      }
      if ((jsonObj.get("currentcySymbol") != null && !jsonObj.get("currentcySymbol").isJsonNull()) && !jsonObj.get("currentcySymbol").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currentcySymbol` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currentcySymbol").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("emails") != null && !jsonObj.get("emails").isJsonNull() && !jsonObj.get("emails").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `emails` to be an array in the JSON string but got `%s`", jsonObj.get("emails").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("faxes") != null && !jsonObj.get("faxes").isJsonNull() && !jsonObj.get("faxes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `faxes` to be an array in the JSON string but got `%s`", jsonObj.get("faxes").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("phones") != null && !jsonObj.get("phones").isJsonNull() && !jsonObj.get("phones").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `phones` to be an array in the JSON string but got `%s`", jsonObj.get("phones").toString()));
      }
      if ((jsonObj.get("regionDescription") != null && !jsonObj.get("regionDescription").isJsonNull()) && !jsonObj.get("regionDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `regionDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("regionDescription").toString()));
      }
      if ((jsonObj.get("vatReg") != null && !jsonObj.get("vatReg").isJsonNull()) && !jsonObj.get("vatReg").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vatReg` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vatReg").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CompanyGeneralDetaisViewModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CompanyGeneralDetaisViewModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CompanyGeneralDetaisViewModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CompanyGeneralDetaisViewModel.class));

       return (TypeAdapter<T>) new TypeAdapter<CompanyGeneralDetaisViewModel>() {
           @Override
           public void write(JsonWriter out, CompanyGeneralDetaisViewModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CompanyGeneralDetaisViewModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CompanyGeneralDetaisViewModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CompanyGeneralDetaisViewModel
   * @throws IOException if the JSON string is invalid with respect to CompanyGeneralDetaisViewModel
   */
  public static CompanyGeneralDetaisViewModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CompanyGeneralDetaisViewModel.class);
  }

  /**
   * Convert an instance of CompanyGeneralDetaisViewModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

