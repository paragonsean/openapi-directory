/*
 * Big Red Cloud API
 *   <div style='line-height: 30px;'>      <strong>Welcome to the Big Red Cloud API</strong><br/>      This API enables programmatic access to Big Red Cloud data.<br/>      We have used Swagger to auto generate the API documentation on this page, and it also enables direct interaction with the API in this page. <br/>      To get started, you will require an API Key - check out our guide at <a target='_blank' href='https://www.bigredcloud.com/support/generating-api-key-guide/'>https://www.bigredcloud.com/support/generating-api-key-guide/</a> for information on how to get one. <br/>      Use the  'Enter API Key' button below to enter your API key and start interacting with your Big Red Cloud data right on this page. <br/>      The API key will be stored in your browsers local storage for convenience, but you will be able to delete it at any time if you wish. <br/>      For additional information on the API, check out our support article at <a target='_blank' href='https://www.bigredcloud.com/support/api/'>https://www.bigredcloud.com/support/api/</a><br/>  </div>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AccountTranDto;
import org.openapitools.client.model.BatchItemSupplierDto;
import org.openapitools.client.model.OwnerOpeningBalanceDto;
import org.openapitools.client.model.OwnerOpeningBalanceInPeriodsDto;
import org.openapitools.client.model.PageResultSupplierQueryDto;
import org.openapitools.client.model.SupplierDto;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SuppliersApi
 */
@Disabled
public class SuppliersApiTest {

    private final SuppliersApi api = new SuppliersApi();

    /**
     * Removes an existing Supplier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void suppliersDeleteTest() throws ApiException {
        Long id = null;
        String timestamp = null;
        Object response = api.suppliersDelete(id, timestamp);
        // TODO: test validations
    }

    /**
     * Returns a list of company&#39;s Suppliers. Supports OData querying protocol.  Filtering is forbidden.  Ordering is allowed by \&quot;id\&quot; and \&quot;code\&quot; fields.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void suppliersGetTest() throws ApiException {
        PageResultSupplierQueryDto response = api.suppliersGet();
        // TODO: test validations
    }

    /**
     * Returns a list of Supplier&#39;s account transactions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void suppliersGetAccountTransTest() throws ApiException {
        Long itemId = null;
        List<AccountTranDto> response = api.suppliersGetAccountTrans(itemId);
        // TODO: test validations
    }

    /**
     * Returns a Supplier&#39;s opening balances, calculated for the next periods: current month, one month old, two months old, three and more months old.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void suppliersGetOpeningBalanceTest() throws ApiException {
        Long itemId = null;
        OwnerOpeningBalanceInPeriodsDto response = api.suppliersGetOpeningBalance(itemId);
        // TODO: test validations
    }

    /**
     * Returns a list of Supplier&#39;s opening balance transactions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void suppliersGetOpeningBalanceListTest() throws ApiException {
        Long itemId = null;
        List<OwnerOpeningBalanceDto> response = api.suppliersGetOpeningBalanceList(itemId);
        // TODO: test validations
    }

    /**
     * Creates a new Supplier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void suppliersPostTest() throws ApiException {
        SupplierDto supplierDto = null;
        Object response = api.suppliersPost(supplierDto);
        // TODO: test validations
    }

    /**
     * Processes a batch of Suppliers.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void suppliersProcessBatchTest() throws ApiException {
        List<BatchItemSupplierDto> batchItemSupplierDto = null;
        Object response = api.suppliersProcessBatch(batchItemSupplierDto);
        // TODO: test validations
    }

    /**
     * Updates an existing Supplier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void suppliersPutTest() throws ApiException {
        Long id = null;
        SupplierDto supplierDto = null;
        Object response = api.suppliersPut(id, supplierDto);
        // TODO: test validations
    }

    /**
     * Returns information about a single Supplier. You may specify that Supplier&#39;s ledger balance should be calculated.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1SuppliersIdGetTest() throws ApiException {
        Long id = null;
        Boolean needBalance = null;
        SupplierDto response = api.v1SuppliersIdGet(id, needBalance);
        // TODO: test validations
    }

}
