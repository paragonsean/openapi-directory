/**
 * Big Red Cloud API
 *   <div style='line-height: 30px;'>      <strong>Welcome to the Big Red Cloud API</strong><br/>      This API enables programmatic access to Big Red Cloud data.<br/>      We have used Swagger to auto generate the API documentation on this page, and it also enables direct interaction with the API in this page. <br/>      To get started, you will require an API Key - check out our guide at <a target='_blank' href='https://www.bigredcloud.com/support/generating-api-key-guide/'>https://www.bigredcloud.com/support/generating-api-key-guide/</a> for information on how to get one. <br/>      Use the  'Enter API Key' button below to enter your API key and start interacting with your Big Red Cloud data right on this page. <br/>      The API key will be stored in your browsers local storage for convenience, but you will be able to delete it at any time if you wish. <br/>      For additional information on the API, check out our support article at <a target='_blank' href='https://www.bigredcloud.com/support/api/'>https://www.bigredcloud.com/support/api/</a><br/>  </div>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICompanyGeneralDetaisViewModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICompanyGeneralDetaisViewModel::OAICompanyGeneralDetaisViewModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICompanyGeneralDetaisViewModel::OAICompanyGeneralDetaisViewModel() {
    this->initializeModel();
}

OAICompanyGeneralDetaisViewModel::~OAICompanyGeneralDetaisViewModel() {}

void OAICompanyGeneralDetaisViewModel::initializeModel() {

    m_company_addresses_isSet = false;
    m_company_addresses_isValid = false;

    m_company_name_isSet = false;
    m_company_name_isValid = false;

    m_currency_code_isSet = false;
    m_currency_code_isValid = false;

    m_currency_description_isSet = false;
    m_currency_description_isValid = false;

    m_currency_id_isSet = false;
    m_currency_id_isValid = false;

    m_currentcy_symbol_isSet = false;
    m_currentcy_symbol_isValid = false;

    m_emails_isSet = false;
    m_emails_isValid = false;

    m_faxes_isSet = false;
    m_faxes_isValid = false;

    m_phones_isSet = false;
    m_phones_isValid = false;

    m_region_description_isSet = false;
    m_region_description_isValid = false;

    m_region_id_isSet = false;
    m_region_id_isValid = false;

    m_vat_reg_isSet = false;
    m_vat_reg_isValid = false;
}

void OAICompanyGeneralDetaisViewModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICompanyGeneralDetaisViewModel::fromJsonObject(QJsonObject json) {

    m_company_addresses_isValid = ::OpenAPI::fromJsonValue(m_company_addresses, json[QString("companyAddresses")]);
    m_company_addresses_isSet = !json[QString("companyAddresses")].isNull() && m_company_addresses_isValid;

    m_company_name_isValid = ::OpenAPI::fromJsonValue(m_company_name, json[QString("companyName")]);
    m_company_name_isSet = !json[QString("companyName")].isNull() && m_company_name_isValid;

    m_currency_code_isValid = ::OpenAPI::fromJsonValue(m_currency_code, json[QString("currencyCode")]);
    m_currency_code_isSet = !json[QString("currencyCode")].isNull() && m_currency_code_isValid;

    m_currency_description_isValid = ::OpenAPI::fromJsonValue(m_currency_description, json[QString("currencyDescription")]);
    m_currency_description_isSet = !json[QString("currencyDescription")].isNull() && m_currency_description_isValid;

    m_currency_id_isValid = ::OpenAPI::fromJsonValue(m_currency_id, json[QString("currencyId")]);
    m_currency_id_isSet = !json[QString("currencyId")].isNull() && m_currency_id_isValid;

    m_currentcy_symbol_isValid = ::OpenAPI::fromJsonValue(m_currentcy_symbol, json[QString("currentcySymbol")]);
    m_currentcy_symbol_isSet = !json[QString("currentcySymbol")].isNull() && m_currentcy_symbol_isValid;

    m_emails_isValid = ::OpenAPI::fromJsonValue(m_emails, json[QString("emails")]);
    m_emails_isSet = !json[QString("emails")].isNull() && m_emails_isValid;

    m_faxes_isValid = ::OpenAPI::fromJsonValue(m_faxes, json[QString("faxes")]);
    m_faxes_isSet = !json[QString("faxes")].isNull() && m_faxes_isValid;

    m_phones_isValid = ::OpenAPI::fromJsonValue(m_phones, json[QString("phones")]);
    m_phones_isSet = !json[QString("phones")].isNull() && m_phones_isValid;

    m_region_description_isValid = ::OpenAPI::fromJsonValue(m_region_description, json[QString("regionDescription")]);
    m_region_description_isSet = !json[QString("regionDescription")].isNull() && m_region_description_isValid;

    m_region_id_isValid = ::OpenAPI::fromJsonValue(m_region_id, json[QString("regionId")]);
    m_region_id_isSet = !json[QString("regionId")].isNull() && m_region_id_isValid;

    m_vat_reg_isValid = ::OpenAPI::fromJsonValue(m_vat_reg, json[QString("vatReg")]);
    m_vat_reg_isSet = !json[QString("vatReg")].isNull() && m_vat_reg_isValid;
}

QString OAICompanyGeneralDetaisViewModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICompanyGeneralDetaisViewModel::asJsonObject() const {
    QJsonObject obj;
    if (m_company_addresses.size() > 0) {
        obj.insert(QString("companyAddresses"), ::OpenAPI::toJsonValue(m_company_addresses));
    }
    if (m_company_name_isSet) {
        obj.insert(QString("companyName"), ::OpenAPI::toJsonValue(m_company_name));
    }
    if (m_currency_code_isSet) {
        obj.insert(QString("currencyCode"), ::OpenAPI::toJsonValue(m_currency_code));
    }
    if (m_currency_description_isSet) {
        obj.insert(QString("currencyDescription"), ::OpenAPI::toJsonValue(m_currency_description));
    }
    if (m_currency_id_isSet) {
        obj.insert(QString("currencyId"), ::OpenAPI::toJsonValue(m_currency_id));
    }
    if (m_currentcy_symbol_isSet) {
        obj.insert(QString("currentcySymbol"), ::OpenAPI::toJsonValue(m_currentcy_symbol));
    }
    if (m_emails.size() > 0) {
        obj.insert(QString("emails"), ::OpenAPI::toJsonValue(m_emails));
    }
    if (m_faxes.size() > 0) {
        obj.insert(QString("faxes"), ::OpenAPI::toJsonValue(m_faxes));
    }
    if (m_phones.size() > 0) {
        obj.insert(QString("phones"), ::OpenAPI::toJsonValue(m_phones));
    }
    if (m_region_description_isSet) {
        obj.insert(QString("regionDescription"), ::OpenAPI::toJsonValue(m_region_description));
    }
    if (m_region_id_isSet) {
        obj.insert(QString("regionId"), ::OpenAPI::toJsonValue(m_region_id));
    }
    if (m_vat_reg_isSet) {
        obj.insert(QString("vatReg"), ::OpenAPI::toJsonValue(m_vat_reg));
    }
    return obj;
}

QList<QString> OAICompanyGeneralDetaisViewModel::getCompanyAddresses() const {
    return m_company_addresses;
}
void OAICompanyGeneralDetaisViewModel::setCompanyAddresses(const QList<QString> &company_addresses) {
    m_company_addresses = company_addresses;
    m_company_addresses_isSet = true;
}

bool OAICompanyGeneralDetaisViewModel::is_company_addresses_Set() const{
    return m_company_addresses_isSet;
}

bool OAICompanyGeneralDetaisViewModel::is_company_addresses_Valid() const{
    return m_company_addresses_isValid;
}

QString OAICompanyGeneralDetaisViewModel::getCompanyName() const {
    return m_company_name;
}
void OAICompanyGeneralDetaisViewModel::setCompanyName(const QString &company_name) {
    m_company_name = company_name;
    m_company_name_isSet = true;
}

bool OAICompanyGeneralDetaisViewModel::is_company_name_Set() const{
    return m_company_name_isSet;
}

bool OAICompanyGeneralDetaisViewModel::is_company_name_Valid() const{
    return m_company_name_isValid;
}

QString OAICompanyGeneralDetaisViewModel::getCurrencyCode() const {
    return m_currency_code;
}
void OAICompanyGeneralDetaisViewModel::setCurrencyCode(const QString &currency_code) {
    m_currency_code = currency_code;
    m_currency_code_isSet = true;
}

bool OAICompanyGeneralDetaisViewModel::is_currency_code_Set() const{
    return m_currency_code_isSet;
}

bool OAICompanyGeneralDetaisViewModel::is_currency_code_Valid() const{
    return m_currency_code_isValid;
}

QString OAICompanyGeneralDetaisViewModel::getCurrencyDescription() const {
    return m_currency_description;
}
void OAICompanyGeneralDetaisViewModel::setCurrencyDescription(const QString &currency_description) {
    m_currency_description = currency_description;
    m_currency_description_isSet = true;
}

bool OAICompanyGeneralDetaisViewModel::is_currency_description_Set() const{
    return m_currency_description_isSet;
}

bool OAICompanyGeneralDetaisViewModel::is_currency_description_Valid() const{
    return m_currency_description_isValid;
}

qint64 OAICompanyGeneralDetaisViewModel::getCurrencyId() const {
    return m_currency_id;
}
void OAICompanyGeneralDetaisViewModel::setCurrencyId(const qint64 &currency_id) {
    m_currency_id = currency_id;
    m_currency_id_isSet = true;
}

bool OAICompanyGeneralDetaisViewModel::is_currency_id_Set() const{
    return m_currency_id_isSet;
}

bool OAICompanyGeneralDetaisViewModel::is_currency_id_Valid() const{
    return m_currency_id_isValid;
}

QString OAICompanyGeneralDetaisViewModel::getCurrentcySymbol() const {
    return m_currentcy_symbol;
}
void OAICompanyGeneralDetaisViewModel::setCurrentcySymbol(const QString &currentcy_symbol) {
    m_currentcy_symbol = currentcy_symbol;
    m_currentcy_symbol_isSet = true;
}

bool OAICompanyGeneralDetaisViewModel::is_currentcy_symbol_Set() const{
    return m_currentcy_symbol_isSet;
}

bool OAICompanyGeneralDetaisViewModel::is_currentcy_symbol_Valid() const{
    return m_currentcy_symbol_isValid;
}

QList<QString> OAICompanyGeneralDetaisViewModel::getEmails() const {
    return m_emails;
}
void OAICompanyGeneralDetaisViewModel::setEmails(const QList<QString> &emails) {
    m_emails = emails;
    m_emails_isSet = true;
}

bool OAICompanyGeneralDetaisViewModel::is_emails_Set() const{
    return m_emails_isSet;
}

bool OAICompanyGeneralDetaisViewModel::is_emails_Valid() const{
    return m_emails_isValid;
}

QList<QString> OAICompanyGeneralDetaisViewModel::getFaxes() const {
    return m_faxes;
}
void OAICompanyGeneralDetaisViewModel::setFaxes(const QList<QString> &faxes) {
    m_faxes = faxes;
    m_faxes_isSet = true;
}

bool OAICompanyGeneralDetaisViewModel::is_faxes_Set() const{
    return m_faxes_isSet;
}

bool OAICompanyGeneralDetaisViewModel::is_faxes_Valid() const{
    return m_faxes_isValid;
}

QList<QString> OAICompanyGeneralDetaisViewModel::getPhones() const {
    return m_phones;
}
void OAICompanyGeneralDetaisViewModel::setPhones(const QList<QString> &phones) {
    m_phones = phones;
    m_phones_isSet = true;
}

bool OAICompanyGeneralDetaisViewModel::is_phones_Set() const{
    return m_phones_isSet;
}

bool OAICompanyGeneralDetaisViewModel::is_phones_Valid() const{
    return m_phones_isValid;
}

QString OAICompanyGeneralDetaisViewModel::getRegionDescription() const {
    return m_region_description;
}
void OAICompanyGeneralDetaisViewModel::setRegionDescription(const QString &region_description) {
    m_region_description = region_description;
    m_region_description_isSet = true;
}

bool OAICompanyGeneralDetaisViewModel::is_region_description_Set() const{
    return m_region_description_isSet;
}

bool OAICompanyGeneralDetaisViewModel::is_region_description_Valid() const{
    return m_region_description_isValid;
}

qint64 OAICompanyGeneralDetaisViewModel::getRegionId() const {
    return m_region_id;
}
void OAICompanyGeneralDetaisViewModel::setRegionId(const qint64 &region_id) {
    m_region_id = region_id;
    m_region_id_isSet = true;
}

bool OAICompanyGeneralDetaisViewModel::is_region_id_Set() const{
    return m_region_id_isSet;
}

bool OAICompanyGeneralDetaisViewModel::is_region_id_Valid() const{
    return m_region_id_isValid;
}

QString OAICompanyGeneralDetaisViewModel::getVatReg() const {
    return m_vat_reg;
}
void OAICompanyGeneralDetaisViewModel::setVatReg(const QString &vat_reg) {
    m_vat_reg = vat_reg;
    m_vat_reg_isSet = true;
}

bool OAICompanyGeneralDetaisViewModel::is_vat_reg_Set() const{
    return m_vat_reg_isSet;
}

bool OAICompanyGeneralDetaisViewModel::is_vat_reg_Valid() const{
    return m_vat_reg_isValid;
}

bool OAICompanyGeneralDetaisViewModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_company_addresses.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currentcy_symbol_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_emails.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_faxes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_phones.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_region_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_region_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vat_reg_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICompanyGeneralDetaisViewModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
