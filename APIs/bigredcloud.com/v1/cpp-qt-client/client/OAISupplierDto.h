/**
 * Big Red Cloud API
 *   <div style='line-height: 30px;'>      <strong>Welcome to the Big Red Cloud API</strong><br/>      This API enables programmatic access to Big Red Cloud data.<br/>      We have used Swagger to auto generate the API documentation on this page, and it also enables direct interaction with the API in this page. <br/>      To get started, you will require an API Key - check out our guide at <a target='_blank' href='https://www.bigredcloud.com/support/generating-api-key-guide/'>https://www.bigredcloud.com/support/generating-api-key-guide/</a> for information on how to get one. <br/>      Use the  'Enter API Key' button below to enter your API key and start interacting with your Big Red Cloud data right on this page. <br/>      The API key will be stored in your browsers local storage for convenience, but you will be able to delete it at any time if you wish. <br/>      For additional information on the API, check out our support article at <a target='_blank' href='https://www.bigredcloud.com/support/api/'>https://www.bigredcloud.com/support/api/</a><br/>  </div>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISupplierDto.h
 *
 * 
 */

#ifndef OAISupplierDto_H
#define OAISupplierDto_H

#include <QJsonObject>

#include "OAIEFTBankDto.h"
#include "OAIOwnerOpeningBalanceDto.h"
#include "OAIOwnerOpeningBalanceInPeriodsDto.h"
#include <QByteArray>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEFTBankDto;
class OAIOwnerOpeningBalanceInPeriodsDto;
class OAIOwnerOpeningBalanceDto;

class OAISupplierDto : public OAIObject {
public:
    OAISupplierDto();
    OAISupplierDto(QString json);
    ~OAISupplierDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountName() const;
    void setAccountName(const QString &account_name);
    bool is_account_name_Set() const;
    bool is_account_name_Valid() const;

    QString getAccountNumber() const;
    void setAccountNumber(const QString &account_number);
    bool is_account_number_Set() const;
    bool is_account_number_Valid() const;

    QList<QString> getAdditionalEmails() const;
    void setAdditionalEmails(const QList<QString> &additional_emails);
    bool is_additional_emails_Set() const;
    bool is_additional_emails_Valid() const;

    QList<QString> getAddress() const;
    void setAddress(const QList<QString> &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QString getAuthCode() const;
    void setAuthCode(const QString &auth_code);
    bool is_auth_code_Set() const;
    bool is_auth_code_Valid() const;

    OAIEFTBankDto getBank() const;
    void setBank(const OAIEFTBankDto &bank);
    bool is_bank_Set() const;
    bool is_bank_Valid() const;

    QString getBusinessIdentifierCode() const;
    void setBusinessIdentifierCode(const QString &business_identifier_code);
    bool is_business_identifier_code_Set() const;
    bool is_business_identifier_code_Valid() const;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    QString getContact() const;
    void setContact(const QString &contact);
    bool is_contact_Set() const;
    bool is_contact_Valid() const;

    QString getEFtReference() const;
    void setEFtReference(const QString &e_ft_reference);
    bool is_e_ft_reference_Set() const;
    bool is_e_ft_reference_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getFax() const;
    void setFax(const QString &fax);
    bool is_fax_Set() const;
    bool is_fax_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInternationalBankAccountNumber() const;
    void setInternationalBankAccountNumber(const QString &international_bank_account_number);
    bool is_international_bank_account_number_Set() const;
    bool is_international_bank_account_number_Valid() const;

    double getLedgerBalance() const;
    void setLedgerBalance(const double &ledger_balance);
    bool is_ledger_balance_Set() const;
    bool is_ledger_balance_Valid() const;

    QString getMobile() const;
    void setMobile(const QString &mobile);
    bool is_mobile_Set() const;
    bool is_mobile_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIOwnerOpeningBalanceInPeriodsDto getOpeningBalance() const;
    void setOpeningBalance(const OAIOwnerOpeningBalanceInPeriodsDto &opening_balance);
    bool is_opening_balance_Set() const;
    bool is_opening_balance_Valid() const;

    QList<OAIOwnerOpeningBalanceDto> getOpeningBalances() const;
    void setOpeningBalances(const QList<OAIOwnerOpeningBalanceDto> &opening_balances);
    bool is_opening_balances_Set() const;
    bool is_opening_balances_Valid() const;

    QString getOurCode() const;
    void setOurCode(const QString &our_code);
    bool is_our_code_Set() const;
    bool is_our_code_Valid() const;

    qint64 getOwnerTypeId() const;
    void setOwnerTypeId(const qint64 &owner_type_id);
    bool is_owner_type_id_Set() const;
    bool is_owner_type_id_Valid() const;

    QString getPhone() const;
    void setPhone(const QString &phone);
    bool is_phone_Set() const;
    bool is_phone_Valid() const;

    bool isPostponedAccounting() const;
    void setPostponedAccounting(const bool &postponed_accounting);
    bool is_postponed_accounting_Set() const;
    bool is_postponed_accounting_Valid() const;

    QByteArray getTimestamp() const;
    void setTimestamp(const QByteArray &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    qint64 getVatAnalysisTypeId() const;
    void setVatAnalysisTypeId(const qint64 &vat_analysis_type_id);
    bool is_vat_analysis_type_id_Set() const;
    bool is_vat_analysis_type_id_Valid() const;

    QString getVatReg() const;
    void setVatReg(const QString &vat_reg);
    bool is_vat_reg_Set() const;
    bool is_vat_reg_Valid() const;

    qint64 getVatType() const;
    void setVatType(const qint64 &vat_type);
    bool is_vat_type_Set() const;
    bool is_vat_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_name;
    bool m_account_name_isSet;
    bool m_account_name_isValid;

    QString m_account_number;
    bool m_account_number_isSet;
    bool m_account_number_isValid;

    QList<QString> m_additional_emails;
    bool m_additional_emails_isSet;
    bool m_additional_emails_isValid;

    QList<QString> m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QString m_auth_code;
    bool m_auth_code_isSet;
    bool m_auth_code_isValid;

    OAIEFTBankDto m_bank;
    bool m_bank_isSet;
    bool m_bank_isValid;

    QString m_business_identifier_code;
    bool m_business_identifier_code_isSet;
    bool m_business_identifier_code_isValid;

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    QString m_contact;
    bool m_contact_isSet;
    bool m_contact_isValid;

    QString m_e_ft_reference;
    bool m_e_ft_reference_isSet;
    bool m_e_ft_reference_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_fax;
    bool m_fax_isSet;
    bool m_fax_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_international_bank_account_number;
    bool m_international_bank_account_number_isSet;
    bool m_international_bank_account_number_isValid;

    double m_ledger_balance;
    bool m_ledger_balance_isSet;
    bool m_ledger_balance_isValid;

    QString m_mobile;
    bool m_mobile_isSet;
    bool m_mobile_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIOwnerOpeningBalanceInPeriodsDto m_opening_balance;
    bool m_opening_balance_isSet;
    bool m_opening_balance_isValid;

    QList<OAIOwnerOpeningBalanceDto> m_opening_balances;
    bool m_opening_balances_isSet;
    bool m_opening_balances_isValid;

    QString m_our_code;
    bool m_our_code_isSet;
    bool m_our_code_isValid;

    qint64 m_owner_type_id;
    bool m_owner_type_id_isSet;
    bool m_owner_type_id_isValid;

    QString m_phone;
    bool m_phone_isSet;
    bool m_phone_isValid;

    bool m_postponed_accounting;
    bool m_postponed_accounting_isSet;
    bool m_postponed_accounting_isValid;

    QByteArray m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    qint64 m_vat_analysis_type_id;
    bool m_vat_analysis_type_id_isSet;
    bool m_vat_analysis_type_id_isValid;

    QString m_vat_reg;
    bool m_vat_reg_isSet;
    bool m_vat_reg_isValid;

    qint64 m_vat_type;
    bool m_vat_type_isSet;
    bool m_vat_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISupplierDto)

#endif // OAISupplierDto_H
