/**
 * Big Red Cloud API
 *   <div style='line-height: 30px;'>      <strong>Welcome to the Big Red Cloud API</strong><br/>      This API enables programmatic access to Big Red Cloud data.<br/>      We have used Swagger to auto generate the API documentation on this page, and it also enables direct interaction with the API in this page. <br/>      To get started, you will require an API Key - check out our guide at <a target='_blank' href='https://www.bigredcloud.com/support/generating-api-key-guide/'>https://www.bigredcloud.com/support/generating-api-key-guide/</a> for information on how to get one. <br/>      Use the  'Enter API Key' button below to enter your API key and start interacting with your Big Red Cloud data right on this page. <br/>      The API key will be stored in your browsers local storage for convenience, but you will be able to delete it at any time if you wish. <br/>      For additional information on the API, check out our support article at <a target='_blank' href='https://www.bigredcloud.com/support/api/'>https://www.bigredcloud.com/support/api/</a><br/>  </div>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOwnerOpeningBalanceInPeriodsDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOwnerOpeningBalanceInPeriodsDto::OAIOwnerOpeningBalanceInPeriodsDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOwnerOpeningBalanceInPeriodsDto::OAIOwnerOpeningBalanceInPeriodsDto() {
    this->initializeModel();
}

OAIOwnerOpeningBalanceInPeriodsDto::~OAIOwnerOpeningBalanceInPeriodsDto() {}

void OAIOwnerOpeningBalanceInPeriodsDto::initializeModel() {

    m_current_month_isSet = false;
    m_current_month_isValid = false;

    m_one_month_old_isSet = false;
    m_one_month_old_isValid = false;

    m_three_months_old_isSet = false;
    m_three_months_old_isValid = false;

    m_two_months_old_isSet = false;
    m_two_months_old_isValid = false;
}

void OAIOwnerOpeningBalanceInPeriodsDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOwnerOpeningBalanceInPeriodsDto::fromJsonObject(QJsonObject json) {

    m_current_month_isValid = ::OpenAPI::fromJsonValue(m_current_month, json[QString("currentMonth")]);
    m_current_month_isSet = !json[QString("currentMonth")].isNull() && m_current_month_isValid;

    m_one_month_old_isValid = ::OpenAPI::fromJsonValue(m_one_month_old, json[QString("oneMonthOld")]);
    m_one_month_old_isSet = !json[QString("oneMonthOld")].isNull() && m_one_month_old_isValid;

    m_three_months_old_isValid = ::OpenAPI::fromJsonValue(m_three_months_old, json[QString("threeMonthsOld")]);
    m_three_months_old_isSet = !json[QString("threeMonthsOld")].isNull() && m_three_months_old_isValid;

    m_two_months_old_isValid = ::OpenAPI::fromJsonValue(m_two_months_old, json[QString("twoMonthsOld")]);
    m_two_months_old_isSet = !json[QString("twoMonthsOld")].isNull() && m_two_months_old_isValid;
}

QString OAIOwnerOpeningBalanceInPeriodsDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOwnerOpeningBalanceInPeriodsDto::asJsonObject() const {
    QJsonObject obj;
    if (m_current_month_isSet) {
        obj.insert(QString("currentMonth"), ::OpenAPI::toJsonValue(m_current_month));
    }
    if (m_one_month_old_isSet) {
        obj.insert(QString("oneMonthOld"), ::OpenAPI::toJsonValue(m_one_month_old));
    }
    if (m_three_months_old_isSet) {
        obj.insert(QString("threeMonthsOld"), ::OpenAPI::toJsonValue(m_three_months_old));
    }
    if (m_two_months_old_isSet) {
        obj.insert(QString("twoMonthsOld"), ::OpenAPI::toJsonValue(m_two_months_old));
    }
    return obj;
}

double OAIOwnerOpeningBalanceInPeriodsDto::getCurrentMonth() const {
    return m_current_month;
}
void OAIOwnerOpeningBalanceInPeriodsDto::setCurrentMonth(const double &current_month) {
    m_current_month = current_month;
    m_current_month_isSet = true;
}

bool OAIOwnerOpeningBalanceInPeriodsDto::is_current_month_Set() const{
    return m_current_month_isSet;
}

bool OAIOwnerOpeningBalanceInPeriodsDto::is_current_month_Valid() const{
    return m_current_month_isValid;
}

double OAIOwnerOpeningBalanceInPeriodsDto::getOneMonthOld() const {
    return m_one_month_old;
}
void OAIOwnerOpeningBalanceInPeriodsDto::setOneMonthOld(const double &one_month_old) {
    m_one_month_old = one_month_old;
    m_one_month_old_isSet = true;
}

bool OAIOwnerOpeningBalanceInPeriodsDto::is_one_month_old_Set() const{
    return m_one_month_old_isSet;
}

bool OAIOwnerOpeningBalanceInPeriodsDto::is_one_month_old_Valid() const{
    return m_one_month_old_isValid;
}

double OAIOwnerOpeningBalanceInPeriodsDto::getThreeMonthsOld() const {
    return m_three_months_old;
}
void OAIOwnerOpeningBalanceInPeriodsDto::setThreeMonthsOld(const double &three_months_old) {
    m_three_months_old = three_months_old;
    m_three_months_old_isSet = true;
}

bool OAIOwnerOpeningBalanceInPeriodsDto::is_three_months_old_Set() const{
    return m_three_months_old_isSet;
}

bool OAIOwnerOpeningBalanceInPeriodsDto::is_three_months_old_Valid() const{
    return m_three_months_old_isValid;
}

double OAIOwnerOpeningBalanceInPeriodsDto::getTwoMonthsOld() const {
    return m_two_months_old;
}
void OAIOwnerOpeningBalanceInPeriodsDto::setTwoMonthsOld(const double &two_months_old) {
    m_two_months_old = two_months_old;
    m_two_months_old_isSet = true;
}

bool OAIOwnerOpeningBalanceInPeriodsDto::is_two_months_old_Set() const{
    return m_two_months_old_isSet;
}

bool OAIOwnerOpeningBalanceInPeriodsDto::is_two_months_old_Valid() const{
    return m_two_months_old_isValid;
}

bool OAIOwnerOpeningBalanceInPeriodsDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_current_month_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_one_month_old_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_three_months_old_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_two_months_old_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOwnerOpeningBalanceInPeriodsDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
