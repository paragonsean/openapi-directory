/**
 * Big Red Cloud API
 *   <div style='line-height: 30px;'>      <strong>Welcome to the Big Red Cloud API</strong><br/>      This API enables programmatic access to Big Red Cloud data.<br/>      We have used Swagger to auto generate the API documentation on this page, and it also enables direct interaction with the API in this page. <br/>      To get started, you will require an API Key - check out our guide at <a target='_blank' href='https://www.bigredcloud.com/support/generating-api-key-guide/'>https://www.bigredcloud.com/support/generating-api-key-guide/</a> for information on how to get one. <br/>      Use the  'Enter API Key' button below to enter your API key and start interacting with your Big Red Cloud data right on this page. <br/>      The API key will be stored in your browsers local storage for convenience, but you will be able to delete it at any time if you wish. <br/>      For additional information on the API, check out our support article at <a target='_blank' href='https://www.bigredcloud.com/support/api/'>https://www.bigredcloud.com/support/api/</a><br/>  </div>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBankAccountDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBankAccountDto::OAIBankAccountDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBankAccountDto::OAIBankAccountDto() {
    this->initializeModel();
}

OAIBankAccountDto::~OAIBankAccountDto() {}

void OAIBankAccountDto::initializeModel() {

    m_ac_code_isSet = false;
    m_ac_code_isValid = false;

    m_account_name_isSet = false;
    m_account_name_isValid = false;

    m_account_number_isSet = false;
    m_account_number_isValid = false;

    m_address_isSet = false;
    m_address_isValid = false;

    m_bank_feed_source_isSet = false;
    m_bank_feed_source_isValid = false;

    m_business_identifier_codes_isSet = false;
    m_business_identifier_codes_isValid = false;

    m_category_id_isSet = false;
    m_category_id_isValid = false;

    m_creditor_scheme_isSet = false;
    m_creditor_scheme_isValid = false;

    m_details_isSet = false;
    m_details_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_international_bank_account_number_isSet = false;
    m_international_bank_account_number_isValid = false;

    m_is_default_bank_isSet = false;
    m_is_default_bank_isValid = false;

    m_last_chq_isSet = false;
    m_last_chq_isValid = false;

    m_nominal_ac_code_isSet = false;
    m_nominal_ac_code_isValid = false;

    m_o_balance_isSet = false;
    m_o_balance_isValid = false;

    m_sort_code_isSet = false;
    m_sort_code_isValid = false;

    m_timestamp_isSet = false;
    m_timestamp_isValid = false;
}

void OAIBankAccountDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBankAccountDto::fromJsonObject(QJsonObject json) {

    m_ac_code_isValid = ::OpenAPI::fromJsonValue(m_ac_code, json[QString("acCode")]);
    m_ac_code_isSet = !json[QString("acCode")].isNull() && m_ac_code_isValid;

    m_account_name_isValid = ::OpenAPI::fromJsonValue(m_account_name, json[QString("accountName")]);
    m_account_name_isSet = !json[QString("accountName")].isNull() && m_account_name_isValid;

    m_account_number_isValid = ::OpenAPI::fromJsonValue(m_account_number, json[QString("accountNumber")]);
    m_account_number_isSet = !json[QString("accountNumber")].isNull() && m_account_number_isValid;

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_bank_feed_source_isValid = ::OpenAPI::fromJsonValue(m_bank_feed_source, json[QString("bankFeedSource")]);
    m_bank_feed_source_isSet = !json[QString("bankFeedSource")].isNull() && m_bank_feed_source_isValid;

    m_business_identifier_codes_isValid = ::OpenAPI::fromJsonValue(m_business_identifier_codes, json[QString("businessIdentifierCodes")]);
    m_business_identifier_codes_isSet = !json[QString("businessIdentifierCodes")].isNull() && m_business_identifier_codes_isValid;

    m_category_id_isValid = ::OpenAPI::fromJsonValue(m_category_id, json[QString("categoryId")]);
    m_category_id_isSet = !json[QString("categoryId")].isNull() && m_category_id_isValid;

    m_creditor_scheme_isValid = ::OpenAPI::fromJsonValue(m_creditor_scheme, json[QString("creditorScheme")]);
    m_creditor_scheme_isSet = !json[QString("creditorScheme")].isNull() && m_creditor_scheme_isValid;

    m_details_isValid = ::OpenAPI::fromJsonValue(m_details, json[QString("details")]);
    m_details_isSet = !json[QString("details")].isNull() && m_details_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_international_bank_account_number_isValid = ::OpenAPI::fromJsonValue(m_international_bank_account_number, json[QString("internationalBankAccountNumber")]);
    m_international_bank_account_number_isSet = !json[QString("internationalBankAccountNumber")].isNull() && m_international_bank_account_number_isValid;

    m_is_default_bank_isValid = ::OpenAPI::fromJsonValue(m_is_default_bank, json[QString("isDefaultBank")]);
    m_is_default_bank_isSet = !json[QString("isDefaultBank")].isNull() && m_is_default_bank_isValid;

    m_last_chq_isValid = ::OpenAPI::fromJsonValue(m_last_chq, json[QString("lastChq")]);
    m_last_chq_isSet = !json[QString("lastChq")].isNull() && m_last_chq_isValid;

    m_nominal_ac_code_isValid = ::OpenAPI::fromJsonValue(m_nominal_ac_code, json[QString("nominalAcCode")]);
    m_nominal_ac_code_isSet = !json[QString("nominalAcCode")].isNull() && m_nominal_ac_code_isValid;

    m_o_balance_isValid = ::OpenAPI::fromJsonValue(m_o_balance, json[QString("oBalance")]);
    m_o_balance_isSet = !json[QString("oBalance")].isNull() && m_o_balance_isValid;

    m_sort_code_isValid = ::OpenAPI::fromJsonValue(m_sort_code, json[QString("sortCode")]);
    m_sort_code_isSet = !json[QString("sortCode")].isNull() && m_sort_code_isValid;

    m_timestamp_isValid = ::OpenAPI::fromJsonValue(m_timestamp, json[QString("timestamp")]);
    m_timestamp_isSet = !json[QString("timestamp")].isNull() && m_timestamp_isValid;
}

QString OAIBankAccountDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBankAccountDto::asJsonObject() const {
    QJsonObject obj;
    if (m_ac_code_isSet) {
        obj.insert(QString("acCode"), ::OpenAPI::toJsonValue(m_ac_code));
    }
    if (m_account_name_isSet) {
        obj.insert(QString("accountName"), ::OpenAPI::toJsonValue(m_account_name));
    }
    if (m_account_number_isSet) {
        obj.insert(QString("accountNumber"), ::OpenAPI::toJsonValue(m_account_number));
    }
    if (m_address.size() > 0) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_bank_feed_source_isSet) {
        obj.insert(QString("bankFeedSource"), ::OpenAPI::toJsonValue(m_bank_feed_source));
    }
    if (m_business_identifier_codes_isSet) {
        obj.insert(QString("businessIdentifierCodes"), ::OpenAPI::toJsonValue(m_business_identifier_codes));
    }
    if (m_category_id_isSet) {
        obj.insert(QString("categoryId"), ::OpenAPI::toJsonValue(m_category_id));
    }
    if (m_creditor_scheme_isSet) {
        obj.insert(QString("creditorScheme"), ::OpenAPI::toJsonValue(m_creditor_scheme));
    }
    if (m_details_isSet) {
        obj.insert(QString("details"), ::OpenAPI::toJsonValue(m_details));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_international_bank_account_number_isSet) {
        obj.insert(QString("internationalBankAccountNumber"), ::OpenAPI::toJsonValue(m_international_bank_account_number));
    }
    if (m_is_default_bank_isSet) {
        obj.insert(QString("isDefaultBank"), ::OpenAPI::toJsonValue(m_is_default_bank));
    }
    if (m_last_chq_isSet) {
        obj.insert(QString("lastChq"), ::OpenAPI::toJsonValue(m_last_chq));
    }
    if (m_nominal_ac_code_isSet) {
        obj.insert(QString("nominalAcCode"), ::OpenAPI::toJsonValue(m_nominal_ac_code));
    }
    if (m_o_balance_isSet) {
        obj.insert(QString("oBalance"), ::OpenAPI::toJsonValue(m_o_balance));
    }
    if (m_sort_code_isSet) {
        obj.insert(QString("sortCode"), ::OpenAPI::toJsonValue(m_sort_code));
    }
    if (m_timestamp_isSet) {
        obj.insert(QString("timestamp"), ::OpenAPI::toJsonValue(m_timestamp));
    }
    return obj;
}

QString OAIBankAccountDto::getAcCode() const {
    return m_ac_code;
}
void OAIBankAccountDto::setAcCode(const QString &ac_code) {
    m_ac_code = ac_code;
    m_ac_code_isSet = true;
}

bool OAIBankAccountDto::is_ac_code_Set() const{
    return m_ac_code_isSet;
}

bool OAIBankAccountDto::is_ac_code_Valid() const{
    return m_ac_code_isValid;
}

QString OAIBankAccountDto::getAccountName() const {
    return m_account_name;
}
void OAIBankAccountDto::setAccountName(const QString &account_name) {
    m_account_name = account_name;
    m_account_name_isSet = true;
}

bool OAIBankAccountDto::is_account_name_Set() const{
    return m_account_name_isSet;
}

bool OAIBankAccountDto::is_account_name_Valid() const{
    return m_account_name_isValid;
}

QString OAIBankAccountDto::getAccountNumber() const {
    return m_account_number;
}
void OAIBankAccountDto::setAccountNumber(const QString &account_number) {
    m_account_number = account_number;
    m_account_number_isSet = true;
}

bool OAIBankAccountDto::is_account_number_Set() const{
    return m_account_number_isSet;
}

bool OAIBankAccountDto::is_account_number_Valid() const{
    return m_account_number_isValid;
}

QList<QString> OAIBankAccountDto::getAddress() const {
    return m_address;
}
void OAIBankAccountDto::setAddress(const QList<QString> &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIBankAccountDto::is_address_Set() const{
    return m_address_isSet;
}

bool OAIBankAccountDto::is_address_Valid() const{
    return m_address_isValid;
}

qint32 OAIBankAccountDto::getBankFeedSource() const {
    return m_bank_feed_source;
}
void OAIBankAccountDto::setBankFeedSource(const qint32 &bank_feed_source) {
    m_bank_feed_source = bank_feed_source;
    m_bank_feed_source_isSet = true;
}

bool OAIBankAccountDto::is_bank_feed_source_Set() const{
    return m_bank_feed_source_isSet;
}

bool OAIBankAccountDto::is_bank_feed_source_Valid() const{
    return m_bank_feed_source_isValid;
}

QString OAIBankAccountDto::getBusinessIdentifierCodes() const {
    return m_business_identifier_codes;
}
void OAIBankAccountDto::setBusinessIdentifierCodes(const QString &business_identifier_codes) {
    m_business_identifier_codes = business_identifier_codes;
    m_business_identifier_codes_isSet = true;
}

bool OAIBankAccountDto::is_business_identifier_codes_Set() const{
    return m_business_identifier_codes_isSet;
}

bool OAIBankAccountDto::is_business_identifier_codes_Valid() const{
    return m_business_identifier_codes_isValid;
}

qint64 OAIBankAccountDto::getCategoryId() const {
    return m_category_id;
}
void OAIBankAccountDto::setCategoryId(const qint64 &category_id) {
    m_category_id = category_id;
    m_category_id_isSet = true;
}

bool OAIBankAccountDto::is_category_id_Set() const{
    return m_category_id_isSet;
}

bool OAIBankAccountDto::is_category_id_Valid() const{
    return m_category_id_isValid;
}

QString OAIBankAccountDto::getCreditorScheme() const {
    return m_creditor_scheme;
}
void OAIBankAccountDto::setCreditorScheme(const QString &creditor_scheme) {
    m_creditor_scheme = creditor_scheme;
    m_creditor_scheme_isSet = true;
}

bool OAIBankAccountDto::is_creditor_scheme_Set() const{
    return m_creditor_scheme_isSet;
}

bool OAIBankAccountDto::is_creditor_scheme_Valid() const{
    return m_creditor_scheme_isValid;
}

QString OAIBankAccountDto::getDetails() const {
    return m_details;
}
void OAIBankAccountDto::setDetails(const QString &details) {
    m_details = details;
    m_details_isSet = true;
}

bool OAIBankAccountDto::is_details_Set() const{
    return m_details_isSet;
}

bool OAIBankAccountDto::is_details_Valid() const{
    return m_details_isValid;
}

qint64 OAIBankAccountDto::getId() const {
    return m_id;
}
void OAIBankAccountDto::setId(const qint64 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIBankAccountDto::is_id_Set() const{
    return m_id_isSet;
}

bool OAIBankAccountDto::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIBankAccountDto::getInternationalBankAccountNumber() const {
    return m_international_bank_account_number;
}
void OAIBankAccountDto::setInternationalBankAccountNumber(const QString &international_bank_account_number) {
    m_international_bank_account_number = international_bank_account_number;
    m_international_bank_account_number_isSet = true;
}

bool OAIBankAccountDto::is_international_bank_account_number_Set() const{
    return m_international_bank_account_number_isSet;
}

bool OAIBankAccountDto::is_international_bank_account_number_Valid() const{
    return m_international_bank_account_number_isValid;
}

bool OAIBankAccountDto::isIsDefaultBank() const {
    return m_is_default_bank;
}
void OAIBankAccountDto::setIsDefaultBank(const bool &is_default_bank) {
    m_is_default_bank = is_default_bank;
    m_is_default_bank_isSet = true;
}

bool OAIBankAccountDto::is_is_default_bank_Set() const{
    return m_is_default_bank_isSet;
}

bool OAIBankAccountDto::is_is_default_bank_Valid() const{
    return m_is_default_bank_isValid;
}

QString OAIBankAccountDto::getLastChq() const {
    return m_last_chq;
}
void OAIBankAccountDto::setLastChq(const QString &last_chq) {
    m_last_chq = last_chq;
    m_last_chq_isSet = true;
}

bool OAIBankAccountDto::is_last_chq_Set() const{
    return m_last_chq_isSet;
}

bool OAIBankAccountDto::is_last_chq_Valid() const{
    return m_last_chq_isValid;
}

QString OAIBankAccountDto::getNominalAcCode() const {
    return m_nominal_ac_code;
}
void OAIBankAccountDto::setNominalAcCode(const QString &nominal_ac_code) {
    m_nominal_ac_code = nominal_ac_code;
    m_nominal_ac_code_isSet = true;
}

bool OAIBankAccountDto::is_nominal_ac_code_Set() const{
    return m_nominal_ac_code_isSet;
}

bool OAIBankAccountDto::is_nominal_ac_code_Valid() const{
    return m_nominal_ac_code_isValid;
}

double OAIBankAccountDto::getOBalance() const {
    return m_o_balance;
}
void OAIBankAccountDto::setOBalance(const double &o_balance) {
    m_o_balance = o_balance;
    m_o_balance_isSet = true;
}

bool OAIBankAccountDto::is_o_balance_Set() const{
    return m_o_balance_isSet;
}

bool OAIBankAccountDto::is_o_balance_Valid() const{
    return m_o_balance_isValid;
}

QString OAIBankAccountDto::getSortCode() const {
    return m_sort_code;
}
void OAIBankAccountDto::setSortCode(const QString &sort_code) {
    m_sort_code = sort_code;
    m_sort_code_isSet = true;
}

bool OAIBankAccountDto::is_sort_code_Set() const{
    return m_sort_code_isSet;
}

bool OAIBankAccountDto::is_sort_code_Valid() const{
    return m_sort_code_isValid;
}

QByteArray OAIBankAccountDto::getTimestamp() const {
    return m_timestamp;
}
void OAIBankAccountDto::setTimestamp(const QByteArray &timestamp) {
    m_timestamp = timestamp;
    m_timestamp_isSet = true;
}

bool OAIBankAccountDto::is_timestamp_Set() const{
    return m_timestamp_isSet;
}

bool OAIBankAccountDto::is_timestamp_Valid() const{
    return m_timestamp_isValid;
}

bool OAIBankAccountDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ac_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_bank_feed_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_business_identifier_codes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_category_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creditor_scheme_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_details_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_international_bank_account_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_default_bank_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_chq_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nominal_ac_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_o_balance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sort_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBankAccountDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
