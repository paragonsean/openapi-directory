/**
 * Big Red Cloud API
 *   <div style='line-height: 30px;'>      <strong>Welcome to the Big Red Cloud API</strong><br/>      This API enables programmatic access to Big Red Cloud data.<br/>      We have used Swagger to auto generate the API documentation on this page, and it also enables direct interaction with the API in this page. <br/>      To get started, you will require an API Key - check out our guide at <a target='_blank' href='https://www.bigredcloud.com/support/generating-api-key-guide/'>https://www.bigredcloud.com/support/generating-api-key-guide/</a> for information on how to get one. <br/>      Use the  'Enter API Key' button below to enter your API key and start interacting with your Big Red Cloud data right on this page. <br/>      The API key will be stored in your browsers local storage for convenience, but you will be able to delete it at any time if you wish. <br/>      For additional information on the API, check out our support article at <a target='_blank' href='https://www.bigredcloud.com/support/api/'>https://www.bigredcloud.com/support/api/</a><br/>  </div>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICompanySetupConfigViewModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICompanySetupConfigViewModel::OAICompanySetupConfigViewModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICompanySetupConfigViewModel::OAICompanySetupConfigViewModel() {
    this->initializeModel();
}

OAICompanySetupConfigViewModel::~OAICompanySetupConfigViewModel() {}

void OAICompanySetupConfigViewModel::initializeModel() {

    m_financial_year_isSet = false;
    m_financial_year_isValid = false;

    m_general_details_isSet = false;
    m_general_details_isValid = false;

    m_options_isSet = false;
    m_options_isValid = false;

    m_reference_settings_isSet = false;
    m_reference_settings_isValid = false;
}

void OAICompanySetupConfigViewModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICompanySetupConfigViewModel::fromJsonObject(QJsonObject json) {

    m_financial_year_isValid = ::OpenAPI::fromJsonValue(m_financial_year, json[QString("financialYear")]);
    m_financial_year_isSet = !json[QString("financialYear")].isNull() && m_financial_year_isValid;

    m_general_details_isValid = ::OpenAPI::fromJsonValue(m_general_details, json[QString("generalDetails")]);
    m_general_details_isSet = !json[QString("generalDetails")].isNull() && m_general_details_isValid;

    m_options_isValid = ::OpenAPI::fromJsonValue(m_options, json[QString("options")]);
    m_options_isSet = !json[QString("options")].isNull() && m_options_isValid;

    m_reference_settings_isValid = ::OpenAPI::fromJsonValue(m_reference_settings, json[QString("referenceSettings")]);
    m_reference_settings_isSet = !json[QString("referenceSettings")].isNull() && m_reference_settings_isValid;
}

QString OAICompanySetupConfigViewModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICompanySetupConfigViewModel::asJsonObject() const {
    QJsonObject obj;
    if (m_financial_year.isSet()) {
        obj.insert(QString("financialYear"), ::OpenAPI::toJsonValue(m_financial_year));
    }
    if (m_general_details.isSet()) {
        obj.insert(QString("generalDetails"), ::OpenAPI::toJsonValue(m_general_details));
    }
    if (m_options.isSet()) {
        obj.insert(QString("options"), ::OpenAPI::toJsonValue(m_options));
    }
    if (m_reference_settings.isSet()) {
        obj.insert(QString("referenceSettings"), ::OpenAPI::toJsonValue(m_reference_settings));
    }
    return obj;
}

OAICompanyFinancialYearViewModel OAICompanySetupConfigViewModel::getFinancialYear() const {
    return m_financial_year;
}
void OAICompanySetupConfigViewModel::setFinancialYear(const OAICompanyFinancialYearViewModel &financial_year) {
    m_financial_year = financial_year;
    m_financial_year_isSet = true;
}

bool OAICompanySetupConfigViewModel::is_financial_year_Set() const{
    return m_financial_year_isSet;
}

bool OAICompanySetupConfigViewModel::is_financial_year_Valid() const{
    return m_financial_year_isValid;
}

OAICompanyGeneralDetaisViewModel OAICompanySetupConfigViewModel::getGeneralDetails() const {
    return m_general_details;
}
void OAICompanySetupConfigViewModel::setGeneralDetails(const OAICompanyGeneralDetaisViewModel &general_details) {
    m_general_details = general_details;
    m_general_details_isSet = true;
}

bool OAICompanySetupConfigViewModel::is_general_details_Set() const{
    return m_general_details_isSet;
}

bool OAICompanySetupConfigViewModel::is_general_details_Valid() const{
    return m_general_details_isValid;
}

OAICompanyOptionViewModel OAICompanySetupConfigViewModel::getOptions() const {
    return m_options;
}
void OAICompanySetupConfigViewModel::setOptions(const OAICompanyOptionViewModel &options) {
    m_options = options;
    m_options_isSet = true;
}

bool OAICompanySetupConfigViewModel::is_options_Set() const{
    return m_options_isSet;
}

bool OAICompanySetupConfigViewModel::is_options_Valid() const{
    return m_options_isValid;
}

OAICompanyReferenceSettingViewModel OAICompanySetupConfigViewModel::getReferenceSettings() const {
    return m_reference_settings;
}
void OAICompanySetupConfigViewModel::setReferenceSettings(const OAICompanyReferenceSettingViewModel &reference_settings) {
    m_reference_settings = reference_settings;
    m_reference_settings_isSet = true;
}

bool OAICompanySetupConfigViewModel::is_reference_settings_Set() const{
    return m_reference_settings_isSet;
}

bool OAICompanySetupConfigViewModel::is_reference_settings_Valid() const{
    return m_reference_settings_isValid;
}

bool OAICompanySetupConfigViewModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_financial_year.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_general_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICompanySetupConfigViewModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
