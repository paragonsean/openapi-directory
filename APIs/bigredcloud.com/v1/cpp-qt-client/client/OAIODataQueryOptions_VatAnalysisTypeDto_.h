/**
 * Big Red Cloud API
 *   <div style='line-height: 30px;'>      <strong>Welcome to the Big Red Cloud API</strong><br/>      This API enables programmatic access to Big Red Cloud data.<br/>      We have used Swagger to auto generate the API documentation on this page, and it also enables direct interaction with the API in this page. <br/>      To get started, you will require an API Key - check out our guide at <a target='_blank' href='https://www.bigredcloud.com/support/generating-api-key-guide/'>https://www.bigredcloud.com/support/generating-api-key-guide/</a> for information on how to get one. <br/>      Use the  'Enter API Key' button below to enter your API key and start interacting with your Big Red Cloud data right on this page. <br/>      The API key will be stored in your browsers local storage for convenience, but you will be able to delete it at any time if you wish. <br/>      For additional information on the API, check out our support article at <a target='_blank' href='https://www.bigredcloud.com/support/api/'>https://www.bigredcloud.com/support/api/</a><br/>  </div>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIODataQueryOptions_VatAnalysisTypeDto_.h
 *
 * 
 */

#ifndef OAIODataQueryOptions_VatAnalysisTypeDto__H
#define OAIODataQueryOptions_VatAnalysisTypeDto__H

#include <QJsonObject>

#include "OAIFilterQueryOption.h"
#include "OAIInlineCountQueryOption.h"
#include "OAIODataQueryContext.h"
#include "OAIODataRawQueryOptions.h"
#include "OAIObject.h"
#include "OAIOrderByQueryOption.h"
#include "OAISelectExpandQueryOption.h"
#include "OAISkipQueryOption.h"
#include "OAITopQueryOption.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIODataQueryContext;
class OAIFilterQueryOption;
class OAIInlineCountQueryOption;
class OAIOrderByQueryOption;
class OAIODataRawQueryOptions;
class OAISelectExpandQueryOption;
class OAISkipQueryOption;
class OAITopQueryOption;

class OAIODataQueryOptions_VatAnalysisTypeDto_ : public OAIObject {
public:
    OAIODataQueryOptions_VatAnalysisTypeDto_();
    OAIODataQueryOptions_VatAnalysisTypeDto_(QString json);
    ~OAIODataQueryOptions_VatAnalysisTypeDto_() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIODataQueryContext getContext() const;
    void setContext(const OAIODataQueryContext &context);
    bool is_context_Set() const;
    bool is_context_Valid() const;

    OAIFilterQueryOption getFilter() const;
    void setFilter(const OAIFilterQueryOption &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    OAIObject getIfMatch() const;
    void setIfMatch(const OAIObject &if_match);
    bool is_if_match_Set() const;
    bool is_if_match_Valid() const;

    OAIObject getIfNoneMatch() const;
    void setIfNoneMatch(const OAIObject &if_none_match);
    bool is_if_none_match_Set() const;
    bool is_if_none_match_Valid() const;

    OAIInlineCountQueryOption getInlineCount() const;
    void setInlineCount(const OAIInlineCountQueryOption &inline_count);
    bool is_inline_count_Set() const;
    bool is_inline_count_Valid() const;

    OAIOrderByQueryOption getOrderBy() const;
    void setOrderBy(const OAIOrderByQueryOption &order_by);
    bool is_order_by_Set() const;
    bool is_order_by_Valid() const;

    OAIODataRawQueryOptions getRawValues() const;
    void setRawValues(const OAIODataRawQueryOptions &raw_values);
    bool is_raw_values_Set() const;
    bool is_raw_values_Valid() const;

    OAIObject getRequest() const;
    void setRequest(const OAIObject &request);
    bool is_request_Set() const;
    bool is_request_Valid() const;

    OAISelectExpandQueryOption getSelectExpand() const;
    void setSelectExpand(const OAISelectExpandQueryOption &select_expand);
    bool is_select_expand_Set() const;
    bool is_select_expand_Valid() const;

    OAISkipQueryOption getSkip() const;
    void setSkip(const OAISkipQueryOption &skip);
    bool is_skip_Set() const;
    bool is_skip_Valid() const;

    OAITopQueryOption getTop() const;
    void setTop(const OAITopQueryOption &top);
    bool is_top_Set() const;
    bool is_top_Valid() const;

    OAIObject getValidator() const;
    void setValidator(const OAIObject &validator);
    bool is_validator_Set() const;
    bool is_validator_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIODataQueryContext m_context;
    bool m_context_isSet;
    bool m_context_isValid;

    OAIFilterQueryOption m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    OAIObject m_if_match;
    bool m_if_match_isSet;
    bool m_if_match_isValid;

    OAIObject m_if_none_match;
    bool m_if_none_match_isSet;
    bool m_if_none_match_isValid;

    OAIInlineCountQueryOption m_inline_count;
    bool m_inline_count_isSet;
    bool m_inline_count_isValid;

    OAIOrderByQueryOption m_order_by;
    bool m_order_by_isSet;
    bool m_order_by_isValid;

    OAIODataRawQueryOptions m_raw_values;
    bool m_raw_values_isSet;
    bool m_raw_values_isValid;

    OAIObject m_request;
    bool m_request_isSet;
    bool m_request_isValid;

    OAISelectExpandQueryOption m_select_expand;
    bool m_select_expand_isSet;
    bool m_select_expand_isValid;

    OAISkipQueryOption m_skip;
    bool m_skip_isSet;
    bool m_skip_isValid;

    OAITopQueryOption m_top;
    bool m_top_isSet;
    bool m_top_isValid;

    OAIObject m_validator;
    bool m_validator_isSet;
    bool m_validator_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIODataQueryOptions_VatAnalysisTypeDto_)

#endif // OAIODataQueryOptions_VatAnalysisTypeDto__H
