/**
 * Big Red Cloud API
 *   <div style='line-height: 30px;'>      <strong>Welcome to the Big Red Cloud API</strong><br/>      This API enables programmatic access to Big Red Cloud data.<br/>      We have used Swagger to auto generate the API documentation on this page, and it also enables direct interaction with the API in this page. <br/>      To get started, you will require an API Key - check out our guide at <a target='_blank' href='https://www.bigredcloud.com/support/generating-api-key-guide/'>https://www.bigredcloud.com/support/generating-api-key-guide/</a> for information on how to get one. <br/>      Use the  'Enter API Key' button below to enter your API key and start interacting with your Big Red Cloud data right on this page. <br/>      The API key will be stored in your browsers local storage for convenience, but you will be able to delete it at any time if you wish. <br/>      For additional information on the API, check out our support article at <a target='_blank' href='https://www.bigredcloud.com/support/api/'>https://www.bigredcloud.com/support/api/</a><br/>  </div>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrderByClause.h
 *
 * 
 */

#ifndef OAIOrderByClause_H
#define OAIOrderByClause_H

#include <QJsonObject>

#include "OAIIEdmTypeReference.h"
#include "OAIRangeVariable.h"
#include "OAISingleValueNode.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISingleValueNode;
class OAIIEdmTypeReference;
class OAIRangeVariable;

class OAIOrderByClause : public OAIObject {
public:
    OAIOrderByClause();
    OAIOrderByClause(QString json);
    ~OAIOrderByClause() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDirection() const;
    void setDirection(const qint32 &direction);
    bool is_direction_Set() const;
    bool is_direction_Valid() const;

    OAISingleValueNode getExpression() const;
    void setExpression(const OAISingleValueNode &expression);
    bool is_expression_Set() const;
    bool is_expression_Valid() const;

    OAIIEdmTypeReference getItemType() const;
    void setItemType(const OAIIEdmTypeReference &item_type);
    bool is_item_type_Set() const;
    bool is_item_type_Valid() const;

    OAIRangeVariable getRangeVariable() const;
    void setRangeVariable(const OAIRangeVariable &range_variable);
    bool is_range_variable_Set() const;
    bool is_range_variable_Valid() const;

    OAIOrderByClause getThenBy() const;
    void setThenBy(const OAIOrderByClause &then_by);
    bool is_then_by_Set() const;
    bool is_then_by_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_direction;
    bool m_direction_isSet;
    bool m_direction_isValid;

    OAISingleValueNode m_expression;
    bool m_expression_isSet;
    bool m_expression_isValid;

    OAIIEdmTypeReference m_item_type;
    bool m_item_type_isSet;
    bool m_item_type_isValid;

    OAIRangeVariable m_range_variable;
    bool m_range_variable_isSet;
    bool m_range_variable_isValid;

    OAIOrderByClause m_then_by;
    bool m_then_by_isSet;
    bool m_then_by_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrderByClause)

#endif // OAIOrderByClause_H
