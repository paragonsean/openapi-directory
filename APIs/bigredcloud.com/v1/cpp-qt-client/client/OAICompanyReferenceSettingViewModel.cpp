/**
 * Big Red Cloud API
 *   <div style='line-height: 30px;'>      <strong>Welcome to the Big Red Cloud API</strong><br/>      This API enables programmatic access to Big Red Cloud data.<br/>      We have used Swagger to auto generate the API documentation on this page, and it also enables direct interaction with the API in this page. <br/>      To get started, you will require an API Key - check out our guide at <a target='_blank' href='https://www.bigredcloud.com/support/generating-api-key-guide/'>https://www.bigredcloud.com/support/generating-api-key-guide/</a> for information on how to get one. <br/>      Use the  'Enter API Key' button below to enter your API key and start interacting with your Big Red Cloud data right on this page. <br/>      The API key will be stored in your browsers local storage for convenience, but you will be able to delete it at any time if you wish. <br/>      For additional information on the API, check out our support article at <a target='_blank' href='https://www.bigredcloud.com/support/api/'>https://www.bigredcloud.com/support/api/</a><br/>  </div>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICompanyReferenceSettingViewModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICompanyReferenceSettingViewModel::OAICompanyReferenceSettingViewModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICompanyReferenceSettingViewModel::OAICompanyReferenceSettingViewModel() {
    this->initializeModel();
}

OAICompanyReferenceSettingViewModel::~OAICompanyReferenceSettingViewModel() {}

void OAICompanyReferenceSettingViewModel::initializeModel() {

    m_creditors_journal_isSet = false;
    m_creditors_journal_isValid = false;

    m_debtors_journal_isSet = false;
    m_debtors_journal_isValid = false;

    m_purchases_isSet = false;
    m_purchases_isValid = false;

    m_sales_isSet = false;
    m_sales_isValid = false;
}

void OAICompanyReferenceSettingViewModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICompanyReferenceSettingViewModel::fromJsonObject(QJsonObject json) {

    m_creditors_journal_isValid = ::OpenAPI::fromJsonValue(m_creditors_journal, json[QString("creditorsJournal")]);
    m_creditors_journal_isSet = !json[QString("creditorsJournal")].isNull() && m_creditors_journal_isValid;

    m_debtors_journal_isValid = ::OpenAPI::fromJsonValue(m_debtors_journal, json[QString("debtorsJournal")]);
    m_debtors_journal_isSet = !json[QString("debtorsJournal")].isNull() && m_debtors_journal_isValid;

    m_purchases_isValid = ::OpenAPI::fromJsonValue(m_purchases, json[QString("purchases")]);
    m_purchases_isSet = !json[QString("purchases")].isNull() && m_purchases_isValid;

    m_sales_isValid = ::OpenAPI::fromJsonValue(m_sales, json[QString("sales")]);
    m_sales_isSet = !json[QString("sales")].isNull() && m_sales_isValid;
}

QString OAICompanyReferenceSettingViewModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICompanyReferenceSettingViewModel::asJsonObject() const {
    QJsonObject obj;
    if (m_creditors_journal_isSet) {
        obj.insert(QString("creditorsJournal"), ::OpenAPI::toJsonValue(m_creditors_journal));
    }
    if (m_debtors_journal_isSet) {
        obj.insert(QString("debtorsJournal"), ::OpenAPI::toJsonValue(m_debtors_journal));
    }
    if (m_purchases_isSet) {
        obj.insert(QString("purchases"), ::OpenAPI::toJsonValue(m_purchases));
    }
    if (m_sales_isSet) {
        obj.insert(QString("sales"), ::OpenAPI::toJsonValue(m_sales));
    }
    return obj;
}

bool OAICompanyReferenceSettingViewModel::isCreditorsJournal() const {
    return m_creditors_journal;
}
void OAICompanyReferenceSettingViewModel::setCreditorsJournal(const bool &creditors_journal) {
    m_creditors_journal = creditors_journal;
    m_creditors_journal_isSet = true;
}

bool OAICompanyReferenceSettingViewModel::is_creditors_journal_Set() const{
    return m_creditors_journal_isSet;
}

bool OAICompanyReferenceSettingViewModel::is_creditors_journal_Valid() const{
    return m_creditors_journal_isValid;
}

bool OAICompanyReferenceSettingViewModel::isDebtorsJournal() const {
    return m_debtors_journal;
}
void OAICompanyReferenceSettingViewModel::setDebtorsJournal(const bool &debtors_journal) {
    m_debtors_journal = debtors_journal;
    m_debtors_journal_isSet = true;
}

bool OAICompanyReferenceSettingViewModel::is_debtors_journal_Set() const{
    return m_debtors_journal_isSet;
}

bool OAICompanyReferenceSettingViewModel::is_debtors_journal_Valid() const{
    return m_debtors_journal_isValid;
}

bool OAICompanyReferenceSettingViewModel::isPurchases() const {
    return m_purchases;
}
void OAICompanyReferenceSettingViewModel::setPurchases(const bool &purchases) {
    m_purchases = purchases;
    m_purchases_isSet = true;
}

bool OAICompanyReferenceSettingViewModel::is_purchases_Set() const{
    return m_purchases_isSet;
}

bool OAICompanyReferenceSettingViewModel::is_purchases_Valid() const{
    return m_purchases_isValid;
}

bool OAICompanyReferenceSettingViewModel::isSales() const {
    return m_sales;
}
void OAICompanyReferenceSettingViewModel::setSales(const bool &sales) {
    m_sales = sales;
    m_sales_isSet = true;
}

bool OAICompanyReferenceSettingViewModel::is_sales_Set() const{
    return m_sales_isSet;
}

bool OAICompanyReferenceSettingViewModel::is_sales_Valid() const{
    return m_sales_isValid;
}

bool OAICompanyReferenceSettingViewModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creditors_journal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_debtors_journal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_purchases_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sales_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICompanyReferenceSettingViewModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
